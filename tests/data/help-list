
104_QUAD_8
  Say yes here to build support for the ACCES 104-QUAD-8 quadrature
  encoder counter/interface device family (104-QUAD-8, 104-QUAD-4).
  
  A counter's respective error flag may be cleared by performing a write
  operation on the respective count value attribute. Although the
  104-QUAD-8 counters have a 25-bit range, only the lower 24 bits may be
  set, either directly or via the counter's preset attribute. Interrupts
  are not supported by this driver.
  
  The base port addresses for the devices may be configured via the base
  array module parameter.

21285_WATCHDOG
  The Intel Footbridge chip contains a built-in watchdog circuit. Say Y
  here if you wish to use this. Alternatively say M to compile the
  driver as a module, which will be called wdt285.
  
  This driver does not work on all machines. In particular, early CATS
  boards have hardware problems that will cause the machine to simply
  lock up if the watchdog fires.
  
  "If in doubt, leave it out" - say N.

3C515
  If you have a 3Com ISA EtherLink XL "Corkscrew" 3c515 Fast Ethernet
  network card, say Y here.
  
  To compile this driver as a module, choose M here. The module
  will be called 3c515.

53C700_BE_BUS
  No help

53C700_LE_ON_BE
  No help

60XX_WDT
  This driver can be used with the watchdog timer found on some
  single board computers, namely the 6010 PII based computer.
  It may well work with other cards.  It reads port 0x443 to enable
  and re-set the watchdog timer, and reads port 0x45 to disable
  the watchdog.  If you have a card that behave in similar ways,
  you can probably make this driver work with your card as well.
  
  You can compile this driver directly into the kernel, or use
  it as a module.  The module will be called sbc60xxwdt.

64BIT
  Say yes to build a 64-bit kernel - formerly known as x86_64
  Say no to build a 32-bit kernel - formerly known as i386

6LOWPAN
  This enables IPv6 over Low power Wireless Personal Area Network -
  "6LoWPAN" which is supported by IEEE 802.15.4 or Bluetooth stacks.

6LOWPAN_DEBUGFS
  This enables 6LoWPAN debugfs support. For example to manipulate
  IPHC context information at runtime.

6LOWPAN_GHC_EXT_HDR_DEST
  6LoWPAN IPv6 destination option generic header compression according
  to RFC7400.

6LOWPAN_GHC_EXT_HDR_FRAG
  6LoWPAN IPv6 fragmentation option generic header compression
  according to RFC7400.

6LOWPAN_GHC_EXT_HDR_HOP
  6LoWPAN IPv6 Hop-by-Hop option generic header compression according
  to RFC7400.

6LOWPAN_GHC_EXT_HDR_ROUTE
  6LoWPAN IPv6 routing option generic header compression according
  to RFC7400.

6LOWPAN_GHC_ICMPV6
  6LoWPAN IPv6 ICMPv6 generic header compression according to RFC7400.

6LOWPAN_GHC_UDP
  6LoWPAN IPv6 UDP generic header compression according to RFC7400.

6LOWPAN_NHC
  Support for next header and generic header compression defined in
  RFC6282 and RFC7400.

6LOWPAN_NHC_DEST
  6LoWPAN IPv6 Destination Options Header compression according to
  RFC6282.

6LOWPAN_NHC_FRAGMENT
  6LoWPAN IPv6 Fragment Header compression according to RFC6282.

6LOWPAN_NHC_HOP
  6LoWPAN IPv6 Hop-by-Hop Options Header compression according to
  RFC6282.

6LOWPAN_NHC_IPV6
  6LoWPAN IPv6 Header compression according to RFC6282.

6LOWPAN_NHC_MOBILITY
  6LoWPAN IPv6 Mobility Header compression according to RFC6282.

6LOWPAN_NHC_ROUTING
  6LoWPAN IPv6 Routing Header compression according to RFC6282.

6LOWPAN_NHC_UDP
  6LoWPAN IPv6 UDP Header compression according to RFC6282.

6PACK
  6pack is a transmission protocol for the data exchange between your
  PC and your TNC (the Terminal Node Controller acts as a kind of
  modem connecting your computer's serial port to your radio's
  microphone input and speaker output). This protocol can be used as
  an alternative to KISS for networking over AX.25 amateur radio
  connections, but it has some extended functionality.
  
  Note that this driver is still experimental and might cause
  problems. For details about the features and the usage of the
  driver, read <file:Documentation/networking/6pack.rst>.
  
  To compile this driver as a module, choose M here: the module
  will be called 6pack.

8139CP
  This is a driver for the Fast Ethernet PCI network cards based on
  the RTL8139C+ chips. If you have one of those, say Y here.
  
  To compile this driver as a module, choose M here: the module
  will be called 8139cp.  This is recommended.

8139TOO
  This is a driver for the Fast Ethernet PCI network cards based on
  the RTL 8129/8130/8139 chips. If you have one of those, say Y here.
  
  To compile this driver as a module, choose M here: the module
  will be called 8139too.  This is recommended.

8139TOO_8129
  This enables support for the older and uncommon RTL-8129 and
  RTL-8130 chips, which support MII via an external transceiver,
  instead of an internal one.  Disabling this option will save some
  memory by making the code size smaller.  If unsure, say Y.

8139TOO_PIO
  This instructs the driver to use programmed I/O ports (PIO) instead
  of PCI shared memory (MMIO).  This can possibly solve some problems
  in case your mainboard has memory consistency issues.  If unsure,
  say N.

8139TOO_TUNE_TWISTER
  This implements a function which might come in handy in case you
  are using low quality on long cabling. It is required for RealTek
  RTL-8139 revision K boards, and totally unused otherwise.  It tries
  to match the transceiver to the cable characteristics. This is
  experimental since hardly documented by the manufacturer.
  If unsure, say Y.

8139_OLD_RX_RESET
  The 8139too driver was recently updated to contain a more rapid
  reset sequence, in the face of severe receive errors.  This "new"
  RX-reset method should be adequate for all boards.  But if you
  experience problems, you can enable this option to restore the
  old RX-reset behavior.  If unsure, say N.

842_COMPRESS
  No help

842_DECOMPRESS
  No help

88EU_AP_MODE
  This option enables Access Point mode. Unless you know that your system
  will never be used as an AP, or the target system has limited memory,
  "Y" should be selected.

8xxx_WDT
  This driver is for a SoC level watchdog that exists on some
  Freescale PowerPC processors. So far this driver supports:
  - MPC8xx watchdogs
  - MPC83xx watchdogs
  - MPC86xx watchdogs
  
  For BookE processors (MPC85xx) use the BOOKE_WDT driver instead.

977_WATCHDOG
  Say Y here to include support for the WB977 watchdog included in
  NetWinder machines. Alternatively say M to compile the driver as
  a module, which will be called wdt977.
  
  Not sure? It's safe to say N.

9P_FS
  If you say Y here, you will get experimental support for
  Plan 9 resource sharing via the 9P2000 protocol.
  
  See <http://v9fs.sf.net> for more information.
  
  If unsure, say N.

9P_FSCACHE
  Choose Y here to enable persistent, read-only local
  caching support for 9p clients using FS-Cache

9P_FS_POSIX_ACL
  POSIX Access Control Lists (ACLs) support permissions for users and
  groups beyond the owner/group/world scheme.
  
  If you don't know what Access Control Lists are, say N

9P_FS_SECURITY
  Security labels support alternative access control models
  implemented by security modules like SELinux.  This option
  enables an extended attribute handler for file security
  labels in the 9P filesystem.
  
  If you are not using a security module that requires using
  extended attributes for file security labels, say N.

A11Y_BRAILLE_CONSOLE
  Enables console output on a braille device connected to a 8250
  serial port. For now only the VisioBraille device is supported.
  
  To actually enable it, you need to pass option
  console=brl,ttyS0
  to the kernel. Options are the same as for serial console.
  
  If unsure, say N.

A2065
  If you have a Commodore A2065 Ethernet adapter, say Y. Otherwise,
  say N.
  
  To compile this driver as a module, choose M here: the module
  will be called a2065.

A2091_SCSI
  If you have a Commodore A2091 SCSI controller, say Y. Otherwise,
  say N.
  
  To compile this driver as a module, choose M here: the
  module will be called a2091.

A3000_SCSI
  If you have an Amiga 3000 and have SCSI devices connected to the
  built-in SCSI controller, say Y. Otherwise, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called a3000.

AB3100_CORE
  Select this to enable the AB3100 Mixed Signal IC core
  functionality. This connects to a AB3100 on the I2C bus
  and expose a number of symbols needed for dependent devices
  to read and write registers and subscribe to events from
  this multi-functional IC. This is needed to use other features
  of the AB3100 such as battery-backed RTC, charging control,
  LEDs, vibrator, system power and temperature, power management
  and ALSA sound.

AB3100_OTP
  Select this to enable the AB3100 Mixed Signal IC OTP (one-time
  programmable memory) support. This exposes a sysfs file to read
  out OTP values.

AB8500_BM
  Say Y to include support for AB8500 battery management.

AB8500_CORE
  Select this option to enable access to AB8500 power management
  chip. This connects to U8500 either on the SSP/SPI bus (deprecated
  since hardware version v1.0) or the I2C bus via PRCMU. It also adds
  the irq_chip parts for handling the Mixed Signal chip events.
  This chip embeds various other multimedia functionalities as well.

AB8500_DEBUG
  Select this option if you want debug information using the debug
  filesystem, debugfs.

AB8500_GPADC
  AB8500 Analog Baseband, mixed signal integrated circuit GPADC
  (General Purpose Analog to Digital Converter) driver used to monitor
  internal voltages, convert accessory and battery, AC (charger, mains)
  and USB voltages integral to the U8500 platform.

AB8500_USB
  Enable this to support the USB OTG transceiver in AB8500 chip.
  This transceiver supports high and full speed devices plus,
  in host mode, low speed.

ABP060MG
  Say yes here to build support for the Honeywell ABP pressure
  sensors.
  
  To compile this driver as a module, choose M here: the module
  will be called abp060mg.

ABX500_CORE
  Say yes here if you have the ABX500 Mixed Signal IC family
  chips. This core driver expose register access functions.
  Functionality specific drivers using these functions can
  remain unchanged when IC changes. Binding of the functions to
  actual register access is done by the IC core driver.

AC97_BUS
  This is used to avoid config and link hard dependencies between the
  sound subsystem and other function drivers completely unrelated to
  sound although they're sharing the AC97 bus. Concerned drivers
  should "select" this.

AC97_BUS_COMPAT
  No help

AC97_BUS_NEW
  This is the new AC97 bus type, successor of AC97_BUS. The ported
  drivers which benefit from the AC97 automatic probing should "select"
  this instead of the AC97_BUS.
  Say Y here if you want to have AC97 devices, which are sound oriented
  devices around an AC-Link.

ACCESSIBILITY
  Accessibility handles all special kinds of hardware devices or
  software adapters which help people with disabilities (e.g.
  blindness) to use computers.
  
  That includes braille devices, speech synthesis, keyboard
  remapping, etc.
  
  Say Y here to get to see options for accessibility.
  This option alone does not add any kernel code.
  
  If you say N, all options in this submenu will be skipped and disabled.
  
  If unsure, say N.

ACENIC
  Say Y here if you have an Alteon AceNIC, 3Com 3C985(B), NetGear
  GA620, SGI Gigabit or Farallon PN9000-SX PCI Gigabit Ethernet
  adapter. The driver allows for using the Jumbo Frame option (9000
  bytes/frame) however it requires that your switches can handle this
  as well. To enable Jumbo Frames, add `mtu 9000' to your ifconfig
  line.
  
  To compile this driver as a module, choose M here: the
  module will be called acenic.

ACENIC_OMIT_TIGON_I
  Say Y here if you only have Tigon II based AceNICs and want to leave
  out support for the older Tigon I based cards which are no longer
  being sold (ie. the original Alteon AceNIC and 3Com 3C985 (non B
  version)).  This will reduce the size of the driver object by
  app. 100KB.  If you are not sure whether your card is a Tigon I or a
  Tigon II, say N here.
  
  The safe and default value for this is N.

ACERHDF
  This is a driver for Acer Aspire One netbooks. It allows to access
  the temperature sensor and to control the fan.
  
  After loading this driver the BIOS is still in control of the fan.
  To let the kernel handle the fan, do:
  echo -n enabled > /sys/class/thermal/thermal_zoneN/mode
  where N=0,1,2... depending on the number of thermal nodes and the
  detection order of your particular system.  The "type" parameter
  in the same node directory will tell you if it is "acerhdf".
  
  For more information about this driver see
  <https://piie.net/files/acerhdf_README.txt>
  
  If you have an Acer Aspire One netbook, say Y or M
  here.

ACER_WIRELESS
  The Acer Wireless Radio Control handles the airplane mode hotkey
  present on new Acer laptops.
  
  Say Y or M here if you have an Acer notebook with an airplane mode
  hotkey.
  
  If you choose to compile this driver as a module the module will be
  called acer-wireless.

ACER_WMI
  This is a driver for newer Acer (and Wistron) laptops. It adds
  wireless radio and bluetooth control, and on some laptops,
  exposes the mail LED and LCD backlight.
  
  If you have an ACPI-WMI compatible Acer/ Wistron laptop, say Y or M
  here.

ACORN_PARTITION
  Support hard disks partitioned under Acorn operating systems.

ACORN_PARTITION_ADFS
  The Acorn Disc Filing System is the standard file system of the
  RiscOS operating system which runs on Acorn's ARM-based Risc PC
  systems and the Acorn Archimedes range of machines.  If you say
  `Y' here, Linux will support disk partitions created under ADFS.

ACORN_PARTITION_CUMANA
  Say Y here if you would like to use hard disks under Linux which
  were partitioned using the Cumana interface on Acorn machines.

ACORN_PARTITION_EESOX
  No help

ACORN_PARTITION_ICS
  Say Y here if you would like to use hard disks under Linux which
  were partitioned using the ICS interface on Acorn machines.

ACORN_PARTITION_POWERTEC
  Support reading partition tables created on Acorn machines using
  the PowerTec SCSI drive.

ACORN_PARTITION_RISCIX
  Once upon a time, there was a native Unix port for the Acorn series
  of machines called RISCiX.  If you say 'Y' here, Linux will be able
  to read disks partitioned under RISCiX.

ACPI
  Advanced Configuration and Power Interface (ACPI) support for
  Linux requires an ACPI-compliant platform (hardware/firmware),
  and assumes the presence of OS-directed configuration and power
  management (OSPM) software.  This option will enlarge your
  kernel by about 70K.
  
  Linux ACPI provides a robust functional replacement for several
  legacy configuration and power management interfaces, including
  the Plug-and-Play BIOS specification (PnP BIOS), the
  MultiProcessor Specification (MPS), and the Advanced Power
  Management (APM) specification.  If both ACPI and APM support
  are configured, ACPI is used.
  
  The project home page for the Linux ACPI subsystem is here:
  <https://01.org/linux-acpi>
  
  Linux support for ACPI is based on Intel Corporation's ACPI
  Component Architecture (ACPI CA).  For more information on the
  ACPI CA, see:
  <https://acpica.org/>
  
  ACPI is an open industry specification originally co-developed by
  Hewlett-Packard, Intel, Microsoft, Phoenix, and Toshiba. Currently,
  it is developed by the ACPI Specification Working Group (ASWG) under
  the UEFI Forum and any UEFI member can join the ASWG and contribute
  to the ACPI specification.
  The specification is available at:
  <https://uefi.org/specifications>

ACPI_AC
  This driver supports the AC Adapter object, which indicates
  whether a system is on AC or not.  If you have a system that can
  switch between A/C and battery, say Y.
  
  To compile this driver as a module, choose M here:
  the module will be called ac.

ACPI_ADXL
  No help

ACPI_ALS
  Say Y here if you want to build a driver for the ACPI0008
  Ambient Light Sensor.
  
  To compile this driver as a module, choose M here: the module will
  be called acpi-als.

ACPI_APEI
  APEI allows to report errors (for example from the chipset)
  to the operating system. This improves NMI handling
  especially. In addition it supports error serialization and
  error injection.

ACPI_APEI_EINJ
  EINJ provides a hardware error injection mechanism, it is
  mainly used for debugging and testing the other parts of
  APEI and some other RAS features.

ACPI_APEI_ERST_DEBUG
  ERST is a way provided by APEI to save and retrieve hardware
  error information to and from a persistent store. Enable this
  if you want to debugging and testing the ERST kernel support
  and firmware implementation.

ACPI_APEI_GHES
  Generic Hardware Error Source provides a way to report
  platform hardware errors (such as that from chipset). It
  works in so called "Firmware First" mode, that is, hardware
  errors are reported to firmware firstly, then reported to
  Linux by firmware. This way, some non-standard hardware
  error registers or non-standard hardware link can be checked
  by firmware to produce more valuable hardware error
  information for Linux.

ACPI_APEI_MEMORY_FAILURE
  Memory errors may be reported via APEI firmware first mode.
  Turn on this option to enable the memory recovering support.

ACPI_APEI_PCIEAER
  PCIe AER errors may be reported via APEI firmware first mode.
  Turn on this option to enable the corresponding support.

ACPI_APEI_SEA
  No help

ACPI_BATTERY
  This driver adds support for battery information through
  /proc/acpi/battery. If you have a mobile system with a battery,
  say Y.
  
  To compile this driver as a module, choose M here:
  the module will be called battery.

ACPI_BGRT
  This driver adds support for exposing the ACPI Boottime Graphics
  Resource Table, which allows the operating system to obtain
  data from the firmware boot splash. It will appear under
  /sys/firmware/acpi/bgrt/ .

ACPI_BUTTON
  This driver handles events on the power, sleep, and lid buttons.
  A daemon reads events from input devices or via netlink and
  performs user-defined actions such as shutting down the system.
  This is necessary for software-controlled poweroff.
  
  To compile this driver as a module, choose M here:
  the module will be called button.

ACPI_CCA_REQUIRED
  No help

ACPI_CMPC
  Support for Intel Classmate PC ACPI devices, including some
  keys as input device, backlight device, tablet and accelerometer
  devices.

ACPI_CONFIGFS
  Select this option to enable support for ACPI configuration from
  userspace. The configurable ACPI groups will be visible under
  /config/acpi, assuming configfs is mounted under /config.

ACPI_CONTAINER
  This driver supports ACPI Container and Module devices (IDs
  ACPI0004, PNP0A05, and PNP0A06).
  
  This helps support hotplug of nodes, CPUs, and memory.

ACPI_CPPC_CPUFREQ
  This adds a CPUFreq driver which uses CPPC methods
  as described in the ACPIv5.1 spec. CPPC stands for
  Collaborative Processor Performance Controls. It
  is based on an abstract continuous scale of CPU
  performance values which allows the remote power
  processor to flexibly optimize for power and
  performance. CPPC relies on power management firmware
  support for its operation.
  
  If in doubt, say N.

ACPI_CPPC_LIB
  If this option is enabled, this file implements common functionality
  to parse CPPC tables as described in the ACPI 5.1+ spec. The
  routines implemented are meant to be used by other
  drivers to control CPU performance using CPPC semantics.
  If your platform does not support CPPC in firmware,
  leave this option disabled.

ACPI_CPU_FREQ_PSS
  No help

ACPI_CUSTOM_DSDT
  No help

ACPI_CUSTOM_DSDT_FILE
  This option supports a custom DSDT by linking it into the kernel.
  See Documentation/admin-guide/acpi/dsdt-override.rst
  
  Enter the full path name to the file which includes the AmlCode
  or dsdt_aml_code declaration.
  
  If unsure, don't enter a file name.

ACPI_CUSTOM_METHOD
  This debug facility allows ACPI AML methods to be inserted and/or
  replaced without rebooting the system. For details refer to:
  Documentation/firmware-guide/acpi/method-customizing.rst.
  
  NOTE: This option is security sensitive, because it allows arbitrary
  kernel memory to be written to by root (uid=0) users, allowing them
  to bypass certain security measures (e.g. if root is not allowed to
  load additional kernel modules after boot, this feature may be used
  to override that restriction).

ACPI_DEBUG
  The ACPI subsystem can produce debug output.  Saying Y enables this
  output and increases the kernel size by around 50K.
  
  Use the acpi.debug_layer and acpi.debug_level kernel command-line
  parameters documented in Documentation/firmware-guide/acpi/debug.rst and
  Documentation/admin-guide/kernel-parameters.rst to control the type and
  amount of debug output.

ACPI_DEBUGGER
  Enable in-kernel debugging of AML facilities: statistics,
  internal object dump, single step control method execution.
  This is still under development, currently enabling this only
  results in the compilation of the ACPICA debugger files.

ACPI_DEBUGGER_USER
  Export /sys/kernel/debug/acpi/acpidbg for userspace utilities
  to access the debugger functionalities.

ACPI_DOCK
  This driver supports ACPI-controlled docking stations and removable
  drive bays such as the IBM Ultrabay and the Dell Module Bay.

ACPI_DPTF
  Intel Dynamic Platform and Thermal Framework (DPTF) is a platform
  level hardware/software solution for power and thermal management.
  
  As a container for multiple power/thermal technologies, DPTF provides
  a coordinated approach for different policies to effect the hardware
  state of a system.
  
  For more information see:
  <https://01.org/intel%C2%AE-dynamic-platform-and-thermal-framework-dptf-chromium-os/overview>

ACPI_EC_DEBUGFS
  Say N to disable Embedded Controller /sys/kernel/debug interface
  
  Be aware that using this interface can confuse your Embedded
  Controller in a way that a normal reboot is not enough. You then
  have to power off your system, and remove the laptop battery for
  some seconds.
  An Embedded Controller typically is available on laptops and reads
  sensor values like battery state and temperature.
  The kernel accesses the EC through ACPI parsed code provided by BIOS
  tables. This option allows to access the EC directly without ACPI
  code being involved.
  Thus this option is a debug option that helps to write ACPI drivers
  and can be used to identify ACPI code or EC firmware bugs.

ACPI_EXTLOG
  Certain usages such as Predictive Failure Analysis (PFA) require
  more information about the error than what can be described in
  processor machine check banks. Most server processors log
  additional information about the error in processor uncore
  registers. Since the addresses and layout of these registers vary
  widely from one processor to another, system software cannot
  readily make use of them. To complicate matters further, some of
  the additional error information cannot be constructed without
  detailed knowledge about platform topology.
  
  Enhanced MCA Logging allows firmware to provide additional error
  information to system software, synchronous with MCE or CMCI. This
  driver adds support for that functionality with corresponding
  tracepoint which carries that information to userspace.

ACPI_FAN
  This driver supports ACPI fan devices, allowing user-mode
  applications to perform basic fan control (on, off, status).
  
  To compile this driver as a module, choose M here:
  the module will be called fan.

ACPI_GENERIC_GSI
  No help

ACPI_GTDT
  No help

ACPI_HED
  This driver supports the Hardware Error Device (PNP0C33),
  which is used to report some hardware errors notified via
  SCI, mainly the corrected errors.

ACPI_HMAT
  If set, this option has the kernel parse and report the
  platform's ACPI HMAT (Heterogeneous Memory Attributes Table),
  register memory initiators with their targets, and export
  performance attributes through the node's sysfs device if
  provided.

ACPI_HOTPLUG_CPU
  No help

ACPI_HOTPLUG_IOAPIC
  No help

ACPI_HOTPLUG_MEMORY
  This driver supports ACPI memory hotplug.  The driver
  fields notifications on ACPI memory devices (PNP0C80),
  which represent memory ranges that may be onlined or
  offlined during runtime.
  
  If your hardware and firmware do not support adding or
  removing memory devices at runtime, you need not enable
  this driver.

ACPI_I2C_OPREGION
  Say Y here if you want to enable ACPI I2C operation region support.
  Operation Regions allow firmware (BIOS) code to access I2C slave devices,
  such as smart batteries through an I2C host controller driver.

ACPI_IORT
  No help

ACPI_IPMI
  This driver enables the ACPI to access the BMC controller. And it
  uses the IPMI request/response message to communicate with BMC
  controller, which can be found on on the server.
  
  To compile this driver as a module, choose M here:
  the module will be called as acpi_ipmi.

ACPI_LEGACY_TABLES_LOOKUP
  No help

ACPI_LPIT
  No help

ACPI_MCFG
  No help

ACPI_NFIT
  Infrastructure to probe ACPI 6 compliant platforms for
  NVDIMMs (NFIT) and register a libnvdimm device tree.  In
  addition to storage devices this also enables libnvdimm to pass
  ACPI._DSM messages for platform/dimm configuration.
  
  To compile this driver as a module, choose M here:
  the module will be called nfit.

ACPI_NUMA
  No help

ACPI_PCI_SLOT
  This driver creates entries in /sys/bus/pci/slots/ for all PCI
  slots in the system.  This can help correlate PCI bus addresses,
  i.e., segment/bus/device/function tuples, with physical slots in
  the system.  If you are unsure, say N.

ACPI_PPTT
  No help

ACPI_PROCESSOR
  This driver adds support for the ACPI Processor package. It is required
  by several flavors of cpufreq performance-state, thermal, throttling and
  idle drivers.
  
  To compile this driver as a module, choose M here:
  the module will be called processor.

ACPI_PROCESSOR_AGGREGATOR
  ACPI 4.0 defines processor Aggregator, which enables OS to perform
  specific processor configuration and control that applies to all
  processors in the platform. Currently only logical processor idling
  is defined, which is to reduce power consumption. This driver
  supports the new device.

ACPI_PROCESSOR_CSTATE
  No help

ACPI_PROCESSOR_IDLE
  No help

ACPI_REDUCED_HARDWARE_ONLY
  This config item changes the way the ACPI code is built.  When this
  option is selected, the kernel will use a specialized version of
  ACPICA that ONLY supports the ACPI "reduced hardware" mode.  The
  resulting kernel will be smaller but it will also be restricted to
  running in ACPI reduced hardware mode ONLY.
  
  If you are unsure what to do, do not enable this option.

ACPI_REV_OVERRIDE_POSSIBLE
  The platform firmware on some systems expects Linux to return "5" as
  the supported ACPI revision which makes it expose system configuration
  information in a special way.
  
  For example, based on what ACPI exports as the supported revision,
  Dell XPS 13 (2015) configures its audio device to either work in HDA
  mode or in I2S mode, where the former is supposed to be used on Linux
  until the latter is fully supported (in the kernel as well as in user
  space).
  
  This option enables a DMI-based quirk for the above Dell machine (so
  that HDA audio is exposed by the platform firmware to the kernel) and
  makes it possible to force the kernel to return "5" as the supported
  ACPI revision via the "acpi_rev_override" command line switch.

ACPI_SBS
  This driver supports the Smart Battery System, another
  type of access to battery information, found on some laptops.
  
  To compile this driver as a module, choose M here:
  the modules will be called sbs and sbshc.

ACPI_SLEEP
  No help

ACPI_SPCR_TABLE
  Enable support for Serial Port Console Redirection (SPCR) Table.
  This table provides information about the configuration of the
  earlycon console.

ACPI_SYSTEM_POWER_STATES_SUPPORT
  No help

ACPI_TABLE_OVERRIDE_VIA_BUILTIN_INITRD
  This option provides functionality to override arbitrary ACPI tables
  from built-in uncompressed initrd.
  
  See Documentation/admin-guide/acpi/initrd_table_override.rst for details

ACPI_TABLE_UPGRADE
  This option provides functionality to upgrade arbitrary ACPI tables
  via initrd. No functional change if no ACPI tables are passed via
  initrd, therefore it's safe to say Y.
  See Documentation/admin-guide/acpi/initrd_table_override.rst for details

ACPI_TAD
  The ACPI Time and Alarm (TAD) device is an alternative to the Real
  Time Clock (RTC).  Its wake timers allow the system to transition from
  the S3 (or optionally S4/S5) state to S0 state after a time period
  elapses.  In comparison with the RTC Alarm, the TAD provides a larger
  scale of flexibility in the wake timers.  The time capabilities of the
  TAD maintain the time of day information across platform power
  transitions, and keep track of time even when the platform is turned
  off.

ACPI_THERMAL
  This driver supports ACPI thermal zones.  Most mobile and
  some desktop systems support ACPI thermal zones.  It is HIGHLY
  recommended that this option be enabled, as your processor(s)
  may be damaged without it.
  
  To compile this driver as a module, choose M here:
  the module will be called thermal.

ACPI_THERMAL_REL
  No help

ACPI_TINY_POWER_BUTTON
  This driver provides a tiny alternative to the ACPI Button driver.
  The tiny power button driver only handles the power button. Rather
  than notifying userspace via the input layer or a netlink event, this
  driver directly signals the init process to shut down.
  
  This driver is particularly suitable for cloud and VM environments,
  which use a simulated power button to initiate a controlled poweroff,
  but which may not want to run a separate userspace daemon to process
  input events.

ACPI_TINY_POWER_BUTTON_SIGNAL
  Default signal to send to init in response to the power button.
  
  Likely values here include 38 (SIGRTMIN+4) to power off, or 2
  (SIGINT) to simulate Ctrl+Alt+Del.

ACPI_TOSHIBA
  This driver adds support for access to certain system settings
  on "legacy free" Toshiba laptops.  These laptops can be recognized by
  their lack of a BIOS setup menu and APM support.
  
  On these machines, all system configuration is handled through the
  ACPI.  This driver is required for access to controls not covered
  by the general ACPI drivers, such as LCD brightness, video output,
  etc.
  
  This driver differs from the non-ACPI Toshiba laptop driver (located
  under "Processor type and features") in several aspects.
  Configuration is accessed by reading and writing text files in the
  /proc tree instead of by program interface to /dev.  Furthermore, no
  power management functions are exposed, as those are handled by the
  general ACPI drivers.
  
  More information about this driver is available at
  <http://memebeam.org/toys/ToshibaAcpiDriver>.
  
  If you have a legacy free Toshiba laptop (such as the Libretto L1
  series), say Y.

ACPI_VIDEO
  This driver implements the ACPI Extensions For Display Adapters
  for integrated graphics devices on motherboard, as specified in
  ACPI 2.0 Specification, Appendix B.  This supports basic operations
  such as defining the video POST device, retrieving EDID information,
  and setting up a video output.
  
  To compile this driver as a module, choose M here:
  the module will be called video.

ACPI_WATCHDOG
  No help

ACPI_WMI
  This driver adds support for the ACPI-WMI (Windows Management
  Instrumentation) mapper device (PNP0C14) found on some systems.
  
  ACPI-WMI is a proprietary extension to ACPI to expose parts of the
  ACPI firmware to userspace - this is done through various vendor
  defined methods and data blocks in a PNP0C14 device, which are then
  made available for userspace to call.
  
  The implementation of this in Linux currently only exposes this to
  other kernel space drivers.
  
  This driver is a required dependency to build the firmware specific
  drivers needed on many machines, including Acer and HP laptops.
  
  It is safe to enable this driver even if your DSDT doesn't define
  any ACPI-WMI devices.

ACQUIRE_WDT
  This is the driver for the hardware watchdog on Single Board
  Computers produced by Acquire Inc (and others). This watchdog
  simply watches your kernel to make sure it doesn't freeze, and if
  it does, it reboots your computer after a certain amount of time.
  
  To compile this driver as a module, choose M here: the
  module will be called acquirewdt.
  
  Most people will say N.

ACRN_GUEST
  This option allows to run Linux as guest in the ACRN hypervisor. ACRN is
  a flexible, lightweight reference open-source hypervisor, built with
  real-time and safety-criticality in mind. It is built for embedded
  IOT with small footprint and real-time features. More details can be
  found in https://projectacrn.org/.

AD2S1200
  Say yes here to build support for Analog Devices spi resolver
  to digital converters, ad2s1200 and ad2s1205, provides direct access
  via sysfs.
  
  To compile this driver as a module, choose M here: the
  module will be called ad2s1200.

AD2S1210
  Say yes here to build support for Analog Devices spi resolver
  to digital converters, ad2s1210, provides direct access via sysfs.
  
  To compile this driver as a module, choose M here: the
  module will be called ad2s1210.

AD2S90
  Say yes here to build support for Analog Devices spi resolver
  to digital converters, ad2s90, provides direct access via sysfs.
  
  To compile this driver as a module, choose M here: the
  module will be called ad2s90.

AD5064
  Say yes here to build support for Analog Devices AD5024, AD5025, AD5044,
  AD5045, AD5064, AD5064-1, AD5065, AD5625, AD5625R, AD5627, AD5627R,
  AD5628, AD5629R, AD5645R, AD5647R, AD5648, AD5665, AD5665R, AD5666,
  AD5667, AD5667R, AD5668, AD5669R, LTC2606, LTC2607, LTC2609, LTC2616,
  LTC2617, LTC2619, LTC2626, LTC2627, LTC2629, LTC2631, LTC2633, LTC2635
  Digital to Analog Converter.
  
  To compile this driver as a module, choose M here: the
  module will be called ad5064.

AD525X_DPOT
  If you say yes here, you get support for the Analog Devices
  AD5258, AD5259, AD5251, AD5252, AD5253, AD5254, AD5255
  AD5160, AD5161, AD5162, AD5165, AD5200, AD5201, AD5203,
  AD5204, AD5206, AD5207, AD5231, AD5232, AD5233, AD5235,
  AD5260, AD5262, AD5263, AD5290, AD5291, AD5292, AD5293,
  AD7376, AD8400, AD8402, AD8403, ADN2850, AD5241, AD5242,
  AD5243, AD5245, AD5246, AD5247, AD5248, AD5280, AD5282,
  ADN2860, AD5273, AD5171, AD5170, AD5172, AD5173, AD5270,
  AD5271, AD5272, AD5274
  digital potentiometer chips.
  
  See Documentation/misc-devices/ad525x_dpot.rst for the
  userspace interface.
  
  This driver can also be built as a module.  If so, the module
  will be called ad525x_dpot.

AD525X_DPOT_I2C
  Say Y here if you have a digital potentiometers hooked to an I2C bus.
  
  To compile this driver as a module, choose M here: the
  module will be called ad525x_dpot-i2c.

AD525X_DPOT_SPI
  Say Y here if you have a digital potentiometers hooked to an SPI bus.
  
  If unsure, say N (but it's safe to say "Y").
  
  To compile this driver as a module, choose M here: the
  module will be called ad525x_dpot-spi.

AD5272
  Say yes here to build support for the Analog Devices AD5272 and AD5274
  digital potentiometer chip.
  
  To compile this driver as a module, choose M here: the
  module will be called ad5272.

AD5360
  Say yes here to build support for Analog Devices AD5360, AD5361,
  AD5362, AD5363, AD5370, AD5371, AD5373 multi-channel
  Digital to Analog Converters (DAC).
  
  To compile this driver as module choose M here: the module will be called
  ad5360.

AD5380
  Say yes here to build support for Analog Devices AD5380, AD5381,
  AD5382, AD5383, AD5384, AD5390, AD5391, AD5392 multi-channel
  Digital to Analog Converters (DAC).
  
  To compile this driver as module choose M here: the module will be called
  ad5380.

AD5421
  Say yes here to build support for Analog Devices AD5421 loop-powered
  digital-to-analog convertors (DAC).
  
  To compile this driver as module choose M here: the module will be called
  ad5421.

AD5446
  Say yes here to build support for Analog Devices AD5300, AD5301, AD5310,
  AD5311, AD5320, AD5321, AD5444, AD5446, AD5450, AD5451, AD5452, AD5453,
  AD5512A, AD5541A, AD5542A, AD5543, AD5553, AD5600, AD5601, AD5602, AD5611,
  AD5612, AD5620, AD5621, AD5622, AD5640, AD5641, AD5660, AD5662 DACs
  as well as Texas Instruments DAC081S101, DAC101S101, DAC121S101.
  
  To compile this driver as a module, choose M here: the
  module will be called ad5446.

AD5449
  Say yes here to build support for Analog Devices AD5415, AD5426, AD5429,
  AD5432, AD5439, AD5443, AD5449 Digital to Analog Converters.
  
  To compile this driver as a module, choose M here: the
  module will be called ad5449.

AD5504
  Say yes here to build support for Analog Devices AD5504, AD5501,
  High Voltage Digital to Analog Converter.
  
  To compile this driver as a module, choose M here: the
  module will be called ad5504.

AD5592R
  Say yes here to build support for Analog Devices AD5592R
  Digital to Analog / Analog to Digital Converter.
  
  To compile this driver as a module, choose M here: the
  module will be called ad5592r.

AD5592R_BASE
  No help

AD5593R
  Say yes here to build support for Analog Devices AD5593R
  Digital to Analog / Analog to Digital Converter.
  
  To compile this driver as a module, choose M here: the
  module will be called ad5593r.

AD5624R_SPI
  Say yes here to build support for Analog Devices AD5624R, AD5644R and
  AD5664R converters (DAC). This driver uses the common SPI interface.

AD5686
  No help

AD5686_SPI
  Say yes here to build support for Analog Devices AD5672R, AD5674R,
  AD5676, AD5676R, AD5679R, AD5684, AD5684R, AD5684R, AD5685R, AD5686,
  AD5686R Voltage Output Digital to Analog Converter.
  
  To compile this driver as a module, choose M here: the
  module will be called ad5686.

AD5696_I2C
  Say yes here to build support for Analog Devices AD5311R, AD5338R,
  AD5671R, AD5675R, AD5691R, AD5692R, AD5693, AD5693R, AD5694, AD5694R,
  AD5695R, AD5696, and AD5696R Digital to Analog converters.
  
  To compile this driver as a module, choose M here: the module will be
  called ad5696.

AD5755
  Say yes here to build support for Analog Devices AD5755, AD5755-1,
  AD5757, AD5735, AD5737 quad channel Digital to
  Analog Converter.
  
  To compile this driver as a module, choose M here: the
  module will be called ad5755.

AD5758
  Say yes here to build support for Analog Devices AD5758 single channel
  Digital to Analog Converter.
  
  To compile this driver as a module, choose M here: the
  module will be called ad5758.

AD5761
  Say yes here to build support for Analog Devices AD5761, AD5761R, AD5721,
  AD5721R Digital to Analog Converter.
  
  To compile this driver as a module, choose M here: the
  module will be called ad5761.

AD5764
  Say yes here to build support for Analog Devices AD5764, AD5764R, AD5744,
  AD5744R Digital to Analog Converter.
  
  To compile this driver as a module, choose M here: the
  module will be called ad5764.

AD5770R
  Say yes here to build support for Analog Devices AD5770R Digital to
  Analog Converter.
  
  To compile this driver as a module, choose M here: the
  module will be called ad5770r.

AD5791
  Say yes here to build support for Analog Devices AD5760, AD5780,
  AD5781, AD5790, AD5791 High Resolution Voltage Output Digital to
  Analog Converter.
  
  To compile this driver as a module, choose M here: the
  module will be called ad5791.

AD5933
  Say yes here to build support for Analog Devices Impedance Converter,
  Network Analyzer, AD5933/4.
  
  To compile this driver as a module, choose M here: the
  module will be called ad5933.

AD7091R5
  Say yes here to build support for Analog Devices AD7091R-5 ADC.

AD7124
  Say yes here to build support for Analog Devices AD7124-4 and AD7124-8
  SPI analog to digital converters (ADC).
  
  To compile this driver as a module, choose M here: the module will be
  called ad7124.

AD7150
  Say yes here to build support for Analog Devices capacitive sensors.
  (ad7150, ad7151, ad7156) Provides direct access via sysfs.
  
  To compile this driver as a module, choose M here: the
  module will be called ad7150.

AD7192
  Say yes here to build support for Analog Devices AD7190,
  AD7192, AD7193 or AD7195 SPI analog to digital converters (ADC).
  If unsure, say N (but it's safe to say "Y").
  
  To compile this driver as a module, choose M here: the
  module will be called ad7192.

AD7266
  Say yes here to build support for Analog Devices AD7265 and AD7266
  ADCs.
  
  To compile this driver as a module, choose M here: the module will be
  called ad7266.

AD7280
  Say yes here to build support for Analog Devices AD7280A
  Lithium Ion Battery Monitoring System.
  
  To compile this driver as a module, choose M here: the
  module will be called ad7280a

AD7291
  Say yes here to build support for Analog Devices AD7291
  8 Channel ADC with temperature sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called ad7291.

AD7292
  Say yes here to build support for Analog Devices AD7292
  8 Channel ADC with temperature sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called ad7292.

AD7298
  Say yes here to build support for Analog Devices AD7298
  8 Channel ADC with temperature sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called ad7298.

AD7303
  Say yes here to build support for Analog Devices AD7303 Digital to Analog
  Converters (DAC).
  
  To compile this driver as module choose M here: the module will be called
  ad7303.

AD7476
  Say yes here to build support for the following SPI analog to
  digital converters (ADCs):
  Analog Devices: AD7273, AD7274, AD7276, AD7277, AD7278, AD7475,
  AD7476, AD7477, AD7478, AD7466, AD7467, AD7468, AD7495, AD7910,
  AD7920.
  Texas Instruments: ADS7866, ADS7867, ADS7868.
  
  To compile this driver as a module, choose M here: the
  module will be called ad7476.

AD7606
  No help

AD7606_IFACE_PARALLEL
  Say yes here to build parallel interface support for Analog Devices:
  ad7605-4, ad7606, ad7606-6, ad7606-4 analog to digital converters (ADC).
  
  To compile this driver as a module, choose M here: the
  module will be called ad7606_parallel.

AD7606_IFACE_SPI
  Say yes here to build spi interface support for Analog Devices:
  ad7605-4, ad7606, ad7606-6, ad7606-4 analog to digital converters (ADC).
  
  To compile this driver as a module, choose M here: the
  module will be called ad7606_spi.

AD7746
  Say yes here to build support for Analog Devices capacitive sensors.
  (AD7745, AD7746, AD7747) Provides direct access via sysfs.
  
  To compile this driver as a module, choose M here: the
  module will be called ad7746.

AD7766
  Say yes here to build support for Analog Devices AD7766, AD7766-1,
  AD7766-2, AD7767, AD7767-1, AD7767-2 SPI analog to digital converters.
  
  To compile this driver as a module, choose M here: the module will be
  called ad7766.

AD7768_1
  Say yes here to build support for Analog Devices AD7768-1 SPI
  simultaneously sampling sigma-delta analog to digital converter (ADC).
  
  To compile this driver as a module, choose M here: the module will be
  called ad7768-1.

AD7780
  Say yes here to build support for Analog Devices AD7170, AD7171,
  AD7780 and AD7781 SPI analog to digital converters (ADC).
  
  To compile this driver as a module, choose M here: the
  module will be called ad7780.

AD7791
  Say yes here to build support for Analog Devices AD7787, AD7788, AD7789,
  AD7790 and AD7791 SPI analog to digital converters (ADC).
  
  To compile this driver as a module, choose M here: the module will be
  called ad7791.

AD7793
  Say yes here to build support for Analog Devices AD7785, AD7792, AD7793,
  AD7794 and AD7795 SPI analog to digital converters (ADC).
  
  To compile this driver as a module, choose M here: the
  module will be called AD7793.

AD7816
  Say yes here to build support for Analog Devices AD7816/7/8
  temperature sensors and ADC.
  
  To compile this driver as a module, choose M here: the
  module will be called ad7816.

AD7887
  Say yes here to build support for Analog Devices
  AD7887 SPI analog to digital converter (ADC).
  
  To compile this driver as a module, choose M here: the
  module will be called ad7887.

AD7923
  Say yes here to build support for Analog Devices
  AD7904, AD7914, AD7923, AD7924 4 Channel ADCs.
  
  To compile this driver as a module, choose M here: the
  module will be called ad7923.

AD7949
  Say yes here to build support for Analog Devices
  AD7949, AD7682, AD7689 8 Channel ADCs.
  
  To compile this driver as a module, choose M here: the
  module will be called ad7949.

AD799X
  Say yes here to build support for Analog Devices:
  ad7991, ad7995, ad7999, ad7992, ad7993, ad7994, ad7997, ad7998
  i2c analog to digital converters (ADC). Provides direct access
  via sysfs.
  
  To compile this driver as a module, choose M here: the module will be
  called ad799x.

AD8366
  Say yes here to build support for Analog Devices AD8366 and similar
  gain amplifiers. This driver supports the following gain amplifiers
  from Analog Devices:
    AD8366 Dual-Digital Variable Gain Amplifier (VGA)
    ADA4961 BiCMOS RF Digital Gain Amplifier (DGA)
    ADL5240 Digitally controlled variable gain amplifier (VGA)
    HMC1119 0.25 dB LSB, 7-Bit, Silicon Digital Attenuator
  
  To compile this driver as a module, choose M here: the
  module will be called ad8366.

AD8801
  Say yes here to build support for Analog Devices AD8801, AD8803 Digital to
  Analog Converters (DAC).
  
  To compile this driver as a module choose M here: the module will be called
  ad8801.

AD9467
  Say yes here to build support for Analog Devices:
  * AD9467 16-Bit, 200 MSPS/250 MSPS Analog-to-Digital Converter
  
  The driver requires the assistance of the AXI ADC IP core to operate,
  since SPI is used for configuration only, while data has to be
  streamed into memory via DMA.
  
  To compile this driver as a module, choose M here: the module will be
  called ad9467.

AD9523
  Say yes here to build support for Analog Devices AD9523 Low Jitter
  Clock Generator. The driver provides direct access via sysfs.
  
  To compile this driver as a module, choose M here: the
  module will be called ad9523.

AD9832
  Say yes here to build support for Analog Devices DDS chip
  AD9832 and AD9835, provides direct access via sysfs.
  
  To compile this driver as a module, choose M here: the
  module will be called ad9832.

AD9834
  Say yes here to build support for Analog Devices DDS chip
  AD9833, AD9834, AD9837 and AD9838, provides direct access via sysfs.
  
  To compile this driver as a module, choose M here: the
  module will be called ad9834.

ADAPTEC_STARFIRE
  Say Y here if you have an Adaptec Starfire (or DuraLAN) PCI network
  adapter. The DuraLAN chip is used on the 64 bit PCI boards from
  Adaptec e.g. the ANA-6922A. The older 32 bit boards use the tulip
  driver.
  
  To compile this driver as a module, choose M here: the module
  will be called starfire.  This is recommended.

ADB
  Apple Desktop Bus (ADB) support is for support of devices which
  are connected to an ADB port.  ADB devices tend to have 4 pins.
  If you have an Apple Macintosh prior to the iMac, an iBook or
  PowerBook, or a "Blue and White G3", you probably want to say Y
  here.  Otherwise say N.

ADB_CUDA
  This provides support for Cuda/Egret based Macintosh and
  Power Macintosh systems. This includes most m68k based Macs,
  most Old World PowerMacs, the first generation iMacs, the
  Blue & White G3 and the "Yikes" G4 (PCI Graphics). All later
  models should use CONFIG_ADB_PMU instead. It is safe to say Y
  here even if your machine doesn't have a Cuda or Egret device.
  
  If unsure say Y.

ADB_IOP
  The I/O Processor (IOP) is an Apple custom IC designed to provide
  intelligent support for I/O controllers.  It is described at
  <http://www.angelfire.com/ca2/dev68k/iopdesc.html> to enable direct
  support for it, say 'Y' here.

ADB_MACII
  Say Y here if want your kernel to support Macintosh systems that use
  the Mac II style ADB.  This includes the II, IIx, IIcx, SE/30, IIci,
  Quadra 610, Quadra 650, Quadra 700, Quadra 800, Centris 610 and
  Centris 650.

ADB_MACIO
  Say Y here to include direct support for the ADB controller in the
  Hydra chip used on PowerPC Macintoshes of the CHRP type.  (The Hydra
  also includes a MESH II SCSI controller, DBDMA controller, VIA chip,
  OpenPIC controller and two RS422/Geoports.)

ADB_PMU
  On PowerBooks, iBooks, and recent iMacs and Power Macintoshes, the
  PMU is an embedded microprocessor whose primary function is to
  control system power, and battery charging on the portable models.
  The PMU also controls the ADB (Apple Desktop Bus) which connects to
  the keyboard and mouse on some machines, as well as the non-volatile
  RAM and the RTC (real time clock) chip.  Say Y to enable support for
  this device; you should do so if your machine is one of those
  mentioned above.

ADB_PMU_LED
  Support the front LED on Power/iBooks as a generic LED that can
  be triggered by any of the supported triggers. To get the
  behaviour of the old CONFIG_BLK_DEV_IDE_PMAC_BLINK, select this
  and the disk LED trigger and configure appropriately through sysfs.

ADB_PMU_LED_DISK
  This option makes the front LED default to the disk trigger
  so that it blinks on disk activity.

ADE7854
  Say yes here to build support for Analog Devices ADE7854/58/68/78 Polyphase
  Multifunction Energy Metering IC Driver.
  
  To compile this driver as a module, choose M here: the
  module will be called ade7854.

ADE7854_I2C
  Say Y here if you have ADE7854/58/68/78 hooked to an I2C bus.
  
  To compile this driver as a module, choose M here: the
  module will be called ade7854-i2c.

ADE7854_SPI
  Say Y here if you have ADE7854/58/68/78 hooked to a SPI bus.
  
  To compile this driver as a module, choose M here: the
  module will be called ade7854-spi.

ADF4350
  Say yes here to build support for Analog Devices  ADF4350/ADF4351
  Wideband Synthesizers. The driver provides direct access via sysfs.
  
  To compile this driver as a module, choose M here: the
  module will be called adf4350.

ADF4371
  Say yes here to build support for Analog Devices ADF4371 and ADF4372
  Wideband Synthesizers. The driver provides direct access via sysfs.
  
  To compile this driver as a module, choose M here: the
  module will be called adf4371.

ADFS_FS
  The Acorn Disc Filing System is the standard file system of the
  RiscOS operating system which runs on Acorn's ARM-based Risc PC
  systems and the Acorn Archimedes range of machines. If you say Y
  here, Linux will be able to read from ADFS partitions on hard drives
  and from ADFS-formatted floppy discs. If you also want to be able to
  write to those devices, say Y to "ADFS write support" below.
  
  The ADFS partition should be the first partition (i.e.,
  /dev/[hs]d?1) on each of your drives. Please read the file
  <file:Documentation/filesystems/adfs.rst> for further details.
  
  To compile this code as a module, choose M here: the module will be
  called adfs.
  
  If unsure, say N.

ADFS_FS_RW
  If you say Y here, you will be able to write to ADFS partitions on
  hard drives and ADFS-formatted floppy disks. This is experimental
  codes, so if you're unsure, say N.

ADI
  SPARC M7 and newer processors utilize ADI (Application Data
  Integrity) to version and protect memory.  This driver provides
  read/write access to the ADI versions for privileged processes.
  This feature is also known as MCD (Memory Corruption Detection)
  and SSM (Silicon Secured Memory).  Intended consumers of this
  driver include crash and makedumpfile.

ADIN_PHY
  Adds support for the Analog Devices Industrial Ethernet PHYs.
  Currently supports the:
  - ADIN1200 - Robust,Industrial, Low Power 10/100 Ethernet PHY
  - ADIN1300 - Robust,Industrial, Low Latency 10/100/1000 Gigabit
    Ethernet PHY

ADIS16080
  Say yes here to build support for Analog Devices ADIS16080, ADIS16100 Yaw
  Rate Gyroscope with SPI.

ADIS16130
  Say yes here to build support for Analog Devices ADIS16130 High Precision
  Angular Rate Sensor driver.

ADIS16136
  Say yes here to build support for the Analog Devices ADIS16133, ADIS16135,
  ADIS16136 gyroscope devices.

ADIS16201
  Say Y here to build support for Analog Devices adis16201 dual-axis
  digital inclinometer and accelerometer.
  
  To compile this driver as a module, say M here: the module will
  be called adis16201.

ADIS16203
  Say Y here to build support for Analog Devices adis16203 Programmable
  360 Degrees Inclinometer.
  
  To compile this driver as a module, say M here: the module will be
  called adis16203.

ADIS16209
  Say Y here to build support for Analog Devices adis16209 dual-axis digital inclinometer
  and accelerometer.
  
  To compile this driver as a module, say M here: the module will be
  called adis16209.

ADIS16240
  Say Y here to build support for Analog Devices adis16240 programmable
  impact Sensor and recorder.
  
  To compile this driver as a module, say M here: the module will be
  called adis16240.

ADIS16260
  Say yes here to build support for Analog Devices ADIS16260 ADIS16265
  ADIS16250 ADIS16255 and ADIS16251 programmable digital gyroscope sensors.
  
  This driver can also be built as a module.  If so, the module
  will be called adis16260.

ADIS16400
  Say yes here to build support for Analog Devices adis16300, adis16344,
  adis16350, adis16354, adis16355, adis16360, adis16362, adis16364,
  adis16365, adis16400 and adis16405 triaxial inertial sensors
  (adis16400 series also have magnetometers).

ADIS16460
  Say yes here to build support for Analog Devices ADIS16460 inertial
  sensor.
  
  To compile this driver as a module, choose M here: the module will be
  called adis16460.

ADIS16475
  Say yes here to build support for Analog Devices ADIS16470, ADIS16475,
  ADIS16477, ADIS16465, ADIS16467, ADIS16500, ADIS16505, ADIS16507 inertial
  sensors.
  
  To compile this driver as a module, choose M here: the module will be
  called adis16475.

ADIS16480
  Say yes here to build support for Analog Devices ADIS16375, ADIS16480,
  ADIS16485, ADIS16488 inertial sensors.

ADI_AXI_ADC
  Say yes here to build support for Analog Devices Generic
  AXI ADC IP core. The IP core is used for interfacing with
  analog-to-digital (ADC) converters that require either a high-speed
  serial interface (JESD204B/C) or a source synchronous parallel
  interface (LVDS/CMOS).
  Typically (for such devices) SPI will be used for configuration only,
  while this IP core handles the streaming of data into memory via DMA.
  
  Link: https://wiki.analog.com/resources/fpga/docs/axi_adc_ip
  If unsure, say N (but it's safe to say "Y").
  
  To compile this driver as a module, choose M here: the
  module will be called adi-axi-adc.

ADJD_S311
  If you say yes here you get support for the Avago ADJD-S311-CR999
  digital color light sensor.
  
  This driver can also be built as a module.  If so, the module
  will be called adjd_s311.

ADM8211
  This driver is for ADM8211A, ADM8211B, and ADM8211C based cards.
  These are PCI/mini-PCI/Cardbus 802.11b chips found in cards such as:
  
  Xterasys Cardbus XN-2411b
  Blitz NetWave Point PC
  TrendNet 221pc
  Belkin F5D6001
  SMC 2635W
  Linksys WPC11 v1
  Fiberline FL-WL-200X
  3com Office Connect (3CRSHPW796)
  Corega WLPCIB-11
  SMC 2602W V2 EU
  D-Link DWL-520 Revision C
  
  However, some of these cards have been replaced with other chips
  like the RTL8180L (Xterasys Cardbus XN-2411b, Belkin F5D6001) or
  the Ralink RT2400 (SMC2635W) without a model number change.
  
  Thanks to Infineon-ADMtek for their support of this driver.

ADT7316
  Say yes here to build support for Analog Devices ADT7316, ADT7317, ADT7318
  and ADT7516, ADT7517, ADT7519 temperature sensors, ADC and DAC.
  
  To compile this driver as a module, choose M here: the module will
  be called adt7316.

ADT7316_I2C
  Say yes here to build I2C bus support for Analog Devices ADT7316/7/8
  and ADT7516/7/9.
  
  To compile this driver as a module, choose M here: the module will
  be called adt7316_i2c.

ADT7316_SPI
  Say yes here to build SPI bus support for Analog Devices ADT7316/7/8
  and ADT7516/7/9.
  
  To compile this driver as a module, choose M here: the module will
  be called adt7316_spi.

ADUX1020
  Say Y here if you want to build a driver for the Analog Devices
  ADUX1020 photometric sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called adux1020.

ADVANTECH_WDT
  If you are configuring a Linux kernel for the Advantech single-board
  computer, say `Y' here to support its built-in watchdog timer
  feature. More information can be found at
  <https://www.advantech.com.tw/products/>

ADVISE_SYSCALLS
  This option enables the madvise and fadvise syscalls, used by
  applications to advise the kernel about their future memory or file
  usage, improving performance. If building an embedded system where no
  applications use these syscalls, you can disable this option to save
  space.

ADXL345
  No help

ADXL345_I2C
  Say Y here if you want to build support for the Analog Devices
  ADXL345 or ADXL375 3-axis digital accelerometer.
  
  To compile this driver as a module, choose M here: the module
  will be called adxl345_i2c and you will also get adxl345_core
  for the core module.

ADXL345_SPI
  Say Y here if you want to build support for the Analog Devices
  ADXL345 or ADXL375 3-axis digital accelerometer.
  
  To compile this driver as a module, choose M here: the module
  will be called adxl345_spi and you will also get adxl345_core
  for the core module.

ADXL372
  No help

ADXL372_I2C
  Say yes here to add support for the Analog Devices ADXL372 triaxial
  acceleration sensor.
  To compile this driver as a module, choose M here: the
  module will be called adxl372_i2c.

ADXL372_SPI
  Say yes here to add support for the Analog Devices ADXL372 triaxial
  acceleration sensor.
  To compile this driver as a module, choose M here: the
  module will be called adxl372_spi.

ADXRS290
  Say yes here to build support for Analog Devices ADXRS290 programmable
  digital output gyroscope.
  
  This driver can also be built as a module. If so, the module will be
  called adxrs290.

ADXRS450
  Say yes here to build support for Analog Devices ADXRS450 and ADXRS453
  programmable digital output gyroscope.
  
  This driver can also be built as a module.  If so, the module
  will be called adxrs450.

AD_SIGMA_DELTA
  No help

AFE4403
  Say yes to choose the Texas Instruments AFE4403
  heart rate monitor and low-cost pulse oximeter.
  
  To compile this driver as a module, choose M here: the
  module will be called afe4403.

AFE4404
  Say yes to choose the Texas Instruments AFE4404
  heart rate monitor and low-cost pulse oximeter.
  
  To compile this driver as a module, choose M here: the
  module will be called afe4404.

AFFS_FS
  The Fast File System (FFS) is the common file system used on hard
  disks by Amiga(tm) systems since AmigaOS Version 1.3 (34.20).  Say Y
  if you want to be able to read and write files from and to an Amiga
  FFS partition on your hard drive.  Amiga floppies however cannot be
  read with this driver due to an incompatibility of the floppy
  controller used in an Amiga and the standard floppy controller in
  PCs and workstations. Read <file:Documentation/filesystems/affs.rst>
  and <file:fs/affs/Changes>.
  
  With this driver you can also mount disk files used by Bernd
  Schmidt's Un*X Amiga Emulator
  (<http://www.freiburg.linux.de/~uae/>).
  If you want to do this, you will also need to say Y or M to "Loop
  device support", above.
  
  To compile this file system support as a module, choose M here: the
  module will be called affs.  If unsure, say N.

AFIUCV
  Select this option if you want to use AF_IUCV socket applications
  based on z/VM inter-user communication vehicle or based on
  HiperSockets.

AFS_DEBUG
  Say Y here to make runtime controllable debugging messages appear.
  
  See <file:Documentation/filesystems/afs.rst> for more information.
  
  If unsure, say N.

AFS_DEBUG_CURSOR
  Say Y here to cause the contents of a server cursor to be dumped to
  the dmesg log if the server rotation algorithm fails to successfully
  contact a server.
  
  See <file:Documentation/filesystems/afs.rst> for more information.
  
  If unsure, say N.

AFS_FS
  If you say Y here, you will get an experimental Andrew File System
  driver. It currently only supports unsecured read-only AFS access.
  
  See <file:Documentation/filesystems/afs.rst> for more information.
  
  If unsure, say N.

AFS_FSCACHE
  Say Y here if you want AFS data to be cached locally on disk through
  the generic filesystem cache manager

AF_KCM
  KCM (Kernel Connection Multiplexor) sockets provide a method
  for multiplexing messages of a message based application
  protocol over kernel connectons (e.g. TCP connections).

AF_RXRPC
  Say Y or M here to include support for RxRPC session sockets (just
  the transport part, not the presentation part: (un)marshalling is
  left to the application).
  
  These are used for AFS kernel filesystem and userspace utilities.
  
  This module at the moment only supports client operations and is
  currently incomplete.
  
  See Documentation/networking/rxrpc.rst.

AF_RXRPC_DEBUG
  Say Y here to make runtime controllable debugging messages appear.
  
  See Documentation/networking/rxrpc.rst.

AF_RXRPC_INJECT_LOSS
  Say Y here to inject packet loss by discarding some received and some
  transmitted packets.

AF_RXRPC_IPV6
  Say Y here to allow AF_RXRPC to use IPV6 UDP as well as IPV4 UDP as
  its network transport.

AG71XX
  If you wish to compile a kernel for AR7XXX/91XXX and enable
  ethernet support, then you should always answer Y to this.

AGP
  AGP (Accelerated Graphics Port) is a bus system mainly used to
  connect graphics cards to the rest of the system.
  
  If you have an AGP system and you say Y here, it will be possible to
  use the AGP features of your 3D rendering video card. This code acts
  as a sort of "AGP driver" for the motherboard's chipset.
  
  If you need more texture memory than you can get with the AGP GART
  (theoretically up to 256 MB, but in practice usually 64 or 128 MB
  due to kernel allocation issues), you could use PCI accesses
  and have up to a couple gigs of texture space.
  
  Note that this is the only means to have X/GLX use
  write-combining with MTRR support on the AGP bus. Without it, OpenGL
  direct rendering will be a lot slower but still faster than PIO.
  
  To compile this driver as a module, choose M here: the
  module will be called agpgart.
  
  You should say Y here if you want to use GLX or DRI.
  
  If unsure, say N.

AGP_ALI
  This option gives you AGP support for the GLX component of
  X on the following ALi chipsets.  The supported chipsets
  include M1541, M1621, M1631, M1632, M1641,M1647,and M1651.
  For the ALi-chipset question, ALi suggests you refer to
  <http://www.ali.com.tw/>.
  
  The M1541 chipset can do AGP 1x and 2x, but note that there is an
  acknowledged incompatibility with Matrox G200 cards. Due to
  timing issues, this chipset cannot do AGP 2x with the G200.
  This is a hardware limitation. AGP 1x seems to be fine, though.

AGP_ALPHA_CORE
  No help

AGP_AMD
  This option gives you AGP support for the GLX component of
  X on AMD Irongate, 761, and 762 chipsets.

AGP_AMD64
  This option gives you AGP support for the GLX component of
  X using the on-CPU northbridge of the AMD Athlon64/Opteron CPUs.
  You still need an external AGP bridge like the AMD 8151, VIA
  K8T400M, SiS755. It may also support other AGP bridges when loaded
  with agp_try_unsupported=1.

AGP_ATI
  This option gives you AGP support for the GLX component of
  X on the ATI RadeonIGP family of chipsets.

AGP_EFFICEON
  This option gives you AGP support for the Transmeta Efficeon
  series processors with integrated northbridges.

AGP_HP_ZX1
  This option gives you AGP GART support for the HP ZX1 chipset
  for IA64 processors.

AGP_I460
  This option gives you AGP GART support for the Intel 460GX chipset
  for IA64 processors.

AGP_INTEL
  This option gives you AGP support for the GLX component of X
  on Intel 440LX/BX/GX, 815, 820, 830, 840, 845, 850, 860, 875,
  E7205 and E7505 chipsets and full support for the 810, 815, 830M,
  845G, 852GM, 855GM, 865G and I915 integrated graphics chipsets.

AGP_NVIDIA
  This option gives you AGP support for the GLX component of
  X on NVIDIA chipsets including nForce and nForce2

AGP_PARISC
  This option gives you AGP GART support for the HP Quicksilver
  AGP bus adapter on HP PA-RISC machines (Ok, just on the C8000
  workstation...)

AGP_SIS
  This option gives you AGP support for the GLX component of
  X on Silicon Integrated Systems [SiS] chipsets.
  
  Note that 5591/5592 AGP chipsets are NOT supported.

AGP_SWORKS
  Say Y here to support the Serverworks AGP card.  See
  <http://www.serverworks.com/> for product descriptions and images.

AGP_UNINORTH
  This option gives you AGP support for Apple machines with a
  UniNorth or U3 (Apple G5) bridge.

AGP_VIA
  This option gives you AGP support for the GLX component of
  X on VIA MVP3/Apollo Pro chipsets.

AHCI_BRCM
  This option enables support for the AHCI SATA3 controller found on
  Broadcom SoC's.
  
  If unsure, say N.

AHCI_CEVA
  This option enables support for the CEVA AHCI SATA.
  It can be found on the Xilinx Zynq UltraScale+ MPSoC.
  
  If unsure, say N.

AHCI_DA850
  This option enables support for the DaVinci DA850 SoC's
  onboard AHCI SATA.
  
  If unsure, say N.

AHCI_DM816
  This option enables support for the DaVinci DM816 SoC's
  onboard AHCI SATA controller.
  
  If unsure, say N.

AHCI_IMX
  This option enables support for the Freescale i.MX SoC's
  onboard AHCI SATA.
  
  If unsure, say N.

AHCI_MTK
  This option enables support for the MediaTek SoC's
  onboard AHCI SATA controller.
  
  If unsure, say N.

AHCI_MVEBU
  This option enables support for the Marvebu EBU SoC's
  onboard AHCI SATA.
  
  If unsure, say N.

AHCI_OCTEON
  This option enables support for Cavium Octeon SoC Serial ATA.
  
  If unsure, say N.

AHCI_QORIQ
  This option enables support for the Freescale QorIQ AHCI SoC's
  onboard AHCI SATA.
  
  If unsure, say N.

AHCI_ST
  This option enables support for ST AHCI SATA controller.
  
  If unsure, say N.

AHCI_SUNXI
  This option enables support for the Allwinner sunxi SoC's
  onboard AHCI SATA.
  
  If unsure, say N.

AHCI_TEGRA
  This option enables support for the NVIDIA Tegra SoC's
  onboard AHCI SATA.
  
  If unsure, say N.

AHCI_XGENE
  This option enables support for APM X-Gene SoC SATA host controller.

AIC79XX_BUILD_FIRMWARE
  This option should only be enabled if you are modifying the firmware
  source to the aic79xx driver and wish to have the generated firmware
  include files updated during a normal kernel build.  The assembler
  for the firmware requires lex and yacc or their equivalents, as well
  as the db v1 library.  You may have to install additional packages
  or modify the assembler Makefile or the files it includes if your
  build environment is different than that of the author.

AIC79XX_CMDS_PER_DEVICE
  Specify the number of commands you would like to allocate per SCSI
  device when Tagged Command Queueing (TCQ) is enabled on that device.
  
  This is an upper bound value for the number of tagged transactions
  to be used for any device.  The aic7xxx driver will automatically
  vary this number based on device behavior.  For devices with a
  fixed maximum, the driver will eventually lock to this maximum
  and display a console message indicating this value.
  
  Due to resource allocation issues in the Linux SCSI mid-layer, using
  a high number of commands per device may result in memory allocation
  failures when many devices are attached to the system.  For this reason,
  the default is set to 32.  Higher values may result in higher performance
  on some devices.  The upper bound is 253.  0 disables tagged queueing.
  
  Per device tag depth can be controlled via the kernel command line
  "tag_info" option.  See Documentation/scsi/aic79xx.rst for details.

AIC79XX_DEBUG_ENABLE
  Compile in aic79xx debugging code that can be useful in diagnosing
  driver errors.

AIC79XX_DEBUG_MASK
  Bit mask of debug options that is only valid if the
  CONFIG_AIC79XX_DEBUG_ENABLE option is enabled.  The bits in this mask
  are defined in the drivers/scsi/aic7xxx/aic79xx.h - search for the
  variable ahd_debug in that file to find them.

AIC79XX_REG_PRETTY_PRINT
  Compile in register value tables for the output of expanded register
  contents in diagnostics.  This make it much easier to understand debug
  output without having to refer to a data book and/or the aic7xxx.reg
  file.

AIC79XX_RESET_DELAY_MS
  The number of milliseconds to delay after an initial bus reset.
  The bus settle delay following all error recovery actions is
  dictated by the SCSI layer and is not affected by this value.
  
  Default: 5000 (5 seconds)

AIC7XXX_BUILD_FIRMWARE
  This option should only be enabled if you are modifying the firmware
  source to the aic7xxx driver and wish to have the generated firmware
  include files updated during a normal kernel build.  The assembler
  for the firmware requires lex and yacc or their equivalents, as well
  as the db v1 library.  You may have to install additional packages
  or modify the assembler Makefile or the files it includes if your
  build environment is different than that of the author.

AIC7XXX_CMDS_PER_DEVICE
  Specify the number of commands you would like to allocate per SCSI
  device when Tagged Command Queueing (TCQ) is enabled on that device.
  
  This is an upper bound value for the number of tagged transactions
  to be used for any device.  The aic7xxx driver will automatically
  vary this number based on device behavior.  For devices with a
  fixed maximum, the driver will eventually lock to this maximum
  and display a console message indicating this value.
  
  Due to resource allocation issues in the Linux SCSI mid-layer, using
  a high number of commands per device may result in memory allocation
  failures when many devices are attached to the system.  For this reason,
  the default is set to 32.  Higher values may result in higher performance
  on some devices.  The upper bound is 253.  0 disables tagged queueing.
  
  Per device tag depth can be controlled via the kernel command line
  "tag_info" option.  See Documentation/scsi/aic7xxx.rst for details.

AIC7XXX_DEBUG_ENABLE
  Compile in aic7xxx debugging code that can be useful in diagnosing
  driver errors.

AIC7XXX_DEBUG_MASK
  Bit mask of debug options that is only valid if the
  CONFIG_AIC7XXX_DEBUG_ENABLE option is enabled.  The bits in this mask
  are defined in the drivers/scsi/aic7xxx/aic7xxx.h - search for the
  variable ahc_debug in that file to find them.

AIC7XXX_REG_PRETTY_PRINT
  Compile in register value tables for the output of expanded register
  contents in diagnostics.  This make it much easier to understand debug
  output without having to refer to a data book and/or the aic7xxx.reg
  file.

AIC7XXX_RESET_DELAY_MS
  The number of milliseconds to delay after an initial bus reset.
  The bus settle delay following all error recovery actions is
  dictated by the SCSI layer and is not affected by this value.
  
  Default: 5000 (5 seconds)

AIC94XX_DEBUG
  Compiles the aic94xx driver in debug mode.  In debug mode,
  the driver prints some messages to the console.

AIO
  This option enables POSIX asynchronous I/O which may by used
  by some high performance threaded applications. Disabling
  this option saves about 7k.

AIRO
  This is the standard Linux driver to support Cisco/Aironet ISA and
  PCI 802.11 wireless cards.
  It supports the new 802.11b cards from Cisco (Cisco 34X, Cisco 35X
  - with or without encryption) as well as card before the Cisco
  acquisition (Aironet 4500, Aironet 4800, Aironet 4800B).
  
  This driver support both the standard Linux Wireless Extensions
  and Cisco proprietary API, so both the Linux Wireless Tools and the
  Cisco Linux utilities can be used to configure the card.
  
  The driver can be compiled as a module and will be named "airo".

AIRO_CS
  This is the standard Linux driver to support Cisco/Aironet PCMCIA
  802.11 wireless cards.  This driver is the same as the Aironet
  driver part of the Linux Pcmcia package.
  It supports the new 802.11b cards from Cisco (Cisco 34X, Cisco 35X
  - with or without encryption) as well as card before the Cisco
  acquisition (Aironet 4500, Aironet 4800, Aironet 4800B). It also
  supports OEM of Cisco such as the DELL TrueMobile 4800 and Xircom
  802.11b cards.
  
  This driver support both the standard Linux Wireless Extensions
  and Cisco proprietary API, so both the Linux Wireless Tools and the
  Cisco Linux utilities can be used to configure the card.

AIX_PARTITION
  Say Y here if you would like to be able to read the hard disk
  partition table format used by IBM or Motorola PowerPC machines
  running AIX.  AIX actually uses a Logical Volume Manager, where
  "logical volumes" can be spread across one or multiple disks,
  but this driver works only for the simple case of partitions which
  are contiguous.
  Otherwise, say N.

AK09911
  Deprecated: AK09911 is now supported by AK8975 driver.

AK8974
  Say yes here to build support for Asahi Kasei AK8974, AMI305 or
  AMI306 I2C-based 3-axis magnetometer chips.
  
  To compile this driver as a module, choose M here: the module
  will be called ak8974.

AK8975
  Say yes here to build support for Asahi Kasei AK8975, AK8963,
  AK09911 or AK09912 3-Axis Magnetometer.
  
  To compile this driver as a module, choose M here: the module
  will be called ak8975.

AL3010
  Say Y here if you want to build a driver for the Dyna Image AL3010
  ambient light sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called al3010.

AL3320A
  Say Y here if you want to build a driver for the Dyna Image AL3320A
  ambient light sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called al3320a.

ALIENWARE_WMI
  This is a driver for controlling Alienware BIOS driven
  features.  It exposes an interface for controlling the AlienFX
  zones on Alienware machines that don't contain a dedicated AlienFX
  USB MCU such as the X51 and X51-R2.

ALIM1535_WDT
  This is the driver for the hardware watchdog on the ALi M1535 PMU.
  
  To compile this driver as a module, choose M here: the
  module will be called alim1535_wdt.
  
  Most people will say N.

ALIM7101_WDT
  This is the driver for the hardware watchdog on the ALi M7101 PMU
  as used in the x86 Cobalt servers and also found in some
  SPARC Netra servers too.
  
  To compile this driver as a module, choose M here: the
  module will be called alim7101_wdt.
  
  Most people will say N.

ALIX
  This option enables system support for the PCEngines ALIX.
  At present this just sets up LEDs for GPIO control on
  ALIX2/3/6 boards.  However, other system specific setup should
  get added here.
  
  Note: You must still enable the drivers for GPIO and LED support
  (GPIO_CS5535 & LEDS_GPIO) to actually use the LEDs
  
  Note: You have to set alix.force=1 for boards with Award BIOS.

ALLOW_DEV_COREDUMP
  This option controls if the device coredump mechanism is available or
  not; if disabled, the mechanism will be omitted even if drivers that
  can use it are enabled.
  Say 'N' for more sensitive systems or systems that don't want
  to ever access the information to not have the code, nor keep any
  data.
  
  If unsure, say Y.

ALPINE_MSI
  No help

ALTERA_FREEZE_BRIDGE
  Say Y to enable drivers for Altera FPGA Freeze bridges.  A
  freeze bridge is a bridge that exists in the FPGA fabric to
  isolate one region of the FPGA from the busses while that
  region is being reprogrammed.

ALTERA_MBOX
  An implementation of the Altera Mailbox soft core. It is used
  to send message between processors. Say Y here if you want to use the
  Altera mailbox support.

ALTERA_MSGDMA
  Enable support for Altera / Intel mSGDMA controller.

ALTERA_PR_IP_CORE
  Core driver support for Altera Partial Reconfiguration IP component

ALTERA_PR_IP_CORE_PLAT
  Platform driver support for Altera Partial Reconfiguration IP
  component

ALTERA_STAPL
  An Altera FPGA module. Say Y when you want to support this tool.

ALTERA_TSE
  This driver supports the Altera Triple-Speed (TSE) Ethernet MAC.
  
  To compile this driver as a module, choose M here. The module
  will be called alteratse.

ALX
  This driver supports the Qualcomm Atheros L1F ethernet adapter,
  i.e. the following chipsets:
  
  1969:1091 - AR8161 Gigabit Ethernet
  1969:1090 - AR8162 Fast Ethernet
  1969:10A1 - AR8171 Gigabit Ethernet
  1969:10A0 - AR8172 Fast Ethernet
  
  To compile this driver as a module, choose M here.  The module
  will be called alx.

AL_FIC
  Support Amazon's Annapurna Labs Fabric Interrupt Controller.

AM2315
  If you say yes here you get support for the Aosong AM2315
  relative humidity and ambient temperature sensor.
  
  This driver can also be built as a module. If so, the module will
  be called am2315.

AM335X_CONTROL_USB
  No help

AM335X_PHY_USB
  This driver provides PHY support for that phy which part for the
  AM335x SoC.

AMBA_PL08X
  Say yes if your platform has a PL08x DMAC device which can
  provide DMA engine support. This includes the original ARM
  PL080 and PL081, Samsungs PL080 derivative and Faraday
  Technology's FTDMAC020 PL080 derivative.

AMCC_PPC440SPE_ADMA
  Enable support for the AMCC PPC440SPe RAID engines.

AMD8111_ETH
  If you have an AMD 8111-based PCI LANCE ethernet card,
  answer Y here.
  
  To compile this driver as a module, choose M here. The module
  will be called amd8111e.

AMDTEE
  This implements AMD's Trusted Execution Environment (TEE) driver.

AMD_IOMMU
  With this option you can enable support for AMD IOMMU hardware in
  your system. An IOMMU is a hardware component which provides
  remapping of DMA memory accesses from devices. With an AMD IOMMU you
  can isolate the DMA memory of different devices and protect the
  system from misbehaving device drivers or hardware.
  
  You can find out if your system has an AMD IOMMU if you look into
  your BIOS for an option to enable it or if you have an IVRS ACPI
  table.

AMD_IOMMU_DEBUGFS
  !!!WARNING!!!  !!!WARNING!!!  !!!WARNING!!!  !!!WARNING!!!
  
  DO NOT ENABLE THIS OPTION UNLESS YOU REALLY, -REALLY- KNOW WHAT YOU ARE DOING!!!
  Exposes AMD IOMMU device internals in DebugFS.
  
  This option is -NOT- intended for production environments, and should
  not generally be enabled.

AMD_IOMMU_V2
  This option enables support for the AMD IOMMUv2 features of the IOMMU
  hardware. Select this option if you want to use devices that support
  the PCI PRI and PASID interface.

AMD_MEM_ENCRYPT
  Say yes to enable support for the encryption of system memory.
  This requires an AMD processor that supports Secure Memory
  Encryption (SME).

AMD_MEM_ENCRYPT_ACTIVE_BY_DEFAULT
  Say yes to have system memory encrypted by default if running on
  an AMD processor that supports Secure Memory Encryption (SME).
  
  If set to Y, then the encryption of system memory can be
  deactivated with the mem_encrypt=off command line option.
  
  If set to N, then the encryption of system memory can be
  activated with the mem_encrypt=on command line option.

AMD_NB
  No help

AMD_NUMA
  Enable AMD NUMA node topology detection.  You should say Y here if
  you have a multi processor AMD system. This uses an old method to
  read the NUMA configuration directly from the builtin Northbridge
  of Opteron. It is recommended to use X86_64_ACPI_NUMA instead,
  which also takes priority if both are compiled in.

AMD_PHY
  Currently supports the am79c874

AMD_PMC
  The driver provides support for AMD Power Management Controller
  primarily responsible for S2Idle transactions that are driven from
  a platform firmware running on SMU. This driver also provides a debug
  mechanism to investigate the S2Idle transactions and failures.
  
  Say Y or M here if you have a notebook powered by AMD RYZEN CPU/APU.
  
  If you choose to compile this driver as a module the module will be
  called amd-pmc.

AMD_SFH_HID
  If you say yes to this option, support will be included for the
  AMD Sensor Fusion Hub.
  This driver will enable sensors functionality on AMD platforms
  starting from 17h family of RYZEN parts.
  
  This driver can also be built as a module. If so, the module will
  be called amd-sfh.
  Say Y or M here if you want to support AMD SFH. If unsure, say N.

AMD_XGBE
  This driver supports the AMD 10GbE Ethernet device found on an
  AMD SoC.
  
  To compile this driver as a module, choose M here: the module
  will be called amd-xgbe.

AMD_XGBE_DCB
  Say Y here to enable Data Center Bridging (DCB) support in the
  driver.
  
  If unsure, say N.

AMD_XGBE_HAVE_ECC
  No help

AMIGA_FLOPPY
  No help

AMIGA_PARTITION
  Say Y here if you would like to use hard disks under Linux which
  were partitioned under AmigaOS.

AMIGA_Z2RAM
  This enables support for using Chip RAM and Zorro II RAM as a
  ramdisk or as a swap partition. Say Y if you want to include this
  driver in the kernel.
  
  To compile this driver as a module, choose M here: the
  module will be called z2ram.

AMILO_RFKILL
  This is a driver for enabling wifi on some Fujitsu-Siemens Amilo
  laptops.

AMLOGIC_THERMAL
  If you say yes here you get support for Amlogic Thermal
  for G12 SoC Family.
  
  This driver can also be built as a module. If so, the module will
  be called amlogic_thermal.

AMX3_PM
  Enable power management on AM335x and AM437x. Required for suspend to mem
  and standby states on both AM335x and AM437x platforms and for deeper cpuidle
  c-states on AM335x. Also required for rtc and ddr in self-refresh low
  power mode on AM437x platforms.

ANDROID
  Enable support for various drivers needed on the Android platform

ANDROID_BINDERFS
  Binderfs is a pseudo-filesystem for the Android Binder IPC driver
  which can be mounted per-ipc namespace allowing to run multiple
  instances of Android.
  Each binderfs mount initially only contains a binder-control device.
  It can be used to dynamically allocate new binder IPC devices via
  ioctls.

ANDROID_BINDER_DEVICES
  Default value for the binder.devices parameter.
  
  The binder.devices parameter is a comma-separated list of strings
  that specifies the names of the binder device nodes that will be
  created. Each binder device has its own context manager, and is
  therefore logically separated from the other devices.

ANDROID_BINDER_IPC
  Binder is used in Android for both communication between processes,
  and remote method invocation.
  
  This means one Android process can call a method/routine in another
  Android process, using Binder to identify, invoke and pass arguments
  between said processes.

ANDROID_BINDER_IPC_SELFTEST
  This feature allows binder selftest to run.
  
  Binder selftest checks the allocation and free of binder buffers
  exhaustively with combinations of various buffer sizes and
  alignments.

ANSLCD
  No help

APB_TIMER
  APB timer is the replacement for 8254, HPET on X86 MID platforms.
  The APBT provides a stable time base on SMP
  systems, unlike the TSC, but it is more expensive to access,
  as it is off-chip. APB timers are always running regardless of CPU
  C states, they are used as per CPU clockevent device when possible.

APDS9300
  Say Y here if you want to build a driver for the Avago APDS9300
  ambient light sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called apds9300.

APDS9802ALS
  If you say yes here you get support for the ALS APDS9802 ambient
  light sensor.
  
  This driver can also be built as a module.  If so, the module
  will be called apds9802als.

APDS9960
  Say Y here to build I2C interface support for the Avago
  APDS9960 gesture/RGB/ALS/proximity sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called apds9960

APM
  APM is a BIOS specification for saving power using several different
  techniques. This is mostly useful for battery powered laptops with
  APM compliant BIOSes. If you say Y here, the system time will be
  reset after a RESUME operation, the /proc/apm device will provide
  battery status information, and user-space programs will receive
  notification of APM "events" (e.g. battery status change).
  
  If you select "Y" here, you can disable actual use of the APM
  BIOS by passing the "apm=off" option to the kernel at boot time.
  
  Note that the APM support is almost completely disabled for
  machines with more than one CPU.
  
  In order to use APM, you will need supporting software. For location
  and more information, read <file:Documentation/power/apm-acpi.rst>
  and the Battery Powered Linux mini-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>.
  
  This driver does not spin down disk drives (see the hdparm(8)
  manpage ("man 8 hdparm") for that), and it doesn't turn off
  VESA-compliant "green" monitors.
  
  This driver does not support the TI 4000M TravelMate and the ACER
  486/DX4/75 because they don't have compliant BIOSes. Many "green"
  desktop machines also don't have compliant BIOSes, and this driver
  may cause those machines to panic during the boot phase.
  
  Generally, if you don't have a battery in your machine, there isn't
  much point in using this driver and you should say N. If you get
  random kernel OOPSes or reboots that don't seem to be related to
  anything, try disabling/enabling this option (or disabling/enabling
  APM in your BIOS).
  
  Some other things you should try when experiencing seemingly random,
  "weird" problems:
  
  1) make sure that you have enough swap space and that it is
  enabled.
  2) pass the "no-hlt" option to the kernel
  3) switch on floating point emulation in the kernel and pass
  the "no387" option to the kernel
  4) pass the "floppy=nodma" option to the kernel
  5) pass the "mem=4M" option to the kernel (thereby disabling
  all but the first 4 MB of RAM)
  6) make sure that the CPU is not over clocked.
  7) read the sig11 FAQ at <http://www.bitwizard.nl/sig11/>
  8) disable the cache from your BIOS settings
  9) install a fan for the video card or exchange video RAM
  10) install a better fan for the CPU
  11) exchange RAM chips
  12) exchange the motherboard.
  
  To compile this driver as a module, choose M here: the
  module will be called apm.

APM_ALLOW_INTS
  Normally we disable external interrupts while we are making calls to
  the APM BIOS as a measure to lessen the effects of a badly behaving
  BIOS implementation.  The BIOS should reenable interrupts if it
  needs to.  Unfortunately, some BIOSes do not -- especially those in
  many of the newer IBM Thinkpads.  If you experience hangs when you
  suspend, try setting this to Y.  Otherwise, say N.

APM_CPU_IDLE
  Enable calls to APM CPU Idle/CPU Busy inside the kernel's idle loop.
  On some machines, this can activate improved power savings, such as
  a slowed CPU clock rate, when the machine is idle. These idle calls
  are made after the idle loop has run for some length of time (e.g.,
  333 mS). On some machines, this will cause a hang at boot time or
  whenever the CPU becomes idle. (On machines with more than one CPU,
  this option does nothing.)

APM_DISPLAY_BLANK
  Enable console blanking using the APM. Some laptops can use this to
  turn off the LCD backlight when the screen blanker of the Linux
  virtual console blanks the screen. Note that this is only used by
  the virtual console screen blanker, and won't turn off the backlight
  when using the X Window system. This also doesn't have anything to
  do with your VESA-compliant power-saving monitor. Further, this
  option doesn't work for all laptops -- it might not turn off your
  backlight at all, or it might print a lot of errors to the console,
  especially if you are using gpm.

APM_DO_ENABLE
  Enable APM features at boot time. From page 36 of the APM BIOS
  specification: "When disabled, the APM BIOS does not automatically
  power manage devices, enter the Standby State, enter the Suspend
  State, or take power saving steps in response to CPU Idle calls."
  This driver will make CPU Idle calls when Linux is idle (unless this
  feature is turned off -- see "Do CPU IDLE calls", below). This
  should always save battery power, but more complicated APM features
  will be dependent on your BIOS implementation. You may need to turn
  this option off if your computer hangs at boot time when using APM
  support, or if it beeps continuously instead of suspending. Turn
  this off if you have a NEC UltraLite Versa 33/C or a Toshiba
  T400CDT. This is off by default since most machines do fine without
  this feature.

APM_EMULATION
  APM is a BIOS specification for saving power using several different
  techniques. This is mostly useful for battery powered laptops with
  APM compliant BIOSes. If you say Y here, the system time will be
  reset after a RESUME operation, the /proc/apm device will provide
  battery status information, and user-space programs will receive
  notification of APM "events" (e.g. battery status change).
  
  In order to use APM, you will need supporting software. For location
  and more information, read <file:Documentation/power/apm-acpi.rst>
  and the Battery Powered Linux mini-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>.
  
  This driver does not spin down disk drives (see the hdparm(8)
  manpage ("man 8 hdparm") for that), and it doesn't turn off
  VESA-compliant "green" monitors.
  
  Generally, if you don't have a battery in your machine, there isn't
  much point in using this driver and you should say N. If you get
  random kernel OOPSes or reboots that don't seem to be related to
  anything, try disabling/enabling this option (or disabling/enabling
  APM in your BIOS).

APM_IGNORE_USER_SUSPEND
  This option will ignore USER SUSPEND requests. On machines with a
  compliant APM BIOS, you want to say N. However, on the NEC Versa M
  series notebooks, it is necessary to say Y because of a BIOS bug.

APM_POWER
  Say Y here to enable support APM status emulation using
  battery class devices.

APNE
  If you have a PCMCIA NE2000 compatible adapter, say Y.  Otherwise,
  say N.
  
  To compile this driver as a module, choose M here: the module
  will be called apne.

APPLE_AIRPORT
  Say Y here to support the Airport 802.11b wireless Ethernet hardware
  built into the Macintosh iBook and other recent PowerPC-based
  Macintosh machines. This is essentially a Lucent Orinoco card with
  a non-standard interface.
  
  This driver does not support the Airport Extreme (802.11b/g). Use
  the BCM43xx driver for Airport Extreme cards.

APPLE_GMUX
  This driver provides support for the gmux device found on many
  Apple laptops, which controls the display mux for the hybrid
  graphics as well as the backlight. Currently only backlight
  control is supported by the driver.

APPLE_MFI_FASTCHARGE
  Say Y here if you want to control whether iOS devices will
  fast charge from the USB interface, as implemented in "MFi"
  chargers.
  
  It is safe to say M here.

APPLE_PROPERTIES
  Retrieve properties from EFI on Apple Macs and assign them to
  devices, allowing for improved support of Apple hardware.
  Properties that would otherwise be missing include the
  Thunderbolt Device ROM and GPU configuration data.
  
  If unsure, say Y if you have a Mac.  Otherwise N.

APPLICOM
  This driver provides the kernel-side support for the intelligent
  fieldbus cards made by Applicom International. More information
  about these cards can be found on the WWW at the address
  <https://www.applicom-int.com/>, or by email from David Woodhouse
  <dwmw2@infradead.org>.
  
  To compile this driver as a module, choose M here: the
  module will be called applicom.
  
  If unsure, say N.

APQ_GCC_8084
  Support for the global clock controller on apq8084 devices.
  Say Y if you want to use peripheral devices such as UART, SPI,
  i2c, USB, SD/eMMC, SATA, PCIe, etc.

APQ_MMCC_8084
  Support for the multimedia clock controller on apq8084 devices.
  Say Y if you want to support multimedia devices such as display,
  graphics, video encode/decode, camera, etc.

AQTION
  This enables the support for the aQuantia AQtion(tm) Ethernet card.

AQUANTIA_PHY
  Currently supports the Aquantia AQ1202, AQ2104, AQR105, AQR405

AR5523
  This module add support for AR5523 based USB dongles such as D-Link
  DWL-G132, Netgear WPN111 and many more.

AR7_WDT
  Hardware driver for the TI AR7 Watchdog Timer.

ARCH_32BIT_OFF_T
  All new 32-bit architectures should have 64-bit off_t type on
  userspace side which corresponds to the loff_t kernel type. This
  is the requirement for modern ABIs. Some existing architectures
  still support 32-bit off_t. This option is enabled for all such
  architectures explicitly.

ARCH_BINFMT_ELF_STATE
  No help

ARCH_CLOCKSOURCE_DATA
  No help

ARCH_CLOCKSOURCE_INIT
  No help

ARCH_CPUIDLE_HALTPOLL
  If virtualized under KVM, disable host haltpoll.

ARCH_DMA_ADDR_T_64BIT
  No help

ARCH_EMEV2
  No help

ARCH_ENABLE_HUGEPAGE_MIGRATION
  No help

ARCH_ENABLE_MEMORY_HOTPLUG
  No help

ARCH_ENABLE_MEMORY_HOTREMOVE
  No help

ARCH_ENABLE_SPLIT_PMD_PTLOCK
  No help

ARCH_ENABLE_THP_MIGRATION
  No help

ARCH_FLATMEM_ENABLE
  No help

ARCH_HAS_ACPI_TABLE_UPGRADE
  No help

ARCH_HAS_ADD_PAGES
  No help

ARCH_HAS_ASYNC_TX_FIND_CHANNEL
  No help

ARCH_HAS_BINFMT_FLAT
  No help

ARCH_HAS_CACHE_LINE_SIZE
  No help

ARCH_HAS_COPY_MC
  No help

ARCH_HAS_CPU_RELAX
  No help

ARCH_HAS_DEBUG_VIRTUAL
  No help

ARCH_HAS_DEBUG_VM_PGTABLE
  An architecture should select this when it can successfully
  build and run DEBUG_VM_PGTABLE.

ARCH_HAS_DEBUG_WX
  No help

ARCH_HAS_DEVMEM_IS_ALLOWED
  No help

ARCH_HAS_DMA_CLEAR_UNCACHED
  No help

ARCH_HAS_DMA_COHERENCE_H
  No help

ARCH_HAS_DMA_MAP_DIRECT
  No help

ARCH_HAS_DMA_MARK_CLEAN
  No help

ARCH_HAS_DMA_PREP_COHERENT
  No help

ARCH_HAS_DMA_SET_MASK
  No help

ARCH_HAS_DMA_SET_UNCACHED
  No help

ARCH_HAS_DMA_WRITE_COMBINE
  No help

ARCH_HAS_EARLY_DEBUG
  If an architecture can definitely handle entering the debugger
  when early_param's are parsed then it select this config.
  Otherwise, if "kgdbwait" is passed on the kernel command line it
  won't actually be processed until dbg_late_init() just after the
  call to kgdb_arch_late() is made.
  
  NOTE: Even if this isn't selected by an architecture we will
  still try to register kgdb to handle breakpoints and crashes
  when early_param's are parsed, we just won't act on the
  "kgdbwait" parameter until dbg_late_init().  If you get a
  crash and try to drop into kgdb somewhere between these two
  places you might or might not end up being able to use kgdb
  depending on exactly how far along the architecture has initted.

ARCH_HAS_ELF_RANDOMIZE
  An architecture supports choosing randomized locations for
  stack, mmap, brk, and ET_DYN. Defined functions:
  - arch_mmap_rnd()
  - arch_randomize_brk()

ARCH_HAS_FAST_MULTIPLIER
  No help

ARCH_HAS_FILTER_PGPROT
  No help

ARCH_HAS_FORCE_DMA_UNENCRYPTED
  No help

ARCH_HAS_FORTIFY_SOURCE
  An architecture should select this when it can successfully
  build and run with CONFIG_FORTIFY_SOURCE.

ARCH_HAS_GCOV_PROFILE_ALL
  No help

ARCH_HAS_GIGANTIC_PAGE
  No help

ARCH_HAS_HUGEPD
  No help

ARCH_HAS_KCOV
  An architecture should select this when it can successfully
  build and run with CONFIG_KCOV. This typically requires
  disabling instrumentation for some early boot code.

ARCH_HAS_KEEPINITRD
  No help

ARCH_HAS_KEXEC_PURGATORY
  No help

ARCH_HAS_MEMBARRIER_CALLBACKS
  No help

ARCH_HAS_MEMBARRIER_SYNC_CORE
  No help

ARCH_HAS_MEMREMAP_COMPAT_ALIGN
  No help

ARCH_HAS_MEM_ENCRYPT
  No help

ARCH_HAS_MMIOWB
  No help

ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE
  No help

ARCH_HAS_PHYS_TO_DMA
  No help

ARCH_HAS_PKEYS
  No help

ARCH_HAS_PMEM_API
  No help

ARCH_HAS_PTE_DEVMAP
  No help

ARCH_HAS_PTE_SPECIAL
  No help

ARCH_HAS_RELR
  No help

ARCH_HAS_RESET_CONTROLLER
  No help

ARCH_HAS_RESTRICTED_VIRTIO_MEMORY_ACCESS
  This option is selected if the architecture may need to enforce
  VIRTIO_F_ACCESS_PLATFORM

ARCH_HAS_SCALED_CPUTIME
  No help

ARCH_HAS_SETUP_DMA_OPS
  No help

ARCH_HAS_SET_DIRECT_MAP
  No help

ARCH_HAS_SET_MEMORY
  No help

ARCH_HAS_STRICT_KERNEL_RWX
  No help

ARCH_HAS_STRICT_MODULE_RWX
  No help

ARCH_HAS_SYNC_CORE_BEFORE_USERMODE
  No help

ARCH_HAS_SYNC_DMA_FOR_CPU
  No help

ARCH_HAS_SYNC_DMA_FOR_CPU_ALL
  No help

ARCH_HAS_SYNC_DMA_FOR_DEVICE
  No help

ARCH_HAS_SYSCALL_WRAPPER
  No help

ARCH_HAS_TEARDOWN_DMA_OPS
  No help

ARCH_HAS_TICK_BROADCAST
  No help

ARCH_HAS_UACCESS_FLUSHCACHE
  No help

ARCH_HAS_UBSAN_SANITIZE_ALL
  No help

ARCH_HAS_VDSO_DATA
  No help

ARCH_HAVE_CUSTOM_GPIO_H
  Selecting this config option from the architecture Kconfig allows
  the architecture to provide a custom asm/gpio.h implementation
  overriding the default implementations.  New uses of this are
  strongly discouraged.

ARCH_HAVE_ELF_PROT
  No help

ARCH_HAVE_NMI_SAFE_CMPXCHG
  No help

ARCH_HIBERNATION_HEADER
  No help

ARCH_HIBERNATION_POSSIBLE
  No help

ARCH_INLINE_READ_LOCK
  No help

ARCH_INLINE_READ_LOCK_BH
  No help

ARCH_INLINE_READ_LOCK_IRQ
  No help

ARCH_INLINE_READ_LOCK_IRQSAVE
  No help

ARCH_INLINE_READ_TRYLOCK
  No help

ARCH_INLINE_READ_UNLOCK
  No help

ARCH_INLINE_READ_UNLOCK_BH
  No help

ARCH_INLINE_READ_UNLOCK_IRQ
  No help

ARCH_INLINE_READ_UNLOCK_IRQRESTORE
  No help

ARCH_INLINE_SPIN_LOCK
  No help

ARCH_INLINE_SPIN_LOCK_BH
  No help

ARCH_INLINE_SPIN_LOCK_IRQ
  No help

ARCH_INLINE_SPIN_LOCK_IRQSAVE
  No help

ARCH_INLINE_SPIN_TRYLOCK
  No help

ARCH_INLINE_SPIN_TRYLOCK_BH
  No help

ARCH_INLINE_SPIN_UNLOCK
  No help

ARCH_INLINE_SPIN_UNLOCK_BH
  No help

ARCH_INLINE_SPIN_UNLOCK_IRQ
  No help

ARCH_INLINE_SPIN_UNLOCK_IRQRESTORE
  No help

ARCH_INLINE_WRITE_LOCK
  No help

ARCH_INLINE_WRITE_LOCK_BH
  No help

ARCH_INLINE_WRITE_LOCK_IRQ
  No help

ARCH_INLINE_WRITE_LOCK_IRQSAVE
  No help

ARCH_INLINE_WRITE_TRYLOCK
  No help

ARCH_INLINE_WRITE_UNLOCK
  No help

ARCH_INLINE_WRITE_UNLOCK_BH
  No help

ARCH_INLINE_WRITE_UNLOCK_IRQ
  No help

ARCH_INLINE_WRITE_UNLOCK_IRQRESTORE
  No help

ARCH_KEEP_MEMBLOCK
  No help

ARCH_MAY_HAVE_PC_FDC
  No help

ARCH_MEMORY_PROBE
  This option enables a sysfs memory/probe interface for testing.
  See Documentation/admin-guide/mm/memory-hotplug.rst for more information.
  If you are unsure how to answer this question, answer N.

ARCH_MIGHT_HAVE_ACPI_PDC
  No help

ARCH_MIGHT_HAVE_PC_PARPORT
  Select this config option from the architecture Kconfig if
  the architecture might have PC parallel port hardware.

ARCH_MIGHT_HAVE_PC_SERIO
  Select this config option from the architecture Kconfig if
  the architecture might use a PC serio device (i8042) to
  communicate with keyboard, mouse, etc.

ARCH_MMAP_RND_BITS
  This value can be used to select the number of bits to use to
  determine the random offset to the base address of vma regions
  resulting from mmap allocations. This value will be bounded
  by the architecture's minimum and maximum supported values.
  
  This value can be changed after boot using the
  /proc/sys/vm/mmap_rnd_bits tunable

ARCH_MMAP_RND_BITS_DEFAULT
  No help

ARCH_MMAP_RND_BITS_MAX
  No help

ARCH_MMAP_RND_BITS_MIN
  No help

ARCH_MMAP_RND_COMPAT_BITS
  This value can be used to select the number of bits to use to
  determine the random offset to the base address of vma regions
  resulting from mmap allocations for compatible applications This
  value will be bounded by the architecture's minimum and maximum
  supported values.
  
  This value can be changed after boot using the
  /proc/sys/vm/mmap_rnd_compat_bits tunable

ARCH_MMAP_RND_COMPAT_BITS_DEFAULT
  No help

ARCH_MMAP_RND_COMPAT_BITS_MAX
  No help

ARCH_MMAP_RND_COMPAT_BITS_MIN
  No help

ARCH_NEEDS_CPU_IDLE_COUPLED
  No help

ARCH_NO_PREEMPT
  No help

ARCH_NO_SG_CHAIN
  No help

ARCH_NO_SWAP
  No help

ARCH_OPTIONAL_KERNEL_RWX
  No help

ARCH_OPTIONAL_KERNEL_RWX_DEFAULT
  No help

ARCH_PROC_KCORE_TEXT
  No help

ARCH_R7S72100
  No help

ARCH_R7S9210
  No help

ARCH_R8A73A4
  No help

ARCH_R8A7740
  No help

ARCH_R8A7742
  No help

ARCH_R8A7743
  No help

ARCH_R8A7744
  No help

ARCH_R8A7745
  No help

ARCH_R8A77470
  No help

ARCH_R8A774A1
  This enables support for the Renesas RZ/G2M SoC.

ARCH_R8A774B1
  This enables support for the Renesas RZ/G2N SoC.

ARCH_R8A774C0
  This enables support for the Renesas RZ/G2E SoC.

ARCH_R8A774E1
  This enables support for the Renesas RZ/G2H SoC.

ARCH_R8A7778
  No help

ARCH_R8A7779
  No help

ARCH_R8A7790
  No help

ARCH_R8A7791
  No help

ARCH_R8A7792
  No help

ARCH_R8A7793
  No help

ARCH_R8A7794
  No help

ARCH_R8A77950
  This enables support for the Renesas R-Car H3 SoC (revision 1.x).

ARCH_R8A77951
  This enables support for the Renesas R-Car H3 SoC (revisions 2.0 and
  later).

ARCH_R8A77960
  This enables support for the Renesas R-Car M3-W SoC.

ARCH_R8A77961
  This enables support for the Renesas R-Car M3-W+ SoC.

ARCH_R8A77965
  This enables support for the Renesas R-Car M3-N SoC.

ARCH_R8A77970
  This enables support for the Renesas R-Car V3M SoC.

ARCH_R8A77980
  This enables support for the Renesas R-Car V3H SoC.

ARCH_R8A77990
  This enables support for the Renesas R-Car E3 SoC.

ARCH_R8A77995
  This enables support for the Renesas R-Car D3 SoC.

ARCH_R8A779A0
  This enables support for the Renesas R-Car V3U SoC.

ARCH_R9A06G032
  No help

ARCH_RANDOM
  Enable the x86 architectural RDRAND instruction
  (Intel Bull Mountain technology) to generate random numbers.
  If supported, this is a high bandwidth, cryptographically
  secure hardware random number generator.

ARCH_RCAR_GEN1
  No help

ARCH_RCAR_GEN2
  No help

ARCH_RCAR_GEN3
  No help

ARCH_RMOBILE
  No help

ARCH_RZN1
  No help

ARCH_SELECT_MEMORY_MODEL
  No help

ARCH_SH73A0
  No help

ARCH_SPARSEMEM_DEFAULT
  No help

ARCH_SPARSEMEM_ENABLE
  No help

ARCH_SPLIT_ARG64
  If a 32-bit architecture requires 64-bit arguments to be split into
  pairs of 32-bit arguments, select this option.

ARCH_STACKWALK
  No help

ARCH_SUPPORTS_ACPI
  No help

ARCH_SUPPORTS_ATOMIC_RMW
  No help

ARCH_SUPPORTS_DEBUG_PAGEALLOC
  No help

ARCH_SUPPORTS_INT128
  No help

ARCH_SUPPORTS_KMAP_LOCAL_FORCE_MAP
  No help

ARCH_SUPPORTS_MEMORY_FAILURE
  No help

ARCH_SUPPORTS_NUMA_BALANCING
  No help

ARCH_SUPPORTS_RT
  No help

ARCH_SUPPORTS_SHADOW_CALL_STACK
  An architecture should select this if it supports Clang's Shadow
  Call Stack and implements runtime support for shadow stack
  switching.

ARCH_SUPPORTS_UPROBES
  No help

ARCH_SUSPEND_POSSIBLE
  No help

ARCH_TASK_STRUCT_ALLOCATOR
  No help

ARCH_TASK_STRUCT_ON_STACK
  No help

ARCH_TEGRA_114_SOC
  Support for NVIDIA Tegra T114 processor family, based on the
  ARM CortexA15MP CPU

ARCH_TEGRA_124_SOC
  Support for NVIDIA Tegra T124 processor family, based on the
  ARM CortexA15MP CPU

ARCH_TEGRA_132_SOC
  Enable support for NVIDIA Tegra132 SoC, based on the Denver
  ARMv8 CPU.  The Tegra132 SoC is similar to the Tegra124 SoC,
  but contains an NVIDIA Denver CPU complex in place of
  Tegra124's "4+1" Cortex-A15 CPU complex.

ARCH_TEGRA_186_SOC
  Enable support for the NVIDIA Tegar186 SoC. The Tegra186 features a
  combination of Denver and Cortex-A57 CPU cores and a GPU based on
  the Pascal architecture. It contains an ADSP with a Cortex-A9 CPU
  used for audio processing, hardware video encoders/decoders with
  multi-format support, ISP for image capture processing and BPMP for
  power management.

ARCH_TEGRA_194_SOC
  Enable support for the NVIDIA Tegra194 SoC.

ARCH_TEGRA_210_SOC
  Enable support for the NVIDIA Tegra210 SoC. Also known as Tegra X1,
  the Tegra210 has four Cortex-A57 cores paired with four Cortex-A53
  cores in a switched configuration. It features a GPU of the Maxwell
  architecture with support for DX11, SM4, OpenGL 4.5, OpenGL ES 3.1
  and providing 256 CUDA cores. It supports hardware-accelerated en-
  and decoding of various video standards including H.265, H.264 and
  VP8 at 4K resolution and up to 60 fps.
  
  Besides the multimedia features it also comes with a variety of I/O
  controllers, such as GPIO, I2C, SPI, SDHCI, PCIe, SATA and XHCI, to
  name only a few.

ARCH_TEGRA_234_SOC
  Enable support for the NVIDIA Tegra234 SoC.

ARCH_TEGRA_2x_SOC
  Support for NVIDIA Tegra AP20 and T20 processors, based on the
  ARM CortexA9MP CPU and the ARM PL310 L2 cache controller

ARCH_TEGRA_3x_SOC
  Support for NVIDIA Tegra T30 processor family, based on the
  ARM CortexA9MP CPU and the ARM PL310 L2 cache controller

ARCH_THREAD_STACK_ALLOCATOR
  No help

ARCH_USES_HIGH_VMA_FLAGS
  No help

ARCH_USES_PG_UNCACHED
  No help

ARCH_USE_BUILTIN_BSWAP
  Modern versions of GCC (since 4.4) have builtin functions
  for handling byte-swapping. Using these, instead of the old
  inline assembler that the architecture code provides in the
  __arch_bswapXX() macros, allows the compiler to see what's
  happening and offers more opportunity for optimisation. In
  particular, the compiler will be able to combine the byteswap
  with a nearby load or store and use load-and-swap or
  store-and-swap instructions if the architecture has them. It
  should almost *never* result in code which is worse than the
  hand-coded assembler in <asm/swab.h>.  But just in case it
  does, the use of the builtins is optional.
  
  Any architecture with load-and-swap or store-and-swap
  instructions should set this. And it shouldn't hurt to set it
  on architectures that don't have such instructions.

ARCH_USE_CMPXCHG_LOCKREF
  No help

ARCH_USE_GNU_PROPERTY
  No help

ARCH_USE_MEMREMAP_PROT
  No help

ARCH_USE_QUEUED_RWLOCKS
  No help

ARCH_USE_QUEUED_SPINLOCKS
  No help

ARCH_USE_SYM_ANNOTATIONS
  No help

ARCH_WANTS_DYNAMIC_TASK_STRUCT
  No help

ARCH_WANTS_THP_SWAP
  No help

ARCH_WANT_BATCHED_UNMAP_TLB_FLUSH
  No help

ARCH_WANT_COMPAT_IPC_PARSE_VERSION
  No help

ARCH_WANT_DEFAULT_BPF_JIT
  No help

ARCH_WANT_DEFAULT_TOPDOWN_MMAP_LAYOUT
  No help

ARCH_WANT_FRAME_POINTERS
  No help

ARCH_WANT_GENERAL_HUGETLB
  No help

ARCH_WANT_HUGE_PMD_SHARE
  No help

ARCH_WANT_IPC_PARSE_VERSION
  No help

ARCH_WANT_IRQS_OFF_ACTIVATE_MM
  Temporary select until all architectures can be converted to have
  irqs disabled over activate_mm. Architectures that do IPI based TLB
  shootdowns should enable this.

ARCH_WANT_LD_ORPHAN_WARN
  An arch should select this symbol once all linker sections are explicitly
  included, size-asserted, or discarded in the linker scripts. This is
  important because we never want expected sections to be placed heuristically
  by the linker, since the locations of such sections can change between linker
  versions.

ARCH_WANT_NUMA_VARIABLE_LOCALITY
  No help

ARCH_WANT_OLD_COMPAT_IPC
  No help

ARCH_WEAK_RELEASE_ACQUIRE
  No help

ARCNET
  If you have a network card of this type, say Y and check out the
  (arguably) beautiful poetry in
  <file:Documentation/networking/arcnet.rst>.
  
  You need both this driver, and the driver for the particular ARCnet
  chipset of your card. If you don't know, then it's probably a
  COM90xx type card, so say Y (or M) to "ARCnet COM90xx chipset
  support" below.
  
  To compile this driver as a module, choose M here. The module will
  be called arcnet.

ARCNET_1051
  This allows you to use RFC1051 with your ARCnet card via the virtual
  arc0s device. You only need arc0s if you want to talk to ARCnet
  software complying with the "old" standard, specifically, the DOS
  arcnet.com packet driver, Amigas running AmiTCP, and some variants
  of NetBSD. You do not need to say Y here to communicate with
  industry-standard RFC1201 implementations, like the arcether.com
  packet driver or most DOS/Windows ODI drivers. RFC1201 is included
  automatically as the arc0 device. Please read the ARCnet
  documentation in <file:Documentation/networking/arcnet.rst> for more
  information about using arc0e and arc0s.

ARCNET_1201
  This allows you to use RFC1201 with your ARCnet card via the virtual
  arc0 device.  You need to say Y here to communicate with
  industry-standard RFC1201 implementations, like the arcether.com
  packet driver or most DOS/Windows ODI drivers.  Please read the
  ARCnet documentation in <file:Documentation/networking/arcnet.rst>
  for more information about using arc0.

ARCNET_CAP
  ARCnet "cap mode" packet encapsulation. Used to get the hardware
  acknowledge back to userspace. After the initial protocol byte every
  packet is stuffed with an extra 4 byte "cookie" which doesn't
  actually appear on the network. After transmit the driver will send
  back a packet with protocol byte 0 containing the status of the
  transmission:
     0=no hardware acknowledge
     1=excessive nak
     2=transmission accepted by the receiver hardware
  
  Received packets are also stuffed with the extra 4 bytes but it will
  be random data.
  
  Cap only listens to protocol 1-8.

ARCNET_COM20020
  This is the driver for the new COM20020 chipset. It supports such
  things as promiscuous mode, so packet sniffing is possible, and
  extra diagnostic information.
  
  To compile this driver as a module, choose M here. The module will
  be called com20020.

ARCNET_COM20020_CS
  Say Y here if you intend to attach this type of ARCnet PCMCIA card
  to your computer.
  
  To compile this driver as a module, choose M here: the module will be
  called com20020_cs.  If unsure, say N.

ARCNET_COM20020_ISA
  No help

ARCNET_COM20020_PCI
  No help

ARCNET_COM90xx
  This is the chipset driver for the standard COM90xx cards. If you
  have always used the old ARCnet driver without knowing what type of
  card you had, this is probably the one for you.
  
  To compile this driver as a module, choose M here. The module will
  be called com90xx.

ARCNET_COM90xxIO
  This is the chipset driver for the COM90xx cards, using them in
  IO-mapped mode instead of memory-mapped mode. This is slower than
  the normal driver. Only use it if your card doesn't support shared
  memory.
  
  To compile this driver as a module, choose M here. The module will
  be called com90io.

ARCNET_RAW
  ARCnet "raw mode" packet encapsulation, no soft headers.  Unlikely
  to work unless talking to a copy of the same Linux arcnet driver,
  but perhaps marginally faster in that case.

ARCNET_RIM_I
  This is yet another chipset driver for the COM90xx cards, but this
  time only using memory-mapped mode, and no IO ports at all. This
  driver is completely untested, so if you have one of these cards,
  please mail <dwmw2@infradead.org>, especially if it works!
  
  To compile this driver as a module, choose M here. The module will
  be called arc-rimi.

ARCX_ANYBUS_CONTROLLER
  Select this to get support for the Arcx Anybus controller.
  It connects to the SoC via a parallel memory bus, and
  embeds up to two Anybus-S buses (slots).
  There is also a CAN power readout, unrelated to the Anybus,
  modelled as a regulator.

ARC_EMAC
  On some legacy ARC (Synopsys) FPGA boards such as ARCAngel4/ML50x
  non-standard on-chip ethernet device ARC EMAC 10/100 is used.
  Say Y here if you have such a board.  If unsure, say N.

ARC_EMAC_CORE
  No help

ARC_TIMERS
  These are legacy 32-bit TIMER0 and TIMER1 counters found on all ARC cores
  (ARC700 as well as ARC HS38).
  TIMER0 serves as clockevent while TIMER1 provides clocksource.

ARC_TIMERS_64BIT
  This enables 2 different 64-bit timers: RTC (for UP) and GFRC (for SMP).
  RTC is implemented inside the core, while GFRC sits outside the core in
  ARConnect IP block. Driver automatically picks one of them for clocksource
  as appropriate.

ARIADNE
  If you have a Village Tronic Ariadne Ethernet adapter, say Y.
  Otherwise, say N.
  
  To compile this driver as a module, choose M here: the module
  will be called ariadne.

ARM64_ERRATUM_858921
  This option enables a workaround applicable to Cortex-A73
  (all versions), whose counter may return incorrect values.
  The workaround will be dynamically enabled when an affected
  core is detected.

ARMADA375_USBCLUSTER_PHY
  No help

ARMADA_370_CLK
  No help

ARMADA_370_XP_IRQ
  No help

ARMADA_370_XP_TIMER
  Enables the support for the Armada 370 and XP timer driver.

ARMADA_375_CLK
  No help

ARMADA_37XX_CLK
  No help

ARMADA_37XX_RWTM_MBOX
  Mailbox implementation for communication with the the firmware
  running on the Cortex-M3 rWTM secure processor of the Armada 37xx
  SOC. Say Y here if you are building for such a device (for example
  the Turris Mox router).

ARMADA_37XX_WATCHDOG
  Say Y here to include support for the watchdog timer found on
  Marvell Armada 37xx SoCs.
  To compile this driver as a module, choose M here: the
  module will be called armada_37xx_wdt.

ARMADA_38X_CLK
  No help

ARMADA_39X_CLK
  No help

ARMADA_AP806_SYSCON
  No help

ARMADA_AP_CPU_CLK
  No help

ARMADA_AP_CP_HELPER
  No help

ARMADA_CP110_SYSCON
  No help

ARMADA_THERMAL
  Enable this option if you want to have support for thermal management
  controller present in Marvell EBU Armada SoCs (370,375,XP,38x,7K,8K).

ARMADA_XP_CLK
  No help

ARMV7M_SYSTICK
  This option enables support for the ARMv7M system timer unit.

ARM_ALLWINNER_SUN50I_CPUFREQ_NVMEM
  This adds the nvmem based CPUFreq driver for Allwinner
  h6 SoC.
  
  To compile this driver as a module, choose M here: the
  module will be called sun50i-cpufreq-nvmem.

ARM_AMBA
  No help

ARM_ARCH_TIMER
  No help

ARM_ARCH_TIMER_EVTSTREAM
  This option enables support by default for event stream generation
  based on the ARM architected timer. It is used for waking up CPUs
  executing the wfe instruction at a frequency represented as a
  power-of-2 divisor of the clock rate. The behaviour can also be
  overridden on the command line using the
  clocksource.arm_arch_timer.evtstream parameter.
  The main use of the event stream is wfe-based timeouts of userspace
  locking implementations. It might also be useful for imposing timeout
  on wfe to safeguard against any programming errors in case an expected
  event is not generated.
  This must be disabled for hardware validation purposes to detect any
  hardware anomalies of missing events.

ARM_ARCH_TIMER_OOL_WORKAROUND
  No help

ARM_ARMADA_37XX_CPUFREQ
  This adds the CPUFreq driver support for Marvell Armada 37xx SoCs.
  The Armada 37xx PMU supports 4 frequency and VDD levels.

ARM_ARMADA_8K_CPUFREQ
  This enables the CPUFreq driver support for Marvell
  Armada8k SOCs.
  Armada8K device has the AP806 which supports scaling
  to any full integer divider.
  
  If in doubt, say N.

ARM_AT91_CPUIDLE
  Select this to enable cpuidle for AT91 processors.

ARM_BIG_LITTLE_CPUIDLE
  Select this option to enable CPU idle driver for big.LITTLE based
  ARM systems. Driver manages CPUs coordination through MCPM and
  define different C-states for little and big cores through the
  multiple CPU idle drivers infrastructure.

ARM_BRCMSTB_AVS_CPUFREQ
  Some Broadcom STB SoCs use a co-processor running proprietary firmware
  ("AVS") to handle voltage and frequency scaling. This driver provides
  a standard CPUfreq interface to to the firmware.
  
  Say Y, if you have a Broadcom SoC with AVS support for DFS or DVFS.

ARM_CCI
  No help

ARM_CCI400_COMMON
  No help

ARM_CCI400_PMU
  CCI-400 provides 4 independent event counters counting events related
  to the connected slave/master interfaces, plus a cycle counter.

ARM_CCI400_PORT_CTRL
  Low level power management driver for CCI400 cache coherent
  interconnect for ARM platforms.

ARM_CCI5xx_PMU
  CCI-500/CCI-550 both provide 8 independent event counters, which can
  count events pertaining to the slave/master interfaces as well as the
  internal events to the CCI.

ARM_CCI_PMU
  Support for PMU events monitoring on the ARM CCI (Cache Coherent
  Interconnect) family of products.
  
  If compiled as a module, it will be called arm-cci.

ARM_CCN
  PMU (perf) driver supporting the ARM CCN (Cache Coherent Network)
  interconnect.

ARM_CHARLCD
  This is a driver for the character LCD found on the ARM Ltd.
  Versatile and RealView Platform Baseboards. It doesn't do
  very much more than display the text "ARM Linux" on the first
  line and the Linux version on the second line, but that's
  still useful.

ARM_CLPS711X_CPUIDLE
  Select this to enable cpuidle on Cirrus Logic CLPS711X SOCs.

ARM_CMN
  Support for PMU events monitoring on the Arm CMN-600 Coherent Mesh
  Network interconnect.

ARM_CPUIDLE
  Select this to enable generic cpuidle driver for ARM.
  It provides a generic idle driver whose idle states are configured
  at run-time through DT nodes. The CPUidle suspend backend is
  initialized by calling the CPU operations init idle hook
  provided by architecture code.

ARM_DMC620_PMU
  Support for PMU events monitoring on the ARM DMC-620 memory
  controller.

ARM_DSU_PMU
  Provides support for performance monitor unit in ARM DynamIQ Shared
  Unit (DSU). The DSU integrates one or more cores with an L3 memory
  system, control logic. The PMU allows counting various events related
  to DSU.

ARM_ETHER1
  If you have an Acorn system with one of these (AKA25) network cards,
  you should say Y to this option if you wish to use it with Linux.

ARM_ETHER3
  If you have an Acorn system with one of these network cards, you
  should say Y to this option if you wish to use it with Linux.

ARM_ETHERH
  If you have an Acorn system with one of these network cards, you
  should say Y to this option if you wish to use it with Linux.

ARM_EXYNOS_BUS_DEVFREQ
  This adds the common DEVFREQ driver for Exynos Memory bus. Exynos
  Memory bus has one more group of memory bus (e.g, MIF and INT block).
  Each memory bus group could contain many memoby bus block. It reads
  PPMU counters of memory controllers by using DEVFREQ-event device
  and adjusts the operating frequencies and voltages with OPP support.
  This does not yet operate with optimal voltages.

ARM_EXYNOS_CPUIDLE
  Select this to enable cpuidle for Exynos processors.

ARM_GIC
  No help

ARM_GIC_MAX_NR
  No help

ARM_GIC_PM
  No help

ARM_GIC_V2M
  No help

ARM_GIC_V3
  No help

ARM_GIC_V3_ITS
  No help

ARM_GIC_V3_ITS_FSL_MC
  No help

ARM_GIC_V3_ITS_PCI
  No help

ARM_GLOBAL_TIMER
  This option enables support for the ARM global timer unit.

ARM_HIGHBANK_CPUFREQ
  This adds the CPUFreq driver for Calxeda Highbank SoC
  based boards.
  
  If in doubt, say N.

ARM_HIGHBANK_CPUIDLE
  Select this to enable cpuidle on Calxeda processors.

ARM_IMX6Q_CPUFREQ
  This adds cpufreq driver support for Freescale i.MX6 series SoCs.
  
  If in doubt, say N.

ARM_IMX8M_DDRC_DEVFREQ
  This adds the DEVFREQ driver for the i.MX8M DDR Controller. It allows
  adjusting DRAM frequency.

ARM_IMX_BUS_DEVFREQ
  This adds the generic DEVFREQ driver for i.MX interconnects. It
  allows adjusting NIC/NOC frequency.

ARM_IMX_CPUFREQ_DT
  This adds cpufreq driver support for Freescale i.MX8M series SoCs,
  based on cpufreq-dt.
  
  If in doubt, say N.

ARM_INTEGRATOR_LM
  Say y here to enable support for the ARM Logic Module bus
  found on the ARM Integrator AP (Application Platform)

ARM_KIRKWOOD_CPUFREQ
  This adds the CPUFreq driver for Marvell Kirkwood
  SoCs.

ARM_KIRKWOOD_CPUIDLE
  This adds the CPU Idle driver for Marvell Kirkwood SoCs.

ARM_MEDIATEK_CPUFREQ
  This adds the CPUFreq driver support for MediaTek SoCs.

ARM_MHU
  Say Y here if you want to build the ARM MHU controller driver.
  The controller has 3 mailbox channels, the last of which can be
  used in Secure mode only.

ARM_MHU_V2
  Say Y here if you want to build the ARM MHUv2 controller driver,
  which provides unidirectional mailboxes between processing elements.

ARM_MOXART_ETHER
  If you wish to compile a kernel for a hardware with MOXA ART SoC and
  want to use the internal ethernet then you should answer Y to this.

ARM_MVEBU_V7_CPUIDLE
  Select this to enable cpuidle on Armada 370, 38x and XP processors.

ARM_NVIC
  No help

ARM_OMAP2PLUS_CPUFREQ
  No help

ARM_PL172_MPMC
  This selects the ARM PrimeCell PL172 MultiPort Memory Controller.
  If you have an embedded system with an AMBA bus and a PL172
  controller, say Y or M here.

ARM_PMU
  Say y if you want to use CPU performance monitors on ARM-based
  systems.

ARM_PMU_ACPI
  No help

ARM_PSCI_CHECKER
  Run the PSCI checker during startup. This checks that hotplug and
  suspend operations work correctly when using PSCI.
  
  The torture tests may interfere with the PSCI checker by turning CPUs
  on and off through hotplug, so for now torture tests and PSCI checker
  are mutually exclusive.

ARM_PSCI_CPUIDLE
  Select this to enable PSCI firmware based CPUidle driver for ARM.
  It provides an idle driver that is capable of detecting and
  managing idle states through the PSCI firmware interface.

ARM_PSCI_CPUIDLE_DOMAIN
  Select this to enable the PSCI based CPUidle driver to use PM domains,
  which is needed to support the hierarchical DT based layout of the
  idle states.

ARM_PSCI_FW
  No help

ARM_PXA2xx_CPUFREQ
  This add the CPUFreq driver support for Intel PXA2xx SOCs.
  
  If in doubt, say N.

ARM_QCOM_CPUFREQ_HW
  Support for the CPUFreq HW driver.
  Some QCOM chipsets have a HW engine to offload the steps
  necessary for changing the frequency of the CPUs. Firmware loaded
  in this engine exposes a programming interface to the OS.
  The driver implements the cpufreq interface for this HW engine.
  Say Y if you want to support CPUFreq HW.

ARM_QCOM_CPUFREQ_NVMEM
  This adds the CPUFreq driver for Qualcomm Kryo SoC based boards.
  
  If in doubt, say N.

ARM_QCOM_SPM_CPUIDLE
  Select this to enable cpuidle for Qualcomm processors.
  The Subsystem Power Manager (SPM) controls low power modes for the
  CPU and L2 cores. It interface with various system drivers to put
  the cores in low power modes.

ARM_RASPBERRYPI_CPUFREQ
  This adds the CPUFreq driver for Raspberry Pi
  
  If in doubt, say N.

ARM_RK3399_DMC_DEVFREQ
  This adds the DEVFREQ driver for the RK3399 DMC(Dynamic Memory Controller).
  It sets the frequency for the memory controller and reads the usage counts
  from hardware.

ARM_S3C2410_CPUFREQ
  CPU Frequency scaling support for S3C2410

ARM_S3C2412_CPUFREQ
  CPU Frequency scaling support for S3C2412 and S3C2413 SoC CPUs.

ARM_S3C2416_CPUFREQ
  This adds the CPUFreq driver for the Samsung S3C2416 and
  S3C2450 SoC. The S3C2416 supports changing the rate of the
  armdiv clock source and also entering a so called dynamic
  voltage scaling mode in which it is possible to reduce the
  core voltage of the CPU.
  
  If in doubt, say N.

ARM_S3C2416_CPUFREQ_VCORESCALE
  Enable CPU voltage scaling when entering the dvs mode.
  It uses information gathered through existing hardware and
  tests but not documented in any datasheet.
  
  If in doubt, say N.

ARM_S3C2440_CPUFREQ
  CPU Frequency scaling support for S3C2440 and S3C2442 SoC CPUs.

ARM_S3C24XX_CPUFREQ
  This enables the CPUfreq driver for the Samsung S3C24XX family
  of CPUs.
  
  For details, take a look at <file:Documentation/cpu-freq>.
  
  If in doubt, say N.

ARM_S3C24XX_CPUFREQ_DEBUG
  Enable s3c_freq_dbg for the Samsung S3C CPUfreq core

ARM_S3C24XX_CPUFREQ_DEBUGFS
  Export status information via debugfs.

ARM_S3C24XX_CPUFREQ_IODEBUG
  Enable s3c_freq_iodbg for the Samsung S3C CPUfreq core

ARM_S3C64XX_CPUFREQ
  This adds the CPUFreq driver for Samsung S3C6410 SoC.
  
  If in doubt, say N.

ARM_S3C_CPUFREQ
  Internal configuration node for common cpufreq on Samsung SoC

ARM_S5PV210_CPUFREQ
  This adds the CPUFreq driver for Samsung S5PV210 and
  S5PC110 SoCs.
  
  If in doubt, say N.

ARM_SA1100_CPUFREQ
  No help

ARM_SA1110_CPUFREQ
  No help

ARM_SBSA_WATCHDOG
  ARM SBSA Generic Watchdog has two stage timeouts:
  the first signal (WS0) is for alerting the system by interrupt,
  the second one (WS1) is a real hardware reset.
  More details: ARM DEN0029B - Server Base System Architecture (SBSA)
  
  This driver can operate ARM SBSA Generic Watchdog as a single stage
  or a two stages watchdog, it depends on the module parameter "action".
  
  Note: the maximum timeout in the two stages mode is half of that in
  the single stage mode.
  
  To compile this driver as module, choose M here: The module
  will be called sbsa_gwdt.

ARM_SCMI_CPUFREQ
  This adds the CPUfreq driver support for ARM platforms using SCMI
  protocol for CPU power management.
  
  This driver uses SCMI Message Protocol driver to interact with the
  firmware providing the CPU DVFS functionality.

ARM_SCMI_POWER_DOMAIN
  This enables support for the SCMI power domains which can be
  enabled or disabled via the SCP firmware
  
  This driver can also be built as a module.  If so, the module
  will be called scmi_pm_domain. Note this may needed early in boot
  before rootfs may be available.

ARM_SCMI_PROTOCOL
  ARM System Control and Management Interface (SCMI) protocol is a
  set of operating system-independent software interfaces that are
  used in system management. SCMI is extensible and currently provides
  interfaces for: Discovery and self-description of the interfaces
  it supports, Power domain management which is the ability to place
  a given device or domain into the various power-saving states that
  it supports, Performance management which is the ability to control
  the performance of a domain that is composed of compute engines
  such as application processors and other accelerators, Clock
  management which is the ability to set and inquire rates on platform
  managed clocks and Sensor management which is the ability to read
  sensor data, and be notified of sensor value.
  
  This protocol library provides interface for all the client drivers
  making use of the features offered by the SCMI.

ARM_SCPI_CPUFREQ
  This adds the CPUfreq driver support for ARM platforms using SCPI
  protocol for CPU power management.
  
  This driver uses SCPI Message Protocol driver to interact with the
  firmware providing the CPU DVFS functionality.

ARM_SCPI_POWER_DOMAIN
  This enables support for the SCPI power domains which can be
  enabled or disabled via the SCP firmware

ARM_SCPI_PROTOCOL
  System Control and Power Interface (SCPI) Message Protocol is
  defined for the purpose of communication between the Application
  Cores(AP) and the System Control Processor(SCP). The MHU peripheral
  provides a mechanism for inter-processor communication between SCP
  and AP.
  
  SCP controls most of the power management on the Application
  Processors. It offers control and management of: the core/cluster
  power states, various power domain DVFS including the core/cluster,
  certain system clocks configuration, thermal sensors and many
  others.
  
  This protocol library provides interface for all the client drivers
  making use of the features offered by the SCP.

ARM_SDE_INTERFACE
  The Software Delegated Exception Interface (SDEI) is an ARM
  standard for registering callbacks from the platform firmware
  into the OS. This is typically used to implement RAS notifications.

ARM_SMCCC_SOC_ID
  Include support for the SoC bus on the ARM SMCCC firmware based
  platforms providing some sysfs information about the SoC variant.

ARM_SMC_WATCHDOG
  Say Y here to include support for a watchdog timer
  implemented by the EL3 Secure Monitor on ARM platforms.
  Requires firmware support.
  To compile this driver as a module, choose M here: the
  module will be called arm_smc_wdt.

ARM_SMMU
  Support for implementations of the ARM System MMU architecture
  versions 1 and 2.
  
  Say Y here if your SoC includes an IOMMU device implementing
  the ARM SMMU architecture.

ARM_SMMU_DISABLE_BYPASS_BY_DEFAULT
  Say Y here to (by default) disable bypass streams such that
  incoming transactions from devices that are not attached to
  an iommu domain will report an abort back to the device and
  will not be allowed to pass through the SMMU.
  
  Any old kernels that existed before this KConfig was
  introduced would default to _allowing_ bypass (AKA the
  equivalent of NO for this config).  However the default for
  this option is YES because the old behavior is insecure.
  
  There are few reasons to allow unmatched stream bypass, and
  even fewer good ones.  If saying YES here breaks your board
  you should work on fixing your board.  This KConfig option
  is expected to be removed in the future and we'll simply
  hardcode the bypass disable in the code.
  
  NOTE: the kernel command line parameter
  'arm-smmu.disable_bypass' will continue to override this
  config.

ARM_SMMU_LEGACY_DT_BINDINGS
  Support for the badly designed and deprecated "mmu-masters"
  devicetree bindings. This allows some DMA masters to attach
  to the SMMU but does not provide any support via the DMA API.
  If you're lucky, you might be able to get VFIO up and running.
  
  If you say Y here then you'll make me very sad. Instead, say N
  and move your firmware to the utopian future that was 2016.

ARM_SMMU_V3
  Support for implementations of the ARM System MMU architecture
  version 3 providing translation support to a PCIe root complex.
  
  Say Y here if your system includes an IOMMU device implementing
  the ARM SMMUv3 architecture.

ARM_SMMU_V3_PMU
  Provides support for the ARM SMMUv3 Performance Monitor Counter
  Groups (PMCG), which provide monitoring of transactions passing
  through the SMMU and allow the resulting information to be filtered
  based on the Stream ID of the corresponding master.

ARM_SMMU_V3_SVA
  Support for sharing process address spaces with devices using the
  SMMUv3.
  
  Say Y here if your system supports SVA extensions such as PCIe PASID
  and PRI.

ARM_SP805_WATCHDOG
  ARM Primecell SP805 Watchdog timer. This will reboot your system when
  the timeout is reached.

ARM_SPEAR_CPUFREQ
  This adds the CPUFreq driver support for SPEAr SOCs.

ARM_SPE_PMU
  Enable perf support for the ARMv8.2 Statistical Profiling
  Extension, which provides periodic sampling of operations in
  the CPU pipeline and reports this via the perf AUX interface.

ARM_STI_CPUFREQ
  This driver uses the generic OPP framework to match the running
  platform with a predefined set of suitable values.  If not provided
  we will fall-back so safe-values contained in Device Tree.  Enable
  this config option if you wish to add CPUFreq support for STi based
  SoCs.

ARM_TANGO_CPUFREQ
  No help

ARM_TEGRA124_CPUFREQ
  This adds the CPUFreq driver support for Tegra124 SOCs.

ARM_TEGRA186_CPUFREQ
  This adds the CPUFreq driver support for Tegra186 SOCs.

ARM_TEGRA194_CPUFREQ
  This adds CPU frequency driver support for Tegra194 SOCs.

ARM_TEGRA20_CPUFREQ
  This adds the CPUFreq driver support for Tegra20/30 SOCs.

ARM_TEGRA_CPUIDLE
  Select this to enable cpuidle for NVIDIA Tegra20/30/114/124 SoCs.

ARM_TEGRA_DEVFREQ
  This adds the DEVFREQ driver for the Tegra family of SoCs.
  It reads ACTMON counters of memory controllers and adjusts the
  operating frequencies and voltages with OPP support.

ARM_TIMER_SP804
  No help

ARM_TI_CPUFREQ
  This driver enables valid OPPs on the running platform based on
  values contained within the SoC in use. Enable this in order to
  use the cpufreq-dt driver on all Texas Instruments platforms that
  provide dt based operating-points-v2 tables with opp-supported-hw
  data provided. Required for cpufreq support on AM335x, AM437x,
  DRA7x, and AM57x platforms.

ARM_U8500_CPUIDLE
  Select this to enable cpuidle for ST-E u8500 processors.

ARM_VEXPRESS_SPC_CPUFREQ
  This add the CPUfreq driver support for Versatile Express
  big.LITTLE platforms using SPC for power management.

ARM_VIC
  No help

ARM_VIC_NR
  The maximum number of VICs available in the system, for
  power management.

ARM_ZYNQ_CPUIDLE
  Select this to enable cpuidle on Xilinx Zynq processors.

AS3935
  Say Y here to build SPI interface support for the Austrian
  Microsystems AS3935 lightning detection sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called as3935

AS73211
  If you say yes here you get support for the AMS AS73211
  JENCOLOR(R) Digital XYZ Sensor.
  
  For triggered measurements, you will need an additional trigger driver
  like IIO_HRTIMER_TRIGGER or IIO_SYSFS_TRIGGER.
  
  This driver can also be built as a module.  If so, the module
  will be called as73211.

ASHMEM
  The ashmem subsystem is a new shared memory allocator, similar to
  POSIX SHM but with different behavior and sporting a simpler
  file-based API.
  
  It is, in theory, a good memory allocator for low-memory devices,
  because it can discard shared memory units when under memory pressure.

ASM9260_TIMER
  Enables support for the ASM9260 timer.

ASM9260_WATCHDOG
  Watchdog timer embedded into Alphascale asm9260 chips. This will reboot your
  system when the timeout is reached.

ASM_MODVERSIONS
  This enables module versioning for exported symbols also from
  assembly. This can be enabled only when the target architecture
  supports it.

ASN1
  Build a simple ASN.1 grammar compiler that produces a bytecode output
  that can be interpreted by the ASN.1 stream decoder and used to
  inform it as to what tags are to be expected in a stream and what
  functions to call on what tags.

ASPEED_ADC
  If you say yes here you get support for the ADC included in Aspeed
  BMC SoCs.
  
  To compile this driver as a module, choose M here: the module will be
  called aspeed_adc.

ASPEED_BT_IPMI_BMC
  Provides a driver for the BT (Block Transfer) IPMI interface
  found on Aspeed SOCs (AST2400 and AST2500). The driver
  implements the BMC side of the BT interface.

ASPEED_KCS_IPMI_BMC
  Provides a driver for the KCS (Keyboard Controller Style) IPMI
  interface found on Aspeed SOCs (AST2400 and AST2500).
  
  The driver implements the BMC side of the KCS contorller, it
  provides the access of KCS IO space for BMC side.

ASPEED_LPC_CTRL
  Control LPC firmware cycle mappings through ioctl()s. The driver
  also provides a read/write interface to a BMC ram region where the
  host LPC read/write region can be buffered.

ASPEED_LPC_SNOOP
  Provides a driver to control the LPC snoop interface which
  allows the BMC to listen on and save the data written by
  the host to an arbitrary LPC I/O port.

ASPEED_P2A_CTRL
  Control ASPEED P2A VGA MMIO to BMC mappings through ioctl()s.  The
  driver also provides an interface for userspace mappings to a
  pre-defined region.

ASPEED_SOCINFO
  Say yes to support decoding of ASPEED BMC information.

ASPEED_WATCHDOG
  Say Y here to include support for the watchdog timer
  in Aspeed BMC SoCs.
  
  This driver is required to reboot the SoC.
  
  To compile this driver as a module, choose M here: the
  module will be called aspeed_wdt.

ASSOCIATIVE_ARRAY
  Generic associative array.  Can be searched and iterated over whilst
  it is being modified.  It is also reasonably quick to search and
  modify.  The algorithms are non-recursive, and the trees are highly
  capacious.
  
  See:
  
        Documentation/core-api/assoc_array.rst
  
  for more information.

ASUS_LAPTOP
  This is a driver for Asus laptops, Lenovo SL and the Pegatron
  Lucid tablet. It may also support some MEDION, JVC or VICTOR
  laptops. It makes all the extra buttons generate standard
  ACPI events and input events, and on the Lucid the built-in
  accelerometer appears as an input device.  It also adds
  support for video output switching, LCD backlight control,
  Bluetooth and Wlan control, and most importantly, allows you
  to blink those fancy LEDs.
  
  For more information see <http://acpi4asus.sf.net>.
  
  If you have an ACPI-compatible ASUS laptop, say Y or M here.

ASUS_NB_WMI
  This is a driver for newer Asus notebooks. It adds extra features
  like wireless radio and bluetooth control, leds, hotkeys, backlight...
  
  For more information, see
  <file:Documentation/ABI/testing/sysfs-platform-asus-wmi>
  
  If you have an ACPI-WMI compatible Asus Notebook, say Y or M
  here.

ASUS_WIRELESS
  The Asus Wireless Radio Control handles the airplane mode hotkey
  present on some Asus laptops.
  
  Say Y or M here if you have an ASUS notebook with an airplane mode
  hotkey.
  
  If you choose to compile this driver as a module the module will be
  called asus-wireless.

ASUS_WMI
  Say Y here if you have a WMI aware Asus laptop (like Eee PCs or new
  Asus Notebooks).
  
  To compile this driver as a module, choose M here: the module will
  be called asus-wmi.

ASYMMETRIC_KEY_TYPE
  This option provides support for a key type that holds the data for
  the asymmetric keys used for public key cryptographic operations such
  as encryption, decryption, signature generation and signature
  verification.

ASYMMETRIC_PUBLIC_KEY_SUBTYPE
  This option provides support for asymmetric public key type handling.
  If signature generation and/or verification are to be used,
  appropriate hash algorithms (such as SHA-1) must be available.
  ENOPKG will be reported if the requisite algorithm is unavailable.

ASYMMETRIC_TPM_KEY_SUBTYPE
  This option provides support for TPM backed private key type handling.
  Operations such as sign, verify, encrypt, decrypt are performed by
  the TPM after the private key is loaded.

ASYNC_CORE
  No help

ASYNC_MEMCPY
  No help

ASYNC_PQ
  No help

ASYNC_RAID6_RECOV
  No help

ASYNC_RAID6_TEST
  This is a one-shot self test that permutes through the
  recovery of all the possible two disk failure scenarios for a
  N-disk array.  Recovery is performed with the asynchronous
  raid6 recovery routines, and will optionally use an offload
  engine if one is available.
  
  If unsure, say N.

ASYNC_TX_DISABLE_PQ_VAL_DMA
  No help

ASYNC_TX_DISABLE_XOR_VAL_DMA
  No help

ASYNC_TX_DMA
  This allows the async_tx api to take advantage of offload engines for
  memcpy, memset, xor, and raid6 p+q operations.  If your platform has
  a dma engine that can perform raid operations and you have enabled
  MD_RAID456 say Y.
  
  If unsure, say N.

ASYNC_TX_ENABLE_CHANNEL_SWITCH
  No help

ASYNC_XOR
  No help

AS_AVX512
  Supported by binutils >= 2.25 and LLVM integrated assembler

AS_SHA1_NI
  Supported by binutils >= 2.24 and LLVM integrated assembler

AS_SHA256_NI
  Supported by binutils >= 2.24 and LLVM integrated assembler

AS_TPAUSE
  Supported by binutils >= 2.31.1 and LLVM integrated assembler >= V7

AT76C50X_USB
  Enable support for USB Wireless devices using Atmel at76c503,
  at76c505 or at76c505a chips.

AT803X_PHY
  Currently supports the AR8030, AR8031, AR8033 and AR8035 model

AT91RM9200_WATCHDOG
  Watchdog timer embedded into AT91RM9200 chips. This will reboot your
  system when the timeout is reached.

AT91SAM9X_WATCHDOG
  Watchdog timer embedded into AT91SAM9X and AT91CAP9 chips. This will
  reboot your system when the timeout is reached.

AT91_ADC
  Say yes here to build support for Atmel AT91 ADC.
  
  To compile this driver as a module, choose M here: the module will be
  called at91_adc.

AT91_CF
  Say Y here to support the CompactFlash controller on AT91 chips.
  Or choose M to compile the driver as a module named "at91_cf".

AT91_SAMA5D2_ADC
  Say yes here to build support for Atmel SAMA5D2 ADC which is
  available on SAMA5D2 SoC family.
  
  To compile this driver as a module, choose M here: the module will be
  called at91-sama5d2_adc.

AT91_SOC_ID
  Include support for the SoC bus on the Atmel ARM SoCs.

AT91_SOC_SFR
  This is a driver for the Special Function Registers available on
  Atmel SAMA5Dx SoCs, providing access to specific aspects of the
  integrated memory, bridge implementations, processor etc.
  
  This driver can also be built as a module. If so, the module
  will be called sfr.

ATA
  If you want to use an ATA hard disk, ATA tape drive, ATA CD-ROM or
  any other ATA device under Linux, say Y and make sure that you know
  the name of your ATA host adapter (the card inside your computer
  that "speaks" the ATA protocol, also called ATA controller),
  because you will be asked for it.
  
  NOTE: ATA enables basic SCSI support; *however*,
  'SCSI disk support', 'SCSI tape support', or
  'SCSI CDROM support' may also be needed,
  depending on your hardware configuration.

ATALK
  AppleTalk is the protocol that Apple computers can use to communicate
  on a network.  If your Linux box is connected to such a network and you
  wish to connect to it, say Y.  You will need to use the netatalk package
  so that your Linux box can act as a print and file server for Macs as
  well as access AppleTalk printers.  Check out
  <http://www.zettabyte.net/netatalk/> on the WWW for details.
  EtherTalk is the name used for AppleTalk over Ethernet and the
  cheaper and slower LocalTalk is AppleTalk over a proprietary Apple
  network using serial links.  EtherTalk and LocalTalk are fully
  supported by Linux.
  
  General information about how to connect Linux, Windows machines and
  Macs is on the WWW at <http://www.eats.com/linux_mac_win.html>.  The
  NET3-4-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>, contains valuable
  information as well.
  
  To compile this driver as a module, choose M here: the module will be
  called appletalk. You almost certainly want to compile it as a
  module so you can restart your AppleTalk stack without rebooting
  your machine. I hear that the GNU boycott of Apple is over, so
  even politically correct people are allowed to say Y here.

ATARILANCE
  Say Y to include support for several Atari Ethernet adapters based
  on the AMD LANCE chipset: RieblCard (with or without battery), or
  PAMCard VME (also the version by Rhotron, with different addresses).

ATARI_FLOPPY
  No help

ATARI_KBD_CORE
  No help

ATARI_PARTITION
  Say Y here if you would like to use hard disks under Linux which
  were partitioned under the Atari OS.

ATARI_SCSI
  If you have an Atari with built-in NCR5380 SCSI controller (TT,
  Falcon, ...) say Y to get it supported. Of course also, if you have
  a compatible SCSI controller (e.g. for Medusa).
  
  To compile this driver as a module, choose M here: the module will
  be called atari_scsi. If you also enable NVRAM support, the SCSI
  host's ID is taken from the setting in TT RTC NVRAM.
  
  This driver supports both styles of NCR integration into the
  system: the TT style (separate DMA), and the Falcon style (via
  ST-DMA, replacing ACSI).  It does NOT support other schemes, like
  in the Hades (without DMA).

ATA_ACPI
  This option adds support for ATA-related ACPI objects.
  These ACPI objects add the ability to retrieve taskfiles
  from the ACPI BIOS and write them to the disk controller.
  These objects may be related to performance, security,
  power management, or other areas.
  You can disable this at kernel boot time by using the
  option libata.noacpi=1

ATA_BMDMA
  This option adds support for SFF ATA controllers with BMDMA
  capability.  BMDMA stands for bus-master DMA and is the
  de facto DMA interface for SFF controllers.
  
  If unsure, say Y.

ATA_FORCE
  This option adds support for "libata.force=" kernel parameter for
  forcing configuration settings.
  
  For further information, please read
  <file:Documentation/admin-guide/kernel-parameters.txt>.
  
  This option will enlarge the kernel by approx. 3KB. Disable it if
  kernel size is more important than ability to override the default
  configuration settings.
  
  If unsure, say Y.

ATA_GENERIC
  This option enables support for generic BIOS configured
  ATA controllers via the new ATA layer
  
  If unsure, say N.

ATA_NONSTANDARD
  No help

ATA_OVER_ETH
  This driver provides Support for ATA over Ethernet block
  devices like the Coraid EtherDrive (R) Storage Blade.

ATA_PIIX
  This option enables support for ICH5/6/7/8 Serial ATA
  and support for PATA on the Intel ESB/ICH/PIIX3/PIIX4 series
  host controllers.
  
  If unsure, say N.

ATA_SFF
  This option adds support for ATA controllers with SFF
  compliant or similar programming interface.
  
  SFF is the legacy IDE interface that has been around since
  the dawn of time.  Almost all PATA controllers have an
  SFF interface.  Many SATA controllers have an SFF interface
  when configured into a legacy compatibility mode.
  
  For users with exclusively modern controllers like AHCI,
  Silicon Image 3124, or Marvell 6440, you may choose to
  disable this unneeded SFF support.
  
  If unsure, say Y.

ATA_VERBOSE_ERROR
  This option adds parsing of ATA command descriptions and error bits
  in libata kernel output, making it easier to interpret.
  This option will enlarge the kernel by approx. 6KB. Disable it only
  if kernel size is more important than ease of debugging.
  
  If unsure, say Y.

ATCPIT100_TIMER
  This option enables support for the Andestech ATCPIT100 timers.

ATH10K
  This module adds support for wireless adapters based on
  Atheros IEEE 802.11ac family of chipsets.
  
  If you choose to build a module, it'll be called ath10k.

ATH10K_AHB
  This module adds support for AHB bus

ATH10K_CE
  No help

ATH10K_DEBUG
  Enables debug support
  
  If unsure, say Y to make it easier to debug problems.

ATH10K_DEBUGFS
  Enabled debugfs support
  
  If unsure, say Y to make it easier to debug problems.

ATH10K_DFS_CERTIFIED
  This option enables DFS support for initiating radiation on
  ath10k.

ATH10K_PCI
  This module adds support for PCIE bus

ATH10K_SDIO
  This module adds support for SDIO/MMC bus.

ATH10K_SNOC
  This module adds support for integrated WCN3990 chip connected
  to system NOC(SNOC).

ATH10K_SPECTRAL
  Say Y to enable access to the FFT/spectral data via debugfs.

ATH10K_TRACING
  Select this to ath10k use tracing infrastructure.

ATH10K_USB
  This module adds experimental support for USB bus. Currently
  work in progress and will not fully work.

ATH11K
  This module adds support for Qualcomm Technologies 802.11ax family of
  chipsets.
  
  If you choose to build a module, it'll be called ath11k.

ATH11K_AHB
  This module adds support for AHB bus

ATH11K_DEBUG
  Enables debug support
  
  If unsure, say Y to make it easier to debug problems.

ATH11K_DEBUGFS
  Enable ath11k debugfs support
  
  If unsure, say Y to make it easier to debug problems.

ATH11K_PCI
  This module adds support for PCIE bus

ATH11K_SPECTRAL
  Enable ath11k spectral scan support
  
  Say Y to enable access to the FFT/spectral data via debugfs.

ATH11K_TRACING
  Select this to use ath11k tracing infrastructure.

ATH5K
  This module adds support for wireless adapters based on
  Atheros 5xxx chipset.
  
  Currently the following chip versions are supported:
  
  MAC: AR5211 AR5212
  PHY: RF5111/2111 RF5112/2112 RF5413/2413
  
  This driver uses the kernel's mac80211 subsystem.
  
  If you choose to build a module, it'll be called ath5k. Say M if
  unsure.

ATH5K_AHB
  This adds support for WiSoC type chipsets of the 5xxx Atheros
  family.

ATH5K_DEBUG
  Atheros 5xxx debugging messages.
  
  Say Y, if and you will get debug options for ath5k.
  To use this, you need to mount debugfs:
  
  mount -t debugfs debug /sys/kernel/debug
  
  You will get access to files under:
  /sys/kernel/debug/ath5k/phy0/
  
  To enable debug, pass the debug level to the debug module
  parameter. For example:
  
  modprobe ath5k debug=0x00000400

ATH5K_PCI
  This adds support for PCI type chipsets of the 5xxx Atheros
  family.

ATH5K_TEST_CHANNELS
  This enables non-standard IEEE 802.11 channels on ath5k, which
  can be used for research purposes. This option should be disabled
  unless doing research.

ATH5K_TRACER
  Say Y here to enable tracepoints for the ath5k driver
  using the kernel tracing infrastructure.  Select this
  option if you are interested in debugging the driver.
  
  If unsure, say N.

ATH6KL
  This module adds core support for wireless adapters based on
  Atheros AR6003 and AR6004 chipsets. You still need separate
  bus drivers for USB and SDIO to be able to use real devices.
  
  If you choose to build it as a module, it will be called
  ath6kl_core. Please note that AR6002 and AR6001 are not
  supported by this driver.

ATH6KL_DEBUG
  Enables ath6kl debug support, including debug messages
  enabled with debug_mask module parameter and debugfs
  interface.
  
  If unsure, say Y to make it easier to debug problems.

ATH6KL_REGDOMAIN
  Enabling this makes it possible to change the regdomain in
  the firmware. This can be only enabled if regulatory requirements
  are taken into account.
  
  If unsure, say N.

ATH6KL_SDIO
  This module adds support for wireless adapters based on
  Atheros AR6003 and AR6004 chipsets running over SDIO. If you
  choose to build it as a module, it will be called ath6kl_sdio.
  Please note that AR6002 and AR6001 are not supported by this
  driver.

ATH6KL_TRACING
  Select this to ath6kl use tracing infrastructure which, for
  example, can be enabled with help of trace-cmd. All debug
  messages and commands are delivered to using individually
  enablable trace points.
  
  If unsure, say Y to make it easier to debug problems.

ATH6KL_USB
  This module adds support for wireless adapters based on
  Atheros AR6004 chipset and chipsets based on it running over
  USB. If you choose to build it as a module, it will be
  called ath6kl_usb.

ATH79_WDT
  Hardware driver for the built-in watchdog timer on the Atheros
  AR71XX/AR724X/AR913X SoCs.

ATH9K
  This module adds support for wireless adapters based on
  Atheros IEEE 802.11n AR5008, AR9001 and AR9002 family
  of chipsets. For a specific list of supported external
  cards, laptops that already ship with these cards and
  APs that come with these cards refer to ath9k wiki
  products page:
  
  https://wireless.wiki.kernel.org/en/users/Drivers/ath9k/products
  
  If you choose to build a module, it'll be called ath9k.

ATH9K_AHB
  This option enables the AHB bus support in ath9k.
  
  Say Y, if you have a SoC with a compatible built-in
  wireless MAC. Say N if unsure.

ATH9K_BTCOEX_SUPPORT
  Say Y, if you want to use the ath9k/ath9k_htc radios together with
  Bluetooth modules in the same system.

ATH9K_CHANNEL_CONTEXT
  This option enables channel context support in ath9k, which is needed
  for multi-channel concurrency. Enable this if P2P PowerSave support
  is required.

ATH9K_COMMON
  No help

ATH9K_COMMON_DEBUG
  No help

ATH9K_COMMON_SPECTRAL
  Say Y to enable access to the FFT/spectral data via debugfs.

ATH9K_DEBUGFS
  Say Y, if you need access to ath9k's statistics for
  interrupts, rate control, etc.
  
  Also required for changing debug message flags at run time and for
  TX99.

ATH9K_DFS_CERTIFIED
  This option enables DFS support for initiating radiation on
  ath9k. There is no way to dynamically detect if a card was DFS
  certified and as such this is left as a build time option. This
  option should only be enabled by system integrators that can
  guarantee that all the platforms that their kernel will run on
  have obtained appropriate regulatory body certification for a
  respective Atheros card by using ath9k on the target shipping
  platforms.
  
  This is currently only a placeholder for future DFS support,
  as DFS support requires more components that still need to be
  developed. At this point enabling this option won't do anything
  except increase code size.

ATH9K_DFS_DEBUGFS
  No help

ATH9K_DYNACK
  This option enables ath9k dynamic ACK timeout estimation algorithm
  based on ACK frame RX timestamp, TX frame timestamp and frame
  duration

ATH9K_HTC
  Support for Atheros HTC based cards.
  Chipsets supported: AR9271
  
  For more information:
  https://wireless.wiki.kernel.org/en/users/Drivers/ath9k_htc
  
  The built module will be ath9k_htc.

ATH9K_HTC_DEBUGFS
  Say Y, if you need access to ath9k_htc's statistics.
  As well as access to the FFT/spectral data.

ATH9K_HW
  No help

ATH9K_HWRNG
  This option incorporates the ADC register output as a source of
  randomness into Linux entropy pool (/dev/urandom and /dev/random)
  
  Say Y, feeds the entropy directly from the WiFi driver to the input
  pool.

ATH9K_PCI
  This option enables the PCI bus support in ath9k.
  
  Say Y, if you have a compatible PCI/PCIe wireless card.

ATH9K_PCI_NO_EEPROM
  This separate driver provides a loader in order to support the
  AR500X to AR92XX-generation of ath9k PCI(e) WiFi chips, which have
  their initialization data (which contains the real PCI Device ID
  that ath9k will need) stored together with the calibration data out
  of reach for the ath9k chip.
  
  These devices are usually various network appliances, routers or
  access Points and such.
  
  If unsure say N.

ATH9K_PCOEM
  No help

ATH9K_RFKILL
  Say Y to have ath9k poll the RF-Kill GPIO every couple of
  seconds. Turn off to save power, but enable it if you have
  a platform that can toggle the RF-Kill GPIO.

ATH9K_STATION_STATISTICS
  This option enables detailed statistics for association stations.

ATH9K_TX99
  Say N. This should only be enabled on systems undergoing
  certification testing and evaluation in a controlled environment.
  Enabling this will only enable TX99 support, all other modes of
  operation will be disabled.
  
  TX99 support enables Specific Absorption Rate (SAR) testing.
  SAR is the unit of measurement for the amount of radio frequency(RF)
  absorbed by the body when using a wireless device. The RF exposure
  limits used are expressed in the terms of SAR, which is a measure
  of the electric and magnetic field strength and power density for
  transmitters operating at frequencies from 300 kHz to 100 GHz.
  Regulatory bodies around the world require that wireless device
  be evaluated to meet the RF exposure limits set forth in the
  governmental SAR regulations.

ATH9K_WOW
  This option enables Wake on Wireless LAN support for certain cards.
  Currently, AR9462 is supported.

ATH_COMMON
  No help

ATH_DEBUG
  Say Y, if you want to debug atheros wireless drivers.
  Right now only ath9k makes use of this.

ATH_REG_DYNAMIC_USER_CERT_TESTING
  Say N. This should only be enabled on systems
  undergoing certification testing.

ATH_REG_DYNAMIC_USER_REG_HINTS
  Say N. This should only be enabled in countries where
  this feature is explicitly allowed and only on cards that
  specifically have been tested for this.

ATH_TRACEPOINTS
  This option enables tracepoints for atheros wireless drivers.
  Currently, ath9k makes use of this facility.

ATL1
  This driver supports the Atheros/Attansic L1 gigabit ethernet
  adapter.
  
  To compile this driver as a module, choose M here.  The module
  will be called atl1.

ATL1C
  This driver supports the Atheros L1C gigabit ethernet adapter.
  
  To compile this driver as a module, choose M here.  The module
  will be called atl1c.

ATL1E
  This driver supports the Atheros L1E gigabit ethernet adapter.
  
  To compile this driver as a module, choose M here.  The module
  will be called atl1e.

ATL2
  This driver supports the Atheros L2 fast ethernet adapter.
  
  To compile this driver as a module, choose M here.  The module
  will be called atl2.

ATLAS7_TIMER
  Enables support for the Atlas7 timer.

ATLAS7_WATCHDOG
  Say Y here to include Watchdog timer support for the watchdog
  existing on the CSRatlas7 series platforms.
  
  To compile this driver as a module, choose M here: the
  module will be called atlas7_wdt.

ATLAS_EZO_SENSOR
  Say Y here to build I2C interface support for the following
  Atlas Scientific EZO sensors
    * CO2 EZO Sensor
  
  To compile this driver as module, choose M here: the
  module will be called atlas-ezo-sensor.

ATLAS_PH_SENSOR
  Say Y here to build I2C interface support for the following
  Atlas Scientific OEM SM sensors:
    * pH SM sensor
    * EC SM sensor
    * ORP SM sensor
  
  To compile this driver as module, choose M here: the
  module will be called atlas-ph-sensor.

ATM
  ATM is a high-speed networking technology for Local Area Networks
  and Wide Area Networks.  It uses a fixed packet size and is
  connection oriented, allowing for the negotiation of minimum
  bandwidth requirements.
  
  In order to participate in an ATM network, your Linux box needs an
  ATM networking card. If you have that, say Y here and to the driver
  of your ATM card below.
  
  Note that you need a set of user-space programs to actually make use
  of ATM.  See the file <file:Documentation/networking/atm.rst> for
  further details.

ATMEL
  A driver 802.11b wireless cards based on the Atmel fast-vnet
  chips. This driver supports standard Linux wireless extensions.
  
  Many  cards based on this chipset do not have flash memory
  and need their firmware loaded at start-up. If yours is
  one of these, you will need to provide a firmware image
  to be loaded into the card by the driver. The Atmel
  firmware package can be downloaded from
  <http://www.thekelleys.org.uk/atmel>

ATMEL_AIC5_IRQ
  No help

ATMEL_AIC_IRQ
  No help

ATMEL_EBI
  Driver for Atmel EBI controller.
  Used to configure the EBI (external bus interface) when the device-
  tree is used. This bus supports NANDs, external ethernet controller,
  SRAMs, ATA devices, etc.

ATMEL_PIT
  Support for the Periodic Interval Timer found on Atmel SoCs.

ATMEL_SDRAMC
  This driver is for Atmel SDRAM Controller or Atmel Multi-port
  DDR-SDRAM Controller available on Atmel AT91SAM9 and SAMA5 SoCs.
  Starting with the at91sam9g45, this controller supports SDR, DDR and
  LP-DDR memories.

ATMEL_SSC
  This option enables device driver support for Atmel Synchronized
  Serial Communication peripheral (SSC).
  
  The SSC peripheral supports a wide variety of serial frame based
  communications, i.e. I2S, SPI, etc.
  
  If unsure, say N.

ATMEL_ST
  Support for the Atmel ST timer.

ATMEL_TCB_CLKSRC
  Support for Timer Counter Blocks on Atmel SoCs.

ATMEL_TCLIB
  Select this if you want a library to allocate the Timer/Counter
  blocks found on many Atmel processors.  This facilitates using
  these blocks by different drivers despite processor differences.

ATM_AMBASSADOR
  This is a driver for ATMizer based ATM card produced by Madge
  Networks Ltd. Say Y (or M to compile as a module named ambassador)
  here if you have one of these cards.

ATM_AMBASSADOR_DEBUG
  Somewhat useful debugging messages are available. The choice of
  messages is controlled by a bitmap.  This may be specified as a
  module argument (kernel command line argument as well?), changed
  dynamically using an ioctl (not yet) or changed by sending the
  string "Dxxxx" to VCI 1023 (where x is a hex digit).  See the file
  <file:drivers/atm/ambassador.h> for the meanings of the bits in the
  mask.
  
  When active, these messages can have a significant impact on the
  speed of the driver, and the size of your syslog files! When
  inactive, they will have only a modest impact on performance.

ATM_BR2684
  ATM PVCs can carry ethernet PDUs according to RFC2684 (formerly 1483)
  This device will act like an ethernet from the kernels point of view,
  with the traffic being carried by ATM PVCs (currently 1 PVC/device).
  This is sometimes used over DSL lines.  If in doubt, say N.

ATM_BR2684_IPFILTER
  This is an experimental mechanism for users who need to terminate a
  large number of IP-only vcc's.  Do not enable this unless you are sure
  you know what you are doing.

ATM_CLIP
  Classical IP over ATM for PVCs and SVCs, supporting InARP and
  ATMARP. If you want to communication with other IP hosts on your ATM
  network, you will typically either say Y here or to "LAN Emulation
  (LANE)" below.

ATM_CLIP_NO_ICMP
  Normally, an "ICMP host unreachable" message is sent if a neighbour
  cannot be reached because there is no VC to it in the kernel's
  ATMARP table. This may cause problems when ATMARP table entries are
  briefly removed during revalidation. If you say Y here, packets to
  such neighbours are silently discarded instead.

ATM_DRIVERS
  Say Y here to get to see options for Asynchronous Transfer Mode
  device drivers. This option alone does not add any kernel code.
  
  If you say N, all options in this submenu will be skipped and disabled.

ATM_DUMMY
  Dummy ATM driver. Useful for proxy signalling, testing,
  and development.  If unsure, say N.

ATM_ENI
  Driver for the Efficient Networks ENI155p series and SMC ATM
  Power155 155 Mbps ATM adapters. Both, the versions with 512KB and
  2MB on-board RAM (Efficient calls them "C" and "S", respectively),
  and the FPGA and the ASIC Tonga versions of the board are supported.
  The driver works with MMF (-MF or ...F) and UTP-5 (-U5 or ...D)
  adapters.
  
  To compile this driver as a module, choose M here: the module will
  be called eni.

ATM_ENI_BURST_RX_16W
  Burst sixteen words at once in the receive direction. This may work
  with recent PCI chipsets, but is known to fail with older chipsets.

ATM_ENI_BURST_RX_2W
  Burst two words at once in the receive direction. You may want to
  try this if you have disabled 4W and 8W bursts. Enabling 2W if 4W or
  8W are also set may or may not improve throughput.

ATM_ENI_BURST_RX_4W
  Burst four words at once in the receive direction. This is the
  default setting. Enabling 4W if 8W is also set may or may not
  improve throughput.

ATM_ENI_BURST_RX_8W
  Burst eight words at once in the receive direction. This may work
  with recent PCI chipsets, but is known to fail with older chipsets,
  such as the Intel Neptune series.

ATM_ENI_BURST_TX_16W
  Burst sixteen words at once in the send direction. This may work
  with recent PCI chipsets, but is known to fail with older chipsets.

ATM_ENI_BURST_TX_2W
  Burst two words at once in the send direction. You may want to try
  this if you have disabled 4W and 8W bursts. Enabling 2W if 4W or 8W
  are also set may or may not improve throughput.

ATM_ENI_BURST_TX_4W
  Burst four words at once in the send direction. You may want to try
  this if you have disabled 8W bursts. Enabling 4W if 8W is also set
  may or may not improve throughput.

ATM_ENI_BURST_TX_8W
  Burst eight words at once in the send direction. This is the default
  setting.

ATM_ENI_DEBUG
  Extended debugging records various events and displays that list
  when an inconsistency is detected. This mechanism is faster than
  generally using printks, but still has some impact on performance.
  Note that extended debugging may create certain race conditions
  itself. Enable this ONLY if you suspect problems with the driver.

ATM_ENI_TUNE_BURST
  In order to obtain good throughput, the ENI NIC can transfer
  multiple words of data per PCI bus access cycle. Such a multi-word
  transfer is called a burst.
  
  The default settings for the burst sizes are suitable for most PCI
  chipsets. However, in some cases, large bursts may overrun buffers
  in the PCI chipset and cause data corruption. In such cases, large
  bursts must be disabled and only (slower) small bursts can be used.
  The burst sizes can be set independently in the send (TX) and
  receive (RX) direction.
  
  Note that enabling many different burst sizes in the same direction
  may increase the cost of setting up a transfer such that the
  resulting throughput is lower than when using only the largest
  available burst size.
  
  Also, sometimes larger bursts lead to lower throughput, e.g. on an
  Intel 440FX board, a drop from 135 Mbps to 103 Mbps was observed
  when going from 8W to 16W bursts.

ATM_FIRESTREAM
  Driver for the Fujitsu FireStream 155 (MB86697) and
  FireStream 50 (MB86695) ATM PCI chips.
  
  To compile this driver as a module, choose M here: the module will
  be called firestream.

ATM_FORE200E
  This is a driver for the FORE Systems 200E-series ATM adapter
  cards. It simultaneously supports PCA-200E and SBA-200E models
  on PCI and SBUS hosts. Say Y (or M to compile as a module
  named fore_200e) here if you have one of these ATM adapters.
  
  See the file
  <file:Documentation/networking/device_drivers/atm/fore200e.rst> for
  further details.

ATM_FORE200E_DEBUG
  Specifies the level of debugging messages issued by the driver.
  The verbosity of the driver increases with the value of this
  parameter.
  
  When active, these messages can have a significant impact on
  the performances of the driver, and the size of your syslog files!
  Keep the debugging level to 0 during normal operations.

ATM_FORE200E_TX_RETRY
  Specifies the number of times the driver attempts to transmit
  a message before giving up, if the transmit queue of the ATM card
  is transiently saturated.
  
  Saturation of the transmit queue may occur only under extreme
  conditions, e.g. when a fast host continuously submits very small
  frames (<64 bytes) or raw AAL0 cells (48 bytes) to the ATM adapter.
  
  Note that under common conditions, it is unlikely that you encounter
  a saturation of the transmit queue, so the retry mechanism never
  comes into play.

ATM_FORE200E_USE_TASKLET
  This defers work to be done by the interrupt handler to a
  tasklet instead of handling everything at interrupt time.  This
  may improve the responsive of the host.

ATM_HE
  This is a driver for the Marconi ForeRunner HE-series ATM adapter
  cards. It simultaneously supports the 155 and 622 versions.

ATM_HE_USE_SUNI
  Support for the S/UNI-Ultra and S/UNI-622 found in the ForeRunner
  HE cards.  This driver provides carrier detection some statistics.

ATM_HORIZON
  This is a driver for the Horizon chipset ATM adapter cards once
  produced by Madge Networks Ltd. Say Y (or M to compile as a module
  named horizon) here if you have one of these cards.

ATM_HORIZON_DEBUG
  Somewhat useful debugging messages are available. The choice of
  messages is controlled by a bitmap.  This may be specified as a
  module argument (kernel command line argument as well?), changed
  dynamically using an ioctl (not yet) or changed by sending the
  string "Dxxxx" to VCI 1023 (where x is a hex digit).  See the file
  <file:drivers/atm/horizon.h> for the meanings of the bits in the
  mask.
  
  When active, these messages can have a significant impact on the
  speed of the driver, and the size of your syslog files! When
  inactive, they will have only a modest impact on performance.

ATM_IA
  This is a driver for the Interphase (i)ChipSAR adapter cards
  which include a variety of variants in term of the size of the
  control memory (128K-1KVC, 512K-4KVC), the size of the packet
  memory (128K, 512K, 1M), and the PHY type (Single/Multi mode OC3,
  UTP155, UTP25, DS3 and E3). Go to:
          <http://www.iphase.com/>
  for more info about the cards. Say Y (or M to compile as a module
  named iphase) here if you have one of these cards.
  
  See the file
  <file:Documentation/networking/device_drivers/atm/iphase.rst>
  for further details.

ATM_IA_DEBUG
  Somewhat useful debugging messages are available. The choice of
  messages is controlled by a bitmap. This may be specified as a
  module argument (kernel command line argument as well?), changed
  dynamically using an ioctl (Get the debug utility, iadbg, from
  <ftp://ftp.iphase.com/pub/atm/pci/>).
  
  See the file <file:drivers/atm/iphase.h> for the meanings of the
  bits in the mask.
  
  When active, these messages can have a significant impact on the
  speed of the driver, and the size of your syslog files! When
  inactive, they will have only a modest impact on performance.

ATM_IDT77252
  Driver for the IDT 77252 ATM PCI chips.
  
  To compile this driver as a module, choose M here: the module will
  be called idt77252.

ATM_IDT77252_DEBUG
  Somewhat useful debugging messages are available. The choice of
  messages is controlled by a bitmap.  This may be specified as a
  module argument.  See the file <file:drivers/atm/idt77252.h> for
  the meanings of the bits in the mask.
  
  When active, these messages can have a significant impact on the
  speed of the driver, and the size of your syslog files! When
  inactive, they will have only a modest impact on performance.

ATM_IDT77252_RCV_ALL
  Enable receiving of all cells on the ATM link, that do not match
  an open connection in the raw cell queue of the driver.  Useful
  for debugging or special applications only, so the safe answer is N.

ATM_IDT77252_USE_SUNI
  No help

ATM_LANAI
  Supports ATM cards based on the Efficient Networks "Lanai"
  chipset such as the Speedstream 3010 and the ENI-25p.  The
  Speedstream 3060 is currently not supported since we don't
  have the code to drive the on-board Alcatel DSL chipset (yet).

ATM_LANE
  LAN Emulation emulates services of existing LANs across an ATM
  network. Besides operating as a normal ATM end station client, Linux
  LANE client can also act as an proxy client bridging packets between
  ELAN and Ethernet segments. You need LANE if you want to try MPOA.

ATM_MPOA
  Multi-Protocol Over ATM allows ATM edge devices such as routers,
  bridges and ATM attached hosts establish direct ATM VCs across
  subnetwork boundaries. These shortcut connections bypass routers
  enhancing overall network performance.

ATM_NICSTAR
  The NICStAR chipset family is used in a large number of ATM NICs for
  25 and for 155 Mbps, including IDT cards and the Fore ForeRunnerLE
  series. Say Y if you have one of those.
  
  To compile this driver as a module, choose M here: the module will
  be called nicstar.

ATM_NICSTAR_USE_IDT77105
  Support for the PHYsical layer chip in ForeRunner LE25 cards. In
  addition to cable removal/reinsertion detection, this driver allows
  you to control the loopback mode of the chip via a dedicated IOCTL.
  This driver is required for proper handling of temporary carrier
  loss, so if you have a 25Mbps NICStAR based ATM card you must say Y.

ATM_NICSTAR_USE_SUNI
  Support for the S-UNI and compatible PHYsical layer chips. These are
  found in most 155Mbps NICStAR based ATM cards, namely in the
  ForeRunner LE155 cards. This driver provides detection of cable~
  removal and reinsertion and provides some statistics. This driver
  doesn't have removal capability when compiled as a module, so if you
  need that capability don't include S-UNI support (it's not needed to
  make the card work).

ATM_SOLOS
  Support for the Solos multiport ADSL2+ card.

ATM_TCP
  ATM over TCP driver. Useful mainly for development and for
  experiments. If unsure, say N.

ATM_ZATM
  Driver for the ZeitNet ZN1221 (MMF) and ZN1225 (UTP-5) 155 Mbps ATM
  adapters.
  
  To compile this driver as a module, choose M here: the module will
  be called zatm.

ATM_ZATM_DEBUG
  Extended debugging records various events and displays that list
  when an inconsistency is detected. This mechanism is faster than
  generally using printks, but still has some impact on performance.
  Note that extended debugging may create certain race conditions
  itself. Enable this ONLY if you suspect problems with the driver.

ATOMIC64_SELFTEST
  Enable this option to test the atomic64_t functions at boot or
  at module load time.
  
  If unsure, say N.

ATP
  This is a network (Ethernet) device which attaches to your parallel
  port. Read the file <file:drivers/net/ethernet/realtek/atp.c>
  if you want to use this.  If you intend to use this driver, you
  should have said N to the "Parallel printer support", because the two
  drivers don't like each other.
  
  To compile this driver as a module, choose M here: the module
  will be called atp.

AT_HDMAC
  Support the Atmel AHB DMA controller.

AT_XDMAC
  Support the Atmel XDMA controller.

AUDIT
  Enable auditing infrastructure that can be used with another
  kernel subsystem, such as SELinux (which requires this for
  logging of avc messages output).  System call auditing is included
  on architectures which support it.

AUDITSYSCALL
  No help

AUDIT_ARCH
  No help

AUDIT_ARCH_COMPAT_GENERIC
  No help

AUDIT_COMPAT_GENERIC
  No help

AUDIT_GENERIC
  No help

AURORA_NB8800
  Support for the AU-NB8800 gigabit Ethernet controller.

AUTOFS4_FS
  This name exists for people to just automatically pick up the
  new name of the autofs Kconfig option. All it does is select
  the new option name.
  
  It will go away in a release or two as people have
  transitioned to just plain AUTOFS_FS.

AUTOFS_FS
  The automounter is a tool to automatically mount remote file systems
  on demand. This implementation is partially kernel-based to reduce
  overhead in the already-mounted case; this is unlike the BSD
  automounter (amd), which is a pure user space daemon.
  
  To use the automounter you need the user-space tools from
  <https://www.kernel.org/pub/linux/daemons/autofs/>; you also want
  to answer Y to "NFS file system support", below.
  
  To compile this support as a module, choose M here: the module will be
  called autofs.
  
  If you are not a part of a fairly large, distributed network or
  don't have a laptop which needs to dynamically reconfigure to the
  local network, you probably do not need an automounter, and can say
  N here.

AUTO_IRQ_AFFINITY
  No help

AUXDISPLAY
  Say Y here to get to see options for auxiliary display drivers.
  This option alone does not add any kernel code.
  
  If you say N, all options in this submenu will be skipped and disabled.

AUXILIARY_BUS
  No help

AX25
  This is the protocol used for computer communication over amateur
  radio. It is either used by itself for point-to-point links, or to
  carry other protocols such as tcp/ip. To use it, you need a device
  that connects your Linux box to your amateur radio. You can either
  use a low speed TNC (a Terminal Node Controller acts as a kind of
  modem connecting your computer's serial port to your radio's
  microphone input and speaker output) supporting the KISS protocol or
  one of the various SCC cards that are supported by the generic Z8530
  or the DMA SCC driver. Another option are the Baycom modem serial
  and parallel port hacks or the sound card modem (supported by their
  own drivers). If you say Y here, you also have to say Y to one of
  those drivers.
  
  Information about where to get supporting software for Linux amateur
  radio as well as information about how to configure an AX.25 port is
  contained in the AX25-HOWTO, available from
  <https://www.tldp.org/docs.html#howto>. You might also want to
  check out the file <file:Documentation/networking/ax25.rst> in the
  kernel source. More information about digital amateur radio in
  general is on the WWW at
  <https://www.tapr.org/>.
  
  To compile this driver as a module, choose M here: the
  module will be called ax25.

AX25_DAMA_MASTER
  DAMA is a mechanism to prevent collisions when doing AX.25
  networking. A DAMA server (called "master") accepts incoming traffic
  from clients (called "slaves") and redistributes it to other slaves.
  If you say Y here, your Linux box will act as a DAMA master; this is
  transparent in that you don't have to do any special DAMA
  configuration. Linux cannot yet act as a DAMA server.  This option
  only compiles DAMA slave support into the kernel.  It still needs to
  be explicitly enabled, so if unsure, say Y.

AX25_DAMA_SLAVE
  DAMA is a mechanism to prevent collisions when doing AX.25
  networking. A DAMA server (called "master") accepts incoming traffic
  from clients (called "slaves") and redistributes it to other slaves.
  If you say Y here, your Linux box will act as a DAMA slave; this is
  transparent in that you don't have to do any special DAMA
  configuration. Linux cannot yet act as a DAMA server.  This option
  only compiles DAMA slave support into the kernel.  It still needs to
  be enabled at runtime.  For more about DAMA see
  <http://www.linux-ax25.org>.  If unsure, say Y.

AX88796
  AX88796 driver, using platform bus to provide
  chip detection and resources

AX88796B_PHY
  Currently supports the Asix Electronics PHY found in the X-Surf 100
  AX88796B package.

AX88796_93CX6
  Select this if your platform comes with an external 93CX6 eeprom.

AXI_DMAC
  Enable support for the Analog Devices AXI-DMAC peripheral. This DMA
  controller is often used in Analog Devices' reference designs for FPGA
  platforms.

AXP20X_ADC
  Say yes here to have support for X-Powers power management IC (PMIC)
  AXP20X and AXP22X ADC devices.
  
  To compile this driver as a module, choose M here: the module will be
  called axp20x_adc.

AXP20X_POWER
  This driver provides support for the power supply features of
  AXP20x PMIC.

AXP288_ADC
  Say yes here to have support for X-Powers power management IC (PMIC) ADC
  device. Depending on platform configuration, this general purpose ADC can
  be used for sampling sensors such as thermal resistors.
  
  To compile this driver as a module, choose M here: the module will be
  called axp288_adc.

AXP288_CHARGER
  Say yes here to have support X-Power AXP288 power management IC (PMIC)
  integrated charger.

AXP288_FUEL_GAUGE
  Say yes here to have support for X-Power power management IC (PMIC)
  Fuel Gauge. The device provides battery statistics and status
  monitoring as well as alerts for battery over/under voltage and
  over/under temperature.

B43
  b43 is a driver for the Broadcom 43xx series wireless devices.
  
  Check "lspci" for something like
  "Broadcom Corporation BCM43XX 802.11 Wireless LAN Controller"
  to determine whether you own such a device.
  
  This driver supports the new BCM43xx IEEE 802.11G devices, but not
  the old IEEE 802.11B devices. Old devices are supported by
  the b43legacy driver.
  Note that this has nothing to do with the standard that your AccessPoint
  supports (A, B, G or a combination).
  IEEE 802.11G devices can talk to IEEE 802.11B AccessPoints.
  
  It is safe to include both b43 and b43legacy as the underlying glue
  layer will automatically load the correct version for your device.
  
  This driver uses V4 firmware, which must be installed separately using
  b43-fwcutter.
  
  This driver can be built as a module (recommended) that will be called "b43".
  If unsure, say M.

B43LEGACY
  b43legacy is a driver for 802.11b devices from Broadcom (BCM4301 and
  BCM4303) and early model 802.11g chips (BCM4306 Ver. 2) used in the
  Linksys WPC54G V1 PCMCIA devices.
  
  Newer 802.11g and 802.11a devices need b43.
  
  It is safe to include both b43 and b43legacy as the underlying glue
  layer will automatically load the correct version for your device.
  
  This driver uses V3 firmware, which must be installed separately using
  b43-fwcutter.
  
  This driver can be built as a module (recommended) that will be
  called "b43legacy". If unsure, say M.

B43LEGACY_DEBUG
  Say Y, because this information will help you get the driver running.
  This option generates a minimum of log output.

B43LEGACY_DMA
  No help

B43LEGACY_DMA_AND_PIO_MODE
  Include both, Direct Memory Access (DMA) and Programmed I/O (PIO)
  data transfer modes. The mode actually used is selectable through
  the module parameter "pio". With pio=0 as a module parameter, the
  default DMA is used, otherwise PIO is used.
  
  If unsure, choose this option.

B43LEGACY_DMA_MODE
  Only include Direct Memory Access (DMA).
  This reduces the size of the driver module, by omitting the PIO code.

B43LEGACY_HWRNG
  No help

B43LEGACY_LEDS
  No help

B43LEGACY_PCICORE_AUTOSELECT
  No help

B43LEGACY_PCI_AUTOSELECT
  No help

B43LEGACY_PIO
  No help

B43LEGACY_PIO_MODE
  Only include Programmed I/O (PIO).
  This reduces the size of the driver module, by omitting the DMA code.
  Please note that PIO transfers are slow (compared to DMA).
  
  Also note that not all devices of the b43legacy series support PIO.
  
  You should use PIO only if DMA does not work for you.

B43_BCMA
  No help

B43_BCMA_PIO
  No help

B43_BUSES_BCMA
  No help

B43_BUSES_BCMA_AND_SSB
  No help

B43_BUSES_SSB
  No help

B43_DEBUG
  Broadcom 43xx debugging.
  
  This adds additional runtime sanity checks and statistics to the driver.
  These checks and statistics might be expensive and hurt the runtime
  performance of your system.
  This also adds the b43 debugfs interface.
  
  Do not enable this, unless you are debugging the driver.
  
  Say N, if you are a distributor or user building a release kernel
  for production use.
  Only say Y, if you are debugging a problem in the b43 driver sourcecode.

B43_HWRNG
  No help

B43_LEDS
  No help

B43_PCICORE_AUTOSELECT
  No help

B43_PCI_AUTOSELECT
  No help

B43_PHY_AC
  This PHY type can be found in the following chipsets:
  PCI: BCM4352, BCM4360
  
  Say N, this is BROKEN and crashes driver.

B43_PHY_G
  This PHY type can be found in the following chipsets:
  PCI: BCM4306, BCM4311, BCM4318
  SoC: BCM4712, BCM5352E

B43_PHY_HT
  This PHY type with 3x3:3 MIMO can be found in the BCM4331 PCI chipset.

B43_PHY_LCN
  Support for the LCN-PHY.
  
  Say N, this is BROKEN and crashes driver.

B43_PHY_LP
  The LP-PHY is a low-power PHY built into some notebooks
  and embedded devices. It supports 802.11a/b/g
  (802.11a support is optional, and currently disabled).

B43_PHY_N
  This PHY type can be found in the following chipsets:
  PCI: BCM4321, BCM4322,
       BCM43222, BCM43224, BCM43225,
       BCM43131, BCM43217, BCM43227, BCM43228
  SoC: BCM4716, BCM4717, BCM4718, BCM5356, BCM5357, BCM5358

B43_PIO
  No help

B43_SDIO
  Broadcom 43xx device support for Soft-MAC SDIO devices.
  
  With this config option you can drive Soft-MAC b43 cards with a
  Secure Digital I/O interface.
  This includes the WLAN daughter card found on the Nintendo Wii
  video game console.
  Note that this does not support Broadcom 43xx Full-MAC devices.
  
  It's safe to select Y here, even if you don't have a B43 SDIO device.
  
  If unsure, say N.

B43_SSB
  No help

B44
  If you have a network (Ethernet) controller of this type, say Y
  or M here.
  
  To compile this driver as a module, choose M here. The module
  will be called b44.

B44_PCI
  No help

B44_PCICORE_AUTOSELECT
  No help

B44_PCI_AUTOSELECT
  No help

B53
  This driver adds support for Broadcom managed switch chips. It supports
  BCM5325E, BCM5365, BCM539x, BCM53115 and BCM53125 as well as BCM63XX
  integrated switches.

B53_MDIO_DRIVER
  Select to enable support for registering switches configured through MDIO.

B53_MMAP_DRIVER
  Select to enable support for memory-mapped switches like the BCM63XX
  integrated switches.

B53_SERDES
  Select to enable support for SerDes on e.g: Northstar Plus SoCs.

B53_SPI_DRIVER
  Select to enable support for registering switches configured through SPI.

B53_SRAB_DRIVER
  Select to enable support for memory-mapped Switch Register Access
  Bridge Registers (SRAB) like it is found on the BCM53010

BACKLIGHT_88PM860X
  Say Y to enable the backlight driver for Marvell 88PM8606.

BACKLIGHT_AAT2870
  If you have a AnalogicTech AAT2870 say Y to enable the
  backlight driver.

BACKLIGHT_ADP5520
  If you have a LCD backlight connected to the BST/BL_SNK output of
  ADP5520 or ADP5501, say Y here to enable this driver.
  
  To compile this driver as a module, choose M here: the module will
  be called adp5520_bl.

BACKLIGHT_ADP8860
  If you have a LCD backlight connected to the ADP8860, ADP8861 or
  ADP8863 say Y here to enable this driver.
  
  To compile this driver as a module, choose M here: the module will
  be called adp8860_bl.

BACKLIGHT_ADP8870
  If you have a LCD backlight connected to the ADP8870,
  say Y here to enable this driver.
  
  To compile this driver as a module, choose M here: the module will
  be called adp8870_bl.

BACKLIGHT_APPLE
  If you have an Intel-based Apple say Y to enable a driver for its
  backlight.

BACKLIGHT_ARCXCNN
  If you have an ARCxCnnnn family backlight say Y to enable
  the backlight driver.

BACKLIGHT_AS3711
  If you have an Austrian Microsystems AS3711 say Y to enable the
  backlight driver.

BACKLIGHT_ATMEL_LCDC
  This provides a backlight control internal to the Atmel LCDC
  driver.  If the LCD "contrast control" on your board is wired
  so it controls the backlight brightness, select this option to
  export this as a PWM-based backlight control.
  
  If in doubt, it's safe to enable this option; it doesn't kick
  in unless the board's description says it's wired that way.

BACKLIGHT_BD6107
  If you have a Rohm BD6107 say Y to enable the backlight driver.

BACKLIGHT_CARILLO_RANCH
  If you have a Intel LE80578 (Carillo Ranch) say Y to enable the
  backlight driver.

BACKLIGHT_CLASS_DEVICE
  This framework adds support for low-level control of the LCD
  backlight. This includes support for brightness and power.
  
  To have support for your specific LCD panel you will have to
  select the proper drivers which depend on this option.

BACKLIGHT_DA903X
  If you have a LCD backlight connected to the WLED output of DA9030
  or DA9034 WLED output, say Y here to enable this driver.

BACKLIGHT_DA9052
  Enable the Backlight Driver for DA9052-BC and DA9053-AA/Bx PMICs.

BACKLIGHT_EP93XX
  If you have a LCD backlight connected to the BRIGHT output of
  the EP93xx, say Y here to enable this driver.
  
  To compile this driver as a module, choose M here: the module will
  be called ep93xx_bl.

BACKLIGHT_GPIO
  If you have a LCD backlight adjustable by GPIO, say Y to enable
  this driver.

BACKLIGHT_HP680
  If you have a HP Jornada 680, say y to enable the
  backlight driver.

BACKLIGHT_HP700
  If you have an HP Jornada 700 series,
  say Y to include backlight control driver.

BACKLIGHT_IPAQ_MICRO
  Say y to enable the backlight driver for Compaq iPAQ handheld
  computers. Say yes if you have one of the h3100/h3600/h3700
  machines.

BACKLIGHT_KTD253
  Say y to enabled the backlight driver for the Kinetic KTD253
  which is a 1-wire GPIO-controlled backlight found in some mobile
  phones.

BACKLIGHT_LED
  If you have a LCD backlight adjustable by LED class driver, say Y
  to enable this driver.

BACKLIGHT_LM3533
  Say Y to enable the backlight driver for National Semiconductor / TI
  LM3533 Lighting Power chips.
  
  The backlights can be controlled directly, through PWM input, or by
  the ambient-light-sensor interface. The chip supports 256 brightness
  levels.

BACKLIGHT_LM3630A
  This supports TI LM3630A Backlight Driver

BACKLIGHT_LM3639
  This supports TI LM3639 Backlight + 1.5A Flash LED Driver

BACKLIGHT_LOCOMO
  If you have a Sharp Zaurus SL-5500 (Collie) or SL-5600 (Poodle) say y to
  enable the LCD/backlight driver.

BACKLIGHT_LP855X
  This supports TI LP8550, LP8551, LP8552, LP8553, LP8555, LP8556 and
  LP8557 backlight driver.

BACKLIGHT_LP8788
  This supports TI LP8788 backlight driver.

BACKLIGHT_LV5207LP
  If you have a Sanyo LV5207LP say Y to enable the backlight driver.

BACKLIGHT_MAX8925
  If you have a LCD backlight connected to the WLED output of MAX8925
  WLED output, say Y here to enable this driver.

BACKLIGHT_OMAP1
  This driver controls the LCD backlight level and power for
  the PWL module of OMAP1 processors.  Say Y if your board
  uses this hardware.

BACKLIGHT_PANDORA
  If you have a Pandora console, say Y to enable the
  backlight driver.

BACKLIGHT_PCF50633
  If you have a backlight driven by a NXP PCF50633 MFD, say Y here to
  enable its driver.

BACKLIGHT_PWM
  If you have a LCD backlight adjustable by PWM, say Y to enable
  this driver.

BACKLIGHT_QCOM_WLED
  If you have the Qualcomm PMIC, say Y to enable a driver for the
  WLED block. Currently it supports PM8941 and PMI8998.

BACKLIGHT_RAVE_SP
  Support for backlight control on RAVE SP device.

BACKLIGHT_SAHARA
  If you have a Tabletkiosk Sahara Touch-iT, say y to enable the
  backlight driver.

BACKLIGHT_SKY81452
  If you have a Skyworks SKY81452, say Y to enable the
  backlight driver.
  
  To compile this driver as a module, choose M here: the module will
  be called sky81452-backlight

BACKLIGHT_TOSA
  If you have an Sharp SL-6000 Zaurus say Y to enable a driver
  for its backlight

BACKLIGHT_TPS65217
  If you have a Texas Instruments TPS65217 say Y to enable the
  backlight driver.

BACKLIGHT_WM831X
  If you have a backlight driven by the ISINK and DCDC of a
  WM831x PMIC say y to enable the backlight driver for it.

BACKTRACE_SELF_TEST
  This option provides a kernel module that can be used to test
  the kernel stack backtrace code. This option is not useful
  for distributions or general kernels, but only for kernel
  developers working on architecture code.
  
  Note that if you want to also test saved backtraces, you will
  have to enable STACKTRACE as well.
  
  Say N if you are unsure.

BALLOON_COMPACTION
  Memory fragmentation introduced by ballooning might reduce
  significantly the number of 2MB contiguous memory blocks that can be
  used within a guest, thus imposing performance penalties associated
  with the reduced number of transparent huge pages that could be used
  by the guest workload. Allowing the compaction & migration for memory
  pages enlisted as being part of memory balloon devices avoids the
  scenario aforementioned and helps improving memory defragmentation.

BAREUDP
  This adds a bare UDP tunnel module for tunnelling different
  kinds of traffic like MPLS, IP, etc. inside a UDP tunnel.
  
  To compile this driver as a module, choose M here: the module
  will be called bareudp.

BASE_FULL
  Disabling this option reduces the size of miscellaneous core
  kernel data structures. This saves memory on small machines,
  but may reduce performance.

BASE_SMALL
  No help

BATMAN_ADV
  B.A.T.M.A.N. (better approach to mobile ad-hoc networking) is
  a routing protocol for multi-hop ad-hoc mesh networks. The
  networks may be wired or wireless. See
  https://www.open-mesh.org/ for more information and user space
  tools.

BATMAN_ADV_BATMAN_V
  This option enables the B.A.T.M.A.N. V protocol, the successor
  of the currently used B.A.T.M.A.N. IV protocol. The main
  changes include splitting of the OGM protocol into a neighbor
  discovery protocol (Echo Location Protocol, ELP) and a new OGM
  Protocol OGMv2 for flooding protocol information through the
  network, as well as a throughput based metric.
  B.A.T.M.A.N. V is currently considered experimental and not
  compatible to B.A.T.M.A.N. IV networks.

BATMAN_ADV_BLA
  This option enables BLA (Bridge Loop Avoidance), a mechanism
  to avoid Ethernet frames looping when mesh nodes are connected
  to both the same LAN and the same mesh. If you will never use
  more than one mesh node in the same LAN, you can safely remove
  this feature and save some space.

BATMAN_ADV_DAT
  This option enables DAT (Distributed ARP Table), a DHT based
  mechanism that increases ARP reliability on sparse wireless
  mesh networks. If you think that your network does not need
  this option you can safely remove it and save some space.

BATMAN_ADV_DEBUG
  This is an option for use by developers; most people should
  say N here. This enables compilation of support for
  outputting debugging information to the tracing buffer. The output is
  controlled via the batadv netdev specific log_level setting.

BATMAN_ADV_MCAST
  This option enables the multicast optimisation which aims to
  reduce the air overhead while improving the reliability of
  multicast messages.

BATMAN_ADV_NC
  This option enables network coding, a mechanism that aims to
  increase the overall network throughput by fusing multiple
  packets in one transmission.
  Note that interfaces controlled by batman-adv must be manually
  configured to have promiscuous mode enabled in order to make
  network coding work.
  If you think that your network does not need this feature you
  can safely disable it and save some space.

BATMAN_ADV_TRACING
  This is an option for use by developers; most people should
  say N here. Select this option to gather traces like the debug
  messages using the generic tracing infrastructure of the kernel.
  BATMAN_ADV_DEBUG must also be selected to get trace events for
  batadv_dbg.

BATTERY_88PM860X
  Say Y here to enable battery monitor for Marvell 88PM860x chip.

BATTERY_ACT8945A
  Say Y here to enable support for power supply provided by
  Active-semi ActivePath ACT8945A charger.

BATTERY_AXP20X
  Say Y here to enable support for X-Powers AXP20X PMICs' battery power
  supply.
  
  This driver can also be built as a module. If so, the module will be
  called axp20x_battery.

BATTERY_BQ27XXX
  Say Y here to enable support for batteries with BQ27xxx chips.

BATTERY_BQ27XXX_DT_UPDATES_NVM
  Say Y here to enable devicetree monitored-battery config to update
  NVM/flash data memory. Only enable this option for devices with a
  fuel gauge mounted on the circuit board, and a battery that cannot
  easily be replaced with one of a different type. Not for
  general-purpose kernels, as this can cause misconfiguration of a
  smart battery with embedded NVM/flash.

BATTERY_BQ27XXX_HDQ
  Say Y here to enable support for batteries with BQ27xxx chips
  connected over an HDQ bus.

BATTERY_BQ27XXX_I2C
  Say Y here to enable support for batteries with BQ27xxx chips
  connected over an I2C bus.

BATTERY_COLLIE
  Say Y to enable support for the battery on the Sharp Zaurus
  SL-5500 (collie) models.

BATTERY_CPCAP
  Say Y here to enable support for battery on Motorola
  phones and tablets such as droid 4.

BATTERY_CW2015
  Say Y here to enable support for the cellwise cw2015
  battery fuel gauge (used in the Pinebook Pro & others)
  
  This driver can also be built as a module. If so, the module will be
  called cw2015_battery.

BATTERY_DA9030
  Say Y here to enable support for batteries charger integrated into
  DA9030 PMIC.

BATTERY_DA9052
  Say Y here to enable support for batteries charger integrated into
  DA9052 PMIC.

BATTERY_DA9150
  Say Y here to enable support for the Fuel-Gauge unit of the DA9150
  Integrated Charger & Fuel-Gauge IC
  
  This driver can also be built as a module. If so, the module will be
  called da9150-fg.

BATTERY_DS2760
  Say Y here to enable support for batteries with ds2760 chip.

BATTERY_DS2780
  Say Y here to enable support for batteries with ds2780 chip.

BATTERY_DS2781
  If you enable this you will have the DS2781 battery driver support.
  
  The battery monitor chip is used in many batteries/devices
  as the one who is responsible for charging/discharging/monitoring
  Li+ batteries.
  
  If you are unsure, say N.

BATTERY_DS2782
  Say Y here to enable support for the DS2782/DS2786 standalone battery
  gas-gauge.

BATTERY_GAUGE_LTC2941
  Say Y here to include support for LTC2941 and LTC2943 Battery
  Gauge IC. The driver reports the charge count continuously, and
  measures the voltage and temperature every 10 seconds.

BATTERY_GOLDFISH
  Say Y to enable support for the battery and AC power in the
  Goldfish emulator.

BATTERY_INGENIC
  Choose this option if you want to monitor battery status on
  Ingenic JZ47xx SoC based devices.
  
  This driver can also be built as a module. If so, the module will be
  called ingenic-battery.

BATTERY_IPAQ_MICRO
  Choose this option if you want to monitor battery status on
  Compaq/HP iPAQ h3100 and h3600.

BATTERY_LEGO_EV3
  Say Y here to enable support for the LEGO MINDSTORMS EV3 battery.

BATTERY_MAX17040
  Maxim models with ModelGauge are fuel-gauge systems for lithium-ion
  (Li+) batteries in handheld and portable equipment, including
  max17040, max17041, max17043, max17044, max17048, max17049, max17058,
  max17059. It is also included in some batteries like max77836.
  
  Driver supports reporting SOC (State of Charge, i.e capacity),
  voltage and configurable low-SOC wakeup interrupt.

BATTERY_MAX17042
  MAX17042 is fuel-gauge systems for lithium-ion (Li+) batteries
  in handheld and portable equipment. The MAX17042 is configured
  to operate with a single lithium cell. MAX8997 and MAX8966 are
  multi-function devices that include fuel gauages that are compatible
  with MAX17042. This driver also supports max17047/50 chips which are
  improved version of max17042.

BATTERY_MAX1721X
  MAX1721x is fuel-gauge systems for lithium-ion (Li+) batteries
  in handheld and portable equipment. MAX17211 used with single cell
  battery. MAX17215 designed for muticell battery. Both them have
  OneWire (W1) host interface.
  
  Say Y here to enable support for the MAX17211/MAX17215 standalone
  battery gas-gauge.

BATTERY_OLPC
  Say Y to enable support for the battery on the OLPC laptop.

BATTERY_PMU
  Say Y here to expose battery information on Apple machines
  through the generic battery class.

BATTERY_RT5033
  This adds support for battery fuel gauge in Richtek RT5033 PMIC.
  The fuelgauge calculates and determines the battery state of charge
  according to battery open circuit voltage.

BATTERY_RX51
  Say Y here to enable support for battery information on Nokia
  RX-51, also known as N900 tablet.

BATTERY_S3C_ADC
  Say Y here to enable support for iPAQ h1930/h1940/rx1950 battery

BATTERY_SBS
  Say Y to include support for SBS battery driver for SBS-compliant
  gas gauges.

BATTERY_TOSA
  Say Y to enable support for the battery on the Sharp Zaurus
  SL-6000 (tosa) models.

BATTERY_TWL4030_MADC
  Say Y here to enable this dumb driver for batteries managed
  through the TWL4030 MADC.

BATTERY_WM97XX
  Say Y to enable support for battery measured by WM97xx aux port.

BATTERY_Z2
  Say Y to include support for the battery on the Zipit Z2.

BAYCOM_EPP
  This is a driver for Baycom style simple amateur radio modems that
  connect to a parallel interface. The driver supports the EPP
  designs. To configure the driver, use the sethdlc utility available
  in the standard ax25 utilities package. For information on the
  modems, see <http://www.baycom.de/> and the file
  <file:Documentation/networking/device_drivers/hamradio/baycom.rst>.
  
  To compile this driver as a module, choose M here: the module
  will be called baycom_epp.  This is recommended.

BAYCOM_PAR
  This is a driver for Baycom style simple amateur radio modems that
  connect to a parallel interface. The driver supports the picpar and
  par96 designs. To configure the driver, use the sethdlc utility
  available in the standard ax25 utilities package. For information on
  the modems, see <http://www.baycom.de/> and the file
  <file:Documentation/networking/device_drivers/hamradio/baycom.rst>.
  
  To compile this driver as a module, choose M here: the module
  will be called baycom_par.  This is recommended.

BAYCOM_SER_FDX
  This is one of two drivers for Baycom style simple amateur radio
  modems that connect to a serial interface. The driver supports the
  ser12 design in full-duplex mode. In addition, it allows the
  baudrate to be set between 300 and 4800 baud (however not all modems
  support all baudrates). This is the preferred driver. The next
  driver, "BAYCOM ser12 half-duplex driver for AX.25" is the old
  driver and still provided in case this driver does not work with
  your serial interface chip. To configure the driver, use the sethdlc
  utility available in the standard ax25 utilities package. For
  information on the modems, see <http://www.baycom.de/> and
  <file:Documentation/networking/device_drivers/hamradio/baycom.rst>.
  
  To compile this driver as a module, choose M here: the module
  will be called baycom_ser_fdx.  This is recommended.

BAYCOM_SER_HDX
  This is one of two drivers for Baycom style simple amateur radio
  modems that connect to a serial interface. The driver supports the
  ser12 design in half-duplex mode. This is the old driver.  It is
  still provided in case your serial interface chip does not work with
  the full-duplex driver. This driver is deprecated.  To configure
  the driver, use the sethdlc utility available in the standard ax25
  utilities package. For information on the modems, see
  <http://www.baycom.de/> and
  <file:Documentation/networking/device_drivers/hamradio/baycom.rst>.
  
  To compile this driver as a module, choose M here: the module
  will be called baycom_ser_hdx.  This is recommended.

BCACHE
  Allows a block device to be used as cache for other devices; uses
  a btree for indexing and the layout is optimized for SSDs.
  
  See Documentation/admin-guide/bcache.rst for details.

BCACHE_ASYNC_REGISTRATION
  Add a sysfs file /sys/fs/bcache/register_async. Writing registering
  device path into this file will returns immediately and the real
  registration work is handled in kernel work queue in asynchronous
  way.

BCACHE_CLOSURES_DEBUG
  Keeps all active closures in a linked list and provides a debugfs
  interface to list them, which makes it possible to see asynchronous
  operations that get stuck.

BCACHE_DEBUG
  Don't select this option unless you're a developer
  
  Enables extra debugging tools, allows expensive runtime checks to be
  turned on.

BCH
  No help

BCH_CONST_M
  Constant value for Galois field order 'm'. If 'k' is the
  number of data bits to protect, 'm' should be chosen such
  that (k + m*t) <= 2**m - 1.
  Drivers should declare a default value for this symbol if
  they select option BCH_CONST_PARAMS.

BCH_CONST_PARAMS
  Drivers may select this option to force specific constant
  values for parameters 'm' (Galois field order) and 't'
  (error correction capability). Those specific values must
  be set by declaring default values for symbols BCH_CONST_M
  and BCH_CONST_T.
  Doing so will enable extra compiler optimizations,
  improving encoding and decoding performance up to 2x for
  usual (m,t) values (typically such that m*t < 200).
  When this option is selected, the BCH library supports
  only a single (m,t) configuration. This is mainly useful
  for NAND flash board drivers requiring known, fixed BCH
  parameters.

BCH_CONST_T
  Constant value for error correction capability in bits 't'.
  Drivers should declare a default value for this symbol if
  they select option BCH_CONST_PARAMS.

BCM2711_THERMAL
  Support for thermal sensors on Broadcom BCM2711 SoCs.

BCM2835_MBOX
  An implementation of the BCM2385 Mailbox.  It is used to invoke
  the services of the Videocore. Say Y here if you want to use the
  BCM2835 Mailbox.

BCM2835_POWER
  This enables support for the BCM2835 power domains and reset
  controller.  Any usage of power domains by the Raspberry Pi
  firmware means that Linux usage of the same power domain
  must be accessed using the RASPBERRYPI_POWER driver

BCM2835_THERMAL
  Support for thermal sensors on Broadcom bcm2835 SoCs.

BCM2835_TIMER
  Enables the support for the BCM2835 timer driver.

BCM2835_VCHIQ
  Kernel to VideoCore communication interface for the
  BCM2835 family of products.
  Defaults to Y when the Broadcom Videocore services
  are included in the build, N otherwise.

BCM2835_VCHIQ_MMAL
  Enables the MMAL API over VCHIQ interface as used for the
  majority of the multimedia services on VideoCore.
  Defaults to Y when the Broadcomd BCM2835 camera host is selected.

BCM2835_WDT
  Watchdog driver for the built in watchdog hardware in Broadcom
  BCM2835 SoC.
  
  To compile this driver as a loadable module, choose M here.
  The module will be called bcm2835_wdt.

BCM47XX_NVRAM
  Broadcom home routers contain flash partition called "nvram" with all
  important hardware configuration as well as some minor user setup.
  NVRAM partition contains a text-like data representing name=value
  pairs.
  This driver provides an easy way to get value of requested parameter.
  It simply reads content of NVRAM and parses it. It doesn't control any
  hardware part itself.

BCM47XX_SPROM
  Broadcom devices store configuration data in SPROM. Accessing it is
  specific to the bus host type, e.g. PCI(e) devices have it mapped in
  a PCI BAR.
  In case of SoC devices SPROM content is stored on a flash used by
  bootloader firmware CFE. This driver provides method to ssb and bcma
  drivers to read SPROM on SoC.

BCM47XX_WDT
  Hardware driver for the Broadcom BCM47xx Watchdog Timer.

BCM54140_PHY
  Support the Broadcom BCM54140 Quad SGMII/QSGMII PHY.
  
  This driver also supports the hardware monitoring of this PHY and
  exposes voltage and temperature sensors.

BCM6345_L1_IRQ
  No help

BCM63XX_ENET
  This driver supports the ethernet MACs in the Broadcom 63xx
  MIPS chipset family (BCM63XX).

BCM63XX_PHY
  Currently supports the 6348 and 6358 PHYs.

BCM63XX_POWER
  This enables support for the BCM63xx power domains controller on
  BCM6318, BCM6328, BCM6362 and BCM63268 SoCs.

BCM63XX_WDT
  Watchdog driver for the built in watchdog hardware in Broadcom
  BCM63xx SoC.
  
  To compile this driver as a loadable module, choose M here.
  The module will be called bcm63xx_wdt.

BCM7038_L1_IRQ
  No help

BCM7038_WDT
  Watchdog driver for the built-in hardware in Broadcom 7038 and
  later SoCs used in set-top boxes.  BCM7038 was made public
  during the 2004 CES, and since then, many Broadcom chips use this
  watchdog block, including some cable modem chips.

BCM7120_L2_IRQ
  No help

BCM7XXX_PHY
  Currently supports the BCM7366, BCM7439, BCM7445, and
  40nm and 65nm generation of BCM7xxx Set Top Box SoCs.

BCM84881_PHY
  Support the Broadcom BCM84881 PHY.

BCM87XX_PHY
  Currently supports the BCM8706 and BCM8727 10G Ethernet PHYs.

BCMA
  Bus driver for Broadcom specific Advanced Microcontroller Bus
  Architecture.

BCMA_BLOCKIO
  No help

BCMA_DEBUG
  This turns on additional debugging messages.
  
  If unsure, say N

BCMA_DRIVER_GMAC_CMN
  Driver for the Broadcom GBIT MAC COMMON core attached to Broadcom
  specific Advanced Microcontroller Bus.
  
  If unsure, say N

BCMA_DRIVER_GPIO
  Driver to provide access to the GPIO pins of the bcma bus.
  
  If unsure, say N

BCMA_DRIVER_MIPS
  Driver for the Broadcom MIPS core attached to Broadcom specific
  Advanced Microcontroller Bus.
  
  If unsure, say N

BCMA_DRIVER_PCI
  BCMA bus may have many versions of PCIe core. This driver
  supports:
  1) PCIe core working in clientmode
  2) PCIe Gen 2 clientmode core
  
  In general PCIe (Gen 2) clientmode core is required on PCIe
  hosted buses. It's responsible for initialization and basic
  hardware management.
  This driver is also prerequisite for a hostmode PCIe core
  support.

BCMA_DRIVER_PCI_HOSTMODE
  PCI core hostmode operation (external PCI bus).

BCMA_HOST_PCI
  No help

BCMA_HOST_PCI_POSSIBLE
  No help

BCMA_HOST_SOC
  Host interface for a Broadcom AIX bus directly mapped into
  the memory. This only works with the Broadcom SoCs from the
  BCM47XX line.
  
  If unsure, say N

BCMA_NFLASH
  No help

BCMA_PFLASH
  No help

BCMA_POSSIBLE
  No help

BCMA_SFLASH
  Some cheap devices have serial flash connected to the ChipCommon
  instead of independent SPI controller. It requires using a separated
  driver that implements ChipCommon specific interface communication.
  
  Enabling this symbol will let bcma recognize serial flash and register
  it as platform device.

BCMGENET
  This driver supports the built-in Ethernet MACs found in the
  Broadcom BCM7xxx Set Top Box family chipset.

BCM_CYGNUS_PHY
  This PHY driver is for the 1G internal PHYs of the Broadcom
  Cygnus and Omega Family SoC.
  
  Currently supports internal PHY's used in the BCM11300,
  BCM11320, BCM11350, BCM11360, BCM58300, BCM58302,
  BCM58303 & BCM58305 Broadcom Cygnus SoCs.

BCM_FLEXRM_MBOX
  Mailbox implementation of the Broadcom FlexRM ring manager,
  which provides access to various offload engines on Broadcom
  SoCs. Say Y here if you want to use the Broadcom FlexRM.

BCM_IPROC_ADC
  Say Y here if you want to add support for the Broadcom static
  ADC driver.
  
  Broadcom iProc ADC driver. Broadcom iProc ADC controller has 8
  channels. The driver allows the user to read voltage values.

BCM_KONA_TIMER
  Enables the support for the BCM Kona mobile timer driver.

BCM_KONA_USB2_PHY
  Enable this to support the Broadcom Kona USB 2.0 PHY.

BCM_KONA_WDT
  Support for the watchdog timer on the following Broadcom BCM281xx
  family, which includes BCM11130, BCM11140, BCM11351, BCM28145 and
  BCM28155 variants.
  
  Say 'Y' or 'M' here to enable the driver. The module will be called
  bcm_kona_wdt.

BCM_KONA_WDT_DEBUG
  If enabled, adds /sys/kernel/debug/bcm_kona_wdt/info which provides
  access to the driver's internal data structures as well as watchdog
  timer hardware registres.
  
  If in doubt, say 'N'.

BCM_NET_PHYLIB
  No help

BCM_NS_THERMAL
  Support for the Northstar and Northstar Plus family of SoCs (e.g.
  BCM4708, BCM4709, BCM5301x, BCM95852X, etc). It contains DMU (Device
  Management Unit) block with a thermal sensor that allows checking CPU
  temperature.

BCM_PDC_MBOX
  Mailbox implementation for the Broadcom FlexSparx DMA ring manager,
  which provides access to various offload engines on Broadcom
  SoCs, including FA2/FA+ on Northstar Plus and PDC on Northstar 2.

BCM_SBA_RAID
  Enable support for Broadcom SBA RAID Engine. The SBA RAID
  engine is available on most of the Broadcom iProc SoCs. It
  has the capability to offload memcpy, xor and pq computation
  for raid5/6.

BCM_SR_THERMAL
  Support for the Stingray family of SoCs. Its different blocks like
  iHost, CRMU and NITRO has thermal sensor that allows checking its
  temperature.

BCM_VIDEOCORE
  Support for Broadcom VideoCore services including
  the BCM2835 family of products which is used
  by the Raspberry PI.

BD70528_WATCHDOG
  Support for the watchdog in the ROHM BD70528 PMIC. Watchdog trigger
  cause system reset.
  
  Say Y here to include support for the ROHM BD70528 watchdog.
  Alternatively say M to compile the driver as a module,
  which will be called bd70528_wdt.

BE2ISCSI
  This driver implements the iSCSI functionality for Emulex
  10Gbps Storage adapter - BladeEngine 2.

BE2NET
  This driver implements the NIC functionality for ServerEngines'
  10Gbps network adapter - BladeEngine.

BE2NET_BE2
  Say Y here if you want to use devices based on BE2
  chipsets. (e.g. OneConnect OCe10xxx)

BE2NET_BE3
  Say Y here if you want to use devices based on BE3
  chipsets. (e.g. OneConnect OCe11xxx)

BE2NET_HWMON
  Say Y here if you want to expose thermal sensor data on
  be2net network adapter.

BE2NET_LANCER
  Say Y here if you want to use devices based on Lancer
  chipsets. (e.g LightPulse LPe12xxx)

BE2NET_SKYHAWK
  Say Y here if you want to use devices based on Skyhawk
  chipsets. (e.g. OneConnect OCe14xxx)

BEFS_DEBUG
  If you say Y here, you can use the 'debug' mount option to enable
  debugging output from the driver.

BEFS_FS
  The BeOS File System (BeFS) is the native file system of Be, Inc's
  BeOS. Notable features include support for arbitrary attributes
  on files and directories, and database-like indices on selected
  attributes. (Also note that this driver doesn't make those features
  available at this time). It is a 64 bit filesystem, so it supports
  extremely large volumes and files.
  
  If you use this filesystem, you should also say Y to at least one
  of the NLS (native language support) options below.
  
  If you don't know what this is about, say N.
  
  To compile this as a module, choose M here: the module will be
  called befs.

BERLIN2_ADC
  Marvell Berlin2 ADC driver. This ADC has 8 channels, with one used for
  temperature measurement.

BFQ_CGROUP_DEBUG
  Enable some debugging help. Currently it exports additional stat
  files in a cgroup which can be useful for debugging.

BFQ_GROUP_IOSCHED
  Enable hierarchical scheduling in BFQ, using the blkio
  (cgroups-v1) or io (cgroups-v2) controller.

BFS_FS
  Boot File System (BFS) is a file system used under SCO UnixWare to
  allow the bootloader access to the kernel image and other important
  files during the boot process.  It is usually mounted under /stand
  and corresponds to the slice marked as "STAND" in the UnixWare
  partition.  You should say Y if you want to read or write the files
  on your /stand slice from within Linux.  You then also need to say Y
  to "UnixWare slices support", below.  More information about the BFS
  file system is contained in the file
  <file:Documentation/filesystems/bfs.rst>.
  
  If you don't know what this is about, say N.
  
  To compile this as a module, choose M here: the module will be called
  bfs.  Note that the file system of your root partition (the one
  containing the directory /) cannot be compiled as a module.

BGMAC
  This enables the integrated ethernet controller support for many
  Broadcom (mostly iProc) SoCs. An appropriate bus interface driver
  needs to be enabled to select this.

BGMAC_BCMA
  This driver supports GBit MAC and BCM4706 GBit MAC cores on BCMA bus.
  They can be found on BCM47xx SoCs and provide gigabit ethernet.
  In case of using this driver on BCM4706 it's also requires to enable
  BCMA_DRIVER_GMAC_CMN to make it work.

BGMAC_PLATFORM
  Say Y here if you want to use the Broadcom iProc Gigabit Ethernet
  controller through the generic platform interface

BH1750
  Say Y here to build support for the ROHM BH1710, BH1715, BH1721,
  BH1750, BH1751 ambient light sensors.
  
  To compile this driver as a module, choose M here: the module will
  be called bh1750.

BH1780
  Say Y here to build support for the ROHM BH1780GLI ambient
  light sensor.
  
  To compile this driver as a module, choose M here: the module will
  be called bh1780.

BIG_KEYS
  This option provides support for holding large keys within the kernel
  (for example Kerberos ticket caches).  The data may be stored out to
  swapspace by tmpfs.
  
  If you are unsure as to whether this is required, answer N.

BINARY_PRINTF
  No help

BINFMT_AOUT
  A.out (Assembler.OUTput) is a set of formats for libraries and
  executables used in the earliest versions of UNIX.  Linux used
  the a.out formats QMAGIC and ZMAGIC until they were replaced
  with the ELF format.
  
  The conversion to ELF started in 1995.  This option is primarily
  provided for historical interest and for the benefit of those
  who need to run binaries from that era.
  
  Most people should answer N here.  If you think you may have
  occasional use for this format, enable module support above
  and answer M here to compile this support as a module called
  binfmt_aout.
  
  If any crucial components of your system (such as /sbin/init
  or /lib/ld.so) are still in a.out format, you will have to
  say Y here.

BINFMT_ELF
  ELF (Executable and Linkable Format) is a format for libraries and
  executables used across different architectures and operating
  systems. Saying Y here will enable your kernel to run ELF binaries
  and enlarge it by about 13 KB. ELF support under Linux has now all
  but replaced the traditional Linux a.out formats (QMAGIC and ZMAGIC)
  because it is portable (this does *not* mean that you will be able
  to run executables from different architectures or operating systems
  however) and makes building run-time libraries very easy. Many new
  executables are distributed solely in ELF format. You definitely
  want to say Y here.
  
  Information about ELF is contained in the ELF HOWTO available from
  <http://www.tldp.org/docs.html#howto>.
  
  If you find that after upgrading from Linux kernel 1.2 and saying Y
  here, you still can't run any ELF binaries (they just crash), then
  you'll have to install the newest ELF runtime libraries, including
  ld.so (check the file <file:Documentation/Changes> for location and
  latest version).

BINFMT_ELF_FDPIC
  ELF FDPIC binaries are based on ELF, but allow the individual load
  segments of a binary to be located in memory independently of each
  other. This makes this format ideal for use in environments where no
  MMU is available as it still permits text segments to be shared,
  even if data segments are not.
  
  It is also possible to run FDPIC ELF binaries on MMU linux also.

BINFMT_EM86
  Say Y here if you want to be able to execute Linux/Intel ELF
  binaries just like native Alpha binaries on your Alpha machine. For
  this to work, you need to have the emulator /usr/bin/em86 in place.
  
  You can get the same functionality by saying N here and saying Y to
  "Kernel support for MISC binaries".
  
  You may answer M to compile the emulation support as a module and
  later load the module when you want to use a Linux/Intel binary. The
  module will be called binfmt_em86. If unsure, say Y.

BINFMT_FLAT
  Support uClinux FLAT format binaries.

BINFMT_FLAT_ARGVP_ENVP_ON_STACK
  No help

BINFMT_FLAT_OLD
  Support decade old uClinux FLAT format binaries.  Unless you know
  you have some of those say N here.

BINFMT_FLAT_OLD_ALWAYS_RAM
  No help

BINFMT_MISC
  If you say Y here, it will be possible to plug wrapper-driven binary
  formats into the kernel. You will like this especially when you use
  programs that need an interpreter to run like Java, Python, .NET or
  Emacs-Lisp. It's also useful if you often run DOS executables under
  the Linux DOS emulator DOSEMU (read the DOSEMU-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>). Once you have
  registered such a binary class with the kernel, you can start one of
  those programs simply by typing in its name at a shell prompt; Linux
  will automatically feed it to the correct interpreter.
  
  You can do other nice things, too. Read the file
  <file:Documentation/admin-guide/binfmt-misc.rst> to learn how to use this
  feature, <file:Documentation/admin-guide/java.rst> for information about how
  to include Java support. and <file:Documentation/admin-guide/mono.rst> for
  information about how to include Mono-based .NET support.
  
  To use binfmt_misc, you will need to mount it:
        mount binfmt_misc -t binfmt_misc /proc/sys/fs/binfmt_misc
  
  You may say M here for module support and later load the module when
  you have use for it; the module is called binfmt_misc. If you
  don't know what to answer at this point, say Y.

BINFMT_SCRIPT
  Say Y here if you want to execute interpreted scripts starting with
  #! followed by the path to an interpreter.
  
  You can build this support as a module; however, until that module
  gets loaded, you cannot run scripts.  Thus, if you want to load this
  module from an initramfs, the portion of the initramfs before loading
  this module must consist of compiled binaries only.
  
  Most systems will not boot if you say M or N here.  If unsure, say Y.

BINFMT_SHARED_FLAT
  Support FLAT shared libraries

BINFMT_ZFLAT
  Support FLAT format compressed binaries

BITFIELD_KUNIT
  Enable this option to test the bitfield functions at boot.
  
  KUnit tests run during boot and output the results to the debug log
  in TAP format (http://testanything.org/). Only useful for kernel devs
  running the KUnit test harness, and not intended for inclusion into a
  production build.
  
  For more information on KUnit and unit tests in general please refer
  to the KUnit documentation in Documentation/dev-tools/kunit/.
  
  If unsure, say N.

BITREVERSE
  No help

BITS_TEST
  This builds the bits unit test.
  Tests the logic of macros defined in bits.h.
  For more information on KUnit and unit tests in general please refer
  to the KUnit documentation in Documentation/dev-tools/kunit/.
  
  If unsure, say N.

BLK_CGROUP
  Generic block IO controller cgroup interface. This is the common
  cgroup interface which should be used by various IO controlling
  policies.
  
  Currently, CFQ IO scheduler uses it to recognize task groups and
  control disk bandwidth allocation (proportional time slice allocation)
  to such task groups. It is also used by bio throttling logic in
  block layer to implement upper limit in IO rates on a device.
  
  This option only enables generic Block IO controller infrastructure.
  One needs to also enable actual IO controlling logic/policy. For
  enabling proportional weight division of disk bandwidth in CFQ, set
  CONFIG_BFQ_GROUP_IOSCHED=y; for enabling throttling policy, set
  CONFIG_BLK_DEV_THROTTLING=y.
  
  See Documentation/admin-guide/cgroup-v1/blkio-controller.rst for more information.

BLK_CGROUP_IOCOST
  Enabling this option enables the .weight interface for cost
  model based proportional IO control.  The IO controller
  distributes IO capacity between different groups based on
  their share of the overall weight distribution.

BLK_CGROUP_IOLATENCY
  Enabling this option enables the .latency interface for IO throttling.
  The IO controller will attempt to maintain average IO latencies below
  the configured latency target, throttling anybody with a higher latency
  target than the victimized group.
  
  Note, this is an experimental interface and could be changed someday.

BLK_CGROUP_RWSTAT
  No help

BLK_CMDLINE_PARSER
  Enabling this option allows you to specify the partition layout from
  the kernel boot args.  This is typically of use for embedded devices
  which don't otherwise have any standardized method for listing the
  partitions on a block device.
  
  See Documentation/block/cmdline-partition.rst for more information.

BLK_DEBUG_FS
  Include block layer debugging information in debugfs. This information
  is mostly useful for kernel developers, but it doesn't incur any cost
  at runtime.
  
  Unless you are building a kernel for a tiny system, you should
  say Y here.

BLK_DEBUG_FS_ZONED
  No help

BLK_DEV
  Say Y here to get to see options for various different block device
  drivers. This option alone does not add any kernel code.
  
  If you say N, all options in this submenu will be skipped and disabled;
  only do this if you know what you are doing.

BLK_DEV_3W_XXXX_RAID
  3ware is the only hardware ATA-Raid product in Linux to date.
  This card is 2,4, or 8 channel master mode support only.
  SCSI support required!!!
  
  <http://www.3ware.com/>
  
  Please read the comments at the top of
  <file:drivers/scsi/3w-xxxx.c>.

BLK_DEV_4DRIVES
  Certain older chipsets, including the Tekram 690CD, use a single set
  of I/O ports at 0x1f0 to control up to four drives, instead of the
  customary two drives per port. Support for this can be enabled at
  runtime using the "ide-4drives.probe" kernel boot parameter if you
  say Y here.

BLK_DEV_AEC62XX
  This driver adds explicit support for Acard AEC62xx (Artop ATP8xx)
  IDE controllers. This allows the kernel to change PIO, DMA and UDMA
  speeds and to configure the chip to optimum performance.

BLK_DEV_ALI14XX
  This driver is enabled at runtime using the "ali14xx.probe" kernel
  boot parameter.  It enables support for the secondary IDE interface
  of the ALI M1439/1443/1445/1487/1489 chipsets, and permits faster
  I/O speeds to be set as well.
  See the files <file:Documentation/ide/ide.rst> and
  <file:drivers/ide/ali14xx.c> for more info.

BLK_DEV_ALI15X3
  This driver ensures (U)DMA support for ALI 1533, 1543 and 1543C
  onboard chipsets.  It also tests for Simplex mode and enables
  normal dual channel support.
  
  Please read the comments at the top of
  <file:drivers/ide/alim15x3.c>.
  
  If unsure, say N.

BLK_DEV_AMD74XX
  This driver adds explicit support for AMD-7xx and AMD-8111 chips
  and also for the nVidia nForce chip.  This allows the kernel to
  change PIO, DMA and UDMA speeds and to configure the chip to
  optimum performance.

BLK_DEV_ATIIXP
  This driver adds explicit support for ATI IXP chipset.
  This allows the kernel to change PIO, DMA and UDMA speeds
  and to configure the chip to optimum performance.
  
  Say Y here if you have an ATI IXP chipset IDE controller.

BLK_DEV_BSG
  Saying Y here will enable generic SG (SCSI generic) v4 support
  for any block device.
  
  Unlike SG v3 (aka block/scsi_ioctl.c drivers/scsi/sg.c), SG v4
  can handle complicated SCSI commands: tagged variable length cdbs
  with bidirectional data transfers and generic request/response
  protocols (e.g. Task Management Functions and SMP in Serial
  Attached SCSI).
  
  This option is required by recent UDEV versions to properly
  access device serial numbers, etc.
  
  If unsure, say Y.

BLK_DEV_BSGLIB
  Subsystems will normally enable this if needed. Users will not
  normally need to manually enable this.
  
  If unsure, say N.

BLK_DEV_BUDDHA
  This is the IDE driver for the IDE interfaces on the Buddha, Catweasel
  and X-Surf expansion boards.  It supports up to two interfaces on the
  Buddha, three on the Catweasel and two on the X-Surf.
  
  Say Y if you have a Buddha or Catweasel expansion board and want to
  use IDE devices (hard disks, CD-ROM drives, etc.) that are connected
  to one of its IDE interfaces.

BLK_DEV_CMD640
  The CMD-Technologies CMD640 IDE chip is used on many common 486 and
  Pentium motherboards, usually in combination with a "Neptune" or
  "SiS" chipset. Unfortunately, it has a number of rather nasty
  design flaws that can cause severe data corruption under many common
  conditions. Say Y here to include code which tries to automatically
  detect and correct the problems under Linux. This option also
  enables access to the secondary IDE ports in some CMD640 based
  systems.
  
  This driver will work automatically in PCI based systems (most new
  systems have PCI slots). But if your system uses VESA local bus
  (VLB) instead of PCI, you must also supply a kernel boot parameter
  to enable the CMD640 bugfix/support: "cmd640.probe_vlb". (Try "man
  bootparam" or see the documentation of your boot loader about how to
  pass options to the kernel.)
  
  The CMD640 chip is also used on add-in cards by Acculogic, and on
  the "CSA-6400E PCI to IDE controller" that some people have. For
  details, read <file:Documentation/ide/ide.rst>.

BLK_DEV_CMD640_ENHANCED
  This option includes support for setting/autotuning PIO modes and
  prefetch on CMD640 IDE interfaces.  For details, read
  <file:Documentation/ide/ide.rst>. If you have a CMD640 IDE interface
  and your BIOS does not already do this for you, then say Y here.
  Otherwise say N.

BLK_DEV_CMD64X
  Say Y here if you have an IDE controller which uses any of these
  chipsets: CMD643, CMD646, or CMD648.

BLK_DEV_COW_COMMON
  No help

BLK_DEV_CRYPTOLOOP
  Say Y here if you want to be able to use the ciphers that are
  provided by the CryptoAPI as loop transformation. This might be
  used as hard disk encryption.
  
  WARNING: This device is not safe for journaled file systems like
  ext3 or Reiserfs. Please use the Device Mapper crypto module
  instead, which can be configured to be on-disk compatible with the
  cryptoloop device.

BLK_DEV_CS5520
  Include support for PIO tuning and virtual DMA on the Cyrix MediaGX
  5510/5520 chipset. This will automatically be detected and
  configured if found.
  
  It is safe to say Y to this question.

BLK_DEV_CS5530
  Include support for UDMA on the Cyrix MediaGX 5530 chipset. This
  will automatically be detected and configured if found.
  
  It is safe to say Y to this question.

BLK_DEV_CS5535
  Include support for UDMA on the NSC/AMD CS5535 companion chipset.
  This will automatically be detected and configured if found.
  
  It is safe to say Y to this question.

BLK_DEV_CS5536
  This option enables support for the AMD CS5536
  companion chip used with the Geode LX processor family.
  
  If unsure, say N.

BLK_DEV_CY82C693
  This driver adds detection and support for the CY82C693 chipset
  used on Digital's PC-Alpha 164SX boards.

BLK_DEV_DELKIN
  Support for Delkin, ASKA, and Workbit Cardbus CompactFlash
  Adapters.  This may also work for similar SD and XD adapters.

BLK_DEV_DM
  Device-mapper is a low level volume manager.  It works by allowing
  people to specify mappings for ranges of logical sectors.  Various
  mapping types are available, in addition people may write their own
  modules containing custom mappings if they wish.
  
  Higher level volume managers such as LVM2 use this driver.
  
  To compile this as a module, choose M here: the module will be
  called dm-mod.
  
  If unsure, say N.

BLK_DEV_DM_BUILTIN
  No help

BLK_DEV_DRBD
  NOTE: In order to authenticate connections you have to select
  CRYPTO_HMAC and a hash function as well.
  
  DRBD is a shared-nothing, synchronously replicated block device. It
  is designed to serve as a building block for high availability
  clusters and in this context, is a "drop-in" replacement for shared
  storage. Simplistically, you could see it as a network RAID 1.
  
  Each minor device has a role, which can be 'primary' or 'secondary'.
  On the node with the primary device the application is supposed to
  run and to access the device (/dev/drbdX). Every write is sent to
  the local 'lower level block device' and, across the network, to the
  node with the device in 'secondary' state.  The secondary device
  simply writes the data to its lower level block device.
  
  DRBD can also be used in dual-Primary mode (device writable on both
  nodes), which means it can exhibit shared disk semantics in a
  shared-nothing cluster.  Needless to say, on top of dual-Primary
  DRBD utilizing a cluster file system is necessary to maintain for
  cache coherency.
  
  For automatic failover you need a cluster manager (e.g. heartbeat).
  See also: https://www.drbd.org/, http://www.linux-ha.org
  
  If unsure, say N.

BLK_DEV_DTC2278
  This driver is enabled at runtime using the "dtc2278.probe" kernel
  boot parameter. It enables support for the secondary IDE interface
  of the DTC-2278 card, and permits faster I/O speeds to be set as
  well. See the <file:Documentation/ide/ide.rst> and
  <file:drivers/ide/dtc2278.c> files for more info.

BLK_DEV_FALCON_IDE
  This is the IDE driver for the on-board IDE interface on the Atari
  Falcon. Say Y if you have a Falcon and want to use IDE devices (hard
  disks, CD-ROM drives, etc.) that are connected to the on-board IDE
  interface.

BLK_DEV_FD
  If you want to use the floppy disk drive(s) of your PC under Linux,
  say Y. Information about this driver, especially important for IBM
  Thinkpad users, is contained in
  <file:Documentation/admin-guide/blockdev/floppy.rst>.
  That file also contains the location of the Floppy driver FAQ as
  well as location of the fdutils package used to configure additional
  parameters of the driver at run time.
  
  To compile this driver as a module, choose M here: the
  module will be called floppy.

BLK_DEV_GAYLE
  This is the IDE driver for the Amiga Gayle IDE interface. It supports
  both the `A1200 style' and `A4000 style' of the Gayle IDE interface,
  This includes on-board IDE interfaces on some Amiga models (A600,
  A1200, A4000, and A4000T), and IDE interfaces on the Zorro expansion
  bus (M-Tech E-Matrix 530 expansion card).
  
  It also provides support for the so-called `IDE doublers' (made
  by various manufacturers, e.g. Eyetech) that can be connected to
  the on-board IDE interface of some Amiga models. Using such an IDE
  doubler, you can connect up to four instead of two IDE devices to
  the Amiga's on-board IDE interface. The feature is enabled at kernel
  runtime using the "gayle.doubler" kernel boot parameter.
  
  Say Y if you have an Amiga with a Gayle IDE interface and want to use
  IDE devices (hard disks, CD-ROM drives, etc.) that are connected to
  it.
  
  Note that you also have to enable Zorro bus support if you want to
  use Gayle IDE interfaces on the Zorro expansion bus.

BLK_DEV_GENERIC
  This option provides generic support for various PCI IDE Chipsets
  which otherwise might not be supported.

BLK_DEV_HPT366
  HPT366 is an Ultra DMA chipset for ATA-66.
  HPT368 is an Ultra DMA chipset for ATA-66 RAID Based.
  HPT370 is an Ultra DMA chipset for ATA-100.
  HPT372 is an Ultra DMA chipset for ATA-100.
  HPT374 is an Ultra DMA chipset for ATA-100.
  
  This driver adds up to 4 more EIDE devices sharing a single
  interrupt.
  
  The HPT366 chipset in its current form is bootable. One solution
  for this problem are special LILO commands for redirecting the
  reference to device 0x80. The other solution is to say Y to "Boot
  off-board chipsets first support" (CONFIG_BLK_DEV_OFFBOARD) unless
  your mother board has the chipset natively mounted. Regardless one
  should use the fore mentioned option and call at LILO.
  
  This driver requires dynamic tuning of the chipset during the
  ide-probe at boot. It is reported to support DVD II drives, by the
  manufacturer.

BLK_DEV_HT6560B
  This driver is enabled at runtime using the "ht6560b.probe" kernel
  boot parameter. It enables support for the secondary IDE interface
  of the Holtek card, and permits faster I/O speeds to be set as well.
  See the <file:Documentation/ide/ide.rst> and
  <file:drivers/ide/ht6560b.c> files for more info.

BLK_DEV_IDEACPI
  Implement ACPI support for generic IDE devices. On modern
  machines ACPI support is required to properly handle ACPI S3 states.

BLK_DEV_IDECD
  If you have a CD-ROM drive using the ATAPI protocol, say Y. ATAPI is
  a newer protocol used by IDE CD-ROM and TAPE drives, similar to the
  SCSI protocol. Most new CD-ROM drives use ATAPI, including the
  NEC-260, Mitsumi FX400, Sony 55E, and just about all non-SCSI
  double(2X) or better speed drives.
  
  If you say Y here, the CD-ROM drive will be identified at boot time
  along with other IDE devices, as "hdb" or "hdc", or something
  similar (check the boot messages with dmesg). If this is your only
  CD-ROM drive, you can say N to all other CD-ROM options, but be sure
  to say Y or M to "ISO 9660 CD-ROM file system support".
  
  To compile this driver as a module, choose M here: the
  module will be called ide-cd.

BLK_DEV_IDECD_VERBOSE_ERRORS
  Turn this on to have the driver print out the meanings of the
  ATAPI error codes.  This will use up additional 8kB of kernel-space
  memory, though.

BLK_DEV_IDECS
  Support for Compact Flash cards, outboard IDE disks, tape drives,
  and CD-ROM drives connected through a PCMCIA card.

BLK_DEV_IDEDMA
  No help

BLK_DEV_IDEDMA_ICS
  Say Y here if you want to add DMA (Direct Memory Access) support to
  the ICS IDE driver.

BLK_DEV_IDEDMA_PCI
  No help

BLK_DEV_IDEDMA_SFF
  No help

BLK_DEV_IDEPCI
  No help

BLK_DEV_IDEPNP
  If you have a PnP (Plug and Play) compatible EIDE card and
  would like the kernel to automatically detect and activate
  it, say Y here.

BLK_DEV_IDETAPE
  If you have an IDE tape drive using the ATAPI protocol, say Y.
  ATAPI is a newer protocol used by IDE tape and CD-ROM drives,
  similar to the SCSI protocol.  If you have an SCSI tape drive
  however, you can say N here.
  
  You should also say Y if you have an OnStream DI-30 tape drive; this
  will not work with the SCSI protocol, until there is support for the
  SC-30 and SC-50 versions.
  
  If you say Y here, the tape drive will be identified at boot time
  along with other IDE devices, as "hdb" or "hdc", or something
  similar, and will be mapped to a character device such as "ht0"
  (check the boot messages with dmesg).  Be sure to consult the
  <file:drivers/ide/ide-tape.c> and <file:Documentation/ide/ide.rst>
  files for usage information.
  
  To compile this driver as a module, choose M here: the
  module will be called ide-tape.

BLK_DEV_IDE_ICSIDE
  On Acorn systems, say Y here if you wish to use the ICS IDE
  interface card.  This is not required for ICS partition support.
  If you are unsure, say N to this.

BLK_DEV_IDE_PMAC
  This driver provides support for the on-board IDE controller on
  most of the recent Apple Power Macintoshes and PowerBooks.
  If unsure, say Y.

BLK_DEV_IDE_PMAC_ATA100FIRST
  This option will cause the ATA/100 controller found in UniNorth2
  based machines (Windtunnel PowerMac, Aluminium PowerBooks, ...)
  to be probed before the ATA/66 and ATA/33 controllers. Without
  these, those machine used to have the hard disk on hdc and the
  CD-ROM on hda. This option changes this to more natural hda for
  hard disk and hdc for CD-ROM.

BLK_DEV_IDE_RAPIDE
  Say Y here if you want to support the Yellowstone RapIDE controller
  manufactured for use with Acorn computers.

BLK_DEV_IDE_SATA
  There are two drivers for Serial ATA controllers.
  
  The main driver, "libata", uses the SCSI subsystem
  and supports most modern SATA controllers. In order to use it
  you may take a look at "Serial ATA (prod) and Parallel ATA
  (experimental) drivers".
  
  The IDE driver (which you are currently configuring) supports
  a few first-generation SATA controllers.
  
  In order to eliminate conflicts between the two subsystems,
  this config option enables the IDE driver's SATA support.
  Normally this is disabled, as it is preferred that libata
  supports SATA controllers, and this (IDE) driver supports
  PATA controllers.
  
  If unsure, say N.

BLK_DEV_IDE_TX4938
  No help

BLK_DEV_IDE_TX4939
  No help

BLK_DEV_INITRD
  The initial RAM filesystem is a ramfs which is loaded by the
  boot loader (loadlin or lilo) and that is mounted as root
  before the normal boot procedure. It is typically used to
  load modules needed to mount the "real" root file system,
  etc. See <file:Documentation/admin-guide/initrd.rst> for details.
  
  If RAM disk support (BLK_DEV_RAM) is also included, this
  also enables initial RAM disk (initrd) support and adds
  15 Kbytes (more on some other architectures) to the kernel size.
  
  If unsure say Y.

BLK_DEV_INTEGRITY
  Some storage devices allow extra information to be
  stored/retrieved to help protect the data.  The block layer
  data integrity option provides hooks which can be used by
  filesystems to ensure better data integrity.
  
  Say yes here if you have a storage device that provides the
  T10/SCSI Data Integrity Field or the T13/ATA External Path
  Protection.  If in doubt, say N.

BLK_DEV_INTEGRITY_T10
  No help

BLK_DEV_IO_TRACE
  Say Y here if you want to be able to trace the block layer actions
  on a given queue. Tracing allows you to see any traffic happening
  on a block device queue. For more information (and the userspace
  support tools needed), fetch the blktrace tools from:
  
  git://git.kernel.dk/blktrace.git
  
  Tracing also is possible using the ftrace interface, e.g.:
  
    echo 1 > /sys/block/sda/sda1/trace/enable
    echo blk > /sys/kernel/debug/tracing/current_tracer
    cat /sys/kernel/debug/tracing/trace_pipe
  
  If unsure, say N.

BLK_DEV_IT8172
  This driver adds support for the IDE controller on the
  IT8172 System Controller.

BLK_DEV_IT8213
  This driver adds support for the ITE 8213 IDE controller.

BLK_DEV_IT821X
  This driver adds support for the ITE 8211 IDE controller and the
  IT 8212 IDE RAID controller in both RAID and pass-through mode.

BLK_DEV_JMICRON
  Basic support for the JMicron ATA controllers. For full support
  use the libata drivers.

BLK_DEV_LOOP
  Saying Y here will allow you to use a regular file as a block
  device; you can then create a file system on that block device and
  mount it just as you would mount other block devices such as hard
  drive partitions, CD-ROM drives or floppy drives. The loop devices
  are block special device files with major number 7 and typically
  called /dev/loop0, /dev/loop1 etc.
  
  This is useful if you want to check an ISO 9660 file system before
  burning the CD, or if you want to use floppy images without first
  writing them to floppy. Furthermore, some Linux distributions avoid
  the need for a dedicated Linux partition by keeping their complete
  root file system inside a DOS FAT file using this loop device
  driver.
  
  To use the loop device, you need the losetup utility, found in the
  util-linux package, see
  <https://www.kernel.org/pub/linux/utils/util-linux/>.
  
  The loop device driver can also be used to "hide" a file system in
  a disk partition, floppy, or regular file, either using encryption
  (scrambling the data) or steganography (hiding the data in the low
  bits of, say, a sound file). This is also safe if the file resides
  on a remote file server.
  
  There are several ways of encrypting disks. Some of these require
  kernel patches. The vanilla kernel offers the cryptoloop option
  and a Device Mapper target (which is superior, as it supports all
  file systems). If you want to use the cryptoloop, say Y to both
  LOOP and CRYPTOLOOP, and make sure you have a recent (version 2.12
  or later) version of util-linux. Additionally, be aware that
  the cryptoloop is not safe for storing journaled filesystems.
  
  Note that this loop device has nothing to do with the loopback
  device used for network connections from the machine to itself.
  
  To compile this driver as a module, choose M here: the
  module will be called loop.
  
  Most users will answer N here.

BLK_DEV_LOOP_MIN_COUNT
  Static number of loop devices to be unconditionally pre-created
  at init time.
  
  This default value can be overwritten on the kernel command
  line or with module-parameter loop.max_loop.
  
  The historic default is 8. If a late 2011 version of losetup(8)
  is used, it can be set to 0, since needed loop devices can be
  dynamically allocated with the /dev/loop-control interface.

BLK_DEV_MAC_IDE
  This is the IDE driver for the on-board IDE interface on some m68k
  Macintosh models, namely Quadra/Centris 630, Performa 588 and
  Powerbook 150. The IDE interface on the Powerbook 190 is not
  supported by this driver and requires BLK_DEV_PLATFORM or
  PATA_PLATFORM.
  
  Say Y if you have such an Macintosh model and want to use IDE
  devices (hard disks, CD-ROM drives, etc.) that are connected to the
  on-board IDE interface.

BLK_DEV_MD
  This driver lets you combine several hard disk partitions into one
  logical block device. This can be used to simply append one
  partition to another one or to combine several redundant hard disks
  into a RAID1/4/5 device so as to provide protection against hard
  disk failures. This is called "Software RAID" since the combining of
  the partitions is done by the kernel. "Hardware RAID" means that the
  combining is done by a dedicated controller; if you have such a
  controller, you do not need to say Y here.
  
  More information about Software RAID on Linux is contained in the
  Software RAID mini-HOWTO, available from
  <https://www.tldp.org/docs.html#howto>. There you will also learn
  where to get the supporting user space utilities raidtools.
  
  If unsure, say N.

BLK_DEV_NBD
  Saying Y here will allow your computer to be a client for network
  block devices, i.e. it will be able to use block devices exported by
  servers (mount file systems on them etc.). Communication between
  client and server works over TCP/IP networking, but to the client
  program this is hidden: it looks like a regular local file access to
  a block device special file such as /dev/nd0.
  
  Network block devices also allows you to run a block-device in
  userland (making server and client physically the same computer,
  communicating using the loopback network device).
  
  Read <file:Documentation/admin-guide/blockdev/nbd.rst> for more information,
  especially about where to find the server code, which runs in user
  space and does not need special kernel support.
  
  Note that this has nothing to do with the network file systems NFS
  or Coda; you can say N here even if you intend to use NFS or Coda.
  
  To compile this driver as a module, choose M here: the
  module will be called nbd.
  
  If unsure, say N.

BLK_DEV_NS87415
  This driver adds detection and support for the NS87415 chip
  (used mainly on SPARC64 and PA-RISC machines).
  
  Please read the comments at the top of <file:drivers/ide/ns87415.c>.

BLK_DEV_NULL_BLK
  No help

BLK_DEV_NULL_BLK_FAULT_INJECTION
  No help

BLK_DEV_NVME
  The NVM Express driver is for solid state drives directly
  connected to the PCI or PCI Express bus.  If you know you
  don't have one of these, it is safe to answer N.
  
  To compile this driver as a module, choose M here: the
  module will be called nvme.

BLK_DEV_OFFBOARD
  Normally, IDE controllers built into the motherboard (on-board
  controllers) are assigned to ide0 and ide1 while those on add-in PCI
  cards (off-board controllers) are relegated to ide2 and ide3.
  Answering Y here will allow you to reverse the situation, with
  off-board controllers on ide0/1 and on-board controllers on ide2/3.
  This can improve the usability of some boot managers such as lilo
  when booting from a drive on an off-board controller.
  
  Note that, if you do this, the order of the hd* devices will be
  rearranged which may require modification of fstab and other files.
  
  Please also note that this method of assuring stable naming of
  IDE devices is unreliable and use other means for achieving it
  (i.e. udev).
  
  If in doubt, say N.

BLK_DEV_OPTI621
  This is a driver for the OPTi 82C621 EIDE controller.
  Please read the comments at the top of <file:drivers/ide/opti621.c>.

BLK_DEV_PALMCHIP_BK3710
  Say Y here if you want to support the onchip IDE controller on the
  TI DaVinci SoC

BLK_DEV_PCIESSD_MTIP32XX
  This enables the block driver for Micron PCIe SSDs.

BLK_DEV_PDC202XX_NEW
  No help

BLK_DEV_PDC202XX_OLD
  Promise Ultra33 or PDC20246
  Promise Ultra66 or PDC20262
  Promise Ultra100 or PDC20265/PDC20267/PDC20268
  
  This driver adds up to 4 more EIDE devices sharing a single
  interrupt. This add-on card is a bootable PCI UDMA controller. Since
  multiple cards can be installed and there are BIOS ROM problems that
  happen if the BIOS revisions of all installed cards (three-max) do
  not match, the driver attempts to do dynamic tuning of the chipset
  at boot-time for max-speed.  Ultra33 BIOS 1.25 or newer is required
  for more than one card.
  
  Please read the comments at the top of
  <file:drivers/ide/pdc202xx_old.c>.
  
  If unsure, say N.

BLK_DEV_PIIX
  This driver adds explicit support for Intel PIIX and ICH chips.
  This allows the kernel to change PIO, DMA and UDMA speeds and to
  configure the chip to optimum performance.

BLK_DEV_PLATFORM
  This is the platform IDE driver, used mostly for Memory Mapped
  IDE devices, like Compact Flashes running in True IDE mode.
  
  If unsure, say N.

BLK_DEV_PMEM
  Memory ranges for PMEM are described by either an NFIT
  (NVDIMM Firmware Interface Table, see CONFIG_NFIT_ACPI), a
  non-standard OEM-specific E820 memory type (type-12, see
  CONFIG_X86_PMEM_LEGACY), or it is manually specified by the
  'memmap=nn[KMG]!ss[KMG]' kernel command line (see
  Documentation/admin-guide/kernel-parameters.rst).  This driver converts
  these persistent memory ranges into block devices that are
  capable of DAX (direct-access) file system mappings.  See
  Documentation/driver-api/nvdimm/nvdimm.rst for more details.
  
  Say Y if you want to use an NVDIMM

BLK_DEV_Q40IDE
  Enable the on-board IDE controller in the Q40/Q60.  This should
  normally be on; disable it only if you are running a custom hard
  drive subsystem through an expansion card.

BLK_DEV_QD65XX
  This driver is enabled at runtime using the "qd65xx.probe" kernel
  boot parameter.  It permits faster I/O speeds to be set.  See the
  <file:Documentation/ide/ide.rst> and <file:drivers/ide/qd65xx.c>
  for more info.

BLK_DEV_RAM
  Saying Y here will allow you to use a portion of your RAM memory as
  a block device, so that you can make file systems on it, read and
  write to it and do all the other things that you can do with normal
  block devices (such as hard drives). It is usually used to load and
  store a copy of a minimal root file system off of a floppy into RAM
  during the initial install of Linux.
  
  Note that the kernel command line option "ramdisk=XX" is now obsolete.
  For details, read <file:Documentation/admin-guide/blockdev/ramdisk.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called brd. An alias "rd" has been defined
  for historical reasons.
  
  Most normal users won't need the RAM disk functionality, and can
  thus say N here.

BLK_DEV_RAM_COUNT
  The default value is 16 RAM disks. Change this if you know what you
  are doing. If you boot from a filesystem that needs to be extracted
  in memory, you will need at least one RAM disk (e.g. root on cramfs).

BLK_DEV_RAM_SIZE
  The default value is 4096 kilobytes. Only change this if you know
  what you are doing.

BLK_DEV_RBD
  Say Y here if you want include the Rados block device, which stripes
  a block device over objects stored in the Ceph distributed object
  store.
  
  More information at http://ceph.newdream.net/.
  
  If unsure, say N.

BLK_DEV_RNBD
  No help

BLK_DEV_RNBD_CLIENT
  RNBD client is a network block device driver using rdma transport.
  
  RNBD client allows for mapping of a remote block devices over
  RTRS protocol from a target system where RNBD server is running.
  
  If unsure, say N.

BLK_DEV_RNBD_SERVER
  RNBD server is the server side of RNBD using rdma transport.
  
  RNBD server allows for exporting local block devices to a remote client
  over RTRS protocol.
  
  If unsure, say N.

BLK_DEV_RSXX
  Device driver for IBM's high speed PCIe SSD
  storage device: Flash Adapter 900GB Full Height.
  
  To compile this driver as a module, choose M here: the
  module will be called rsxx.

BLK_DEV_RZ1000
  The PC-Technologies RZ1000 IDE chip is used on many common 486 and
  Pentium motherboards, usually along with the "Neptune" chipset.
  Unfortunately, it has a rather nasty design flaw that can cause
  severe data corruption under many conditions. Say Y here to include
  code which automatically detects and corrects the problem under
  Linux. This may slow disk throughput by a few percent, but at least
  things will operate 100% reliably.

BLK_DEV_SC1200
  This driver adds support for the on-board IDE controller on the
  National SCx200 series of embedded x86 "Geode" systems.

BLK_DEV_SD
  If you want to use SCSI hard disks, Fibre Channel disks,
  Serial ATA (SATA) or Parallel ATA (PATA) hard disks,
  USB storage or the SCSI or parallel port version of
  the IOMEGA ZIP drive, say Y and read the SCSI-HOWTO,
  the Disk-HOWTO and the Multi-Disk-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>. This is NOT for SCSI
  CD-ROMs.
  
  To compile this driver as a module, choose M here and read
  <file:Documentation/scsi/scsi.rst>.
  The module will be called sd_mod.
  
  Do not compile this driver as a module if your root file system
  (the one containing the directory /) is located on a SCSI disk.
  In this case, do not compile the driver for your SCSI host adapter
  (below) as a module either.

BLK_DEV_SIIMAGE
  This driver adds PIO/(U)DMA support for the SI CMD680 and SII
  3112 (Serial ATA) chips.

BLK_DEV_SIS5513
  This driver ensures (U)DMA support for SIS5513 chipset family based
  mainboards.
  
  The following chipsets are supported:
  ATA16:  SiS5511, SiS5513
  ATA33:  SiS5591, SiS5597, SiS5598, SiS5600
  ATA66:  SiS530, SiS540, SiS620, SiS630, SiS640
  ATA100: SiS635, SiS645, SiS650, SiS730, SiS735, SiS740,
  SiS745, SiS750
  
  Please read the comments at the top of <file:drivers/ide/sis5513.c>.

BLK_DEV_SKD
  Saying Y or M here will enable support for the
  STEC, Inc. S1120 PCIe SSD.
  
  Use device /dev/skd$N amd /dev/skd$Np$M.

BLK_DEV_SL82C105
  If you have a Winbond SL82c105 IDE controller, say Y here to enable
  special configuration for this chip. This is common on various CHRP
  motherboards, but could be used elsewhere. If in doubt, say Y.

BLK_DEV_SLC90E66
  This driver ensures (U)DMA support for Victory66 SouthBridges for
  SMsC with Intel NorthBridges.  This is an Ultra66 based chipset.
  The nice thing about it is that you can mix Ultra/DMA/PIO devices
  and it will handle timing cycles.  Since this is an improved
  look-a-like to the PIIX4 it should be a nice addition.
  
  Please read the comments at the top of
  <file:drivers/ide/slc90e66.c>.

BLK_DEV_SR
  If you want to use a CD or DVD drive attached to your computer
  by SCSI, FireWire, USB or ATAPI, say Y and read the SCSI-HOWTO
  and the CDROM-HOWTO at <http://www.tldp.org/docs.html#howto>.
  
  Make sure to say Y or M to "ISO 9660 CD-ROM file system support".
  
  To compile this driver as a module, choose M here and read
  <file:Documentation/scsi/scsi.rst>.
  The module will be called sr_mod.

BLK_DEV_SVWKS
  This driver adds PIO/(U)DMA support for the ServerWorks OSB4/CSB5
  chipsets.

BLK_DEV_SWIM
  You should select this option if you want floppy support
  and you don't have a II, IIfx, Q900, Q950 or AV series.

BLK_DEV_SX8
  Saying Y or M here will enable support for the
  Promise SATA SX8 controllers.
  
  Use devices /dev/sx8/$N and /dev/sx8/$Np$M.

BLK_DEV_TC86C001
  This driver adds support for Toshiba TC86C001 GOKU-S chip.

BLK_DEV_THROTTLING
  Block layer bio throttling support. It can be used to limit
  the IO rate to a device. IO rate policies are per cgroup and
  one needs to mount and use blkio cgroup controller for creating
  cgroups and specifying per device IO rate policies.
  
  See Documentation/admin-guide/cgroup-v1/blkio-controller.rst for more information.

BLK_DEV_THROTTLING_LOW
  Add .low limit interface for block throttling. The low limit is a best
  effort limit to prioritize cgroups. Depending on the setting, the limit
  can be used to protect cgroups in terms of bandwidth/iops and better
  utilize disk resource.
  
  Note, this is an experimental interface and could be changed someday.

BLK_DEV_TRIFLEX
  Say Y here if you have a Compaq Triflex IDE controller, such
  as those commonly found on Compaq Pentium-Pro systems

BLK_DEV_TRM290
  This driver adds support for bus master DMA transfers
  using the Tekram TRM290 PCI IDE chip. Volunteers are
  needed for further tweaking and development.
  Please read the comments at the top of <file:drivers/ide/trm290.c>.

BLK_DEV_UBD
  The User-Mode Linux port includes a driver called UBD which will let
  you access arbitrary files on the host computer as block devices.
  Unless you know that you do not need such virtual block devices say
  Y here.

BLK_DEV_UBD_SYNC
  Writes to the virtual block device are not immediately written to the
  host's disk; this may cause problems if, for example, the User-Mode
  Linux 'Virtual Machine' uses a journalling filesystem and the host
  computer crashes.
  
  Synchronous operation (i.e. always writing data to the host's disk
  immediately) is configurable on a per-UBD basis by using a special
  kernel command line option.  Alternatively, you can say Y here to
  turn on synchronous operation by default for all block devices.
  
  If you're running a journalling file system (like reiserfs, for
  example) in your virtual machine, you will want to say Y here.  If
  you care for the safety of the data in your virtual machine, Y is a
  wise choice too.  In all other cases (for example, if you're just
  playing around with User-Mode Linux) you can choose N.

BLK_DEV_UMC8672
  This driver is enabled at runtime using the "umc8672.probe" kernel
  boot parameter. It enables support for the secondary IDE interface
  of the UMC-8672, and permits faster I/O speeds to be set as well.
  See the files <file:Documentation/ide/ide.rst> and
  <file:drivers/ide/umc8672.c> for more info.

BLK_DEV_UMEM
  Saying Y here will include support for the MM5415 family of
  battery backed (Non-volatile) RAM cards.
  <http://www.umem.com/>
  
  The cards appear as block devices that can be partitioned into
  as many as 15 partitions.
  
  To compile this driver as a module, choose M here: the
  module will be called umem.
  
  The umem driver has not yet been allocated a MAJOR number, so
  one is chosen dynamically.

BLK_DEV_VIA82CXXX
  This driver adds explicit support for VIA BusMastering IDE chips.
  This allows the kernel to change PIO, DMA and UDMA speeds and to
  configure the chip to optimum performance.

BLK_DEV_XPRAM
  Select this option if you want to use your expanded storage on S/390
  or zSeries as a disk.  This is useful as a _fast_ swap device if you
  want to access more than 2G of memory when running in 31 bit mode.
  This option is also available as a module which will be called
  xpram.  If unsure, say "N".

BLK_DEV_ZONED
  Block layer zoned block device support. This option enables
  support for ZAC/ZBC/ZNS host-managed and host-aware zoned block
  devices.
  
  Say yes here if you have a ZAC, ZBC, or ZNS storage device.

BLK_INLINE_ENCRYPTION
  Build the blk-crypto subsystem. Enabling this lets the
  block layer handle encryption, so users can take
  advantage of inline encryption hardware if present.

BLK_INLINE_ENCRYPTION_FALLBACK
  Enabling this lets the block layer handle inline encryption
  by falling back to the kernel crypto API when inline
  encryption hardware is not present.

BLK_MQ_PCI
  No help

BLK_MQ_RDMA
  No help

BLK_MQ_VIRTIO
  No help

BLK_PM
  No help

BLK_RQ_ALLOC_TIME
  No help

BLK_SCSI_REQUEST
  No help

BLK_SED_OPAL
  Builds Logic for interfacing with Opal enabled controllers.
  Enabling this option enables users to setup/unlock/lock
  Locking ranges for SED devices using the Opal protocol.

BLK_WBT
  Enabling this option enables the block layer to throttle buffered
  background writeback from the VM, making it more smooth and having
  less impact on foreground operations. The throttling is done
  dynamically on an algorithm loosely based on CoDel, factoring in
  the realtime performance of the disk.

BLK_WBT_MQ
  Enable writeback throttling by default on multiqueue devices.

BLOCK
  Provide block layer support for the kernel.
  
  Disable this option to remove the block layer support from the
  kernel. This may be useful for embedded devices.
  
  If this option is disabled:
  
    - block device files will become unusable
    - some filesystems (such as ext3) will become unavailable.
  
  Also, SCSI character devices and USB storage will be disabled since
  they make use of various block layer definitions and facilities.
  
  Say Y here unless you know you really don't want to mount disks and
  suchlike.

BLOCK_COMPAT
  No help

BMA180
  Say Y here if you want to build a driver for the Bosch BMA023, BMA150
  BMA180, SMB380, or BMA25x triaxial acceleration sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called bma180.

BMA220
  Say yes here to add support for the Bosch BMA220 triaxial
  acceleration sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called bma220_spi.

BMA400
  Say Y here if you want to build a driver for the Bosch BMA400
  triaxial acceleration sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called bma400_core and you will also get
  bma400_i2c if I2C is enabled and bma400_spi if SPI is
  enabled.

BMA400_I2C
  No help

BMA400_SPI
  No help

BMAC
  Say Y for support of BMAC Ethernet interfaces. These are used on G3
  computers.
  
  To compile this driver as a module, choose M here: the module
  will be called bmac.

BMC150_ACCEL
  Say yes here to build support for the following Bosch accelerometers:
  BMC150, BMI055, BMA250E, BMA222E, BMA255, BMA280.
  
  This is a combo module with both accelerometer and magnetometer.
  This driver is only implementing accelerometer part, which has
  its own address and register map.

BMC150_ACCEL_I2C
  No help

BMC150_ACCEL_SPI
  No help

BMC150_MAGN
  No help

BMC150_MAGN_I2C
  Say yes here to build support for the BMC150 magnetometer with
  I2C interface.
  
  This is a combo module with both accelerometer and magnetometer.
  This driver is only implementing magnetometer part, which has
  its own address and register map.
  
  This driver also supports I2C Bosch BMC156 and BMM150 chips.
  To compile this driver as a module, choose M here: the module will be
  called bmc150_magn_i2c.

BMC150_MAGN_SPI
  Say yes here to build support for the BMC150 magnetometer with
  SPI interface.
  
  This is a combo module with both accelerometer and magnetometer.
  This driver is only implementing magnetometer part, which has
  its own address and register map.
  
  This driver also supports SPI Bosch BMC156 and BMM150 chips.
  To compile this driver as a module, choose M here: the module will be
  called bmc150_magn_spi.

BME680
  Say yes here to build support for Bosch Sensortec BME680 sensor with
  temperature, pressure, humidity and gas sensing capability.
  
  This driver can also be built as a module. If so, the module for I2C
  would be called bme680_i2c and bme680_spi for SPI support.

BME680_I2C
  No help

BME680_SPI
  No help

BMG160
  Say yes here to build support for BOSCH BMG160 Tri-axis Gyro Sensor
  driver connected via I2C or SPI. This driver also supports BMI055
  and BMI088 gyroscope.
  
  This driver can also be built as a module.  If so, the module
  will be called bmg160_i2c or bmg160_spi.

BMG160_I2C
  No help

BMG160_SPI
  No help

BMI160
  No help

BMI160_I2C
  If you say yes here you get support for BMI160 IMU on I2C with
  accelerometer, gyroscope and external BMG160 magnetometer.
  
  This driver can also be built as a module. If so, the module will be
  called bmi160_i2c.

BMI160_SPI
  If you say yes here you get support for BMI160 IMU on SPI with
  accelerometer, gyroscope and external BMG160 magnetometer.
  
  This driver can also be built as a module. If so, the module will be
  called bmi160_spi.

BMIPS_CPUFREQ
  This option adds a CPUfreq driver for BMIPS processors with
  support for configurable CPU frequency.
  
  For now, BMIPS5 chips are supported (such as the Broadcom 7425).
  
  If in doubt, say N.

BMP280
  Say yes here to build support for Bosch Sensortec BMP180 and BMP280
  pressure and temperature sensors. Also supports the BME280 with
  an additional humidity sensor channel.
  
  To compile this driver as a module, choose M here: the core module
  will be called bmp280 and you will also get bmp280-i2c for I2C
  and/or bmp280-spi for SPI support.

BMP280_I2C
  No help

BMP280_SPI
  No help

BNA
  This driver supports QLogic BR-series 1010/1020/1860 10Gb CEE capable
  Ethernet cards.
  To compile this driver as a module, choose M here: the module
  will be called bna.
  
  For general information and support, go to the QLogic support
  website at:
  
  <http://support.qlogic.com>

BNX2
  This driver supports QLogic bnx2 gigabit Ethernet cards.
  
  To compile this driver as a module, choose M here: the module
  will be called bnx2.  This is recommended.

BNX2X
  This driver supports Broadcom NetXtremeII 10 gigabit Ethernet cards.
  To compile this driver as a module, choose M here: the module
  will be called bnx2x.  This is recommended.

BNX2X_SRIOV
  This configuration parameter enables Single Root Input Output
  Virtualization support in the 578xx and 57712 products. This
  allows for virtual function acceleration in virtual environments.

BNXT
  This driver supports Broadcom NetXtreme-C/E 10/25/40/50 gigabit
  Ethernet cards.  To compile this driver as a module, choose M here:
  the module will be called bnxt_en.  This is recommended.

BNXT_DCB
  Say Y here if you want to use Data Center Bridging (DCB) in the
  driver.
  
  If unsure, say N.

BNXT_FLOWER_OFFLOAD
  This configuration parameter enables TC Flower packet classifier
  offload for eswitch.  This option enables SR-IOV switchdev eswitch
  offload.

BNXT_HWMON
  Say Y if you want to expose the thermal sensor data on NetXtreme-C/E
  devices, via the hwmon sysfs interface.

BNXT_SRIOV
  This configuration parameter enables Single Root Input Output
  Virtualization support in the NetXtreme-C/E products. This
  allows for virtual function acceleration in virtual environments.

BOARD_TPCI200
  This driver adds support for the TEWS TPCI200 IndustryPack carrier board.

BONDING
  Say 'Y' or 'M' if you wish to be able to 'bond' multiple Ethernet
  Channels together. This is called 'Etherchannel' by Cisco,
  'Trunking' by Sun, 802.3ad by the IEEE, and 'Bonding' in Linux.
  
  The driver supports multiple bonding modes to allow for both high
  performance and high availability operation.
  
  Refer to <file:Documentation/networking/bonding.rst> for more
  information.
  
  To compile this driver as a module, choose M here: the module
  will be called bonding.

BOOKE_WDT
  Watchdog driver for PowerPC Book-E chips, such as the Freescale
  MPC85xx SOCs and the IBM PowerPC 440.
  
  Please see Documentation/watchdog/watchdog-api.rst for
  more information.

BOOKE_WDT_DEFAULT_TIMEOUT
  Select the default watchdog timer period to be used by the PowerPC
  Book-E watchdog driver.  A watchdog "event" occurs when the bit
  position represented by this number transitions from zero to one.
  
  For Freescale Book-E processors, this is a number between 0 and 63.
  For other Book-E processors, this is a number between 0 and 3.
  
  The value can be overridden by the wdt_period command-line parameter.

BOOTPARAM_HARDLOCKUP_PANIC
  Say Y here to enable the kernel to panic on "hard lockups",
  which are bugs that cause the kernel to loop in kernel
  mode with interrupts disabled for more than 10 seconds (configurable
  using the watchdog_thresh sysctl).
  
  Say N if unsure.

BOOTPARAM_HARDLOCKUP_PANIC_VALUE
  No help

BOOTPARAM_HOTPLUG_CPU0
  Set whether default state of cpu0_hotpluggable is on or off.
  
  Say Y here to enable CPU0 hotplug by default. If this switch
  is turned on, there is no need to give cpu0_hotplug kernel
  parameter and the CPU0 hotplug feature is enabled by default.
  
  Please note: there are two known CPU0 dependencies if you want
  to enable the CPU0 hotplug feature either by this switch or by
  cpu0_hotplug kernel parameter.
  
  First, resume from hibernate or suspend always starts from CPU0.
  So hibernate and suspend are prevented if CPU0 is offline.
  
  Second dependency is PIC interrupts always go to CPU0. CPU0 can not
  offline if any interrupt can not migrate out of CPU0. There may
  be other CPU0 dependencies.
  
  Please make sure the dependencies are under your control before
  you enable this feature.
  
  Say N if you don't want to enable CPU0 hotplug feature by default.
  You still can enable the CPU0 hotplug feature at boot by kernel
  parameter cpu0_hotplug.

BOOTPARAM_HUNG_TASK_PANIC
  Say Y here to enable the kernel to panic on "hung tasks",
  which are bugs that cause the kernel to leave a task stuck
  in uninterruptible "D" state.
  
  The panic can be used in combination with panic_timeout,
  to cause the system to reboot automatically after a
  hung task has been detected. This feature is useful for
  high-availability systems that have uptime guarantees and
  where a hung tasks must be resolved ASAP.
  
  Say N if unsure.

BOOTPARAM_HUNG_TASK_PANIC_VALUE
  No help

BOOTPARAM_SOFTLOCKUP_PANIC
  Say Y here to enable the kernel to panic on "soft lockups",
  which are bugs that cause the kernel to loop in kernel
  mode for more than 20 seconds (configurable using the watchdog_thresh
  sysctl), without giving other tasks a chance to run.
  
  The panic can be used in combination with panic_timeout,
  to cause the system to reboot automatically after a
  lockup has been detected. This feature is useful for
  high-availability systems that have uptime guarantees and
  where a lockup must be resolved ASAP.
  
  Say N if unsure.

BOOTPARAM_SOFTLOCKUP_PANIC_VALUE
  No help

BOOTTIME_TRACING
  Enable developer to setup ftrace subsystem via supplemental
  kernel cmdline at boot time for debugging (tracing) driver
  initialization and boot process.

BOOT_CONFIG
  Extra boot config allows system admin to pass a config file as
  complemental extension of kernel cmdline when booting.
  The boot config file must be attached at the end of initramfs
  with checksum, size and magic word.
  See <file:Documentation/admin-guide/bootconfig.rst> for details.
  
  If unsure, say Y.

BOOT_PRINTK_DELAY
  This build option allows you to read kernel boot messages
  by inserting a short delay after each one.  The delay is
  specified in milliseconds on the kernel command line,
  using "boot_delay=N".
  
  It is likely that you would also need to use "lpj=M" to preset
  the "loops per jiffie" value.
  See a previous boot log for the "lpj" value to use for your
  system, and then set "lpj=M" before setting "boot_delay=N".
  NOTE:  Using this option may adversely affect SMP systems.
  I.e., processors other than the first one may not boot up.
  BOOT_PRINTK_DELAY also may cause LOCKUP_DETECTOR to detect
  what it believes to be lockup conditions.

BOUNCE
  Enable bounce buffers for devices that cannot access
  the full range of memory available to the CPU. Enabled
  by default when ZONE_DMA or HIGHMEM is selected, but you
  may say n to override this.

BPF
  No help

BPFILTER
  This builds experimental bpfilter framework that is aiming to
  provide netfilter compatible functionality via BPF

BPFILTER_UMH
  This builds bpfilter kernel module with embedded user mode helper
  
  Note: To compile this as built-in, your toolchain must support
  building static binaries, since rootfs isn't mounted at the time
  when __init functions are called and do_execv won't be able to find
  the elf interpreter.

BPF_ARCH_SPINLOCK
  No help

BPF_EVENTS
  This allows the user to attach BPF programs to kprobe, uprobe, and
  tracepoint events.

BPF_JIT
  Berkeley Packet Filter filtering capabilities are normally handled
  by an interpreter. This option allows kernel to generate a native
  code when filter is loaded in memory. This should speedup
  packet sniffing (libpcap/tcpdump).
  
  Note, admin should enable this feature changing:
  /proc/sys/net/core/bpf_jit_enable
  /proc/sys/net/core/bpf_jit_harden   (optional)
  /proc/sys/net/core/bpf_jit_kallsyms (optional)

BPF_JIT_ALWAYS_ON
  Enables BPF JIT and removes BPF interpreter to avoid
  speculative execution of BPF instructions by the interpreter

BPF_JIT_DEFAULT_ON
  No help

BPF_KPROBE_OVERRIDE
  Allows BPF to override the execution of a probed function and
  set a different return value.  This is used for error injection.

BPF_LIRC_MODE2
  Allow attaching eBPF programs to a lirc device using the bpf(2)
  syscall command BPF_PROG_ATTACH. This is supported for raw IR
  receivers.
  
  These eBPF programs can be used to decode IR into scancodes, for
  IR protocols not supported by the kernel decoders.

BPF_LSM
  Enables instrumentation of the security hooks with eBPF programs for
  implementing dynamic MAC and Audit Policies.
  
  If you are unsure how to answer this question, answer N.

BPF_PRELOAD
  This builds kernel module with several embedded BPF programs that are
  pinned into BPF FS mount point as human readable files that are
  useful in debugging and introspection of BPF programs and maps.

BPF_PRELOAD_UMD
  This builds bpf_preload kernel module with embedded user mode driver.

BPF_STREAM_PARSER
  Enabling this allows a stream parser to be used with
  BPF_MAP_TYPE_SOCKMAP.
  
  BPF_MAP_TYPE_SOCKMAP provides a map type to use with network sockets.
  It can be used to enforce socket policy, implement socket redirects,
  etc.

BPF_SYSCALL
  Enable the bpf() system call that allows to manipulate eBPF
  programs and maps via file descriptors.

BPQETHER
  AX.25 is the protocol used for computer communication over amateur
  radio. If you say Y here, you will be able to send and receive AX.25
  traffic over Ethernet (also called "BPQ AX.25"), which could be
  useful if some other computer on your local network has a direct
  amateur radio connection.

BQL
  No help

BRANCH_PROFILE_NONE
  No branch profiling. Branch profiling adds a bit of overhead.
  Only enable it if you want to analyse the branching behavior.
  Otherwise keep it disabled.

BRANCH_TRACER
  This traces the events of likely and unlikely condition
  calls in the kernel.  The difference between this and the
  "Trace likely/unlikely profiler" is that this is not a
  histogram of the callers, but actually places the calling
  events into a running trace buffer to see when and where the
  events happened, as well as their results.
  
  Say N if unsure.

BRCMDBG
  Selecting this enables additional code for debug purposes.

BRCMFMAC
  This module adds support for wireless adapters based on Broadcom
  FullMAC chipsets. It has to work with at least one of the bus
  interface support. If you choose to build a module, it'll be called
  brcmfmac.ko.

BRCMFMAC_PCIE
  This option enables the PCIE bus interface support for Broadcom
  IEEE802.11ac embedded FullMAC WLAN driver. Say Y if you want to
  use the driver for an PCIE wireless card.
  

BRCMFMAC_PROTO_BCDC
  No help

BRCMFMAC_PROTO_MSGBUF
  No help

BRCMFMAC_SDIO
  This option enables the SDIO bus interface support for Broadcom
  IEEE802.11n embedded FullMAC WLAN driver. Say Y if you want to
  use the driver for a SDIO wireless card.

BRCMFMAC_USB
  This option enables the USB bus interface support for Broadcom
  IEEE802.11n embedded FullMAC WLAN driver. Say Y if you want to
  use the driver for an USB wireless card.

BRCMSMAC
  This module adds support for PCIe wireless adapters based on Broadcom
  IEEE802.11n SoftMAC chipsets. It also has WLAN led support, which will
  be available if you select BCMA_DRIVER_GPIO. If you choose to build a
  module, the driver will be called brcmsmac.ko.

BRCMSTB_DPFE
  This driver provides access to the DPFE interface of Broadcom
  STB SoCs. The firmware running on the DCPU inside the DDR PHY can
  provide current information about the system's RAM, for instance
  the DRAM refresh rate. This can be used as an indirect indicator
  for the DRAM's temperature. Slower refresh rate means cooler RAM,
  higher refresh rate means hotter RAM.

BRCMSTB_GISB_ARB
  Driver for the Broadcom Set Top Box System-on-a-chip internal bus
  arbiter. This driver provides timeout and target abort error handling
  and internal bus master decoding.

BRCMSTB_L2_IRQ
  No help

BRCMSTB_PM
  No help

BRCMSTB_THERMAL
  Enable this driver if you have a Broadcom STB SoC and would like
  thermal framework support.

BRCMUTIL
  No help

BRCM_TRACING
  If you say Y here, the Broadcom wireless drivers will register
  with ftrace to dump event information into the trace ringbuffer.
  Tracing can be enabled at runtime to aid in debugging wireless
  issues. This option adds a small amount of overhead when tracing
  is disabled. If unsure, say Y to allow developers to better help
  you when wireless problems occur.

BRCM_USB_PINMAP
  This option enables support for remapping some USB external
  signals, which are typically on dedicated pins on the chip,
  to any gpio.

BRIDGE
  If you say Y here, then your Linux box will be able to act as an
  Ethernet bridge, which means that the different Ethernet segments it
  is connected to will appear as one Ethernet to the participants.
  Several such bridges can work together to create even larger
  networks of Ethernets using the IEEE 802.1 spanning tree algorithm.
  As this is a standard, Linux bridges will cooperate properly with
  other third party bridge products.
  
  In order to use the Ethernet bridge, you'll need the bridge
  configuration tools; see <file:Documentation/networking/bridge.rst>
  for location. Please read the Bridge mini-HOWTO for more
  information.
  
  If you enable iptables support along with the bridge support then you
  turn your bridge into a bridging IP firewall.
  iptables will then see the IP packets being bridged, so you need to
  take this into account when setting up your firewall rules.
  Enabling arptables support when bridging will let arptables see
  bridged ARP traffic in the arptables FORWARD chain.
  
  To compile this code as a module, choose M here: the module
  will be called bridge.
  
  If unsure, say N.

BRIDGE_CFM
  If you say Y here, then the Ethernet bridge will be able to run CFM
  protocol according to 802.1Q section 12.14
  
  Say N to exclude this support and reduce the binary size.
  
  If unsure, say N.

BRIDGE_EBT_802_3
  This option adds matching support for 802.3 Ethernet frames.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_AMONG
  This option adds the among match, which allows matching the MAC source
  and/or destination address on a list of addresses. Optionally,
  MAC/IP address pairs can be matched, f.e. for anti-spoofing rules.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_ARP
  This option adds the ARP match, which allows ARP and RARP header field
  filtering.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_ARPREPLY
  This option adds the arp reply target, which allows
  automatically sending arp replies to arp requests.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_BROUTE
  The ebtables broute table is used to define rules that decide between
  bridging and routing frames, giving Linux the functionality of a
  brouter. See the man page for ebtables(8) and examples on the ebtables
  website.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_DNAT
  This option adds the MAC DNAT target, which allows altering the MAC
  destination address of frames.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_IP
  This option adds the IP match, which allows basic IP header field
  filtering.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_IP6
  This option adds the IP6 match, which allows basic IPV6 header field
  filtering.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_LIMIT
  This option adds the limit match, which allows you to control
  the rate at which a rule can be matched. This match is the
  equivalent of the iptables limit match.
  
  If you want to compile it as a module, say M here and read
  <file:Documentation/kbuild/modules.rst>.  If unsure, say `N'.

BRIDGE_EBT_LOG
  This option adds the log watcher, that you can use in any rule
  in any ebtables table. It records info about the frame header
  to the syslog.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_MARK
  This option adds the mark match, which allows matching frames based on
  the 'nfmark' value in the frame. This can be set by the mark target.
  This value is the same as the one used in the iptables mark match and
  target.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_MARK_T
  This option adds the mark target, which allows marking frames by
  setting the 'nfmark' value in the frame.
  This value is the same as the one used in the iptables mark match and
  target.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_NFLOG
  This option enables the nflog watcher, which allows to LOG
  messages through the netfilter logging API, which can use
  either the old LOG target, the old ULOG target or nfnetlink_log
  as backend.
  
  This option adds the nflog watcher, that you can use in any rule
  in any ebtables table.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_PKTTYPE
  This option adds the packet type match, which allows matching on the
  type of packet based on its Ethernet "class" (as determined by
  the generic networking code): broadcast, multicast,
  for this host alone or for another host.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_REDIRECT
  This option adds the MAC redirect target, which allows altering the MAC
  destination address of a frame to that of the device it arrived on.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_SNAT
  This option adds the MAC SNAT target, which allows altering the MAC
  source address of frames.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_STP
  This option adds the Spanning Tree Protocol match, which
  allows STP header field filtering.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_T_FILTER
  The ebtables filter table is used to define frame filtering rules at
  local input, forwarding and local output. See the man page for
  ebtables(8).
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_T_NAT
  The ebtables nat table is used to define rules that alter the MAC
  source address (MAC SNAT) or the MAC destination address (MAC DNAT).
  See the man page for ebtables(8).
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_EBT_VLAN
  This option adds the 802.1Q vlan match, which allows the filtering of
  802.1Q vlan fields.
  
  To compile it as a module, choose M here.  If unsure, say N.

BRIDGE_IGMP_SNOOPING
  If you say Y here, then the Ethernet bridge will be able selectively
  forward multicast traffic based on IGMP/MLD traffic received from
  each port.
  
  Say N to exclude this support and reduce the binary size.
  
  If unsure, say Y.

BRIDGE_MRP
  If you say Y here, then the Ethernet bridge will be able to run MRP
  protocol to detect loops
  
  Say N to exclude this support and reduce the binary size.
  
  If unsure, say N.

BRIDGE_NETFILTER
  Enabling this option will let arptables resp. iptables see bridged
  ARP resp. IP traffic. If you want a bridging firewall, you probably
  want this option enabled.
  Enabling or disabling this option doesn't enable or disable
  ebtables.
  
  If unsure, say N.

BRIDGE_NF_EBTABLES
  ebtables is a general, extensible frame/packet identification
  framework. Say 'Y' or 'M' here if you want to do Ethernet
  filtering/NAT/brouting on the Ethernet bridge.

BRIDGE_VLAN_FILTERING
  If you say Y here, then the Ethernet bridge will be able selectively
  receive and forward traffic based on VLAN information in the packet
  any VLAN information configured on the bridge port or bridge device.
  
  Say N to exclude this support and reduce the binary size.
  
  If unsure, say Y.

BROADCOM_PHY
  Currently supports the BCM5411, BCM5421, BCM5461, BCM54616S, BCM5464,
  BCM5481, BCM54810 and BCM5482 PHYs.

BROKEN
  No help

BROKEN_ON_SMP
  No help

BSD_DISKLABEL
  FreeBSD uses its own hard disk partition scheme on your PC. It
  requires only one entry in the primary partition table of your disk
  and manages it similarly to DOS extended partitions, putting in its
  first sector a new partition table in BSD disklabel format. Saying Y
  here allows you to read these disklabels and further mount FreeBSD
  partitions from within Linux if you have also said Y to "UFS
  file system support", above. If you don't know what all this is
  about, say N.

BSD_PROCESS_ACCT
  If you say Y here, a user level program will be able to instruct the
  kernel (via a special system call) to write process accounting
  information to a file: whenever a process exits, information about
  that process will be appended to the file by the kernel.  The
  information includes things such as creation time, owning user,
  command name, memory usage, controlling terminal etc. (the complete
  list is in the struct acct in <file:include/linux/acct.h>).  It is
  up to the user level program to do useful things with this
  information.  This is generally a good idea, so say Y.

BSD_PROCESS_ACCT_V3
  If you say Y here, the process accounting information is written
  in a new file format that also logs the process IDs of each
  process and its parent. Note that this file format is incompatible
  with previous v0/v1/v2 file formats, so you will need updated tools
  for processing it. A preliminary version of these tools is available
  at <http://www.gnu.org/software/acct/>.

BT
  Bluetooth is low-cost, low-power, short-range wireless technology.
  It was designed as a replacement for cables and other short-range
  technologies like IrDA.  Bluetooth operates in personal area range
  that typically extends up to 10 meters.  More information about
  Bluetooth can be found at <https://www.bluetooth.com/>.
  
  Linux Bluetooth subsystem consist of several layers:
     Bluetooth Core
        HCI device and connection manager, scheduler
        SCO audio links
        L2CAP (Logical Link Control and Adaptation Protocol)
        SMP (Security Manager Protocol) on LE (Low Energy) links
     HCI Device drivers (Interface to the hardware)
     RFCOMM Module (RFCOMM Protocol)
     BNEP Module (Bluetooth Network Encapsulation Protocol)
     CMTP Module (CAPI Message Transport Protocol)
     HIDP Module (Human Interface Device Protocol)
  
  Say Y here to compile Bluetooth support into the kernel or say M to
  compile it as module (bluetooth).
  
  To use Linux Bluetooth subsystem, you will need several user-space
  utilities like hciconfig and bluetoothd.  These utilities and updates
  to Bluetooth kernel modules are provided in the BlueZ packages.  For
  more information, see <http://www.bluez.org/>.

BT1_APB
  Baikal-T1 AXI-APB bridge is used to access the SoC subsystem CSRs.
  IO requests are routed to this bus by means of the DW AMBA 3 AXI
  Interconnect. In case of any APB protocol collisions, slave device
  not responding on timeout an IRQ is raised with an erroneous address
  reported to the APB terminator (APB Errors Handler Block). This
  driver provides the interrupt handler to detect the erroneous
  address, prints an error message about the address fault, updates an
  errors counter. The counter and the APB-bus operations timeout can be
  accessed via corresponding sysfs nodes.

BT1_AXI
  AXI3-bus is the main communication bus connecting all high-speed
  peripheral IP-cores with RAM controller and with MIPS P5600 cores on
  Baikal-T1 SoC. Traffic arbitration is done by means of DW AMBA 3 AXI
  Interconnect (so called AXI Main Interconnect) routing IO requests
  from one SoC block to another. This driver provides a way to detect
  any bus protocol errors and device not responding situations by
  means of an embedded on top of the interconnect errors handler
  block (EHB). AXI Interconnect QoS arbitration tuning is currently
  unsupported.

BT1_L2_CTL
  Baikal-T1 CPU is based on the MIPS P5600 Warrior IP-core. The CPU
  resides Coherency Manager v2 with embedded 1MB L2-cache. It's
  possible to tune the L2 cache performance up by setting the data,
  tags and way-select latencies of RAM access. This driver provides a
  dt properties-based and sysfs interface for it.

BTREE
  No help

BTRFS_ASSERT
  Enable run-time assertion checking.  This will result in panics if
  any of the assertions trip.  This is meant for btrfs developers only.
  
  If unsure, say N.

BTRFS_DEBUG
  Enable run-time debugging support for the btrfs filesystem. This may
  enable additional and expensive checks with negative impact on
  performance, or export extra information via sysfs.
  
  If unsure, say N.

BTRFS_FS
  Btrfs is a general purpose copy-on-write filesystem with extents,
  writable snapshotting, support for multiple devices and many more
  features focused on fault tolerance, repair and easy administration.
  
  The filesystem disk format is no longer unstable, and it's not
  expected to change unless there are strong reasons to do so. If there
  is a format change, file systems with a unchanged format will
  continue to be mountable and usable by newer kernels.
  
  For more information, please see the web pages at
  http://btrfs.wiki.kernel.org.
  
  To compile this file system support as a module, choose M here. The
  module will be called btrfs.
  
  If unsure, say N.

BTRFS_FS_CHECK_INTEGRITY
  Adds code that examines all block write requests (including
  writes of the super block). The goal is to verify that the
  state of the filesystem on disk is always consistent, i.e.,
  after a power-loss or kernel panic event the filesystem is
  in a consistent state.
  
  If the integrity check tool is included and activated in
  the mount options, plenty of kernel memory is used, and
  plenty of additional CPU cycles are spent. Enabling this
  functionality is not intended for normal use.
  
  In most cases, unless you are a btrfs developer who needs
  to verify the integrity of (super)-block write requests
  during the run of a regression test, say N

BTRFS_FS_POSIX_ACL
  POSIX Access Control Lists (ACLs) support permissions for users and
  groups beyond the owner/group/world scheme.
  
  If you don't know what Access Control Lists are, say N

BTRFS_FS_REF_VERIFY
  Enable run-time extent reference verification instrumentation.  This
  is meant to be used by btrfs developers for tracking down extent
  reference problems or verifying they didn't break something.
  
  If unsure, say N.

BTRFS_FS_RUN_SANITY_TESTS
  This will run some basic sanity tests on the free space cache
  code to make sure it is acting as it should.  These are mostly
  regression tests and are only really interesting to btrfs
  developers.
  
  If unsure, say N.

BTT
  The Block Translation Table (BTT) provides atomic sector
  update semantics for persistent memory devices, so that
  applications that rely on sector writes not being torn (a
  guarantee that typical disks provide) can continue to do so.
  The BTT manifests itself as an alternate personality for an
  NVDIMM namespace, i.e. a namespace can be in raw mode (pmemX,
  ndblkX.Y, etc...), or 'sectored' mode, (pmemXs, ndblkX.Ys,
  etc...).
  
  Select Y if unsure

BT_6LOWPAN
  IPv6 compression over Bluetooth Low Energy.

BT_ATH3K
  Bluetooth firmware download driver.
  This driver loads the firmware into the Atheros Bluetooth
  chipset.
  
  Say Y here to compile support for "Atheros firmware download driver"
  into the kernel or say M to compile it as module (ath3k).

BT_BCM
  No help

BT_BNEP
  BNEP (Bluetooth Network Encapsulation Protocol) is Ethernet
  emulation layer on top of Bluetooth.  BNEP is required for
  Bluetooth PAN (Personal Area Network).
  
  Say Y here to compile BNEP support into the kernel or say M to
  compile it as module (bnep).

BT_BNEP_MC_FILTER
  This option enables the multicast filter support for BNEP.

BT_BNEP_PROTO_FILTER
  This option enables the protocol filter support for BNEP.
  

BT_BREDR
  Bluetooth Classic includes support for Basic Rate (BR)
  available with Bluetooth version 1.0b or later and support
  for Enhanced Data Rate (EDR) available with Bluetooth
  version 2.0 or later.

BT_CMTP
  CMTP (CAPI Message Transport Protocol) is a transport layer
  for CAPI messages.  CMTP is required for the Bluetooth Common
  ISDN Access Profile.
  
  Say Y here to compile CMTP support into the kernel or say M to
  compile it as module (cmtp).
  

BT_DEBUGFS
  Provide extensive information about internal Bluetooth states
  in debugfs.

BT_FEATURE_DEBUG
  This provides an option to enable/disable debugging statements
  at runtime via the experimental features interface.

BT_HCIBCM203X
  Bluetooth HCI BCM203x USB driver.
  This driver provides the firmware loading mechanism for the Broadcom
  Blutonium based devices.
  
  Say Y here to compile support for HCI BCM203x devices into the
  kernel or say M to compile it as module (bcm203x).

BT_HCIBFUSB
  Bluetooth HCI BlueFRITZ! USB driver.
  This driver provides support for Bluetooth USB devices with AVM
  interface:
     AVM BlueFRITZ! USB
  
  Say Y here to compile support for HCI BFUSB devices into the
  kernel or say M to compile it as module (bfusb).

BT_HCIBLUECARD
  Bluetooth HCI BlueCard (PC Card) driver.
  This driver provides support for Bluetooth PCMCIA devices with
  Anycom BlueCard interface:
     Anycom Bluetooth PC Card
     Anycom Bluetooth CF Card
  
  Say Y here to compile support for HCI BlueCard devices into the
  kernel or say M to compile it as module (bluecard_cs).

BT_HCIBPA10X
  Bluetooth HCI BPA10x USB driver.
  This driver provides support for the Digianswer BPA 100/105 Bluetooth
  sniffer devices.
  
  Say Y here to compile support for HCI BPA10x devices into the
  kernel or say M to compile it as module (bpa10x).

BT_HCIBT3C
  Bluetooth HCI BT3C (PC Card) driver.
  This driver provides support for Bluetooth PCMCIA devices with
  3Com BT3C interface:
     3Com Bluetooth Card (3CRWB6096)
     HP Bluetooth Card
  
  Say Y here to compile support for HCI BT3C devices into the
  kernel or say M to compile it as module (bt3c_cs).

BT_HCIBTSDIO
  Bluetooth HCI SDIO driver.
  This driver is required if you want to use Bluetooth device with
  SDIO interface.
  
  Say Y here to compile support for Bluetooth SDIO devices into the
  kernel or say M to compile it as module (btsdio).

BT_HCIBTUSB
  Bluetooth HCI USB driver.
  This driver is required if you want to use Bluetooth devices with
  USB interface.
  
  Say Y here to compile support for Bluetooth USB devices into the
  kernel or say M to compile it as module (btusb).

BT_HCIBTUSB_AUTOSUSPEND
  Say Y here to enable USB autosuspend for Bluetooth USB devices by
  default.
  
  This can be overridden by passing btusb.enable_autosuspend=[y|n]
  on the kernel commandline.

BT_HCIBTUSB_BCM
  The Broadcom protocol support enables firmware and patchram
  download support for Broadcom Bluetooth controllers.
  
  Say Y here to compile support for Broadcom protocol.

BT_HCIBTUSB_MTK
  The MediaTek protocol support enables firmware download
  support and chip initialization for MediaTek Bluetooth
  USB controllers.
  
  Say Y here to compile support for MediaTek protocol.

BT_HCIBTUSB_RTL
  The Realtek protocol support enables firmware and configuration
  download support for Realtek Bluetooth controllers.
  
  Say Y here to compile support for Realtek protocol.

BT_HCIDTL1
  Bluetooth HCI DTL1 (PC Card) driver.
  This driver provides support for Bluetooth PCMCIA devices with
  Nokia DTL1 interface:
     Nokia Bluetooth Card
     Socket Bluetooth CF Card
  
  Say Y here to compile support for HCI DTL1 devices into the
  kernel or say M to compile it as module (dtl1_cs).

BT_HCIRSI
  Redpine BT driver.
  This driver handles BT traffic from upper layers and pass
  to the RSI_91x coex module for further scheduling to device
  
  Say Y here to compile support for HCI over Redpine into the
  kernel or say M to compile as a module.

BT_HCIUART
  Bluetooth HCI UART driver.
  This driver is required if you want to use Bluetooth devices with
  serial port interface. You will also need this driver if you have
  UART based Bluetooth PCMCIA and CF devices like Xircom Credit Card
  adapter and BrainBoxes Bluetooth PC Card.
  
  Say Y here to compile support for Bluetooth UART devices into the
  kernel or say M to compile it as module (hci_uart).

BT_HCIUART_3WIRE
  The HCI Three-wire UART Transport Layer makes it possible to
  user the Bluetooth HCI over a serial port interface. The HCI
  Three-wire UART Transport Layer assumes that the UART
  communication may have bit errors, overrun errors or burst
  errors and thereby making CTS/RTS lines unnecessary.
  
  Say Y here to compile support for Three-wire UART protocol.

BT_HCIUART_AG6XX
  The Intel/AG6XX protocol support enables Bluetooth HCI over serial
  port interface for Intel ibt 2.1 Bluetooth controllers.
  
  Say Y here to compile support for Intel AG6XX protocol.

BT_HCIUART_ATH3K
  HCIATH3K (HCI Atheros AR300x) is a serial protocol for
  communication between host and Atheros AR300x Bluetooth devices.
  This protocol enables AR300x chips to be enabled with
  power management support.
  Enable this if you have Atheros AR300x serial Bluetooth device.
  
  Say Y here to compile support for HCI UART ATH3K protocol.

BT_HCIUART_BCM
  The Broadcom protocol support enables Bluetooth HCI over serial
  port interface for Broadcom Bluetooth controllers.
  
  Say Y here to compile support for Broadcom protocol.

BT_HCIUART_BCSP
  BCSP (BlueCore Serial Protocol) is serial protocol for communication
  between Bluetooth device and host. This protocol is required for non
  USB Bluetooth devices based on CSR BlueCore chip, including PCMCIA and
  CF cards.
  
  Say Y here to compile support for HCI BCSP protocol.

BT_HCIUART_H4
  UART (H4) is serial protocol for communication between Bluetooth
  device and host. This protocol is required for most Bluetooth devices
  with UART interface, including PCMCIA and CF cards.
  
  Say Y here to compile support for HCI UART (H4) protocol.

BT_HCIUART_INTEL
  The Intel protocol support enables Bluetooth HCI over serial
  port interface for Intel Bluetooth controllers.
  
  Say Y here to compile support for Intel protocol.

BT_HCIUART_LL
  HCILL (HCI Low Level) is a serial protocol for communication
  between Bluetooth device and host. This protocol is required for
  serial Bluetooth devices that are based on Texas Instruments'
  BRF chips.
  
  Say Y here to compile support for HCILL protocol.

BT_HCIUART_MRVL
  Marvell is serial protocol for communication between Bluetooth
  device and host. This protocol is required for most Marvell Bluetooth
  devices with UART interface.
  
  Say Y here to compile support for HCI MRVL protocol.

BT_HCIUART_NOKIA
  Nokia H4+ is serial protocol for communication between Bluetooth
  device and host. This protocol is required for Bluetooth devices
  with UART interface in Nokia devices.
  
  Say Y here to compile support for Nokia's H4+ protocol.

BT_HCIUART_QCA
  The Qualcomm Atheros protocol supports HCI In-Band Sleep feature
  over serial port interface(H4) between controller and host.
  This protocol is required for UART clock control for QCA Bluetooth
  devices.
  
  Say Y here to compile support for QCA protocol.

BT_HCIUART_RTL
  The Realtek protocol support enables Bluetooth HCI over 3-Wire
  serial port interface for Realtek Bluetooth controllers.
  
  Say Y here to compile support for Realtek protocol.

BT_HCIUART_SERDEV
  No help

BT_HCIVHCI
  Bluetooth Virtual HCI device driver.
  This driver is required if you want to use HCI Emulation software.
  
  Say Y here to compile support for virtual HCI devices into the
  kernel or say M to compile it as module (hci_vhci).

BT_HIDP
  HIDP (Human Interface Device Protocol) is a transport layer
  for HID reports.  HIDP is required for the Bluetooth Human
  Interface Device Profile.
  
  Say Y here to compile HIDP support into the kernel or say M to
  compile it as module (hidp).
  

BT_HS
  Bluetooth High Speed includes support for off-loading
  Bluetooth connections via 802.11 (wifi) physical layer
  available with Bluetooth version 3.0 or later.

BT_INTEL
  No help

BT_LE
  Bluetooth Low Energy includes support low-energy physical
  layer available with Bluetooth version 4.0 or later.

BT_LEDS
  This option selects a few LED triggers for different
  Bluetooth events.

BT_MRVL
  The core driver to support Marvell Bluetooth devices.
  
  This driver is required if you want to support
  Marvell Bluetooth devices, such as 8688/8787/8797/8887/8897/8977/8987/8997.
  
  Say Y here to compile Marvell Bluetooth driver
  into the kernel or say M to compile it as module.

BT_MRVL_SDIO
  The driver for Marvell Bluetooth chipsets with SDIO interface.
  
  This driver is required if you want to use Marvell Bluetooth
  devices with SDIO interface. Currently SD8688/SD8787/SD8797/SD8887/SD8897/SD8977/SD8987/SD8997
  chipsets are supported.
  
  Say Y here to compile support for Marvell BT-over-SDIO driver
  into the kernel or say M to compile it as module.

BT_MSFTEXT
  This options enables support for the Microsoft defined HCI
  vendor extensions.

BT_MTKSDIO
  MediaTek Bluetooth HCI SDIO driver.
  This driver is required if you want to use MediaTek Bluetooth
  with SDIO interface.
  
  Say Y here to compile support for MediaTek Bluetooth SDIO devices
  into the kernel or say M to compile it as module (btmtksdio).

BT_MTKUART
  MediaTek Bluetooth HCI UART driver.
  This driver is required if you want to use MediaTek Bluetooth
  with serial interface.
  
  Say Y here to compile support for MediaTek Bluetooth UART devices
  into the kernel or say M to compile it as module (btmtkuart).

BT_QCA
  No help

BT_QCOMSMD
  Qualcomm SMD based HCI driver.
  This driver is used to bridge HCI data onto the shared memory
  channels to the WCNSS core.
  
  Say Y here to compile support for HCI over Qualcomm SMD into the
  kernel or say M to compile as a module.

BT_RFCOMM
  RFCOMM provides connection oriented stream transport.  RFCOMM
  support is required for Dialup Networking, OBEX and other Bluetooth
  applications.
  
  Say Y here to compile RFCOMM support into the kernel or say M to
  compile it as module (rfcomm).

BT_RFCOMM_TTY
  This option enables TTY emulation support for RFCOMM channels.
  

BT_RTL
  No help

BT_SELFTEST
  Run self tests when initializing the Bluetooth subsystem.  This
  is a developer option and can cause significant delay when booting
  the system.
  
  When the Bluetooth subsystem is built as module, then the test
  cases are run first thing at module load time.  When the Bluetooth
  subsystem is compiled into the kernel image, then the test cases
  are run late in the initcall hierarchy.

BT_SELFTEST_ECDH
  Run test cases for ECDH cryptographic functionality used by the
  Bluetooth Low Energy Secure Connections feature.

BT_SELFTEST_SMP
  Run test cases for SMP cryptographic functionality, including both
  legacy SMP as well as the Secure Connections features.

BUG
  Disabling this option eliminates support for BUG and WARN, reducing
  the size of your kernel image and potentially quietly ignoring
  numerous fatal conditions. You should only consider disabling this
  option for embedded systems with no facilities for reporting errors.
  Just say Y.

BUG_ON_DATA_CORRUPTION
  Select this option if the kernel should BUG when it encounters
  data corruption in kernel memory structures when they get checked
  for validity.
  
  If unsure, say N.

BUILDTIME_TABLE_SORT
  No help

BUILD_BIN2C
  No help

BUILD_SALT
  The build ID is used to link binaries and their debug info. Setting
  this option will use the value in the calculation of the build id.
  This is mostly useful for distributions which want to ensure the
  build is unique between builds. It's safe to leave the default.

BVME6000_NET
  This is the driver for the Ethernet interface on BVME4000 and
  BVME6000 VME boards.  Say Y here to include the driver for this chip
  in your kernel.
  To compile this driver as a module, choose M here.

BVME6000_SCSI
  The BVME4000 and BVME6000 boards from BVM Ltd use the NCR53C710
  SCSI controller chip.  Almost everyone using one of these boards
  will want to say Y to this question.

BXT_WC_PMIC_OPREGION
  This config adds ACPI operation region support for BXT WhiskeyCove PMIC.

BYTCRC_PMIC_OPREGION
  This config adds ACPI operation region support for the Bay Trail
  version of the Crystal Cove PMIC.

C101
  Driver for C101 SuperSync ISA cards by Moxa Technologies Co., Ltd.
  
  If you have such a card, say Y here and see
  <http://www.kernel.org/pub/linux/utils/net/hdlc/>.
  
  To compile this driver as a module, choose M here: the
  module will be called c101.
  
  If unsure, say N.

C2PORT
  This option enables support for Silicon Labs C2 port used to
  program Silicon micro controller chips (and other 8051 compatible).
  
  If your board have no such micro controllers you don't need this
  interface at all.
  
  To compile this driver as a module, choose M here: the module will
  be called c2port_core. Note that you also need a client module
  usually called c2port-*.
  
  If you are not sure, say N here.

C2PORT_DURAMAR_2150
  This option enables C2 support for the Eurotech's Duramar 2150
  on board micro controller.
  
  To compile this driver as a module, choose M here: the module will
  be called c2port-duramar2150.

CACHEFILES
  This permits use of a mounted filesystem as a cache for other
  filesystems - primarily networking filesystems - thus allowing fast
  local disk to enhance the speed of slower devices.
  
  See Documentation/filesystems/caching/cachefiles.rst for more
  information.

CACHEFILES_DEBUG
  This permits debugging to be dynamically enabled in the filesystem
  caching on files module.  If this is set, the debugging output may be
  enabled by setting bits in /sys/modules/cachefiles/parameter/debug or
  by including a debugging specifier in /etc/cachefilesd.conf.

CACHEFILES_HISTOGRAM
  This option causes latency information to be gathered on CacheFiles
  operation and exported through file:
  
        /proc/fs/cachefiles/histogram
  
  The generation of this histogram adds a certain amount of overhead to
  execution as there are a number of points at which data is gathered,
  and on a multi-CPU system these may be on cachelines that keep
  bouncing between CPUs.  On the other hand, the histogram may be
  useful for debugging purposes.  Saying 'N' here is recommended.
  
  See Documentation/filesystems/caching/cachefiles.rst for more
  information.

CADENCE_TTC_TIMER
  Enables support for the Cadence TTC driver.

CADENCE_WATCHDOG
  Say Y here if you want to include support for the watchdog
  timer in the Xilinx Zynq.

CAIF
  The "Communication CPU to Application CPU Interface" (CAIF) is a packet
  based connection-oriented MUX protocol developed by ST-Ericsson for use
  with its modems. It is accessed from user space as sockets (PF_CAIF).
  
  Say Y (or M) here if you build for a phone product (e.g. Android or
  MeeGo) that uses CAIF as transport. If unsure say N.
  
  If you select to build it as module then CAIF_NETDEV also needs to be
  built as a module. You will also need to say Y (or M) to any CAIF
  physical devices that your platform requires.
  
  See Documentation/networking/caif for a further explanation on how to
  use and configure CAIF.

CAIF_DEBUG
  Enable the inclusion of debug code in the CAIF stack.
  Be aware that doing this will impact performance.
  If unsure say N.

CAIF_DRIVERS
  Enable this to see CAIF physical drivers.

CAIF_HSI
  The CAIF low level driver for CAIF over HSI.
  Be aware that if you enable this then you also need to
  enable a low-level HSI driver.

CAIF_NETDEV
  Say Y if you will be using a CAIF based GPRS network device.
  This can be either built-in or a loadable module.
  If you select to build it as a built-in then the main CAIF device must
  also be a built-in.
  If unsure say Y.

CAIF_TTY
  The CAIF TTY transport driver is a Line Discipline (ldisc)
  identified as N_CAIF. When this ldisc is opened from user space
  it will redirect the TTY's traffic into the CAIF stack.

CAIF_USB
  Say Y if you are using CAIF over USB CDC NCM.
  This can be either built-in or a loadable module.
  If you select to build it as a built-in then the main CAIF device must
  also be a built-in.
  If unsure say N.

CAIF_VIRTIO
  The CAIF driver for CAIF over Virtio.

CAN
  Controller Area Network (CAN) is a slow (up to 1Mbit/s) serial
  communications protocol. Development of the CAN bus started in
  1983 at Robert Bosch GmbH, and the protocol was officially
  released in 1986. The CAN bus was originally mainly for automotive,
  but is now widely used in marine (NMEA2000), industrial, and medical
  applications. More information on the CAN network protocol family
  PF_CAN is contained in <Documentation/networking/can.rst>.
  
  If you want CAN support you should say Y here and also to the
  specific driver for your controller(s) below.

CAN_8DEV_USB
  This driver supports the USB2CAN interface
  from 8 devices (http://www.8devices.com).

CAN_AT91
  This is a driver for the SoC CAN controller in Atmel's AT91SAM9263
  and AT91SAM9X5 processors.

CAN_BCM
  The Broadcast Manager offers content filtering, timeout monitoring,
  sending of RTR frames, and cyclic CAN messages without permanent user
  interaction. The BCM can be 'programmed' via the BSD socket API and
  informs you on demand e.g. only on content updates / timeouts.
  You probably want to use the bcm socket in most cases where cyclic
  CAN messages are used on the bus (e.g. in automotive environments).
  To use the Broadcast Manager, use AF_CAN with protocol CAN_BCM.

CAN_CALC_BITTIMING
  If enabled, CAN bit-timing parameters will be calculated for the
  bit-rate specified via Netlink argument "bitrate" when the device
  get started. This works fine for the most common CAN controllers
  with standard bit-rates but may fail for exotic bit-rates or CAN
  source clock frequencies. Disabling saves some space, but then the
  bit-timing parameters must be specified directly using the Netlink
  arguments "tq", "prop_seg", "phase_seg1", "phase_seg2" and "sjw".
  If unsure, say Y.

CAN_CC770
  No help

CAN_CC770_ISA
  This driver adds legacy support for CC770 and AN82527 chips
  connected to the ISA bus using I/O port, memory mapped or
  indirect access.

CAN_CC770_PLATFORM
  This driver adds support for the CC770 and AN82527 chips
  connected to the "platform bus" (Linux abstraction for directly
  to the processor attached devices).

CAN_C_CAN
  No help

CAN_C_CAN_PCI
  This driver adds support for the C_CAN/D_CAN chips connected
  to the PCI bus.

CAN_C_CAN_PLATFORM
  This driver adds support for the C_CAN/D_CAN chips connected
  to the "platform bus" (Linux abstraction for directly to the
  processor attached devices) which can be found on various
  boards from ST Microelectronics (http://www.st.com) like the
  SPEAr1310 and SPEAr320 evaluation boards & TI (www.ti.com)
  boards like am335x, dm814x, dm813x and dm811x.

CAN_DEBUG_DEVICES
  Say Y here if you want the CAN device drivers to produce a bunch of
  debug messages to the system log.  Select this if you are having
  a problem with CAN support and want to see more of what is going
  on.

CAN_DEV
  Enables the common framework for platform CAN drivers with Netlink
  support. This is the standard library for CAN drivers.
  If unsure, say Y.

CAN_EMS_PCI
  This driver is for the one, two or four channel CPC-PCI,
  CPC-PCIe and CPC-104P cards from EMS Dr. Thomas Wuensche
  (http://www.ems-wuensche.de).

CAN_EMS_PCMCIA
  This driver is for the one or two channel CPC-CARD cards from
  EMS Dr. Thomas Wuensche (http://www.ems-wuensche.de).

CAN_EMS_USB
  This driver is for the one channel CPC-USB/ARM7 CAN/USB interface
  from EMS Dr. Thomas Wuensche (http://www.ems-wuensche.de).

CAN_ESD_USB2
  This driver supports the CAN-USB/2 interface
  from esd electronic system design gmbh (http://www.esd.eu).

CAN_F81601
  This driver adds support for Fintek F81601 PCIE to 2 CAN
  Controller. It had internal 24MHz clock source, but it can
  be changed by manufacturer. Use modinfo to get usage for
  parameters. Visit http://www.fintek.com.tw to get more
  information.

CAN_FLEXCAN
  Say Y here if you want to support for Freescale FlexCAN.

CAN_GRCAN
  Say Y here if you want to use Aeroflex Gaisler GRCAN or GRHCAN.
  Note that the driver supports little endian, even though little
  endian syntheses of the cores would need some modifications on
  the hardware level to work.

CAN_GS_USB
  This driver supports the Geschwister Schneider and bytewerk.org
  candleLight USB CAN interfaces USB/CAN devices
  If unsure choose N,
  choose Y for built in support,
  M to compile as module (module will be named: gs_usb).

CAN_GW
  The CAN Gateway/Router is used to route (and modify) CAN frames.
  It is based on the PF_CAN core infrastructure for msg filtering and
  msg sending and can optionally modify routed CAN frames on the fly.
  CAN frames can be routed between CAN network interfaces (one hop).
  They can be modified with AND/OR/XOR/SET operations as configured
  by the netlink configuration interface known e.g. from iptables.

CAN_HI311X
  Driver for the Holt HI311x SPI CAN controllers.

CAN_IFI_CANFD
  This driver adds support for the I/F/I CAN_FD soft IP block
  connected to the "platform bus" (Linux abstraction for directly
  to the processor attached devices). The CAN_FD is most often
  synthesised into an FPGA or CPLD.

CAN_ISOTP
  CAN Transport Protocols offer support for segmented Point-to-Point
  communication between CAN nodes via two defined CAN Identifiers.
  As CAN frames can only transport a small amount of data bytes
  (max. 8 bytes for 'classic' CAN and max. 64 bytes for CAN FD) this
  segmentation is needed to transport longer Protocol Data Units (PDU)
  as needed e.g. for vehicle diagnosis (UDS, ISO 14229) or IP-over-CAN
  traffic.
  This protocol driver implements data transfers according to
  ISO 15765-2:2016 for 'classic' CAN and CAN FD frame types.
  If you want to perform automotive vehicle diagnostic services (UDS),
  say 'y'.

CAN_J1939
  SAE J1939
  Say Y to have in-kernel support for j1939 socket type. This
  allows communication according to SAE j1939.
  The relevant parts in kernel are
  SAE j1939-21 (datalink & transport protocol)
  & SAE j1939-81 (network management).

CAN_JANZ_ICAN3
  Driver for Janz VMOD-ICAN3 Intelligent CAN controller module, which
  connects to a MODULbus carrier board.
  
  This driver can also be built as a module. If so, the module will be
  called janz-ican3.ko.

CAN_KVASER_PCI
  This driver is for the PCIcanx and PCIcan cards (1, 2 or
  4 channel) from Kvaser (http://www.kvaser.com).

CAN_KVASER_PCIEFD
  This is a driver for the Kvaser PCI Express CAN FD family.
  
  Supported devices:
    Kvaser PCIEcan 4xHS
    Kvaser PCIEcan 2xHS v2
    Kvaser PCIEcan HS v2
    Kvaser Mini PCI Express HS v2
    Kvaser Mini PCI Express 2xHS v2

CAN_KVASER_USB
  This driver adds support for Kvaser CAN/USB devices like Kvaser
  Leaf Light, Kvaser USBcan II and Kvaser Memorator Pro 5xHS.
  
  The driver provides support for the following devices:
    - Kvaser Leaf Light
    - Kvaser Leaf Professional HS
    - Kvaser Leaf SemiPro HS
    - Kvaser Leaf Professional LS
    - Kvaser Leaf Professional SWC
    - Kvaser Leaf Professional LIN
    - Kvaser Leaf SemiPro LS
    - Kvaser Leaf SemiPro SWC
    - Kvaser Memorator II HS/HS
    - Kvaser USBcan Professional HS/HS
    - Kvaser Leaf Light GI
    - Kvaser Leaf Professional HS (OBD-II connector)
    - Kvaser Memorator Professional HS/LS
    - Kvaser Leaf Light "China"
    - Kvaser BlackBird SemiPro
    - Kvaser USBcan R
    - Kvaser USBcan R v2
    - Kvaser Leaf Light v2
    - Kvaser Leaf Light R v2
    - Kvaser Mini PCI Express HS
    - Kvaser Mini PCI Express 2xHS
    - Kvaser USBcan Light 2xHS
    - Kvaser USBcan II HS/HS
    - Kvaser USBcan II HS/LS
    - Kvaser USBcan Rugged ("USBcan Rev B")
    - Kvaser Memorator HS/HS
    - Kvaser Memorator HS/LS
    - Scania VCI2 (if you have the Kvaser logo on top)
    - Kvaser BlackBird v2
    - Kvaser Leaf Pro HS v2
    - Kvaser Hybrid 2xCAN/LIN
    - Kvaser Hybrid Pro 2xCAN/LIN
    - Kvaser Memorator 2xHS v2
    - Kvaser Memorator Pro 2xHS v2
    - Kvaser Memorator Pro 5xHS
    - Kvaser USBcan Light 4xHS
    - Kvaser USBcan Pro 2xHS v2
    - Kvaser USBcan Pro 5xHS
    - Kvaser U100
    - Kvaser U100P
    - Kvaser U100S
    - ATI Memorator Pro 2xHS v2
    - ATI USBcan Pro 2xHS v2
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called kvaser_usb.

CAN_LEDS
  This option adds two LED triggers for packet receive and transmit
  events on each supported CAN device.
  
  Say Y here if you are working on a system with led-class supported
  LEDs and you want to use them as canbus activity indicators.

CAN_MCBA_USB
  This driver supports the CAN BUS Analyzer interface
  from Microchip (http://www.microchip.com/development-tools/).

CAN_MCP251X
  Driver for the Microchip MCP251x and MCP25625 SPI CAN
  controllers.

CAN_MCP251XFD
  Driver for the Microchip MCP251XFD SPI FD-CAN controller
  family.

CAN_MCP251XFD_SANITY
  This option enables additional sanity checks in the driver,
  that compares various internal counters with the in chip
  variants. This comes with a runtime overhead.
  Disable if unsure.

CAN_MPC5XXX
  If you say yes here you get support for Freescale's MPC5xxx
  onboard CAN controller. Currently, the MPC5200, MPC5200B and
  MPC5121 (Rev. 2 and later) are supported.
  
  This driver can also be built as a module. If so, the module
  will be called mscan-mpc5xxx.ko.

CAN_MSCAN
  The Motorola Scalable Controller Area Network (MSCAN) definition
  is based on the MSCAN12 definition which is the specific
  implementation of the Motorola Scalable CAN concept targeted for
  the Motorola MC68HC12 Microcontroller Family.

CAN_M_CAN
  Say Y here if you want support for Bosch M_CAN controller framework.
  This is common support for devices that embed the Bosch M_CAN IP.

CAN_M_CAN_PCI
  Say Y here if you want to support Bosch M_CAN controller connected
  to the pci bus.

CAN_M_CAN_PLATFORM
  Say Y here if you want support for IO Mapped Bosch M_CAN controller.
  This support is for devices that have the Bosch M_CAN controller
  IP embedded into the device and the IP is IO Mapped to the processor.

CAN_M_CAN_TCAN4X5X
  Say Y here if you want support for Texas Instruments TCAN4x5x
  M_CAN controller.  This device is a peripheral device that uses the
  SPI bus for communication.

CAN_PEAK_PCI
  This driver is for the PCAN-PCI/PCIe/miniPCI cards
  (1, 2, 3 or 4 channels) from PEAK-System Technik
  (http://www.peak-system.com).

CAN_PEAK_PCIEC
  Say Y here if you want to use a PCAN-ExpressCard from PEAK-System
  Technik. This will also automatically select I2C and I2C_ALGO
  configuration options.

CAN_PEAK_PCIEFD
  This driver adds support for the PEAK-System PCI Express FD
  CAN-FD cards family.
  These 1x or 2x CAN-FD channels cards offer CAN 2.0 a/b as well as
  CAN-FD access to the CAN bus. Besides the nominal bitrate of up to
  1 Mbit/s, the data bytes of CAN-FD frames can be transmitted with
  up to 12 Mbit/s. A galvanic isolation of the CAN ports protects the
  electronics of the card and the respective computer against
  disturbances of up to 500 Volts. The PCAN-PCI Express FD can be
  operated with ambient temperatures in a range of -40 to +85 °C.

CAN_PEAK_PCMCIA
  This driver is for the PCAN-PC Card PCMCIA adapter (1 or 2 channels)
  from PEAK-System (http://www.peak-system.com). To compile this
  driver as a module, choose M here: the module will be called
  peak_pcmcia.

CAN_PEAK_USB
  This driver supports the PEAK-System Technik USB adapters that enable
  access to the CAN bus, with respect to the CAN 2.0b and/or CAN-FD
  standards, that is:
  
  PCAN-USB             single CAN 2.0b channel USB adapter
  PCAN-USB Pro         dual CAN 2.0b channels USB adapter
  PCAN-USB FD          single CAN-FD channel USB adapter
  PCAN-USB Pro FD      dual CAN-FD channels USB adapter
  PCAN-Chip USB        CAN-FD to USB stamp module
  PCAN-USB X6          6 CAN-FD channels USB adapter
  
  (see also http://www.peak-system.com).

CAN_PLX_PCI
  This driver is for CAN interface cards based on
  the PLX90xx PCI bridge.
  Driver supports now:
   - Adlink PCI-7841/cPCI-7841 card (http://www.adlinktech.com/)
   - Adlink PCI-7841/cPCI-7841 SE card
   - esd CAN-PCI/CPCI/PCI104/200 (http://www.esd.eu/)
   - esd CAN-PCI/PMC/266
   - esd CAN-PCIe/2000
   - Marathon CAN-bus-PCI card (http://www.marathon.ru/)
   - TEWS TECHNOLOGIES TPMC810 card (http://www.tews.com/)
   - IXXAT Automation PC-I 04/PCI card (http://www.ixxat.com/)
   - Connect Tech Inc. CANpro/104-Plus Opto (CRG001) card (http://www.connecttech.com)
   - ASEM CAN raw - 2 isolated CAN channels (www.asem.it)

CAN_RAW
  The raw CAN protocol option offers access to the CAN bus via
  the BSD socket API. You probably want to use the raw socket in
  most cases where no higher level protocol is being used. The raw
  socket has several filter options e.g. ID masking / error frames.
  To receive/send raw CAN messages, use AF_CAN with protocol CAN_RAW.

CAN_RCAR
  Say Y here if you want to use CAN controller found on Renesas R-Car
  or RZ/G SoCs.
  
  To compile this driver as a module, choose M here: the module will
  be called rcar_can.

CAN_RCAR_CANFD
  Say Y here if you want to use CAN FD controller found on
  Renesas R-Car SoCs. The driver puts the controller in CAN FD only
  mode, which can interoperate with CAN2.0 nodes but does not support
  dedicated CAN 2.0 mode.
  
  To compile this driver as a module, choose M here: the module will
  be called rcar_canfd.

CAN_SJA1000
  No help

CAN_SJA1000_ISA
  This driver adds legacy support for SJA1000 chips connected to
  the ISA bus using I/O port, memory mapped or indirect access.

CAN_SJA1000_PLATFORM
  This driver adds support for the SJA1000 chips connected to
  the "platform bus" (Linux abstraction for directly to the
  processor attached devices).  Which can be found on various
  boards from Phytec (http://www.phytec.de) like the PCM027,
  PCM038. It also provides the OpenFirmware "platform bus" found
  on embedded systems with OpenFirmware bindings, e.g. if you
  have a PowerPC based system you may want to enable this option.

CAN_SLCAN
  CAN driver for several 'low cost' CAN interfaces that are attached
  via serial lines or via USB-to-serial adapters using the LAWICEL
  ASCII protocol. The driver implements the tty linediscipline N_SLCAN.
  
  As only the sending and receiving of CAN frames is implemented, this
  driver should work with the (serial/USB) CAN hardware from:
  www.canusb.com / www.can232.com / www.mictronics.de / www.canhack.de
  
  Userspace tools to attach the SLCAN line discipline (slcan_attach,
  slcand) can be found in the can-utils at the linux-can project, see
  https://github.com/linux-can/can-utils for details.
  
  The slcan driver supports up to 10 CAN netdevices by default which
  can be changed by the 'maxdev=xx' module option. This driver can
  also be built as a module. If so, the module will be called slcan.

CAN_SOFTING
  Support for CAN cards from Softing Gmbh & some cards
  from Vector Gmbh.
  Softing Gmbh CAN cards come with 1 or 2 physical buses.
  Those cards typically use Dual Port RAM to communicate
  with the host CPU. The interface is then identical for PCI
  and PCMCIA cards. This driver operates on a platform device,
  which has been created by softing_cs or softing_pci driver.
  Warning:
  The API of the card does not allow fine control per bus, but
  controls the 2 buses on the card together.
  As such, some actions (start/stop/busoff recovery) on 1 bus
  must bring down the other bus too temporarily.

CAN_SOFTING_CS
  Support for PCMCIA cards from Softing Gmbh & some cards
  from Vector Gmbh.
  You need firmware for these, which you can get at
  https://github.com/linux-can/can-firmware
  This version of the driver is written against
  firmware version 4.6 (softing-fw-4.6-binaries.tar.gz)
  In order to use the card as CAN device, you need the Softing generic
  support too.

CAN_SUN4I
  Say Y here if you want to use CAN controller found on Allwinner
  A10/A20 SoCs.
  
  To compile this driver as a module, choose M here: the module will
  be called sun4i_can.

CAN_TI_HECC
  Driver for TI HECC (High End CAN Controller) module found on many
  TI devices. The device specifications are available from www.ti.com

CAN_TSCAN1
  This driver is for Technologic Systems' TSCAN-1 PC104 boards.
  http://www.embeddedarm.com/products/board-detail.php?product=TS-CAN1
  The driver supports multiple boards and automatically configures them:
  PLD IO base addresses are read from jumpers JP1 and JP2,
  IRQ numbers are read from jumpers JP4 and JP5,
  SJA1000 IO base addresses are chosen heuristically (first that works).

CAN_UCAN
  This driver supports the Theobroma Systems
  UCAN USB-CAN interface.
  
  The UCAN driver supports the microcontroller-based USB/CAN
  adapters from Theobroma Systems. There are two form-factors
  that run essentially the same firmware:
  
  * Seal: standalone USB stick
          https://www.theobroma-systems.com/seal)
  * Mule: integrated on the PCB of various System-on-Modules
          from Theobroma Systems like the A31-µQ7 and the RK3399-Q7
          (https://www.theobroma-systems.com/rk3399-q7)

CAN_VCAN
  Similar to the network loopback devices, vcan offers a
  virtual local CAN interface.
  
  This driver can also be built as a module.  If so, the module
  will be called vcan.

CAN_VXCAN
  Similar to the virtual ethernet driver veth, vxcan implements a
  local CAN traffic tunnel between two virtual CAN network devices.
  When creating a vxcan, two vxcan devices are created as pair.
  When one end receives the packet it appears on its pair and vice
  versa. The vxcan can be used for cross namespace communication.
  
  In opposite to vcan loopback devices the vxcan only forwards CAN
  frames to its pair and does *not* provide a local echo of sent
  CAN frames. To disable a potential echo in af_can.c the vxcan driver
  announces IFF_ECHO in the interface flags. To have a clean start
  in each namespace the CAN GW hop counter is set to zero.
  
  This driver can also be built as a module.  If so, the module
  will be called vxcan.

CAN_XILINXCAN
  Xilinx CAN driver. This driver supports both soft AXI CAN IP and
  Zynq CANPS IP.

CAPI_TRACE
  If you say Y here, the kernelcapi driver can make verbose traces
  of CAPI messages. This feature can be enabled/disabled via IOCTL for
  every controller (default disabled).

CARDBUS
  CardBus is a bus mastering architecture for PC-cards, which allows
  for 32 bit PC-cards (the original PCMCIA standard specifies only
  a 16 bit wide bus). Many newer PC-cards are actually CardBus cards.
  
  To use 32 bit PC-cards, you also need a CardBus compatible host
  bridge. Virtually all modern PCMCIA bridges do this, and most of
  them are "yenta-compatible", so say Y or M there, too.
  
  If unsure, say Y.

CARDMAN_4000
  Enable support for the Omnikey Cardman 4000 PCMCIA Smartcard
  reader.
  
  This kernel driver requires additional userspace support, either
  by the vendor-provided PC/SC ifd_handler (http://www.omnikey.com/),
  or via the cm4000 backend of OpenCT (http://www.opensc-project.org/opensc).

CARDMAN_4040
  Enable support for the Omnikey CardMan 4040 PCMCIA Smartcard
  reader.
  
  This card is basically a USB CCID device connected to a FIFO
  in I/O space.  To use the kernel driver, you will need either the
  PC/SC ifdhandler provided from the Omnikey homepage
  (http://www.omnikey.com/), or a current development version of OpenCT
  (http://www.opensc-project.org/opensc).

CARL9170
  This is the mainline driver for the Atheros "otus" 802.11n USB devices.
  
  It needs a special firmware (carl9170-1.fw), which can be downloaded
  from our wiki here:
  <https://wireless.wiki.kernel.org/en/users/Drivers/carl9170>
  
  If you choose to build a module, it'll be called carl9170.

CARL9170_DEBUGFS
  Export several driver and device internals to user space.
  
  Say N.

CARL9170_HWRNG
  Provides a hardware random number generator to the kernel.
  
  SECURITY WARNING: It's relatively easy to eavesdrop all
  generated random numbers from the transport stream with
  usbmon [software] or special usb sniffer hardware.
  
  Say N, unless your setup[i.e.: embedded system] has no
  other rng source and you can afford to take the risk.

CARL9170_LEDS
  This option is necessary, if you want your device' LEDs to blink
  
  Say Y, unless you need the LEDs for firmware debugging.

CARL9170_WPC
  No help

CARMINE_DRAM_CUSTOM
  Use custom board timings.

CASSINI
  Support for the Sun Cassini chip, aka Sun GigaSwift Ethernet. See also
  <http://docs.oracle.com/cd/E19113-01/giga.ether.pci/817-4341-10/817-4341-10.pdf>.

CAVIUM_CPT
  Support for Cavium CPT block found in octeon-tx series of
  processors.
  
  To compile this as a module, choose M here.

CAVIUM_PTP
  This driver adds support for the Precision Time Protocol Clocks and
  Timestamping coprocessor (PTP) found on Cavium processors.
  PTP provides timestamping mechanism that is suitable for use in IEEE 1588
  Precision Time Protocol or other purposes.  Timestamps can be used in
  BGX, TNS, GTI, and NIC blocks.

CB710_CORE
  This option enables support for PCI ENE CB710/720 Flash memory card
  reader found in some laptops (ie. some versions of HP Compaq nx9500).
  
  You will also have to select some flash card format drivers (MMC/SD,
  MemoryStick).
  
  This driver can also be built as a module. If so, the module
  will be called cb710.

CB710_DEBUG
  This is an option for use by developers; most people should
  say N here.  This adds a lot of debugging output to dmesg.

CB710_DEBUG_ASSUMPTIONS
  No help

CC10001_ADC
  Say yes here to build support for Cosmic Circuits 10001 ADC.
  
  This driver can also be built as a module. If so, the module will be
  called cc10001_adc.

CCS811
  Say Y here to build I2C interface support for the AMS
  CCS811 VOC (Volatile Organic Compounds) sensor

CCWGROUP
  No help

CCW_CONSOLE
  No help

CC_CAN_LINK
  No help

CC_CAN_LINK_STATIC
  No help

CC_HAS_ASM_GOTO
  No help

CC_HAS_ASM_GOTO_OUTPUT
  No help

CC_HAS_ASM_INLINE
  No help

CC_HAS_AUTO_VAR_INIT_PATTERN
  No help

CC_HAS_AUTO_VAR_INIT_ZERO
  No help

CC_HAS_INT128
  No help

CC_HAS_KASAN_GENERIC
  No help

CC_HAS_KASAN_SW_TAGS
  No help

CC_HAS_SANCOV_TRACE_PC
  No help

CC_HAS_SANE_STACKPROTECTOR
  We have to make sure stack protector is unconditionally disabled if
  the compiler produces broken code.

CC_HAS_TSAN_COMPOUND_READ_BEFORE_WRITE
  No help

CC_HAS_UBSAN_ARRAY_BOUNDS
  No help

CC_HAS_UBSAN_BOUNDS
  No help

CC_HAS_WORKING_NOSANITIZE_ADDRESS
  No help

CC_IS_CLANG
  No help

CC_IS_GCC
  No help

CC_OPTIMIZE_FOR_PERFORMANCE
  This is the default optimization level for the kernel, building
  with the "-O2" compiler flag for best performance and most
  helpful compile-time warnings.

CC_OPTIMIZE_FOR_PERFORMANCE_O3
  Choosing this option will pass "-O3" to your compiler to optimize
  the kernel yet more for performance.

CC_OPTIMIZE_FOR_SIZE
  Choosing this option will pass "-Os" to your compiler resulting
  in a smaller kernel.

CC_VERSION_TEXT
  This is used in unclear ways:
  
  - Re-run Kconfig when the compiler is updated
    The 'default' property references the environment variable,
    CC_VERSION_TEXT so it is recorded in include/config/auto.conf.cmd.
    When the compiler is updated, Kconfig will be invoked.
  
  - Ensure full rebuild when the compier is updated
    include/linux/kconfig.h contains this option in the comment line so
    fixdep adds include/config/cc/version/text.h into the auto-generated
    dependency. When the compiler is updated, syncconfig will touch it
    and then every file will be rebuilt.

CDNS_I3C_MASTER
  Enable this driver if you want to support Cadence I3C master block.

CDROM
  No help

CDROM_PKTCDVD
  Note: This driver is deprecated and will be removed from the
  kernel in the near future!
  
  If you have a CDROM/DVD drive that supports packet writing, say
  Y to include support. It should work with any MMC/Mt Fuji
  compliant ATAPI or SCSI drive, which is just about any newer
  DVD/CD writer.
  
  Currently only writing to CD-RW, DVD-RW, DVD+RW and DVDRAM discs
  is possible.
  DVD-RW disks must be in restricted overwrite mode.
  
  See the file <file:Documentation/cdrom/packet-writing.rst>
  for further information on the use of this driver.
  
  To compile this driver as a module, choose M here: the
  module will be called pktcdvd.

CDROM_PKTCDVD_BUFFERS
  This controls the maximum number of active concurrent packets. More
  concurrent packets can increase write performance, but also require
  more memory. Each concurrent packet will require approximately 64Kb
  of non-swappable kernel memory, memory which will be allocated when
  a disc is opened for writing.

CDROM_PKTCDVD_WCACHE
  If enabled, write caching will be set for the CD-R/W device. For now
  this option is dangerous unless the CD-RW media is known good, as we
  don't do deferred write error handling yet.

CEC_CH7322
  This is a driver for the Chrontel CH7322 CEC controller. It uses the
  generic CEC framework interface.
  CEC bus is present in the HDMI connector and enables communication
  between compatible devices.

CEC_CORE
  No help

CEC_CROS_EC
  If you say yes here you will get support for the
  ChromeOS Embedded Controller's CEC.
  The CEC bus is present in the HDMI connector and enables communication
  between compatible devices.

CEC_GPIO
  This is a generic GPIO-based CEC driver.
  The CEC bus is present in the HDMI connector and enables communication
  between compatible devices.

CEC_MESON_AO
  This is a driver for Amlogic Meson SoCs AO CEC interface. It uses the
  generic CEC framework interface.
  CEC bus is present in the HDMI connector and enables communication

CEC_MESON_G12A_AO
  This is a driver for Amlogic Meson G12A SoCs AO CEC interface.
  This driver if for the new AO-CEC module found in G12A SoCs,
  usually named AO_CEC_B in documentation.
  It uses the generic CEC framework interface.
  CEC bus is present in the HDMI connector and enables communication
  between compatible devices.

CEC_NOTIFIER
  No help

CEC_PIN
  No help

CEC_PIN_ERROR_INJ
  This option enables CEC error injection using debugfs.

CEC_SAMSUNG_S5P
  This is a driver for Samsung S5P HDMI CEC interface. It uses the
  generic CEC framework interface.
  CEC bus is present in the HDMI connector and enables communication
  between compatible devices.

CEC_SECO
  This is a driver for SECO Boards integrated CEC interface.
  Selecting it will enable support for this device.
  CEC bus is present in the HDMI connector and enables communication
  between compatible devices.

CEC_SECO_RC
  If you say yes here you will get support for the
  SECO Boards Consumer-IR in seco-cec driver.
  The embedded controller supports RC5 protocol only, default mapping
  is set to rc-hauppauge.

CEC_STI
  This is a driver for STIH4xx HDMI CEC interface. It uses the
  generic CEC framework interface.
  CEC bus is present in the HDMI connector and enables communication
  between compatible devices.

CEC_STM32
  This is a driver for STM32 interface. It uses the
  generic CEC framework interface.
  CEC bus is present in the HDMI connector and enables communication
  between compatible devices.

CEC_TEGRA
  This is a driver for the Tegra HDMI CEC interface. It uses the
  generic CEC framework interface.
  The CEC bus is present in the HDMI connector and enables communication
  between compatible devices.

CEPH_FS
  Choose Y or M here to include support for mounting the
  experimental Ceph distributed file system.  Ceph is an extremely
  scalable file system designed to provide high performance,
  reliable access to petabytes of storage.
  
  More information at https://ceph.io/.
  
  If unsure, say N.

CEPH_FSCACHE
  Choose Y here to enable persistent, read-only local
  caching support for Ceph clients using FS-Cache

CEPH_FS_POSIX_ACL
  POSIX Access Control Lists (ACLs) support permissions for users and
  groups beyond the owner/group/world scheme.
  
  If you don't know what Access Control Lists are, say N

CEPH_FS_SECURITY_LABEL
  Security labels support alternative access control models
  implemented by security modules like SELinux. This option
  enables an extended attribute handler for file security
  labels in the Ceph filesystem.
  
  If you are not using a security module that requires using
  extended attributes for file security labels, say N.

CEPH_LIB
  Choose Y or M here to include cephlib, which provides the
  common functionality to both the Ceph filesystem and
  to the rados block device (rbd).
  
  More information at https://ceph.io/.
  
  If unsure, say N.

CEPH_LIB_PRETTYDEBUG
  If you say Y here, debug output will include a filename and
  line to aid debugging.  This increases kernel size and slows
  execution slightly when debug call sites are enabled (e.g.,
  via CONFIG_DYNAMIC_DEBUG).
  
  If unsure, say N.

CEPH_LIB_USE_DNS_RESOLVER
  If you say Y here, hostnames (e.g. monitor addresses) will
  be resolved using the CONFIG_DNS_RESOLVER facility.
  
  For information on how to use CONFIG_DNS_RESOLVER consult
  Documentation/networking/dns_resolver.rst
  
  If unsure, say N.

CFAG12864B
  If you have a Crystalfontz 128x64 2-color LCD, cfag12864b Series,
  say Y. You also need the ks0108 LCD Controller driver.
  
  For help about how to wire your LCD to the parallel port,
  check Documentation/admin-guide/auxdisplay/cfag12864b.rst
  
  Depends on the x86 arch and the framebuffer support.
  
  The LCD framebuffer driver can be attached to a console.
  It will work fine. However, you can't attach it to the fbdev driver
  of the xorg server.
  
  To compile this as a module, choose M here:
  the modules will be called cfag12864b and cfag12864bfb.
  
  If unsure, say N.

CFAG12864B_RATE
  Refresh rate of the LCD.
  
  As the LCD is not memory mapped, the driver has to make the work by
  software. This means you should be careful setting this value higher.
  If your CPUs are really slow or you feel the system is slowed down,
  decrease the value.
  
  Be careful modifying this value to a very high value:
  You can freeze the computer, or the LCD maybe can't draw as fast as you
  are requesting.
  
  If you don't know what I'm talking about, ignore it.
  
  If you compile this as a module, you can still override this
  value using the module parameters.

CFG80211
  cfg80211 is the Linux wireless LAN (802.11) configuration API.
  Enable this if you have a wireless device.
  
  For more information refer to documentation on the wireless wiki:
  
  https://wireless.wiki.kernel.org/en/developers/Documentation/cfg80211
  
  When built as a module it will be called cfg80211.

CFG80211_CERTIFICATION_ONUS
  You should disable this option unless you are both capable
  and willing to ensure your system will remain regulatory
  compliant with the features available under this option.
  Some options may still be under heavy development and
  for whatever reason regulatory compliance has not or
  cannot yet be verified. Regulatory verification may at
  times only be possible until you have the final system
  in place.
  
  This option should only be enabled by system integrators
  or distributions that have done work necessary to ensure
  regulatory certification on the system with the enabled
  features. Alternatively you can enable this option if
  you are a wireless researcher and are working in a controlled
  and approved environment by your local regulatory agency.

CFG80211_CRDA_SUPPORT
  You should enable this option unless you know for sure you have no
  need for it, for example when using the regulatory database loaded as
  a firmware file.
  
  If unsure, say Y.

CFG80211_DEBUGFS
  You can enable this if you want debugfs entries for cfg80211.
  
  If unsure, say N.

CFG80211_DEFAULT_PS
  This option enables powersave mode by default.
  
  If this causes your applications to misbehave you should fix your
  applications instead -- they need to register their network
  latency requirement, see Documentation/power/pm_qos_interface.rst.

CFG80211_DEVELOPER_WARNINGS
  This option enables some additional warnings that help
  cfg80211 developers and driver developers, but beware that
  they can also trigger due to races with userspace.
  
  For example, when a driver reports that it was disconnected
  from the AP, but the user disconnects manually at the same
  time, the warning might trigger spuriously due to races.
  
  Say Y only if you are developing cfg80211 or a driver based
  on it (or mac80211).

CFG80211_EXTRA_REGDB_KEYDIR
  If selected, point to a directory with DER-encoded X.509
  certificates like in the kernel sources (net/wireless/certs/)
  that shall be accepted for a signed regulatory database.
  
  Note that you need to also select the correct CRYPTO_<hash> modules
  for your certificates, and if cfg80211 is built-in they also must be.

CFG80211_REG_CELLULAR_HINTS
  This option enables support for parsing regulatory hints
  from cellular base stations. If enabled and at least one driver
  claims support for parsing cellular base station hints the
  regulatory core will allow and parse these regulatory hints.
  The regulatory core will only apply these regulatory hints on
  drivers that support this feature. You should only enable this
  feature if you have tested and validated this feature on your
  systems.

CFG80211_REG_RELAX_NO_IR
  This option enables support for relaxation of the NO_IR flag for
  situations that certain regulatory bodies have provided clarifications
  on how relaxation can occur. This feature has an inherent dependency on
  userspace features which must have been properly tested and as such is
  not enabled by default.
  
  A relaxation feature example is allowing the operation of a P2P group
  owner (GO) on channels marked with NO_IR if there is an additional BSS
  interface which associated to an AP which userspace assumes or confirms
  to be an authorized master, i.e., with radar detection support and DFS
  capabilities. However, note that in order to not create daisy chain
  scenarios, this relaxation is not allowed in cases where the BSS client
  is associated to P2P GO and in addition the P2P GO instantiated on
  a channel due to this relaxation should not allow connection from
  non P2P clients.
  
  The regulatory core will apply these relaxations only for drivers that
  support this feature by declaring the appropriate channel flags and
  capabilities in their registration flow.

CFG80211_REQUIRE_SIGNED_REGDB
  Require that in addition to the "regulatory.db" file a
  "regulatory.db.p7s" can be loaded with a valid PKCS#7
  signature for the regulatory.db file made by one of the
  keys in the certs/ directory.

CFG80211_USE_KERNEL_REGDB_KEYS
  Allow the regulatory database to be signed by one of the keys for
  which certificates are part of the kernel sources
  (in net/wireless/certs/).
  
  This is currently only Seth Forshee's key, who is the regulatory
  database maintainer.

CFG80211_WEXT
  Enable this option if you need old userspace for wireless
  extensions with cfg80211-based drivers.

CFG80211_WEXT_EXPORT
  Drivers should select this option if they require cfg80211's
  wext compatibility symbols to be exported.

CFS_BANDWIDTH
  This option allows users to define CPU bandwidth rates (limits) for
  tasks running within the fair group scheduler.  Groups with no limit
  set are considered to be unconstrained and will run with no
  restriction.
  See Documentation/scheduler/sched-bwc.rst for more information.

CGROUPS
  This option adds support for grouping sets of processes together, for
  use with process control subsystems such as Cpusets, CFS, memory
  controls or device isolation.
  See
        - Documentation/scheduler/sched-design-CFS.rst        (CFS)
        - Documentation/admin-guide/cgroup-v1/ (features for grouping, isolation
                                  and resource control)
  
  Say N if unsure.

CGROUP_BPF
  Allow attaching eBPF programs to a cgroup using the bpf(2)
  syscall command BPF_PROG_ATTACH.
  
  In which context these programs are accessed depends on the type
  of attachment. For instance, programs that are attached using
  BPF_CGROUP_INET_INGRESS will be executed on the ingress path of
  inet sockets.

CGROUP_CPUACCT
  Provides a simple controller for monitoring the
  total CPU consumed by the tasks in a cgroup.

CGROUP_DEBUG
  This option enables a simple controller that exports
  debugging information about the cgroups framework. This
  controller is for control cgroup debugging only. Its
  interfaces are not stable.
  
  Say N.

CGROUP_DEVICE
  Provides a cgroup controller implementing whitelists for
  devices which a process in the cgroup can mknod or open.

CGROUP_FREEZER
  Provides a way to freeze and unfreeze all tasks in a
  cgroup.
  
  This option affects the ORIGINAL cgroup interface. The cgroup2 memory
  controller includes important in-kernel memory consumers per default.
  
  If you're using cgroup2, say N.

CGROUP_HUGETLB
  Provides a cgroup controller for HugeTLB pages.
  When you enable this, you can put a per cgroup limit on HugeTLB usage.
  The limit is enforced during page fault. Since HugeTLB doesn't
  support page reclaim, enforcing the limit at page fault time implies
  that, the application will get SIGBUS signal if it tries to access
  HugeTLB pages beyond its limit. This requires the application to know
  beforehand how much HugeTLB pages it would require for its use. The
  control group is tracked in the third page lru pointer. This means
  that we cannot use the controller with huge page less than 3 pages.

CGROUP_NET_CLASSID
  Cgroup subsystem for use as general purpose socket classid marker that is
  being used in cls_cgroup and for netfilter matching.

CGROUP_NET_PRIO
  Cgroup subsystem for use in assigning processes to network priorities on
  a per-interface basis.

CGROUP_PERF
  This option extends the perf per-cpu mode to restrict monitoring
  to threads which belong to the cgroup specified and run on the
  designated cpu.  Or this can be used to have cgroup ID in samples
  so that it can monitor performance events among cgroups.
  
  Say N if unsure.

CGROUP_PIDS
  Provides enforcement of process number limits in the scope of a
  cgroup. Any attempt to fork more processes than is allowed in the
  cgroup will fail. PIDs are fundamentally a global resource because it
  is fairly trivial to reach PID exhaustion before you reach even a
  conservative kmemcg limit. As a result, it is possible to grind a
  system to halt without being limited by other cgroup policies. The
  PIDs controller is designed to stop this from happening.
  
  It should be noted that organisational operations (such as attaching
  to a cgroup hierarchy) will *not* be blocked by the PIDs controller,
  since the PIDs limit only affects a process's ability to fork, not to
  attach to a cgroup.

CGROUP_RDMA
  Provides enforcement of RDMA resources defined by IB stack.
  It is fairly easy for consumers to exhaust RDMA resources, which
  can result into resource unavailability to other consumers.
  RDMA controller is designed to stop this from happening.
  Attaching processes with active RDMA resources to the cgroup
  hierarchy is allowed even if can cross the hierarchy's limit.

CGROUP_SCHED
  This feature lets CPU scheduler recognize task groups and control CPU
  bandwidth allocation to such task groups. It uses cgroups to group
  tasks.

CGROUP_WRITEBACK
  No help

CHARGER_88PM860X
  Say Y here to enable charger for Marvell 88PM860x chip.

CHARGER_ADP5061
  Say Y here to enable support for the ADP5061 standalone battery
  charger.
  
  This driver can be built as a module. If so, the module will be
  called adp5061.

CHARGER_AXP20X
  Say Y here to enable support for X-Powers AXP20X and AXP22X PMICs' AC
  power supply.
  
  This driver can also be built as a module. If so, the module will be
  called axp20x_ac_power.

CHARGER_BD70528
  Say Y here to enable support for getting battery status
  information and altering charger configurations from charger
  block of the ROHM BD70528 Power Management IC.

CHARGER_BD99954
  Say Y here to enable support for getting battery and charger
  information and altering charger configurations from the ROHM
  BD99954 charger IC.

CHARGER_BQ2415X
  Say Y to enable support for the TI BQ2415x battery charger
  PMICs.
  
  You'll need this driver to charge batteries on e.g. Nokia
  RX-51/N900.

CHARGER_BQ24190
  Say Y to enable support for the TI BQ24190 battery charger.

CHARGER_BQ24257
  Say Y to enable support for the TI BQ24250, BQ24251, and BQ24257 battery
  chargers.

CHARGER_BQ24735
  Say Y to enable support for the TI BQ24735 battery charger.

CHARGER_BQ2515X
  Say Y to enable support for the TI BQ2515X family of battery
  charging integrated circuits. The BQ2515X are highly integrated
  battery charge management ICs that integrate the most common
  functions for wearable devices, namely a charger, an output voltage
  rail, ADC for battery and system monitoring, and push-button
  controller.

CHARGER_BQ25890
  Say Y to enable support for the TI BQ25890 battery charger.

CHARGER_BQ25980
  Say Y to enable support for the TI BQ25980, BQ25975 and BQ25960
  series of fast battery chargers.

CHARGER_CPCAP
  Say Y to enable support for CPCAP PMIC charger driver for Motorola
  mobile devices such as Droid 4.

CHARGER_CROS_USBPD
  Say Y here to enable ChromeOS EC based USBPD charger
  driver. This driver gets various bits of information about
  what is connected to USB PD ports from the EC and converts
  that into power_supply properties.

CHARGER_DA9150
  Say Y here to enable support for charger unit of the DA9150
  Integrated Charger & Fuel-Gauge IC.
  
  This driver can also be built as a module. If so, the module will be
  called da9150-charger.

CHARGER_DETECTOR_MAX14656
  Say Y to enable support for the Maxim MAX14656 USB charger detector.
  The device is compliant with the USB Battery Charging Specification
  Revision 1.2 and can be found e.g. in Kindle 4/5th generation
  readers and certain LG devices.

CHARGER_GPIO
  Say Y to include support for chargers which report their online status
  through a GPIO pin.
  
  This driver can be build as a module. If so, the module will be
  called gpio-charger.

CHARGER_ISP1704
  Say Y to enable support for USB Charger Detection with
  ISP1707/ISP1704 USB transceivers.

CHARGER_LP8727
  Say Y here to enable support for LP8727 Charger Driver.

CHARGER_LP8788
  Say Y to enable support for the LP8788 linear charger.

CHARGER_LT3651
  Say Y to include support for the Analog Devices (Linear Technology)
  LT3651 battery charger which reports its status via GPIO lines.

CHARGER_MANAGER
  Say Y to enable charger-manager support, which allows multiple
  chargers attached to a battery and multiple batteries attached to a
  system. The charger-manager also can monitor charging status in
  runtime and in suspend-to-RAM by waking up the system periodically
  with help of suspend_again support.

CHARGER_MAX14577
  Say Y to enable support for the battery charger control sysfs and
  platform data of MAX14577/77836 MUICs.

CHARGER_MAX77650
  Say Y to enable support for the battery charger control of MAX77650
  PMICs.

CHARGER_MAX77693
  Say Y to enable support for the Maxim MAX77693 battery charger.

CHARGER_MAX8903
  Say Y to enable support for the MAX8903 DC-DC charger and sysfs.
  The driver supports controlling charger-enable and current-limit
  pins based on the status of charger connections with interrupt
  handlers.

CHARGER_MAX8997
  Say Y to enable support for the battery charger control sysfs and
  platform data of MAX8997/LP3974 PMICs.

CHARGER_MAX8998
  Say Y to enable support for the battery charger control sysfs and
  platform data of MAX8998/LP3974 PMICs.

CHARGER_MP2629
  Select this option to enable support for Monolithic power system
  Battery charger. This driver provides Battery charger power management
  functions on the systems.

CHARGER_PCF50633
  Say Y to include support for NXP PCF50633 Main Battery Charger.

CHARGER_QCOM_SMBB
  Say Y to include support for the Switch-Mode Battery Charger and
  Boost (SMBB) hardware found in Qualcomm PM8941 PMICs.  The charger
  is an integrated, single-cell lithium-ion battery charger.  DT
  configuration is required for loading, see the devicetree
  documentation for more detail.  The base name for this driver is
  'pm8941_charger'.

CHARGER_RT9455
  Say Y to enable support for Richtek RT9455 battery charger.

CHARGER_SBS
  Say Y to include support for SBS compliant battery chargers.

CHARGER_SC2731
  Say Y here to enable support for battery charging with SC2731
  PMIC chips.

CHARGER_SMB347
  Say Y to include support for Summit Microelectronics SMB345,
  SMB347 or SMB358 Battery Charger.

CHARGER_TPS65090
  Say Y here to enable support for battery charging with TPS65090
  PMIC chips.

CHARGER_TPS65217
  Say Y here to enable support for battery charging with TPS65217
  PMIC chips.

CHARGER_TWL4030
  Say Y here to enable support for TWL4030 Battery Charge Interface.

CHARGER_UCS1002
  Say Y to enable support for Microchip UCS1002 Programmable
  USB Port Power Controller with Charger Emulation.

CHARGER_WILCO
  Say Y here to enable control of the charging routines performed
  by the Embedded Controller on the Chromebook named Wilco. Further
  information can be found in
  Documentation/ABI/testing/sysfs-class-power-wilco

CHARLCD
  This is the base system for character-based LCD displays.
  It makes no sense to have this alone, you select your display driver
  and if it needs the charlcd core, it will select it automatically.
  This is some character LCD core interface that multiple drivers can
  use.

CHARLCD_BL_FLASH
  Backlight is flashed briefly on init

CHARLCD_BL_OFF
  Backlight is initially turned off

CHARLCD_BL_ON
  Backlight is initially turned on

CHECKPOINT_RESTORE
  Enables additional kernel features in a sake of checkpoint/restore.
  In particular it adds auxiliary prctl codes to setup process text,
  data and heap segment sizes, and a few additional /proc filesystem
  entries.
  
  If unsure, say N here.

CHECK_SIGNATURE
  No help

CHELSIO_INLINE_CRYPTO
  Enable support for inline crypto.
  Allows enable/disable from list of inline crypto drivers.

CHELSIO_IPSEC_INLINE
  Support Chelsio Inline IPsec with Chelsio crypto accelerator.
  Enable inline IPsec support for Tx.
  
  To compile this driver as a module, choose M here: the module
  will be called ch_ipsec.

CHELSIO_LIB
  Common library for Chelsio drivers.

CHELSIO_T1
  This driver supports Chelsio gigabit and 10-gigabit
  Ethernet cards. More information about adapter features and
  performance tuning is in
  <file:Documentation/networking/device_drivers/ethernet/chelsio/cxgb.rst>.
  
  For general information about Chelsio and our products, visit
  our website at <http://www.chelsio.com>.
  
  For customer support, please visit our customer support page at
  <http://www.chelsio.com/support.html>.
  
  Please send feedback to <linux-bugs@chelsio.com>.
  
  To compile this driver as a module, choose M here: the module
  will be called cxgb.

CHELSIO_T1_1G
  Enables support for Chelsio's gigabit Ethernet PCI cards.  If you
  are using only 10G cards say 'N' here.

CHELSIO_T3
  This driver supports Chelsio T3-based gigabit and 10Gb Ethernet
  adapters.
  
  For general information about Chelsio and our products, visit
  our website at <http://www.chelsio.com>.
  
  For customer support, please visit our customer support page at
  <http://www.chelsio.com/support.html>.
  
  Please send feedback to <linux-bugs@chelsio.com>.
  
  To compile this driver as a module, choose M here: the module
  will be called cxgb3.

CHELSIO_T4
  This driver supports Chelsio T4, T5 & T6 based gigabit, 10Gb Ethernet
  adapter and T5/T6 based 40Gb and T6 based 25Gb, 50Gb and 100Gb
  Ethernet adapters.
  
  For general information about Chelsio and our products, visit
  our website at <http://www.chelsio.com>.
  
  For customer support, please visit our customer support page at
  <http://www.chelsio.com/support.html>.
  
  Please send feedback to <linux-bugs@chelsio.com>.
  
  To compile this driver as a module choose M here; the module
  will be called cxgb4.

CHELSIO_T4VF
  This driver supports Chelsio T4, T5 & T6 based gigabit, 10Gb Ethernet
  adapters and T5/T6 based 40Gb and T6 based 25Gb, 50Gb and 100Gb
  Ethernet adapters with PCI-E SR-IOV Virtual Functions.
  
  For general information about Chelsio and our products, visit
  our website at <http://www.chelsio.com>.
  
  For customer support, please visit our customer support page at
  <http://www.chelsio.com/support.html>.
  
  Please send feedback to <linux-bugs@chelsio.com>.
  
  To compile this driver as a module choose M here; the module
  will be called cxgb4vf.

CHELSIO_T4_DCB
  Enable DCB support through rtNetlink interface.
  Say Y here if you want to enable Data Center Bridging (DCB) support
  in the driver.
  
  If unsure, say N.

CHELSIO_T4_FCOE
  Enable FCoE offload features.
  Say Y here if you want to enable Fibre Channel over Ethernet (FCoE) support
  in the driver.
  
  If unsure, say N.

CHELSIO_TLS_DEVICE
  This flag enables support for kernel tls offload over Chelsio T6
  crypto accelerator. CONFIG_CHELSIO_TLS_DEVICE flag can be enabled
  only if CONFIG_TLS and CONFIG_TLS_DEVICE flags are enabled.
  
  To compile this driver as a module, choose M here: the module
  will be called ch_ktls.

CHROMEOS_LAPTOP
  This driver instantiates i2c and smbus devices such as
  light sensors and touchpads.
  
  If you have a supported Chromebook, choose Y or M here.
  The module will be called chromeos_laptop.

CHROMEOS_PSTORE
  This module instantiates the persistent storage on x86 ChromeOS
  devices. It can be used to store away console logs and crash
  information across reboots.
  
  The range of memory used is 0xf00000-0x1000000, traditionally
  the memory used to back VGA controller memory.
  
  If you have a supported Chromebook, choose Y or M here.
  The module will be called chromeos_pstore.

CHROMEOS_TBMC
  This option adds a driver for the tablet switch on
  select Chrome OS systems.
  
  To compile this driver as a module, choose M here: the
  module will be called chromeos_tbmc.

CHROME_PLATFORMS
  Say Y here to get to see options for platform support for
  various Chromebooks and Chromeboxes. This option alone does
  not add any kernel code.
  
  If you say N, all options in this submenu will be skipped and disabled.

CHR_DEV_SCH
  This is a driver for SCSI media changers.  Most common devices are
  tape libraries and MOD/CDROM jukeboxes.  *Real* jukeboxes, you
  don't need this for those tiny 6-slot cdrom changers.  Media
  changers are listed as "Type: Medium Changer" in /proc/scsi/scsi.
  If you have such hardware and want to use it with linux, say Y
  here.  Check <file:Documentation/scsi/scsi-changer.rst> for details.
  
  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read <file:Documentation/kbuild/modules.rst> and
  <file:Documentation/scsi/scsi.rst>. The module will be called ch.o.
  If unsure, say N.

CHR_DEV_SG
  If you want to use SCSI scanners, synthesizers or CD-writers or just
  about anything having "SCSI" in its name other than hard disks,
  CD-ROMs or tapes, say Y here. These won't be supported by the kernel
  directly, so you need some additional software which knows how to
  talk to these devices using the SCSI protocol:
  
  For scanners, look at SANE (<http://www.sane-project.org/>). For CD
  writer software look at Cdrtools
  (<http://cdrtools.sourceforge.net/>)
  and for burning a "disk at once": CDRDAO
  (<http://cdrdao.sourceforge.net/>). Cdparanoia is a high
  quality digital reader of audio CDs (<http://www.xiph.org/paranoia/>).
  For other devices, it's possible that you'll have to write the
  driver software yourself. Please read the file
  <file:Documentation/scsi/scsi-generic.rst> for more information.
  
  To compile this driver as a module, choose M here and read
  <file:Documentation/scsi/scsi.rst>. The module will be called sg.
  
  If unsure, say N.

CHR_DEV_ST
  If you want to use a SCSI tape drive under Linux, say Y and read the
  SCSI-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>, and
  <file:Documentation/scsi/st.rst> in the kernel source.  This is NOT
  for SCSI CD-ROMs.
  
  To compile this driver as a module, choose M here and read
  <file:Documentation/scsi/scsi.rst>. The module will be called st.

CHTCRC_PMIC_OPREGION
  This config adds ACPI operation region support for the Cherry Trail
  version of the Crystal Cove PMIC.

CHT_DC_TI_PMIC_OPREGION
  This config adds ACPI operation region support for Dollar Cove TI PMIC.

CHT_WC_PMIC_OPREGION
  This config adds ACPI operation region support for CHT Whiskey Cove PMIC.

CICADA_PHY
  Currently supports the cis8204

CIFS
  This is the client VFS module for the SMB3 family of NAS protocols,
  (including support for the most recent, most secure dialect SMB3.1.1)
  as well as for earlier dialects such as SMB2.1, SMB2 and the older
  Common Internet File System (CIFS) protocol.  CIFS was the successor
  to the original dialect, the Server Message Block (SMB) protocol, the
  native file sharing mechanism for most early PC operating systems.
  
  The SMB3 protocol is supported by most modern operating systems
  and NAS appliances (e.g. Samba, Windows 10, Windows Server 2016,
  MacOS) and even in the cloud (e.g. Microsoft Azure).
  The older CIFS protocol was included in Windows NT4, 2000 and XP (and
  later) as well by Samba (which provides excellent CIFS and SMB3
  server support for Linux and many other operating systems). Use of
  dialects older than SMB2.1 is often discouraged on public networks.
  This module also provides limited support for OS/2 and Windows ME
  and similar very old servers.
  
  This module provides an advanced network file system client
  for mounting to SMB3 (and CIFS) compliant servers.  It includes
  support for DFS (hierarchical name space), secure per-user
  session establishment via Kerberos or NTLM or NTLMv2, RDMA
  (smbdirect), advanced security features, per-share encryption,
  directory leases, safe distributed caching (oplock), optional packet
  signing, Unicode and other internationalization improvements.
  
  In general, the default dialects, SMB3 and later, enable better
  performance, security and features, than would be possible with CIFS.
  Note that when mounting to Samba, due to the CIFS POSIX extensions,
  CIFS mounts can provide slightly better POSIX compatibility
  than SMB3 mounts. SMB2/SMB3 mount options are also
  slightly simpler (compared to CIFS) due to protocol improvements.
  
  If you need to mount to Samba, Azure, Macs or Windows from this machine, say Y.

CIFS_ALLOW_INSECURE_LEGACY
  Modern dialects, SMB2.1 and later (including SMB3 and 3.1.1), have
  additional security features, including protection against
  man-in-the-middle attacks and stronger crypto hashes, so the use
  of legacy dialects (SMB1/CIFS and SMB2.0) is discouraged.
  
  Disabling this option prevents users from using vers=1.0 or vers=2.0
  on mounts with cifs.ko
  
  If unsure, say Y.

CIFS_DEBUG
  Enabling this option adds helpful debugging messages to
  the cifs code which increases the size of the cifs module.
  If unsure, say Y.

CIFS_DEBUG2
  Enabling this option adds a few more debugging routines
  to the cifs code which slightly increases the size of
  the cifs module and can cause additional logging of debug
  messages in some error paths, slowing performance. This
  option can be turned off unless you are debugging
  cifs problems.  If unsure, say N.

CIFS_DEBUG_DUMP_KEYS
  Enabling this will dump the encryption and decryption keys
  used to communicate on an encrypted share connection on the
  console. This allows Wireshark to decrypt and dissect
  encrypted network captures. Enable this carefully.
  If unsure, say N.

CIFS_DFS_UPCALL
  Distributed File System (DFS) support is used to access shares
  transparently in an enterprise name space, even if the share
  moves to a different server.  This feature also enables
  an upcall mechanism for CIFS which contacts userspace helper
  utilities to provide server name resolution (host names to
  IP addresses) which is needed in order to reconnect to
  servers if their addresses change or for implicit mounts of
  DFS junction points. If unsure, say Y.

CIFS_FSCACHE
  Makes CIFS FS-Cache capable. Say Y here if you want your CIFS data
  to be cached locally on disk through the general filesystem cache
  manager. If unsure, say N.

CIFS_NFSD_EXPORT
  Allows NFS server to export a CIFS mounted share (nfsd over cifs)

CIFS_POSIX
  Enabling this option will cause the cifs client to attempt to
  negotiate a newer dialect with servers, such as Samba 3.0.5
  or later, that optionally can handle more POSIX like (rather
  than Windows like) file behavior.  It also enables
  support for POSIX ACLs (getfacl and setfacl) to servers
  (such as Samba 3.10 and later) which can negotiate
  CIFS POSIX ACL support.  If unsure, say N.

CIFS_ROOT
  Enables root file system support over SMB protocol.
  
  Most people say N here.

CIFS_SMB_DIRECT
  Enables SMB Direct support for SMB 3.0, 3.02 and 3.1.1.
  SMB Direct allows transferring SMB packets over RDMA. If unsure,
  say Y.

CIFS_STATS2
  Enabling this option will allow more detailed statistics on SMB
  request timing to be displayed in /proc/fs/cifs/DebugData and also
  allow optional logging of slow responses to dmesg (depending on the
  value of /proc/fs/cifs/cifsFYI). See Documentation/admin-guide/cifs/usage.rst
  for more details. These additional statistics may have a minor effect
  on performance and memory utilization.
  
  Unless you are a developer or are doing network performance analysis
  or tuning, say N.

CIFS_SWN_UPCALL
  The Service Witness Protocol (SWN) is used to get notifications
  from a highly available server of resource state changes. This
  feature enables an upcall mechanism for CIFS which contacts a
  userspace daemon to establish the DCE/RPC connection to retrieve
  the cluster available interfaces and resource change notifications.
  If unsure, say Y.

CIFS_UPCALL
  Enables an upcall mechanism for CIFS which accesses userspace helper
  utilities to provide SPNEGO packaged (RFC 4178) Kerberos tickets
  which are needed to mount to certain secure servers (for which more
  secure Kerberos authentication is required). If unsure, say Y.

CIFS_WEAK_PW_HASH
  Modern CIFS servers including Samba and most Windows versions
  (since 1997) support stronger NTLM (and even NTLMv2 and Kerberos)
  security mechanisms. These hash the password more securely
  than the mechanisms used in the older LANMAN version of the
  SMB protocol but LANMAN based authentication is needed to
  establish sessions with some old SMB servers.
  
  Enabling this option allows the cifs module to mount to older
  LANMAN based servers such as OS/2 and Windows 95, but such
  mounts may be less secure than mounts using NTLM or more recent
  security mechanisms if you are on a public network.  Unless you
  have a need to access old SMB servers (and are on a private
  network) you probably want to say N.  Even if this support
  is enabled in the kernel build, LANMAN authentication will not be
  used automatically. At runtime LANMAN mounts are disabled but
  can be set to required (or optional) either in
  /proc/fs/cifs (see Documentation/admin-guide/cifs/usage.rst for
  more detail) or via an option on the mount command. This support
  is disabled by default in order to reduce the possibility of a
  downgrade attack.
  
  If unsure, say N.

CIFS_XATTR
  Extended attributes are name:value pairs associated with inodes by
  the kernel or by users (see the attr(5) manual page for details).
  CIFS maps the name of extended attributes beginning with the user
  namespace prefix to SMB/CIFS EAs.  EAs are stored on Windows
  servers without the user namespace prefix, but their names are
  seen by Linux cifs clients prefaced by the user namespace prefix.
  The system namespace (used by some filesystems to store ACLs) is
  not supported at this time.
  
  If unsure, say Y.

CIO_DAC
  Say yes here to build support for the Measurement Computing CIO-DAC
  analog output device family (CIO-DAC16, CIO-DAC08, PC104-DAC06). The
  base port addresses for the devices may be configured via the base
  array module parameter.

CLANG_VERSION
  No help

CLEANCACHE
  Cleancache can be thought of as a page-granularity victim cache
  for clean pages that the kernel's pageframe replacement algorithm
  (PFRA) would like to keep around, but can't since there isn't enough
  memory.  So when the PFRA "evicts" a page, it first attempts to use
  cleancache code to put the data contained in that page into
  "transcendent memory", memory that is not directly accessible or
  addressable by the kernel and is of unknown and possibly
  time-varying size.  And when a cleancache-enabled
  filesystem wishes to access a page in a file on disk, it first
  checks cleancache to see if it already contains it; if it does,
  the page is copied into the kernel and a disk access is avoided.
  When a transcendent memory driver is available (such as zcache or
  Xen transcendent memory), a significant I/O reduction
  may be achieved.  When none is available, all cleancache calls
  are reduced to a single pointer-compare-against-NULL resulting
  in a negligible performance hit.
  
  If unsure, say Y to enable cleancache

CLINT_TIMER
  This option enables the CLINT timer for RISC-V systems.  The CLINT
  driver is usually used for NoMMU RISC-V systems.

CLKBLD_I8253
  No help

CLKDEV_LOOKUP
  No help

CLKEVT_I8253
  No help

CLKSRC_ARM_GLOBAL_TIMER_SCHED_CLOCK
  Use ARM global timer clock source as sched_clock.

CLKSRC_DBX500_PRCMU
  Use the always on PRCMU Timer as clocksource.

CLKSRC_EFM32
  Support to use the timers of EFM32 SoCs as clock source and clock
  event device.

CLKSRC_EXYNOS_MCT
  Support for Multi Core Timer controller on Exynos SoCs.

CLKSRC_I8253
  No help

CLKSRC_IMX_GPT
  No help

CLKSRC_IMX_TPM
  Enable this option to use IMX Timer/PWM Module (TPM) timer as
  clocksource.

CLKSRC_JCORE_PIT
  This enables build of clocksource and clockevent driver for
  the integrated PIT in the J-Core synthesizable, open source SoC.

CLKSRC_LPC32XX
  Support for the LPC32XX clocksource.

CLKSRC_MIPS_GIC
  No help

CLKSRC_MMIO
  No help

CLKSRC_MPS2
  No help

CLKSRC_NOMADIK_MTU
  Support for Multi Timer Unit. MTU provides access
  to multiple interrupt generating programmable
  32-bit free running decrementing counters.

CLKSRC_PISTACHIO
  Enables the clocksource for the Pistachio SoC.

CLKSRC_PXA
  This enables OST0 support available on PXA and SA-11x0
  platforms.

CLKSRC_QCOM
  This enables the clocksource and the per CPU clockevent driver for the
  Qualcomm SoCs.

CLKSRC_SAMSUNG_PWM
  This is a new clocksource driver for the PWM timer found in
  Samsung S3C, S5P and Exynos SoCs, replacing an earlier driver
  for all devicetree enabled platforms. This driver will be
  needed only on systems that do not have the Exynos MCT available.

CLKSRC_STM32
  No help

CLKSRC_STM32_LP
  No help

CLKSRC_ST_LPC
  Enable this option to use the Low Power controller timer
  as clocksource.

CLKSRC_TANGO_XTAL
  This enables the clocksource for Tango SoC.

CLKSRC_TI_32K
  This option enables support for Texas Instruments 32.768 Hz clocksource
  available on many OMAP-like platforms.

CLKSRC_VERSATILE
  This option enables clock source based on free running
  counter available in the "System Registers" block of
  ARM Versatile and Versatile Express reference platforms.

CLK_ACTIONS
  No help

CLK_ANALOGBITS_WRPLL_CLN28HPC
  No help

CLK_BAIKAL_T1
  Clocks Control Unit is the core of Baikal-T1 SoC System Controller
  responsible for the chip subsystems clocking and resetting. It
  consists of multiple global clock domains, which can be reset by
  means of the CCU control registers. These domains and devices placed
  in them are fed with clocks generated by a hierarchy of PLLs,
  configurable and fixed clock dividers. Enable this option to be able
  to select Baikal-T1 CCU PLLs and Dividers drivers.

CLK_BCM2711_DVP
  Enable common clock framework support for the Broadcom BCM2711
  DVP Controller.

CLK_BCM2835
  Enable common clock framework support for Broadcom BCM2835
  SoCs.

CLK_BCM_63XX
  Enable common clock framework support for Broadcom BCM63xx DSL SoCs
  based on the ARM architecture

CLK_BCM_63XX_GATE
  Enable common clock framework support for Broadcom BCM63xx DSL SoCs
  based on the MIPS architecture

CLK_BCM_CYGNUS
  Enable common clock framework support for the Broadcom Cygnus SoC

CLK_BCM_HR2
  Enable common clock framework support for the Broadcom Hurricane 2
  SoC

CLK_BCM_KONA
  Enable common clock framework support for Broadcom SoCs
  using "Kona" style clock control units, including those
  in the BCM281xx and BCM21664 families.

CLK_BCM_NS2
  Enable common clock framework support for the Broadcom Northstar 2 SoC

CLK_BCM_NSP
  Enable common clock framework support for the Broadcom Northstar and
  Northstar Plus SoCs

CLK_BCM_SR
  Enable common clock framework support for the Broadcom Stingray SoC

CLK_BT1_CCU_DIV
  Enable this to support the CCU dividers used to distribute clocks
  between AXI-bus and system devices coming from CCU PLLs of Baikal-T1
  SoC. CCU dividers can be either configurable or with fixed divider,
  either gateable or ungateable. Some of the CCU dividers can be as well
  used to reset the domains they're supplying clock to.

CLK_BT1_CCU_PLL
  Enable this to support the PLLs embedded into the Baikal-T1 SoC
  System Controller. These are five PLLs placed at the root of the
  clocks hierarchy, right after an external reference oscillator
  (normally of 25MHz). They are used to generate high frequency
  signals, which are either directly wired to the consumers (like
  CPUs, DDR, etc.) or passed over the clock dividers to be only
  then used as an individual reference clock of a target device.

CLK_EMEV2
  No help

CLK_GFM_LPASS_SM8250
  Support for the Glitch Free Mux (GFM) Low power audio
  subsystem (LPASS) clocks found on SM8250 SoCs.

CLK_HSDK
  This driver supports the HSDK core, system, ddr, tunnel and hdmi PLLs
  control.

CLK_IMX1
  No help

CLK_IMX25
  No help

CLK_IMX27
  No help

CLK_IMX31
  No help

CLK_IMX35
  No help

CLK_IMX5
  No help

CLK_IMX6Q
  No help

CLK_IMX6SL
  No help

CLK_IMX6SLL
  No help

CLK_IMX6SX
  No help

CLK_IMX6UL
  No help

CLK_IMX7D
  No help

CLK_IMX7ULP
  No help

CLK_IMX8MM
  Build the driver for i.MX8MM CCM Clock Driver

CLK_IMX8MN
  Build the driver for i.MX8MN CCM Clock Driver

CLK_IMX8MP
  Build the driver for i.MX8MP CCM Clock Driver

CLK_IMX8MQ
  Build the driver for i.MX8MQ CCM Clock Driver

CLK_IMX8QXP
  Build the driver for IMX8QXP SCU based clocks.

CLK_LGM_CGU
  Clock Generation Unit(CGU) driver for Intel Lightning Mountain(LGM)
  network processor SoC.

CLK_LS1028A_PLLDIG
  This driver support the Display output interfaces(LCD, DPHY) pixel clocks
  of the QorIQ Layerscape LS1028A, as implemented TSMC CLN28HPM PLL. Not all
  features of the PLL are currently supported by the driver. By default,
  configured bypass mode with this PLL.

CLK_OWL_S500
  No help

CLK_OWL_S700
  No help

CLK_OWL_S900
  No help

CLK_PX30
  Build the driver for PX30 Clock Driver.

CLK_QORIQ
  This adds the clock driver support for Freescale QorIQ platforms
  using common clock framework.

CLK_R7S9210
  No help

CLK_R8A73A4
  No help

CLK_R8A7740
  No help

CLK_R8A7742
  No help

CLK_R8A7743
  No help

CLK_R8A7745
  No help

CLK_R8A77470
  No help

CLK_R8A774A1
  No help

CLK_R8A774B1
  No help

CLK_R8A774C0
  No help

CLK_R8A774E1
  No help

CLK_R8A7778
  No help

CLK_R8A7779
  No help

CLK_R8A7790
  No help

CLK_R8A7791
  No help

CLK_R8A7792
  No help

CLK_R8A7794
  No help

CLK_R8A7795
  No help

CLK_R8A77960
  No help

CLK_R8A77961
  No help

CLK_R8A77965
  No help

CLK_R8A77970
  No help

CLK_R8A77980
  No help

CLK_R8A77990
  No help

CLK_R8A77995
  No help

CLK_R8A779A0
  No help

CLK_R9A06G032
  This is a driver for R9A06G032 clocks

CLK_RASPBERRYPI
  Enable common clock framework support for Raspberry Pi's firmware
  dependent clocks

CLK_RCAR_GEN2_CPG
  No help

CLK_RCAR_GEN3_CPG
  No help

CLK_RCAR_USB2_CLOCK_SEL
  This is a driver for R-Car USB2 clock selector

CLK_RENESAS
  No help

CLK_RENESAS_CPG_MSSR
  No help

CLK_RENESAS_CPG_MSTP
  No help

CLK_RENESAS_DIV6
  No help

CLK_RK3036
  Build the driver for RK3036 Clock Driver.

CLK_RK312X
  Build the driver for RK312x Clock Driver.

CLK_RK3188
  Build the driver for RK3188 Clock Driver.

CLK_RK322X
  Build the driver for RK322x Clock Driver.

CLK_RK3288
  Build the driver for RK3288 Clock Driver.

CLK_RK3308
  Build the driver for RK3308 Clock Driver.

CLK_RK3328
  Build the driver for RK3328 Clock Driver.

CLK_RK3368
  Build the driver for RK3368 Clock Driver.

CLK_RK3399
  Build the driver for RK3399 Clock Driver.

CLK_RV110X
  Build the driver for RV110x Clock Driver.

CLK_RZA1
  No help

CLK_SH73A0
  No help

CLK_SIFIVE
  SoC drivers for SiFive Linux-capable SoCs.

CLK_SIFIVE_PRCI
  Supports the Power Reset Clock interface (PRCI) IP block found in
  FU540/FU740 SoCs. If this kernel is meant to run on a SiFive FU540/
  FU740 SoCs, enable this driver.

CLK_SP810
  Supports clock muxing (REFCLK/TIMCLK to TIMERCLKEN0-3) capabilities
  of the ARM SP810 System Controller cell.

CLK_SUNXI
  No help

CLK_SUNXI_CLOCKS
  Legacy clock drivers being used on older (A10, A13, A20,
  A23, A31, A80) SoCs. These drivers are kept around for
  Device Tree backward compatibility issues, in case one would
  still use a Device Tree with one clock provider by
  node. Newer Device Trees and newer SoCs use the drivers
  controlled by CONFIG_SUNXI_CCU.

CLK_SUNXI_PRCM_SUN6I
  Legacy clock driver for the A31 PRCM clocks. Those are
  usually needed for the PMIC communication, mostly.

CLK_SUNXI_PRCM_SUN8I
  Legacy clock driver for the sun8i family PRCM clocks.
  Those are usually needed for the PMIC communication,
  mostly.

CLK_SUNXI_PRCM_SUN9I
  Legacy clock driver for the A80 PRCM clocks. Those are
  usually needed for the PMIC communication, mostly.

CLK_TEGRA_BPMP
  No help

CLK_TWL6040
  Enable the external functional clock support on OMAP4+ platforms for
  McPDM. McPDM module is using the external bit clock on the McPDM bus
  as functional clock.

CLK_UNIPHIER
  Support for clock controllers on UniPhier SoCs.
  Say Y if you want to control clocks provided by System Control
  block, Media I/O block, Peripheral Block.

CLK_VEXPRESS_OSC
  Simple regmap-based driver driving clock generators on Versatile
  Express platforms hidden behind its configuration infrastructure,
  commonly known as OSCs.

CLK_VF610
  No help

CLOCKSOURCE_VALIDATE_LAST_CYCLE
  No help

CLOCKSOURCE_WATCHDOG
  No help

CLONE_BACKWARDS
  Architecture has tls passed as the 4th argument of clone(2),
  not the 5th one.

CLONE_BACKWARDS2
  Architecture has the first two arguments of clone(2) swapped.

CLONE_BACKWARDS3
  Architecture has tls passed as the 3rd argument of clone(2),
  not the 5th one.

CLPS711X_IRQCHIP
  No help

CLPS711X_TIMER
  Enables support for the Cirrus Logic PS711 timer.

CLS_U32_MARK
  Say Y here to be able to use netfilter marks as u32 key.

CLS_U32_PERF
  Say Y here to make u32 gather additional statistics useful for
  fine tuning u32 classifiers.

CLZ_TAB
  No help

CM32181
  Say Y here if you use cm32181.
  This option enables ambient light sensor using
  Capella cm32181 device driver.
  
  To compile this driver as a module, choose M here:
  the module will be called cm32181.

CM3232
  Say Y here if you use cm3232.
  This option enables ambient light sensor using
  Capella Microsystems cm3232 device driver.
  
  To compile this driver as a module, choose M here:
  the module will be called cm3232.

CM3323
  Say Y here if you want to build a driver for Capella CM3323
  color sensor.
  
  To compile this driver as a module, choose M here: the module will
  be called cm3323.

CM3605
  Say Y here if you want to build a driver for Capella CM3605
  ambient light and short range proximity sensor.
  
  To compile this driver as a module, choose M here: the module will
  be called cm3605.

CM36651
  Say Y here if you use cm36651.
  This option enables proximity & RGB sensor using
  Capella cm36651 device driver.
  
  To compile this driver as a module, choose M here:
  the module will be called cm36651.

CMA
  This enables the Contiguous Memory Allocator which allows other
  subsystems to allocate big physically-contiguous blocks of memory.
  CMA reserves a region of memory and allows only movable pages to
  be allocated from it. This way, the kernel can use the memory for
  pagecache and when a subsystem requests for contiguous area, the
  allocated pages are migrated away to serve the contiguous request.
  
  If unsure, say "n".

CMA_ALIGNMENT
  DMA mapping framework by default aligns all buffers to the smallest
  PAGE_SIZE order which is greater than or equal to the requested buffer
  size. This works well for buffers up to a few hundreds kilobytes, but
  for larger buffers it just a memory waste. With this parameter you can
  specify the maximum PAGE_SIZE order for contiguous buffers. Larger
  buffers will be aligned only to this specified order. The order is
  expressed as a power of two multiplied by the PAGE_SIZE.
  
  For example, if your system defaults to 4KiB pages, the order value
  of 8 means that the buffers will be aligned up to 1MiB only.
  
  If unsure, leave the default value "8".

CMA_AREAS
  CMA allows to create CMA areas for particular purpose, mainly,
  used as device private area. This parameter sets the maximum
  number of CMA area in the system.
  
  If unsure, leave the default value "7" in UMA and "19" in NUMA.

CMA_DEBUG
  Turns on debug messages in CMA.  This produces KERN_DEBUG
  messages for every CMA call as well as various messages while
  processing calls such as dma_alloc_from_contiguous().
  This option does not affect warning and error messages.

CMA_DEBUGFS
  Turns on the DebugFS interface for CMA.

CMA_SIZE_MBYTES
  Defines the size (in MiB) of the default memory area for Contiguous
  Memory Allocator.  If the size of 0 is selected, CMA is disabled by
  default, but it can be enabled by passing cma=size[MG] to the kernel.

CMA_SIZE_PERCENTAGE
  Defines the size of the default memory area for Contiguous Memory
  Allocator as a percentage of the total memory in the system.
  If 0 percent is selected, CMA is disabled by default, but it can be
  enabled by passing cma=size[MG] to the kernel.

CMA_SIZE_SEL_MAX
  No help

CMA_SIZE_SEL_MBYTES
  No help

CMA_SIZE_SEL_MIN
  No help

CMA_SIZE_SEL_PERCENTAGE
  No help

CMDLINE
  Enter arguments here that should be compiled into the kernel
  image and used at boot time.  If the boot loader provides a
  command line at boot time, it is appended to this string to
  form the full kernel command line, when the system boots.
  
  However, you can use the CONFIG_CMDLINE_OVERRIDE option to
  change this behavior.
  
  In most cases, the command line (whether built-in or provided
  by the boot loader) should specify the device for the root
  file system.

CMDLINE_BOOL
  Allow for specifying boot arguments to the kernel at
  build time.  On some systems (e.g. embedded ones), it is
  necessary or convenient to provide some or all of the
  kernel boot arguments with the kernel itself (that is,
  to not rely on the boot loader to provide them.)
  
  To compile command line arguments into the kernel,
  set this option to 'Y', then fill in the
  boot arguments in CONFIG_CMDLINE.
  
  Systems with fully functional boot loaders (i.e. non-embedded)
  should leave this option set to 'N'.

CMDLINE_KUNIT_TEST
  This builds the cmdline API unit test.
  Tests the logic of API provided by cmdline.c.
  For more information on KUnit and unit tests in general please refer
  to the KUnit documentation in Documentation/dev-tools/kunit/.
  
  If unsure, say N.

CMDLINE_OVERRIDE
  Set this option to 'Y' to have the kernel ignore the boot loader
  command line, and use ONLY the built-in command line.
  
  This is used to work around broken boot loaders.  This should
  be set to 'N' under normal conditions.

CMDLINE_PARTITION
  Say Y here if you want to read the partition table from bootargs.
  The format for the command line is just like mtdparts.

CMT_SPEECH
  If you say Y here, you will enable the CMT speech protocol used
  by Nokia modems. If you say M the protocol will be available as
  module named cmt_speech.
  
  If unsure, say N.

CNIC
  This driver supports offload features of QLogic bnx2 gigabit
  Ethernet cards.
  
  To compile this driver as a module, choose M here: the module
  will be called cnic.  This is recommended.

CODA_FS
  Coda is an advanced network file system, similar to NFS in that it
  enables you to mount file systems of a remote server and access them
  with regular Unix commands as if they were sitting on your hard
  disk.  Coda has several advantages over NFS: support for
  disconnected operation (e.g. for laptops), read/write server
  replication, security model for authentication and encryption,
  persistent client caches and write back caching.
  
  If you say Y here, your Linux box will be able to act as a Coda
  *client*.  You will need user level code as well, both for the
  client and server.  Servers are currently user level, i.e. they need
  no kernel support.  Please read
  <file:Documentation/filesystems/coda.rst> and check out the Coda
  home page <http://www.coda.cs.cmu.edu/>.
  
  To compile the coda client support as a module, choose M here: the
  module will be called coda.

COH901318
  Enable support for ST-Ericsson COH 901 318 DMA.

COH901327_WATCHDOG
  Say Y here to include Watchdog timer support for the
  watchdog embedded into the ST-Ericsson U300 series platforms.
  This watchdog is used to reset the system and thus cannot be
  compiled as a module.

COMEDI
  Enable support for a wide range of data acquisition devices
  for Linux.

COMEDI_8254
  No help

COMEDI_8255
  No help

COMEDI_8255_PCI
  Enable support for PCI based 8255 digital i/o boards. This driver
  provides a PCI wrapper around the generic 8255 driver.
  
  Supported boards:
    ADlink - PCI-7224, PCI-7248, and PCI-7296
    Measurement Computing - PCI-DIO24, PCI-DIO24H, PCI-DIO48H and
                            PCI-DIO96H
    National Instruments - PCI-DIO-96, PCI-DIO-96B, PXI-6508, PCI-6503,
                           PCI-6503B, PCI-6503X, and PXI-6503
  
  To compile this driver as a module, choose M here: the module will
  be called 8255_pci.

COMEDI_8255_SA
  Enable support for 8255 digital I/O as a standalone driver.
  
  You should enable compilation this driver if you plan to use a board
  that has an 8255 chip at a known I/O base address and there are no
  other Comedi drivers for the board.
  
  Note that Comedi drivers for most multi-function boards incorporating
  an 8255 chip use the 'comedi_8255' module.  Most PCI-based 8255
  boards use the 8255_pci driver as a wrapper around the 'comedi_8255'
  module.
  
  To compile this driver as a module, choose M here: the module will be
  called 8255.

COMEDI_ADDI_APCI_1032
  Enable support for ADDI-DATA APCI_1032 cards
  
  To compile this driver as a module, choose M here: the module will be
  called addi_apci_1032.

COMEDI_ADDI_APCI_1500
  Enable support for ADDI-DATA APCI_1500 cards
  
  To compile this driver as a module, choose M here: the module will be
  called addi_apci_1500.

COMEDI_ADDI_APCI_1516
  Enable support for ADDI-DATA APCI-1016, APCI-1516 and APCI-2016 boards.
  These are 16 channel, optically isolated, digital I/O boards. The 1516
  and 2016 boards also have a watchdog for resetting the outputs to "0".
  
  To compile this driver as a module, choose M here: the module will be
  called addi_apci_1516.

COMEDI_ADDI_APCI_1564
  Enable support for ADDI-DATA APCI_1564 cards
  
  To compile this driver as a module, choose M here: the module will be
  called addi_apci_1564.

COMEDI_ADDI_APCI_16XX
  Enable support for ADDI-DATA APCI_16xx cards
  
  To compile this driver as a module, choose M here: the module will be
  called addi_apci_16xx.

COMEDI_ADDI_APCI_2032
  Enable support for ADDI-DATA APCI_2032 cards
  
  To compile this driver as a module, choose M here: the module will be
  called addi_apci_2032.

COMEDI_ADDI_APCI_2200
  Enable support for ADDI-DATA APCI_2200 cards
  
  To compile this driver as a module, choose M here: the module will be
  called addi_apci_2200.

COMEDI_ADDI_APCI_3120
  Enable support for ADDI-DATA APCI_3120/3001 cards
  
  To compile this driver as a module, choose M here: the module will be
  called addi_apci_3120.

COMEDI_ADDI_APCI_3501
  Enable support for ADDI-DATA APCI_3501 cards
  
  To compile this driver as a module, choose M here: the module will be
  called addi_apci_3501.

COMEDI_ADDI_APCI_3XXX
  Enable support for ADDI-DATA APCI_3xxx cards
  
  To compile this driver as a module, choose M here: the module will be
  called addi_apci_3xxx.

COMEDI_ADDI_WATCHDOG
  Provides support for the watchdog subdevice found on many ADDI-DATA
  boards. This module will be automatically selected when needed. The
  module will be called addi_watchdog.

COMEDI_ADL_PCI6208
  Enable support for ADLink PCI-6208A cards
  
  To compile this driver as a module, choose M here: the module will be
  called adl_pci6208.

COMEDI_ADL_PCI7X3X
  Enable support for ADlink PCI-723X/743X isolated digital i/o boards.
  Supported boards include the 32-channel PCI-7230 (16 in/16 out),
  PCI-7233 (32 in), and PCI-7234 (32 out) as well as the 64-channel
  PCI-7432 (32 in/32 out), PCI-7433 (64 in), and PCI-7434 (64 out).
  
  To compile this driver as a module, choose M here: the module will be
  called adl_pci7x3x.

COMEDI_ADL_PCI8164
  Enable support for ADlink PCI-8164 4 Axes Motion Control board
  
  To compile this driver as a module, choose M here: the module will be
  called adl_pci8164.

COMEDI_ADL_PCI9111
  Enable support for ADlink PCI9111 cards
  
  To compile this driver as a module, choose M here: the module will be
  called adl_pci9111.

COMEDI_ADL_PCI9118
  Enable support for ADlink PCI-9118DG, PCI-9118HG, PCI-9118HR cards
  
  To compile this driver as a module, choose M here: the module will be
  called adl_pci9118.

COMEDI_ADQ12B
  Enable MicroAxial ADQ12-B daq and control card support.
  
  To compile this driver as a module, choose M here: the module will be
  called adq12b.

COMEDI_ADV_PCI1710
  Enable support for Advantech PCI-1710, PCI-1710HG, PCI-1711,
  PCI-1713 and PCI-1731
  
  To compile this driver as a module, choose M here: the module will be
  called adv_pci1710.

COMEDI_ADV_PCI1720
  Enable support for Advantech PCI-1720 Analog Output board.
  
  To compile this driver as a module, choose M here: the module will be
  called adv_pci1720.

COMEDI_ADV_PCI1723
  Enable support for Advantech PCI-1723 cards
  
  To compile this driver as a module, choose M here: the module will be
  called adv_pci1723.

COMEDI_ADV_PCI1724
  Enable support for Advantech PCI-1724U cards.  These are 32-channel
  analog output cards with voltage and current loop output ranges and
  14-bit resolution.
  
  To compile this driver as a module, choose M here: the module will be
  called adv_pci1724.

COMEDI_ADV_PCI1760
  Enable support for Advantech PCI-1760 board.
  
  To compile this driver as a module, choose M here: the module will be
  called adv_pci1760.

COMEDI_ADV_PCI_DIO
  Enable support for Advantech PCI DIO cards
  PCI-1730, PCI-1733, PCI-1734, PCI-1735U, PCI-1736UP, PCI-1739U,
  PCI-1750, PCI-1751, PCI-1752, PCI-1753/E, PCI-1754, PCI-1756,
  PCI-1761 and PCI-1762
  
  To compile this driver as a module, choose M here: the module will be
  called adv_pci_dio.

COMEDI_AIO_AIO12_8
  Enable support for I/O Products PC/104 AIO12-8 Analog I/O Board
  
  To compile this driver as a module, choose M here: the module will be
  called aio_aio12_8.

COMEDI_AIO_IIRO_16
  Enable support for I/O Products PC/104 IIRO16 Relay And Isolated
  Input Board
  
  To compile this driver as a module, choose M here: the module will be
  called aio_iiro_16.

COMEDI_AMPLC_DIO200
  No help

COMEDI_AMPLC_DIO200_ISA
  Enable support for Amplicon PC212E, PC214E, PC215E, PC218E and
  PC272E ISA DIO boards
  
  To compile this driver as a module, choose M here: the module will be
  called amplc_dio200.

COMEDI_AMPLC_DIO200_PCI
  Enable support for Amplicon PCI215, PCI272, PCIe215, PCIe236
  and PCIe296 DIO boards.
  
  To compile this driver as a module, choose M here: the module will be
  called amplc_dio200_pci.

COMEDI_AMPLC_PC236
  No help

COMEDI_AMPLC_PC236_ISA
  Enable support for Amplicon PC36AT ISA DIO board.
  
  To compile this driver as a module, choose M here: the module will be
  called amplc_pc236.

COMEDI_AMPLC_PC236_PCI
  Enable support for Amplicon PCI236 DIO board.
  
  To compile this driver as a module, choose M here: the module will be
  called amplc_pci236.

COMEDI_AMPLC_PC263_ISA
  Enable support for Amplicon PC263 ISA relay board.  This board has
  16 reed relay output channels.
  
  To compile this driver as a module, choose M here: the module will be
  called amplc_pc263.

COMEDI_AMPLC_PC263_PCI
  Enable support for Amplicon PCI263 relay board.  This is a PCI board
  with 16 reed relay output channels.
  
  To compile this driver as a module, choose M here: the module will be
  called amplc_pci263.

COMEDI_AMPLC_PCI224
  Enable support for Amplicon PCI224 and PCI234 AO boards
  
  To compile this driver as a module, choose M here: the module will be
  called amplc_pci224.

COMEDI_AMPLC_PCI230
  Enable support for Amplicon PCI230 and PCI260 Multifunction I/O
  boards
  
  To compile this driver as a module, choose M here: the module will be
  called amplc_pci230.

COMEDI_BOND
  Enable support for a driver to 'bond' (merge) multiple subdevices
  from multiple devices together as one.
  
  Currently, it only handles digital I/O subdevices.
  
  To compile this driver as a module, choose M here: the module will be
  called comedi_bond.

COMEDI_C6XDIGIO
  Enable support for Mechatronic Systems Inc. C6x_DIGIO DSP daughter
  card
  
  To compile this driver as a module, choose M here: the module will be
  called c6xdigio.

COMEDI_CB_DAS16_CS
  Enable support for the ComputerBoards/MeasurementComputing PCMCIA
  cards DAS16/16, PCM-DAS16D/12 and PCM-DAS16s/16
  
  To compile this driver as a module, choose M here: the module will be
  called cb_das16_cs.

COMEDI_CB_PCIDAS
  Enable support for ComputerBoards/MeasurementComputing PCI-DAS with
  AMCC S5933 PCIcontroller: PCI-DAS1602/16, PCI-DAS1602/16jr,
  PCI-DAS1602/12, PCI-DAS1200, PCI-DAS1200jr, PCI-DAS1000, PCI-DAS1001
  and PCI_DAS1002.
  
  To compile this driver as a module, choose M here: the module will be
  called cb_pcidas.

COMEDI_CB_PCIDAS64
  Enable support for ComputerBoards/MeasurementComputing PCI-DAS 64xx,
  60xx, and 4020 series with the PLX 9080 PCI controller
  
  To compile this driver as a module, choose M here: the module will be
  called cb_pcidas64.

COMEDI_CB_PCIDDA
  Enable support for ComputerBoards/MeasurementComputing PCI-DDA
  series: PCI-DDA08/12, PCI-DDA04/12, PCI-DDA02/12, PCI-DDA08/16,
  PCI-DDA04/16 and PCI-DDA02/16
  
  To compile this driver as a module, choose M here: the module will be
  called cb_pcidda.

COMEDI_CB_PCIMDAS
  Enable support for ComputerBoards/MeasurementComputing PCI Migration
  series PCIM-DAS1602/16 and PCIe-DAS1602/16.
  
  To compile this driver as a module, choose M here: the module will be
  called cb_pcimdas.

COMEDI_CB_PCIMDDA
  Enable support for ComputerBoards/MeasurementComputing PCIM-DDA06-16
  
  To compile this driver as a module, choose M here: the module will be
  called cb_pcimdda.

COMEDI_CONTEC_PCI_DIO
  Enable support for the Contec PIO1616L digital I/O board
  
  To compile this driver as a module, choose M here: the module will be
  called contec_pci_dio.

COMEDI_DAC02
  Enable support for Keithley Metrabyte DAC02 compatible ISA cards.
  
  To compile this driver as a module, choose M here: the module will be
  called dac02.

COMEDI_DAQBOARD2000
  Enable support for the IOtech DAQboard/2000
  
  To compile this driver as a module, choose M here: the module will be
  called daqboard2000.

COMEDI_DAS08
  No help

COMEDI_DAS08_CS
  Enable support for the ComputerBoards/MeasurementComputing DAS-08
  PCMCIA card
  
  To compile this driver as a module, choose M here: the module will be
  called das08_cs.

COMEDI_DAS08_ISA
  Enable support for Keithley Metrabyte/ComputerBoards DAS08
  and compatible ISA and PC/104 cards:
  Keithley Metrabyte/ComputerBoards DAS08, DAS08-PGM, DAS08-PGH,
  DAS08-PGL, DAS08-AOH, DAS08-AOL, DAS08-AOM, DAS08/JR-AO,
  DAS08/JR-16-AO, PC104-DAS08, DAS08/JR/16.
  
  To compile this driver as a module, choose M here: the module will be
  called das08_isa.

COMEDI_DAS08_PCI
  Enable support for PCI DAS-08 cards.
  
  To compile this driver as a module, choose M here: the module will be
  called das08_pci.

COMEDI_DAS16
  Enable support for Keithley Metrabyte/ComputerBoards DAS16
  and compatible ISA and PC/104 cards:
  Keithley Metrabyte DAS-16, DAS-16G, DAS-16F, DAS-1201, DAS-1202,
  DAS-1401, DAS-1402, DAS-1601, DAS-1602 and
  ComputerBoards/MeasurementComputing PC104-DAS16/JR/,
  PC104-DAS16JR/16, CIO-DAS16JR/16, CIO-DAS16/JR, CIO-DAS1401/12,
  CIO-DAS1402/12, CIO-DAS1402/16, CIO-DAS1601/12, CIO-DAS1602/12,
  CIO-DAS1602/16, CIO-DAS16/330
  
  To compile this driver as a module, choose M here: the module will be
  called das16.

COMEDI_DAS16M1
  Enable support for Measurement Computing CIO-DAS16/M1 ISA cards.
  
  To compile this driver as a module, choose M here: the module will be
  called das16m1.

COMEDI_DAS1800
  Enable support for DAS1800 and compatible ISA cards
  Keithley Metrabyte DAS-1701ST, DAS-1701ST-DA, DAS-1701/AO,
  DAS-1702ST, DAS-1702ST-DA, DAS-1702HR, DAS-1702HR-DA, DAS-1702/AO,
  DAS-1801ST, DAS-1801ST-DA, DAS-1801HC, DAS-1801AO, DAS-1802ST,
  DAS-1802ST-DA, DAS-1802HR, DAS-1802HR-DA, DAS-1802HC and
  DAS-1802AO
  
  To compile this driver as a module, choose M here: the module will be
  called das1800.

COMEDI_DAS6402
  Enable support for DAS6402 and compatible ISA cards
  Computerboards, Keithley Metrabyte DAS6402 and compatibles
  
  To compile this driver as a module, choose M here: the module will be
  called das6402.

COMEDI_DAS800
  Enable support for Keithley Metrabyte DAS800 and compatible ISA cards
  Keithley Metrabyte DAS-800, DAS-801, DAS-802
  Measurement Computing CIO-DAS800, CIO-DAS801, CIO-DAS802 and
  CIO-DAS802/16
  
  To compile this driver as a module, choose M here: the module will be
  called das800.

COMEDI_DEBUG
  This is an option for use by developers; most people should
  say N here. This enables comedi core and driver debugging.

COMEDI_DEFAULT_BUF_MAXSIZE_KB
  This is the default maximum asynchronous buffer size which can
  be requested by a userspace program without root privileges.
  This is set to 20480 KiB so that a fast I/O card with 16
  channels running at 100 kHz has 2-4 seconds of buffer.

COMEDI_DEFAULT_BUF_SIZE_KB
  This is the default asynchronous buffer size which is used for
  commands running in the background in kernel space.  This
  defaults to 2048 KiB of memory so that a 16 channel card
  running at 10 kHz has of 2-4 seconds of buffer.

COMEDI_DMM32AT
  Enable support for Diamond Systems MM-32-AT PC/104 boards
  
  To compile this driver as a module, choose M here: the module will be
  called dmm32at.

COMEDI_DT2801
  Enable support for Data Translation DT2801 ISA cards
  
  To compile this driver as a module, choose M here: the module will be
  called dt2801.

COMEDI_DT2811
  Enable support for Data Translation DT2811 ISA cards
  
  To compile this driver as a module, choose M here: the module will be
  called dt2811.

COMEDI_DT2814
  Enable support for Data Translation DT2814 ISA cards
  
  To compile this driver as a module, choose M here: the module will be
  called dt2814.

COMEDI_DT2815
  Enable support for Data Translation DT2815 ISA cards
  
  To compile this driver as a module, choose M here: the module will be
  called dt2815.

COMEDI_DT2817
  Enable support for Data Translation DT2817 ISA cards
  
  To compile this driver as a module, choose M here: the module will be
  called dt2817.

COMEDI_DT282X
  Enable support for Data Translation DT2821 series including DT-EZ
  DT2821, DT2821-F-16SE, DT2821-F-8DI, DT2821-G-16SE, DT2821-G-8DI,
  DT2823 (dt2823), DT2824-PGH, DT2824-PGL, DT2825, DT2827, DT2828,
  DT21-EZ, DT23-EZ, DT24-EZ and DT24-EZ-PGL
  
  To compile this driver as a module, choose M here: the module will be
  called dt282x.

COMEDI_DT3000
  Enable support for Data Translation DT3000 series
  DT3001, DT3001-PGL, DT3002, DT3003, DT3003-PGL, DT3004, DT3005 and
  DT3004-200
  
  To compile this driver as a module, choose M here: the module will be
  called dt3000.

COMEDI_DT9812
  Enable support for the Data Translation DT9812 USB module
  
  To compile this driver as a module, choose M here: the module will be
  called dt9812.

COMEDI_DYNA_PCI10XX
  Enable support for Dynalog PCI DAQ series
  PCI-1050
  
  To compile this driver as a module, choose M here: the module will be
  called dyna_pci10xx.

COMEDI_FL512
  Enable support for FL512 ISA card
  
  To compile this driver as a module, choose M here: the module will be
  called fl512.

COMEDI_GSC_HPDI
  Enable support for General Standards Corporation high speed parallel
  digital interface rs485 boards PCI-HPDI32 and PMC-HPDI32.
  Only receive mode works, transmit not supported.
  
  To compile this driver as a module, choose M here: the module will be
  called gsc_hpdi.

COMEDI_ICP_MULTI
  Enable support for Inova ICP_MULTI card
  
  To compile this driver as a module, choose M here: the module will be
  called icp_multi.

COMEDI_II_PCI20KC
  Enable support for Intelligent Instruments PCI-20001C carrier
  PCI-20001, PCI-20006 and PCI-20341
  
  To compile this driver as a module, choose M here: the module will be
  called ii_pci20kc.

COMEDI_ISADMA
  No help

COMEDI_ISA_DRIVERS
  Enable comedi ISA and PC/104 drivers to be built
  
  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about ISA and PC/104 comedi drivers.

COMEDI_JR3_PCI
  Enable support for JR3/PCI force sensor boards
  
  To compile this driver as a module, choose M here: the module will be
  called jr3_pci.

COMEDI_KCOMEDILIB
  Build the kcomedilib.
  
  This is a kernel module used to open and manipulate Comedi devices
  from within kernel code.  It is currently only used by the
  comedi_bond driver, and its functionality has been stripped down to
  the needs of that driver, so is currently not very useful for
  anything else.
  
  To compile kcomedilib as a module, choose M here: the module will be
  called kcomedilib.

COMEDI_KE_COUNTER
  Enable support for Kolter-Electronic PCI Counter 1 cards
  
  To compile this driver as a module, choose M here: the module will be
  called ke_counter.

COMEDI_ME4000
  Enable support for Meilhaus PCI data acquisition cards
  ME-4650, ME-4670i, ME-4680, ME-4680i and ME-4680is
  
  To compile this driver as a module, choose M here: the module will be
  called me4000.

COMEDI_ME_DAQ
  Enable support for Meilhaus PCI data acquisition cards
  ME-2000i, ME-2600i and ME-3000vm1
  
  To compile this driver as a module, choose M here: the module will be
  called me_daq.

COMEDI_MF6X4
  This driver supports both Humusoft MF634 and MF624 Data acquisition
  cards. The legacy Humusoft MF614 card is not supported.

COMEDI_MISC_DRIVERS
  Enable comedi misc drivers to be built
  
  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about misc non-hardware comedi drivers.

COMEDI_MITE
  No help

COMEDI_MPC624
  Enable support for Micro/sys MPC-624 PC/104 board
  
  To compile this driver as a module, choose M here: the module will be
  called mpc624.

COMEDI_MULTIQ3
  Enable support for Quanser Consulting MultiQ-3 ISA cards
  
  To compile this driver as a module, choose M here: the module will be
  called multiq3.

COMEDI_NI_6527
  Enable support for the National Instruments 6527 PCI card
  
  To compile this driver as a module, choose M here: the module will be
  called ni_6527.

COMEDI_NI_65XX
  Enable support for National Instruments 65xx static dio boards.
  Supported devices: National Instruments PCI-6509 (ni_65xx),
  PXI-6509, PCI-6510, PCI-6511, PXI-6511, PCI-6512, PXI-6512, PCI-6513,
  PXI-6513, PCI-6514, PXI-6514, PCI-6515, PXI-6515, PCI-6516, PCI-6517,
  PCI-6518, PCI-6519, PCI-6520, PCI-6521, PXI-6521, PCI-6528, PXI-6528
  
  To compile this driver as a module, choose M here: the module will be
  called ni_65xx.

COMEDI_NI_660X
  Enable support for National Instruments PCI-6601 (ni_660x), PCI-6602,
  PXI-6602, PXI-6608, PCI-6624, and PXI-6624.
  
  To compile this driver as a module, choose M here: the module will be
  called ni_660x.

COMEDI_NI_670X
  Enable support for National Instruments PCI-6703 and PCI-6704
  
  To compile this driver as a module, choose M here: the module will be
  called ni_670x.

COMEDI_NI_ATMIO
  Enable support for National Instruments AT-MIO E series cards
  National Instruments AT-MIO-16E-1 (ni_atmio),
  AT-MIO-16E-2, AT-MIO-16E-10, AT-MIO-16DE-10, AT-MIO-64E-3,
  AT-MIO-16XE-50, AT-MIO-16XE-10, AT-AI-16XE-10
  
  To compile this driver as a module, choose M here: the module will be
  called ni_atmio.

COMEDI_NI_ATMIO16D
  Enable support for National Instruments AT-MIO-16/AT-MIO-16D cards.
  
  To compile this driver as a module, choose M here: the module will be
  called ni_atmio16d.

COMEDI_NI_AT_A2150
  Enable support for National Instruments AT-A2150 cards
  
  To compile this driver as a module, choose M here: the module will be
  called ni_at_a2150.

COMEDI_NI_AT_AO
  Enable support for National Instruments AT-AO-6/10 cards
  
  To compile this driver as a module, choose M here: the module will be
  called ni_at_ao.

COMEDI_NI_DAQ_700_CS
  Enable support for the National Instruments PCMCIA DAQCard-700 DIO
  
  To compile this driver as a module, choose M here: the module will be
  called ni_daq_700.

COMEDI_NI_DAQ_DIO24_CS
  Enable support for the National Instruments PCMCIA DAQ-Card DIO-24
  
  To compile this driver as a module, choose M here: the module will be
  called ni_daq_dio24.

COMEDI_NI_LABPC
  No help

COMEDI_NI_LABPC_CS
  Enable support for the National Instruments PCMCIA DAQCard-1200
  
  To compile this driver as a module, choose M here: the module will be
  called ni_labpc_cs.

COMEDI_NI_LABPC_ISA
  Enable support for National Instruments Lab-PC and compatibles
  Lab-PC-1200, Lab-PC-1200AI, Lab-PC+.
  Kernel-level ISA plug-and-play support for the lab-pc-1200 boards has
  not yet been added to the driver.
  
  To compile this driver as a module, choose M here: the module will be
  called ni_labpc.

COMEDI_NI_LABPC_ISADMA
  No help

COMEDI_NI_LABPC_PCI
  Enable support for National Instruments Lab-PC PCI-1200.
  
  To compile this driver as a module, choose M here: the module will be
  called ni_labpc_pci.

COMEDI_NI_MIO_CS
  Enable support for the National Instruments PCMCIA DAQCard E series
  DAQCard-ai-16xe-50, DAQCard-ai-16e-4, DAQCard-6062E, DAQCard-6024E
  and DAQCard-6036E
  
  To compile this driver as a module, choose M here: the module will be
  called ni_mio_cs.

COMEDI_NI_PCIDIO
  Enable support for National Instruments PCI-DIO-32HS, PXI-6533,
  PCI-6533 and PCI-6534
  
  To compile this driver as a module, choose M here: the module will be
  called ni_pcidio.

COMEDI_NI_PCIMIO
  Enable support for National Instruments PCI-MIO-E series and M series
  (all boards): PCI-MIO-16XE-10, PXI-6030E, PCI-MIO-16E-1,
  PCI-MIO-16E-4, PCI-6014, PCI-6040E, PXI-6040E, PCI-6030E, PCI-6031E,
  PCI-6032E, PCI-6033E, PCI-6071E, PCI-6023E, PCI-6024E, PCI-6025E,
  PXI-6025E, PCI-6034E, PCI-6035E, PCI-6052E, PCI-6110, PCI-6111,
  PCI-6220, PXI-6220, PCI-6221, PXI-6221, PCI-6224, PXI-6224, PCI-6225,
  PXI-6225, PCI-6229, PXI-6229, PCI-6250, PXI-6250, PCI-6251, PXI-6251,
  PCIe-6251, PXIe-6251, PCI-6254, PXI-6254, PCI-6259, PXI-6259,
  PCIe-6259, PXIe-6259, PCI-6280, PXI-6280, PCI-6281, PXI-6281,
  PCI-6284, PXI-6284, PCI-6289, PXI-6289, PCI-6711, PXI-6711,
  PCI-6713, PXI-6713, PXI-6071E, PCI-6070E, PXI-6070E, PXI-6052E,
  PCI-6036E, PCI-6731, PCI-6733, PXI-6733, PCI-6143, PXI-6143
  
  To compile this driver as a module, choose M here: the module will be
  called ni_pcimio.

COMEDI_NI_ROUTING
  No help

COMEDI_NI_TIO
  No help

COMEDI_NI_TIOCMD
  No help

COMEDI_NI_USB6501
  Enable support for the National Instruments USB-6501 module.
  
  The NI USB-6501 is a Full-Speed USB 2.0 (12 Mbit/s) device that
  provides 24 digital I/O lines channels and one 32-bit counter.
  
  To compile this driver as a module, choose M here: the module will be
  called ni_usb6501.

COMEDI_PARPORT
  Enable support for the standard parallel port.
  A cheap and easy way to get a few more digital I/O lines. Steal
  additional parallel ports from old computers or your neighbors'
  computers.
  
  To compile this driver as a module, choose M here: the module will be
  called comedi_parport.

COMEDI_PCI_DRIVERS
  Enable support for comedi PCI drivers.
  
  To compile this support as a module, choose M here: the module will
  be called comedi_pci.

COMEDI_PCL711
  Enable support for Advantech PCL-711 and 711b, ADlink ACL-8112
  
  To compile this driver as a module, choose M here: the module will be
  called pcl711.

COMEDI_PCL724
  Enable support for ISA and PC/104 based 8255 digital i/o boards. This
  driver provides a legacy comedi driver wrapper for the generic 8255
  support driver.
  
  Supported boards include:
    Advantech PCL-724            24 channels
    Advantech PCL-722            144 (or 96) channels
    Advantech PCL-731            48 channels
    ADlink ACL-7122              144 (or 96) channels
    ADlink ACL-7124              24 channels
    ADlink PET-48DIO             48 channels
    WinSystems PCM-IO48          48 channels (PC/104)
    Diamond Systems ONYX-MM-DIO  48 channels (PC/104)
  
  To compile this driver as a module, choose M here: the module will be
  called pcl724.

COMEDI_PCL726
  Enable support for Advantech PCL-726 and compatible ISA cards.
  
  To compile this driver as a module, choose M here: the module will be
  called pcl726.

COMEDI_PCL730
  Enable support for various simple ISA or PC/104 Digital I/O boards.
  These boards all use 8-bit I/O ports.
  
  Advantech PCL-730             iso - 16 in/16 out  ttl - 16 in/16 out
  ICP ISO-730                   iso - 16 in/16 out  ttl - 16 in/16 out
  ADlink ACL-7130               iso - 16 in/16 out  ttl - 16 in/16 out
  Advantech PCM-3730            iso - 8 in/8 out    ttl - 16 in/16 out
  Advantech PCL-725             iso - 8 in/8 out
  ICP P8R8-DIO                  iso - 8 in/8 out
  ADlink ACL-7225b              iso - 16 in/16 out
  ICP P16R16-DIO                iso - 16 in/16 out
  Advantech PCL-733             iso - 32 in
  Advantech PCL-734             iso - 32 out
  Diamond Systems OPMM-1616-XT  iso - 16 in/16 out
  Diamond Systems PEARL-MM-P    iso - 16 out
  Diamond Systems IR104-PBF     iso - 20 in/20 out
  
  To compile this driver as a module, choose M here: the module will be
  called pcl730.

COMEDI_PCL812
  Enable support for Advantech PCL-812/PG, PCL-813/B, ADLink
  ACL-8112DG/HG/PG, ACL-8113, ACL-8216, ICP DAS A-821PGH/PGL/PGL-NDA,
  A-822PGH/PGL, A-823PGH/PGL, A-826PG and ICP DAS ISO-813 ISA cards
  
  To compile this driver as a module, choose M here: the module will be
  called pcl812.

COMEDI_PCL816
  Enable support for Advantech PCL-814 and PCL-816 ISA cards
  
  To compile this driver as a module, choose M here: the module will be
  called pcl816.

COMEDI_PCL818
  Enable support for Advantech PCL-818 ISA cards
  PCL-818L, PCL-818H, PCL-818HD, PCL-818HG, PCL-818 and PCL-718
  
  To compile this driver as a module, choose M here: the module will be
  called pcl818.

COMEDI_PCM3724
  Enable support for Advantech PCM-3724 PC/104 cards.
  
  To compile this driver as a module, choose M here: the module will be
  called pcm3724.

COMEDI_PCMAD
  Enable support for Winsystems PCM-A/D12 and PCM-A/D16 PC/104 boards.
  
  To compile this driver as a module, choose M here: the module will be
  called pcmad.

COMEDI_PCMCIA_DRIVERS
  Enable support for comedi PCMCIA drivers.
  
  To compile this support as a module, choose M here: the module will
  be called comedi_pcmcia.

COMEDI_PCMDA12
  Enable support for Winsystems PCM-D/A-12 8-channel AO PC/104 boards.
  Note that the board is not ISA-PNP capable and thus needs the I/O
  port comedi_config parameter.
  
  To compile this driver as a module, choose M here: the module will be
  called pcmda12.

COMEDI_PCMMIO
  Enable support for Winsystems PCM-MIO multifunction PC/104 boards.
  
  To compile this driver as a module, choose M here: the module will be
  called pcmmio.

COMEDI_PCMUIO
  Enable support for PCM-UIO48A and PCM-UIO96A PC/104 boards.
  
  To compile this driver as a module, choose M here: the module will be
  called pcmuio.

COMEDI_QUATECH_DAQP_CS
  Enable support for the Quatech DAQP PCMCIA data capture cards
  DAQP-208 and DAQP-308
  
  To compile this driver as a module, choose M here: the module will be
  called quatech_daqp_cs.

COMEDI_RTD520
  Enable support for Real Time Devices PCI4520/DM7520
  
  To compile this driver as a module, choose M here: the module will be
  called rtd520.

COMEDI_RTI800
  Enable support for Analog Devices RTI-800/815 ISA cards
  
  To compile this driver as a module, choose M here: the module will be
  called rti800.

COMEDI_RTI802
  Enable support for Analog Devices RTI-802 ISA cards
  
  To compile this driver as a module, choose M here: the module will be
  called rti802.

COMEDI_S526
  Enable support for Sensoray s526
  
  To compile this driver as a module, choose M here: the module will be
  called s526.

COMEDI_S626
  Enable support for Sensoray 626
  
  To compile this driver as a module, choose M here: the module will be
  called s626.

COMEDI_SSV_DNP
  Enable support for SSV Embedded Systems DIL/Net-PC
  
  To compile this driver as a module, choose M here: the module will be
  called ssv_dnp.

COMEDI_TEST
  Enable support for the fake waveform generator.
  This driver is mainly for testing purposes, but can also be used to
  generate sample waveforms on systems that don't have data acquisition
  hardware.
  
  To compile this driver as a module, choose M here: the module will be
  called comedi_test.

COMEDI_USBDUX
  Enable support for the Incite Technology Ltd USB-DUX-D Board
  
  To compile this driver as a module, choose M here: the module will be
  called usbdux.

COMEDI_USBDUXFAST
  Enable support for the Incite Technology Ltd USB-DUXfast Board
  
  To compile this driver as a module, choose M here: the module will be
  called usbduxfast.

COMEDI_USBDUXSIGMA
  Enable support for the Incite Technology Ltd USB-DUXsigma Board
  
  To compile this driver as a module, choose M here: the module will be
  called usbduxsigma.

COMEDI_USB_DRIVERS
  Enable support for comedi USB drivers.
  
  To compile this support as a module, choose M here: the module will
  be called comedi_usb.

COMEDI_VMK80XX
  Build the Velleman USB Board Low-Level Driver supporting the
  K8055/K8061 aka VM110/VM140 devices
  
  To compile this driver as a module, choose M here: the module will be
  called vmk80xx.

COMMON_CLK
  The common clock framework is a single definition of struct
  clk, useful across many platforms, as well as an
  implementation of the clock API in include/linux/clk.h.
  Architectures utilizing the common struct clk should select
  this option.

COMMON_CLK_ASPEED
  This driver supports the SoC clocks on the Aspeed BMC platforms.
  
  The G4 and G5 series, including the ast2400 and ast2500, are supported
  by this driver.

COMMON_CLK_AXG
  Support for the clock controller on AmLogic A113D devices, aka axg.
  Say Y if you want peripherals and CPU frequency scaling to work.

COMMON_CLK_AXG_AUDIO
  Support for the audio clock controller on AmLogic A113D devices,
  aka axg, Say Y if you want audio subsystem to work.

COMMON_CLK_AXI_CLKGEN
  Support for the Analog Devices axi-clkgen pcore clock generator for Xilinx
  FPGAs. It is commonly used in Analog Devices' reference designs.

COMMON_CLK_BD718XX
  This driver supports ROHM BD71837, ROHM BD71847, ROHM BD71828 and
  ROHM BD70528 PMICs clock gates.

COMMON_CLK_BM1880
  This driver supports the clocks on Bitmain BM1880 SoC.

COMMON_CLK_BOSTON
  Enable this to support the system & CPU clocks on the MIPS Boston
  development board from Imagination Technologies. These are simple
  fixed rate clocks whose rate is determined by reading a platform
  provided register.

COMMON_CLK_CDCE706
  This driver supports TI CDCE706 programmable 3-PLL clock synthesizer.

COMMON_CLK_CDCE925
  This driver supports the TI CDCE913/925/937/949 programmable clock
  synthesizer. Each chip has different number of PLLs and outputs.
  For example, the CDCE925 contains two PLLs with spread-spectrum
  clocking support and five output dividers. The driver only supports
  the following setup, and uses a fixed setting for the output muxes.
  Y1 is derived from the input clock
  Y2 and Y3 derive from PLL1
  Y4 and Y5 derive from PLL2
  Given a target output frequency, the driver will set the PLL and
  divider to best approximate the desired output.

COMMON_CLK_CS2000_CP
  If you say yes here you get support for the CS2000 clock multiplier.

COMMON_CLK_FIXED_MMIO
  Support for Memory Mapped IO Fixed clocks

COMMON_CLK_FSL_FLEXSPI
  On Layerscape SoCs there is a special clock for the FlexSPI
  interface.

COMMON_CLK_FSL_SAI
  This driver supports the Freescale SAI (Synchronous Audio Interface)
  to be used as a generic clock output. Some SoCs have restrictions
  regarding the possible pin multiplexer settings. Eg. on some SoCs
  two SAI interfaces can only be enabled together. If just one is
  needed, the BCLK pin of the second one can be used as general
  purpose clock output. Ideally, it can be used to drive an audio
  codec (sometimes known as MCLK).

COMMON_CLK_G12A
  Support for the clock controller on Amlogic S905D2, S905X2 and S905Y2
  devices, aka g12a. Say Y if you want peripherals to work.

COMMON_CLK_GEMINI
  This driver supports the SoC clocks on the Cortina Systems Gemini
  platform, also known as SL3516 or CS3516.

COMMON_CLK_GXBB
  Support for the clock controller on AmLogic S905 devices, aka gxbb.
  Say Y if you want peripherals and CPU frequency scaling to work.

COMMON_CLK_HI3516CV300
  Build the clock driver for hi3516cv300.

COMMON_CLK_HI3519
  Build the clock driver for hi3519.

COMMON_CLK_HI3660
  Build the clock driver for hi3660.

COMMON_CLK_HI3670
  Build the clock driver for hi3670.

COMMON_CLK_HI3798CV200
  Build the clock driver for hi3798cv200.

COMMON_CLK_HI6220
  Build the Hisilicon Hi6220 clock driver based on the common clock framework.

COMMON_CLK_HI655X
  This driver supports the hi655x PMIC clock. This
  multi-function device has one fixed-rate oscillator, clocked
  at 32KHz.

COMMON_CLK_IPROC
  Enable common clock framework support for Broadcom SoCs
  based on the iProc architecture

COMMON_CLK_KEYSTONE
  Supports clock drivers for Keystone based SOCs. These SOCs have local
  a power sleep control module that gate the clock to the IPs and PLLs.

COMMON_CLK_LOCHNAGAR
  This driver supports the clocking features of the Cirrus Logic
  Lochnagar audio development board.

COMMON_CLK_MAX77686
  This driver supports Maxim 77620/77686/77802 crystal oscillator
  clock.

COMMON_CLK_MAX9485
  This driver supports Maxim 9485 Programmable Audio Clock Generator

COMMON_CLK_MEDIATEK
  MediaTek SoCs' clock support.

COMMON_CLK_MESON8B
  Support for the clock controller on AmLogic S802 (Meson8),
  S805 (Meson8b) and S812 (Meson8m2) devices. Say Y if you
  want peripherals and CPU frequency scaling to work.

COMMON_CLK_MESON_AO_CLKC
  No help

COMMON_CLK_MESON_CPU_DYNDIV
  No help

COMMON_CLK_MESON_DUALDIV
  No help

COMMON_CLK_MESON_EE_CLKC
  No help

COMMON_CLK_MESON_MPLL
  No help

COMMON_CLK_MESON_PHASE
  No help

COMMON_CLK_MESON_PLL
  No help

COMMON_CLK_MESON_REGMAP
  No help

COMMON_CLK_MESON_SCLK_DIV
  No help

COMMON_CLK_MESON_VID_PLL_DIV
  No help

COMMON_CLK_MMP2
  Support for Marvell MMP2 and MMP3 SoC clocks

COMMON_CLK_MMP2_AUDIO
  This driver supports clocks for Audio subsystem on MMP2 SoC.

COMMON_CLK_MT2701
  This driver supports MediaTek MT2701 basic clocks.

COMMON_CLK_MT2701_AUDSYS
  This driver supports Mediatek MT2701 audsys clocks.

COMMON_CLK_MT2701_BDPSYS
  This driver supports MediaTek MT2701 bdpsys clocks.

COMMON_CLK_MT2701_ETHSYS
  This driver supports MediaTek MT2701 ethsys clocks.

COMMON_CLK_MT2701_G3DSYS
  This driver supports MediaTek MT2701 g3dsys clocks.

COMMON_CLK_MT2701_HIFSYS
  This driver supports MediaTek MT2701 hifsys clocks.

COMMON_CLK_MT2701_IMGSYS
  This driver supports MediaTek MT2701 imgsys clocks.

COMMON_CLK_MT2701_MMSYS
  This driver supports MediaTek MT2701 mmsys clocks.

COMMON_CLK_MT2701_VDECSYS
  This driver supports MediaTek MT2701 vdecsys clocks.

COMMON_CLK_MT2712
  This driver supports MediaTek MT2712 basic clocks.

COMMON_CLK_MT2712_BDPSYS
  This driver supports MediaTek MT2712 bdpsys clocks.

COMMON_CLK_MT2712_IMGSYS
  This driver supports MediaTek MT2712 imgsys clocks.

COMMON_CLK_MT2712_JPGDECSYS
  This driver supports MediaTek MT2712 jpgdecsys clocks.

COMMON_CLK_MT2712_MFGCFG
  This driver supports MediaTek MT2712 mfgcfg clocks.

COMMON_CLK_MT2712_MMSYS
  This driver supports MediaTek MT2712 mmsys clocks.

COMMON_CLK_MT2712_VDECSYS
  This driver supports MediaTek MT2712 vdecsys clocks.

COMMON_CLK_MT2712_VENCSYS
  This driver supports MediaTek MT2712 vencsys clocks.

COMMON_CLK_MT6765
  This driver supports MediaTek MT6765 basic clocks.

COMMON_CLK_MT6765_AUDIOSYS
  This driver supports MediaTek MT6765 audiosys clocks.

COMMON_CLK_MT6765_CAMSYS
  This driver supports MediaTek MT6765 camsys clocks.

COMMON_CLK_MT6765_GCESYS
  This driver supports MediaTek MT6765 gcesys clocks.

COMMON_CLK_MT6765_IMGSYS
  This driver supports MediaTek MT6765 imgsys clocks.

COMMON_CLK_MT6765_MFGSYS
  This driver supports MediaTek MT6765 mfgsys clocks.

COMMON_CLK_MT6765_MIPI0ASYS
  This driver supports MediaTek MT6765 mipi0asys clocks.

COMMON_CLK_MT6765_MIPI0BSYS
  This driver supports MediaTek MT6765 mipi0bsys clocks.

COMMON_CLK_MT6765_MIPI1ASYS
  This driver supports MediaTek MT6765 mipi1asys clocks.

COMMON_CLK_MT6765_MIPI1BSYS
  This driver supports MediaTek MT6765 mipi1bsys clocks.

COMMON_CLK_MT6765_MIPI2ASYS
  This driver supports MediaTek MT6765 mipi2asys clocks.

COMMON_CLK_MT6765_MIPI2BSYS
  This driver supports MediaTek MT6765 mipi2bsys clocks.

COMMON_CLK_MT6765_MMSYS
  This driver supports MediaTek MT6765 mmsys clocks.

COMMON_CLK_MT6765_VCODECSYS
  This driver supports MediaTek MT6765 vcodecsys clocks.

COMMON_CLK_MT6779
  This driver supports MediaTek MT6779 basic clocks.

COMMON_CLK_MT6779_AUDSYS
  This driver supports Mediatek MT6779 audsys clocks.

COMMON_CLK_MT6779_CAMSYS
  This driver supports MediaTek MT6779 camsys clocks.

COMMON_CLK_MT6779_IMGSYS
  This driver supports MediaTek MT6779 imgsys clocks.

COMMON_CLK_MT6779_IPESYS
  This driver supports MediaTek MT6779 ipesys clocks.

COMMON_CLK_MT6779_MFGCFG
  This driver supports MediaTek MT6779 mfgcfg clocks.

COMMON_CLK_MT6779_MMSYS
  This driver supports MediaTek MT6779 mmsys clocks.

COMMON_CLK_MT6779_VDECSYS
  This driver supports MediaTek MT6779 vdecsys clocks.

COMMON_CLK_MT6779_VENCSYS
  This driver supports MediaTek MT6779 vencsys clocks.

COMMON_CLK_MT6797
  This driver supports MediaTek MT6797 basic clocks.

COMMON_CLK_MT6797_IMGSYS
  This driver supports MediaTek MT6797 imgsys clocks.

COMMON_CLK_MT6797_MMSYS
  This driver supports MediaTek MT6797 mmsys clocks.

COMMON_CLK_MT6797_VDECSYS
  This driver supports MediaTek MT6797 vdecsys clocks.

COMMON_CLK_MT6797_VENCSYS
  This driver supports MediaTek MT6797 vencsys clocks.

COMMON_CLK_MT7622
  This driver supports MediaTek MT7622 basic clocks and clocks
  required for various periperals found on MediaTek.

COMMON_CLK_MT7622_AUDSYS
  This driver supports MediaTek MT7622 AUDSYS clocks providing
  to audio consumers such as I2S and TDM.

COMMON_CLK_MT7622_ETHSYS
  This driver add support for clocks for Ethernet and SGMII
  required on MediaTek MT7622 SoC.

COMMON_CLK_MT7622_HIFSYS
  This driver supports MediaTek MT7622 HIFSYS clocks providing
  to PCI-E and USB.

COMMON_CLK_MT7629
  This driver supports MediaTek MT7629 basic clocks and clocks
  required for various periperals found on MediaTek.

COMMON_CLK_MT7629_ETHSYS
  This driver add support for clocks for Ethernet and SGMII
  required on MediaTek MT7629 SoC.

COMMON_CLK_MT7629_HIFSYS
  This driver supports MediaTek MT7629 HIFSYS clocks providing
  to PCI-E and USB.

COMMON_CLK_MT8135
  This driver supports MediaTek MT8135 clocks.

COMMON_CLK_MT8167
  This driver supports MediaTek MT8167 basic clocks.

COMMON_CLK_MT8167_AUDSYS
  This driver supports MediaTek MT8167 audsys clocks.

COMMON_CLK_MT8167_IMGSYS
  This driver supports MediaTek MT8167 imgsys clocks.

COMMON_CLK_MT8167_MFGCFG
  This driver supports MediaTek MT8167 mfgcfg clocks.

COMMON_CLK_MT8167_MMSYS
  This driver supports MediaTek MT8167 mmsys clocks.

COMMON_CLK_MT8167_VDECSYS
  This driver supports MediaTek MT8167 vdecsys clocks.

COMMON_CLK_MT8173
  This driver supports MediaTek MT8173 clocks.

COMMON_CLK_MT8173_MMSYS
  This driver supports MediaTek MT8173 mmsys clocks.

COMMON_CLK_MT8183
  This driver supports MediaTek MT8183 basic clocks.

COMMON_CLK_MT8183_AUDIOSYS
  This driver supports MediaTek MT8183 audiosys clocks.

COMMON_CLK_MT8183_CAMSYS
  This driver supports MediaTek MT8183 camsys clocks.

COMMON_CLK_MT8183_IMGSYS
  This driver supports MediaTek MT8183 imgsys clocks.

COMMON_CLK_MT8183_IPU_ADL
  This driver supports MediaTek MT8183 ipu_adl clocks.

COMMON_CLK_MT8183_IPU_CONN
  This driver supports MediaTek MT8183 ipu_conn clocks.

COMMON_CLK_MT8183_IPU_CORE0
  This driver supports MediaTek MT8183 ipu_core0 clocks.

COMMON_CLK_MT8183_IPU_CORE1
  This driver supports MediaTek MT8183 ipu_core1 clocks.

COMMON_CLK_MT8183_MFGCFG
  This driver supports MediaTek MT8183 mfgcfg clocks.

COMMON_CLK_MT8183_MMSYS
  This driver supports MediaTek MT8183 mmsys clocks.

COMMON_CLK_MT8183_VDECSYS
  This driver supports MediaTek MT8183 vdecsys clocks.

COMMON_CLK_MT8183_VENCSYS
  This driver supports MediaTek MT8183 vencsys clocks.

COMMON_CLK_MT8516
  This driver supports MediaTek MT8516 clocks.

COMMON_CLK_MT8516_AUDSYS
  This driver supports MediaTek MT8516 audsys clocks.

COMMON_CLK_NXP
  Support for clock providers on NXP platforms.

COMMON_CLK_OXNAS
  Support for the OXNAS SoC Family clocks.

COMMON_CLK_PALMAS
  This driver supports TI Palmas devices 32KHz output KG and KG_AUDIO
  using common clock framework.

COMMON_CLK_PIC32
  No help

COMMON_CLK_PWM
  Adapter driver so that any PWM output can be (mis)used as clock signal
  at 50% duty cycle.

COMMON_CLK_PXA
  Support for the Marvell PXA SoC.

COMMON_CLK_QCOM
  No help

COMMON_CLK_RK808
  This driver supports RK805, RK809 and RK817, RK808 and RK818 crystal oscillator clock.
  These multi-function devices have two fixed-rate oscillators, clocked at 32KHz each.
  Clkout1 is always on, Clkout2 can off by control register.

COMMON_CLK_ROCKCHIP
  Say y here to enable common clock controller for Rockchip platforms.

COMMON_CLK_S2MPS11
  This driver supports S2MPS11/S2MPS14/S5M8767 crystal oscillator
  clock. These multi-function devices have two (S2MPS14) or three
  (S2MPS11, S5M8767) fixed-rate oscillators, clocked at 32KHz each.

COMMON_CLK_SAMSUNG
  No help

COMMON_CLK_SCMI
  This driver provides support for clocks that are controlled
  by firmware that implements the SCMI interface.
  
  This driver uses SCMI Message Protocol to interact with the
  firmware providing all the clock controls.

COMMON_CLK_SCPI
  This driver provides support for clocks that are controlled
  by firmware that implements the SCPI interface.
  
  This driver uses SCPI Message Protocol to interact with the
  firmware providing all the clock controls.

COMMON_CLK_SI514
  This driver supports the Silicon Labs 514 programmable clock
  generator.

COMMON_CLK_SI5341
  This driver supports Silicon Labs Si5341 and Si5340 programmable clock
  generators. Not all features of these chips are currently supported
  by the driver, in particular it only supports XTAL input. The chip can
  be pre-programmed to support other configurations and features not yet
  implemented in the driver.

COMMON_CLK_SI5351
  This driver supports Silicon Labs 5351A/B/C programmable clock
  generators.

COMMON_CLK_SI544
  This driver supports the Silicon Labs 544 programmable clock
  generator.

COMMON_CLK_SI570
  This driver supports Silicon Labs 570/571/598/599 programmable
  clock generators.

COMMON_CLK_STM32F
  Support for stm32f4 and stm32f7 SoC families clocks

COMMON_CLK_STM32H7
  Support for stm32h7 SoC family clocks

COMMON_CLK_STM32MP157
  Support for stm32mp157 SoC family clocks

COMMON_CLK_TI_ADPLL
  ADPLL clock driver for the dm814x SoC using common clock framework.

COMMON_CLK_VC5
  This driver supports the IDT VersaClock 5 and VersaClock 6
  programmable clock generators.

COMMON_CLK_WM831X
  Supports the clocking subsystem of the WM831x/2x series of
  PMICs from Wolfson Microelectronics.

COMMON_CLK_XGENE
  Support for the APM X-Gene SoC reference, PLL, and device clocks.

COMMON_CLK_XLNX_CLKWZRD
  Support for the Xilinx Clocking Wizard IP core clock generator.

COMMON_CLK_ZYNQMP
  Support for the Zynqmp Ultrascale clock controller.
  It has a dependency on the PMU firmware.
  Say Y if you want to include clock support.

COMMON_RESET_HI3660
  Build the Hisilicon Hi3660 reset driver.

COMMON_RESET_HI6220
  Build the Hisilicon Hi6220 reset driver.

COMPACTION
  Compaction is the only memory management component to form
  high order (larger physically contiguous) memory blocks
  reliably. The page allocator relies on compaction heavily and
  the lack of the feature can lead to unexpected OOM killer
  invocations for high order memory requests. You shouldn't
  disable this option unless there really is a strong reason for
  it and then we would be really interested to hear about that at
  linux-mm@kvack.org.

COMPAL_LAPTOP
  This is a driver for laptops built by Compal, and some models by
  other brands (e.g. Dell, Toshiba).
  
  It adds support for rfkill, Bluetooth, WLAN, LCD brightness, hwmon
  and battery charging level control.

COMPAT
  No help

COMPAT_32
  No help

COMPAT_32BIT_TIME
  This enables 32 bit time_t support in addition to 64 bit time_t support.
  This is relevant on all 32-bit architectures, and 64-bit architectures
  as part of compat syscall handling.

COMPAT_BINFMT_ELF
  No help

COMPAT_BRK
  Randomizing heap placement makes heap exploits harder, but it
  also breaks ancient binaries (including anything libc5 based).
  This option changes the bootup default to heap randomization
  disabled, and can be overridden at runtime by setting
  /proc/sys/kernel/randomize_va_space to 2.
  
  On non-ancient distros (post-2000 ones) N is usually a safe choice.

COMPAT_FOR_U64_ALIGNMENT
  No help

COMPAT_NETLINK_MESSAGES
  This option makes it possible to send different netlink messages
  to tasks depending on whether the task is a compat task or not. To
  achieve this, you need to set skb_shinfo(skb)->frag_list to the
  compat skb before sending the skb, the netlink code will sort out
  which message to actually pass to the task.
  
  Newly written code should NEVER need this option but do
  compat-independent messages instead!

COMPAT_OLD_SIGACTION
  No help

COMPAT_VDSO
  Certain buggy versions of glibc will crash if they are
  presented with a 32-bit vDSO that is not mapped at the address
  indicated in its segment table.
  
  The bug was introduced by f866314b89d56845f55e6f365e18b31ec978ec3a
  and fixed by 3b3ddb4f7db98ec9e912ccdf54d35df4aa30e04a and
  49ad572a70b8aeb91e57483a11dd1b77e31c4468.  Glibc 2.3.3 is
  the only released version with the bug, but OpenSUSE 9
  contains a buggy "glibc 2.3.2".
  
  The symptom of the bug is that everything crashes on startup, saying:
  dl_main: Assertion `(void *) ph->p_vaddr == _rtld_local._dl_sysinfo_dso' failed!
  
  Saying Y here changes the default value of the vdso32 boot
  option from 1 to 0, which turns off the 32-bit vDSO entirely.
  This works around the glibc bug but hurts performance.
  
  If unsure, say N: if you are compiling your own kernel, you
  are unlikely to be using a buggy version of glibc.

COMPILE_TEST
  Some drivers can be compiled on a different platform than they are
  intended to be run on. Despite they cannot be loaded there (or even
  when they load they cannot be used due to missing HW support),
  developers still, opposing to distributors, might want to build such
  drivers to compile-test them.
  
  If you are a developer and want to build everything available, say Y
  here. If you are a user/distributor, say N here to exclude useless
  drivers to be distributed.

CONFIGFS_FS
  configfs is a RAM-based filesystem that provides the converse
  of sysfs's functionality. Where sysfs is a filesystem-based
  view of kernel objects, configfs is a filesystem-based manager
  of kernel objects, or config_items.
  
  Both sysfs and configfs can and should exist together on the
  same system. One is not a replacement for the other.

CONNECTOR
  This is unified userspace <-> kernelspace connector working on top
  of the netlink socket protocol.
  
  Connector support can also be built as a module.  If so, the module
  will be called cn.

CONSOLE_LOGLEVEL_DEFAULT
  Default loglevel to determine what will be printed on the console.
  
  Setting a default here is equivalent to passing in loglevel=<x> in
  the kernel bootargs. loglevel=<x> continues to override whatever
  value is specified here as well.
  
  Note: This does not affect the log level of un-prefixed printk()
  usage in the kernel. That is controlled by the MESSAGE_LOGLEVEL_DEFAULT
  option.

CONSOLE_LOGLEVEL_QUIET
  loglevel to use when "quiet" is passed on the kernel commandline.
  
  When "quiet" is passed on the kernel commandline this loglevel
  will be used as the loglevel. IOW passing "quiet" will be the
  equivalent of passing "loglevel=<CONSOLE_LOGLEVEL_QUIET>"

CONSOLE_POLL
  No help

CONSOLE_TRANSLATIONS
  This enables support for font mapping and Unicode translation
  on virtual consoles.

CONSTRUCTORS
  No help

CONTEXT_SWITCH_TRACER
  No help

CONTEXT_TRACKING
  No help

CONTEXT_TRACKING_FORCE
  The major pre-requirement for full dynticks to work is to
  support the context tracking subsystem. But there are also
  other dependencies to provide in order to make the full
  dynticks working.
  
  This option stands for testing when an arch implements the
  context tracking backend but doesn't yet fulfill all the
  requirements to make the full dynticks feature working.
  Without the full dynticks, there is no way to test the support
  for context tracking and the subsystems that rely on it: RCU
  userspace extended quiescent state and tickless cputime
  accounting. This option copes with the absence of the full
  dynticks subsystem by forcing the context tracking on all
  CPUs in the system.
  
  Say Y only if you're working on the development of an
  architecture backend for the context tracking.
  
  Say N otherwise, this option brings an overhead that you
  don't want in production.

CONTIG_ALLOC
  No help

COPS
  This allows you to use COPS AppleTalk cards to connect to LocalTalk
  networks. You also need version 1.3.3 or later of the netatalk
  package. This driver is experimental, which means that it may not
  work. This driver will only work if you choose "AppleTalk DDP"
  networking support, above.
  Please read the file
  <file:Documentation/networking/device_drivers/appletalk/cops.rst>.

COPS_DAYNA
  Support COPS compatible cards with Dayna style firmware (Dayna
  DL2000/ Daynatalk/PC (half length), COPS LT-95, Farallon PhoneNET PC
  III, Farallon PhoneNET PC II).

COPS_TANGENT
  Support COPS compatible cards with Tangent style firmware (Tangent
  ATB_II, Novell NL-1000, Daystar Digital LT-200.

CORDIC
  This option provides an implementation of the CORDIC algorithm;
  calculations are in fixed point. Module will be called cordic.

COREDUMP
  This option enables support for performing core dumps. You almost
  certainly want to say Y here. Not necessary on systems that never
  need debugging or only ever run flawless code.

CORE_DUMP_DEFAULT_ELF_HEADERS
  ELF core dump files describe each memory mapping of the crashed
  process, and can contain or omit the memory contents of each one.
  The contents of an unmodified text mapping are omitted by default.
  
  For an unmodified text mapping of an ELF object, including just
  the first page of the file in a core dump makes it possible to
  identify the build ID bits in the file, without paying the i/o
  cost and disk space to dump all the text.  However, versions of
  GDB before 6.7 are confused by ELF core dump files in this format.
  
  The core dump behavior can be controlled per process using
  the /proc/PID/coredump_filter pseudo-file; this setting is
  inherited.  See Documentation/filesystems/proc.rst for details.
  
  This config option changes the default setting of coredump_filter
  seen at boot time.  If unsure, say Y.

CORTINA_PHY
  Currently supports the CS4340 phy.

COSA
  Driver for COSA and SRP synchronous serial boards.
  
  These boards allow to connect synchronous serial devices (for example
  base-band modems, or any other device with the X.21, V.24, V.35 or
  V.36 interface) to your Linux box. The cards can work as the
  character device, synchronous PPP network device, or the Cisco HDLC
  network device.
  
  You will need user-space utilities COSA or SRP boards for downloading
   the firmware to the cards and to set them up. Look at the
  <http://www.fi.muni.cz/~kas/cosa/> for more information. You can also
  read the comment at the top of the <file:drivers/net/wan/cosa.c> for
  details about the cards and the driver itself.
  
  The driver will be compiled as a module: the
  module will be called cosa.

COUNTER
  This enables counter device support through the Generic Counter
  interface. You only need to enable this, if you also want to enable
  one or more of the counter device drivers below.

CPA_DEBUG
  Do change_page_attr() self-tests every 30 seconds.

CPCAP_ADC
  Say yes here to build support for Motorola CPCAP PMIC ADC.
  
  This driver can also be built as a module. If so, the module will be
  called cpcap-adc.

CPMAC
  TI AR7 CPMAC Ethernet support

CPU5_WDT
  TBD.
  To compile this driver as a module, choose M here: the
  module will be called cpu5wdt.

CPUFREQ_DT
  This adds a generic DT based cpufreq driver for frequency management.
  It supports both uniprocessor (UP) and symmetric multiprocessor (SMP)
  systems.
  
  If in doubt, say N.

CPUFREQ_DT_PLATDEV
  This adds a generic DT based cpufreq platdev driver for frequency
  management.  This creates a 'cpufreq-dt' platform device, on the
  supported platforms.
  
  If in doubt, say N.

CPUMASK_OFFSTACK
  Use dynamic allocation for cpumask_var_t, instead of putting
  them on the stack.  This is a bit more expensive, but avoids
  stack overflow.

CPUSETS
  This option will let you create and manage CPUSETs which
  allow dynamically partitioning a system into sets of CPUs and
  Memory Nodes and assigning tasks to run only within those sets.
  This is primarily useful on large SMP or NUMA systems.
  
  Say N if unsure.

CPU_FREQ
  CPU Frequency scaling allows you to change the clock speed of
  CPUs on the fly. This is a nice method to save power, because
  the lower the CPU clock speed, the less power the CPU consumes.
  
  Note that this driver doesn't automatically change the CPU
  clock speed, you need to either enable a dynamic cpufreq governor
  (see below) after boot, or use a userspace tool.
  
  For details, take a look at <file:Documentation/cpu-freq>.
  
  If in doubt, say N.

CPU_FREQ_CBE
  This adds the cpufreq driver for Cell BE processors.
  For details, take a look at <file:Documentation/cpu-freq/>.
  If you don't have such processor, say N

CPU_FREQ_CBE_PMI
  Select this, if you want to use the PMI interface to switch
  frequencies. Using PMI, the processor will not only be able to run at
  lower speed, but also at lower core voltage.

CPU_FREQ_DEFAULT_GOV_CONSERVATIVE
  Use the CPUFreq governor 'conservative' as default. This allows
  you to get a full dynamic frequency capable system by simply
  loading your cpufreq low-level hardware driver.
  Be aware that not all cpufreq drivers support the conservative
  governor. If unsure have a look at the help section of the
  driver. Fallback governor will be the performance governor.

CPU_FREQ_DEFAULT_GOV_ONDEMAND
  Use the CPUFreq governor 'ondemand' as default. This allows
  you to get a full dynamic frequency capable system by simply
  loading your cpufreq low-level hardware driver.
  Be aware that not all cpufreq drivers support the ondemand
  governor. If unsure have a look at the help section of the
  driver. Fallback governor will be the performance governor.

CPU_FREQ_DEFAULT_GOV_PERFORMANCE
  Use the CPUFreq governor 'performance' as default. This sets
  the frequency statically to the highest frequency supported by
  the CPU.

CPU_FREQ_DEFAULT_GOV_POWERSAVE
  Use the CPUFreq governor 'powersave' as default. This sets
  the frequency statically to the lowest frequency supported by
  the CPU.

CPU_FREQ_DEFAULT_GOV_SCHEDUTIL
  Use the 'schedutil' CPUFreq governor by default. If unsure,
  have a look at the help section of that governor. The fallback
  governor will be 'performance'.

CPU_FREQ_DEFAULT_GOV_USERSPACE
  Use the CPUFreq governor 'userspace' as default. This allows
  you to set the CPU frequency manually or when a userspace
  program shall be able to set the CPU dynamically without having
  to enable the userspace governor manually.

CPU_FREQ_GOV_ATTR_SET
  No help

CPU_FREQ_GOV_COMMON
  No help

CPU_FREQ_GOV_CONSERVATIVE
  'conservative' - this driver is rather similar to the 'ondemand'
  governor both in its source code and its purpose, the difference is
  its optimisation for better suitability in a battery powered
  environment.  The frequency is gracefully increased and decreased
  rather than jumping to 100% when speed is required.
  
  If you have a desktop machine then you should really be considering
  the 'ondemand' governor instead, however if you are using a laptop,
  PDA or even an AMD64 based computer (due to the unacceptable
  step-by-step latency issues between the minimum and maximum frequency
  transitions in the CPU) you will probably want to use this governor.
  
  To compile this driver as a module, choose M here: the
  module will be called cpufreq_conservative.
  
  For details, take a look at linux/Documentation/cpu-freq.
  
  If in doubt, say N.

CPU_FREQ_GOV_ONDEMAND
  'ondemand' - This driver adds a dynamic cpufreq policy governor.
  The governor does a periodic polling and
  changes frequency based on the CPU utilization.
  The support for this governor depends on CPU capability to
  do fast frequency switching (i.e, very low latency frequency
  transitions).
  
  To compile this driver as a module, choose M here: the
  module will be called cpufreq_ondemand.
  
  For details, take a look at linux/Documentation/cpu-freq.
  
  If in doubt, say N.

CPU_FREQ_GOV_PERFORMANCE
  This cpufreq governor sets the frequency statically to the
  highest available CPU frequency.
  
  To compile this driver as a module, choose M here: the
  module will be called cpufreq_performance.
  
  If in doubt, say Y.

CPU_FREQ_GOV_POWERSAVE
  This cpufreq governor sets the frequency statically to the
  lowest available CPU frequency.
  
  To compile this driver as a module, choose M here: the
  module will be called cpufreq_powersave.
  
  If in doubt, say Y.

CPU_FREQ_GOV_SCHEDUTIL
  This governor makes decisions based on the utilization data provided
  by the scheduler.  It sets the CPU frequency to be proportional to
  the utilization/capacity ratio coming from the scheduler.  If the
  utilization is frequency-invariant, the new frequency is also
  proportional to the maximum available frequency.  If that is not the
  case, it is proportional to the current frequency of the CPU.  The
  frequency tipping point is at utilization/capacity equal to 80% in
  both cases.
  
  If in doubt, say N.

CPU_FREQ_GOV_USERSPACE
  Enable this cpufreq governor when you either want to set the
  CPU frequency manually or when a userspace program shall
  be able to set the CPU dynamically, like on LART
  <http://www.lartmaker.nl/>.
  
  To compile this driver as a module, choose M here: the
  module will be called cpufreq_userspace.
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  If in doubt, say Y.

CPU_FREQ_MAPLE
  This adds support for frequency switching on Maple 970FX
  Evaluation Board and compatible boards (IBM JS2x blades).

CPU_FREQ_PMAC
  This adds support for frequency switching on Apple PowerBooks,
  this currently includes some models of iBook & Titanium
  PowerBook.

CPU_FREQ_PMAC64
  This adds support for frequency switching on Apple iMac G5,
  and some of the more recent desktop G5 machines as well.

CPU_FREQ_STAT
  Export CPU frequency statistics information through sysfs.
  
  If in doubt, say N.

CPU_FREQ_THERMAL
  This implements the generic cpu cooling mechanism through frequency
  reduction. An ACPI version of this already exists
  (drivers/acpi/processor_thermal.c).
  This will be useful for platforms using the generic thermal interface
  and not the ACPI interface.

CPU_HOTPLUG_STATE_CONTROL
  Allows to write steps between "offline" and "online" to the CPUs
  sysfs target file so states can be stepped granular. This is a debug
  option for now as the hotplug machinery cannot be stopped and
  restarted at arbitrary points yet.
  
  Say N if your are unsure.

CPU_HWMON
  Loongson-3A/3B CPU Hwmon (temperature sensor) driver.

CPU_IDLE
  CPU idle is a generic framework for supporting software-controlled
  idle processor power management.  It includes modular cross-platform
  governors that can be swapped during runtime.
  
  If you're using an ACPI-enabled platform, you should say Y here.

CPU_IDLE_GOV_HALTPOLL
  This governor implements haltpoll idle state selection, to be
  used in conjunction with the haltpoll cpuidle driver, allowing
  for polling for a certain amount of time before entering idle
  state.
  
  Some virtualized workloads benefit from using it.

CPU_IDLE_GOV_LADDER
  No help

CPU_IDLE_GOV_MENU
  No help

CPU_IDLE_GOV_TEO
  This governor implements a simplified idle state selection method
  focused on timer events and does not do any interactivity boosting.
  
  Some workloads benefit from using it and it generally should be safe
  to use.  Say Y here if you are not happy with the alternatives.

CPU_IDLE_MULTIPLE_DRIVERS
  No help

CPU_IDLE_THERMAL
  This implements the CPU cooling mechanism through
  idle injection. This will throttle the CPU by injecting
  idle cycle.

CPU_ISOLATION
  Make sure that CPUs running critical tasks are not disturbed by
  any source of "noise" such as unbound workqueues, timers, kthreads...
  Unbound jobs get offloaded to housekeeping CPUs. This is driven by
  the "isolcpus=" boot parameter.
  
  Say Y if unsure.

CPU_NO_EFFICIENT_FFS
  No help

CPU_PM
  No help

CPU_RMAP
  No help

CPU_SUP_AMD
  This enables detection, tunings and quirks for AMD processors
  
  You need this enabled if you want your kernel to run on an
  AMD CPU. Disabling this option on other types of CPUs
  makes the kernel a tiny bit smaller. Disabling it on an AMD
  CPU might render the kernel unbootable.
  
  If unsure, say N.

CPU_SUP_CENTAUR
  This enables detection, tunings and quirks for Centaur processors
  
  You need this enabled if you want your kernel to run on a
  Centaur CPU. Disabling this option on other types of CPUs
  makes the kernel a tiny bit smaller. Disabling it on a Centaur
  CPU might render the kernel unbootable.
  
  If unsure, say N.

CPU_SUP_CYRIX_32
  This enables detection, tunings and quirks for Cyrix processors
  
  You need this enabled if you want your kernel to run on a
  Cyrix CPU. Disabling this option on other types of CPUs
  makes the kernel a tiny bit smaller. Disabling it on a Cyrix
  CPU might render the kernel unbootable.
  
  If unsure, say N.

CPU_SUP_HYGON
  This enables detection, tunings and quirks for Hygon processors
  
  You need this enabled if you want your kernel to run on an
  Hygon CPU. Disabling this option on other types of CPUs
  makes the kernel a tiny bit smaller. Disabling it on an Hygon
  CPU might render the kernel unbootable.
  
  If unsure, say N.

CPU_SUP_INTEL
  This enables detection, tunings and quirks for Intel processors
  
  You need this enabled if you want your kernel to run on an
  Intel CPU. Disabling this option on other types of CPUs
  makes the kernel a tiny bit smaller. Disabling it on an Intel
  CPU might render the kernel unbootable.
  
  If unsure, say N.

CPU_SUP_TRANSMETA_32
  This enables detection, tunings and quirks for Transmeta processors
  
  You need this enabled if you want your kernel to run on a
  Transmeta CPU. Disabling this option on other types of CPUs
  makes the kernel a tiny bit smaller. Disabling it on a Transmeta
  CPU might render the kernel unbootable.
  
  If unsure, say N.

CPU_SUP_UMC_32
  This enables detection, tunings and quirks for UMC processors
  
  You need this enabled if you want your kernel to run on a
  UMC CPU. Disabling this option on other types of CPUs
  makes the kernel a tiny bit smaller. Disabling it on a UMC
  CPU might render the kernel unbootable.
  
  If unsure, say N.

CPU_SUP_ZHAOXIN
  This enables detection, tunings and quirks for Zhaoxin processors
  
  You need this enabled if you want your kernel to run on a
  Zhaoxin CPU. Disabling this option on other types of CPUs
  makes the kernel a tiny bit smaller. Disabling it on a Zhaoxin
  CPU might render the kernel unbootable.
  
  If unsure, say N.

CPU_THERMAL
  Enable the CPU cooling features. If the system has no active
  cooling device available, this option allows to use the CPU
  as a cooling device.

CRAMFS
  Saying Y here includes support for CramFs (Compressed ROM File
  System).  CramFs is designed to be a simple, small, and compressed
  file system for ROM based embedded systems.  CramFs is read-only,
  limited to 256MB file systems (with 16MB files), and doesn't support
  16/32 bits uid/gid, hard links and timestamps.
  
  See <file:Documentation/filesystems/cramfs.rst> and
  <file:fs/cramfs/README> for further information.
  
  To compile this as a module, choose M here: the module will be called
  cramfs.  Note that the root file system (the one containing the
  directory /) cannot be compiled as a module.
  
  This filesystem is limited in capabilities and performance on
  purpose to remain small and low on RAM usage. It is most suitable
  for small embedded systems. If you have ample RAM to spare, you may
  consider a more capable compressed filesystem such as SquashFS
  which is much better in terms of performance and features.
  
  If unsure, say N.

CRAMFS_BLOCKDEV
  This option allows the CramFs driver to load data from a regular
  block device such a disk partition or a ramdisk.

CRAMFS_MTD
  This option allows the CramFs driver to load data directly from
  a linear adressed memory range (usually non volatile memory
  like flash) instead of going through the block device layer.
  This saves some memory since no intermediate buffering is
  necessary.
  
  The location of the CramFs image is determined by a
  MTD device capable of direct memory mapping e.g. from
  the 'physmap' map driver or a resulting MTD partition.
  For example, this would mount the cramfs image stored in
  the MTD partition named "xip_fs" on the /mnt mountpoint:
  
  mount -t cramfs mtd:xip_fs /mnt
  
  If unsure, say N.

CRASH_CORE
  No help

CRASH_DUMP
  Generate crash dump after being started by kexec.
  This should be normally only set in special crash dump kernels
  which are loaded in the main kernel with kexec-tools into
  a specially reserved region and then later executed after
  a crash by kdump/kexec. The crash dump kernel must be compiled
  to a memory address not used by the main kernel or BIOS using
  PHYSICAL_START, or it must be built as a relocatable image
  (CONFIG_RELOCATABLE=y).
  For more details see Documentation/admin-guide/kdump/kdump.rst

CRC16
  This option is provided for the case where no in-kernel-tree
  modules require CRC16 functions, but a module built outside
  the kernel tree does. Such modules that use library CRC16
  functions require M here.

CRC32
  This option is provided for the case where no in-kernel-tree
  modules require CRC32/CRC32c functions, but a module built outside
  the kernel tree does. Such modules that use library CRC32/CRC32c
  functions require M here.

CRC32_BIT
  Calculate checksum one bit at a time.  This is VERY slow, but has
  no lookup table.  This is provided as a debugging option.
  
  Only choose this option if you are debugging crc32.

CRC32_SARWATE
  Calculate checksum a byte at a time using Sarwate's algorithm.  This
  is not particularly fast, but has a small 256 byte lookup table.
  
  Only choose this option if you know what you are doing.

CRC32_SELFTEST
  This option enables the CRC32 library functions to perform a
  self test on initialization. The self test computes crc32_le
  and crc32_be over byte strings with random alignment and length
  and computes the total elapsed time and number of bytes processed.

CRC32_SLICEBY4
  Calculate checksum 4 bytes at a time with a clever slicing algorithm.
  This is a bit slower than slice by 8, but has a smaller 4KiB lookup
  table.
  
  Only choose this option if you know what you are doing.

CRC32_SLICEBY8
  Calculate checksum 8 bytes at a time with a clever slicing algorithm.
  This is the fastest algorithm, but comes with a 8KiB lookup table.
  Most modern processors have enough cache to hold this table without
  thrashing the cache.
  
  This is the default implementation choice.  Choose this one unless
  you have a good reason not to.

CRC4
  This option is provided for the case where no in-kernel-tree
  modules require CRC4 functions, but a module built outside
  the kernel tree does. Such modules that use library CRC4
  functions require M here.

CRC64
  This option is provided for the case where no in-kernel-tree
  modules require CRC64 functions, but a module built outside
  the kernel tree does. Such modules that use library CRC64
  functions require M here.

CRC7
  This option is provided for the case where no in-kernel-tree
  modules require CRC7 functions, but a module built outside
  the kernel tree does. Such modules that use library CRC7
  functions require M here.

CRC8
  This option provides CRC8 function. Drivers may select this
  when they need to do cyclic redundancy check according CRC8
  algorithm. Module will be called crc8.

CRC_CCITT
  This option is provided for the case where no in-kernel-tree
  modules require CRC-CCITT functions, but a module built outside
  the kernel tree does. Such modules that use library CRC-CCITT
  functions require M here.

CRC_ITU_T
  This option is provided for the case where no in-kernel-tree
  modules require CRC ITU-T V.41 functions, but a module built outside
  the kernel tree does. Such modules that use library CRC ITU-T V.41
  functions require M here.

CRC_T10DIF
  This option is only needed if a module that's not in the
  kernel tree needs to calculate CRC checks for use with the
  SCSI data integrity subsystem.

CROSS_MEMORY_ATTACH
  Enabling this option adds the system calls process_vm_readv and
  process_vm_writev which allow a process with the correct privileges
  to directly read from or write to another process' address space.
  See the man page for more details.

CROS_EC
  If you say Y here you get support for the ChromeOS Embedded
  Controller (EC) providing keyboard, battery and power services.
  You also need to enable the driver for the bus you are using. The
  protocol for talking to the EC is defined by the bus driver.
  
  To compile this driver as a module, choose M here: the
  module will be called cros_ec.

CROS_EC_CHARDEV
  This driver adds file operations support to talk with the
  ChromeOS EC from userspace via a character device.
  
  To compile this driver as a module, choose M here: the
  module will be called cros_ec_chardev.

CROS_EC_DEBUGFS
  This option exposes the ChromeOS EC device internals to
  userspace.
  
  To compile this driver as a module, choose M here: the
  module will be called cros_ec_debugfs.

CROS_EC_I2C
  If you say Y here, you get support for talking to the ChromeOS
  EC through an I2C bus. This uses a simple byte-level protocol with
  a checksum. Failing accesses will be retried three times to
  improve reliability.

CROS_EC_ISHTP
  If you say Y here, you get support for talking to the ChromeOS EC
  firmware running on Intel Integrated Sensor Hub (ISH), using the
  ISH Transport protocol (ISH-TP). This uses a simple byte-level
  protocol with a checksum.
  
  To compile this driver as a module, choose M here: the
  module will be called cros_ec_ishtp.

CROS_EC_LIGHTBAR
  This option exposes the Chromebook Pixel's lightbar to
  userspace.
  
  To compile this driver as a module, choose M here: the
  module will be called cros_ec_lightbar.

CROS_EC_LPC
  If you say Y here, you get support for talking to the ChromeOS EC
  over an LPC bus, including the LPC Microchip EC (MEC) variant.
  This uses a simple byte-level protocol with a checksum. This is
  used for userspace access only. The kernel typically has its own
  communication methods.
  
  To compile this driver as a module, choose M here: the
  module will be called cros_ec_lpcs.

CROS_EC_PROTO
  ChromeOS EC communication protocol helpers.

CROS_EC_RPMSG
  If you say Y here, you get support for talking to the ChromeOS EC
  through rpmsg. This uses a simple byte-level protocol with a
  checksum. Also since there's no addition EC-to-host interrupt, this
  use a byte in message to distinguish host event from host command.
  
  To compile this driver as a module, choose M here: the
  module will be called cros_ec_rpmsg.

CROS_EC_SENSORHUB
  Allow loading IIO sensors. This driver is loaded by MFD and will in
  turn query the EC and register the sensors.
  It also spreads the sensor data coming from the EC to the IIO sensor
  object.
  
  To compile this driver as a module, choose M here: the
  module will be called cros_ec_sensorhub.

CROS_EC_SPI
  If you say Y here, you get support for talking to the ChromeOS EC
  through a SPI bus, using a byte-level protocol. Since the EC's
  response time cannot be guaranteed, we support ignoring
  'pre-amble' bytes before the response actually starts.

CROS_EC_SYSFS
  This option exposes some sysfs attributes to control and get
  information from ChromeOS EC.
  
  To compile this driver as a module, choose M here: the
  module will be called cros_ec_sysfs.

CROS_EC_TYPEC
  If you say Y here, you get support for accessing Type C connector
  information from the Chrome OS EC.
  
  To compile this driver as a module, choose M here: the module will be
  called cros_ec_typec.

CROS_EC_VBC
  This option exposes the ChromeOS EC vboot context nvram to
  userspace.
  
  To compile this driver as a module, choose M here: the
  module will be called cros_ec_vbc.

CROS_KBD_LED_BACKLIGHT
  This option enables support for the keyboard backlight LEDs on
  select Chrome OS systems.
  
  To compile this driver as a module, choose M here: the
  module will be called cros_kbd_led_backlight.

CROS_USBPD_LOGGER
  This option enables support for logging event data for the USB PD charger
  available in the Embedded Controller on ChromeOS systems.
  
  To compile this driver as a module, choose M here: the
  module will be called cros_usbpd_logger.

CROS_USBPD_NOTIFY
  If you say Y here, you get support for Type-C PD event notifications
  from the ChromeOS EC. On ACPI platorms this driver will bind to the
  GOOG0003 ACPI device, and on platforms which don't have this device it
  will get initialized on ECs which support the feature
  EC_FEATURE_USB_PD.
  
  To compile this driver as a module, choose M here: the
  module will be called cros_usbpd_notify.

CRYPTO
  This option provides the core Cryptographic API.

CRYPTO_842
  This is the 842 algorithm.

CRYPTO_ACOMP
  No help

CRYPTO_ACOMP2
  No help

CRYPTO_ADIANTUM
  Adiantum is a tweakable, length-preserving encryption mode
  designed for fast and secure disk encryption, especially on
  CPUs without dedicated crypto instructions.  It encrypts
  each sector using the XChaCha12 stream cipher, two passes of
  an ε-almost-∆-universal hash function, and an invocation of
  the AES-256 block cipher on a single 16-byte block.  On CPUs
  without AES instructions, Adiantum is much faster than
  AES-XTS.
  
  Adiantum's security is provably reducible to that of its
  underlying stream and block ciphers, subject to a security
  bound.  Unlike XTS, Adiantum is a true wide-block encryption
  mode, so it actually provides an even stronger notion of
  security than XTS, subject to the security bound.
  
  If unsure, say N.

CRYPTO_AEAD
  No help

CRYPTO_AEAD2
  No help

CRYPTO_AEGIS128
  Support for the AEGIS-128 dedicated AEAD algorithm.

CRYPTO_AEGIS128_AESNI_SSE2
  AESNI+SSE2 implementation of the AEGIS-128 dedicated AEAD algorithm.

CRYPTO_AEGIS128_SIMD
  No help

CRYPTO_AES
  AES cipher algorithms (FIPS-197). AES uses the Rijndael
  algorithm.
  
  Rijndael appears to be consistently a very good performer in
  both hardware and software across a wide range of computing
  environments regardless of its use in feedback or non-feedback
  modes. Its key setup time is excellent, and its key agility is
  good. Rijndael's very low memory requirements make it very well
  suited for restricted-space environments, in which it also
  demonstrates excellent performance. Rijndael's operations are
  among the easiest to defend against power and timing attacks.
  
  The AES specifies three key sizes: 128, 192 and 256 bits
  
  See <http://csrc.nist.gov/CryptoToolkit/aes/> for more information.

CRYPTO_AES_NI_INTEL
  Use Intel AES-NI instructions for AES algorithm.
  
  AES cipher algorithms (FIPS-197). AES uses the Rijndael
  algorithm.
  
  Rijndael appears to be consistently a very good performer in
  both hardware and software across a wide range of computing
  environments regardless of its use in feedback or non-feedback
  modes. Its key setup time is excellent, and its key agility is
  good. Rijndael's very low memory requirements make it very well
  suited for restricted-space environments, in which it also
  demonstrates excellent performance. Rijndael's operations are
  among the easiest to defend against power and timing attacks.
  
  The AES specifies three key sizes: 128, 192 and 256 bits
  
  See <http://csrc.nist.gov/encryption/aes/> for more information.
  
  In addition to AES cipher algorithm support, the acceleration
  for some popular block cipher mode is supported too, including
  ECB, CBC, LRW, XTS. The 64 bit version has additional
  acceleration for CTR.

CRYPTO_AES_PPC_SPE
  AES cipher algorithms (FIPS-197). Additionally the acceleration
  for popular block cipher modes ECB, CBC, CTR and XTS is supported.
  This module should only be used for low power (router) devices
  without hardware AES acceleration (e.g. caam crypto). It reduces the
  size of the AES tables from 16KB to 8KB + 256 bytes and mitigates
  timining attacks. Nevertheless it might be not as secure as other
  architecture specific assembler implementations that work on 1KB
  tables or 256 bytes S-boxes.

CRYPTO_AES_S390
  This is the s390 hardware accelerated implementation of the
  AES cipher algorithms (FIPS-197).
  
  As of z9 the ECB and CBC modes are hardware accelerated
  for 128 bit keys.
  As of z10 the ECB and CBC modes are hardware accelerated
  for all AES key sizes.
  As of z196 the CTR mode is hardware accelerated for all AES
  key sizes and XTS mode is hardware accelerated for 256 and
  512 bit keys.

CRYPTO_AES_SPARC64
  Use SPARC64 crypto opcodes for AES algorithm.
  
  AES cipher algorithms (FIPS-197). AES uses the Rijndael
  algorithm.
  
  Rijndael appears to be consistently a very good performer in
  both hardware and software across a wide range of computing
  environments regardless of its use in feedback or non-feedback
  modes. Its key setup time is excellent, and its key agility is
  good. Rijndael's very low memory requirements make it very well
  suited for restricted-space environments, in which it also
  demonstrates excellent performance. Rijndael's operations are
  among the easiest to defend against power and timing attacks.
  
  The AES specifies three key sizes: 128, 192 and 256 bits
  
  See <http://csrc.nist.gov/encryption/aes/> for more information.
  
  In addition to AES cipher algorithm support, the acceleration
  for some popular block cipher mode is supported too, including
  ECB and CBC.

CRYPTO_AES_TI
  This is a generic implementation of AES that attempts to eliminate
  data dependent latencies as much as possible without affecting
  performance too much. It is intended for use by the generic CCM
  and GCM drivers, and other CTR or CMAC/XCBC based modes that rely
  solely on encryption (although decryption is supported as well, but
  with a more dramatic performance hit)
  
  Instead of using 16 lookup tables of 1 KB each, (8 for encryption and
  8 for decryption), this implementation only uses just two S-boxes of
  256 bytes each, and attempts to eliminate data dependent latencies by
  prefetching the entire table into the cache at the start of each
  block. Interrupts are also disabled to avoid races where cachelines
  are evicted when the CPU is interrupted to do something else.

CRYPTO_AKCIPHER
  No help

CRYPTO_AKCIPHER2
  No help

CRYPTO_ALGAPI
  This option provides the API for cryptographic algorithms.

CRYPTO_ALGAPI2
  No help

CRYPTO_ANSI_CPRNG
  This option enables the generic pseudo random number generator
  for cryptographic modules.  Uses the Algorithm specified in
  ANSI X9.31 A.2.4. Note that this option must be enabled if
  CRYPTO_FIPS is selected

CRYPTO_ANUBIS
  Anubis cipher algorithm.
  
  Anubis is a variable key length cipher which can use keys from
  128 bits to 320 bits in length.  It was evaluated as a entrant
  in the NESSIE competition.
  
  See also:
  <https://www.cosic.esat.kuleuven.be/nessie/reports/>
  <http://www.larc.usp.br/~pbarreto/AnubisPage.html>

CRYPTO_ARC4
  ARC4 cipher algorithm.
  
  ARC4 is a stream cipher using keys ranging from 8 bits to 2048
  bits in length.  This algorithm is required for driver-based
  WEP, but it should not be for other purposes because of the
  weakness of the algorithm.

CRYPTO_ARCH_HAVE_LIB_BLAKE2S
  Declares whether the architecture provides an arch-specific
  accelerated implementation of the Blake2s library interface,
  either builtin or as a module.

CRYPTO_ARCH_HAVE_LIB_CHACHA
  Declares whether the architecture provides an arch-specific
  accelerated implementation of the ChaCha library interface,
  either builtin or as a module.

CRYPTO_ARCH_HAVE_LIB_CURVE25519
  Declares whether the architecture provides an arch-specific
  accelerated implementation of the Curve25519 library interface,
  either builtin or as a module.

CRYPTO_ARCH_HAVE_LIB_POLY1305
  Declares whether the architecture provides an arch-specific
  accelerated implementation of the Poly1305 library interface,
  either builtin or as a module.

CRYPTO_AUTHENC
  Authenc: Combined mode wrapper for IPsec.
  This is required for IPSec.

CRYPTO_BLAKE2B
  Implementation of cryptographic hash function BLAKE2b (or just BLAKE2),
  optimized for 64bit platforms and can produce digests of any size
  between 1 to 64.  The keyed hash is also implemented.
  
  This module provides the following algorithms:
  
  - blake2b-160
  - blake2b-256
  - blake2b-384
  - blake2b-512
  
  See https://blake2.net for further information.

CRYPTO_BLAKE2S
  Implementation of cryptographic hash function BLAKE2s
  optimized for 8-32bit platforms and can produce digests of any size
  between 1 to 32.  The keyed hash is also implemented.
  
  This module provides the following algorithms:
  
  - blake2s-128
  - blake2s-160
  - blake2s-224
  - blake2s-256
  
  See https://blake2.net for further information.

CRYPTO_BLAKE2S_X86
  No help

CRYPTO_BLOWFISH
  Blowfish cipher algorithm, by Bruce Schneier.
  
  This is a variable key length cipher which can use keys from 32
  bits to 448 bits in length.  It's fast, simple and specifically
  designed for use on "large microprocessors".
  
  See also:
  <https://www.schneier.com/blowfish.html>

CRYPTO_BLOWFISH_COMMON
  Common parts of the Blowfish cipher algorithm shared by the
  generic c and the assembler implementations.
  
  See also:
  <https://www.schneier.com/blowfish.html>

CRYPTO_BLOWFISH_X86_64
  Blowfish cipher algorithm (x86_64), by Bruce Schneier.
  
  This is a variable key length cipher which can use keys from 32
  bits to 448 bits in length.  It's fast, simple and specifically
  designed for use on "large microprocessors".
  
  See also:
  <https://www.schneier.com/blowfish.html>

CRYPTO_CAMELLIA
  Camellia cipher algorithms module.
  
  Camellia is a symmetric key block cipher developed jointly
  at NTT and Mitsubishi Electric Corporation.
  
  The Camellia specifies three key sizes: 128, 192 and 256 bits.
  
  See also:
  <https://info.isl.ntt.co.jp/crypt/eng/camellia/index_s.html>

CRYPTO_CAMELLIA_AESNI_AVX2_X86_64
  Camellia cipher algorithm module (x86_64/AES-NI/AVX2).
  
  Camellia is a symmetric key block cipher developed jointly
  at NTT and Mitsubishi Electric Corporation.
  
  The Camellia specifies three key sizes: 128, 192 and 256 bits.
  
  See also:
  <https://info.isl.ntt.co.jp/crypt/eng/camellia/index_s.html>

CRYPTO_CAMELLIA_AESNI_AVX_X86_64
  Camellia cipher algorithm module (x86_64/AES-NI/AVX).
  
  Camellia is a symmetric key block cipher developed jointly
  at NTT and Mitsubishi Electric Corporation.
  
  The Camellia specifies three key sizes: 128, 192 and 256 bits.
  
  See also:
  <https://info.isl.ntt.co.jp/crypt/eng/camellia/index_s.html>

CRYPTO_CAMELLIA_SPARC64
  Camellia cipher algorithm module (SPARC64).
  
  Camellia is a symmetric key block cipher developed jointly
  at NTT and Mitsubishi Electric Corporation.
  
  The Camellia specifies three key sizes: 128, 192 and 256 bits.
  
  See also:
  <https://info.isl.ntt.co.jp/crypt/eng/camellia/index_s.html>

CRYPTO_CAMELLIA_X86_64
  Camellia cipher algorithm module (x86_64).
  
  Camellia is a symmetric key block cipher developed jointly
  at NTT and Mitsubishi Electric Corporation.
  
  The Camellia specifies three key sizes: 128, 192 and 256 bits.
  
  See also:
  <https://info.isl.ntt.co.jp/crypt/eng/camellia/index_s.html>

CRYPTO_CAST5
  The CAST5 encryption algorithm (synonymous with CAST-128) is
  described in RFC2144.

CRYPTO_CAST5_AVX_X86_64
  The CAST5 encryption algorithm (synonymous with CAST-128) is
  described in RFC2144.
  
  This module provides the Cast5 cipher algorithm that processes
  sixteen blocks parallel using the AVX instruction set.

CRYPTO_CAST6
  The CAST6 encryption algorithm (synonymous with CAST-256) is
  described in RFC2612.

CRYPTO_CAST6_AVX_X86_64
  The CAST6 encryption algorithm (synonymous with CAST-256) is
  described in RFC2612.
  
  This module provides the Cast6 cipher algorithm that processes
  eight blocks parallel using the AVX instruction set.

CRYPTO_CAST_COMMON
  Common parts of the CAST cipher algorithms shared by the
  generic c and the assembler implementations.

CRYPTO_CBC
  CBC: Cipher Block Chaining mode
  This block cipher algorithm is required for IPSec.

CRYPTO_CCM
  Support for Counter with CBC MAC. Required for IPsec.

CRYPTO_CFB
  CFB: Cipher FeedBack mode
  This block cipher algorithm is required for TPM2 Cryptography.

CRYPTO_CHACHA20
  The ChaCha20, XChaCha20, and XChaCha12 stream cipher algorithms.
  
  ChaCha20 is a 256-bit high-speed stream cipher designed by Daniel J.
  Bernstein and further specified in RFC7539 for use in IETF protocols.
  This is the portable C implementation of ChaCha20.  See also:
  <https://cr.yp.to/chacha/chacha-20080128.pdf>
  
  XChaCha20 is the application of the XSalsa20 construction to ChaCha20
  rather than to Salsa20.  XChaCha20 extends ChaCha20's nonce length
  from 64 bits (or 96 bits using the RFC7539 convention) to 192 bits,
  while provably retaining ChaCha20's security.  See also:
  <https://cr.yp.to/snuffle/xsalsa-20081128.pdf>
  
  XChaCha12 is XChaCha20 reduced to 12 rounds, with correspondingly
  reduced security margin but increased performance.  It can be needed
  in some performance-sensitive scenarios.

CRYPTO_CHACHA20POLY1305
  ChaCha20-Poly1305 AEAD support, RFC7539.
  
  Support for the AEAD wrapper using the ChaCha20 stream cipher combined
  with the Poly1305 authenticator. It is defined in RFC7539 for use in
  IETF protocols.

CRYPTO_CHACHA20_X86_64
  SSSE3, AVX2, and AVX-512VL optimized implementations of the ChaCha20,
  XChaCha20, and XChaCha12 stream ciphers.

CRYPTO_CHACHA_MIPS
  No help

CRYPTO_CMAC
  Cipher-based Message Authentication Code (CMAC) specified by
  The National Institute of Standards and Technology (NIST).
  
  https://tools.ietf.org/html/rfc4493
  http://csrc.nist.gov/publications/nistpubs/800-38B/SP_800-38B.pdf

CRYPTO_CRC32
  CRC-32-IEEE 802.3 cyclic redundancy-check algorithm.
  Shash crypto api wrappers to crc32_le function.

CRYPTO_CRC32C
  Castagnoli, et al Cyclic Redundancy-Check Algorithm.  Used
  by iSCSI for header and data digests and by others.
  See Castagnoli93.  Module will be crc32c.

CRYPTO_CRC32C_INTEL
  In Intel processor with SSE4.2 supported, the processor will
  support CRC32C implementation using hardware accelerated CRC32
  instruction. This option will create 'crc32c-intel' module,
  which will enable any routine to use the CRC32 instruction to
  gain performance compared with software implementation.
  Module will be crc32c-intel.

CRYPTO_CRC32C_SPARC64
  CRC32c CRC algorithm implemented using sparc64 crypto instructions,
  when available.

CRYPTO_CRC32C_VPMSUM
  CRC32c algorithm implemented using vector polynomial multiply-sum
  (vpmsum) instructions, introduced in POWER8. Enable on POWER8
  and newer processors for improved performance.

CRYPTO_CRC32_MIPS
  CRC32c and CRC32 CRC algorithms implemented using mips crypto
  instructions, when available.

CRYPTO_CRC32_PCLMUL
  From Intel Westmere and AMD Bulldozer processor with SSE4.2
  and PCLMULQDQ supported, the processor will support
  CRC32 PCLMULQDQ implementation using hardware accelerated PCLMULQDQ
  instruction. This option will create 'crc32-pclmul' module,
  which will enable any routine to use the CRC-32-IEEE 802.3 checksum
  and gain better performance as compared with the table implementation.

CRYPTO_CRC32_S390
  Select this option if you want to use hardware accelerated
  implementations of CRC algorithms.  With this option, you
  can optimize the computation of CRC-32 (IEEE 802.3 Ethernet)
  and CRC-32C (Castagnoli).
  
  It is available with IBM z13 or later.

CRYPTO_CRCT10DIF
  CRC T10 Data Integrity Field computation is being cast as
  a crypto transform.  This allows for faster crc t10 diff
  transforms to be used if they are available.

CRYPTO_CRCT10DIF_PCLMUL
  For x86_64 processors with SSE4.2 and PCLMULQDQ supported,
  CRC T10 DIF PCLMULQDQ computation can be hardware
  accelerated PCLMULQDQ instruction. This option will create
  'crct10dif-pclmul' module, which is faster when computing the
  crct10dif checksum as compared with the generic table implementation.

CRYPTO_CRCT10DIF_VPMSUM
  CRC10T10DIF algorithm implemented using vector polynomial
  multiply-sum (vpmsum) instructions, introduced in POWER8. Enable on
  POWER8 and newer processors for improved performance.

CRYPTO_CRYPTD
  This is a generic software asynchronous crypto daemon that
  converts an arbitrary synchronous software crypto algorithm
  into an asynchronous algorithm that executes in a kernel thread.

CRYPTO_CTR
  CTR: Counter mode
  This block cipher algorithm is required for IPSec.

CRYPTO_CTS
  CTS: Cipher Text Stealing
  This is the Cipher Text Stealing mode as described by
  Section 8 of rfc2040 and referenced by rfc3962
  (rfc3962 includes errata information in its Appendix A) or
  CBC-CS3 as defined by NIST in Sp800-38A addendum from Oct 2010.
  This mode is required for Kerberos gss mechanism support
  for AES encryption.
  
  See: https://csrc.nist.gov/publications/detail/sp/800-38a/addendum/final

CRYPTO_CURVE25519
  No help

CRYPTO_CURVE25519_X86
  No help

CRYPTO_DEFLATE
  This is the Deflate algorithm (RFC1951), specified for use in
  IPSec with the IPCOMP protocol (RFC3173, RFC2394).
  
  You will most probably want this if using IPSec.

CRYPTO_DES
  DES cipher algorithm (FIPS 46-2), and Triple DES EDE (FIPS 46-3).

CRYPTO_DES3_EDE_X86_64
  Triple DES EDE (FIPS 46-3) algorithm.
  
  This module provides implementation of the Triple DES EDE cipher
  algorithm that is optimized for x86-64 processors. Two versions of
  algorithm are provided; regular processing one input block and
  one that processes three blocks parallel.

CRYPTO_DES_S390
  This is the s390 hardware accelerated implementation of the
  DES cipher algorithm (FIPS 46-2), and Triple DES EDE (FIPS 46-3).
  
  As of z990 the ECB and CBC mode are hardware accelerated.
  As of z196 the CTR mode is hardware accelerated.

CRYPTO_DES_SPARC64
  DES cipher algorithm (FIPS 46-2), and Triple DES EDE (FIPS 46-3),
  optimized using SPARC64 crypto opcodes.

CRYPTO_DEV_ALLWINNER
  Say Y here to get to see options for Allwinner hardware crypto devices

CRYPTO_DEV_AMLOGIC_GXL
  Select y here to have support for the cryptographic offloader
  available on Amlogic GXL SoC.
  This hardware handles AES ciphers in ECB/CBC mode.
  
  To compile this driver as a module, choose M here: the module
  will be called amlogic-gxl-crypto.

CRYPTO_DEV_AMLOGIC_GXL_DEBUG
  Say y to enable amlogic-crypto debug stats.
  This will create /sys/kernel/debug/gxl-crypto/stats for displaying
  the number of requests per flow and per algorithm.

CRYPTO_DEV_ARTPEC6
  Enables the driver for the on-chip crypto accelerator
  of Axis ARTPEC SoCs.
  
  To compile this driver as a module, choose M here.

CRYPTO_DEV_ATMEL_AES
  Some Atmel processors have AES hw accelerator.
  Select this if you want to use the Atmel module for
  AES algorithms.
  
  To compile this driver as a module, choose M here: the module
  will be called atmel-aes.

CRYPTO_DEV_ATMEL_AUTHENC
  Some Atmel processors can combine the AES and SHA hw accelerators
  to enhance support of IPSEC/SSL.
  Select this if you want to use the Atmel modules for
  authenc(hmac(shaX),Y(cbc)) algorithms.

CRYPTO_DEV_ATMEL_ECC
  Microhip / Atmel ECC hw accelerator.
  Select this if you want to use the Microchip / Atmel module for
  ECDH algorithm.
  
  To compile this driver as a module, choose M here: the module
  will be called atmel-ecc.

CRYPTO_DEV_ATMEL_I2C
  No help

CRYPTO_DEV_ATMEL_SHA
  Some Atmel processors have SHA1/SHA224/SHA256/SHA384/SHA512
  hw accelerator.
  Select this if you want to use the Atmel module for
  SHA1/SHA224/SHA256/SHA384/SHA512 algorithms.
  
  To compile this driver as a module, choose M here: the module
  will be called atmel-sha.

CRYPTO_DEV_ATMEL_SHA204A
  Microhip / Atmel SHA accelerator and RNG.
  Select this if you want to use the Microchip / Atmel SHA204A
  module as a random number generator. (Other functions of the
  chip are currently not exposed by this driver)
  
  To compile this driver as a module, choose M here: the module
  will be called atmel-sha204a.

CRYPTO_DEV_ATMEL_TDES
  Some Atmel processors have DES/TDES hw accelerator.
  Select this if you want to use the Atmel module for
  DES/TDES algorithms.
  
  To compile this driver as a module, choose M here: the module
  will be called atmel-tdes.

CRYPTO_DEV_BCM_SPU
  This driver provides support for Broadcom crypto acceleration using the
  Secure Processing Unit (SPU). The SPU driver registers skcipher,
  ahash, and aead algorithms with the kernel cryptographic API.

CRYPTO_DEV_CAVIUM_ZIP
  Select this option if you want to enable compression/decompression
  acceleration on Cavium's ARM based SoCs

CRYPTO_DEV_CCP
  The AMD Secure Processor provides support for the Cryptographic Coprocessor
  (CCP) and the Platform Security Processor (PSP) devices.

CRYPTO_DEV_CCP_CRYPTO
  Support for using the cryptographic API with the AMD Cryptographic
  Coprocessor. This module supports offload of SHA and AES algorithms.
  If you choose 'M' here, this module will be called ccp_crypto.

CRYPTO_DEV_CCP_DD
  Provides AMD Secure Processor device driver.
  If you choose 'M' here, this module will be called ccp.

CRYPTO_DEV_CCP_DEBUGFS
  Expose CCP device information such as operation statistics, feature
  information, and descriptor queue contents.

CRYPTO_DEV_CCREE
  Say 'Y' to enable a driver for the REE interface of the Arm
  TrustZone CryptoCell family of processors. Currently the
  CryptoCell 713, 703, 712, 710 and 630 are supported.
  Choose this if you wish to use hardware acceleration of
  cryptographic operations on the system REE.
  If unsure say Y.

CRYPTO_DEV_CHELSIO
  The Chelsio Crypto Co-processor driver for T6 adapters.
  
  For general information about Chelsio and our products, visit
  our website at <http://www.chelsio.com>.
  
  For customer support, please visit our customer support page at
  <http://www.chelsio.com/support.html>.
  
  Please send feedback to <linux-bugs@chelsio.com>.
  
  To compile this driver as a module, choose M here: the module
  will be called chcr.

CRYPTO_DEV_CHELSIO_TLS
  Support Chelsio Inline TLS with Chelsio crypto accelerator.
  Enable inline TLS support for Tx and Rx.
  
  To compile this driver as a module, choose M here: the module
  will be called chtls.

CRYPTO_DEV_CPT
  No help

CRYPTO_DEV_EXYNOS_HASH
  Select this to offload Exynos from HASH MD5/SHA1/SHA256.
  This will select software SHA1, MD5 and SHA256 as they are
  needed for small and zero-size messages.
  HASH algorithms will be disabled if EXYNOS_RNG
  is enabled due to hw conflict.

CRYPTO_DEV_EXYNOS_RNG
  This driver provides kernel-side support through the
  cryptographic API for the pseudo random number generator hardware
  found on Exynos SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called exynos-rng.
  
  If unsure, say Y.

CRYPTO_DEV_FSL_CAAM
  Enables the driver module for Freescale's Cryptographic Accelerator
  and Assurance Module (CAAM), also known as the SEC version 4 (SEC4).
  This module creates job ring devices, and configures h/w
  to operate as a DPAA component automatically, depending
  on h/w feature availability.
  
  To compile this driver as a module, choose M here: the module
  will be called caam.

CRYPTO_DEV_FSL_CAAM_AHASH_API
  Selecting this will offload ahash for users of the
  scatterlist crypto API to the SEC4 via job ring.

CRYPTO_DEV_FSL_CAAM_AHASH_API_DESC
  No help

CRYPTO_DEV_FSL_CAAM_COMMON
  No help

CRYPTO_DEV_FSL_CAAM_CRYPTO_API
  Selecting this will offload crypto for users of the
  scatterlist crypto API (such as the linux native IPSec
  stack) to the SEC4 via job ring.

CRYPTO_DEV_FSL_CAAM_CRYPTO_API_DESC
  No help

CRYPTO_DEV_FSL_CAAM_CRYPTO_API_QI
  Selecting this will use CAAM Queue Interface (QI) for sending
  & receiving crypto jobs to/from CAAM. This gives better performance
  than job ring interface when the number of cores are more than the
  number of job rings assigned to the kernel. The number of portals
  assigned to the kernel should also be more than the number of
  job rings.

CRYPTO_DEV_FSL_CAAM_DEBUG
  Selecting this will enable printing of various debug
  information in the CAAM driver.

CRYPTO_DEV_FSL_CAAM_INTC
  Enable the Job Ring's interrupt coalescing feature.
  
  Note: the driver already provides adequate
  interrupt coalescing in software.

CRYPTO_DEV_FSL_CAAM_INTC_COUNT_THLD
  Select number of descriptor completions to queue before
  raising an interrupt, in the range 1-255. Note that a selection
  of 1 functionally defeats the coalescing feature, and a selection
  equal or greater than the job ring size will force timeouts.

CRYPTO_DEV_FSL_CAAM_INTC_TIME_THLD
  Select number of bus clocks/64 to timeout in the case that one or
  more descriptor completions are queued without reaching the count
  threshold. Range is 1-65535.

CRYPTO_DEV_FSL_CAAM_JR
  Enables the driver module for Job Rings which are part of
  Freescale's Cryptographic Accelerator
  and Assurance Module (CAAM). This module adds a job ring operation
  interface.
  
  To compile this driver as a module, choose M here: the module
  will be called caam_jr.

CRYPTO_DEV_FSL_CAAM_PKC_API
  Selecting this will allow SEC Public key support for RSA.
  Supported cryptographic primitives: encryption, decryption,
  signature and verification.

CRYPTO_DEV_FSL_CAAM_RINGSIZE
  Select size of Job Rings as a power of 2, within the
  range 2-9 (ring size 4-512).
  Examples:
        2 => 4
        3 => 8
        4 => 16
        5 => 32
        6 => 64
        7 => 128
        8 => 256
        9 => 512

CRYPTO_DEV_FSL_CAAM_RNG_API
  Selecting this will register the SEC4 hardware rng to
  the hw_random API for supplying the kernel entropy pool.

CRYPTO_DEV_FSL_DPAA2_CAAM
  CAAM driver for QorIQ Data Path Acceleration Architecture 2.
  It handles DPSECI DPAA2 objects that sit on the Management Complex
  (MC) fsl-mc bus.
  
  To compile this as a module, choose M here: the module
  will be called dpaa2_caam.

CRYPTO_DEV_GEODE
  Say 'Y' here to use the AMD Geode LX processor on-board AES
  engine for the CryptoAPI AES algorithm.
  
  To compile this driver as a module, choose M here: the module
  will be called geode-aes.

CRYPTO_DEV_HIFN_795X
  This option allows you to have support for HIFN 795x crypto adapters.

CRYPTO_DEV_HIFN_795X_RNG
  Select this option if you want to enable the random number generator
  on the HIFN 795x crypto adapters.

CRYPTO_DEV_HISI_HPRE
  Support for HiSilicon HPRE(High Performance RSA Engine)
  accelerator, which can accelerate RSA and DH algorithms.

CRYPTO_DEV_HISI_QM
  HiSilicon accelerator engines use a common queue management
  interface. Specific engine driver may use this module.

CRYPTO_DEV_HISI_SEC
  Support for Hisilicon SEC Engine in Hip06 and Hip07
  
  To compile this as a module, choose M here: the module
  will be called hisi_sec.

CRYPTO_DEV_HISI_SEC2
  Support for HiSilicon SEC Engine of version 2 in crypto subsystem.
  It provides AES, SM4, and 3DES algorithms with ECB
  CBC, and XTS cipher mode, and AEAD algorithms.
  
  To compile this as a module, choose M here: the module
  will be called hisi_sec2.

CRYPTO_DEV_HISI_TRNG
  Support for HiSilicon TRNG Driver.

CRYPTO_DEV_HISI_ZIP
  Support for HiSilicon ZIP Driver

CRYPTO_DEV_IMGTEC_HASH
  This driver interfaces with the Imagination Technologies
  hardware hash accelerator. Supporting MD5/SHA1/SHA224/SHA256
  hashing algorithms.

CRYPTO_DEV_IXP4XX
  Driver for the IXP4xx NPE crypto engine.

CRYPTO_DEV_KEEMBAY_OCS_AES_SM4
  Support for Intel Keem Bay Offload and Crypto Subsystem (OCS) AES and
  SM4 cipher hardware acceleration for use with Crypto API.
  
  Provides HW acceleration for the following transformations:
  cbc(aes), ctr(aes), ccm(aes), gcm(aes), cbc(sm4), ctr(sm4), ccm(sm4)
  and gcm(sm4).
  
  Optionally, support for the following transformations can also be
  enabled: ecb(aes), cts(cbc(aes)), ecb(sm4) and cts(cbc(sm4)).

CRYPTO_DEV_KEEMBAY_OCS_AES_SM4_CTS
  Support for Intel Keem Bay Offload and Crypto Subsystem (OCS)
  AES/SM4 CBC with CTS mode hardware acceleration for use with
  Crypto API.
  
  Provides OCS version of cts(cbc(aes)) and cts(cbc(sm4)).
  
  Intel does not recommend use of CTS mode with AES/SM4.

CRYPTO_DEV_KEEMBAY_OCS_AES_SM4_ECB
  Support for Intel Keem Bay Offload and Crypto Subsystem (OCS)
  AES/SM4 ECB mode hardware acceleration for use with Crypto API.
  
  Provides OCS version of ecb(aes) and ecb(sm4)
  
  Intel does not recommend use of ECB mode with AES/SM4.

CRYPTO_DEV_MARVELL
  No help

CRYPTO_DEV_MARVELL_CESA
  This driver allows you to utilize the Cryptographic Engines and
  Security Accelerator (CESA) which can be found on MVEBU and ORION
  platforms.
  This driver supports CPU offload through DMA transfers.

CRYPTO_DEV_MEDIATEK
  This driver allows you to utilize the hardware crypto accelerator
  EIP97 which can be found on the MT7623 MT2701, MT8521p, etc ....
  Select this if you want to use it for AES/SHA1/SHA2 algorithms.

CRYPTO_DEV_MXS_DCP
  The Freescale i.MX23/i.MX28 has SHA1/SHA256 and AES128 CBC/ECB
  co-processor on the die.
  
  To compile this driver as a module, choose M here: the module
  will be called mxs-dcp.

CRYPTO_DEV_NIAGARA2
  Each core of a Niagara2 processor contains a Stream
  Processing Unit, which itself contains several cryptographic
  sub-units.  One set provides the Modular Arithmetic Unit,
  used for SSL offload.  The other set provides the Cipher
  Group, which can perform encryption, decryption, hashing,
  checksumming, and raw copies.

CRYPTO_DEV_NITROX
  No help

CRYPTO_DEV_NITROX_CNN55XX
  Support for Cavium NITROX family CNN55XX driver
  for accelerating crypto workloads.
  
  To compile this as a module, choose M here: the module
  will be called n5pf.

CRYPTO_DEV_NX
  This enables support for the NX hardware cryptographic accelerator
  coprocessor that is in IBM PowerPC P7+ or later processors.  This
  does not actually enable any drivers, it only allows you to select
  which acceleration type (encryption and/or compression) to enable.

CRYPTO_DEV_NX_COMPRESS
  Support for PowerPC Nest (NX) compression acceleration. This
  module supports acceleration for compressing memory with the 842
  algorithm using the cryptographic API.  One of the platform
  drivers must be selected also.  If you choose 'M' here, this
  module will be called nx_compress.

CRYPTO_DEV_NX_COMPRESS_POWERNV
  Support for PowerPC Nest (NX) compression acceleration. This
  module supports acceleration for compressing memory with the 842
  algorithm.  This supports NX hardware on the PowerNV platform.
  If you choose 'M' here, this module will be called nx_compress_powernv.

CRYPTO_DEV_NX_COMPRESS_PSERIES
  Support for PowerPC Nest (NX) compression acceleration. This
  module supports acceleration for compressing memory with the 842
  algorithm.  This supports NX hardware on the pSeries platform.
  If you choose 'M' here, this module will be called nx_compress_pseries.

CRYPTO_DEV_NX_ENCRYPT
  Support for PowerPC Nest (NX) encryption acceleration. This
  module supports acceleration for AES and SHA2 algorithms on
  the pSeries platform.  If you choose 'M' here, this module
  will be called nx_crypto.

CRYPTO_DEV_OCTEONTX_CPT
  This driver allows you to utilize the Marvell Cryptographic
  Accelerator Unit(CPT) found in OcteonTX series of processors.
  
  To compile this driver as module, choose M here:
  the modules will be called octeontx-cpt and octeontx-cptvf

CRYPTO_DEV_OMAP
  OMAP processors have various crypto HW accelerators. Select this if
  you want to use the OMAP modules for any of the crypto algorithms.

CRYPTO_DEV_OMAP_AES
  OMAP processors have AES module accelerator. Select this if you
  want to use the OMAP module for AES algorithms.

CRYPTO_DEV_OMAP_DES
  OMAP processors have DES/3DES module accelerator. Select this if you
  want to use the OMAP module for DES and 3DES algorithms. Currently
  the ECB and CBC modes of operation are supported by the driver. Also
  accesses made on unaligned boundaries are supported.

CRYPTO_DEV_OMAP_SHAM
  OMAP processors have MD5/SHA1/SHA2 hw accelerator. Select this if you
  want to use the OMAP module for MD5/SHA1/SHA2 algorithms.

CRYPTO_DEV_PADLOCK
  Some VIA processors come with an integrated crypto engine
  (so called VIA PadLock ACE, Advanced Cryptography Engine)
  that provides instructions for very fast cryptographic
  operations with supported algorithms.
  
  The instructions are used only when the CPU supports them.
  Otherwise software encryption is used.

CRYPTO_DEV_PADLOCK_AES
  Use VIA PadLock for AES algorithm.
  
  Available in VIA C3 and newer CPUs.
  
  If unsure say M. The compiled module will be
  called padlock-aes.

CRYPTO_DEV_PADLOCK_SHA
  Use VIA PadLock for SHA1/SHA256 algorithms.
  
  Available in VIA C7 and newer processors.
  
  If unsure say M. The compiled module will be
  called padlock-sha.

CRYPTO_DEV_PICOXCELL
  This option enables support for the hardware offload engines in the
  Picochip picoXcell SoC devices. Select this for IPSEC ESP offload
  and for 3gpp Layer 2 ciphering support.
  
  Saying m here will build a module named picoxcell_crypto.

CRYPTO_DEV_PPC4XX
  This option allows you to have support for AMCC crypto acceleration.

CRYPTO_DEV_QAT
  No help

CRYPTO_DEV_QAT_4XXX
  Support for Intel(R) QuickAssist Technology QAT_4xxx
  for accelerating crypto and compression workloads.
  
  To compile this as a module, choose M here: the module
  will be called qat_4xxx.

CRYPTO_DEV_QAT_C3XXX
  Support for Intel(R) C3xxx with Intel(R) QuickAssist Technology
  for accelerating crypto and compression workloads.
  
  To compile this as a module, choose M here: the module
  will be called qat_c3xxx.

CRYPTO_DEV_QAT_C3XXXVF
  Support for Intel(R) C3xxx with Intel(R) QuickAssist Technology
  Virtual Function for accelerating crypto and compression workloads.
  
  To compile this as a module, choose M here: the module
  will be called qat_c3xxxvf.

CRYPTO_DEV_QAT_C62X
  Support for Intel(R) C62x with Intel(R) QuickAssist Technology
  for accelerating crypto and compression workloads.
  
  To compile this as a module, choose M here: the module
  will be called qat_c62x.

CRYPTO_DEV_QAT_C62XVF
  Support for Intel(R) C62x with Intel(R) QuickAssist Technology
  Virtual Function for accelerating crypto and compression workloads.
  
  To compile this as a module, choose M here: the module
  will be called qat_c62xvf.

CRYPTO_DEV_QAT_DH895xCC
  Support for Intel(R) DH895xcc with Intel(R) QuickAssist Technology
  for accelerating crypto and compression workloads.
  
  To compile this as a module, choose M here: the module
  will be called qat_dh895xcc.

CRYPTO_DEV_QAT_DH895xCCVF
  Support for Intel(R) DH895xcc with Intel(R) QuickAssist Technology
  Virtual Function for accelerating crypto and compression workloads.
  
  To compile this as a module, choose M here: the module
  will be called qat_dh895xccvf.

CRYPTO_DEV_QCE
  This driver supports Qualcomm crypto engine accelerator
  hardware. To compile this driver as a module, choose M here. The
  module will be called qcrypto.

CRYPTO_DEV_QCE_ENABLE_ALL
  Enable all supported algorithms:
        - AES (CBC, CTR, ECB, XTS)
        - 3DES (CBC, ECB)
        - DES (CBC, ECB)
        - SHA1, HMAC-SHA1
        - SHA256, HMAC-SHA256

CRYPTO_DEV_QCE_ENABLE_SHA
  Enable hashes/HMAC algorithms only:
        - SHA1, HMAC-SHA1
        - SHA256, HMAC-SHA256

CRYPTO_DEV_QCE_ENABLE_SKCIPHER
  Enable symmetric-key ciphers only:
        - AES (CBC, CTR, ECB, XTS)
        - 3DES (ECB, CBC)
        - DES (ECB, CBC)

CRYPTO_DEV_QCE_SHA
  No help

CRYPTO_DEV_QCE_SKCIPHER
  No help

CRYPTO_DEV_QCE_SW_MAX_LEN
  This sets the default maximum request size to perform AES requests
  using software instead of the crypto engine.  It can be changed by
  setting the aes_sw_max_len parameter.
  
  Small blocks are processed faster in software than hardware.
  Considering the 256-bit ciphers, software is 2-3 times faster than
  qce at 256-bytes, 30% faster at 512, and about even at 768-bytes.
  With 128-bit keys, the break-even point would be around 1024-bytes.
  
  The default is set a little lower, to 512 bytes, to balance the
  cost in CPU usage.  The minimum recommended setting is 16-bytes
  (1 AES block), since AES-GCM will fail if you set it lower.
  Setting this to zero will send all requests to the hardware.
  
  Note that 192-bit keys are not supported by the hardware and are
  always processed by the software fallback, and all DES requests
  are done by the hardware.

CRYPTO_DEV_QCOM_RNG
  This driver provides support for the Random Number
  Generator hardware found on Qualcomm SoCs.
  
  To compile this driver as a module, choose M here. The
  module will be called qcom-rng. If unsure, say N.

CRYPTO_DEV_ROCKCHIP
  This driver interfaces with the hardware crypto accelerator.
  Supporting cbc/ecb chainmode, and aes/des/des3_ede cipher mode.

CRYPTO_DEV_S5P
  This option allows you to have support for S5P crypto acceleration.
  Select this to offload Samsung S5PV210 or S5PC110, Exynos from AES
  algorithms execution.

CRYPTO_DEV_SA2UL
  K3 devices include a security accelerator engine that may be
  used for crypto offload.  Select this if you want to use hardware
  acceleration for cryptographic algorithms on these devices.

CRYPTO_DEV_SAFEXCEL
  This driver interfaces with the SafeXcel EIP-97 and EIP-197 cryptographic
  engines designed by Inside Secure. It currently accelerates DES, 3DES and
  AES block ciphers in ECB and CBC mode, as well as SHA1, SHA224, SHA256,
  SHA384 and SHA512 hash algorithms for both basic hash and HMAC.
  Additionally, it accelerates combined AES-CBC/HMAC-SHA AEAD operations.

CRYPTO_DEV_SAHARA
  This option enables support for the SAHARA HW crypto accelerator
  found in some Freescale i.MX chips.

CRYPTO_DEV_SP_CCP
  Provides the support for AMD Cryptographic Coprocessor (CCP) device
  which can be used to offload encryption operations such as SHA, AES
  and more.

CRYPTO_DEV_SP_PSP
  Provide support for the AMD Platform Security Processor (PSP).
  The PSP is a dedicated processor that provides support for key
  management commands in Secure Encrypted Virtualization (SEV) mode,
  along with software-based Trusted Execution Environment (TEE) to
  enable third-party trusted applications.

CRYPTO_DEV_STM32_CRC
  This enables support for the CRC32 hw accelerator which can be found
  on STMicroelectronics STM32 SOC.

CRYPTO_DEV_STM32_CRYP
  This enables support for the CRYP (AES/DES/TDES) hw accelerator which
  can be found on STMicroelectronics STM32 SOC.

CRYPTO_DEV_STM32_HASH
  This enables support for the HASH hw accelerator which can be found
  on STMicroelectronics STM32 SOC.

CRYPTO_DEV_SUN4I_SS
  Some Allwinner SoC have a crypto accelerator named
  Security System. Select this if you want to use it.
  The Security System handle AES/DES/3DES ciphers in CBC mode
  and SHA1 and MD5 hash algorithms.
  
  To compile this driver as a module, choose M here: the module
  will be called sun4i-ss.

CRYPTO_DEV_SUN4I_SS_PRNG
  Select this option if you want to provide kernel-side support for
  the Pseudo-Random Number Generator found in the Security System.

CRYPTO_DEV_SUN8I_CE
  Select y here to have support for the crypto Engine available on
  Allwinner SoC H2+, H3, H5, H6, R40 and A64.
  The Crypto Engine handle AES/3DES ciphers in ECB/CBC mode.
  
  To compile this driver as a module, choose M here: the module
  will be called sun8i-ce.

CRYPTO_DEV_SUN8I_CE_DEBUG
  Say y to enable sun8i-ce debug stats.
  This will create /sys/kernel/debug/sun8i-ce/stats for displaying
  the number of requests per flow and per algorithm.

CRYPTO_DEV_SUN8I_CE_HASH
  Say y to enable support for hash algorithms.

CRYPTO_DEV_SUN8I_CE_PRNG
  Select this option if you want to provide kernel-side support for
  the Pseudo-Random Number Generator found in the Crypto Engine.

CRYPTO_DEV_SUN8I_CE_TRNG
  Select this option if you want to provide kernel-side support for
  the True Random Number Generator found in the Crypto Engine.

CRYPTO_DEV_SUN8I_SS
  Select y here to have support for the Security System available on
  Allwinner SoC A80, A83T.
  The Security System handle AES/3DES ciphers in ECB/CBC mode.
  
  To compile this driver as a module, choose M here: the module
  will be called sun8i-ss.

CRYPTO_DEV_SUN8I_SS_DEBUG
  Say y to enable sun8i-ss debug stats.
  This will create /sys/kernel/debug/sun8i-ss/stats for displaying
  the number of requests per flow and per algorithm.

CRYPTO_DEV_SUN8I_SS_HASH
  Say y to enable support for hash algorithms.

CRYPTO_DEV_SUN8I_SS_PRNG
  Select this option if you want to provide kernel-side support for
  the Pseudo-Random Number Generator found in the Security System.

CRYPTO_DEV_TALITOS
  Say 'Y' here to use the Freescale Security Engine (SEC)
  to offload cryptographic algorithm computation.
  
  The Freescale SEC is present on PowerQUICC 'E' processors, such
  as the MPC8349E and MPC8548E.
  
  To compile this driver as a module, choose M here: the module
  will be called talitos.

CRYPTO_DEV_TALITOS1
  Say 'Y' here to use the Freescale Security Engine (SEC) version 1.0
  found on MPC82xx or the Freescale Security Engine (SEC Lite)
  version 1.2 found on MPC8xx

CRYPTO_DEV_TALITOS2
  Say 'Y' here to use the Freescale Security Engine (SEC)
  version 2 and following as found on MPC83xx, MPC85xx, etc ...

CRYPTO_DEV_UX500
  Driver for ST-Ericsson UX500 crypto engine.

CRYPTO_DEV_UX500_CRYP
  This selects the crypto driver for the UX500_CRYP hardware. It supports
  AES-ECB, CBC and CTR with keys sizes of 128, 192 and 256 bit sizes.

CRYPTO_DEV_UX500_DEBUG
  Say Y if you want to add debug prints to ux500_hash and
  ux500_cryp devices.

CRYPTO_DEV_UX500_HASH
  This selects the hash driver for the UX500_HASH hardware.
  Depends on UX500/STM DMA if running in DMA mode.

CRYPTO_DEV_VIRTIO
  This driver provides support for virtio crypto device. If you
  choose 'M' here, this module will be called virtio_crypto.

CRYPTO_DEV_VMX
  Support for VMX cryptographic acceleration instructions.

CRYPTO_DEV_VMX_ENCRYPT
  Support for VMX cryptographic acceleration instructions on Power8 CPU.
  This module supports acceleration for AES and GHASH in hardware. If you
  choose 'M' here, this module will be called vmx-crypto.

CRYPTO_DEV_ZYNQMP_AES
  Xilinx ZynqMP has AES-GCM engine used for symmetric key
  encryption and decryption. This driver interfaces with AES hw
  accelerator. Select this if you want to use the ZynqMP module
  for AES algorithms.

CRYPTO_DH
  Generic implementation of the Diffie-Hellman algorithm.

CRYPTO_DRBG
  No help

CRYPTO_DRBG_CTR
  Enable the CTR DRBG variant as defined in NIST SP800-90A.

CRYPTO_DRBG_HASH
  Enable the Hash DRBG variant as defined in NIST SP800-90A.

CRYPTO_DRBG_HMAC
  No help

CRYPTO_DRBG_MENU
  NIST SP800-90A compliant DRBG. In the following submenu, one or
  more of the DRBG types must be selected.

CRYPTO_ECB
  ECB: Electronic CodeBook mode
  This is the simplest block cipher algorithm.  It simply encrypts
  the input block by block.

CRYPTO_ECC
  No help

CRYPTO_ECDH
  Generic implementation of the ECDH algorithm

CRYPTO_ECHAINIV
  This IV generator generates an IV based on the encryption of
  a sequence number xored with a salt.  This is the default
  algorithm for CBC.

CRYPTO_ECRDSA
  Elliptic Curve Russian Digital Signature Algorithm (GOST R 34.10-2012,
  RFC 7091, ISO/IEC 14888-3:2018) is one of the Russian cryptographic
  standard algorithms (called GOST algorithms). Only signature verification
  is implemented.

CRYPTO_ENGINE
  No help

CRYPTO_ESSIV
  Encrypted salt-sector initialization vector (ESSIV) is an IV
  generation method that is used in some cases by fscrypt and/or
  dm-crypt. It uses the hash of the block encryption key as the
  symmetric key for a block encryption pass applied to the input
  IV, making low entropy IV sources more suitable for block
  encryption.
  
  This driver implements a crypto API template that can be
  instantiated either as an skcipher or as an AEAD (depending on the
  type of the first template argument), and which defers encryption
  and decryption requests to the encapsulated cipher after applying
  ESSIV to the input IV. Note that in the AEAD case, it is assumed
  that the keys are presented in the same format used by the authenc
  template, and that the IV appears at the end of the authenticated
  associated data (AAD) region (which is how dm-crypt uses it.)
  
  Note that the use of ESSIV is not recommended for new deployments,
  and so this only needs to be enabled when interoperability with
  existing encrypted volumes of filesystems is required, or when
  building for a particular system that requires it (e.g., when
  the SoC in question has accelerated CBC but not XTS, making CBC
  combined with ESSIV the only feasible mode for h/w accelerated
  block encryption)

CRYPTO_FCRYPT
  FCrypt algorithm used by RxRPC.

CRYPTO_FIPS
  This option enables the fips boot option which is
  required if you want the system to operate in a FIPS 200
  certification.  You should say no unless you know what
  this is.

CRYPTO_GCM
  Support for Galois/Counter Mode (GCM) and Galois Message
  Authentication Code (GMAC). Required for IPSec.

CRYPTO_GF128MUL
  No help

CRYPTO_GHASH
  GHASH is the hash function used in GCM (Galois/Counter Mode).
  It is not a general-purpose cryptographic hash function.

CRYPTO_GHASH_CLMUL_NI_INTEL
  This is the x86_64 CLMUL-NI accelerated implementation of
  GHASH, the hash function used in GCM (Galois/Counter mode).

CRYPTO_GHASH_S390
  This is the s390 hardware accelerated implementation of GHASH,
  the hash function used in GCM (Galois/Counter mode).
  
  It is available as of z196.

CRYPTO_GLUE_HELPER_X86
  No help

CRYPTO_HASH
  No help

CRYPTO_HASH2
  No help

CRYPTO_HASH_INFO
  No help

CRYPTO_HMAC
  HMAC: Keyed-Hashing for Message Authentication (RFC2104).
  This is required for IPSec.

CRYPTO_HW
  Say Y here to get to see options for hardware crypto devices and
  processors. This option alone does not add any kernel code.
  
  If you say N, all options in this submenu will be skipped and disabled.

CRYPTO_JITTERENTROPY
  The Jitterentropy RNG is a noise that is intended
  to provide seed to another RNG. The RNG does not
  perform any cryptographic whitening of the generated
  random numbers. This Jitterentropy RNG registers with
  the kernel crypto API and can be used by any caller.

CRYPTO_KEYWRAP
  Support for key wrapping (NIST SP800-38F / RFC3394) without
  padding.

CRYPTO_KHAZAD
  Khazad cipher algorithm.
  
  Khazad was a finalist in the initial NESSIE competition.  It is
  an algorithm optimized for 64-bit processors with good performance
  on 32-bit processors.  Khazad uses an 128 bit key size.
  
  See also:
  <http://www.larc.usp.br/~pbarreto/KhazadPage.html>

CRYPTO_KPP
  No help

CRYPTO_KPP2
  No help

CRYPTO_LIB_AES
  No help

CRYPTO_LIB_ARC4
  No help

CRYPTO_LIB_BLAKE2S
  Enable the Blake2s library interface. This interface may be fulfilled
  by either the generic implementation or an arch-specific one, if one
  is available and enabled.

CRYPTO_LIB_BLAKE2S_GENERIC
  This symbol can be depended upon by arch implementations of the
  Blake2s library interface that require the generic code as a
  fallback, e.g., for SIMD implementations. If no arch specific
  implementation is enabled, this implementation serves the users
  of CRYPTO_LIB_BLAKE2S.

CRYPTO_LIB_CHACHA
  Enable the ChaCha library interface. This interface may be fulfilled
  by either the generic implementation or an arch-specific one, if one
  is available and enabled.

CRYPTO_LIB_CHACHA20POLY1305
  No help

CRYPTO_LIB_CHACHA_GENERIC
  This symbol can be depended upon by arch implementations of the
  ChaCha library interface that require the generic code as a
  fallback, e.g., for SIMD implementations. If no arch specific
  implementation is enabled, this implementation serves the users
  of CRYPTO_LIB_CHACHA.

CRYPTO_LIB_CURVE25519
  Enable the Curve25519 library interface. This interface may be
  fulfilled by either the generic implementation or an arch-specific
  one, if one is available and enabled.

CRYPTO_LIB_CURVE25519_GENERIC
  This symbol can be depended upon by arch implementations of the
  Curve25519 library interface that require the generic code as a
  fallback, e.g., for SIMD implementations. If no arch specific
  implementation is enabled, this implementation serves the users
  of CRYPTO_LIB_CURVE25519.

CRYPTO_LIB_DES
  No help

CRYPTO_LIB_POLY1305
  Enable the Poly1305 library interface. This interface may be fulfilled
  by either the generic implementation or an arch-specific one, if one
  is available and enabled.

CRYPTO_LIB_POLY1305_GENERIC
  This symbol can be depended upon by arch implementations of the
  Poly1305 library interface that require the generic code as a
  fallback, e.g., for SIMD implementations. If no arch specific
  implementation is enabled, this implementation serves the users
  of CRYPTO_LIB_POLY1305.

CRYPTO_LIB_POLY1305_RSIZE
  No help

CRYPTO_LIB_SHA256
  No help

CRYPTO_LRW
  LRW: Liskov Rivest Wagner, a tweakable, non malleable, non movable
  narrow block cipher mode for dm-crypt.  Use it with cipher
  specification string aes-lrw-benbi, the key must be 256, 320 or 384.
  The first 128, 192 or 256 bits in the key are used for AES and the
  rest is used to tie each cipher block to its logical position.

CRYPTO_LZ4
  This is the LZ4 algorithm.

CRYPTO_LZ4HC
  This is the LZ4 high compression mode algorithm.

CRYPTO_LZO
  This is the LZO algorithm.

CRYPTO_MANAGER
  Create default cryptographic template instantiations such as
  cbc(aes).

CRYPTO_MANAGER2
  No help

CRYPTO_MANAGER_DISABLE_TESTS
  Disable run-time self tests that normally take place at
  algorithm registration.

CRYPTO_MANAGER_EXTRA_TESTS
  Enable extra run-time self tests of registered crypto algorithms,
  including randomized fuzz tests.
  
  This is intended for developer use only, as these tests take much
  longer to run than the normal self tests.

CRYPTO_MD4
  MD4 message digest algorithm (RFC1320).

CRYPTO_MD5
  MD5 message digest algorithm (RFC1321).

CRYPTO_MD5_OCTEON
  MD5 message digest algorithm (RFC1321) implemented
  using OCTEON crypto instructions, when available.

CRYPTO_MD5_PPC
  MD5 message digest algorithm (RFC1321) implemented
  in PPC assembler.

CRYPTO_MD5_SPARC64
  MD5 message digest algorithm (RFC1321) implemented
  using sparc64 crypto instructions, when available.

CRYPTO_MICHAEL_MIC
  Michael MIC is used for message integrity protection in TKIP
  (IEEE 802.11i). This algorithm is required for TKIP, but it
  should not be used for other purposes because of the weakness
  of the algorithm.

CRYPTO_NHPOLY1305
  No help

CRYPTO_NHPOLY1305_AVX2
  AVX2 optimized implementation of the hash function used by the
  Adiantum encryption mode.

CRYPTO_NHPOLY1305_SSE2
  SSE2 optimized implementation of the hash function used by the
  Adiantum encryption mode.

CRYPTO_NULL
  These are 'Null' algorithms, used by IPsec, which do nothing.

CRYPTO_NULL2
  No help

CRYPTO_OFB
  OFB: the Output Feedback mode makes a block cipher into a synchronous
  stream cipher. It generates keystream blocks, which are then XORed
  with the plaintext blocks to get the ciphertext. Flipping a bit in the
  ciphertext produces a flipped bit in the plaintext at the same
  location. This property allows many error correcting codes to function
  normally even when applied before encryption.

CRYPTO_PAES_S390
  This is the s390 hardware accelerated implementation of the
  AES cipher algorithms for use with protected key.
  
  Select this option if you want to use the paes cipher
  for example to use protected key encrypted devices.

CRYPTO_PCBC
  PCBC: Propagating Cipher Block Chaining mode
  This block cipher algorithm is required for RxRPC.

CRYPTO_PCRYPT
  This converts an arbitrary crypto algorithm into a parallel
  algorithm that executes in kernel threads.

CRYPTO_POLY1305
  Poly1305 authenticator algorithm, RFC7539.
  
  Poly1305 is an authenticator algorithm designed by Daniel J. Bernstein.
  It is used for the ChaCha20-Poly1305 AEAD, specified in RFC7539 for use
  in IETF protocols. This is the portable C implementation of Poly1305.

CRYPTO_POLY1305_MIPS
  No help

CRYPTO_POLY1305_X86_64
  Poly1305 authenticator algorithm, RFC7539.
  
  Poly1305 is an authenticator algorithm designed by Daniel J. Bernstein.
  It is used for the ChaCha20-Poly1305 AEAD, specified in RFC7539 for use
  in IETF protocols. This is the x86_64 assembler implementation using SIMD
  instructions.

CRYPTO_RMD128
  RIPEMD-128 (ISO/IEC 10118-3:2004).
  
  RIPEMD-128 is a 128-bit cryptographic hash function. It should only
  be used as a secure replacement for RIPEMD. For other use cases,
  RIPEMD-160 should be used.
  
  Developed by Hans Dobbertin, Antoon Bosselaers and Bart Preneel.
  See <https://homes.esat.kuleuven.be/~bosselae/ripemd160.html>

CRYPTO_RMD160
  RIPEMD-160 (ISO/IEC 10118-3:2004).
  
  RIPEMD-160 is a 160-bit cryptographic hash function. It is intended
  to be used as a secure replacement for the 128-bit hash functions
  MD4, MD5 and it's predecessor RIPEMD
  (not to be confused with RIPEMD-128).
  
  It's speed is comparable to SHA1 and there are no known attacks
  against RIPEMD-160.
  
  Developed by Hans Dobbertin, Antoon Bosselaers and Bart Preneel.
  See <https://homes.esat.kuleuven.be/~bosselae/ripemd160.html>

CRYPTO_RMD256
  RIPEMD-256 is an optional extension of RIPEMD-128 with a
  256 bit hash. It is intended for applications that require
  longer hash-results, without needing a larger security level
  (than RIPEMD-128).
  
  Developed by Hans Dobbertin, Antoon Bosselaers and Bart Preneel.
  See <https://homes.esat.kuleuven.be/~bosselae/ripemd160.html>

CRYPTO_RMD320
  RIPEMD-320 is an optional extension of RIPEMD-160 with a
  320 bit hash. It is intended for applications that require
  longer hash-results, without needing a larger security level
  (than RIPEMD-160).
  
  Developed by Hans Dobbertin, Antoon Bosselaers and Bart Preneel.
  See <https://homes.esat.kuleuven.be/~bosselae/ripemd160.html>

CRYPTO_RNG
  No help

CRYPTO_RNG2
  No help

CRYPTO_RNG_DEFAULT
  No help

CRYPTO_RSA
  Generic implementation of the RSA public key algorithm.

CRYPTO_SALSA20
  Salsa20 stream cipher algorithm.
  
  Salsa20 is a stream cipher submitted to eSTREAM, the ECRYPT
  Stream Cipher Project. See <https://www.ecrypt.eu.org/stream/>
  
  The Salsa20 stream cipher algorithm is designed by Daniel J.
  Bernstein <djb@cr.yp.to>. See <https://cr.yp.to/snuffle.html>

CRYPTO_SEED
  SEED cipher algorithm (RFC4269).
  
  SEED is a 128-bit symmetric key block cipher that has been
  developed by KISA (Korea Information Security Agency) as a
  national standard encryption algorithm of the Republic of Korea.
  It is a 16 round block cipher with the key size of 128 bit.
  
  See also:
  <http://www.kisa.or.kr/kisa/seed/jsp/seed_eng.jsp>

CRYPTO_SEQIV
  This IV generator generates an IV based on a sequence number by
  xoring it with a salt.  This algorithm is mainly useful for CTR

CRYPTO_SERPENT
  Serpent cipher algorithm, by Anderson, Biham & Knudsen.
  
  Keys are allowed to be from 0 to 256 bits in length, in steps
  of 8 bits.  Also includes the 'Tnepres' algorithm, a reversed
  variant of Serpent for compatibility with old kerneli.org code.
  
  See also:
  <https://www.cl.cam.ac.uk/~rja14/serpent.html>

CRYPTO_SERPENT_AVX2_X86_64
  Serpent cipher algorithm, by Anderson, Biham & Knudsen.
  
  Keys are allowed to be from 0 to 256 bits in length, in steps
  of 8 bits.
  
  This module provides Serpent cipher algorithm that processes 16
  blocks parallel using AVX2 instruction set.
  
  See also:
  <https://www.cl.cam.ac.uk/~rja14/serpent.html>

CRYPTO_SERPENT_AVX_X86_64
  Serpent cipher algorithm, by Anderson, Biham & Knudsen.
  
  Keys are allowed to be from 0 to 256 bits in length, in steps
  of 8 bits.
  
  This module provides the Serpent cipher algorithm that processes
  eight blocks parallel using the AVX instruction set.
  
  See also:
  <https://www.cl.cam.ac.uk/~rja14/serpent.html>

CRYPTO_SERPENT_SSE2_586
  Serpent cipher algorithm, by Anderson, Biham & Knudsen.
  
  Keys are allowed to be from 0 to 256 bits in length, in steps
  of 8 bits.
  
  This module provides Serpent cipher algorithm that processes four
  blocks parallel using SSE2 instruction set.
  
  See also:
  <https://www.cl.cam.ac.uk/~rja14/serpent.html>

CRYPTO_SERPENT_SSE2_X86_64
  Serpent cipher algorithm, by Anderson, Biham & Knudsen.
  
  Keys are allowed to be from 0 to 256 bits in length, in steps
  of 8 bits.
  
  This module provides Serpent cipher algorithm that processes eight
  blocks parallel using SSE2 instruction set.
  
  See also:
  <https://www.cl.cam.ac.uk/~rja14/serpent.html>

CRYPTO_SHA1
  SHA-1 secure hash standard (FIPS 180-1/DFIPS 180-2).

CRYPTO_SHA1_OCTEON
  SHA-1 secure hash standard (FIPS 180-1/DFIPS 180-2) implemented
  using OCTEON crypto instructions, when available.

CRYPTO_SHA1_PPC
  This is the powerpc hardware accelerated implementation of the
  SHA-1 secure hash standard (FIPS 180-1/DFIPS 180-2).

CRYPTO_SHA1_PPC_SPE
  SHA-1 secure hash standard (DFIPS 180-4) implemented
  using powerpc SPE SIMD instruction set.

CRYPTO_SHA1_S390
  This is the s390 hardware accelerated implementation of the
  SHA-1 secure hash standard (FIPS 180-1/DFIPS 180-2).
  
  It is available as of z990.

CRYPTO_SHA1_SPARC64
  SHA-1 secure hash standard (FIPS 180-1/DFIPS 180-2) implemented
  using sparc64 crypto instructions, when available.

CRYPTO_SHA1_SSSE3
  SHA-1 secure hash standard (FIPS 180-1/DFIPS 180-2) implemented
  using Supplemental SSE3 (SSSE3) instructions or Advanced Vector
  Extensions (AVX/AVX2) or SHA-NI(SHA Extensions New Instructions),
  when available.

CRYPTO_SHA256
  SHA256 secure hash standard (DFIPS 180-2).
  
  This version of SHA implements a 256 bit hash with 128 bits of
  security against collision attacks.
  
  This code also includes SHA-224, a 224 bit hash with 112 bits
  of security against collision attacks.

CRYPTO_SHA256_OCTEON
  SHA-256 secure hash standard (DFIPS 180-2) implemented
  using OCTEON crypto instructions, when available.

CRYPTO_SHA256_PPC_SPE
  SHA224 and SHA256 secure hash standard (DFIPS 180-2)
  implemented using powerpc SPE SIMD instruction set.

CRYPTO_SHA256_S390
  This is the s390 hardware accelerated implementation of the
  SHA256 secure hash standard (DFIPS 180-2).
  
  It is available as of z9.

CRYPTO_SHA256_SPARC64
  SHA-256 secure hash standard (DFIPS 180-2) implemented
  using sparc64 crypto instructions, when available.

CRYPTO_SHA256_SSSE3
  SHA-256 secure hash standard (DFIPS 180-2) implemented
  using Supplemental SSE3 (SSSE3) instructions, or Advanced Vector
  Extensions version 1 (AVX1), or Advanced Vector Extensions
  version 2 (AVX2) instructions, or SHA-NI (SHA Extensions New
  Instructions) when available.

CRYPTO_SHA3
  SHA-3 secure hash standard (DFIPS 202). It's based on
  cryptographic sponge function family called Keccak.
  
  References:
  http://keccak.noekeon.org/

CRYPTO_SHA3_256_S390
  This is the s390 hardware accelerated implementation of the
  SHA3_256 secure hash standard.
  
  It is available as of z14.

CRYPTO_SHA3_512_S390
  This is the s390 hardware accelerated implementation of the
  SHA3_512 secure hash standard.
  
  It is available as of z14.

CRYPTO_SHA512
  SHA512 secure hash standard (DFIPS 180-2).
  
  This version of SHA implements a 512 bit hash with 256 bits of
  security against collision attacks.
  
  This code also includes SHA-384, a 384 bit hash with 192 bits
  of security against collision attacks.

CRYPTO_SHA512_OCTEON
  SHA-512 secure hash standard (DFIPS 180-2) implemented
  using OCTEON crypto instructions, when available.

CRYPTO_SHA512_S390
  This is the s390 hardware accelerated implementation of the
  SHA512 secure hash standard.
  
  It is available as of z10.

CRYPTO_SHA512_SPARC64
  SHA-512 secure hash standard (DFIPS 180-2) implemented
  using sparc64 crypto instructions, when available.

CRYPTO_SHA512_SSSE3
  SHA-512 secure hash standard (DFIPS 180-2) implemented
  using Supplemental SSE3 (SSSE3) instructions, or Advanced Vector
  Extensions version 1 (AVX1), or Advanced Vector Extensions
  version 2 (AVX2) instructions, when available.

CRYPTO_SIMD
  No help

CRYPTO_SKCIPHER
  No help

CRYPTO_SKCIPHER2
  No help

CRYPTO_SM2
  Generic implementation of the SM2 public key algorithm. It was
  published by State Encryption Management Bureau, China.
  as specified by OSCCA GM/T 0003.1-2012 -- 0003.5-2012.
  
  References:
  https://tools.ietf.org/html/draft-shen-sm2-ecdsa-02
  http://www.oscca.gov.cn/sca/xxgk/2010-12/17/content_1002386.shtml
  http://www.gmbz.org.cn/main/bzlb.html

CRYPTO_SM3
  SM3 secure hash function as defined by OSCCA GM/T 0004-2012 SM3).
  It is part of the Chinese Commercial Cryptography suite.
  
  References:
  http://www.oscca.gov.cn/UpFile/20101222141857786.pdf
  https://datatracker.ietf.org/doc/html/draft-shen-sm3-hash

CRYPTO_SM4
  SM4 cipher algorithms (OSCCA GB/T 32907-2016).
  
  SM4 (GBT.32907-2016) is a cryptographic standard issued by the
  Organization of State Commercial Administration of China (OSCCA)
  as an authorized cryptographic algorithms for the use within China.
  
  SMS4 was originally created for use in protecting wireless
  networks, and is mandated in the Chinese National Standard for
  Wireless LAN WAPI (Wired Authentication and Privacy Infrastructure)
  (GB.15629.11-2003).
  
  The latest SM4 standard (GBT.32907-2016) was proposed by OSCCA and
  standardized through TC 260 of the Standardization Administration
  of the People's Republic of China (SAC).
  
  The input, output, and key of SMS4 are each 128 bits.
  
  See also: <https://eprint.iacr.org/2008/329.pdf>
  
  If unsure, say N.

CRYPTO_STATS
  This option enables the gathering of crypto stats.
  This will collect:
  - encrypt/decrypt size and numbers of symmeric operations
  - compress/decompress size and numbers of compress operations
  - size and numbers of hash operations
  - encrypt/decrypt/sign/verify numbers for asymmetric operations
  - generate/seed numbers for rng operations

CRYPTO_STREEBOG
  Streebog Hash Function (GOST R 34.11-2012, RFC 6986) is one of the Russian
  cryptographic standard algorithms (called GOST algorithms).
  This setting enables two hash algorithms with 256 and 512 bits output.
  
  References:
  https://tc26.ru/upload/iblock/fed/feddbb4d26b685903faa2ba11aea43f6.pdf
  https://tools.ietf.org/html/rfc6986

CRYPTO_TEA
  TEA cipher algorithm.
  
  Tiny Encryption Algorithm is a simple cipher that uses
  many rounds for security.  It is very fast and uses
  little memory.
  
  Xtendend Tiny Encryption Algorithm is a modification to
  the TEA algorithm to address a potential key weakness
  in the TEA algorithm.
  
  Xtendend Encryption Tiny Algorithm is a mis-implementation
  of the XTEA algorithm for compatibility purposes.

CRYPTO_TEST
  Quick & dirty crypto test module.

CRYPTO_TGR192
  Tiger hash algorithm 192, 160 and 128-bit hashes
  
  Tiger is a hash function optimized for 64-bit processors while
  still having decent performance on 32-bit processors.
  Tiger was developed by Ross Anderson and Eli Biham.
  
  See also:
  <https://www.cs.technion.ac.il/~biham/Reports/Tiger/>.

CRYPTO_TWOFISH
  Twofish cipher algorithm.
  
  Twofish was submitted as an AES (Advanced Encryption Standard)
  candidate cipher by researchers at CounterPane Systems.  It is a
  16 round block cipher supporting key sizes of 128, 192, and 256
  bits.
  
  See also:
  <https://www.schneier.com/twofish.html>

CRYPTO_TWOFISH_586
  Twofish cipher algorithm.
  
  Twofish was submitted as an AES (Advanced Encryption Standard)
  candidate cipher by researchers at CounterPane Systems.  It is a
  16 round block cipher supporting key sizes of 128, 192, and 256
  bits.
  
  See also:
  <https://www.schneier.com/twofish.html>

CRYPTO_TWOFISH_AVX_X86_64
  Twofish cipher algorithm (x86_64/AVX).
  
  Twofish was submitted as an AES (Advanced Encryption Standard)
  candidate cipher by researchers at CounterPane Systems.  It is a
  16 round block cipher supporting key sizes of 128, 192, and 256
  bits.
  
  This module provides the Twofish cipher algorithm that processes
  eight blocks parallel using the AVX Instruction Set.
  
  See also:
  <https://www.schneier.com/twofish.html>

CRYPTO_TWOFISH_COMMON
  Common parts of the Twofish cipher algorithm shared by the
  generic c and the assembler implementations.

CRYPTO_TWOFISH_X86_64
  Twofish cipher algorithm (x86_64).
  
  Twofish was submitted as an AES (Advanced Encryption Standard)
  candidate cipher by researchers at CounterPane Systems.  It is a
  16 round block cipher supporting key sizes of 128, 192, and 256
  bits.
  
  See also:
  <https://www.schneier.com/twofish.html>

CRYPTO_TWOFISH_X86_64_3WAY
  Twofish cipher algorithm (x86_64, 3-way parallel).
  
  Twofish was submitted as an AES (Advanced Encryption Standard)
  candidate cipher by researchers at CounterPane Systems.  It is a
  16 round block cipher supporting key sizes of 128, 192, and 256
  bits.
  
  This module provides Twofish cipher algorithm that processes three
  blocks parallel, utilizing resources of out-of-order CPUs better.
  
  See also:
  <https://www.schneier.com/twofish.html>

CRYPTO_USER
  Userspace configuration for cryptographic instantiations such as
  cbc(aes).

CRYPTO_USER_API
  No help

CRYPTO_USER_API_AEAD
  This option enables the user-spaces interface for AEAD
  cipher algorithms.

CRYPTO_USER_API_ENABLE_OBSOLETE
  Allow obsolete cryptographic algorithms to be selected that have
  already been phased out from internal use by the kernel, and are
  only useful for userspace clients that still rely on them.

CRYPTO_USER_API_HASH
  This option enables the user-spaces interface for hash
  algorithms.

CRYPTO_USER_API_RNG
  This option enables the user-spaces interface for random
  number generator algorithms.

CRYPTO_USER_API_RNG_CAVP
  This option enables extra API for CAVP testing via the user-space
  interface: resetting of DRBG entropy, and providing Additional Data.
  This should only be enabled for CAVP testing. You should say
  no unless you know what this is.

CRYPTO_USER_API_SKCIPHER
  This option enables the user-spaces interface for symmetric
  key cipher algorithms.

CRYPTO_VMAC
  VMAC is a message authentication algorithm designed for
  very high speed on 64-bit architectures.
  
  See also:
  <https://fastcrypto.org/vmac>

CRYPTO_VPMSUM_TESTER
  Stress test for CRC32c and CRC-T10DIF algorithms implemented with
  POWER8 vpmsum instructions.
  Unless you are testing these algorithms, you don't need this.

CRYPTO_WP512
  Whirlpool hash algorithm 512, 384 and 256-bit hashes
  
  Whirlpool-512 is part of the NESSIE cryptographic primitives.
  Whirlpool will be part of the ISO/IEC 10118-3:2003(E) standard
  
  See also:
  <http://www.larc.usp.br/~pbarreto/WhirlpoolPage.html>

CRYPTO_XCBC
  XCBC: Keyed-Hashing with encryption algorithm
        https://www.ietf.org/rfc/rfc3566.txt
        http://csrc.nist.gov/encryption/modes/proposedmodes/
         xcbc-mac/xcbc-mac-spec.pdf

CRYPTO_XTS
  XTS: IEEE1619/D16 narrow block cipher use with aes-xts-plain,
  key size 256, 384 or 512 bits. This implementation currently
  can't handle a sectorsize which is not a multiple of 16 bytes.

CRYPTO_XXHASH
  xxHash non-cryptographic hash algorithm. Extremely fast, working at
  speeds close to RAM limits.

CRYPTO_ZSTD
  This is the zstd algorithm.

CS5535_CLOCK_EVENT_SRC
  This driver provides a clock event source based on the MFGPT
  timer(s) in the CS5535 and CS5536 companion chips.
  MFGPTs have a better resolution and max interval than the
  generic PIT, and are suitable for use as high-res timers.

CS5535_MFGPT
  This driver provides access to MFGPT functionality for other
  drivers that need timers.  MFGPTs are available in the CS5535 and
  CS5536 companion chips that are found in AMD Geode and several
  other platforms.  They have a better resolution and max interval
  than the generic PIT, and are suitable for use as high-res timers.
  You probably don't want to enable this manually; other drivers that
  make use of it should enable it.

CS5535_MFGPT_DEFAULT_IRQ
  MFGPTs on the CS5535 require an interrupt.  The selected IRQ
  can be overridden as a module option as well as by driver that
  use the cs5535_mfgpt_ API; however, different architectures might
  want to use a different IRQ by default.  This is here for
  architectures to set as necessary.

CS89x0
  Support for CS89x0 chipset based Ethernet cards. If you have a
  network (Ethernet) card of this type, say Y and read the file
  <file:Documentation/networking/device_drivers/ethernet/cirrus/cs89x0.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called cs89x0.

CS89x0_PLATFORM
  Say Y to compile the cs89x0 driver as a platform driver. This
  makes this driver suitable for use on certain evaluation boards
  such as the iMX21ADS.
  
  If you are unsure, say N.

CSD_LOCK_WAIT_DEBUG
  This option enables debug prints when CPUs are slow to respond
  to the smp_call_function*() IPI wrappers.  These debug prints
  include the IPI handler function currently executing (if any)
  and relevant stack traces.

CSKY_APB_INTC
  Say yes here to enable C-SKY APB interrupt controller driver used
  by C-SKY single core SOC system. It uses mmio map apb-bus to visit
  the controller's register.

CSKY_MPINTC
  Say yes here to enable C-SKY SMP interrupt controller driver used
  for C-SKY SMP system.
  In fact it's not mmio map in hardware and it uses ld/st to visit the
  controller's register inside CPU.

CSKY_MP_TIMER
  Say yes here to enable C-SKY SMP timer driver used for C-SKY SMP
  system.
  csky,mptimer is not only used in SMP system, it also could be used in
  single core system. It's not a mmio reg and it uses mtcr/mfcr instruction.

CTCM
  Select this option if you want to use channel-to-channel
  point-to-point networking on IBM System z.
  This device driver supports real CTC coupling using ESCON.
  It also supports virtual CTCs when running under VM.
  This driver also supports channel-to-channel MPC SNA devices.
  MPC is an SNA protocol device used by Communication Server for Linux.
  To compile as a module, choose M. The module name is ctcm.
  To compile into the kernel, choose Y.
  If you do not need any channel-to-channel connection, choose N.

CUSE
  This FUSE extension allows character devices to be
  implemented in userspace.
  
  If you want to develop or use a userspace character device
  based on CUSE, answer Y or M.

CW1200
  This is a driver for the ST-E CW1100 & CW1200 WLAN chipsets.
  This option just enables the driver core, see below for
  specific bus support.

CW1200_WLAN_SDIO
  Enable support for the CW1200 connected via an SDIO bus.
  By default this driver only supports the Sagrad SG901-1091/1098 EVK
  and similar designs that utilize a hardware reset circuit. To
  support different CW1200 SDIO designs you will need to override
  the default platform data by calling cw1200_sdio_set_platform_data()
  in your board setup file.

CW1200_WLAN_SPI
  Enables support for the CW1200 connected via a SPI bus.  You will
  need to add appropriate platform data glue in your board setup
  file.

CXD2880_SPI_DRV
  Choose if you would like to have SPI interface support for Sony CXD2880.

CXL
  Select this option to enable driver support for IBM Coherent
  Accelerators (CXL).  CXL is otherwise known as Coherent Accelerator
  Processor Interface (CAPI).  CAPI allows accelerators in FPGAs to be
  coherently attached to a CPU via an MMU.  This driver enables
  userspace programs to access these accelerators via /dev/cxl/afuM.N
  devices.
  
  CAPI adapters are found in POWER8 based systems.
  
  If unsure, say N.

CXLFLASH
  Allows CAPI Accelerated IO to Flash
  If unsure, say N.

CXL_BASE
  No help

CX_ECAT
  Driver for EtherCAT master module located on CCAT FPGA
  that can be found on Beckhoff CX5020, and possibly other of CX
  Beckhoff CX series industrial PCs.
  
  To compile this driver as a module, choose M here. The module
  will be called ec_bhf.

CYCLADES
  This driver supports Cyclades Z and Y multiserial boards.
  You would need something like this to connect more than two modems to
  your Linux box, for instance in order to become a dial-in server.
  
  For information about the Cyclades-Z card, read
  <file:Documentation/driver-api/serial/cyclades_z.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called cyclades.
  
  If you haven't heard about it, it's safe to say N.

CYPRESS_FIRMWARE
  No help

CYZ_INTR
  The Cyclades-Z family of multiport cards allows 2 (two) driver op
  modes: polling and interrupt. In polling mode, the driver will check
  the status of the Cyclades-Z ports every certain amount of time
  (which is called polling cycle and is configurable). In interrupt
  mode, it will use an interrupt line (IRQ) in order to check the
  status of the Cyclades-Z ports. The default op mode is polling. If
  unsure, say N.

DA280
  Say yes here to build support for the MiraMEMS DA280 3-axis 14-bit
  digital accelerometer.
  
  To compile this driver as a module, choose M here: the
  module will be called da280.

DA311
  Say yes here to build support for the MiraMEMS DA311 3-axis 12-bit
  digital accelerometer.
  
  To compile this driver as a module, choose M here: the
  module will be called da311.

DA8XX_DDRCTL
  This driver is for the DDR2/mDDR Memory Controller present on
  Texas Instruments da8xx SoCs. It's used to tweak various memory
  controller configuration options.

DA8XX_MSTPRI
  Driver for Texas Instruments da8xx master peripheral priority
  configuration. Allows to adjust the priorities of all master
  peripherals.

DA8XX_REMOTEPROC
  Say y here to support DA8xx/OMAP-L13x remote processors via the
  remote processor framework.
  
  You want to say y here in order to enable AMP
  use-cases to run on your platform (multimedia codecs are
  offloaded to remote DSP processors using this framework).
  
  This module controls the name of the firmware file that gets
  loaded on the DSP.  This file must reside in the /lib/firmware
  directory.  It can be specified via the module parameter
  da8xx_fw_name=<filename>, and if not specified will default to
  "rproc-dsp-fw".
  
  It's safe to say n here if you're not interested in multimedia
  offloading.

DA9052_WATCHDOG
  Support for the watchdog in the DA9052 PMIC. Watchdog trigger
  cause system reset.
  
  Say Y here to include support for the DA9052 watchdog.
  Alternatively say M to compile the driver as a module,
  which will be called da9052_wdt.

DA9055_WATCHDOG
  If you say yes here you get support for watchdog on the Dialog
  Semiconductor DA9055 PMIC.
  
  This driver can also be built as a module.  If so, the module
  will be called da9055_wdt.

DA9062_THERMAL
  Enable this for the Dialog Semiconductor thermal sensor driver.
  This will report PMIC junction over-temperature for one thermal trip
  zone.
  Compatible with the DA9062 and DA9061 PMICs.

DA9062_WATCHDOG
  Support for the watchdog in the DA9062 and DA9061 PMICs.
  
  This driver can be built as a module. The module name is da9062_wdt.

DA9063_WATCHDOG
  Support for the watchdog in the DA9063 PMIC.
  
  This driver can be built as a module. The module name is da9063_wdt.

DA9150_GPADC
  Say yes here to build support for Dialog DA9150 GPADC.
  
  This driver can also be built as a module. If chosen, the module name
  will be da9150-gpadc.
  
  To compile this driver as a module, choose M here: the module will be
  called berlin2-adc.

DASD
  Enable this option if you want to access DASDs directly utilizing
  S/390s channel subsystem commands. This is necessary for running
  natively on a single image or an LPAR.

DASD_DIAG
  Select this option if you want to use Diagnose250 command to access
  Disks under VM.  If you are not running under VM or unsure what it is,
  say "N".

DASD_ECKD
  ECKD devices are the most commonly used devices. You should enable
  this option unless you are very sure to have no ECKD device.

DASD_EER
  This driver provides a character device interface to the
  DASD extended error reporting. This is only needed if you want to
  use applications written for the EER facility.

DASD_FBA
  Select this option to be able to access FBA devices. It is safe to
  say "Y".

DASD_PROFILE
  Enable this option if you want to see profiling information
  in /proc/dasd/statistics.

DAVICOM_PHY
  Currently supports dm9161e and dm9131

DAVINCI_AINTC
  No help

DAVINCI_CP_INTC
  No help

DAVINCI_TIMER
  Enables the support for the TI DaVinci timer driver.

DAVINCI_WATCHDOG
  Say Y here if to include support for the watchdog timer
  in the DaVinci DM644x/DM646x or Keystone processors.
  To compile this driver as a module, choose M here: the
  module will be called davinci_wdt.
  
  NOTE: once enabled, this timer cannot be disabled.
  Say N if you are unsure.

DAX
  No help

DAX_DRIVER
  No help

DB8500_THERMAL
  Adds DB8500 thermal management implementation according to the thermal
  management framework. A thermal zone with several trip points will be
  created. Cooling devices can be bound to the trip points to cool this
  thermal zone if trip points reached.

DCA
  No help

DCACHE_WORD_ACCESS
  No help

DCB
  This enables support for configuring Data Center Bridging (DCB)
  features on DCB capable Ethernet adapters via rtnetlink.  Say 'Y'
  if you have a DCB capable Ethernet adapter which supports this
  interface and you are connected to a DCB capable switch.
  
  DCB is a collection of Ethernet enhancements which allow DCB capable
  NICs and switches to support network traffic with differing
  requirements (highly reliable, no drops vs. best effort vs. low
  latency) to co-exist on Ethernet.
  
  DCB features include:
    Enhanced Transmission Selection (aka Priority Grouping) - provides a
      framework for assigning bandwidth guarantees to traffic classes.
    Priority-based Flow Control (PFC) - a MAC control pause frame which
      works at the granularity of the 802.1p priority instead of the
      link (802.3x).
  
  If unsure, say N.

DCDBAS
  The Dell Systems Management Base Driver provides a sysfs interface
  for systems management software to perform System Management
  Interrupts (SMIs) and Host Control Actions (system power cycle or
  power off after OS shutdown) on certain Dell systems.
  
  See <file:Documentation/driver-api/dcdbas.rst> for more details on the driver
  and the Dell systems on which Dell systems management software makes
  use of this driver.
  
  Say Y or M here to enable the driver for use by Dell systems
  management software such as Dell OpenManage.

DCSSBLK
  Support for dcss block device

DDR
  Data from JEDEC specs for DDR SDRAM memories,
  particularly the AC timing parameters and addressing
  information. This data is useful for drivers handling
  DDR SDRAM controllers.

DE2104X
  This driver is developed for the SMC EtherPower series Ethernet
  cards and also works with cards based on the DECchip
  21040 (Tulip series) chips.  Some LinkSys PCI cards are
  of this type.  (If your card is NOT SMC EtherPower 10/100 PCI
  (smc9332dst), you can also try the driver for "Generic DECchip"
  cards, below.  However, most people with a network card of this type
  will say Y here.)
  
  To compile this driver as a module, choose M here. The module will
  be called de2104x.

DE2104X_DSL
  Setting this value allows to align ring buffer descriptors into their
  own cache lines. Value of 4 corresponds to the typical 32 byte line
  (the descriptor is 16 bytes). This is necessary on systems that lack
  cache coherence, an example is PowerMac 5500. Otherwise 0 is safe.
  Default is 0, and range is 0 to 31.

DE4X5
  This is support for the DIGITAL series of PCI/EISA Ethernet cards.
  These include the DE425, DE434, DE435, DE450 and DE500 models.  If
  you have a network card of this type, say Y.  More specific
  information is contained in
  <file:Documentation/networking/device_drivers/ethernet/dec/de4x5.rst>.
  
  To compile this driver as a module, choose M here. The module will
  be called de4x5.

DEBUG_ATOMIC_SLEEP
  If you say Y here, various routines which may sleep will become very
  noisy if they are called inside atomic sections: when a spinlock is
  held, inside an rcu read side critical section, inside preempt disabled
  sections, inside an interrupt, etc...

DEBUG_BLOCK_EXT_DEVT
  BIG FAT WARNING: ENABLING THIS OPTION MIGHT BREAK BOOTING ON
  SOME DISTRIBUTIONS.  DO NOT ENABLE THIS UNLESS YOU KNOW WHAT
  YOU ARE DOING.  Distros, please enable this and fix whatever
  is broken.
  
  Conventionally, block device numbers are allocated from
  predetermined contiguous area.  However, extended block area
  may introduce non-contiguous block device numbers.  This
  option forces most block device numbers to be allocated from
  the extended space and spreads them to discover kernel or
  userland code paths which assume predetermined contiguous
  device number allocation.
  
  Note that turning on this debug option shuffles all the
  device numbers for all IDE and SCSI devices including libata
  ones, so root partition specified using device number
  directly (via rdev or root=MAJ:MIN) won't work anymore.
  Textual device names (root=/dev/sdXn) will continue to work.
  
  Say N if you are unsure.

DEBUG_BOOT_PARAMS
  This option will cause struct boot_params to be exported via debugfs.

DEBUG_BUGVERBOSE
  Say Y here to make BUG() panics output the file name and line number
  of the BUG call as well as the EIP and oops trace.  This aids
  debugging but costs about 70-100K of memory.

DEBUG_CREDENTIALS
  Enable this to turn on some debug checking for credential
  management.  The additional code keeps track of the number of
  pointers from task_structs to any given cred struct, and checks to
  see that this number never exceeds the usage count of the cred
  struct.
  
  Furthermore, if SELinux is enabled, this also checks that the
  security pointer in the cred struct is never seen to be invalid.
  
  If unsure, say N.

DEBUG_DEVRES
  This option enables kernel parameter devres.log. If set to
  non-zero, devres debug messages are printed. Select this if
  you are having a problem with devres or want to debug
  resource management for a managed device. devres.log can be
  switched on and off from sysfs node.
  
  If you are unsure about this, Say N here.

DEBUG_DRIVER
  Say Y here if you want the Driver core to produce a bunch of
  debug messages to the system log. Select this if you are having a
  problem with the driver core and want to see more of what is
  going on.
  
  If you are unsure about this, say N here.

DEBUG_ENTRY
  This option enables sanity checks in x86's low-level entry code.
  Some of these sanity checks may slow down kernel entries and
  exits or otherwise impact performance.
  
  If unsure, say N.

DEBUG_FORCE_FUNCTION_ALIGN_32B
  There are cases that a commit from one domain changes the function
  address alignment of other domains, and cause magic performance
  bump (regression or improvement). Enable this option will help to
  verify if the bump is caused by function alignment changes, while
  it will slightly increase the kernel size and affect icache usage.
  
  It is mainly for debug and performance tuning use.

DEBUG_FORCE_WEAK_PER_CPU
  s390 and alpha require percpu variables in modules to be
  defined weak to work around addressing range issue which
  puts the following two restrictions on percpu variable
  definitions.
  
  1. percpu symbols must be unique whether static or not
  2. percpu variables can't be defined inside a function
  
  To ensure that generic code follows the above rules, this
  option forces all percpu variables to be defined as weak.

DEBUG_FS
  debugfs is a virtual file system that kernel developers use to put
  debugging files into.  Enable this option to be able to read and
  write to these files.
  
  For detailed documentation on the debugfs API, see
  Documentation/filesystems/.
  
  If unsure, say N.

DEBUG_FS_ALLOW_ALL
  No restrictions apply. Both API and filesystem registration
  is on. This is the normal default operation.

DEBUG_FS_ALLOW_NONE
  Access is off. Clients get -PERM when trying to create nodes in
  debugfs tree and debugfs is not registered as a filesystem.
  Client can then back-off or continue without debugfs access.

DEBUG_FS_DISALLOW_MOUNT
  The API is open but filesystem is not loaded. Clients can still do
  their work and read with debug tools that do not need
  debugfs filesystem.

DEBUG_GPIO
  Say Y here to add some extra checks and diagnostics to GPIO calls.
  These checks help ensure that GPIOs have been properly initialized
  before they are used, and that sleeping calls are not made from
  non-sleeping contexts.  They can make bitbanged serial protocols
  slower.  The diagnostics help catch the type of setup errors
  that are most common when setting up new platforms or boards.

DEBUG_HIGHMEM
  This option enables additional error checking for high memory
  systems.  Disable for production systems.

DEBUG_HOTPLUG_CPU0
  Enabling this option offlines CPU0 (if CPU0 can be offlined) as
  soon as possible and boots up userspace with CPU0 offlined. User
  can online CPU0 back after boot time.
  
  To debug CPU0 hotplug, you need to enable CPU0 offline/online
  feature by either turning on CONFIG_BOOTPARAM_HOTPLUG_CPU0 during
  compilation or giving cpu0_hotplug kernel parameter at boot.
  
  If unsure, say N.

DEBUG_IMR_SELFTEST
  This option enables automated sanity testing of the IMR code.
  Some simple tests are run to verify IMR bounds checking, alignment
  and overlapping. This option is really only useful if you are
  debugging an IMR memory map or are modifying the IMR code and want to
  test your changes.
  
  If unsure say N here.

DEBUG_INFO
  If you say Y here the resulting kernel image will include
  debugging info resulting in a larger kernel image.
  This adds debug symbols to the kernel and modules (gcc -g), and
  is needed if you intend to use kernel crashdump or binary object
  tools like crash, kgdb, LKCD, gdb, etc on the kernel.
  Say Y here only if you plan to debug the kernel.
  
  If unsure, say N.

DEBUG_INFO_BTF
  Generate deduplicated BTF type information from DWARF debug info.
  Turning this on expects presence of pahole tool, which will convert
  DWARF type info into equivalent deduplicated BTF type info.

DEBUG_INFO_BTF_MODULES
  Generate compact split BTF type information for kernel modules.

DEBUG_INFO_COMPRESSED
  Compress the debug information using zlib.  Requires GCC 5.0+ or Clang
  5.0+, binutils 2.26+, and zlib.
  
  Users of dpkg-deb via scripts/package/builddeb may find an increase in
  size of their debug .deb packages with this config set, due to the
  debug info being compressed with zlib, then the object files being
  recompressed with a different compression scheme. But this is still
  preferable to setting $KDEB_COMPRESS to "none" which would be even
  larger.

DEBUG_INFO_DWARF4
  Generate dwarf4 debug info. This requires recent versions
  of gcc and gdb. It makes the debug information larger.
  But it significantly improves the success of resolving
  variables in gdb on optimized code.

DEBUG_INFO_REDUCED
  If you say Y here gcc is instructed to generate less debugging
  information for structure types. This means that tools that
  need full debugging information (like kgdb or systemtap) won't
  be happy. But if you merely need debugging information to
  resolve line numbers there is no loss. Advantage is that
  build directory object sizes shrink dramatically over a full
  DEBUG_INFO build and compile times are reduced too.
  Only works with newer gcc versions.

DEBUG_INFO_SPLIT
  Generate debug info into separate .dwo files. This significantly
  reduces the build directory size for builds with DEBUG_INFO,
  because it stores the information only once on disk in .dwo
  files instead of multiple times in object files and executables.
  In addition the debug information is also compressed.
  
  Requires recent gcc (4.7+) and recent gdb/binutils.
  Any tool that packages or reads debug information would need
  to know about the .dwo files and include them.
  Incompatible with older versions of ccache.

DEBUG_KERNEL
  Say Y here if you are developing drivers or trying to debug and
  identify kernel problems.

DEBUG_KERNEL_DC
  Choose this option if you want to hit kdgb_break in assert.

DEBUG_KMAP_LOCAL
  This option enables additional error checking for the kmap_local
  infrastructure.  Disable for production use.

DEBUG_KMAP_LOCAL_FORCE_MAP
  This option enforces temporary mappings through the kmap_local
  mechanism for non-highmem pages and on non-highmem systems.
  Disable this for production systems!

DEBUG_KMEMLEAK
  Say Y here if you want to enable the memory leak
  detector. The memory allocation/freeing is traced in a way
  similar to the Boehm's conservative garbage collector, the
  difference being that the orphan objects are not freed but
  only shown in /sys/kernel/debug/kmemleak. Enabling this
  feature will introduce an overhead to memory
  allocations. See Documentation/dev-tools/kmemleak.rst for more
  details.
  
  Enabling DEBUG_SLAB or SLUB_DEBUG may increase the chances
  of finding leaks due to the slab objects poisoning.
  
  In order to access the kmemleak file, debugfs needs to be
  mounted (usually at /sys/kernel/debug).

DEBUG_KMEMLEAK_AUTO_SCAN
  Depending on the cpu, kmemleak scan may be cpu intensive and can
  stall user tasks at times. This option enables/disables automatic
  kmemleak scan at boot up.
  
  Say N here to disable kmemleak auto scan thread to stop automatic
  scanning. Disabling this option disables automatic reporting of
  memory leaks.
  
  If unsure, say Y.

DEBUG_KMEMLEAK_DEFAULT_OFF
  Say Y here to disable kmemleak by default. It can then be enabled
  on the command line via kmemleak=on.

DEBUG_KMEMLEAK_MEM_POOL_SIZE
  Kmemleak must track all the memory allocations to avoid
  reporting false positives. Since memory may be allocated or
  freed before kmemleak is fully initialised, use a static pool
  of metadata objects to track such callbacks. After kmemleak is
  fully initialised, this memory pool acts as an emergency one
  if slab allocations fail.

DEBUG_KMEMLEAK_TEST
  This option enables a module that explicitly leaks memory.
  
  If unsure, say N.

DEBUG_KOBJECT
  If you say Y here, some extra kobject debugging messages will be sent
  to the syslog.

DEBUG_KOBJECT_RELEASE
  kobjects are reference counted objects.  This means that their
  last reference count put is not predictable, and the kobject can
  live on past the point at which a driver decides to drop it's
  initial reference to the kobject gained on allocation.  An
  example of this would be a struct device which has just been
  unregistered.
  
  However, some buggy drivers assume that after such an operation,
  the memory backing the kobject can be immediately freed.  This
  goes completely against the principles of a refcounted object.
  
  If you say Y here, the kernel will delay the release of kobjects
  on the last reference count to improve the visibility of this
  kind of kobject release bug.

DEBUG_LIST
  Enable this to turn on extended checks in the linked-list
  walking routines.
  
  If unsure, say N.

DEBUG_LOCKDEP
  If you say Y here, the lock dependency engine will do
  additional runtime checks to debug itself, at the price
  of more runtime overhead.

DEBUG_LOCKING_API_SELFTESTS
  Say Y here if you want the kernel to run a short self-test during
  bootup. The self-test checks whether common types of locking bugs
  are detected by debugging mechanisms or not. (if you disable
  lock debugging then those bugs wont be detected of course.)
  The following locking APIs are covered: spinlocks, rwlocks,
  mutexes and rwsems.

DEBUG_LOCK_ALLOC
  This feature will check whether any held lock (spinlock, rwlock,
  mutex or rwsem) is incorrectly freed by the kernel, via any of the
  memory-freeing routines (kfree(), kmem_cache_free(), free_pages(),
  vfree(), etc.), whether a live lock is incorrectly reinitialized via
  spin_lock_init()/mutex_init()/etc., or whether there is any lock
  held during task exit.

DEBUG_MEMORY_INIT
  Enable this for additional checks during memory initialisation.
  The sanity checks verify aspects of the VM such as the memory model
  and other information provided by the architecture. Verbose
  information will be printed at KERN_DEBUG loglevel depending
  on the mminit_loglevel= command-line option.
  
  If unsure, say Y

DEBUG_MISC
  Say Y here if you need to enable miscellaneous debug code that should
  be under a more specific debug option but isn't.

DEBUG_MUTEXES
  This feature allows mutex semantics violations to be detected and
  reported.

DEBUG_NMI_SELFTEST
  Enabling this option turns on a quick NMI selftest to verify
  that the NMI behaves correctly.
  
  This might help diagnose strange hangs that rely on NMI to
  function properly.
  
  If unsure, say N.

DEBUG_NOMMU_REGIONS
  This option causes the global tree of anonymous and private mapping
  regions to be regularly checked for invalid topology.

DEBUG_NOTIFIERS
  Enable this to turn on sanity checking for notifier call chains.
  This is most useful for kernel developers to make sure that
  modules properly unregister themselves from notifier chains.
  This is a relatively cheap check but if you care about maximum
  performance, say N.

DEBUG_OBJECTS
  If you say Y here, additional code will be inserted into the
  kernel to track the life time of various objects and validate
  the operations on those objects.

DEBUG_OBJECTS_ENABLE_DEFAULT
  Debug objects boot parameter default value

DEBUG_OBJECTS_FREE
  This enables checks whether a k/v free operation frees an area
  which contains an object which has not been deactivated
  properly. This can make kmalloc/kfree-intensive workloads
  much slower.

DEBUG_OBJECTS_PERCPU_COUNTER
  If you say Y here, additional code will be inserted into the
  percpu counter routines to track the life time of percpu counter
  objects and validate the percpu counter operations.

DEBUG_OBJECTS_RCU_HEAD
  Enable this to turn on debugging of RCU list heads (call_rcu() usage).

DEBUG_OBJECTS_SELFTEST
  This enables the selftest of the object debug code.

DEBUG_OBJECTS_TIMERS
  If you say Y here, additional code will be inserted into the
  timer routines to track the life time of timer objects and
  validate the timer operations.

DEBUG_OBJECTS_WORK
  If you say Y here, additional code will be inserted into the
  work queue routines to track the life time of work objects and
  validate the work operations.

DEBUG_PAGEALLOC
  Unmap pages from the kernel linear mapping after free_pages().
  Depending on runtime enablement, this results in a small or large
  slowdown, but helps to find certain types of memory corruption.
  
  Also, the state of page tracking structures is checked more often as
  pages are being allocated and freed, as unexpected state changes
  often happen for same reasons as memory corruption (e.g. double free,
  use-after-free). The error reports for these checks can be augmented
  with stack traces of last allocation and freeing of the page, when
  PAGE_OWNER is also selected and enabled on boot.
  
  For architectures which don't enable ARCH_SUPPORTS_DEBUG_PAGEALLOC,
  fill the pages with poison patterns after free_pages() and verify
  the patterns before alloc_pages(). Additionally, this option cannot
  be enabled in combination with hibernation as that would result in
  incorrect warnings of memory corruption after a resume because free
  pages are not saved to the suspend image.
  
  By default this option will have a small overhead, e.g. by not
  allowing the kernel mapping to be backed by large pages on some
  architectures. Even bigger overhead comes when the debugging is
  enabled by DEBUG_PAGEALLOC_ENABLE_DEFAULT or the debug_pagealloc
  command line parameter.

DEBUG_PAGEALLOC_ENABLE_DEFAULT
  Enable debug page memory allocations by default? This value
  can be overridden by debug_pagealloc=off|on.

DEBUG_PAGE_REF
  This is a feature to add tracepoint for tracking down page reference
  manipulation. This tracking is useful to diagnose functional failure
  due to migration failures caused by page reference mismatches.  Be
  careful when enabling this feature because it adds about 30 KB to the
  kernel code.  However the runtime performance overhead is virtually
  nil until the tracepoints are actually enabled.

DEBUG_PERF_USE_VMALLOC
  Use vmalloc memory to back perf mmap() buffers.
  
  Mostly useful for debugging the vmalloc code on platforms
  that don't require it.
  
  Say N if unsure.

DEBUG_PER_CPU_MAPS
  Say Y to verify that the per_cpu map being accessed has
  been set up. This adds a fair amount of code to kernel memory
  and decreases performance.
  
  Say N if unsure.

DEBUG_PINCTRL
  Say Y here to add some extra checks and diagnostics to PINCTRL calls.

DEBUG_PLIST
  Enable this to turn on extended checks in the priority-ordered
  linked-list (plist) walking routines.  This checks the entire
  list multiple times during each manipulation.
  
  If unsure, say N.

DEBUG_PREEMPT
  If you say Y here then the kernel will use a debug variant of the
  commonly used smp_processor_id() function and will print warnings
  if kernel code uses it in a preemption-unsafe way. Also, the kernel
  will detect preemption count underflows.

DEBUG_RODATA_TEST
  This option enables a testcase for the setting rodata read-only.

DEBUG_RSEQ
  Enable extra debugging checks for the rseq system call.
  
  If unsure, say N.

DEBUG_RT_MUTEXES
  This allows rt mutex semantics violations and rt mutex related
  deadlocks (lockups) to be detected and reported automatically.

DEBUG_RWSEMS
  This debugging feature allows mismatched rw semaphore locks
  and unlocks to be detected and reported.

DEBUG_SECTION_MISMATCH
  The section mismatch analysis checks if there are illegal
  references from one section to another section.
  During linktime or runtime, some sections are dropped;
  any use of code/data previously in these sections would
  most likely result in an oops.
  In the code, functions and variables are annotated with
  __init,, etc. (see the full list in include/linux/init.h),
  which results in the code/data being placed in specific sections.
  The section mismatch analysis is always performed after a full
  kernel build, and enabling this option causes the following
  additional step to occur:
  - Add the option -fno-inline-functions-called-once to gcc commands.
    When inlining a function annotated with __init in a non-init
    function, we would lose the section information and thus
    the analysis would not catch the illegal reference.
    This option tells gcc to inline less (but it does result in
    a larger kernel).

DEBUG_SG
  Enable this to turn on checks on scatter-gather tables. This can
  help find problems with drivers that do not properly initialize
  their sg tables.
  
  If unsure, say N.

DEBUG_SHIRQ
  Enable this to generate a spurious interrupt just before a shared
  interrupt handler is deregistered (generating one when registering
  is currently disabled). Drivers need to handle this correctly. Some
  don't and need to be caught.

DEBUG_SLAB
  Say Y here to have the kernel do limited verification on memory
  allocation as well as poisoning memory on free to catch use of freed
  memory. This can make kmalloc/kfree-intensive workloads much slower.

DEBUG_SPINLOCK
  Say Y here and build SMP to catch missing spinlock initialization
  and certain other kinds of spinlock errors commonly made.  This is
  best used in conjunction with the NMI watchdog so that spinlock
  deadlocks are also debuggable.

DEBUG_STACKOVERFLOW
  Say Y here if you want to check for overflows of kernel, IRQ
  and exception stacks (if your architecture uses them). This
  option will show detailed messages if free stack space drops
  below a certain limit.
  
  These kinds of bugs usually occur when call-chains in the
  kernel get too deep, especially when interrupts are
  involved.
  
  Use this in cases where you see apparently random memory
  corruption, especially if it appears in 'struct thread_info'
  
  If in doubt, say "N".

DEBUG_STACK_USAGE
  Enables the display of the minimum amount of free stack which each
  task has ever had available in the sysrq-T and sysrq-P debug output.
  
  This option will slow down process creation somewhat.

DEBUG_TEST_DRIVER_REMOVE
  Say Y here if you want the Driver core to test driver remove functions
  by calling probe, remove, probe. This tests the remove path without
  having to unbind the driver or unload the driver module.
  
  This option is expected to find errors and may render your system
  unusable. You should say N here unless you are explicitly looking to
  test this functionality.

DEBUG_TIMEKEEPING
  This option will enable additional timekeeping sanity checks
  which may be helpful when diagnosing issues where timekeeping
  problems are suspected.
  
  This may include checks in the timekeeping hotpaths, so this
  option may have a (very small) performance impact to some
  workloads.
  
  If unsure, say N.

DEBUG_TLBFLUSH
  X86-only for now.
  
  This option allows the user to tune the amount of TLB entries the
  kernel flushes one-by-one instead of doing a full TLB flush. In
  certain situations, the former is cheaper. This is controlled by the
  tlb_flushall_shift knob under /sys/kernel/debug/x86. If you set it
  to -1, the code flushes the whole TLB unconditionally. Otherwise,
  for positive values of it, the kernel will use single TLB entry
  invalidating instructions according to the following formula:
  
  flush_entries <= active_tlb_entries / 2^tlb_flushall_shift
  
  If in doubt, say "N".

DEBUG_VIRTUAL
  Enable some costly sanity checks in virtual to page code. This can
  catch mistakes with virt_to_page() and friends.
  
  If unsure, say N.

DEBUG_VM
  Enable this to turn on extended checks in the virtual-memory system
  that may impact performance.
  
  If unsure, say N.

DEBUG_VM_PGFLAGS
  Enables extra validation on page flags operations.
  
  If unsure, say N.

DEBUG_VM_PGTABLE
  This option provides a debug method which can be used to test
  architecture page table helper functions on various platforms in
  verifying if they comply with expected generic MM semantics. This
  will help architecture code in making sure that any changes or
  new additions of these helpers still conform to expected
  semantics of the generic MM. Platforms will have to opt in for
  this through ARCH_HAS_DEBUG_VM_PGTABLE.
  
  If unsure, say N.

DEBUG_VM_RB
  Enable VM red-black tree debugging information and extra validations.
  
  If unsure, say N.

DEBUG_VM_VMACACHE
  Enable this to turn on VMA caching debug information. Doing so
  can cause significant overhead, so only enable it in non-production
  environments.
  
  If unsure, say N.

DEBUG_WQ_FORCE_RR_CPU
  Workqueue used to implicitly guarantee that work items queued
  without explicit CPU specified are put on the local CPU.  This
  guarantee is no longer true and while local CPU is still
  preferred work items may be put on foreign CPUs.  Kernel
  parameter "workqueue.debug_force_rr_cpu" is added to force
  round-robin CPU selection to flush out usages which depend on the
  now broken guarantee.  This config option enables the debug
  feature by default.  When enabled, memory and cache locality will
  be impacted.

DEBUG_WW_MUTEX_SLOWPATH
  This feature enables slowpath testing for w/w mutex users by
  injecting additional -EDEADLK wound/backoff cases. Together with
  the full mutex checks enabled with (CONFIG_PROVE_LOCKING) this
  will test all possible w/w mutex interface abuse with the
  exception of simply not acquiring all the required locks.
  Note that this feature can introduce significant overhead, so
  it really should not be enabled in a production or distro kernel,
  even a debug kernel.  If you are a driver writer, enable it.  If
  you are a distro, do not.

DEBUG_WX
  Generate a warning if any W+X mappings are found at boot.
  
  This is useful for discovering cases where the kernel is leaving W+X
  mappings after applying NX, as such mappings are a security risk.
  
  Look for a message in dmesg output like this:
  
    <arch>/mm: Checked W+X mappings: passed, no W+X pages found.
  
  or like this, if the check failed:
  
    <arch>/mm: Checked W+X mappings: failed, <N> W+X pages found.
  
  Note that even if the check fails, your kernel is possibly
  still fine, as W+X mappings are not a security hole in
  themselves, what they do is that they make the exploitation
  of other unfixed kernel bugs easier.
  
  There is no runtime or memory usage effect of this option
  once the kernel has booted up - it's a one time check.
  
  If in doubt, say "Y".

DECLANCE
  This driver is for the series of Ethernet controllers produced by
  DEC (now Compaq) based on the AMD LANCE chipset, including the
  DEPCA series.  (This chipset is better known via the NE2100 cards.)

DECNET
  The DECnet networking protocol was used in many products made by
  Digital (now Compaq).  It provides reliable stream and sequenced
  packet communications over which run a variety of services similar
  to those which run over TCP/IP.
  
  To find some tools to use with the kernel layer support, please
  look at Patrick Caulfield's web site:
  <http://linux-decnet.sourceforge.net/>.
  
  More detailed documentation is available in
  <file:Documentation/networking/decnet.rst>.
  
  Be sure to say Y to "/proc file system support" and "Sysctl support"
  below when using DECnet, since you will need sysctl support to aid
  in configuration at run time.
  
  The DECnet code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called decnet.

DECNET_NF_GRABULATOR
  Enable this module if you want to use the userland DECnet routing
  daemon. You will also need to enable routing support for DECnet
  unless you just want to monitor routing messages from other nodes.

DECNET_ROUTER
  Add support for turning your DECnet Endnode into a level 1 or 2
  router.  This is an experimental, but functional option.  If you
  do say Y here, then make sure that you also say Y to "Kernel/User
  network link driver", "Routing messages" and "Network packet
  filtering".  The first two are required to allow configuration via
  rtnetlink (you will need Alexey Kuznetsov's iproute2 package
  from <ftp://ftp.tux.org/pub/net/ip-routing/>). The "Network packet
  filtering" option will be required for the forthcoming routing daemon
  to work.
  
  See <file:Documentation/networking/decnet.rst> for more information.

DECOMPRESS_BZIP2
  No help

DECOMPRESS_GZIP
  No help

DECOMPRESS_LZ4
  No help

DECOMPRESS_LZMA
  No help

DECOMPRESS_LZO
  No help

DECOMPRESS_XZ
  No help

DECOMPRESS_ZSTD
  No help

DEFAULT_BBR
  No help

DEFAULT_BIC
  No help

DEFAULT_CDG
  No help

DEFAULT_CODEL
  No help

DEFAULT_CUBIC
  No help

DEFAULT_DCTCP
  No help

DEFAULT_FQ
  No help

DEFAULT_FQ_CODEL
  No help

DEFAULT_FQ_PIE
  No help

DEFAULT_HOSTNAME
  This option determines the default system hostname before userspace
  calls sethostname(2). The kernel traditionally uses "(none)" here,
  but you may wish to use a different default here to make a minimal
  system more usable with less configuration.

DEFAULT_HTCP
  No help

DEFAULT_HUNG_TASK_TIMEOUT
  This option controls the default timeout (in seconds) used
  to determine when a task has become non-responsive and should
  be considered hung.
  
  It can be adjusted at runtime via the kernel.hung_task_timeout_secs
  sysctl or by writing a value to
  /proc/sys/kernel/hung_task_timeout_secs.
  
  A timeout of 0 disables the check.  The default is two minutes.
  Keeping the default should be fine in most cases.

DEFAULT_HYBLA
  No help

DEFAULT_INIT
  This option determines the default init for the system if no init=
  option is passed on the kernel command line. If the requested path is
  not present, we will still then move on to attempting further
  locations (e.g. /sbin/init, etc). If this is empty, we will just use
  the fallback list when init= is not passed.

DEFAULT_MMAP_MIN_ADDR
  This is the portion of low virtual memory which should be protected
  from userspace allocation.  Keeping a user from writing to low pages
  can help reduce the impact of kernel NULL pointer bugs.
  
  For most ia64, ppc64 and x86 users with lots of address space
  a value of 65536 is reasonable and should cause no problems.
  On arm and other archs it should not be higher than 32768.
  Programs which use vm86 functionality or have some need to map
  this low address space will need CAP_SYS_RAWIO or disable this
  protection by setting the value to 0.
  
  This value can be changed after boot using the
  /proc/sys/vm/mmap_min_addr tunable.

DEFAULT_NET_SCH
  No help

DEFAULT_PFIFO_FAST
  No help

DEFAULT_RENO
  No help

DEFAULT_SECURITY_APPARMOR
  No help

DEFAULT_SECURITY_DAC
  No help

DEFAULT_SECURITY_SELINUX
  No help

DEFAULT_SECURITY_SMACK
  No help

DEFAULT_SECURITY_TOMOYO
  No help

DEFAULT_SFQ
  No help

DEFAULT_TCP_CONG
  No help

DEFAULT_VEGAS
  No help

DEFAULT_VENO
  No help

DEFAULT_WESTWOOD
  No help

DEFCONFIG_LIST
  No help

DEFERRED_STRUCT_PAGE_INIT
  Ordinarily all struct pages are initialised during early boot in a
  single thread. On very large machines this can take a considerable
  amount of time. If this option is set, large machines will bring up
  a subset of memmap at boot and then initialise the rest in parallel.
  This has a potential performance impact on tasks running early in the
  lifetime of the system until these kthreads finish the
  initialisation.

DEFXX
  This is support for the DIGITAL series of TURBOchannel (DEFTA),
  EISA (DEFEA) and PCI (DEFPA) controllers which can connect you
  to a local FDDI network.
  
  To compile this driver as a module, choose M here: the module
  will be called defxx.  If unsure, say N.

DEFXX_MMIO
  This instructs the driver to use EISA or PCI memory-mapped I/O
  (MMIO) as appropriate instead of programmed I/O ports (PIO).
  Enabling this gives an improvement in processing time in parts
  of the driver, but it may cause problems with EISA (DEFEA)
  adapters.  TURBOchannel does not have the concept of I/O ports,
  so MMIO is always used for these (DEFTA) adapters.
  
  If unsure, say N.

DEFZA
  This is support for the DEC FDDIcontroller 700 (DEFZA-AA, fiber)
  and 700-C (DEFZA-CA, copper) TURBOchannel network cards which
  can connect you to a local FDDI network.
  
  To compile this driver as a module, choose M here: the module
  will be called defza.  If unsure, say N.

DELL_LAPTOP
  This driver adds support for rfkill and backlight control to Dell
  laptops (except for some models covered by the Compal driver).

DELL_RBTN
  Say Y here if you want to support Dell Airplane Mode Switch ACPI
  device on Dell laptops. Sometimes it has names: DELLABCE or DELRBTN.
  This driver register rfkill device or input hotkey device depending
  on hardware type (hw switch slider or keyboard toggle button). For
  rfkill devices it receive HW switch events and set correct hard
  rfkill state.
  
  To compile this driver as a module, choose M here: the module will
  be called dell-rbtn.

DELL_RBU
  Say m if you want to have the option of updating the BIOS for your
  DELL system. Note you need a Dell OpenManage or Dell Update package (DUP)
  supporting application to communicate with the BIOS regarding the new
  image for the image update to take effect.
  See <file:Documentation/admin-guide/dell_rbu.rst> for more details on the driver.

DELL_SMBIOS
  This provides support for the Dell SMBIOS calling interface.
  If you have a Dell computer you should enable this option.
  
  Be sure to select at least one backend for it to work properly.

DELL_SMBIOS_SMM
  This provides an implementation for the Dell SMBIOS calling interface
  communicated over SMI/SMM.
  
  If you have a Dell computer from <=2017 you should say Y here.
  If you aren't sure and this module doesn't work for your computer
  it just won't load.

DELL_SMBIOS_WMI
  This provides an implementation for the Dell SMBIOS calling interface
  communicated over ACPI-WMI.
  
  If you have a Dell computer from >2007 you should say Y here.
  If you aren't sure and this module doesn't work for your computer
  it just won't load.

DELL_SMO8800
  Say Y here if you want to support SMO88XX freefall devices
  on Dell Latitude laptops.
  
  To compile this driver as a module, choose M here: the module will
  be called dell-smo8800.

DELL_WMI
  Say Y here if you want to support WMI-based hotkeys on Dell laptops.
  
  To compile this driver as a module, choose M here: the module will
  be called dell-wmi.

DELL_WMI_AIO
  Say Y here if you want to support WMI-based hotkeys on Dell
  All-In-One machines.
  
  To compile this driver as a module, choose M here: the module will
  be called dell-wmi-aio.

DELL_WMI_DESCRIPTOR
  No help

DELL_WMI_LED
  This adds support for the Latitude 2100 and similar
  notebooks that have an external LED.

DELL_WMI_SYSMAN
  This driver allows changing BIOS settings on many Dell machines from
  2018 and newer without the use of any additional software.
  
  To compile this driver as a module, choose M here: the module will
  be called dell-wmi-sysman.

DETECT_HUNG_TASK
  Say Y here to enable the kernel to detect "hung tasks",
  which are bugs that cause the task to be stuck in
  uninterruptible "D" state indefinitely.
  
  When a hung task is detected, the kernel will print the
  current stack trace (which you should report), but the
  task will stay in uninterruptible state. If lockdep is
  enabled then all held locks will also be reported. This
  feature has negligible overhead.

DEVFREQ_EVENT_EXYNOS_NOCP
  This add the devfreq-event driver for Exynos SoC. It provides NoC
  (Network on Chip) Probe counters to measure the bandwidth of AXI bus.

DEVFREQ_EVENT_EXYNOS_PPMU
  This add the devfreq-event driver for Exynos SoC. It provides PPMU
  (Platform Performance Monitoring Unit) counters to estimate the
  utilization of each module.

DEVFREQ_EVENT_ROCKCHIP_DFI
  This add the devfreq-event driver for Rockchip SoC. It provides DFI
  (DDR Monitor Module) driver to count ddr load.

DEVFREQ_GOV_PASSIVE
  Sets the frequency based on the frequency of its parent devfreq
  device. This governor does not change the frequency by itself
  through sysfs entries. The passive governor recommends that
  devfreq device uses the OPP table to get the frequency/voltage.

DEVFREQ_GOV_PERFORMANCE
  Sets the frequency at the maximum available frequency.
  This governor always returns UINT_MAX as frequency so that
  the DEVFREQ framework returns the highest frequency available
  at any time.

DEVFREQ_GOV_POWERSAVE
  Sets the frequency at the minimum available frequency.
  This governor always returns 0 as frequency so that
  the DEVFREQ framework returns the lowest frequency available
  at any time.

DEVFREQ_GOV_SIMPLE_ONDEMAND
  Chooses frequency based on the recent load on the device. Works
  similar as ONDEMAND governor of CPUFREQ does. A device with
  Simple-Ondemand should be able to provide busy/total counter
  values that imply the usage rate. A device may provide tuned
  values to the governor with data field at devfreq_add_device().

DEVFREQ_GOV_USERSPACE
  Sets the frequency at the user specified one.
  This governor returns the user configured frequency if there
  has been an input to /sys/devices/.../power/devfreq_set_freq.
  Otherwise, the governor does not change the frequency
  given at the initialization.

DEVFREQ_THERMAL
  This implements the generic devfreq cooling mechanism through
  frequency reduction for devices using devfreq.
  
  This will throttle the device by limiting the maximum allowed DVFS
  frequency corresponding to the cooling level.
  
  In order to use the power extensions of the cooling device,
  devfreq should use the simple_ondemand governor.
  
  If you want this support, you should say Y here.

DEVICE_PRIVATE
  Allows creation of struct pages to represent unaddressable device
  memory; i.e., memory that is only accessible from the device (or
  group of devices). You likely also want to select HMM_MIRROR.

DEVKMEM
  Say Y here if you want to support the /dev/kmem device. The
  /dev/kmem device is rarely used, but can be used for certain
  kind of kernel debugging operations.
  When in doubt, say "N".

DEVMEM
  Say Y here if you want to support the /dev/mem device.
  The /dev/mem device is used to access areas of physical
  memory.
  When in doubt, say "Y".

DEVPORT
  Say Y here if you want to support the /dev/port device. The /dev/port
  device is similar to /dev/mem, but for I/O ports.

DEVTMPFS
  This creates a tmpfs/ramfs filesystem instance early at bootup.
  In this filesystem, the kernel driver core maintains device
  nodes with their default names and permissions for all
  registered devices with an assigned major/minor number.
  Userspace can modify the filesystem content as needed, add
  symlinks, and apply needed permissions.
  It provides a fully functional /dev directory, where usually
  udev runs on top, managing permissions and adding meaningful
  symlinks.
  In very limited environments, it may provide a sufficient
  functional /dev without any further help. It also allows simple
  rescue systems, and reliably handles dynamic major/minor numbers.
  
  Notice: if CONFIG_TMPFS isn't enabled, the simpler ramfs
  file system will be used instead.

DEVTMPFS_MOUNT
  This will instruct the kernel to automatically mount the
  devtmpfs filesystem at /dev, directly after the kernel has
  mounted the root filesystem. The behavior can be overridden
  with the commandline parameter: devtmpfs.mount=0|1.
  This option does not affect initramfs based booting, here
  the devtmpfs filesystem always needs to be mounted manually
  after the rootfs is mounted.
  With this option enabled, it allows to bring up a system in
  rescue mode with init=/bin/sh, even when the /dev directory
  on the rootfs is completely empty.

DEV_APPLETALK
  AppleTalk is the protocol that Apple computers can use to communicate
  on a network.  If your Linux box is connected to such a network, and wish
  to do IP over it, or you have a LocalTalk card and wish to use it to
  connect to the AppleTalk network, say Y.

DEV_COREDUMP
  No help

DEV_DAX
  Support raw access to differentiated (persistence, bandwidth,
  latency...) memory via an mmap(2) capable character
  device.  Platform firmware or a device driver may identify a
  platform memory resource that is differentiated from the
  baseline memory pool.  Mappings of a /dev/daxX.Y device impose
  restrictions that make the mapping behavior deterministic.

DEV_DAX_HMEM
  EFI 2.8 platforms, and others, may advertise 'specific purpose'
  memory. For example, a high bandwidth memory pool. The
  indication from platform firmware is meant to reserve the
  memory from typical usage by default. This driver creates
  device-dax instances for these memory ranges, and that also
  enables the possibility to assign them to the DEV_DAX_KMEM
  driver to override the reservation and add them to kernel
  "System RAM" pool.
  
  Say M if unsure.

DEV_DAX_HMEM_DEVICES
  No help

DEV_DAX_KMEM
  Support access to persistent, or other performance
  differentiated memory as if it were System RAM. This allows
  easier use of persistent memory by unmodified applications, or
  adds core kernel memory services to heterogeneous memory types
  (HMEM) marked "reserved" by platform firmware.
  
  To use this feature, a DAX device must be unbound from the
  device_dax driver and bound to this kmem driver on each boot.
  
  Say N if unsure.

DEV_DAX_PMEM
  Support raw access to persistent memory.  Note that this
  driver consumes memory ranges allocated and exported by the
  libnvdimm sub-system.
  
  Say M if unsure

DEV_DAX_PMEM_COMPAT
  Older versions of the libdaxctl library expect to find all
  device-dax instances under /sys/class/dax. If libdaxctl in
  your distribution is older than v58 say M, otherwise say N.

DEV_PAGEMAP_OPS
  No help

DHT11
  This driver supports reading data via a single interrupt
  generating GPIO line. Currently tested are DHT11 and DHT22.
  Other sensors should work as well as long as they speak the
  same protocol.

DIAG288_WATCHDOG
  IBM s/390 and zSeries machines running under z/VM 5.1 or later
  provide a virtual watchdog timer to their guest that cause a
  user define Control Program command to be executed after a
  timeout.
  LPAR provides a very similar interface. This driver handles
  both.
  
  To compile this driver as a module, choose M here. The module
  will be called diag288_wdt.

DIGICOLOR_TIMER
  Enables the support for the digicolor timer driver.

DIGICOLOR_WATCHDOG
  Say Y here to include support for the watchdog timer
  in Conexant Digicolor SoCs.
  To compile this driver as a module, choose M here: the
  module will be called digicolor_wdt.

DIMLIB
  Dynamic Interrupt Moderation library.
  Implements an algorithm for dynamically changing CQ moderation values
  according to run time performance.

DISCONTIGMEM
  No help

DISCONTIGMEM_MANUAL
  This option provides enhanced support for discontiguous
  memory systems, over FLATMEM.  These systems have holes
  in their physical address spaces, and this option provides
  more efficient handling of these holes.
  
  Although "Discontiguous Memory" is still used by several
  architectures, it is considered deprecated in favor of
  "Sparse Memory".
  
  If unsure, choose "Sparse Memory" over this option.

DL2K
  This driver supports DL2000/TC902x/IP1000A-based Gigabit ethernet cards,
  which includes
  D-Link DGE-550T Gigabit Ethernet Adapter.
  D-Link DL2000-based Gigabit Ethernet Adapter.
  Sundance/Tamarack TC902x Gigabit Ethernet Adapter.
  ICPlus IP1000A-based cards
  
  To compile this driver as a module, choose M here: the
  module will be called dl2k.

DLHL60D
  Say yes here to build support for the All Sensors DLH series
  pressure sensors driver.
  
  To compile this driver as a module, choose M here: the module
  will be called dlhl60d.

DLM
  A general purpose distributed lock manager for kernel or userspace
  applications.

DLM_DEBUG
  Under the debugfs mount point, the name of each lockspace will
  appear as a file in the "dlm" directory.  The output is the
  list of resource and locks the local node knows about.

DLN2_ADC
  Say yes here to build support for Diolan DLN-2 ADC.
  
  This driver can also be built as a module. If so, the module will be
  called adc_dln2.

DM9000
  Support for DM9000 chipset.
  
  To compile this driver as a module, choose M here.  The module
  will be called dm9000.

DM9000_FORCE_SIMPLE_PHY_POLL
  This configuration forces the DM9000 to use the NSR's LinkStatus
  bit to determine if the link is up or down instead of the more
  costly MII PHY reads. Note, this will not work if the chip is
  operating with an external PHY.

DM9102
  This driver is for DM9102(A)/DM9132/DM9801 compatible PCI cards from
  Davicom (<http://www.davicom.com.tw/>).  If you have such a network
  (Ethernet) card, say Y.  Some information is contained in the file
  <file:Documentation/networking/device_drivers/ethernet/dec/dmfe.rst>.
  
  To compile this driver as a module, choose M here. The module will
  be called dmfe.

DMABUF_HEAPS
  Choose this option to enable the DMA-BUF userland memory heaps.
  This options creates per heap chardevs in /dev/dma_heap/ which
  allows userspace to allocate dma-bufs that can be shared
  between drivers.

DMABUF_HEAPS_CMA
  Choose this option to enable dma-buf CMA heap. This heap is backed
  by the Contiguous Memory Allocator (CMA). If your system has these
  regions, you should say Y here.

DMABUF_HEAPS_SYSTEM
  Choose this option to enable the system dmabuf heap. The system heap
  is backed by pages from the buddy allocator. If in doubt, say Y.

DMABUF_MOVE_NOTIFY
  Don't pin buffers if the dynamic DMA-buf interface is available on
  both the exporter as well as the importer. This fixes a security
  problem where userspace is able to pin unrestricted amounts of memory
  through DMA-buf.
  This is marked experimental because we don't yet have a consistent
  execution context and memory management between drivers.

DMABUF_SELFTESTS
  No help

DMADEVICES
  DMA engines can do asynchronous data transfers without
  involving the host CPU.  Currently, this framework can be
  used to offload memory copies in the network stack and
  RAID operations in the MD driver.  This menu only presents
  DMA Device drivers supported by the configured arch, it may
  be empty in some cases.

DMADEVICES_DEBUG
  This is an option for use by developers; most people should
  say N here.  This enables DMA engine core and driver debugging.

DMADEVICES_VDEBUG
  This is an option for use by developers; most people should
  say N here.  This enables deeper (more verbose) debugging of
  the DMA engine core and drivers.

DMARD06
  Say yes here to build support for the Domintech low-g tri-axial
  digital accelerometers: DMARD05, DMARD06, DMARD07.
  
  To compile this driver as a module, choose M here: the
  module will be called dmard06.

DMARD09
  Say yes here to get support for the Domintech DMARD09 3-axis
  accelerometer.
  
  Choosing M will build the driver as a module. If so, the module
  will be called dmard09.

DMARD10
  Say yes here to get support for the Domintech DMARD10 3-axis
  accelerometer.
  
  Choosing M will build the driver as a module. If so, the module
  will be called dmard10.

DMAR_TABLE
  No help

DMASCC
  This is a driver for high-speed SCC boards, i.e. those supporting
  DMA on one port. You usually use those boards to connect your
  computer to an amateur radio modem (such as the WA4DSY 56kbps
  modem), in order to send and receive AX.25 packet radio network
  traffic.
  
  Currently, this driver supports Ottawa PI/PI2, Paccomm/Gracilis
  PackeTwin, and S5SCC/DMA boards. They are detected automatically.
  If you have one of these cards, say Y here and read the AX25-HOWTO,
  available from <http://www.tldp.org/docs.html#howto>.
  
  This driver can operate multiple boards simultaneously. If you
  compile it as a module (by saying M instead of Y), it will be called
  dmascc. If you don't pass any parameter to the driver, all
  possible I/O addresses are probed. This could irritate other devices
  that are currently not in use. You may specify the list of addresses
  to be probed by "dmascc.io=addr1,addr2,..." (when compiled into the
  kernel image) or "io=addr1,addr2,..." (when loaded as a module). The
  network interfaces will be called dmascc0 and dmascc1 for the board
  detected first, dmascc2 and dmascc3 for the second one, and so on.
  
  Before you configure each interface with ifconfig, you MUST set
  certain parameters, such as channel access timing, clock mode, and
  DMA channel. This is accomplished with a small utility program,
  dmascc_cfg, available at
  <http://www.linux-ax25.org/wiki/Ax25-tools>. Please be sure to
  get at least version 1.27 of dmascc_cfg, as older versions will not
  work with the current driver.

DMASOUND
  No help

DMASOUND_ATARI
  If you want to use the internal audio of your Atari in Linux, answer
  Y to this question. This will provide a Sun-like /dev/audio,
  compatible with the Linux/i386 sound system. Otherwise, say N.
  
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  <file:Documentation/kbuild/modules.rst>.

DMASOUND_PAULA
  If you want to use the internal audio of your Amiga in Linux, answer
  Y to this question. This will provide a Sun-like /dev/audio,
  compatible with the Linux/i386 sound system. Otherwise, say N.
  
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  <file:Documentation/kbuild/modules.rst>.

DMASOUND_Q40
  If you want to use the internal audio of your Q40 in Linux, answer
  Y to this question. This will provide a Sun-like /dev/audio,
  compatible with the Linux/i386 sound system. Otherwise, say N.
  
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  <file:Documentation/kbuild/modules.rst>.

DMATEST
  Simple DMA test client. Say N unless you're debugging a
  DMA Device driver.

DMA_ACPI
  No help

DMA_API_DEBUG
  Enable this option to debug the use of the DMA API by device drivers.
  With this option you will be able to detect common bugs in device
  drivers like double-freeing of DMA mappings or freeing mappings that
  were never allocated.
  
  This option causes a performance degradation.  Use only if you want to
  debug device drivers and dma interactions.
  
  If unsure, say N.

DMA_API_DEBUG_SG
  Perform extra checking that callers of dma_map_sg() have respected the
  appropriate segment length/boundary limits for the given device when
  preparing DMA scatterlists.
  
  This is particularly likely to have been overlooked in cases where the
  dma_map_sg() API is used for general bulk mapping of pages rather than
  preparing literal scatter-gather descriptors, where there is a risk of
  unexpected behaviour from DMA API implementations if the scatterlist
  is technically out-of-spec.
  
  If unsure, say N.

DMA_BCM2835
  No help

DMA_CMA
  This enables the Contiguous Memory Allocator which allows drivers
  to allocate big physically-contiguous blocks of memory for use with
  hardware components that do not support I/O map nor scatter-gather.
  
  You can disable CMA by specifying "cma=0" on the kernel's command
  line.
  
  For more information see <kernel/dma/contiguous.c>.
  If unsure, say "n".

DMA_COHERENT_POOL
  No help

DMA_DECLARE_COHERENT
  No help

DMA_DIRECT_REMAP
  No help

DMA_ENGINE
  No help

DMA_ENGINE_RAID
  No help

DMA_FENCE_TRACE
  Enable the DMA_FENCE_TRACE printks. This will add extra
  spam to the console log, but will make it easier to diagnose
  lockup related problems for dma-buffers shared across multiple
  devices.

DMA_JZ4780
  This selects support for the DMA controller in Ingenic JZ4780 SoCs.
  If you have a board based on such a SoC and wish to use DMA for
  devices which can use the DMA controller, say Y or M here.

DMA_MAP_BENCHMARK
  Provides /sys/kernel/debug/dma_map_benchmark that helps with testing
  performance of dma_(un)map_page.
  
  See tools/testing/selftests/dma/dma_map_benchmark.c

DMA_NONCOHERENT_MMAP
  No help

DMA_OF
  No help

DMA_OMAP
  Enable support for the TI sDMA (System DMA or DMA4) controller. This
  DMA engine is found on OMAP and DRA7xx parts.

DMA_OPS
  No help

DMA_OPS_BYPASS
  No help

DMA_PERNUMA_CMA
  Enable this option to get pernuma CMA areas so that devices like
  ARM64 SMMU can get local memory by DMA coherent APIs.
  
  You can set the size of pernuma CMA by specifying "cma_pernuma=size"
  on the kernel's command line.

DMA_RALINK
  No help

DMA_REMAP
  No help

DMA_SA11X0
  Support the DMA engine found on Intel StrongARM SA-1100 and
  SA-1110 SoCs.  This DMA engine can only be used with on-chip
  devices.

DMA_SHARED_BUFFER
  This option enables the framework for buffer-sharing between
  multiple drivers. A buffer is associated with a file using driver
  APIs extension; the file's descriptor can then be passed on to other
  driver.

DMA_SUN4I
  Enable support for the DMA controller present in the sun4i,
  sun5i and sun7i Allwinner ARM SoCs.

DMA_SUN6I
  Support for the DMA engine first found in Allwinner A31 SoCs.

DMA_VIRTUAL_CHANNELS
  No help

DMI
  Enabled scanning of DMI to identify machine quirks. Say Y
  here unless you have verified that your setup is not
  affected by entries in the DMI blacklist. Required by PNP
  BIOS code.

DMIID
  Say Y here if you want to query SMBIOS/DMI system identification
  information from userspace through /sys/class/dmi/id/ or if you want
  DMI-based module auto-loading.

DMI_SCAN_MACHINE_NON_EFI_FALLBACK
  No help

DMI_SYSFS
  Say Y or M here to enable the exporting of the raw DMI table
  data via sysfs.  This is useful for consuming the data without
  requiring any access to /dev/mem at all.  Tables are found
  under /sys/firmware/dmi when this option is enabled and
  loaded.

DM_BIO_PRISON
  Some bio locking schemes used by other device-mapper targets
  including thin provisioning.

DM_BUFIO
  This interface allows you to do buffered I/O on a device and acts
  as a cache, holding recently-read blocks in memory and performing
  delayed writes.

DM_CACHE
  dm-cache attempts to improve performance of a block device by
  moving frequently used data to a smaller, higher performance
  device.  Different 'policy' plugins can be used to change the
  algorithms used to select which blocks are promoted, demoted,
  cleaned etc.  It supports writeback and writethrough modes.

DM_CACHE_SMQ
  A cache policy that uses a multiqueue ordered by recent hits
  to select which blocks should be promoted and demoted.
  This is meant to be a general purpose policy.  It prioritises
  reads over writes.  This SMQ policy (vs MQ) offers the promise
  of less memory utilization, improved performance and increased
  adaptability in the face of changing workloads.

DM_CLONE
  dm-clone produces a one-to-one copy of an existing, read-only source
  device into a writable destination device. The cloned device is
  visible/mountable immediately and the copy of the source device to the
  destination device happens in the background, in parallel with user
  I/O.
  
  If unsure, say N.

DM_CRYPT
  This device-mapper target allows you to create a device that
  transparently encrypts the data on it. You'll need to activate
  the ciphers you're going to use in the cryptoapi configuration.
  
  For further information on dm-crypt and userspace tools see:
  <https://gitlab.com/cryptsetup/cryptsetup/wikis/DMCrypt>
  
  To compile this code as a module, choose M here: the module will
  be called dm-crypt.
  
  If unsure, say N.

DM_DEBUG
  Enable this for messages that may help debug device-mapper problems.
  
  If unsure, say N.

DM_DEBUG_BLOCK_MANAGER_LOCKING
  Block manager locking can catch various metadata corruption issues.
  
  If unsure, say N.

DM_DEBUG_BLOCK_STACK_TRACING
  Enable this for messages that may help debug problems with the
  block manager locking used by thin provisioning and caching.
  
  If unsure, say N.

DM_DELAY
  A target that delays reads and/or writes and can send
  them to different devices.  Useful for testing.
  
  If unsure, say N.

DM_DUST
  A target that simulates bad sector behavior.
  Useful for testing.
  
  If unsure, say N.

DM_EBS
  dm-ebs emulates smaller logical block size on backing devices
  with larger ones (e.g. 512 byte sectors on 4K native disks).

DM_ERA
  dm-era tracks which parts of a block device are written to
  over time.  Useful for maintaining cache coherency when using
  vendor snapshots.

DM_FLAKEY
  A target that intermittently fails I/O for debugging purposes.

DM_INIT
  Enable "dm-mod.create=" parameter to create mapped devices at init time.
  This option is useful to allow mounting rootfs without requiring an
  initramfs.
  See Documentation/admin-guide/device-mapper/dm-init.rst for dm-mod.create="..."
  format.
  
  If unsure, say N.

DM_INTEGRITY
  This device-mapper target emulates a block device that has
  additional per-sector tags that can be used for storing
  integrity information.
  
  This integrity target is used with the dm-crypt target to
  provide authenticated disk encryption or it can be used
  standalone.
  
  To compile this code as a module, choose M here: the module will
  be called dm-integrity.

DM_LOG_USERSPACE
  The userspace logging module provides a mechanism for
  relaying the dm-dirty-log API to userspace.  Log designs
  which are more suited to userspace implementation (e.g.
  shared storage logs) or experimental logs can be implemented
  by leveraging this framework.

DM_LOG_WRITES
  This device-mapper target takes two devices, one device to use
  normally, one to log all write operations done to the first device.
  This is for use by file system developers wishing to verify that
  their fs is writing a consistent file system at all times by allowing
  them to replay the log in a variety of ways and to check the
  contents.
  
  To compile this code as a module, choose M here: the module will
  be called dm-log-writes.
  
  If unsure, say N.

DM_MIRROR
  Allow volume managers to mirror logical volumes, also
  needed for live data migration tools such as 'pvmove'.

DM_MULTIPATH
  Allow volume managers to support multipath hardware.

DM_MULTIPATH_HST
  This path selector is a dynamic load balancer which selects
  the path expected to complete the incoming I/O in the shortest
  time by comparing estimated service time (based on historical
  service time).
  
  If unsure, say N.

DM_MULTIPATH_IOA
  This path selector selects the path based on the CPU the IO is
  executed on and the CPU to path mapping setup at path addition time.
  
  If unsure, say N.

DM_MULTIPATH_QL
  This path selector is a dynamic load balancer which selects
  the path with the least number of in-flight I/Os.
  
  If unsure, say N.

DM_MULTIPATH_ST
  This path selector is a dynamic load balancer which selects
  the path expected to complete the incoming I/O in the shortest
  time.
  
  If unsure, say N.

DM_PERSISTENT_DATA
  Library providing immutable on-disk data structure support for
  device-mapper targets such as the thin provisioning target.
  

DM_RAID
  A dm target that supports RAID1, RAID10, RAID4, RAID5 and RAID6 mappings
  
  A RAID-5 set of N drives with a capacity of C MB per drive provides
  the capacity of C * (N - 1) MB, and protects against a failure
  of a single drive. For a given sector (row) number, (N - 1) drives
  contain data sectors, and one drive contains the parity protection.
  For a RAID-4 set, the parity blocks are present on a single drive,
  while a RAID-5 set distributes the parity across the drives in one
  of the available parity distribution methods.
  
  A RAID-6 set of N drives with a capacity of C MB per drive
  provides the capacity of C * (N - 2) MB, and protects
  against a failure of any two drives. For a given sector
  (row) number, (N - 2) drives contain data sectors, and two
  drives contains two independent redundancy syndromes.  Like
  RAID-5, RAID-6 distributes the syndromes across the drives
  in one of the available parity distribution methods.

DM_SNAPSHOT
  Allow volume managers to take writable snapshots of a device.

DM_SWITCH
  This device-mapper target creates a device that supports an arbitrary
  mapping of fixed-size regions of I/O across a fixed set of paths.
  The path used for any specific region can be switched dynamically
  by sending the target a message.
  
  To compile this code as a module, choose M here: the module will
  be called dm-switch.
  
  If unsure, say N.

DM_THIN_PROVISIONING
  Provides thin provisioning and snapshots that share a data store.

DM_UEVENT
  Generate udev events for DM events.

DM_UNSTRIPED
  Unstripes I/O so it is issued solely on a single drive in a HW
  RAID0 or dm-striped target.

DM_VERITY
  This device-mapper target creates a read-only device that
  transparently validates the data on one underlying device against
  a pre-generated tree of cryptographic checksums stored on a second
  device.
  
  You'll need to activate the digests you're going to use in the
  cryptoapi configuration.
  
  To compile this code as a module, choose M here: the module will
  be called dm-verity.
  
  If unsure, say N.

DM_VERITY_FEC
  Add forward error correction support to dm-verity. This option
  makes it possible to use pre-generated error correction data to
  recover from corrupted blocks.
  
  If unsure, say N.

DM_VERITY_VERIFY_ROOTHASH_SIG
  Add ability for dm-verity device to be validated if the
  pre-generated tree of cryptographic checksums passed has a pkcs#7
  signature file that can validate the roothash of the tree.
  
  By default, rely on the builtin trusted keyring.
  
  If unsure, say N.

DM_VERITY_VERIFY_ROOTHASH_SIG_SECONDARY_KEYRING
  Rely on the secondary trusted keyring to verify dm-verity signatures.
  
  If unsure, say N.

DM_WRITECACHE
  The writecache target caches writes on persistent memory or SSD.
  It is intended for databases or other programs that need extremely
  low commit latency.
  
  The writecache target doesn't cache reads because reads are supposed
  to be cached in standard RAM.

DM_ZERO
  A target that discards writes, and returns all zeroes for
  reads.  Useful in some recovery situations.

DM_ZONED
  This device-mapper target takes a host-managed or host-aware zoned
  block device and exposes most of its capacity as a regular block
  device (drive-managed zoned block device) without any write
  constraints. This is mainly intended for use with file systems that
  do not natively support zoned block devices but still want to
  benefit from the increased capacity offered by SMR disks. Other uses
  by applications using raw block devices (for example object stores)
  are also possible.
  
  To compile this code as a module, choose M here: the module will
  be called dm-zoned.
  
  If unsure, say N.

DNET
  The Dave ethernet interface (DNET) is found on Qong Board FPGA.
  Say Y to include support for the DNET chip.
  
  To compile this driver as a module, choose M here: the module
  will be called dnet.

DNOTIFY
  Dnotify is a directory-based per-fd file change notification system
  that uses signals to communicate events to user-space.  There exist
  superior alternatives, but some applications may still rely on
  dnotify.
  
  If unsure, say Y.

DNS_RESOLVER
  Saying Y here will include support for the DNS Resolver key type
  which can be used to make upcalls to perform DNS lookups in
  userspace.
  
  DNS Resolver is used to query DNS server for information.  Examples
  being resolving a UNC hostname element to an IP address for CIFS or
  performing a DNS query for AFSDB records so that AFS can locate a
  cell's volume location database servers.
  
  DNS Resolver is used by the CIFS and AFS modules, and would support
  SMB2 later.  DNS Resolver is supported by the userspace upcall
  helper "/sbin/dns.resolver" via /etc/request-key.conf.
  
  See <file:Documentation/networking/dns_resolver.rst> for further
  information.
  
  To compile this as a module, choose M here: the module will be called
  dnsresolver.
  
  If unsure, say N.

DOVE_CLK
  No help

DOVE_THERMAL
  Support for the Dove thermal sensor driver in the Linux thermal
  framework.

DP83640_PHY
  Supports the DP83640 PHYTER with IEEE 1588 features.
  
  This driver adds support for using the DP83640 as a PTP
  clock. This clock is only useful if your PTP programs are
  getting hardware time stamps on the PTP Ethernet packets
  using the SO_TIMESTAMPING API.
  
  In order for this to work, your MAC driver must also
  implement the skb_tx_timestamp() function.

DP83822_PHY
  Supports the DP83822, DP83825I, DP83825CM, DP83825CS, DP83825S,
  DP83826C and DP83826NC PHYs.

DP83848_PHY
  Supports the DP83848 PHY.

DP83867_PHY
  Currently supports the DP83867 PHY.

DP83869_PHY
  Currently supports the DP83869 PHY.  This PHY supports copper and
  fiber connections.

DP83TC811_PHY
  Supports the DP83TC811 PHY.

DPAA2_CONSOLE
  Console driver for DPAA2 platforms. Exports 2 char devices,
  /dev/dpaa2_mc_console and /dev/dpaa2_aiop_console,
  which can be used to dump the Management Complex and AIOP
  firmware logs.

DPAA_ERRATUM_A050385
  DPAA FMan erratum A050385 software workaround implementation:
  align buffers, data start, SG fragment length to avoid FMan DMA
  splits.
  FMAN DMA read or writes under heavy traffic load may cause FMAN
  internal resource leak thus stopping further packet processing.
  The FMAN internal queue can overflow when FMAN splits single
  read or write transactions into multiple smaller transactions
  such that more than 17 AXI transactions are in flight from FMAN
  to interconnect. When the FMAN internal queue overflows, it can
  stall further packet processing. The issue can occur with any
  one of the following three conditions:
  1. FMAN AXI transaction crosses 4K address boundary (Errata
  A010022)
  2. FMAN DMA address for an AXI transaction is not 16 byte
  aligned, i.e. the last 4 bits of an address are non-zero
  3. Scatter Gather (SG) frames have more than one SG buffer in
  the SG list and any one of the buffers, except the last
  buffer in the SG list has data size that is not a multiple
  of 16 bytes, i.e., other than 16, 32, 48, 64, etc.
  With any one of the above three conditions present, there is
  likelihood of stalled FMAN packet processing, especially under
  stress with multiple ports injecting line-rate traffic.

DPM_WATCHDOG
  Sets up a watchdog timer to capture drivers that are
  locked up attempting to suspend/resume a device.
  A detected lockup causes system panic with message
  captured in pstore device for inspection in subsequent
  boot session.

DPM_WATCHDOG_TIMEOUT
  No help

DPOT_DAC
  Say yes here to build support for DAC emulation using a digital
  potentiometer.
  
  To compile this driver as a module, choose M here: the module will be
  called dpot-dac.

DPS310
  Support for the Infineon DPS310 digital barometric pressure sensor.
  It can be accessed over I2C bus.
  
  This driver can also be built as a module.  If so, the module will be
  called dps310.

DPTF_PCH_FIVR
  This driver adds support for Dynamic Platform and Thermal Framework
  (DPTF) PCH FIVR Participant device support. This driver allows to
  switch the PCH FIVR (Fully Integrated Voltage Regulator) frequency.
  This participant is responsible for exposing:
        freq_mhz_low_clock
        freq_mhz_high_clock
  
  To compile this driver as a module, choose M here:
  the module will be called dptf_pch_fivr.

DPTF_POWER
  This driver adds support for Dynamic Platform and Thermal Framework
  (DPTF) Platform Power Participant device (INT3407) support.
  This participant is responsible for exposing platform telemetry:
        max_platform_power
        platform_power_source
        adapter_rating
        battery_steady_power
        charger_type
  
  To compile this driver as a module, choose M here:
  the module will be called dptf_power.

DQL
  No help

DRA752_THERMAL
  If you say yes here you get thermal support for the Texas Instruments
  DRA752 SoC family. The current chip supported are:
   - DRA752
  
  This includes alert interrupts generation and also the TSHUT
  support.

DRAGONRISE_FF
  Say Y here if you want to enable force feedback support for DragonRise Inc.
  game controllers.

DRBD_FAULT_INJECTION
  Say Y here if you want to simulate IO errors, in order to test DRBD's
  behavior.
  
  The actual simulation of IO errors is done by writing 3 values to
  /sys/module/drbd/parameters/
  
  enable_faults: bitmask of...
  1        meta data write
  2               read
  4        resync data write
  8                    read
  16        data write
  32        data read
  64        read ahead
  128        kmalloc of bitmap
  256        allocation of peer_requests
  512        insert data corruption on receiving side
  
  fault_devs: bitmask of minor numbers
  fault_rate: frequency in percent
  
  Example: Simulate data write errors on /dev/drbd0 with a probability of 5%.
        echo 16 > /sys/module/drbd/parameters/enable_faults
        echo 1 > /sys/module/drbd/parameters/fault_devs
        echo 5 > /sys/module/drbd/parameters/fault_rate
  
  If unsure, say N.

DRM
  Kernel-level support for the Direct Rendering Infrastructure (DRI)
  introduced in XFree86 4.0. If you say Y here, you need to select
  the module that's right for your graphics card from the list below.
  These modules provide support for synchronization, security, and
  DMA transfers. Please see <http://dri.sourceforge.net/> for more
  details.  You should also select and configure AGP
  (/dev/agpgart) support if it is available for your platform.

DRM_AMDGPU
  Choose this option if you have a recent AMD Radeon graphics card.
  
  If M is selected, the module will be called amdgpu.

DRM_AMDGPU_CIK
  Choose this option if you want to enable support for CIK asics.
  
  CIK is already supported in radeon. Support for CIK in amdgpu
  will be disabled by default and is still provided by radeon.
  Use module options to override this:
  
  radeon.cik_support=0 amdgpu.cik_support=1

DRM_AMDGPU_GART_DEBUGFS
  Selecting this option creates a debugfs file to inspect the mapped
  pages. Uses more memory for housekeeping, enable only for debugging.

DRM_AMDGPU_SI
  Choose this option if you want to enable experimental support
  for SI asics.
  
  SI is already supported in radeon. Experimental support for SI
  in amdgpu will be disabled by default and is still provided by
  radeon. Use module options to override this:
  
  radeon.si_support=0 amdgpu.si_support=1

DRM_AMDGPU_USERPTR
  This option selects CONFIG_HMM and CONFIG_HMM_MIRROR if it
  isn't already selected to enabled full userptr support.

DRM_AMD_ACP
  Choose this option to enable ACP IP support for AMD SOCs.
  This adds the ACP (Audio CoProcessor) IP driver and wires
  it up into the amdgpu driver.  The ACP block provides the DMA
  engine for the i2s-based ALSA driver. It is required for audio
  on APUs which utilize an i2s codec.

DRM_AMD_DC
  Choose this option if you want to use the new display engine
  support for AMDGPU. This adds required support for Vega and
  Raven ASICs.

DRM_AMD_DC_DCN
  Raven, Navi, and newer family support for display engine

DRM_AMD_DC_HDCP
  Choose this option if you want to support HDCP authentication.

DRM_AMD_DC_SI
  Choose this option to enable new AMD DC support for SI asics
  by default. This includes Tahiti, Pitcairn, Cape Verde, Oland.
  Hainan is not supported by AMD DC and it has no physical DCE6.

DRM_ANALOGIX_ANX6345
  ANX6345 is an ultra-low Full-HD DisplayPort/eDP
  transmitter designed for portable devices. The
  ANX6345 transforms the LVTTL RGB output of an
  application processor to eDP or DisplayPort.

DRM_ANALOGIX_ANX7625
  ANX7625 is an ultra-low power 4K mobile HD transmitter
  designed for portable devices. It converts MIPI/DPI to
  DisplayPort1.3 4K.

DRM_ANALOGIX_ANX78XX
  ANX78XX is an ultra-low power Full-HD SlimPort transmitter
  designed for portable devices. The ANX78XX transforms
  the HDMI output of an application processor to MyDP
  or DisplayPort.

DRM_ANALOGIX_DP
  No help

DRM_ARCPGU
  Choose this option if you have an ARC PGU controller.
  
  If M is selected the module will be called arcpgu.

DRM_ARMADA
  Support the "LCD" controllers found on the Marvell Armada 510
  devices.  There are two controllers on the device, each controller
  supports graphics and video overlays.
  
  This driver provides no built-in acceleration; acceleration is
  performed by other IP found on the SoC.  This driver provides
  kernel mode setting and buffer management to userspace.

DRM_ASPEED_GFX
  Chose this option if you have an ASPEED AST2500 SOC Display
  Controller (aka GFX).
  
  If M is selected this module will be called aspeed_gfx.

DRM_AST
  Say yes for experimental AST GPU driver. Do not enable
  this driver without having a working -modesetting,
  and a version of AST that knows to fail if KMS
  is bound to the driver. These GPUs are commonly found
  in server chipsets.
  

DRM_ATMEL_HLCDC
  Choose this option if you have an ATMEL SoC with an HLCDC display
  controller (i.e. at91sam9n12, at91sam9x5 family or sama5d3 family).

DRM_BOCHS
  Choose this option for qemu.
  If M is selected the module will be called bochs-drm.

DRM_BRIDGE
  Bridge registration and lookup framework.

DRM_CDNS_DSI
  Support Cadence DPI to DSI bridge. This is an internal
  bridge and is meant to be directly embedded in a SoC.

DRM_CDNS_MHDP8546
  Support Cadence DPI to DP bridge. This is an internal
  bridge and is meant to be directly embedded in a SoC.
  It takes a DPI stream as input and outputs it encoded
  in DP format.

DRM_CDNS_MHDP8546_J721E
  Support J721E Cadence DPI/DP wrapper. This is a wrapper
  which adds support for J721E related platform ops. It
  initializes the J721E Display Port and sets up the
  clock and data muxes.

DRM_CHRONTEL_CH7033
  Enable support for the Chrontel CH7033 VGA/DVI/HDMI Encoder, as
  found in the Dell Wyse 3020 thin client.
  
  If in doubt, say "N".

DRM_CIRRUS_QEMU
  This is a KMS driver for emulated cirrus device in qemu.
  It is *NOT* intended for real cirrus devices. This requires
  the modesetting userspace X.org driver.
  
  Cirrus is obsolete, the hardware was designed in the 90ies
  and can't keep up with todays needs.  More background:
  https://www.kraxel.org/blog/2014/10/qemu-using-cirrus-considered-harmful/
  
  Better alternatives are:
    - stdvga (DRM_BOCHS, qemu -vga std, default in qemu 2.2+)
    - qxl (DRM_QXL, qemu -vga qxl, works best with spice)
    - virtio (DRM_VIRTIO_GPU), qemu -vga virtio)

DRM_DEBUG_DP_MST_TOPOLOGY_REFS
  Enables debug tracing for topology refs in DRM's DP MST helpers. A
  history of each topology reference/dereference will be printed to the
  kernel log once a port or branch device's topology refcount reaches 0.
  
  This has the potential to use a lot of memory and print some very
  large kernel messages. If in doubt, say "N".

DRM_DEBUG_MM
  Enable allocation tracking of memory manager and leak detection on
  shutdown.
  
  Recommended for driver developers only.
  
  If in doubt, say "N".

DRM_DEBUG_SELFTEST
  This option provides kernel modules that can be used to run
  various selftests on parts of the DRM api. This option is not
  useful for distributions or general kernels, but only for kernel
  developers working on DRM and associated drivers.
  
  If in doubt, say "N".

DRM_DISPLAY_CONNECTOR
  Driver for display connectors with support for DDC and hot-plug
  detection. Most display controller handle display connectors
  internally and don't need this driver, but the DRM subsystem is
  moving towards separating connector handling from display controllers
  on ARM-based platforms. Saying Y here when this driver is not needed
  will not cause any issue.

DRM_DP_AUX_CHARDEV
  Choose this option to enable a /dev/drm_dp_auxN node that allows to
  read and write values to arbitrary DPCD registers on the DP aux
  channel.

DRM_DP_CEC
  Choose this option if you want to enable HDMI CEC support for
  DisplayPort/USB-C to HDMI adapters.
  
  Note: not all adapters support this feature, and even for those
  that do support this they often do not hook up the CEC pin.

DRM_DW_HDMI
  No help

DRM_DW_HDMI_AHB_AUDIO
  Support the AHB Audio interface which is part of the Synopsys
  Designware HDMI block.  This is used in conjunction with
  the i.MX6 HDMI driver.

DRM_DW_HDMI_CEC
  Support the CE interface which is part of the Synopsys
  Designware HDMI block.

DRM_DW_HDMI_I2S_AUDIO
  Support the I2S Audio interface which is part of the Synopsys
  Designware HDMI block.

DRM_DW_MIPI_DSI
  No help

DRM_ETNAVIV
  DRM driver for Vivante GPUs.

DRM_ETNAVIV_THERMAL
  Compile in support for thermal throttling.
  Say Y unless you want to risk burning your SoC.

DRM_EXPORT_FOR_TESTS
  No help

DRM_EXYNOS
  Choose this option if you have a Samsung SoC Exynos chipset.
  If M is selected the module will be called exynosdrm.

DRM_EXYNOS5433_DECON
  Choose this option if you want to use Exynos5433 DECON for DRM.

DRM_EXYNOS7_DECON
  Choose this option if you want to use Exynos DECON for DRM.

DRM_EXYNOS_DP
  This enables support for DP device.

DRM_EXYNOS_DPI
  This enables support for Exynos parallel output.

DRM_EXYNOS_DSI
  This enables support for Exynos MIPI-DSI device.

DRM_EXYNOS_FIMC
  Choose this option if you want to use Exynos FIMC for DRM.

DRM_EXYNOS_FIMD
  Choose this option if you want to use Exynos FIMD for DRM.

DRM_EXYNOS_G2D
  Choose this option if you want to use Exynos G2D for DRM.

DRM_EXYNOS_GSC
  Choose this option if you want to use Exynos GSC for DRM.

DRM_EXYNOS_HDMI
  Choose this option if you want to use Exynos HDMI for DRM.

DRM_EXYNOS_IPP
  No help

DRM_EXYNOS_MIC
  Choose this option if you want to use Exynos MIC for DRM.

DRM_EXYNOS_MIXER
  Choose this option if you want to use Exynos Mixer for DRM.

DRM_EXYNOS_ROTATOR
  Choose this option if you want to use Exynos Rotator for DRM.

DRM_EXYNOS_SCALER
  Choose this option if you want to use Exynos Scaler for DRM.

DRM_EXYNOS_VIDI
  Choose this option if you want to use Exynos VIDI for DRM.

DRM_FBDEV_EMULATION
  Choose this option if you have a need for the legacy fbdev
  support. Note that this support also provides the linux console
  support on top of your modesetting driver.
  
  If in doubt, say "Y".

DRM_FBDEV_LEAK_PHYS_SMEM
  In order to keep user-space compatibility, we want in certain
  use-cases to keep leaking the fbdev physical address to the
  user-space program handling the fbdev buffer.
  This affects, not only, Amlogic, Allwinner or Rockchip devices
  with ARM Mali GPUs using an userspace Blob.
  This option is not supported by upstream developers and should be
  removed as soon as possible and be considered as a broken and
  legacy behaviour from a modern fbdev device driver.
  
  Please send any bug reports when using this to your proprietary
  software vendor that requires this.
  
  If in doubt, say "N" or spread the word to your closed source
  library vendor.

DRM_FBDEV_OVERALLOC
  Defines the fbdev buffer overallocation in percent. Default
  is 100. Typical values for double buffering will be 200,
  triple buffering 300.

DRM_FSL_DCU
  Choose this option if you have an Freescale DCU chipset.
  If M is selected the module will be called fsl-dcu-drm.

DRM_GEM_CMA_HELPER
  Choose this if you need the GEM CMA helper functions

DRM_GEM_SHMEM_HELPER
  Choose this if you need the GEM shmem helper functions

DRM_GM12U320
  This is a KMS driver for projectors which use the GM12U320 chipset
  for video transfer over USB2/3, such as the Acer C120 mini projector.

DRM_GMA3600
  Say yes to include basic support for Intel GMA3600/3650 (Intel
  Cedar Trail) platforms.

DRM_GMA500
  Say yes for an experimental 2D KMS framebuffer driver for the
  Intel GMA500 ('Poulsbo') and other Intel IMG based graphics
  devices.

DRM_GMA600
  Say yes to include support for GMA600 (Intel Moorestown/Oaktrail)
  platforms with LVDS ports. MIPI is not currently supported.

DRM_HDLCD
  Choose this option if you have an ARM High Definition Colour LCD
  controller.
  
  If M is selected the module will be called hdlcd.

DRM_HDLCD_SHOW_UNDERRUN
  Enable this option to show in red colour the pixels that the
  HDLCD device did not fetch from framebuffer due to underrun
  conditions.

DRM_HISI_HIBMC
  Choose this option if you have a Hisilicon Hibmc soc chipset.
  If M is selected the module will be called hibmc-drm.

DRM_HISI_KIRIN
  Choose this option if you have a hisilicon Kirin chipsets(hi6220).
  If M is selected the module will be called kirin-drm.
  

DRM_I2C_ADV7511
  Support for the Analog Devices ADV7511(W)/13/33/35 HDMI encoders.

DRM_I2C_ADV7511_AUDIO
  Support the ADV7511 HDMI Audio interface. This is used in
  conjunction with the AV7511  HDMI driver.

DRM_I2C_ADV7511_CEC
  When selected the HDMI transmitter will support the CEC feature.

DRM_I2C_CH7006
  Support for Chrontel ch7006 and similar TV encoders, found
  on some nVidia video cards.
  
  This driver is currently only useful if you're also using
  the nouveau driver.

DRM_I2C_NXP_TDA9950
  No help

DRM_I2C_NXP_TDA998X
  Support for NXP Semiconductors TDA998X HDMI encoders.

DRM_I2C_SIL164
  Support for sil164 and similar single-link (or dual-link
  when used in pairs) TMDS transmitters, used in some nVidia
  video cards.

DRM_I810
  Choose this option if you have an Intel I810 graphics card.  If M is
  selected, the module will be called i810.  AGP support is required
  for this driver to work.

DRM_I915
  Choose this option if you have a system that has "Intel Graphics
  Media Accelerator" or "HD Graphics" integrated graphics,
  including 830M, 845G, 852GM, 855GM, 865G, 915G, 945G, 965G,
  G35, G41, G43, G45 chipsets and Celeron, Pentium, Core i3,
  Core i5, Core i7 as well as Atom CPUs with integrated graphics.
  
  This driver is used by the Intel driver in X.org 6.8 and
  XFree86 4.4 and above. It replaces the older i830 module that
  supported a subset of the hardware in older X.org releases.
  
  Note that the older i810/i815 chipsets require the use of the
  i810 driver instead, and the Atom z5xx series has an entirely
  different implementation.
  
  If "M" is selected, the module will be called i915.

DRM_I915_CAPTURE_ERROR
  This option enables capturing the GPU state when a hang is detected.
  This information is vital for triaging hangs and assists in debugging.
  Please report any hang for triaging according to:
    https://gitlab.freedesktop.org/drm/intel/-/wikis/How-to-file-i915-bugs
  
  If in doubt, say "Y".

DRM_I915_COMPRESS_ERROR
  This option selects ZLIB_DEFLATE if it isn't already
  selected and causes any error state captured upon a GPU hang
  to be compressed using zlib.
  
  If in doubt, say "Y".

DRM_I915_DEBUG
  Choose this option to turn on extra driver debugging that may affect
  performance but will catch some internal issues.
  
  Recommended for driver developers only.
  
  If in doubt, say "N".

DRM_I915_DEBUG_GEM
  Enable extra sanity checks (including BUGs) along the GEM driver
  paths that may slow the system down and if hit hang the machine.
  
  Recommended for driver developers only.
  
  If in doubt, say "N".

DRM_I915_DEBUG_GUC
  Choose this option to turn on extra driver debugging that may affect
  performance but will help resolve GuC related issues.
  
  Recommended for driver developers only.
  
  If in doubt, say "N".

DRM_I915_DEBUG_MMIO
  By default, always enables the extra sanity checks (extra register
  reads) around every mmio (register) access that will slow the system
  down. This sets the default value of i915.mmio_debug to -1 and can
  be overridden at module load.
  
  Recommended for driver developers only.
  
  If in doubt, say "N".

DRM_I915_DEBUG_RUNTIME_PM
  Choose this option to turn on extra state checking for the
  runtime PM functionality. This may introduce overhead during
  driver loading, suspend and resume operations.
  
  If in doubt, say "N"

DRM_I915_DEBUG_VBLANK_EVADE
  Choose this option to turn on extra debug warnings for the
  vblank evade mechanism. This gives a warning every time the
  the deadline allotted for the vblank evade critical section
  is exceeded, even if there isn't an actual risk of missing
  the vblank.
  
  If in doubt, say "N".

DRM_I915_ERRLOG_GEM
  Enable additional logging that may help track down the cause of
  principally userspace errors.
  
  Recommended for driver developers only.
  
  If in doubt, say "N".

DRM_I915_FENCE_TIMEOUT
  When listening to a foreign fence, we install a supplementary timer
  to ensure that we are always signaled and our userspace is able to
  make forward progress. This value specifies the timeout used for an
  unsignaled foreign fence.
  
  May be 0 to disable the timeout, and rely on the foreign fence being
  eventually signaled.

DRM_I915_FORCE_PROBE
  This is the default value for the i915.force_probe module
  parameter. Using the module parameter overrides this option.
  
  Force probe the driver for new Intel graphics devices that are
  recognized but not properly supported by this kernel version. It is
  recommended to upgrade to a kernel version with proper support as soon
  as it is available.
  
  Use "" to disable force probe. If in doubt, use this.
  
  Use "<pci-id>[,<pci-id>,...]" to force probe the driver for listed
  devices. For example, "4500" or "4500,4571".
  
  Use "*" to force probe the driver for all known devices.

DRM_I915_GVT
  Choose this option if you want to enable Intel GVT-g graphics
  virtualization technology host support with integrated graphics.
  With GVT-g, it's possible to have one integrated graphics
  device shared by multiple VMs under different hypervisors.
  
  Note that at least one hypervisor like Xen or KVM is required for
  this driver to work, and it only supports newer device from
  Broadwell+. For further information and setup guide, you can
  visit: http://01.org/igvt-g.
  
  Now it's just a stub to support the modifications of i915 for
  GVT device model. It requires at least one MPT modules for Xen/KVM
  and other components of GVT device model to work. Use it under
  you own risk.
  
  If in doubt, say "N".

DRM_I915_GVT_KVMGT
  Choose this option if you want to enable KVMGT support for
  Intel GVT-g.

DRM_I915_HEARTBEAT_INTERVAL
  The driver sends a periodic heartbeat down all active engines to
  check the health of the GPU and undertake regular house-keeping of
  internal driver state.
  
  This is adjustable via
  /sys/class/drm/card?/engine/*/heartbeat_interval_ms
  
  May be 0 to disable heartbeats and therefore disable automatic GPU
  hang detection.

DRM_I915_LOW_LEVEL_TRACEPOINTS
  Choose this option to turn on low level request tracing events.
  This provides the ability to precisely monitor engine utilisation
  and also analyze the request dependency resolving timeline.
  
  If in doubt, say "N".

DRM_I915_MAX_REQUEST_BUSYWAIT
  Before sleeping waiting for a request (GPU operation) to complete,
  we may spend some time polling for its completion. As the IRQ may
  take a non-negligible time to setup, we do a short spin first to
  check if the request will complete in the time it would have taken
  us to enable the interrupt.
  
  This is adjustable via
  /sys/class/drm/card?/engine/*/max_busywait_duration_ns
  
  May be 0 to disable the initial spin. In practice, we estimate
  the cost of enabling the interrupt (if currently disabled) to be
  a few microseconds.

DRM_I915_PREEMPT_TIMEOUT
  How long to wait (in milliseconds) for a preemption event to occur
  when submitting a new context via execlists. If the current context
  does not hit an arbitration point and yield to HW before the timer
  expires, the HW will be reset to allow the more important context
  to execute.
  
  This is adjustable via
  /sys/class/drm/card?/engine/*/preempt_timeout_ms
  
  May be 0 to disable the timeout.
  
  The compiled in default may get overridden at driver probe time on
  certain platforms and certain engines which will be reflected in the
  sysfs control.

DRM_I915_SELFTEST
  Choose this option to allow the driver to perform selftests upon
  loading; also requires the i915.selftest=1 module parameter. To
  exit the module after running the selftests (i.e. to prevent normal
  module initialisation afterwards) use i915.selftest=-1.
  
  Recommended for driver developers only.
  
  If in doubt, say "N".

DRM_I915_SELFTEST_BROKEN
  This option enables the execution of selftests that are "dangerous"
  and may trigger unintended HW side-effects as they break strict
  rules given in the HW specification. For science.
  
  Recommended for masochistic driver developers only.
  
  If in doubt, say "N".

DRM_I915_STOP_TIMEOUT
  By stopping submission and sleeping for a short time before resetting
  the GPU, we allow the innocent contexts also on the system to quiesce.
  It is then less likely for a hanging context to cause collateral
  damage as the system is reset in order to recover. The corollary is
  that the reset itself may take longer and so be more disruptive to
  interactive or low latency workloads.
  
  This is adjustable via
  /sys/class/drm/card?/engine/*/stop_timeout_ms

DRM_I915_SW_FENCE_CHECK_DAG
  Choose this option to turn on extra driver debugging that may affect
  performance but will catch some internal issues.
  
  Recommended for driver developers only.
  
  If in doubt, say "N".

DRM_I915_SW_FENCE_DEBUG_OBJECTS
  Choose this option to turn on extra driver debugging that may affect
  performance but will catch some internal issues.
  
  Recommended for driver developers only.
  
  If in doubt, say "N".

DRM_I915_TIMESLICE_DURATION
  When two user batches of equal priority are executing, we will
  alternate execution of each batch to ensure forward progress of
  all users. This is necessary in some cases where there may be
  an implicit dependency between those batches that requires
  concurrent execution in order for them to proceed, e.g. they
  interact with each other via userspace semaphores. Each context
  is scheduled for execution for the timeslice duration, before
  switching to the next context.
  
  This is adjustable via
  /sys/class/drm/card?/engine/*/timeslice_duration_ms
  
  May be 0 to disable timeslicing.

DRM_I915_TRACE_GEM
  Enable additional and verbose debugging output that will spam
  ordinary tests, but may be vital for post-mortem debugging when
  used with /proc/sys/kernel/ftrace_dump_on_oops
  
  Recommended for driver developers only.
  
  If in doubt, say "N".

DRM_I915_TRACE_GTT
  Enable additional and verbose debugging output that will spam
  ordinary tests, but may be vital for post-mortem debugging when
  used with /proc/sys/kernel/ftrace_dump_on_oops
  
  Recommended for driver developers only.
  
  If in doubt, say "N".

DRM_I915_UNSTABLE
  Enable prototype uAPI under general discussion before they are
  finalized. Such prototypes may be withdrawn or substantially
  changed before release. They are only enabled here so that a wide
  number of interested parties (userspace driver developers) can
  verify that the uAPI meet their expectations. These uAPI should
  never be used in production.
  
  Recommended for driver developers _only_.
  
  If in the slightest bit of doubt, say "N".

DRM_I915_UNSTABLE_FAKE_LMEM
  Convert some system memory into a fake local memory region for
  testing.

DRM_I915_USERFAULT_AUTOSUSPEND
  On runtime suspend, as we suspend the device, we have to revoke
  userspace GGTT mmaps and force userspace to take a pagefault on
  their next access. The revocation and subsequent recreation of
  the GGTT mmap can be very slow and so we impose a small hysteris
  that complements the runtime-pm autosuspend and provides a lower
  floor on the autosuspend delay.
  
  May be 0 to disable the extra delay and solely use the device level
  runtime pm autosuspend delay tunable.

DRM_I915_USERPTR
  This option selects CONFIG_MMU_NOTIFIER if it isn't already
  selected to enabled full userptr support.
  
  If in doubt, say "Y".

DRM_I915_WERROR
  Add -Werror to the build flags for (and only for) i915.ko.
  Do not enable this unless you are writing code for the i915.ko module.
  
  Recommended for driver developers only.
  
  If in doubt, say "N".

DRM_IMX
  enable i.MX graphics support

DRM_IMX_DCSS
  Choose this if you have a NXP i.MX8MQ based system and want to use the
  Display Controller Subsystem. This option enables DCSS support.

DRM_IMX_HDMI
  Choose this if you want to use HDMI on i.MX6.

DRM_IMX_LDB
  Choose this to enable the internal LVDS Display Bridge (LDB)
  found on i.MX53 and i.MX6 processors.

DRM_IMX_PARALLEL_DISPLAY
  No help

DRM_IMX_TVE
  Choose this to enable the internal Television Encoder (TVe)
  found on i.MX53 processors.

DRM_INGENIC
  Choose this option for DRM support for the Ingenic SoCs.
  
  If M is selected the module will be called ingenic-drm.

DRM_INGENIC_IPU
  Choose this option to enable support for the IPU found in Ingenic SoCs.
  
  The Image Processing Unit (IPU) will appear as a second primary plane.

DRM_KMB_DISPLAY
  Choose this option if you have Intel's KeemBay SOC which integrates
  an ARM Cortex A53 CPU with an Intel Movidius VPU.
  
  If M is selected the module will be called kmb-drm.

DRM_KMS_CMA_HELPER
  Choose this if you need the KMS CMA helper functions

DRM_KMS_FB_HELPER
  FBDEV helpers for KMS drivers.

DRM_KMS_HELPER
  CRTC helpers for KMS drivers.

DRM_KOMEDA
  Choose this option if you want to compile the ARM Komeda display
  Processor driver. It supports the D71 variants of the hardware.
  
  If compiled as a module it will be called komeda.

DRM_LEGACY
  Enable legacy DRI1 drivers. Those drivers expose unsafe and dangerous
  APIs to user-space, which can be used to circumvent access
  restrictions and other security measures. For backwards compatibility
  those drivers are still available, but their use is highly
  inadvisable and might harm your system.
  
  You are recommended to use the safe modeset-only drivers instead, and
  perform 3D emulation in user-space.
  
  Unless you have strong reasons to go rogue, say "N".

DRM_LIB_RANDOM
  No help

DRM_LIMA
  DRM driver for ARM Mali 400/450 GPUs.

DRM_LOAD_EDID_FIRMWARE
  Say Y here, if you want to use EDID data to be loaded from the
  /lib/firmware directory or one of the provided built-in
  data sets. This may be necessary, if the graphics adapter or
  monitor are unable to provide appropriate EDID data. Since this
  feature is provided as a workaround for broken hardware, the
  default case is N. Details and instructions how to build your own
  EDID data are given in Documentation/admin-guide/edid.rst.

DRM_LONTIUM_LT9611
  Driver for Lontium LT9611 DSI to HDMI bridge
  chip driver that converts dual DSI and I2S to
  HDMI signals
  Please say Y if you have such hardware.

DRM_LONTIUM_LT9611UXC
  Driver for Lontium LT9611UXC DSI to HDMI bridge
  chip driver that converts dual DSI and I2S to
  HDMI signals
  Please say Y if you have such hardware.

DRM_LVDS_CODEC
  Support for transparent LVDS encoders and decoders that don't
  require any configuration.

DRM_MALI_DISPLAY
  Choose this option if you want to compile the ARM Mali Display
  Processor driver. It supports the DP500, DP550 and DP650 variants
  of the hardware.
  
  If compiled as a module it will be called mali-dp.

DRM_MCDE
  Choose this option for DRM support for the ST-Ericsson MCDE
  Multi-Channel Display Engine.
  If M is selected the module will be called mcde_drm.

DRM_MEDFIELD
  Say yes to include support for the Intel Medfield platform.
  

DRM_MEDIATEK
  Choose this option if you have a Mediatek SoCs.
  The module will be called mediatek-drm
  This driver provides kernel mode setting and
  buffer management to userspace.

DRM_MEDIATEK_HDMI
  DRM/KMS HDMI driver for Mediatek SoCs

DRM_MEGACHIPS_STDPXXXX_GE_B850V3_FW
  This is a driver for the display bridges of
  GE B850v3 that convert dual channel LVDS
  to DP++. This is used with the i.MX6 imx-ldb
  driver. You are likely to say N here.

DRM_MESON
  No help

DRM_MESON_DW_HDMI
  No help

DRM_MGA
  Choose this option if you have a Matrox G200, G400 or G450 graphics
  card.  If M is selected, the module will be called mga.  AGP
  support is required for this driver to work.

DRM_MGAG200
  This is a KMS driver for Matrox G200 chips. It supports the original
  MGA G200 desktop chips and the server variants. It requires 0.3.0
  of the modesetting userspace driver, and a version of mga driver
  that will fail on KMS enabled devices.

DRM_MIPI_DBI
  No help

DRM_MIPI_DSI
  No help

DRM_MSM
  DRM/KMS driver for MSM/snapdragon.

DRM_MSM_DP
  Compile in support for DP driver in MSM DRM driver. DP external
  display support is enabled through this config option. It can
  be primary or secondary display on device.

DRM_MSM_DSI
  Choose this option if you have a need for MIPI DSI connector
  support.

DRM_MSM_DSI_10NM_PHY
  Choose this option if DSI PHY on SDM845 is used on the platform.

DRM_MSM_DSI_14NM_PHY
  Choose this option if DSI PHY on 8996 is used on the platform.

DRM_MSM_DSI_20NM_PHY
  Choose this option if the 20nm DSI PHY is used on the platform.

DRM_MSM_DSI_28NM_8960_PHY
  Choose this option if the 28nm DSI PHY 8960 variant is used on the
  platform.

DRM_MSM_DSI_28NM_PHY
  Choose this option if the 28nm DSI PHY is used on the platform.

DRM_MSM_DSI_7NM_PHY
  Choose this option if DSI PHY on SM8150/SM8250 is used on the
  platform.

DRM_MSM_DSI_PLL
  Choose this option to enable DSI PLL driver which provides DSI
  source clocks under common clock framework.

DRM_MSM_GPU_STATE
  No help

DRM_MSM_GPU_SUDO
  Enable userspace that has CAP_SYS_RAWIO to submit GPU commands
  that are run from RB instead of IB1.  This essentially gives
  userspace kernel level access, but is useful for firmware
  debugging.
  
  Only use this if you are a driver developer.  This should *not*
  be enabled for production kernels.  If unsure, say N.

DRM_MSM_HDMI_HDCP
  Choose this option to enable HDCP state machine

DRM_MSM_REGISTER_LOGGING
  Compile in support for logging register reads/writes in a format
  that can be parsed by envytools demsm tool.  If enabled, register
  logging can be switched on via msm.reglog=y module param.

DRM_MXS
  Choose this option to select drivers for MXS FB devices

DRM_MXSFB
  Choose this option if you have an LCDIF or eLCDIF LCD controller.
  Those devices are found in various i.MX SoC (including i.MX23,
  i.MX28, i.MX6SX, i.MX7 and i.MX8M).
  
  If M is selected the module will be called mxsfb.

DRM_NOUVEAU
  Choose this option for open-source NVIDIA support.

DRM_NOUVEAU_BACKLIGHT
  Say Y here if you want to control the backlight of your display
  (e.g. a laptop panel).

DRM_NOUVEAU_SVM
  Say Y here if you want to enable experimental support for
  Shared Virtual Memory (SVM).

DRM_NWL_MIPI_DSI
  This enables the Northwest Logic MIPI DSI Host controller as
  for example found on NXP's i.MX8 Processors.

DRM_NXP_PTN3460
  NXP PTN3460 eDP-LVDS bridge chip driver.

DRM_OMAP
  DRM display driver for OMAP2/3/4 based boards.

DRM_OMAP_PANEL_DSI_CM
  Driver for generic DSI command mode panels.

DRM_PANEL
  Panel registration and lookup framework.

DRM_PANEL_ABT_Y030XX067A
  Say Y here to enable support for the Asia Better Technology Ltd.
  Y030XX067A 320x480 3.0" panel as found in the YLM RG-280M, RG-300
  and RG-99 handheld gaming consoles.

DRM_PANEL_ARM_VERSATILE
  This driver supports the ARM Versatile panels connected to ARM
  reference designs. The panel is detected using special registers
  in the Versatile family syscon registers.

DRM_PANEL_ASUS_Z00T_TM5P5_NT35596
  Say Y here if you want to enable support for the ASUS TMP5P5
  NT35596 1080x1920 video mode panel as found in some Asus
  Zenfone 2 Laser Z00T devices.

DRM_PANEL_BOE_HIMAX8279D
  Say Y here if you want to enable support for Boe Himax8279d
  TFT-LCD modules. The panel has a 1200x1920 resolution and uses
  24 bit RGB per pixel. It provides a MIPI DSI interface to
  the host and has a built-in LED backlight.

DRM_PANEL_BOE_TV101WUM_NL6
  Say Y here if you want to support for BOE TV101WUM and AUO KD101N80
  45NA WUXGA PANEL DSI Video Mode panel

DRM_PANEL_BRIDGE
  DRM bridge wrapper of DRM panels

DRM_PANEL_ELIDA_KD35T133
  Say Y here if you want to enable support for the Elida
  KD35T133 controller for 320x480 LCD panels with MIPI-DSI
  system interfaces.

DRM_PANEL_FEIXIN_K101_IM2BA02
  Say Y here if you want to enable support for the Feixin K101 IM2BA02
  4-lane 800x1280 MIPI DSI panel.

DRM_PANEL_FEIYANG_FY07024DI26A30D
  Say Y if you want to enable support for panels based on the
  Feiyang FY07024DI26A30-D MIPI-DSI interface.

DRM_PANEL_ILITEK_IL9322
  Say Y here if you want to enable support for Ilitek IL9322
  QVGA (320x240) RGB, YUV and ITU-T BT.656 panels.

DRM_PANEL_ILITEK_ILI9881C
  Say Y if you want to enable support for panels based on the
  Ilitek ILI9881c controller.

DRM_PANEL_INNOLUX_P079ZCA
  Say Y here if you want to enable support for Innolux P079ZCA
  TFT-LCD modules. The panel has a 1024x768 resolution and uses
  24 bit RGB per pixel. It provides a MIPI DSI interface to
  the host and has a built-in LED backlight.

DRM_PANEL_JDI_LT070ME05000
  Say Y here if you want to enable support for JDI DSI video mode
  panel as found in Google Nexus 7 (2013) devices.
  The panel has a 1200(RGB)×1920 (WUXGA) resolution and uses
  24 bit per pixel.

DRM_PANEL_KINGDISPLAY_KD097D04
  Say Y here if you want to enable support for Kingdisplay kd097d04
  TFT-LCD modules. The panel has a 1536x2048 resolution and uses
  24 bit RGB per pixel. It provides a MIPI DSI interface to
  the host and has a built-in LED backlight.

DRM_PANEL_LEADTEK_LTK050H3146W
  Say Y here if you want to enable support for Leadtek LTK050H3146W
  TFT-LCD modules. The panel has a 720x1280 resolution and uses
  24 bit RGB per pixel. It provides a MIPI DSI interface to
  the host and has a built-in LED backlight.

DRM_PANEL_LEADTEK_LTK500HD1829
  Say Y here if you want to enable support for Kingdisplay kd097d04
  TFT-LCD modules. The panel has a 1536x2048 resolution and uses
  24 bit RGB per pixel. It provides a MIPI DSI interface to
  the host and has a built-in LED backlight.

DRM_PANEL_LG_LB035Q02
  Say Y here if you want to enable support for the LB035Q02 RGB panel
  (found on the Gumstix Overo Palo35 board). To compile this driver as
  a module, choose M here.

DRM_PANEL_LG_LG4573
  Say Y here if you want to enable support for LG4573 RGB panel.
  To compile this driver as a module, choose M here.

DRM_PANEL_LVDS
  This driver supports LVDS panels that don't require device-specific
  handling of power supplies or control signals. It implements automatic
  backlight handling if the panel is attached to a backlight controller.

DRM_PANEL_MANTIX_MLAF057WE51
  Say Y here if you want to enable support for the Mantix
  MLAF057WE51-X MIPI DSI panel as e.g. used in the Librem 5. It
  has a resolution of 720x1440 pixels, a built in backlight and touch
  controller.

DRM_PANEL_NEC_NL8048HL11
  Say Y here if you want to enable support for the NEC NL8048HL11 RGB
  panel (found on the Zoom2/3/3630 SDP boards). To compile this driver
  as a module, choose M here.

DRM_PANEL_NOVATEK_NT35510
  Say Y here if you want to enable support for the panels built
  around the Novatek NT35510 display controller, such as some
  Hydis panels.

DRM_PANEL_NOVATEK_NT36672A
  Say Y here if you want to enable support for the panels built
  around the Novatek NT36672A display controller, such as some
  Tianma panels used in a few Xiaomi Poco F1 mobile phones.

DRM_PANEL_NOVATEK_NT39016
  Say Y here if you want to enable support for the panels built
  around the Novatek NT39016 display controller.

DRM_PANEL_OLIMEX_LCD_OLINUXINO
  The panel is used with different sizes LCDs, from 480x272 to
  1280x800, and 24 bit per pixel.
  
  Say Y here if you want to enable support for Olimex Ltd.
  LCD-OLinuXino panel.

DRM_PANEL_ORIENTATION_QUIRKS
  No help

DRM_PANEL_ORISETECH_OTM8009A
  Say Y here if you want to enable support for Orise Technology
  otm8009a 480x800 dsi 2dl panel.

DRM_PANEL_OSD_OSD101T2587_53TS
  Say Y here if you want to enable support for One Stop Displays
  OSD101T2587-53TS 10.1" 1920x1200 dsi panel.

DRM_PANEL_PANASONIC_VVX10F034N00
  Say Y here if you want to enable support for Panasonic VVX10F034N00
  WUXGA (1920x1200) Novatek NT1397-based DSI panel as found in some
  Xperia Z2 tablets

DRM_PANEL_RASPBERRYPI_TOUCHSCREEN
  Say Y here if you want to enable support for the Raspberry
  Pi 7" Touchscreen.  To compile this driver as a module,
  choose M here.

DRM_PANEL_RAYDIUM_RM67191
  Say Y here if you want to enable support for Raydium RM67191 FHD
  (1080x1920) DSI panel.

DRM_PANEL_RAYDIUM_RM68200
  Say Y here if you want to enable support for Raydium RM68200
  720x1280 DSI video mode panel.

DRM_PANEL_RONBO_RB070D30
  Say Y here if you want to enable support for Ronbo Electronics
  RB070D30 1024x600 DSI panel.

DRM_PANEL_SAMSUNG_LD9040
  No help

DRM_PANEL_SAMSUNG_S6D16D0
  No help

DRM_PANEL_SAMSUNG_S6E3HA2
  No help

DRM_PANEL_SAMSUNG_S6E63J0X03
  No help

DRM_PANEL_SAMSUNG_S6E63M0
  Say Y here if you want to enable support for Samsung S6E63M0
  AMOLED LCD panel. This panel can be accessed using SPI or
  DSI.

DRM_PANEL_SAMSUNG_S6E63M0_DSI
  Say Y here if you want to be able to access the Samsung
  S6E63M0 panel using DSI.

DRM_PANEL_SAMSUNG_S6E63M0_SPI
  Say Y here if you want to be able to access the Samsung
  S6E63M0 panel using SPI.

DRM_PANEL_SAMSUNG_S6E88A0_AMS452EF01
  No help

DRM_PANEL_SAMSUNG_S6E8AA0
  No help

DRM_PANEL_SAMSUNG_SOFEF00
  Say Y or M here if you want to enable support for the Samsung AMOLED
  command mode panels found in the OnePlus 6/6T smartphones.
  
  The panels are 2280x1080@60Hz and 2340x1080@60Hz respectively

DRM_PANEL_SEIKO_43WVF1G
  Say Y here if you want to enable support for the Seiko
  43WVF1G controller for 800x480 LCD panels

DRM_PANEL_SHARP_LQ101R1SX01
  Say Y here if you want to enable support for Sharp LQ101R1SX01
  TFT-LCD modules. The panel has a 2560x1600 resolution and uses
  24 bit RGB per pixel. It provides a dual MIPI DSI interface to
  the host and has a built-in LED backlight.
  
  To compile this driver as a module, choose M here: the module
  will be called panel-sharp-lq101r1sx01.

DRM_PANEL_SHARP_LS037V7DW01
  Say Y here if you want to enable support for Sharp LS037V7DW01 VGA
  (480x640) LCD panel (found on the TI SDP3430 board).

DRM_PANEL_SHARP_LS043T1LE01
  Say Y here if you want to enable support for Sharp LS043T1LE01 qHD
  (540x960) DSI panel as found on the Qualcomm APQ8074 Dragonboard

DRM_PANEL_SIMPLE
  DRM panel driver for dumb panels that need at most a regulator and
  a GPIO to be powered up. Optionally a backlight can be attached so
  that it can be automatically turned off when the panel goes into a
  low power state.

DRM_PANEL_SITRONIX_ST7701
  Say Y here if you want to enable support for the Sitronix
  ST7701 controller for 480X864 LCD panels with MIPI/RGB/SPI
  system interfaces.

DRM_PANEL_SITRONIX_ST7703
  Say Y here if you want to enable support for Sitronix ST7703 based
  panels, souch as Rocktech JH057N00900 MIPI DSI panel as e.g. used in
  the Librem 5 devkit. It has a resolution of 720x1440 pixels, a built
  in backlight and touch controller.
  Touch input support is provided by the goodix driver and needs to be
  selected separately.

DRM_PANEL_SITRONIX_ST7789V
  Say Y here if you want to enable support for the Sitronix
  ST7789V controller for 240x320 LCD panels

DRM_PANEL_SONY_ACX424AKP
  Say Y here if you want to enable the Sony ACX424 display
  panel. This panel supports DSI in both command and video
  mode.

DRM_PANEL_SONY_ACX565AKM
  Say Y here if you want to enable support for the Sony ACX565AKM
  800x600 3.5" panel (found on the Nokia N900).

DRM_PANEL_TDO_TL070WSH30
  Say Y here if you want to enable support for TDO TL070WSH30 TFT-LCD
  panel module. The panel has a 1024×600 resolution and uses
  24 bit RGB per pixel. It provides a MIPI DSI interface to
  the host, a built-in LED backlight and touch controller.

DRM_PANEL_TPO_TD028TTEC1
  Say Y here if you want to enable support for TPO TD028TTEC1 480x640
  2.8" panel (found on the OpenMoko Neo FreeRunner and Neo 1973).

DRM_PANEL_TPO_TD043MTEA1
  Say Y here if you want to enable support for TPO TD043MTEA1 800x480
  4.3" panel (found on the OMAP3 Pandora board).

DRM_PANEL_TPO_TPG110
  Say Y here if you want to enable support for TPO TPG110
  400CH LTPS TFT LCD Single Chip Digital Driver for up to
  800x400 LCD panels.

DRM_PANEL_TRULY_NT35597_WQXGA
  Say Y here if you want to enable support for Truly NT35597 WQXGA Dual DSI
  Video Mode panel

DRM_PANEL_VISIONOX_RM69299
  Say Y here if you want to enable support for Visionox
  RM69299  DSI Video Mode panel.

DRM_PANEL_XINPENG_XPP055C272
  Say Y here if you want to enable support for the Xinpeng
  XPP055C272 controller for 720x1280 LCD panels with MIPI/RGB/SPI
  system interfaces.

DRM_PANFROST
  DRM driver for ARM Mali Midgard (T6xx, T7xx, T8xx) and
  Bifrost (G3x, G5x, G7x) GPUs.

DRM_PARADE_PS8622
  Parade eDP-LVDS bridge chip driver.

DRM_PARADE_PS8640
  Choose this option if you have PS8640 for display
  The PS8640 is a high-performance and low-power
  MIPI DSI to eDP converter

DRM_PL111
  Choose this option for DRM support for the PL111 CLCD controller.
  If M is selected the module will be called pl111_drm.
  

DRM_QXL
  QXL virtual GPU for Spice virtualization desktop integration.
  Do not enable this driver unless your distro ships a corresponding
  X.org QXL driver that can handle kernel modesetting.

DRM_R128
  Choose this option if you have an ATI Rage 128 graphics card.  If M
  is selected, the module will be called r128.  AGP support for
  this card is strongly suggested (unless you have a PCI version).

DRM_RADEON
  Choose this option if you have an ATI Radeon graphics card.  There
  are both PCI and AGP versions.  You don't need to choose this to
  run the Radeon in plain VGA mode.
  
  If M is selected, the module will be called radeon.

DRM_RADEON_USERPTR
  This option selects CONFIG_MMU_NOTIFIER if it isn't already
  selected to enabled full userptr support.

DRM_RCAR_CMM
  Enable support for R-Car Color Management Module (CMM).

DRM_RCAR_DU
  Choose this option if you have an R-Car chipset.
  If M is selected the module will be called rcar-du-drm.

DRM_RCAR_DW_HDMI
  Enable support for R-Car Gen3 or RZ/G2 internal HDMI encoder.

DRM_RCAR_LVDS
  Enable support for the R-Car Display Unit embedded LVDS encoders.

DRM_RCAR_VSP
  Enable support to expose the R-Car VSP Compositor as KMS planes.

DRM_RCAR_WRITEBACK
  No help

DRM_ROCKCHIP
  Choose this option if you have a Rockchip soc chipset.
  This driver provides kernel mode setting and buffer
  management to userspace. This driver does not provide
  2D or 3D acceleration; acceleration is performed by other
  IP found on the SoC.

DRM_SAVAGE
  Choose this option if you have a Savage3D/4/SuperSavage/Pro/Twister
  chipset. If M is selected the module will be called savage.

DRM_SCHED
  No help

DRM_SHMOBILE
  Choose this option if you have an SH Mobile chipset.
  If M is selected the module will be called shmob-drm.
  

DRM_SII902X
  Silicon Image sii902x bridge chip driver.

DRM_SII9234
  Say Y here if you want support for the MHL interface.
  It is an I2C driver, that detects connection of MHL bridge
  and starts encapsulation of HDMI signal.

DRM_SIL_SII8620
  Silicon Image SII8620 HDMI/MHL bridge chip driver.

DRM_SIMPLE_BRIDGE
  Support for non-programmable DRM bridges, such as ADI ADV7123, TI
  THS8134 and THS8135 or passive resistor ladder DACs.

DRM_SIS
  Choose this option if you have a SiS 630 or compatible video
  chipset. If M is selected the module will be called sis. AGP
  support is required for this driver to work.

DRM_STI
  Choose this option to enable DRM on STM stiH4xx chipset

DRM_STM
  Enable support for the on-chip display controller on
  STMicroelectronics STM32 MCUs.
  To compile this driver as a module, choose M here: the module
  will be called stm-drm.

DRM_STM_DSI
  Choose this option for MIPI DSI support on STMicroelectronics SoC.

DRM_SUN4I
  Choose this option if you have an Allwinner SoC with a
  Display Engine. If M is selected the module will be called
  sun4i-drm.

DRM_SUN4I_BACKEND
  Choose this option if you have an Allwinner SoC with the
  original Allwinner Display Engine, which has a backend to
  do some alpha blending and feed graphics to TCON. If M is
  selected the module will be called sun4i-backend.

DRM_SUN4I_HDMI
  Choose this option if you have an Allwinner SoC with an HDMI
  controller.

DRM_SUN4I_HDMI_CEC
  Choose this option if you have an Allwinner SoC with an HDMI
  controller and want to use CEC.

DRM_SUN6I_DSI
  Choose this option if you want have an Allwinner SoC with
  MIPI-DSI support. If M is selected the module will be called
  sun6i_mipi_dsi.

DRM_SUN8I_DW_HDMI
  Choose this option if you have an Allwinner SoC with the
  DesignWare HDMI controller with custom HDMI PHY. If M is
  selected the module will be called sun8i_dw_hdmi.

DRM_SUN8I_MIXER
  Choose this option if you have an Allwinner SoC with the
  Allwinner Display Engine 2.0, which has a mixer to do some
  graphics mixture and feed graphics to TCON, If M is
  selected the module will be called sun8i-mixer.

DRM_SUN8I_TCON_TOP
  TCON TOP is responsible for configuring display pipeline for
  HTMI, TVE and LCD.

DRM_TDFX
  Choose this option if you have a 3dfx Banshee or Voodoo3 (or later),
  graphics card.  If M is selected, the module will be called tdfx.

DRM_TEGRA
  Choose this option if you have an NVIDIA Tegra SoC.
  
  To compile this driver as a module, choose M here: the module
  will be called tegra-drm.

DRM_TEGRA_DEBUG
  Say yes here to enable debugging support.

DRM_TEGRA_STAGING
  Say yes if HOST1X should be available for userspace DRM users.
  
  If unsure, choose N.

DRM_THINE_THC63LVD1024
  Thine THC63LVD1024 LVDS/parallel converter driver.

DRM_TIDSS
  The TI Keystone family SoCs introduced a new generation of
  Display SubSystem. There is currently three Keystone family
  SoCs released with DSS. Each with somewhat different version
  of it. The SoCs are 66AK2Gx, AM65x, and J721E. Set this to Y
  or M to add display support for TI Keystone family
  platforms.

DRM_TILCDC
  Choose this option if you have an TI SoC with LCDC display
  controller, for example AM33xx in beagle-bone, DA8xx, or
  OMAP-L1xx.  This driver replaces the FB_DA8XX fbdev driver.
  

DRM_TI_SN65DSI86
  Texas Instruments SN65DSI86 DSI to eDP Bridge driver

DRM_TI_TFP410
  Texas Instruments TFP410 DVI/HDMI Transmitter driver

DRM_TI_TPD12S015
  Texas Instruments TPD12S015 HDMI level shifter and ESD protection
  driver.

DRM_TOSHIBA_TC358762
  Toshiba TC358762 DSI/DPI bridge driver.

DRM_TOSHIBA_TC358764
  Toshiba TC358764 DSI/LVDS bridge driver.

DRM_TOSHIBA_TC358767
  Toshiba TC358767 eDP bridge chip driver.

DRM_TOSHIBA_TC358768
  Toshiba TC358768AXBG/TC358778XBG DSI bridge chip driver.

DRM_TOSHIBA_TC358775
  Toshiba TC358775 DSI/LVDS bridge chip driver.

DRM_TTM
  GPU memory management subsystem for devices with multiple
  GPU memory types. Will be enabled automatically if a device driver
  uses it.

DRM_TTM_HELPER
  Helpers for ttm-based gem objects

DRM_TVE200
  Choose this option for DRM support for the Faraday TV Encoder
  TVE200 Controller.
  If M is selected the module will be called tve200_drm.

DRM_UDL
  This is a KMS driver for the USB displaylink video adapters.
  Say M/Y to add support for these devices via drm/kms interfaces.

DRM_V3D
  Choose this option if you have a system that has a Broadcom
  V3D 3.x or newer GPU, such as BCM7268.

DRM_VBOXVIDEO
  This is a KMS driver for the virtual Graphics Card used in
  Virtual Box virtual machines.
  
  Although it is possible to build this driver built-in to the
  kernel, it is advised to build it as a module, so that it can
  be updated independently of the kernel. Select M to build this
  driver as a module and add support for these devices via drm/kms
  interfaces.

DRM_VC4
  Choose this option if you have a system that has a Broadcom
  VC4 GPU, such as the Raspberry Pi or other BCM2708/BCM2835.
  
  This driver requires that "avoid_warnings=2" be present in
  the config.txt for the firmware, to keep it from smashing
  our display setup.

DRM_VC4_HDMI_CEC
  Choose this option if you have a Broadcom VC4 GPU
  and want to use CEC.

DRM_VGEM
  Choose this option to get a virtual graphics memory manager,
  as used by Mesa's software renderer for enhanced performance.
  If M is selected the module will be called vgem.

DRM_VIA
  Choose this option if you have a Via unichrome or compatible video
  chipset. If M is selected the module will be called via.

DRM_VIRTIO_GPU
  This is the virtual GPU driver for virtio.  It can be used with
  QEMU based VMMs (like KVM or Xen).
  
  If unsure say M.

DRM_VKMS
  Virtual Kernel Mode-Setting (VKMS) is used for testing or for
  running GPU in a headless machines. Choose this option to get
  a VKMS.
  
  If M is selected the module will be called vkms.

DRM_VM
  No help

DRM_VMWGFX
  Choose this option if you would like to run 3D acceleration
  in a VMware virtual machine.
  This is a KMS enabled DRM driver for the VMware SVGA2
  virtual hardware.
  The compiled module will be called "vmwgfx.ko".

DRM_VMWGFX_FBCON
  Choose this option if you are shipping a new vmwgfx
  userspace driver that supports using the kernel driver.
  

DRM_VRAM_HELPER
  Helpers for VRAM memory management

DRM_XEN
  Choose this option if you want to enable DRM support
  for Xen.

DRM_XEN_FRONTEND
  Choose this option if you want to enable a para-virtualized
  frontend DRM/KMS driver for Xen guest OSes.

DRM_ZTE
  Choose this option to enable DRM on ZTE ZX SoCs.

DRM_ZYNQMP_DPSUB
  This is a DRM/KMS driver for ZynqMP DisplayPort controller. Choose
  this option if you have a Xilinx ZynqMP SoC with DisplayPort
  subsystem.

DS1620
  Say Y here to include support for the thermal management hardware
  found in the NetWinder. This driver allows the user to control the
  temperature set points and to read the current temperature.
  
  It is also possible to say M here to build it as a module (ds1620)
  It is recommended to be used on a NetWinder, but it is not a
  necessity.

DS1682
  If you say yes here you get support for Dallas Semiconductor
  DS1682 Total Elapsed Time Recorder.
  
  This driver can also be built as a module.  If so, the module
  will be called ds1682.

DS1803
  Say yes here to build support for the Maxim Integrated DS1803
  digital potentiometer chip.
  
  To compile this driver as a module, choose M here: the
  module will be called ds1803.

DS4424
  If you say yes here you get support for Maxim chips DS4422, DS4424.
  
  This driver can also be built as a module.  If so, the module
  will be called ds4424.

DSCC4_PCISYNC
  Due to Etinc's design choice for its PCISYNC cards, some operations
  are only allowed on specific ports of the DSCC4. This option is the
  only way for the driver to know that it shouldn't return a success
  code for these operations.
  
  Please say Y if your card is an Etinc's PCISYNC.

DSCC4_PCI_RST
  Various DSCC4 bugs forbid any reliable software reset of the ASIC.
  As a replacement, some vendors provide a way to assert the PCI #RST
  pin of DSCC4 through the GPIO port of the card. If you choose Y,
  the driver will make use of this feature before module removal
  (i.e. rmmod). The feature is known to be available on Commtech's
  cards. Contact your manufacturer for details.
  
  Say Y if your card supports this feature.

DST_CACHE
  No help

DTB_GNUBEE1
  No help

DTB_GNUBEE2
  No help

DTC
  No help

DTLK
  This driver is for the DoubleTalk PC, a speech synthesizer
  manufactured by RC Systems (<https://www.rcsys.com/>).  It is also
  called the `internal DoubleTalk'.
  
  To compile this driver as a module, choose M here: the
  module will be called dtlk.

DT_IDLE_STATES
  No help

DUMMY
  This is essentially a bit-bucket device (i.e. traffic you send to
  this device is consigned into oblivion) with a configurable IP
  address. It is most commonly used in order to make your currently
  inactive SLIP address seem like a real address for local programs.
  If you use SLIP or PPP, you might want to say Y here. It won't
  enlarge your kernel. What a deal. Read about it in the Network
  Administrator's Guide, available from
  <http://www.tldp.org/docs.html#guide>.
  
  To compile this driver as a module, choose M here: the module
  will be called dummy.

DUMMY_CONSOLE
  No help

DUMMY_CONSOLE_COLUMNS
  On PA-RISC, the default value is 160, which should fit a 1280x1024
  monitor.
  Select 80 if you use a 640x480 resolution by default.

DUMMY_CONSOLE_ROWS
  On PA-RISC, the default value is 64, which should fit a 1280x1024
  monitor.
  Select 25 if you use a 640x480 resolution by default.

DUMMY_IRQ
  This module accepts a single 'irq' parameter, which it should register for.
  The sole purpose of this module is to help with debugging of systems on
  which spurious IRQs would happen on disabled IRQ vector.

DVB_A8293
  No help

DVB_AF9013
  Say Y when you want to support this frontend.

DVB_AF9033
  No help

DVB_AS102
  Choose Y or M here if you have a device containing an AS102
  
  To compile this driver as a module, choose M here

DVB_AS102_FE
  No help

DVB_ASCOT2E
  Say Y when you want to support this frontend.

DVB_ATBM8830
  A DMB-TH tuner module. Say Y when you want to support this frontend.

DVB_AU8522
  No help

DVB_AU8522_DTV
  An ATSC 8VSB, QAM64/256 & NTSC demodulator module. Say Y when
  you want to enable DTV demodulation support for this frontend.

DVB_AU8522_V4L
  An ATSC 8VSB, QAM64/256 & NTSC demodulator module. Say Y when
  you want to enable ATV demodulation support for this frontend.

DVB_AV7110
  Support for SAA7146 and AV7110 based DVB cards as produced
  by Fujitsu-Siemens, Technotrend, Hauppauge and others.
  
  This driver only supports the fullfeatured cards with
  onboard MPEG2 decoder.
  
  This driver needs an external firmware. Please use the script
  "<kerneldir>/scripts/get_dvb_firmware av7110" to
  download/extract it, and then copy it to /usr/lib/hotplug/firmware
  or /lib/firmware (depending on configuration of firmware hotplug).
  
  Alternatively, you can download the file and use the kernel's
  EXTRA_FIRMWARE configuration option to build it into your
  kernel image by adding the filename to the EXTRA_FIRMWARE
  configuration option string.
  
  Say Y if you own such a card and want to use it.

DVB_AV7110_IR
  No help

DVB_AV7110_OSD
  The AV7110 firmware provides some code to generate an OnScreenDisplay
  on the video output. This is kind of nonstandard and not guaranteed to
  be maintained.
  
  Anyway, some popular DVB software like VDR uses this OSD to render
  its menus, so say Y if you want to use this software.
  
  All other people say N.

DVB_B2C2_FLEXCOP
  No help

DVB_B2C2_FLEXCOP_DEBUG
  No help

DVB_B2C2_FLEXCOP_PCI
  Support for the Air/Sky/CableStar2 PCI card (DVB/ATSC) by Technisat/B2C2.
  
  Say Y if you own such a device and want to use it.

DVB_B2C2_FLEXCOP_PCI_DEBUG
  Say Y if you want to enable the module option to control debug messages
  of all B2C2 FlexCop drivers.

DVB_B2C2_FLEXCOP_USB
  Support for the Air/Sky/Cable2PC USB1.1 box (DVB/ATSC) by Technisat/B2C2,
  
  Say Y if you own such a device and want to use it.

DVB_B2C2_FLEXCOP_USB_DEBUG
  Say Y if you want to enable the module option to control debug messages
  of all B2C2 FlexCop drivers.

DVB_BCM3510
  An ATSC 8VSB/16VSB and QAM64/256 tuner module. Say Y when you want to
  support this frontend.

DVB_BT8XX
  Support for PCI cards based on the Bt8xx PCI bridge. Examples are
  the Nebula cards, the Pinnacle PCTV cards, the Twinhan DST cards,
  the pcHDTV HD2000 cards, the DViCO FusionHDTV Lite cards, and
  some AVerMedia cards.
  
  Since these cards have no MPEG decoder onboard, they transmit
  only compressed MPEG data over the PCI bus, so you need
  an external software decoder to watch TV on your computer.
  
  Say Y if you own such a device and want to use it.

DVB_BUDGET
  Support for simple SAA7146 based DVB cards (so called Budget-
  or Nova-PCI cards) without onboard MPEG2 decoder, and without
  analog inputs or an onboard Common Interface connector.
  
  Say Y if you own such a card and want to use it.
  
  To compile this driver as a module, choose M here: the
  module will be called budget.

DVB_BUDGET_AV
  Support for simple SAA7146 based DVB cards
  (so called Budget- or Nova-PCI cards) without onboard
  MPEG2 decoder, but with one or more analog video inputs.
  
  Say Y if you own such a card and want to use it.
  
  To compile this driver as a module, choose M here: the
  module will be called budget-av.

DVB_BUDGET_CI
  Support for simple SAA7146 based DVB cards
  (so called Budget- or Nova-PCI cards) without onboard
  MPEG2 decoder, but with onboard Common Interface connector.
  
  Note: The Common Interface is not yet supported by this driver
  due to lack of information from the vendor.
  
  Say Y if you own such a card and want to use it.
  
  To compile this driver as a module, choose M here: the
  module will be called budget-ci.

DVB_BUDGET_CORE
  Support for simple SAA7146 based DVB cards
  (so called Budget- or Nova-PCI cards) without onboard
  MPEG2 decoder.

DVB_BUDGET_PATCH
  Support for Budget Patch (full TS) modification on
  SAA7146+AV7110 based cards (DVB-S cards). This
  driver doesn't use onboard MPEG2 decoder. The
  card is driven in Budget-only mode. Card is
  required to have loaded firmware to tune properly.
  Firmware can be loaded by insertion and removal of
  standard AV7110 driver prior to loading this
  driver.
  
  Say Y if you own such a card and want to use it.
  
  To compile this driver as a module, choose M here: the
  module will be called budget-patch.

DVB_C8SECTPFE
  This adds support for DVB front-end cards connected
  to TS inputs of STiH407/410 SoC.
  
  The driver currently supports C8SECTPFE's TS input block,
  memdma engine, and HW PID filtering.
  
  Supported DVB front-end cards are:
  - STMicroelectronics DVB-T B2100A (STV0367 + TDA18212)
  - STMicroelectronics DVB-S/S2 STV0903 + STV6110 + LNBP24 board
  
  To compile this driver as a module, choose M here: the
  module will be called c8sectpfe.

DVB_CORE
  Enables the DVB API, used by Digital TV devices. Supports several
  standards, including DVB, ATSC, ISDB and CMDB.

DVB_CX22700
  A DVB-T tuner module. Say Y when you want to support this frontend.

DVB_CX22702
  A DVB-T tuner module. Say Y when you want to support this frontend.

DVB_CX24110
  A DVB-S tuner module. Say Y when you want to support this frontend.

DVB_CX24116
  A DVB-S/S2 tuner module. Say Y when you want to support this frontend.

DVB_CX24117
  A Dual DVB-S/S2 tuner module. Say Y when you want to support this frontend.

DVB_CX24120
  A DVB-S/S2 tuner module. Say Y when you want to support this frontend.

DVB_CX24123
  A DVB-S tuner module. Say Y when you want to support this frontend.

DVB_CXD2099
  A driver for the CI controller currently found mostly on
  Digital Devices DuoFlex CI (single) addon modules.
  
  Say Y when you want to support these devices.

DVB_CXD2820R
  Say Y when you want to support this frontend.

DVB_CXD2841ER
  Say Y when you want to support this frontend.

DVB_CXD2880
  Say Y when you want to support this frontend.

DVB_DDBRIDGE
  Support for cards with the Digital Devices PCI express bridge:
  - Octopus PCIe Bridge
  - Octopus mini PCIe Bridge
  - Octopus LE
  - DuoFlex S2 Octopus
  - DuoFlex CT Octopus
  - cineS2(v6)
  - CineCTv6 and DuoFlex CT (STV0367-based)
  - CineCTv7 and DuoFlex CT2/C2T2/C2T2I (Sony CXD28xx-based)
  - MaxA8 series
  - CineS2 V7/V7A and DuoFlex S2 V4 (ST STV0910-based)
  - Max S4/8
  
  Say Y if you own such a card and want to use it.

DVB_DDBRIDGE_MSIENABLE
  Use PCI MSI (Message Signaled Interrupts) per default. Enabling this
  might lead to I2C errors originating from the bridge in conjunction
  with certain SATA controllers, requiring a reload of the ddbridge
  module. MSI can still be disabled by passing msi=0 as option, as
  this will just change the msi option default value.
  
  If you're unsure, concerned about stability and don't want to pass
  module options in case of troubles, say N.

DVB_DEMUX_SECTION_LOSS_LOG
  Enable extra log messages meant to detect packet loss
  inside the Kernel.
  
  Should not be enabled on normal cases, as logs can
  be very verbose.
  
  If you are unsure about this, say N here.

DVB_DIB3000MB
  A DVB-T tuner module. Designed for mobile usage. Say Y when you want
  to support this frontend.

DVB_DIB3000MC
  A DVB-T tuner module. Designed for mobile usage. Say Y when you want
  to support this frontend.

DVB_DIB7000M
  A DVB-T tuner module. Designed for mobile usage. Say Y when you want
  to support this frontend.

DVB_DIB7000P
  A DVB-T tuner module. Designed for mobile usage. Say Y when you want
  to support this frontend.

DVB_DIB8000
  A driver for DiBcom's DiB8000 ISDB-T/ISDB-Tsb demodulator.
  Say Y when you want to support this frontend.

DVB_DIB9000
  A DVB-T tuner module. Designed for mobile usage. Say Y when you want
  to support this frontend.

DVB_DM1105
  Support for cards based on the SDMC DM1105 PCI chip like
  DvbWorld 2002
  
  Since these cards have no MPEG decoder onboard, they transmit
  only compressed MPEG data over the PCI bus, so you need
  an external software decoder to watch TV on your computer.
  
  Say Y or M if you own such a device and want to use it.

DVB_DRX39XYJ
  An ATSC 8VSB and QAM64/256 tuner module. Say Y when you want
  to support this frontend.

DVB_DRXD
  A DVB-T tuner module. Say Y when you want to support this frontend.
  
  Note: this driver was based on vendor driver reference code (released
  under the GPL) as opposed to the existing drx397xd driver, which
  was written via reverse engineering.

DVB_DRXK
  Micronas DRX-K DVB-C/T demodulator.
  
  Say Y when you want to support this frontend.

DVB_DS3000
  A DVB-S/S2 tuner module. Say Y when you want to support this frontend.

DVB_DUMMY_FE
  Dummy skeleton frontend driver.

DVB_DYNAMIC_MINORS
  If you say Y here, the DVB subsystem will use dynamic minor
  allocation for any device that uses the DVB major number.
  This means that you can have more than 4 of a single type
  of device (like demuxes and frontends) per adapter, but udev
  will be required to manage the device nodes.
  
  If you are unsure about this, say N here.

DVB_EC100
  Say Y when you want to support this frontend.

DVB_FIREDTV
  Support for DVB receivers from Digital Everywhere
  which are connected via IEEE 1394 (FireWire).
  
  These devices don't have an MPEG decoder built in,
  so you need an external software decoder to watch TV.
  
  To compile this driver as a module, say M here:
  the module will be called firedtv.

DVB_FIREDTV_INPUT
  No help

DVB_GP8PSK_FE
  No help

DVB_HELENE
  Say Y when you want to support this frontend.

DVB_HOPPER
  Support for PCI cards based on the Hopper  PCI bridge.
  Say Y when you have a Hopper based DVB card and want to use it.
  
  If unsure say N

DVB_HORUS3A
  Say Y when you want to support this frontend.

DVB_ISL6405
  An SEC control chip.

DVB_ISL6421
  An SEC control chip.

DVB_ISL6423
  A SEC controller chip from Intersil

DVB_IX2505V
  A DVB-S tuner module. Say Y when you want to support this frontend.

DVB_L64781
  A DVB-T tuner module. Say Y when you want to support this frontend.

DVB_LG2160
  An ATSC/MH demodulator module. Say Y when you want
  to support this frontend.

DVB_LGDT3305
  An ATSC 8VSB and QAM64/256 tuner module. Say Y when you want
  to support this frontend.

DVB_LGDT3306A
  An ATSC 8VSB and QAM-B 64/256 demodulator module. Say Y when you want
  to support this frontend.

DVB_LGDT330X
  An ATSC 8VSB and QAM64/256 tuner module. Say Y when you want
  to support this frontend.

DVB_LGS8GL5
  A DMB-TH tuner module. Say Y when you want to support this frontend.

DVB_LGS8GXX
  A DMB-TH tuner module. Say Y when you want to support this frontend.

DVB_LNBH25
  An SEC control chip.
  Say Y when you want to support this chip.

DVB_LNBH29
  LNB power supply and control voltage
  regulator chip with step-up converter
  and I2C interface for STMicroelectronics LNBH29.
  Say Y when you want to support this chip.

DVB_LNBP21
  An SEC control chips.

DVB_LNBP22
  LNB power supply and control voltage
  regulator chip with step-up converter
  and I2C interface.
  Say Y when you want to support this chip.

DVB_M88DS3103
  Say Y when you want to support this frontend.

DVB_M88RS2000
  A DVB-S tuner module.
  Say Y when you want to support this frontend.

DVB_MANTIS
  Support for PCI cards based on the Mantis PCI bridge.
  Say Y when you have a Mantis based DVB card and want to use it.
  
  If unsure say N.

DVB_MAX_ADAPTERS
  Maximum number of DVB/ATSC adapters. Increasing this number
  increases the memory consumption of the DVB subsystem even
  if a much lower number of DVB/ATSC adapters is present.
  Only values in the range 4-32 are tested.
  
  If you are unsure about this, use the default value 16

DVB_MB86A16
  A DVB-S/DSS Direct Conversion reveiver.
  Say Y when you want to support this frontend.

DVB_MB86A20S
  A driver for Fujitsu mb86a20s ISDB-T/ISDB-Tsb demodulator.
  Say Y when you want to support this frontend.

DVB_MMAP
  This option enables DVB experimental memory-mapped API, which
  reduces the number of context switches to read DVB buffers, as
  the buffers can use mmap() syscalls.
  
  Support for it is experimental. Use with care. If unsure,
  say N.

DVB_MN88443X
  A driver for Socionext/Panasonic MN884433 and MN884434
  ISDB-S + ISDB-T demodulator.
  Say Y when you want to support this frontend.

DVB_MN88472
  Say Y when you want to support this frontend.

DVB_MN88473
  Say Y when you want to support this frontend.

DVB_MT312
  A DVB-S tuner module. Say Y when you want to support this frontend.

DVB_MT352
  A DVB-T tuner module. Say Y when you want to support this frontend.

DVB_MXL5XX
  MaxLinear MxL5xx family of DVB-S/S2 tuners/demodulators.
  
  Say Y when you want to support these frontends.

DVB_NET
  This option enables DVB Network Support which is a part of the DVB
  standard. It is used, for example, by automatic firmware updates used
  on Set-Top-Boxes. It can also be used to access the Internet via the
  DVB card, if the network provider supports it.
  
  You may want to disable the network support on embedded devices. If
  unsure say Y.

DVB_NETUP_UNIDVB
  Support for NetUP PCI express Universal DVB card.
  
  Say Y when you want to support NetUP Dual Universal DVB card.
  Card can receive two independent streams in following standards:
        DVB-S/S2, T/T2, C/C2
  Two CI slots available for CAM modules.

DVB_NGENE
  Support for Micronas PCI express cards with nGene bridge.
  

DVB_NXT200X
  An ATSC 8VSB and QAM64/256 tuner module. Say Y when you want
  to support this frontend.
  
  This driver needs external firmware. Please use the commands
  "<kerneldir>/scripts/get_dvb_firmware nxt2002" and
  "<kerneldir>/scripts/get_dvb_firmware nxt2004" to
  download/extract them, and then copy them to /usr/lib/hotplug/firmware
  or /lib/firmware (depending on configuration of firmware hotplug).

DVB_NXT6000
  A DVB-T tuner module. Say Y when you want to support this frontend.

DVB_OR51132
  An ATSC 8VSB and QAM64/256 tuner module. Say Y when you want
  to support this frontend.
  
  This driver needs external firmware. Please use the commands
  "<kerneldir>/scripts/get_dvb_firmware or51132_vsb" and/or
  "<kerneldir>/scripts/get_dvb_firmware or51132_qam" to
  download firmwares for 8VSB and QAM64/256, respectively. Copy them to
  /usr/lib/hotplug/firmware or /lib/firmware (depending on
  configuration of firmware hotplug).

DVB_OR51211
  An ATSC 8VSB tuner module. Say Y when you want to support this frontend.
  
  This driver needs external firmware. Please use the command
  "<kerneldir>/scripts/get_dvb_firmware or51211" to
  download it, and then copy it to /usr/lib/hotplug/firmware
  or /lib/firmware (depending on configuration of firmware hotplug).

DVB_PLATFORM_DRIVERS
  Say Y here to enable support for platform-specific Digital TV drivers.

DVB_PLL
  This module drives a number of tuners based on PLL chips with a
  common I2C interface. Say Y when you want to support these tuners.

DVB_PLUTO2
  Support for PCI cards based on the Pluto2 FPGA like the Satelco
  Easywatch Mobile Terrestrial DVB-T Receiver.
  
  Since these cards have no MPEG decoder onboard, they transmit
  only compressed MPEG data over the PCI bus, so you need
  an external software decoder to watch TV on your computer.
  
  Say Y or M if you own such a device and want to use it.
  

DVB_PT1
  Support for Earthsoft PT1 PCI cards.
  
  Since these cards have no MPEG decoder onboard, they transmit
  only compressed MPEG data over the PCI bus, so you need
  an external software decoder to watch TV on your computer.
  
  Say Y or M if you own such a device and want to use it.
  

DVB_PT3
  Support for Earthsoft PT3 PCIe cards.
  
  Say Y or M if you own such a device and want to use it.

DVB_RTL2830
  Say Y when you want to support this frontend.

DVB_RTL2832
  Say Y when you want to support this frontend.

DVB_RTL2832_SDR
  Say Y when you want to support this SDR module.

DVB_S5H1409
  An ATSC 8VSB and QAM64/256 tuner module. Say Y when you want
  to support this frontend.

DVB_S5H1411
  An ATSC 8VSB and QAM64/256 tuner module. Say Y when you want
  to support this frontend.

DVB_S5H1420
  A DVB-S tuner module. Say Y when you want to support this frontend.

DVB_S5H1432
  A DVB-T tuner module. Say Y when you want to support this frontend.

DVB_S921
  AN ISDB-T DQPSK, QPSK, 16QAM and 64QAM 1seg tuner module.
  Say Y when you want to support this frontend.

DVB_SI2165
  A DVB-C/T demodulator.
  
  Say Y when you want to support this frontend.

DVB_SI2168
  Say Y when you want to support this frontend.

DVB_SI21XX
  A DVB-S tuner module. Say Y when you want to support this frontend.

DVB_SMIPCIE
  Support for cards with SMI PCIe bridge:
  - DVBSky S950 V3
  - DVBSky S952 V3
  - DVBSky T9580 V3
  
  Say Y or M if you own such a device and want to use it.
  If unsure say N.

DVB_SP2
  CIMaX SP2/SP2HF Common Interface module.

DVB_SP8870
  A DVB-T tuner module. Say Y when you want to support this frontend.
  
  This driver needs external firmware. Please use the command
  "<kerneldir>/scripts/get_dvb_firmware sp8870" to
  download/extract it, and then copy it to /usr/lib/hotplug/firmware
  or /lib/firmware (depending on configuration of firmware hotplug).

DVB_SP887X
  A DVB-T tuner module. Say Y when you want to support this frontend.
  
  This driver needs external firmware. Please use the command
  "<kerneldir>/scripts/get_dvb_firmware sp887x" to
  download/extract it, and then copy it to /usr/lib/hotplug/firmware
  or /lib/firmware (depending on configuration of firmware hotplug).

DVB_STB0899
  A DVB-S/S2/DSS Multistandard demodulator. Say Y when you want
  to support this demodulator based frontends

DVB_STB6000
  A DVB-S silicon tuner module. Say Y when you want to support this tuner.

DVB_STB6100
  A Silicon tuner from ST used in conjunction with the STB0899
  demodulator. Say Y when you want to support this tuner.

DVB_STV0288
  A DVB-S tuner module. Say Y when you want to support this frontend.

DVB_STV0297
  A DVB-C tuner module. Say Y when you want to support this frontend.

DVB_STV0299
  A DVB-S tuner module. Say Y when you want to support this frontend.

DVB_STV0367
  A DVB-T/C tuner module. Say Y when you want to support this frontend.

DVB_STV0900
  A DVB-S/S2 demodulator. Say Y when you want to support this frontend.

DVB_STV090x
  DVB-S/S2/DSS Multistandard Professional/Broadcast demodulators.
  Say Y when you want to support these frontends.

DVB_STV0910
  ST STV0910 DVB-S/S2 demodulator driver.
  
  Say Y when you want to support these frontends.

DVB_STV6110
  A DVB-S silicon tuner module. Say Y when you want to support this tuner.

DVB_STV6110x
  A Silicon tuner that supports DVB-S and DVB-S2 modes

DVB_STV6111
  A Silicon tuner that supports DVB-S and DVB-S2 modes
  
  Say Y when you want to support these frontends.

DVB_TC90522
  Toshiba TC90522 2xISDB-S 8PSK + 2xISDB-T OFDM demodulator.
  Say Y when you want to support this frontend.

DVB_TDA10021
  A DVB-C tuner module. Say Y when you want to support this frontend.

DVB_TDA10023
  A DVB-C tuner module. Say Y when you want to support this frontend.

DVB_TDA10048
  A DVB-T tuner module. Say Y when you want to support this frontend.

DVB_TDA1004X
  A DVB-T tuner module. Say Y when you want to support this frontend.
  
  This driver needs external firmware. Please use the commands
  "<kerneldir>/scripts/get_dvb_firmware tda10045",
  "<kerneldir>/scripts/get_dvb_firmware tda10046" to
  download/extract them, and then copy them to /usr/lib/hotplug/firmware
  or /lib/firmware (depending on configuration of firmware hotplug).

DVB_TDA10071
  Say Y when you want to support this frontend.

DVB_TDA10086
  A DVB-S tuner module. Say Y when you want to support this frontend.

DVB_TDA18271C2DD
  NXP TDA18271 silicon tuner.
  
  Say Y when you want to support this tuner.

DVB_TDA665x
  Support for tuner modules based on Philips TDA6650/TDA6651 chips.
  Say Y when you want to support this chip.
  
  Currently supported tuners:
  * Panasonic ENV57H12D5 (ET-50DT)

DVB_TDA8083
  A DVB-S tuner module. Say Y when you want to support this frontend.

DVB_TDA8261
  A DVB-S tuner module. Say Y when you want to support this frontend.

DVB_TDA826X
  A DVB-S silicon tuner module. Say Y when you want to support this tuner.

DVB_TEST_DRIVERS
  Enables DVB test drivers.
  
  This enables the DVB test drivers. They are meant as an aid for
  DVB device driver writers and developers working on userspace
  media applications.

DVB_TS2020
  A DVB-S/S2 silicon tuner. Say Y when you want to support this tuner.

DVB_TTUSB_BUDGET
  Support for external USB adapters designed by Technotrend and
  produced by Hauppauge, shipped under the brand name 'Nova-USB'.
  
  These devices don't have a MPEG decoder built in, so you need
  an external software decoder to watch TV.
  
  Say Y if you own such a device and want to use it.

DVB_TTUSB_DEC
  Support for external USB adapters designed by Technotrend and
  produced by Hauppauge, shipped under the brand name 'DEC2000-t'
  and 'DEC3000-s'.
  
  Even if these devices have a MPEG decoder built in, they transmit
  only compressed MPEG data over the USB bus, so you need
  an external software decoder to watch TV on your computer.
  
  This driver needs external firmware. Please use the commands
  "<kerneldir>/scripts/get_dvb_firmware dec2000t",
  "<kerneldir>/scripts/get_dvb_firmware dec2540t",
  "<kerneldir>/scripts/get_dvb_firmware dec3000s",
  download/extract them, and then copy them to /usr/lib/hotplug/firmware
  or /lib/firmware (depending on configuration of firmware hotplug).
  
  Say Y if you own such a device and want to use it.

DVB_TUA6100
  A DVB-S PLL chip.

DVB_TUNER_CX24113
  A DVB-S tuner module. Say Y when you want to support this frontend.

DVB_TUNER_DIB0070
  A driver for the silicon baseband tuner DiB0070 from DiBcom.
  This device is only used inside a SiP called together with a
  demodulator for now.

DVB_TUNER_DIB0090
  A driver for the silicon baseband tuner DiB0090 from DiBcom.
  This device is only used inside a SiP called together with a
  demodulator for now.

DVB_TUNER_ITD1000
  A DVB-S tuner module. Say Y when you want to support this frontend.

DVB_ULE_DEBUG
  Enable extra log messages meant to detect problems while
  handling DVB network ULE packet loss inside the Kernel.
  
  Should not be enabled on normal cases, as logs can
  be very verbose.
  
  If you are unsure about this, say N here.

DVB_USB
  By enabling this you will be able to choose the various supported
  USB1.1 and USB2.0 DVB devices.
  
  Almost every USB device needs a firmware, please look into
  <file:Documentation/driver-api/media/drivers/dvb-usb.rst>.
  
  For a complete list of supported USB devices see the LinuxTV DVB Wiki:
  <https://linuxtv.org/wiki/index.php/DVB_USB>
  
  Say Y if you own a USB DVB device.

DVB_USB_A800
  Say Y here to support the AVerMedia AverTV DVB-T USB 2.0 (A800) receiver.

DVB_USB_AF9005
  Say Y here to support the Afatech AF9005 based DVB-T USB1.1 receiver
  and the TerraTec Cinergy T USB XE (Rev.1)

DVB_USB_AF9005_REMOTE
  Say Y here to support the default remote control decoding for the
  Afatech AF9005 based receiver.

DVB_USB_AF9015
  Say Y here to support the Afatech AF9015 based DVB-T USB2.0 receiver

DVB_USB_AF9035
  Say Y here to support the Afatech AF9035 based DVB USB receiver.

DVB_USB_ANYSEE
  Say Y here to support the Anysee E30, Anysee E30 Plus or
  Anysee E30 C Plus DVB USB2.0 receiver.

DVB_USB_AU6610
  Say Y here to support the Sigmatek DVB-110 DVB-T USB2.0 receiver.

DVB_USB_AZ6007
  Say Y here to support the AZ6007 receivers like Terratec H7.

DVB_USB_AZ6027
  Say Y here to support the AZ6027 device

DVB_USB_CE6230
  Say Y here to support the Intel CE6230 DVB-T USB2.0 receiver

DVB_USB_CINERGY_T2
  Support for "TerraTec CinergyT2" USB2.0 Highspeed DVB Receivers
  
  Say Y if you own such a device and want to use it.

DVB_USB_CXUSB
  Say Y here to support the Conexant USB2.0 hybrid reference design.
  DVB and ATSC modes are supported, for a basic analog mode support
  see the next option ("Analog support for the Conexant USB2.0 hybrid
  reference design").
  Devices that require this module:
  
  Medion MD95700 hybrid USB2.0 device.
  DViCO FusionHDTV (Bluebird) USB2.0 devices

DVB_USB_CXUSB_ANALOG
  Say Y here to enable basic analog mode support for the Conexant
  USB2.0 hybrid reference design.
  Currently this mode is supported only on a Medion MD95700 device.

DVB_USB_DEBUG
  Say Y if you want to enable debugging. See modinfo dvb-usb (and the
  appropriate drivers) for debug levels.

DVB_USB_DIB0700
  Support for USB2.0/1.1 DVB receivers based on the DiB0700 USB bridge. The
  USB bridge is also present in devices having the DiB7700 DVB-T-USB
  silicon. This chip can be found in devices offered by Hauppauge,
  Avermedia and other big and small companies.
  
  For an up-to-date list of devices supported by this driver, have a look
  on the LinuxTV Wiki at www.linuxtv.org.
  
  Say Y if you own such a device and want to use it. You should build it as
  a module.

DVB_USB_DIB3000MC
  This is a module with helper functions for accessing the
  DIB3000MC from USB DVB devices. It must be a separate module
  in case DVB_USB is built-in and DVB_DIB3000MC is a module,
  and gets selected automatically when needed.

DVB_USB_DIBUSB_MB
  Support for USB 1.1 and 2.0 DVB-T receivers based on reference designs made by
  DiBcom (<http://www.dibcom.fr>) equipped with a DiB3000M-B demodulator.
  
  For an up-to-date list of devices supported by this driver, have a look
  on the Linux-DVB Wiki at www.linuxtv.org.
  
  Say Y if you own such a device and want to use it. You should build it as
  a module.

DVB_USB_DIBUSB_MB_FAULTY
  Support for faulty USB IDs due to an invalid EEPROM on some Artec devices.

DVB_USB_DIBUSB_MC
  Support for USB2.0 DVB-T receivers based on reference designs made by
  DiBcom (<http://www.dibcom.fr>) equipped with a DiB3000M-C/P demodulator.
  
  For an up-to-date list of devices supported by this driver, have a look
  on the Linux-DVB Wiki at www.linuxtv.org.
  
  Say Y if you own such a device and want to use it. You should build it as
  a module.

DVB_USB_DIGITV
  Say Y here to support the Nebula Electronics uDigitV USB2.0 DVB-T receiver.

DVB_USB_DTT200U
  Say Y here to support the WideView/Yakumo/Hama/Typhoon/Yuan DVB-T USB2.0 receiver.
  
  The receivers are also known as DTT200U (Yakumo) and UB300 (Yuan).
  
  The WT-220U and its clones are pen-sized.

DVB_USB_DTV5100
  Say Y here to support the AME DTV-5100 USB2.0 DVB-T receiver.

DVB_USB_DVBSKY
  Say Y here to support the USB receivers from DVBSky.

DVB_USB_DW2102
  Say Y here to support the DvbWorld, TeVii, Prof, TechnoTrend
  DVB-S/S2 USB2.0 receivers.

DVB_USB_EC168
  Say Y here to support the E3C EC168 DVB-T USB2.0 receiver.

DVB_USB_GL861
  Say Y here to support the MSI Megasky 580 (55801) DVB-T USB2.0
  receiver with USB ID 0db0:5581, Friio White ISDB-T receiver
  with USB ID 0x7a69:0001.

DVB_USB_GP8PSK
  Say Y here to support the
    GENPIX 8psk module
  
  DVB-S USB2.0 receivers.

DVB_USB_LME2510
  Say Y here to support the LME DM04/QQBOX DVB-S USB2.0

DVB_USB_M920X
  Say Y here to support the MSI Mega Sky 580 USB2.0 DVB-T receiver.
  Currently, only devices with a product id of
  "DTV USB MINI" (in cold state) are supported.
  Firmware required.

DVB_USB_MXL111SF
  Say Y here to support the MxL111SF USB2.0 DTV receiver.

DVB_USB_NOVA_T_USB2
  Say Y here to support the Hauppauge WinTV-NOVA-T usb2 DVB-T USB2.0 receiver.

DVB_USB_OPERA1
  Say Y here to support the Opera DVB-S USB2.0 receiver.

DVB_USB_PCTV452E
  Support for external USB adapter designed by Pinnacle,
  shipped under the brand name 'PCTV HDTV Pro USB'.
  Also supports TT Connect S2-3600/3650 cards.
  Say Y if you own such a device and want to use it.

DVB_USB_RTL28XXU
  Say Y here to support the Realtek RTL28xxU DVB USB receiver.

DVB_USB_TECHNISAT_USB2
  Say Y here to support the Technisat USB2 DVB-S/S2 device

DVB_USB_TTUSB2
  Say Y here to support the Pinnacle 400e DVB-S USB2.0 receiver and
  the TechnoTrend CT-3650 CI DVB-C/T USB2.0 receiver. The
  firmware protocol used by this module is similar to the one used by the
  old ttusb-driver - that's why the module is called dvb-usb-ttusb2.

DVB_USB_UMT_010
  Say Y here to support the HanfTek UMT-010 USB2.0 stick-sized DVB-T receiver.

DVB_USB_V2
  By enabling this you will be able to choose the various supported
  USB1.1 and USB2.0 DVB devices.
  
  Almost every USB device needs a firmware, please look into
  <file:Documentation/driver-api/media/drivers/dvb-usb.rst>.
  
  For a complete list of supported USB devices see the LinuxTV DVB Wiki:
  <https://linuxtv.org/wiki/index.php/DVB_USB>
  
  Say Y if you own a USB DVB device.

DVB_USB_VP702X
  Say Y here to support the
  
    TwinhanDTV StarBox,
        DigitalRise USB Starbox and
        TYPHOON DVB-S USB 2.0 BOX
  
  DVB-S USB2.0 receivers.

DVB_USB_VP7045
  Say Y here to support the
  
    TwinhanDTV Alpha (stick) (VP-7045),
        TwinhanDTV MagicBox II (VP-7046),
        DigitalNow TinyUSB 2 DVB-t,
        DigitalRise USB 2.0 Ter (Beetle) and
        TYPHOON DVB-T USB DRIVE
  
  DVB-T USB2.0 receivers.

DVB_USB_ZD1301
  Say Y here to support the ZyDAS ZD1301 DVB USB receiver.

DVB_VES1820
  A DVB-C tuner module. Say Y when you want to support this frontend.

DVB_VES1X93
  A DVB-S tuner module. Say Y when you want to support this frontend.

DVB_VIDTV
  The virtual DVB test driver serves as a reference DVB driver and helps
  validate the existing APIs in the media subsystem. It can also aid developers
  working on userspace applications.
  
  
  When in doubt, say N.

DVB_ZD1301_DEMOD
  Say Y when you want to support this frontend.

DVB_ZL10036
  A DVB-S tuner module. Say Y when you want to support this frontend.

DVB_ZL10039
  A DVB-S tuner module. Say Y when you want to support this frontend.

DVB_ZL10353
  A DVB-T tuner module. Say Y when you want to support this frontend.

DWC_XLGMAC
  This driver supports the Synopsys DesignWare Cores Enterprise
  Ethernet (dwc-xlgmac).

DWC_XLGMAC_PCI
  This selects the pci bus support for the dwc-xlgmac driver.
  This driver was tested on Synopsys XLGMAC IP Prototyping Kit.
  
  If you have a controller with this interface, say Y or M here.
  If unsure, say N.

DWMAC_ANARION
  Support for Adaptrum Anarion GMAC Ethernet controller.
  
  This selects the Anarion SoC glue layer support for the stmmac driver.

DWMAC_DWC_QOS_ETH
  Support for chips using the snps,dwc-qos-ethernet.txt DT binding.

DWMAC_GENERIC
  Generic DWMAC driver for platforms that don't require any
  platform specific code to function or is using platform
  data for setup.

DWMAC_IMX8
  Support for ethernet controller on NXP i.MX8 SOCs.
  
  This selects NXP SoC glue layer support for the stmmac
  device driver. This driver is used for i.MX8 series like
  iMX8MP/iMX8DXL GMAC ethernet controller.

DWMAC_INTEL
  This selects the Intel platform specific bus support for the
  stmmac driver. This driver is used for Intel Quark/EHL/TGL.

DWMAC_INTEL_PLAT
  Support for ethernet controllers on Intel SoCs
  
  This selects the Intel platform specific glue layer support for
  the stmmac device driver. This driver is used for the Intel Keem Bay
  SoC.

DWMAC_IPQ806X
  Support for QCA IPQ806X DWMAC Ethernet.
  
  This selects the IPQ806x SoC glue layer support for the stmmac
  device driver. This driver does not use any of the hardware
  acceleration features available on this SoC. Network devices
  will behave like standard non-accelerated ethernet interfaces.

DWMAC_LPC18XX
  Support for NXP LPC18xx/43xx DWMAC Ethernet.

DWMAC_MEDIATEK
  Support for MediaTek GMAC Ethernet controller.
  
  This selects the MT2712 SoC support for the stmmac driver.

DWMAC_MESON
  Support for Ethernet controller on Amlogic Meson SoCs.
  
  This selects the Amlogic Meson SoC glue layer support for
  the stmmac device driver. This driver is used for Meson6,
  Meson8, Meson8b and GXBB SoCs.

DWMAC_OXNAS
  Support for Ethernet controller on Oxford Semiconductor OXNAS SoCs.
  
  This selects the Oxford Semiconductor OXNASSoC glue layer support for
  the stmmac device driver. This driver is used for OX820.

DWMAC_QCOM_ETHQOS
  Support for the Qualcomm ETHQOS core.
  
  This selects the Qualcomm ETHQOS glue layer support for the
  stmmac device driver.

DWMAC_ROCKCHIP
  Support for Ethernet controller on Rockchip RK3288 SoC.
  
  This selects the Rockchip RK3288 SoC glue layer support for
  the stmmac device driver.

DWMAC_SOCFPGA
  Support for ethernet controller on Altera SOCFPGA
  
  This selects the Altera SOCFPGA SoC glue layer support
  for the stmmac device driver. This driver is used for
  arria5 and cyclone5 FPGA SoCs.

DWMAC_STI
  Support for ethernet controller on STi SOCs.
  
  This selects STi SoC glue layer support for the stmmac
  device driver. This driver is used on for the STi series
  SOCs GMAC ethernet controller.

DWMAC_STM32
  Support for ethernet controller on STM32 SOCs.
  
  This selects STM32 SoC glue layer support for the stmmac
  device driver. This driver is used on for the STM32 series
  SOCs GMAC ethernet controller.

DWMAC_SUN8I
  Support for Allwinner H3 A83T A64 EMAC ethernet controllers.
  
  This selects Allwinner SoC glue layer support for the
  stmmac device driver. This driver is used for H3/A83T/A64
  EMAC ethernet controller.

DWMAC_SUNXI
  Support for Allwinner A20/A31 GMAC ethernet controllers.
  
  This selects Allwinner SoC glue layer support for the
  stmmac device driver. This driver is used for A20/A31
  GMAC ethernet controller.

DW_APB_ICTL
  No help

DW_APB_TIMER
  Enables the support for the dw_apb timer.

DW_APB_TIMER_OF
  No help

DW_AXI_DMAC
  Enable support for Synopsys DesignWare AXI DMA controller.
  NOTE: This driver wasn't tested on 64 bit platform because
  of lack 64 bit platform with Synopsys DW AXI DMAC.

DW_DMAC
  Support the Synopsys DesignWare AHB DMA controller. This
  can be integrated in chips such as the Intel Cherrytrail.

DW_DMAC_CORE
  No help

DW_DMAC_PCI
  Support the Synopsys DesignWare AHB DMA controller on the
  platforms that enumerate it as a PCI device. For example,
  Intel Medfield has integrated this GPDMA controller.

DW_EDMA
  Support the Synopsys DesignWare eDMA controller, normally
  implemented on endpoints SoCs.

DW_EDMA_PCIE
  Provides a glue-logic between the Synopsys DesignWare
  eDMA controller and an endpoint PCIe device. This also serves
  as a reference design to whom desires to use this IP.

DW_I3C_MASTER
  Support for Synopsys DesignWare MIPI I3C Controller.
  
  For details please see
  https://www.synopsys.com/dw/ipdir.php?ds=mipi_i3c
  
  This driver can also be built as a module.  If so, the module
  will be called dw-i3c-master.

DW_WATCHDOG
  Say Y here if to include support for the Synopsys DesignWare
  watchdog timer found in many chips.
  To compile this driver as a module, choose M here: the
  module will be called dw_wdt.

DYNAMIC_DEBUG
  Compiles debug level messages into the kernel, which would not
  otherwise be available at runtime. These messages can then be
  enabled/disabled based on various levels of scope - per source file,
  function, module, format string, and line number. This mechanism
  implicitly compiles in all pr_debug() and dev_dbg() calls, which
  enlarges the kernel text size by about 2%.
  
  If a source file is compiled with DEBUG flag set, any
  pr_debug() calls in it are enabled by default, but can be
  disabled at runtime as below.  Note that DEBUG flag is
  turned on by many CONFIG_*DEBUG* options.
  
  Usage:
  
  Dynamic debugging is controlled via the 'dynamic_debug/control' file,
  which is contained in the 'debugfs' filesystem or procfs.
  Thus, the debugfs or procfs filesystem must first be mounted before
  making use of this feature.
  We refer the control file as: <debugfs>/dynamic_debug/control. This
  file contains a list of the debug statements that can be enabled. The
  format for each line of the file is:
  
        filename:lineno [module]function flags format
  
  filename : source file of the debug statement
  lineno : line number of the debug statement
  module : module that contains the debug statement
  function : function that contains the debug statement
  flags : '=p' means the line is turned 'on' for printing
  format : the format used for the debug statement
  
  From a live system:
  
        nullarbor:~ # cat <debugfs>/dynamic_debug/control
        # filename:lineno [module]function flags format
        fs/aio.c:222 [aio]__put_ioctx =_ "__put_ioctx:\040freeing\040%p\012"
        fs/aio.c:248 [aio]ioctx_alloc =_ "ENOMEM:\040nr_events\040too\040high\012"
        fs/aio.c:1770 [aio]sys_io_cancel =_ "calling\040cancel\012"
  
  Example usage:
  
        // enable the message at line 1603 of file svcsock.c
        nullarbor:~ # echo -n 'file svcsock.c line 1603 +p' >
                                        <debugfs>/dynamic_debug/control
  
        // enable all the messages in file svcsock.c
        nullarbor:~ # echo -n 'file svcsock.c +p' >
                                        <debugfs>/dynamic_debug/control
  
        // enable all the messages in the NFS server module
        nullarbor:~ # echo -n 'module nfsd +p' >
                                        <debugfs>/dynamic_debug/control
  
        // enable all 12 messages in the function svc_process()
        nullarbor:~ # echo -n 'func svc_process +p' >
                                        <debugfs>/dynamic_debug/control
  
        // disable all 12 messages in the function svc_process()
        nullarbor:~ # echo -n 'func svc_process -p' >
                                        <debugfs>/dynamic_debug/control
  
  See Documentation/admin-guide/dynamic-debug-howto.rst for additional
  information.

DYNAMIC_DEBUG_CORE
  Enable core functional support of dynamic debug. It is useful
  when you want to tie dynamic debug to your kernel modules with
  DYNAMIC_DEBUG_MODULE defined for each of them, especially for
  the case of embedded system where the kernel image size is
  sensitive for people.

DYNAMIC_EVENTS
  No help

DYNAMIC_FTRACE
  This option will modify all the calls to function tracing
  dynamically (will patch them out of the binary image and
  replace them with a No-Op instruction) on boot up. During
  compile time, a table is made of all the locations that ftrace
  can function trace, and this table is linked into the kernel
  image. When this is enabled, functions can be individually
  enabled, and the functions not enabled will not affect
  performance of the system.
  
  See the files in /sys/kernel/debug/tracing:
    available_filter_functions
    set_ftrace_filter
    set_ftrace_notrace
  
  This way a CONFIG_FUNCTION_TRACER kernel is slightly larger, but
  otherwise has native performance as long as no tracing is active.

DYNAMIC_FTRACE_WITH_DIRECT_CALLS
  No help

DYNAMIC_FTRACE_WITH_REGS
  No help

DYNAMIC_MEMORY_LAYOUT
  This option makes base addresses of vmalloc and vmemmap as well as
  __PAGE_OFFSET movable during boot.

DYNAMIC_PHYSICAL_MASK
  No help

E100
  This driver supports Intel(R) PRO/100 family of adapters.
  To verify that your adapter is supported, find the board ID number
  on the adapter. Look for a label that has a barcode and a number
  in the format 123456-001 (six digits hyphen three digits).
  
  Use the above information and the Adapter & Driver ID Guide that
  can be located at:
  
  <http://support.intel.com>
  
  to identify the adapter.
  
  More specific information on configuring the driver is in
  <file:Documentation/networking/device_drivers/ethernet/intel/e100.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called e100.

E1000
  This driver supports Intel(R) PRO/1000 gigabit ethernet family of
  adapters.  For more information on how to identify your adapter, go
  to the Adapter & Driver ID Guide that can be located at:
  
  <http://support.intel.com>
  
  More specific information on configuring the driver is in
  <file:Documentation/networking/device_drivers/ethernet/intel/e1000.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called e1000.

E1000E
  This driver supports the PCI-Express Intel(R) PRO/1000 gigabit
  ethernet family of adapters. For PCI or PCI-X e1000 adapters,
  use the regular e1000 driver For more information on how to
  identify your adapter, go to the Adapter & Driver ID Guide that
  can be located at:
  
  <http://support.intel.com>
  
  More specific information on configuring the driver is in
  <file:Documentation/networking/device_drivers/ethernet/intel/e1000e.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called e1000e.

E1000E_HWTS
  Say Y to enable hardware supported cross-timestamping on PCH
  devices. The cross-timestamp is available through the PTP clock
  driver precise cross-timestamp ioctl (PTP_SYS_OFFSET_PRECISE).

EARLY_PRINTK
  Write kernel log output directly into the VGA buffer or to a serial
  port.
  
  This is useful for kernel debugging when your machine crashes very
  early before the console code is initialized. For normal operation
  it is not recommended because it looks ugly and doesn't cooperate
  with klogd/syslogd or the X server. You should normally say N here,
  unless you want to debug such a crash.

EARLY_PRINTK_DBGP
  Write kernel log output directly into the EHCI debug port.
  
  This is useful for kernel debugging when your machine crashes very
  early before the console code is initialized. For normal operation
  it is not recommended because it looks ugly and doesn't cooperate
  with klogd/syslogd or the X server. You should normally say N here,
  unless you want to debug such a crash. You need usb debug device.

EARLY_PRINTK_USB
  No help

EARLY_PRINTK_USB_XDBC
  Write kernel log output directly into the xHCI debug port.
  
  One use for this feature is kernel debugging, for example when your
  machine crashes very early before the regular console code is
  initialized. Other uses include simpler, lockless logging instead of
  a full-blown printk console driver + klogd.
  
  For normal production environments this is normally not recommended,
  because it doesn't feed events into klogd/syslogd and doesn't try to
  print anything on the screen.
  
  You should normally say N here, unless you want to debug early
  crashes or need a very simple printk logging facility.

EBC_C384_WDT
  Enables watchdog timer support for the watchdog timer on the
  WinSystems EBC-C384 motherboard. The timeout may be configured via
  the timeout module parameter.

ECHO
  This driver provides line echo cancelling support for mISDN and
  Zaptel drivers.
  
  To compile this driver as a module, choose M here. The module
  will be called echo.

ECRYPT_FS
  Encrypted filesystem that operates on the VFS layer.  See
  <file:Documentation/filesystems/ecryptfs.rst> to learn more about
  eCryptfs.  Userspace components are required and can be
  obtained from <http://ecryptfs.sf.net>.
  
  To compile this file system support as a module, choose M here: the
  module will be called ecryptfs.

ECRYPT_FS_MESSAGING
  Enables the /dev/ecryptfs entry for use by ecryptfsd. This allows
  for userspace to wrap/unwrap file encryption keys by other
  backends, like OpenSSL.

EDAC
  EDAC is a subsystem along with hardware-specific drivers designed to
  report hardware errors. These are low-level errors that are reported
  in the CPU or supporting chipset or other subsystems:
  memory errors, cache errors, PCI errors, thermal throttling, etc..
  If unsure, select 'Y'.
  
  The mailing list for the EDAC project is linux-edac@vger.kernel.org.

EDAC_ALTERA
  Support for error detection and correction on the
  Altera SOCs. This is the global enable for the
  various Altera peripherals.

EDAC_ALTERA_DMA
  Support for error detection and correction on the
  Altera DMA FIFO Memory for Altera SoCs.

EDAC_ALTERA_ETHERNET
  Support for error detection and correction on the
  Altera Ethernet FIFO Memory for Altera SoCs.

EDAC_ALTERA_L2C
  Support for error detection and correction on the
  Altera L2 cache Memory for Altera SoCs. This option
  requires L2 cache.

EDAC_ALTERA_NAND
  Support for error detection and correction on the
  Altera NAND FIFO Memory for Altera SoCs.

EDAC_ALTERA_OCRAM
  Support for error detection and correction on the
  Altera On-Chip RAM Memory for Altera SoCs.

EDAC_ALTERA_QSPI
  Support for error detection and correction on the
  Altera QSPI FIFO Memory for Altera SoCs.

EDAC_ALTERA_SDMMC
  Support for error detection and correction on the
  Altera SDMMC FIFO Memory for Altera SoCs.

EDAC_ALTERA_SDRAM
  Support for error detection and correction on the
  Altera SDRAM Memory for Altera SoCs. Note that the
  preloader must initialize the SDRAM before loading
  the kernel.

EDAC_ALTERA_USB
  Support for error detection and correction on the
  Altera USB FIFO Memory for Altera SoCs.

EDAC_AL_MC
  Support for error detection and correction for Amazon's Annapurna
  Labs Alpine chips which allow 1 bit correction and 2 bits detection.

EDAC_AMD64
  Support for error detection and correction of DRAM ECC errors on
  the AMD64 families (>= K8) of memory controllers.

EDAC_AMD64_ERROR_INJECTION
  Recent Opterons (Family 10h and later) provide for Memory Error
  Injection into the ECC detection circuits. The amd64_edac module
  allows the operator/user to inject Uncorrectable and Correctable
  errors into DRAM.
  
  When enabled, in each of the respective memory controller directories
  (/sys/devices/system/edac/mc/mcX), there are 3 input files:
  
  - inject_section (0..3, 16-byte section of 64-byte cacheline),
  - inject_word (0..8, 16-bit word of 16-byte section),
  - inject_ecc_vector (hex ecc vector: select bits of inject word)
  
  In addition, there are two control files, inject_read and inject_write,
  which trigger the DRAM ECC Read and Write respectively.

EDAC_AMD76X
  Support for error detection and correction on the AMD 76x
  series of chipsets used with the Athlon processor.

EDAC_AMD8111
  Support for error detection and correction on the
  AMD8111 HyperTransport I/O Hub chip.
  Note, add more Kconfig dependency if it's adopted
  on some machine other than Maple.

EDAC_AMD8131
  Support for error detection and correction on the
  AMD8131 HyperTransport PCI-X Tunnel chip.
  Note, add more Kconfig dependency if it's adopted
  on some machine other than Maple.

EDAC_ARMADA_XP
  Support for error correction and detection on the Marvell Aramada XP
  DDR RAM and L2 cache controllers.

EDAC_ASPEED
  Support for error detection and correction on the Aspeed AST BMC SoC.
  
  First, ECC must be configured in the bootloader. Then, this driver
  will expose error counters via the EDAC kernel framework.

EDAC_ATOMIC_SCRUB
  No help

EDAC_BLUEFIELD
  Support for error detection and correction on the
  Mellanox BlueField SoCs.

EDAC_CELL
  Support for error detection and correction on the
  Cell Broadband Engine internal memory controller
  on platform without a hypervisor

EDAC_CPC925
  Support for error detection and correction on the
  IBM CPC925 Bridge and Memory Controller, which is
  a companion chip to the PowerPC 970 family of
  processors.

EDAC_DEBUG
  This turns on debugging information for the entire EDAC subsystem.
  You do so by inserting edac_module with "edac_debug_level=x." Valid
  levels are 0-4 (from low to high) and by default it is set to 2.
  Usually you should select 'N' here.

EDAC_DECODE_MCE
  Enable this option if you want to decode Machine Check Exceptions
  occurring on your machine in human-readable form.
  
  You should definitely say Y here in case you want to decode MCEs
  which occur really early upon boot, before the module infrastructure
  has been initialized.

EDAC_DMC520
  Support for error detection and correction on the
  SoCs with ARM DMC-520 DRAM controller.

EDAC_E752X
  Support for error detection and correction on the Intel
  E7520, E7525, E7320 server chipsets.

EDAC_E7XXX
  Support for error detection and correction on the Intel
  E7205, E7500, E7501 and E7505 server chipsets.

EDAC_GHES
  Not all machines support hardware-driven error report. Some of those
  provide a BIOS-driven error report mechanism via ACPI, using the
  APEI/GHES driver. By enabling this option, the error reports provided
  by GHES are sent to userspace via the EDAC API.
  
  When this option is enabled, it will disable the hardware-driven
  mechanisms, if a GHES BIOS is detected, entering into the
  "Firmware First" mode.
  
  It should be noticed that keeping both GHES and a hardware-driven
  error mechanism won't work well, as BIOS will race with OS, while
  reading the error registers. So, if you want to not use "Firmware
  first" GHES error mechanism, you should disable GHES either at
  compilation time or by passing "ghes.disable=1" Kernel parameter
  at boot time.
  
  In doubt, say 'Y'.

EDAC_HIGHBANK_L2
  Support for error detection and correction on the
  Calxeda Highbank memory controller.

EDAC_HIGHBANK_MC
  Support for error detection and correction on the
  Calxeda Highbank memory controller.

EDAC_I10NM
  Support for error detection and correction the Intel
  10nm server Integrated Memory Controllers. If your
  system has non-volatile DIMMs you should also manually
  select CONFIG_ACPI_NFIT.

EDAC_I3000
  Support for error detection and correction on the Intel
  3000 and 3010 server chipsets.

EDAC_I3200
  Support for error detection and correction on the Intel
  3200 and 3210 server chipsets.

EDAC_I5000
  Support for error detection and correction the Intel
  Greekcreek/Blackford chipsets.

EDAC_I5100
  Support for error detection and correction the Intel
  San Clemente MCH.

EDAC_I5400
  Support for error detection and correction the Intel
  i5400 MCH chipset (Seaburg).

EDAC_I7300
  Support for error detection and correction the Intel
  Clarksboro MCH (Intel 7300 chipset).

EDAC_I7CORE
  Support for error detection and correction the Intel
  i7 Core (Nehalem) Integrated Memory Controller that exists on
  newer processors like i7 Core, i7 Core Extreme, Xeon 35xx
  and Xeon 55xx processors.

EDAC_I82443BXGX
  Support for error detection and correction on the Intel
  82443BX/GX memory controllers (440BX/GX chipsets).

EDAC_I82860
  Support for error detection and correction on the Intel
  82860 chipset.

EDAC_I82875P
  Support for error detection and correction on the Intel
  DP82785P and E7210 server chipsets.

EDAC_I82975X
  Support for error detection and correction on the Intel
  DP82975x server chipsets.

EDAC_IE31200
  Support for error detection and correction on the Intel
  E3-1200 based DRAM controllers.

EDAC_IGEN6
  Support for error detection and correction on the Intel
  client SoC Integrated Memory Controller using In-Band ECC IP.
  This In-Band ECC is first used on the Elkhart Lake SoC but
  may appear on others in the future.

EDAC_LAYERSCAPE
  Support for error detection and correction on Freescale memory
  controllers on Layerscape SoCs.

EDAC_LEGACY_SYSFS
  Enable the compatibility sysfs nodes.
  Use 'Y' if your edac utilities aren't ported to work with the newer
  structures.

EDAC_MPC85XX
  Support for error detection and correction on the Freescale
  MPC8349, MPC8560, MPC8540, MPC8548, T4240

EDAC_OCTEON_L2C
  Support for error detection and correction on the
  Cavium Octeon family of SOCs.

EDAC_OCTEON_LMC
  Support for error detection and correction on the
  Cavium Octeon family of SOCs.

EDAC_OCTEON_PC
  Support for error detection and correction on the primary caches of
  the cnMIPS cores of Cavium Octeon family SOCs.

EDAC_OCTEON_PCI
  Support for error detection and correction on the
  Cavium Octeon family of SOCs.

EDAC_PASEMI
  Support for error detection and correction on PA Semi
  PWRficient.

EDAC_PND2
  Support for error detection and correction on the Intel
  Pondicherry2 Integrated Memory Controller. This SoC IP is
  first used on the Apollo Lake platform and Denverton
  micro-server but may appear on others in the future.

EDAC_PPC4XX
  This enables support for EDAC on the ECC memory used
  with the IBM DDR2 memory controller found in various
  PowerPC 4xx embedded processors such as the 405EX[r],
  440SP, 440SPe, 460EX, 460GT and 460SX.

EDAC_QCOM
  Support for error detection and correction on the
  Qualcomm Technologies, Inc. SoCs.
  
  This driver reports Single Bit Errors (SBEs) and Double Bit Errors (DBEs).
  As of now, it supports error reporting for Last Level Cache Controller (LLCC)
  of Tag RAM and Data RAM.
  
  For debugging issues having to do with stability and overall system
  health, you should probably say 'Y' here.

EDAC_R82600
  Support for error detection and correction on the Radisys
  82600 embedded chipset.

EDAC_SBRIDGE
  Support for error detection and correction the Intel
  Sandy Bridge, Ivy Bridge and Haswell Integrated Memory Controllers.

EDAC_SIFIVE
  Support for error detection and correction on the SiFive SoCs.

EDAC_SKX
  Support for error detection and correction the Intel
  Skylake server Integrated Memory Controllers. If your
  system has non-volatile DIMMs you should also manually
  select CONFIG_ACPI_NFIT.

EDAC_SUPPORT
  No help

EDAC_SYNOPSYS
  Support for error detection and correction on the Synopsys DDR
  memory controller.

EDAC_THUNDERX
  Support for error detection and correction on the
  Cavium ThunderX memory controllers (LMC), Cache
  Coherent Processor Interconnect (CCPI) and L2 cache
  blocks (TAD, CBC, MCI).

EDAC_TI
  Support for error detection and correction on the TI SoCs.

EDAC_X38
  Support for error detection and correction on the Intel
  X38 server chipsets.

EDAC_XGENE
  Support for error detection and correction on the
  APM X-Gene family of SOCs.

EDD
  Say Y or M here if you want to enable BIOS Enhanced Disk Drive
  Services real mode BIOS calls to determine which disk
  BIOS tries boot from.  This information is then exported via sysfs.
  
  This option is experimental and is known to fail to boot on some
  obscure configurations. Most disk controller BIOS vendors do
  not yet implement this feature.

EDD_OFF
  Say Y if you want EDD disabled by default, even though it is compiled into the
  kernel. Say N if you want EDD enabled by default. EDD can be dynamically set
  using the kernel parameter 'edd={on|skipmbr|off}'.

EEEPC_LAPTOP
  This driver supports the Fn-Fx keys on Eee PC laptops.
  
  It  also gives access to some extra laptop functionalities like
  Bluetooth, backlight and allows powering on/off some other
  devices.
  
  If you have an Eee PC laptop, say Y or M here. If this driver
  doesn't work on your Eee PC, try eeepc-wmi instead.

EEEPC_WMI
  This is a driver for newer Eee PC laptops. It adds extra features
  like wireless radio and bluetooth control, leds, hotkeys, backlight...
  
  For more information, see
  <file:Documentation/ABI/testing/sysfs-platform-asus-wmi>
  
  If you have an ACPI-WMI compatible Eee PC laptop (>= 1000), say Y or M
  here.

EEPROM_93CX6
  This is a driver for the EEPROM chipsets 93c46 and 93c66.
  The driver supports both read as well as write commands.
  
  If unsure, say N.

EEPROM_93XX46
  Driver for the microwire EEPROM chipsets 93xx46x. The driver
  supports both read and write commands and also the command to
  erase the whole EEPROM.
  
  This driver can also be built as a module.  If so, the module
  will be called eeprom_93xx46.
  
  If unsure, say N.

EEPROM_AT24
  Enable this driver to get read/write support to most I2C EEPROMs
  and compatible devices like FRAMs, SRAMs, ROMs etc. After you
  configure the driver to know about each chip on your target
  board.  Use these generic chip names, instead of vendor-specific
  ones like at24c64, 24lc02 or fm24c04:
  
     24c00, 24c01, 24c02, spd (readonly 24c02), 24c04, 24c08,
     24c16, 24c32, 24c64, 24c128, 24c256, 24c512, 24c1024, 24c2048
  
  Unless you like data loss puzzles, always be sure that any chip
  you configure as a 24c32 (32 kbit) or larger is NOT really a
  24c16 (16 kbit) or smaller, and vice versa. Marking the chip
  as read-only won't help recover from this. Also, if your chip
  has any software write-protect mechanism you may want to review the
  code to make sure this driver won't turn it on by accident.
  
  If you use this with an SMBus adapter instead of an I2C adapter,
  full functionality is not available.  Only smaller devices are
  supported (24c16 and below, max 4 kByte).
  
  This driver can also be built as a module.  If so, the module
  will be called at24.

EEPROM_AT25
  Enable this driver to get read/write support to most SPI EEPROMs,
  after you configure the board init code to know about each eeprom
  on your target board.
  
  This driver can also be built as a module.  If so, the module
  will be called at25.

EEPROM_DIGSY_MTC_CFG
  This option enables access to display configuration EEPROMs
  on digsy_mtc board. You have to additionally select Microwire
  EEPROM 93XX46 driver. sysfs entries will be created for that
  EEPROM allowing to read/write the configuration data or to
  erase the whole EEPROM.
  
  If unsure, say N.

EEPROM_EE1004
  Enable this driver to get read support to SPD EEPROMs following
  the JEDEC EE1004 standard. These are typically found on DDR4
  SDRAM memory modules.
  
  This driver can also be built as a module.  If so, the module
  will be called ee1004.

EEPROM_IDT_89HPESX
  Enable this driver to get read/write access to EEPROM / CSRs
  over IDT PCIe-swtich i2c-slave interface.
  
  This driver can also be built as a module. If so, the module
  will be called idt_89hpesx.

EEPROM_LEGACY
  If you say yes here you get read-only access to the EEPROM data
  available on modern memory DIMMs and Sony Vaio laptops via I2C. Such
  EEPROMs could theoretically be available on other devices as well.
  
  This driver is deprecated and will be removed soon, please use the
  better at24 driver instead.
  
  This driver can also be built as a module.  If so, the module
  will be called eeprom.

EEPROM_MAX6875
  If you say yes here you get read-only support for the user EEPROM of
  the Maxim MAX6874/5 EEPROM-programmable, quad power-supply
  sequencer/supervisor.
  
  All other features of this chip should be accessed via i2c-dev.
  
  This driver can also be built as a module.  If so, the module
  will be called max6875.

EFI
  This enables the kernel to use EFI runtime services that are
  available (such as the EFI variable services).
  
  This option is only useful on systems that have EFI firmware.
  In addition, you should use the latest ELILO loader available
  at <http://elilo.sourceforge.net> in order to take advantage
  of EFI runtime services. However, even with this option, the
  resultant kernel should continue to boot on existing non-EFI
  platforms.

EFIVAR_FS
  efivarfs is a replacement filesystem for the old EFI
  variable support via sysfs, as it doesn't suffer from the
  same 1024-byte variable size limit.
  
  To compile this file system support as a module, choose M
  here. The module will be called efivarfs.
  
  If unsure, say N.

EFI_ARMSTUB_DTB_LOADER
  Select this config option to add support for the dtb= command
  line parameter, allowing a device tree blob to be loaded into
  memory from the EFI System Partition by the stub.
  
  If the device tree is provided by the platform or by
  the bootloader this option may not be needed.
  But, for various development reasons and to maintain existing
  functionality for bootloaders that do not have such support
  this option is necessary.

EFI_BOOTLOADER_CONTROL
  This module installs a reboot hook, such that if reboot() is
  invoked with a string argument NNN, "NNN" is copied to the
  "LoaderEntryOneShot" EFI variable, to be read by the
  bootloader. If the string matches one of the boot labels
  defined in its configuration, the bootloader will boot once
  to that label. The "LoaderEntryRebootReason" EFI variable is
  set with the reboot reason: "reboot" or "shutdown". The
  bootloader reads this reboot reason and takes particular
  action according to its policy.

EFI_CAPSULE_LOADER
  This option exposes a loader interface "/dev/efi_capsule_loader" for
  users to load EFI capsules. This driver requires working runtime
  capsule support in the firmware, which many OEMs do not provide.
  
  Most users should say N.

EFI_CAPSULE_QUIRK_QUARK_CSH
  Add support for processing Quark X1000 EFI capsules, whose header
  layout deviates from the layout mandated by the UEFI specification.

EFI_CUSTOM_SSDT_OVERLAYS
  Allow loading of an ACPI SSDT overlay from an EFI variable specified
  by a kernel command line option.
  
  See Documentation/admin-guide/acpi/ssdt-overlays.rst for more
  information.

EFI_DEV_PATH_PARSER
  No help

EFI_DISABLE_PCI_DMA
  Disable the busmaster bit in the control register on all PCI bridges
  while calling ExitBootServices() and passing control to the runtime
  kernel. System firmware may configure the IOMMU to prevent malicious
  PCI devices from being able to attack the OS via DMA. However, since
  firmware can't guarantee that the OS is IOMMU-aware, it will tear
  down IOMMU configuration when ExitBootServices() is called. This
  leaves a window between where a hostile device could still cause
  damage before Linux configures the IOMMU again.
  
  If you say Y here, the EFI stub will clear the busmaster bit on all
  PCI bridges before ExitBootServices() is called. This will prevent
  any malicious PCI devices from being able to perform DMA until the
  kernel reenables busmastering after configuring the IOMMU.
  
  This option will cause failures with some poorly behaved hardware
  and should not be enabled without testing. The kernel commandline
  options "efi=disable_early_pci_dma" or "efi=no_disable_early_pci_dma"
  may be used to override this option.

EFI_EARLYCON
  No help

EFI_EMBEDDED_FIRMWARE
  No help

EFI_ESRT
  No help

EFI_FAKE_MEMMAP
  Saying Y here will enable "efi_fake_mem" boot option.
  By specifying this parameter, you can add arbitrary attribute
  to specific memory range by updating original (firmware provided)
  EFI memmap.
  This is useful for debugging of EFI memmap related feature.
  e.g. Address Range Mirroring feature.

EFI_GENERIC_STUB
  No help

EFI_GENERIC_STUB_INITRD_CMDLINE_LOADER
  Select this config option to add support for the initrd= command
  line parameter, allowing an initrd that resides on the same volume
  as the kernel image to be loaded into memory.
  
  This method is deprecated.

EFI_MAX_FAKE_MEM
  Maximum allowable number of ranges in efi_fake_mem boot option.
  Ranges can be set up to this value using comma-separated list.
  The default value is 8.

EFI_MIXED
  Enabling this feature allows a 64-bit kernel to be booted
  on a 32-bit firmware, provided that your CPU supports 64-bit
  mode.
  
  Note that it is not possible to boot a mixed-mode enabled
  kernel via the EFI boot stub - a bootloader that supports
  the EFI handover protocol must be used.
  
  If unsure, say N.

EFI_PARAMS_FROM_FDT
  Select this config option from the architecture Kconfig if
  the EFI runtime support gets system table address, memory
  map address, and other parameters from the device tree.

EFI_PARTITION
  Say Y here if you would like to use hard disks under Linux which
  were partitioned using EFI GPT.

EFI_PCDP
  If your firmware supplies the PCDP table, and you want to
  automatically use the primary console device it describes
  as the Linux console, say Y here.
  
  If your firmware supplies the HCDP table, and you want to
  use the first serial port it describes as the Linux console,
  say Y here.  If your EFI ConOut path contains only a UART
  device, it will become the console automatically.  Otherwise,
  you must specify the "console=hcdp" kernel boot argument.
  
  Neither the PCDP nor the HCDP affects naming of serial devices,
  so a serial console may be /dev/ttyS0, /dev/ttyS1, etc, depending
  on how the driver discovers devices.
  
  You must also enable the appropriate drivers (serial, VGA, etc.)
  
  See DIG64_HCDPv20_042804.pdf available from
  <http://www.dig64.org/specifications/>

EFI_PGT_DUMP
  Enable this if you want to dump the EFI page table before
  enabling virtual mode. This can be used to debug miscellaneous
  issues with the mapping of the EFI runtime regions into that
  table.

EFI_RCI2_TABLE
  Displays the content of the Runtime Configuration Interface
  Table version 2 on Dell EMC PowerEdge systems as a binary
  attribute 'rci2' under /sys/firmware/efi/tables directory.
  
  RCI2 table contains BIOS HII in XML format and is used to populate
  BIOS setup page in Dell EMC OpenManage Server Administrator tool.
  The BIOS setup page contains BIOS tokens which can be configured.
  
  Say Y here for Dell EMC PowerEdge systems.

EFI_RUNTIME_MAP
  Export efi runtime memory maps to /sys/firmware/efi/runtime-map.
  That memory map is used for example by kexec to set up efi virtual
  mapping the 2nd kernel, but can also be used for debugging purposes.
  
  See also Documentation/ABI/testing/sysfs-firmware-efi-runtime-map.

EFI_RUNTIME_WRAPPERS
  No help

EFI_SOFT_RESERVE
  On systems that have mixed performance classes of memory EFI
  may indicate specific purpose memory with an attribute (See
  EFI_MEMORY_SP in UEFI 2.8). A memory range tagged with this
  attribute may have unique performance characteristics compared
  to the system's general purpose "System RAM" pool. On the
  expectation that such memory has application specific usage,
  and its base EFI memory type is "conventional" answer Y to
  arrange for the kernel to reserve it as a "Soft Reserved"
  resource, and set aside for direct-access (device-dax) by
  default. The memory range can later be optionally assigned to
  the page allocator by system administrator policy via the
  device-dax kmem facility. Say N to have the kernel treat this
  memory as "System RAM" by default.
  
  If unsure, say Y.

EFI_STUB
  This kernel feature allows a bzImage to be loaded directly
  by EFI firmware without the use of a bootloader.
  
  See Documentation/admin-guide/efi-stub.rst for more information.

EFI_TEST
  This driver uses the efi.<service> function pointers directly instead
  of going through the efivar API, because it is not trying to test the
  kernel subsystem, just for testing the UEFI runtime service
  interfaces which are provided by the firmware. This driver is used
  by the Firmware Test Suite (FWTS) for testing the UEFI runtime
  interfaces readiness of the firmware.
  Details for FWTS are available from:
  <https://wiki.ubuntu.com/FirmwareTestSuite>
  
  Say Y here to enable the runtime services support via /dev/efi_test.
  If unsure, say N.

EFI_VARS
  If you say Y here, you are able to get EFI (Extensible Firmware
  Interface) variable information via sysfs.  You may read,
  write, create, and destroy EFI variables through this interface.
  Note that this driver is only retained for compatibility with
  legacy users: new users should use the efivarfs filesystem
  instead.

EFI_VARS_PSTORE
  Say Y here to enable use efivars as a backend to pstore. This
  will allow writing console messages, crash dumps, or anything
  else supported by pstore to EFI variables.

EFI_VARS_PSTORE_DEFAULT_DISABLE
  Saying Y here will disable the use of efivars as a storage
  backend for pstore by default. This setting can be overridden
  using the efivars module's pstore_disable parameter.

EFS_FS
  EFS is an older file system used for non-ISO9660 CD-ROMs and hard
  disk partitions by SGI's IRIX operating system (IRIX 6.0 and newer
  uses the XFS file system for hard disk partitions however).
  
  This implementation only offers read-only access. If you don't know
  what all this is about, it's safe to say N. For more information
  about EFS see its home page at <http://aeschi.ch.eu.org/efs/>.
  
  To compile the EFS file system support as a module, choose M here: the
  module will be called efs.

EHEA
  This driver supports the IBM pSeries eHEA ethernet adapter.
  
  To compile the driver as a module, choose M here. The module
  will be called ehea.

EINT_MTK
  No help

EISA
  The Extended Industry Standard Architecture (EISA) bus was
  developed as an open alternative to the IBM MicroChannel bus.
  
  The EISA bus provided some of the features of the IBM MicroChannel
  bus while maintaining backward compatibility with cards made for
  the older ISA bus.  The EISA bus saw limited use between 1988 and
  1995 when it was made obsolete by the PCI bus.
  
  Say Y here if you are building a kernel for an EISA-based machine.
  
  Otherwise, say N.

EISA_NAMES
  By default, the kernel contains a database of all known EISA
  device names to make the information in sysfs comprehensible
  to the user. This database increases size of the kernel
  image by about 40KB, but it gets freed after the system
  boots up, so it doesn't take up kernel memory. Anyway, if
  you are building an installation floppy or kernel for an
  embedded system where kernel image size really matters, you
  can disable this feature and you'll get device ID instead of
  names.
  
  When in doubt, say Y.

EISA_PCI_EISA
  Activate this option if your system contains a PCI to EISA
  bridge. If your system have both PCI and EISA slots, you
  certainly need this option.
  
  When in doubt, say Y.

EISA_VIRTUAL_ROOT
  Activate this option if your system only have EISA bus
  (no PCI slots). The Alpha Jensen is an example of such
  a system.
  
  When in doubt, say Y.

EISA_VLB_PRIMING
  Activate this option if your system contains a Vesa Local
  Bus (VLB) card that identify itself as an EISA card (such as
  the Adaptec AHA-284x).
  
  When in doubt, say N.

EL3
  If you have a network (Ethernet) card belonging to the 3Com
  EtherLinkIII series, say Y here.
  
  If your card is not working you may need to use the DOS
  setup disk to disable Plug & Play mode, and to select the default
  media type.
  
  To compile this driver as a module, choose M here. The module
  will be called 3c509.

ELAN_CPUFREQ
  This adds the CPUFreq driver for AMD Elan SC400 and SC410
  processors.
  
  You need to specify the processor maximum speed as boot
  parameter: elanfreq=maxspeed (in kHz) or as module
  parameter "max_freq".
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  If in doubt, say N.

ELECTRA_CF
  Say Y here to support the CompactFlash controller on the
  PA Semi Electra eval board.

ELFCORE
  This option enables kernel/elfcore.o.

ELF_CORE
  Enable support for generating core dumps. Disabling saves about 4k.

EMAC_ROCKCHIP
  Support for Rockchip RK3036/RK3066/RK3188 EMAC ethernet controllers.
  This selects Rockchip SoC glue layer support for the
  emac device driver. This driver is used for RK3036/RK3066/RK3188
  EMAC ethernet controller.

EMBEDDED
  This option should be enabled if compiling the kernel for
  an embedded system so certain expert options are available
  for configuration.

EM_TIMER_STI
  This enables build of a clocksource and clockevent driver for
  the 48-bit System Timer (STI) hardware available on a SoCs
  such as EMEV2 from former NEC Electronics.

ENABLE_DEFAULT_TRACERS
  This tracer hooks to various trace points in the kernel,
  allowing the user to pick and choose which trace point they
  want to trace. It also includes the sched_switch tracer plugin.

ENA_ETHERNET
  This driver supports Elastic Network Adapter (ENA)"
  
  To compile this driver as a module, choose M here.
  The module will be called ena.

ENC28J60
  Support for the Microchip EN28J60 ethernet chip.
  
  To compile this driver as a module, choose M here. The module will be
  called enc28j60.

ENC28J60_WRITEVERIFY
  Enable the verify after the buffer write useful for debugging purpose.
  If unsure, say N.

ENCLOSURE_SERVICES
  Provides support for intelligent enclosures (bays which
  contain storage devices).  You also need either a host
  driver (SCSI/ATA) which supports enclosures
  or a SCSI enclosure device (SES) to use these services.

ENCRYPTED_KEYS
  This option provides support for create/encrypting/decrypting keys
  in the kernel.  Encrypted keys are kernel generated random numbers,
  which are encrypted/decrypted with a 'master' symmetric key. The
  'master' key can be either a trusted-key or user-key type.
  Userspace only ever sees/stores encrypted blobs.
  
  If you are unsure as to whether this is required, answer N.

ENCX24J600
  Support for the Microchip ENC424J600/624J600 ethernet chip.
  
  To compile this driver as a module, choose M here. The module will be
  called encx24j600.

ENERGY_MODEL
  Several subsystems (thermal and/or the task scheduler for example)
  can leverage information about the energy consumed by CPUs to make
  smarter decisions. This config option enables the framework from
  which subsystems can access the energy models.
  
  The exact usage of the energy model is subsystem-dependent.
  
  If in doubt, say N.

ENIC
  This enables the support for the Cisco VIC Ethernet card.

ENVELOPE_DETECTOR
  Say yes here to build support for an envelope detector using a DAC
  and a comparator.
  
  To compile this driver as a module, choose M here: the module will be
  called envelope-detector.

EP93XX_ADC
  Driver for the ADC module on the EP93XX series of SoC from Cirrus Logic.
  It's recommended to switch on CONFIG_HIGH_RES_TIMERS option, in this
  case driver will reduce its CPU usage by 90% in some use cases.
  
  To compile this driver as a module, choose M here: the module will be
  called ep93xx_adc.

EP93XX_DMA
  Enable support for the Cirrus Logic EP93xx M2P/M2M DMA controller.

EP93XX_ETH
  This is a driver for the ethernet hardware included in EP93xx CPUs.
  Say Y if you are building a kernel for EP93xx based devices.

EP93XX_WATCHDOG
  Say Y here if to include support for the watchdog timer
  embedded in the Cirrus Logic EP93xx family of devices.
  
  To compile this driver as a module, choose M here: the
  module will be called ep93xx_wdt.

EPIC100
  This driver is for the SMC EtherPower II 9432 PCI Ethernet NIC,
  which is based on the SMC83c17x (EPIC/100).
  More specific information and updates are available from
  <http://www.scyld.com/network/epic100.html>.

EPOLL
  Disabling this option will cause the kernel to be built without
  support for epoll family of system calls.

EQUALIZER
  If you have two serial connections to some other computer (this
  usually requires two modems and two telephone lines) and you use
  SLIP (the protocol for sending Internet traffic over telephone
  lines) or PPP (a better SLIP) on them, you can make them behave like
  one double speed connection using this driver.  Naturally, this has
  to be supported at the other end as well, either with a similar EQL
  Linux driver or with a Livingston Portmaster 2e.
  
  Say Y if you want this and read
  <file:Documentation/networking/eql.rst>.  You may also want to read
  section 6.2 of the NET-3-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>.
  
  To compile this driver as a module, choose M here: the module
  will be called eql.  If unsure, say N.

EROFS_FS
  EROFS (Enhanced Read-Only File System) is a lightweight
  read-only file system with modern designs (eg. page-sized
  blocks, inline xattrs/data, etc.) for scenarios which need
  high-performance read-only requirements, e.g. Android OS
  for mobile phones and LIVECDs.
  
  It also provides fixed-sized output compression support,
  which improves storage density, keeps relatively higher
  compression ratios, which is more useful to achieve high
  performance for embedded devices with limited memory.
  
  If unsure, say N.

EROFS_FS_CLUSTER_PAGE_LIMIT
  Indicates maximum # of pages of a compressed
  physical cluster.
  
  For example, if files in a image were compressed
  into 8k-unit, hard limit should not be configured
  less than 2. Otherwise, the image will be refused
  to mount on this kernel.
  

EROFS_FS_DEBUG
  Print debugging messages and enable more BUG_ONs which check
  filesystem consistency and find potential issues aggressively,
  which can be used for Android eng build, for example.
  
  For daily use, say N.

EROFS_FS_POSIX_ACL
  Posix Access Control Lists (ACLs) support permissions for users and
  groups beyond the owner/group/world scheme.
  
  To learn more about Access Control Lists, visit the POSIX ACLs for
  Linux website <http://acl.bestbits.at/>.
  
  If you don't know what Access Control Lists are, say N.

EROFS_FS_SECURITY
  Security labels provide an access control facility to support Linux
  Security Models (LSMs) accepted by AppArmor, SELinux, Smack and TOMOYO
  Linux. This option enables an extended attribute handler for file
  security labels in the erofs filesystem, so that it requires enabling
  the extended attribute support in advance.
  
  If you are not using a security module, say N.

EROFS_FS_XATTR
  Extended attributes are name:value pairs associated with inodes by
  the kernel or by users (see the attr(5) manual page, or visit
  <http://acl.bestbits.at/> for details).
  
  If unsure, say N.

EROFS_FS_ZIP
  Enable fixed-sized output compression for EROFS.
  
  If you don't want to enable compression feature, say N.

ET131X
  This driver supports Agere ET-1310 ethernet adapters.
  
  To compile this driver as a module, choose M here. The module
  will be called et131x.

ETHERNET
  This section contains all the Ethernet device drivers.

ETHOC
  Say Y here if you want to use the OpenCores 10/100 Mbps Ethernet MAC.

ETHTOOL_NETLINK
  An alternative userspace interface for ethtool based on generic
  netlink. It provides better extensibility and some new features,
  e.g. notification messages.

EUROTECH_WDT
  Enable support for the watchdog timer on the Eurotech CPU-1220 and
  CPU-1410 cards.  These are PC/104 SBCs. Spec sheets and product
  information are at <http://www.eurotech.it/>.

EVENTFD
  Enable the eventfd() system call that allows to receive both
  kernel notification (ie. KAIO) or userspace notifications.
  
  If unsure, say Y.

EVENT_TRACE_STARTUP_TEST
  This option performs a test on all trace events in the system.
  It basically just enables each event and runs some code that
  will trigger events (not necessarily the event it enables)
  This may take some time run as there are a lot of events.

EVENT_TRACE_TEST_SYSCALLS
  This option will also enable testing every syscall event.
  It only enables the event and disables it and runs various loads
  with the event enabled. This adds a bit more time for kernel boot
  up since it runs this on every system call defined.
  
  TBD - enable a way to actually call the syscalls as we test their
        events

EVENT_TRACING
  No help

EVM
  EVM protects a file's security extended attributes against
  integrity attacks.
  
  If you are unsure how to answer this question, answer N.

EVM_ADD_XATTRS
  Allow userland to provide additional xattrs for HMAC calculation.
  
  When this option is enabled, root can add additional xattrs to the
  list used by EVM by writing them into
  /sys/kernel/security/integrity/evm/evm_xattrs.

EVM_ATTR_FSUUID
  Include filesystem UUID for HMAC calculation.
  
  Default value is 'selected', which is former version 2.
  if 'not selected', it is former version 1
  
  WARNING: changing the HMAC calculation method or adding
  additional info to the calculation, requires existing EVM
  labeled file systems to be relabeled.

EVM_EXTRA_SMACK_XATTRS
  Include additional SMACK xattrs for HMAC calculation.
  
  In addition to the original security xattrs (eg. security.selinux,
  security.SMACK64, security.capability, and security.ima) included
  in the HMAC calculation, enabling this option includes newly defined
  Smack xattrs: security.SMACK64EXEC, security.SMACK64TRANSMUTE and
  security.SMACK64MMAP.
  
  WARNING: changing the HMAC calculation method or adding
  additional info to the calculation, requires existing EVM
  labeled file systems to be relabeled.

EVM_LOAD_X509
  Load an X509 certificate onto the '.evm' trusted keyring.
  
  This option enables X509 certificate loading from the kernel
  onto the '.evm' trusted keyring.  A public key can be used to
  verify EVM integrity starting from the 'init' process.

EVM_X509_PATH
  This option defines X509 certificate path.

EXFAT_DEFAULT_IOCHARSET
  Set this to the default input/output character set to use for
  converting between the encoding that is used for user visible
  filenames and the UTF-16 character encoding that the exFAT
  filesystem uses.  This can be overridden with the "iocharset" mount
  option for the exFAT filesystems.

EXFAT_FS
  This allows you to mount devices formatted with the exFAT file system.
  exFAT is typically used on SD-Cards or USB sticks.
  
  To compile this as a module, choose M here: the module will be called
  exfat.

EXPERT
  This option allows certain base kernel options and settings
  to be disabled or tweaked. This is for specialized
  environments which can tolerate a "non-standard" kernel.
  Only use this if you really know what you are doing.

EXPORTFS
  No help

EXPORTFS_BLOCK_OPS
  This option enables the export operations for a filesystem to support
  external block IO.

EXT2_FS
  Ext2 is a standard Linux file system for hard disks.
  
  To compile this file system support as a module, choose M here: the
  module will be called ext2.
  
  If unsure, say Y.

EXT2_FS_POSIX_ACL
  Posix Access Control Lists (ACLs) support permissions for users and
  groups beyond the owner/group/world scheme.
  
  If you don't know what Access Control Lists are, say N

EXT2_FS_SECURITY
  Security labels support alternative access control models
  implemented by security modules like SELinux.  This option
  enables an extended attribute handler for file security
  labels in the ext2 filesystem.
  
  If you are not using a security module that requires using
  extended attributes for file security labels, say N.

EXT2_FS_XATTR
  Extended attributes are name:value pairs associated with inodes by
  the kernel or by users (see the attr(5) manual page for details).
  
  If unsure, say N.

EXT3_FS
  This config option is here only for backward compatibility. ext3
  filesystem is now handled by the ext4 driver.

EXT3_FS_POSIX_ACL
  This config option is here only for backward compatibility. ext3
  filesystem is now handled by the ext4 driver.

EXT3_FS_SECURITY
  This config option is here only for backward compatibility. ext3
  filesystem is now handled by the ext4 driver.

EXT4_DEBUG
  Enables run-time debugging support for the ext4 filesystem.
  
  If you select Y here, then you will be able to turn on debugging
  using dynamic debug control for mb_debug() / ext_debug() msgs.

EXT4_FS
  This is the next generation of the ext3 filesystem.
  
  Unlike the change from ext2 filesystem to ext3 filesystem,
  the on-disk format of ext4 is not forwards compatible with
  ext3; it is based on extent maps and it supports 48-bit
  physical block numbers.  The ext4 filesystem also supports delayed
  allocation, persistent preallocation, high resolution time stamps,
  and a number of other features to improve performance and speed
  up fsck time.  For more information, please see the web pages at
  http://ext4.wiki.kernel.org.
  
  The ext4 filesystem supports mounting an ext3 filesystem; while there
  are some performance gains from the delayed allocation and inode
  table readahead, the best performance gains require enabling ext4
  features in the filesystem using tune2fs, or formatting a new
  filesystem as an ext4 filesystem initially. Without explicit enabling
  of ext4 features, the on disk filesystem format stays fully backward
  compatible.
  
  To compile this file system support as a module, choose M here. The
  module will be called ext4.
  
  If unsure, say N.

EXT4_FS_POSIX_ACL
  POSIX Access Control Lists (ACLs) support permissions for users and
  groups beyond the owner/group/world scheme.
  
  If you don't know what Access Control Lists are, say N

EXT4_FS_SECURITY
  Security labels support alternative access control models
  implemented by security modules like SELinux.  This option
  enables an extended attribute handler for file security
  labels in the ext4 filesystem.
  
  If you are not using a security module that requires using
  extended attributes for file security labels, say N.

EXT4_KUNIT_TESTS
  This builds the ext4 KUnit tests.
  
  KUnit tests run during boot and output the results to the debug log
  in TAP format (https://testanything.org/). Only useful for kernel devs
  running KUnit test harness and are not for inclusion into a production
  build.
  
  For more information on KUnit and unit tests in general please refer
  to the KUnit documentation in Documentation/dev-tools/kunit/.
  
  If unsure, say N.

EXT4_USE_FOR_EXT2
  Allow the ext4 file system driver code to be used for ext2
  file system mounts.  This allows users to reduce their
  compiled kernel size by using one file system driver for
  ext2, ext3, and ext4 file systems.

EXTCON
  Say Y here to enable external connector class (extcon) support.
  This allows monitoring external connectors by userspace
  via sysfs and uevent and supports external connectors with
  multiple states; i.e., an extcon that may have multiple
  cables attached. For example, an external connector of a device
  may be used to connect an HDMI cable and a AC adaptor, and to
  host USB ports. Many of 30-pin connectors including PDMI are
  also good examples.

EXTCON_ADC_JACK
  Say Y here to enable extcon device driver based on ADC values.

EXTCON_ARIZONA
  Say Y here to enable support for external accessory detection
  with Wolfson Arizona devices. These are audio CODECs with
  advanced audio accessory detection support.

EXTCON_AXP288
  Say Y here to enable support for USB peripheral detection
  and USB MUX switching by X-Power AXP288 PMIC.

EXTCON_FSA9480
  If you say yes here you get support for the Fairchild Semiconductor
  FSA9480 microUSB switch and accessory detector chip. The FSA9480 is a USB
  port accessory detector and switch. The FSA9480 is fully controlled using
  I2C and enables USB data, stereo and mono audio, video, microphone
  and UART data to use a common connector port.

EXTCON_GPIO
  Say Y here to enable GPIO based extcon support. Note that GPIO
  extcon supports single state per extcon instance.

EXTCON_INTEL_CHT_WC
  Say Y here to enable extcon support for charger detection / control
  on the Intel Cherrytrail Whiskey Cove PMIC.

EXTCON_INTEL_INT3496
  Say Y here to enable extcon support for USB OTG ports controlled by
  an Intel INT3496 ACPI device.
  
  This ACPI device is typically found on Intel Baytrail or Cherrytrail
  based tablets, or other Baytrail / Cherrytrail devices.

EXTCON_INTEL_MRFLD
  Say Y here to enable extcon support for charger detection / control
  on the Intel Merrifield Basin Cove PMIC.

EXTCON_MAX14577
  If you say yes here you get support for the MUIC device of
  Maxim MAX14577/77836. The MAX14577/77836 MUIC is a USB port accessory
  detector and switch.

EXTCON_MAX3355
  If you say yes here you get support for the USB OTG role detection by
  MAX3355. The MAX3355 chip integrates a charge pump and comparators to
  enable a system with an integrated USB OTG dual-role transceiver to
  function as an USB OTG dual-role device.

EXTCON_MAX77693
  If you say yes here you get support for the MUIC device of
  Maxim MAX77693 PMIC. The MAX77693 MUIC is a USB port accessory
  detector and switch.

EXTCON_MAX77843
  If you say yes here you get support for the MUIC device of
  Maxim MAX77843. The MAX77843 MUIC is a USB port accessory
  detector add switch.

EXTCON_MAX8997
  If you say yes here you get support for the MUIC device of
  Maxim MAX8997 PMIC. The MAX8997 MUIC is a USB port accessory
  detector and switch.

EXTCON_PALMAS
  Say Y here to enable support for USB peripheral and USB host
  detection by palmas usb.

EXTCON_PTN5150
  Say Y here to enable support for USB peripheral and USB host
  detection by NXP PTN5150 CC (Configuration Channel) logic chip.

EXTCON_QCOM_SPMI_MISC
  Say Y here to enable SPMI PMIC based USB cable detection
  support on Qualcomm PMICs such as PM8941.

EXTCON_RT8973A
  If you say yes here you get support for the MUIC device of
  Richtek RT8973A. The RT8973A is a USB port accessory detector
  and switch that is optimized to protect low voltage system
  from abnormal high input voltage (up to 28V).

EXTCON_SM5502
  If you say yes here you get support for the MUIC device of
  Silicon Mitus SM5502. The SM5502 is a USB port accessory
  detector and switch.

EXTCON_USBC_CROS_EC
  Say Y here to enable USB Type C cable detection extcon support when
  using Chrome OS EC based USB Type-C ports.

EXTCON_USBC_TUSB320
  Say Y here to enable support for USB Type C cable detection extcon
  support using a TUSB320.

EXTCON_USB_GPIO
  Say Y here to enable GPIO based USB cable detection extcon support.
  Used typically if GPIO is used for USB ID pin detection.

EXTRA_FIRMWARE
  Device drivers which require firmware can typically deal with
  having the kernel load firmware from the various supported
  /lib/firmware/ paths. This option enables you to build into the
  kernel firmware files. Built-in firmware searches are preceded
  over firmware lookups using your filesystem over the supported
  /lib/firmware paths documented on CONFIG_FW_LOADER.
  
  This may be useful for testing or if the firmware is required early on
  in boot and cannot rely on the firmware being placed in an initrd or
  initramfs.
  
  This option is a string and takes the (space-separated) names of the
  firmware files -- the same names that appear in MODULE_FIRMWARE()
  and request_firmware() in the source. These files should exist under
  the directory specified by the EXTRA_FIRMWARE_DIR option, which is
  /lib/firmware by default.
  
  For example, you might set CONFIG_EXTRA_FIRMWARE="usb8388.bin", copy
  the usb8388.bin file into /lib/firmware, and build the kernel. Then
  any request_firmware("usb8388.bin") will be satisfied internally
  inside the kernel without ever looking at your filesystem at runtime.
  
  WARNING: If you include additional firmware files into your binary
  kernel image that are not available under the terms of the GPL,
  then it may be a violation of the GPL to distribute the resulting
  image since it combines both GPL and non-GPL work. You should
  consult a lawyer of your own before distributing such an image.

EXTRA_FIRMWARE_DIR
  This option controls the directory in which the kernel build system
  looks for the firmware files listed in the EXTRA_FIRMWARE option.

EXYNOS5422_DMC
  This adds driver for Exynos5422 DMC (Dynamic Memory Controller).
  The driver provides support for Dynamic Voltage and Frequency Scaling in
  DMC and DRAM. It also supports changing timings of DRAM running with
  different frequency. The timings are calculated based on DT memory
  information.

EXYNOS_3250_COMMON_CLK
  Support for the clock controller present on the Samsung
  Exynos3250 SoCs. Choose Y here only if you build for this SoC.

EXYNOS_4_COMMON_CLK
  Support for the clock controller present on the Samsung
  Exynos4212 and Exynos4412 SoCs. Choose Y here only if you build for
  this SoC.

EXYNOS_5250_COMMON_CLK
  Support for the clock controller present on the Samsung
  Exynos5250 SoCs. Choose Y here only if you build for this SoC.

EXYNOS_5260_COMMON_CLK
  Support for the clock controller present on the Samsung
  Exynos5260 SoCs. Choose Y here only if you build for this SoC.

EXYNOS_5410_COMMON_CLK
  Support for the clock controller present on the Samsung
  Exynos5410 SoCs. Choose Y here only if you build for this SoC.

EXYNOS_5420_COMMON_CLK
  Support for the clock controller present on the Samsung
  Exynos5420 SoCs. Choose Y here only if you build for this SoC.

EXYNOS_ADC
  Core support for the ADC block found in the Samsung EXYNOS series
  of SoCs for drivers such as the touchscreen and hwmon to use to share
  this resource.
  
  To compile this driver as a module, choose M here: the module will be
  called exynos_adc.

EXYNOS_ARM64_COMMON_CLK
  No help

EXYNOS_ASV
  No help

EXYNOS_ASV_ARM
  No help

EXYNOS_AUDSS_CLK_CON
  Support for the Audio Subsystem CLKCON clock controller present
  on some Exynos SoC variants. Choose M or Y here if you want to
  use audio devices such as I2S, PCM, etc.

EXYNOS_CHIPID
  No help

EXYNOS_CLKOUT
  Support for the clock output (XCLKOUT) present on some of Exynos SoC
  variants. Usually the XCLKOUT is used to monitor the status of the
  certains clocks from SoC, but it could also be tied to other devices
  as an input clock.

EXYNOS_IOMMU
  Support for the IOMMU (System MMU) of Samsung Exynos application
  processor family. This enables H/W multimedia accelerators to see
  non-linear physical memory chunks as linear memory in their
  address space.
  
  If unsure, say N here.

EXYNOS_IOMMU_DEBUG
  Select this to see the detailed log message that shows what
  happens in the IOMMU driver.
  
  Say N unless you need kernel log message for IOMMU debugging.

EXYNOS_IRQ_COMBINER
  Say yes here to add support for the IRQ combiner devices embedded
  in Samsung Exynos chips.

EXYNOS_PMU
  No help

EXYNOS_PMU_ARM_DRIVERS
  No help

EXYNOS_PM_DOMAINS
  No help

EXYNOS_REGULATOR_COUPLER
  No help

EXYNOS_SROM
  This adds driver for Samsung Exynos SoC SROM controller.  The driver
  in basic operation mode only saves and restores SROM registers
  during suspend.  If however appropriate device tree configuration
  is provided, the driver enables support for external memory
  or external devices.
  If unsure, say Y on devices with Samsung Exynos SocS.

EXYNOS_THERMAL
  If you say yes here you get support for the TMU (Thermal Management
  Unit) driver for Samsung Exynos series of SoCs. This driver initialises
  the TMU, reports temperature and handles cooling action if defined.
  This driver uses the Exynos core thermal APIs and TMU configuration
  data from the supported SoCs.

EZCHIP_NPS_MANAGEMENT_ENET
  Simple LAN device for debug or management purposes.
  Device supports interrupts for RX and TX(completion).
  Device does not have DMA ability.

EZX_PCAP
  This enables the PCAP ASIC present on EZX Phones. This is
  needed for MMC, TouchScreen, Sound, USB, etc..

F2FS_CHECK_FS
  Enables BUG_ONs which check the filesystem consistency in runtime.
  
  If you want to improve the performance, say N.

F2FS_FAULT_INJECTION
  Test F2FS to inject faults such as ENOMEM, ENOSPC, and so on.
  
  If unsure, say N.

F2FS_FS
  F2FS is based on Log-structured File System (LFS), which supports
  versatile "flash-friendly" features. The design has been focused on
  addressing the fundamental issues in LFS, which are snowball effect
  of wandering tree and high cleaning overhead.
  
  Since flash-based storages show different characteristics according to
  the internal geometry or flash memory management schemes aka FTL, F2FS
  and tools support various parameters not only for configuring on-disk
  layout, but also for selecting allocation and cleaning algorithms.
  
  If unsure, say N.

F2FS_FS_COMPRESSION
  Enable filesystem-level compression on f2fs regular files,
  multiple back-end compression algorithms are supported.

F2FS_FS_LZ4
  Support LZ4 compress algorithm, if unsure, say Y.

F2FS_FS_LZO
  Support LZO compress algorithm, if unsure, say Y.

F2FS_FS_LZORLE
  Support LZO-RLE compress algorithm, if unsure, say Y.

F2FS_FS_POSIX_ACL
  Posix Access Control Lists (ACLs) support permissions for users and
  groups beyond the owner/group/world scheme.
  
  If you don't know what Access Control Lists are, say N

F2FS_FS_SECURITY
  Security labels provide an access control facility to support Linux
  Security Models (LSMs) accepted by AppArmor, SELinux, Smack and TOMOYO
  Linux. This option enables an extended attribute handler for file
  security labels in the f2fs filesystem, so that it requires enabling
  the extended attribute support in advance. In particular you need this
  option if you use the setcap command to assign initial process capabi-
  lities to executables (the security.* extended attributes).
  
  If you are not using a security module, say N.

F2FS_FS_XATTR
  Extended attributes are name:value pairs associated with inodes by
  the kernel or by users (see the attr(5) manual page for details).
  
  If unsure, say N.

F2FS_FS_ZSTD
  Support ZSTD compress algorithm, if unsure, say Y.

F2FS_IO_TRACE
  F2FS IO trace is based on a function trace, which gathers process
  information and block IO patterns in the filesystem level.
  
  If unsure, say N.

F2FS_STAT_FS
  /sys/kernel/debug/f2fs/ contains information about all the partitions
  mounted as f2fs. Each file shows the whole f2fs information.
  
  /sys/kernel/debug/f2fs/status includes:
    - major filesystem information managed by f2fs currently
    - average SIT information about whole segments
    - current memory footprint consumed by f2fs.

F71808E_WDT
  This is the driver for the hardware watchdog on the Fintek F71808E,
  F71862FG, F71868, F71869, F71882FG, F71889FG, F81803, F81865, and
  F81866 Super I/O controllers.
  
  You can compile this driver directly into the kernel, or use
  it as a module.  The module will be called f71808e_wdt.

FAILOVER
  The failover module provides a generic interface for paravirtual
  drivers to register a netdev and a set of ops with a failover
  instance. The ops are used as event handlers that get called to
  handle netdev register/unregister/link change/name change events
  on slave pci ethernet devices with the same mac address as the
  failover netdev. This enables paravirtual drivers to use a
  VF as an accelerated low latency datapath. It also allows live
  migration of VMs with direct attached VFs by failing over to the
  paravirtual datapath when the VF is unplugged.

FAILSLAB
  Provide fault-injection capability for kmalloc.

FAIL_FUNCTION
  Provide function-based fault-injection capability.
  This will allow you to override a specific function with a return
  with given return value. As a result, function caller will see
  an error value and have to handle it. This is useful to test the
  error handling in various subsystems.

FAIL_FUTEX
  Provide fault-injection capability for futexes.

FAIL_IO_TIMEOUT
  Provide fault-injection capability on end IO handling. This
  will make the block layer "forget" an interrupt as configured,
  thus exercising the error handling.
  
  Only works with drivers that use the generic timeout handling,
  for others it wont do anything.

FAIL_MAKE_REQUEST
  Provide fault-injection capability for disk IO.

FAIL_MMC_REQUEST
  Provide fault-injection capability for MMC IO.
  This will make the mmc core return data errors. This is
  useful to test the error handling in the mmc block device
  and to test how the mmc host driver handles retries from
  the block device.

FAIL_PAGE_ALLOC
  Provide fault-injection capability for alloc_pages().

FAIR_GROUP_SCHED
  No help

FANOTIFY
  Say Y here to enable fanotify support.  fanotify is a file access
  notification system which differs from inotify in that it sends
  an open file descriptor to the userspace listener along with
  the event.
  
  If unsure, say Y.

FANOTIFY_ACCESS_PERMISSIONS
  Say Y here is you want fanotify listeners to be able to make permissions
  decisions concerning filesystem events.  This is used by some fanotify
  listeners which need to scan files before allowing the system access to
  use those files.  This is used by some anti-malware vendors and by some
  hierarchical storage management systems.
  
  If unsure, say N.

FARADAY_FTINTC010
  No help

FARSYNC
  Support for the FarSync T-Series X.21 (and V.35/V.24) cards by
  FarSite Communications Ltd.
  
  Synchronous communication is supported on all ports at speeds up to
  8Mb/s (128K on V.24) using synchronous PPP, Cisco HDLC, raw HDLC,
  Frame Relay or X.25/LAPB.
  
  If you want the module to be automatically loaded when the interface
  is referenced then you should add "alias hdlcX farsync" to a file
  in /etc/modprobe.d/ for each interface, where X is 0, 1, 2, ..., or
  simply use "alias hdlc* farsync" to indicate all of them.
  
  To compile this driver as a module, choose M here: the
  module will be called farsync.

FAT_DEFAULT_CODEPAGE
  This option should be set to the codepage of your FAT filesystems.
  It can be overridden with the "codepage" mount option.
  See <file:Documentation/filesystems/vfat.rst> for more information.

FAT_DEFAULT_IOCHARSET
  Set this to the default input/output character set you'd
  like FAT to use. It should probably match the character set
  that most of your FAT filesystems use, and can be overridden
  with the "iocharset" mount option for FAT filesystems.
  Note that "utf8" is not recommended for FAT filesystems.
  If unsure, you shouldn't set "utf8" here - select the next option
  instead if you would like to use UTF-8 encoded file names by default.
  See <file:Documentation/filesystems/vfat.rst> for more information.
  
  Enable any character sets you need in File Systems/Native Language
  Support.

FAT_DEFAULT_UTF8
  Set this if you would like to have "utf8" mount option set
  by default when mounting FAT filesystems.
  
  Even if you say Y here can always disable UTF-8 for
  particular mount by adding "utf8=0" to mount options.
  
  Say Y if you use UTF-8 encoding for file names, N otherwise.
  
  See <file:Documentation/filesystems/vfat.rst> for more information.

FAT_FS
  If you want to use one of the FAT-based file systems (the MS-DOS and
  VFAT (Windows 95) file systems), then you must say Y or M here
  to include FAT support. You will then be able to mount partitions or
  diskettes with FAT-based file systems and transparently access the
  files on them, i.e. MSDOS files will look and behave just like all
  other Unix files.
  
  This FAT support is not a file system in itself, it only provides
  the foundation for the other file systems. You will have to say Y or
  M to at least one of "MSDOS fs support" or "VFAT fs support" in
  order to make use of it.
  
  Another way to read and write MSDOS floppies and hard drive
  partitions from within Linux (but not transparently) is with the
  mtools ("man mtools") program suite. You don't need to say Y here in
  order to do that.
  
  If you need to move large files on floppies between a DOS and a
  Linux box, say Y here, mount the floppy under Linux with an MSDOS
  file system and use GNU tar's M option. GNU tar is a program
  available for Unix and DOS ("man tar" or "info tar").
  
  The FAT support will enlarge your kernel by about 37 KB. If unsure,
  say Y.
  
  To compile this as a module, choose M here: the module will be called
  fat.  Note that if you compile the FAT support as a module, you
  cannot compile any of the FAT-based file systems into the kernel
  -- they will have to be modules as well.

FAULT_INJECTION
  Provide fault-injection framework.
  For more details, see Documentation/fault-injection/.

FAULT_INJECTION_DEBUG_FS
  Enable configuration of fault-injection capabilities via debugfs.

FAULT_INJECTION_STACKTRACE_FILTER
  Provide stacktrace filter for fault-injection capabilities

FAULT_INJECTION_USERCOPY
  Provides fault-injection capability to inject failures
  in usercopy functions (copy_from_user(), get_user(), ...).

FB
  The frame buffer device provides an abstraction for the graphics
  hardware. It represents the frame buffer of some video hardware and
  allows application software to access the graphics hardware through
  a well-defined interface, so the software doesn't need to know
  anything about the low-level (hardware register) stuff.
  
  Frame buffer devices work identically across the different
  architectures supported by Linux and make the implementation of
  application programs easier and more portable; at this point, an X
  server exists which uses the frame buffer device exclusively.
  On several non-X86 architectures, the frame buffer device is the
  only way to use the graphics hardware.
  
  The device is accessed through special device nodes, usually located
  in the /dev directory, i.e. /dev/fb*.
  
  You need an utility program called fbset to make full use of frame
  buffer devices. Please read <file:Documentation/fb/framebuffer.rst>
  and the Framebuffer-HOWTO at
  <http://www.munted.org.uk/programming/Framebuffer-HOWTO-1.3.html> for more
  information.
  
  Say Y here and to the driver for your graphics board below if you
  are compiling a kernel for a non-x86 architecture.
  
  If you are compiling for the x86 architecture, you can say Y if you
  want to play with it, but it is not essential. Please note that
  running graphical applications that directly touch the hardware
  (e.g. an accelerated X server) and that are not frame buffer
  device-aware may cause unexpected results. If unsure, say N.

FB_3DFX
  This driver supports graphics boards with the 3Dfx Banshee,
  Voodoo3 or VSA-100 (aka Voodoo4/5) chips. Say Y if you have
  such a graphics board.
  
  To compile this driver as a module, choose M here: the
  module will be called tdfxfb.

FB_3DFX_ACCEL
  This will compile the 3Dfx Banshee/Voodoo3/VSA-100 frame buffer
  device driver with acceleration functions.

FB_3DFX_I2C
  Say Y here if you want DDC/I2C support for your 3dfx Voodoo3.

FB_68328
  Say Y here if you want to support the built-in frame buffer of
  the Motorola 68328 CPU family.

FB_ACORN
  This is the frame buffer device driver for the Acorn VIDC graphics
  hardware found in Acorn RISC PCs and other ARM-based machines.  If
  unsure, say N.

FB_AMIGA
  This is the frame buffer device driver for the builtin graphics
  chipset found in Amigas.
  
  To compile this driver as a module, choose M here: the
  module will be called amifb.

FB_AMIGA_AGA
  This enables support for the Advanced Graphics Architecture (also
  known as the AGA or AA) Chip Set, found in the A1200, A4000, A4000T
  and CD32. If you intend to run Linux on any of these systems, say Y;
  otherwise say N.

FB_AMIGA_ECS
  This enables support for the Enhanced Chip Set, found in later
  A500's, later A2000's, the A600, the A3000, the A3000T and CDTV. If
  you intend to run Linux on any of these systems, say Y; otherwise
  say N.

FB_AMIGA_OCS
  This enables support for the original Agnus and Denise video chips,
  found in the Amiga 1000 and most A500's and A2000's. If you intend
  to run Linux on any of these systems, say Y; otherwise say N.

FB_APOLLO
  No help

FB_ARC
  This enables support for the Arc Monochrome LCD board. The board
  is based on the KS-108 lcd controller and is typically a matrix
  of 2*n chips. This driver was tested with a 128x64 panel. This
  driver supports it for use with x86 SBCs through a 16 bit GPIO
  interface (8 bit data, 8 bit control). If you anticipate using
  this driver, say Y or M; otherwise say N. You must specify the
  GPIO IO address to be used for setting control and data.

FB_ARK
  Driver for PCI graphics boards with ARK 2000PV chip
  and ICS 5342 RAMDAC.

FB_ARMCLCD
  This framebuffer device driver is for the ARM PrimeCell PL110
  Colour LCD controller.  ARM PrimeCells provide the building
  blocks for System on a Chip devices.
  
  If you want to compile this as a module (=code which can be
  inserted into and removed from the running kernel), say M
  here and read <file:Documentation/kbuild/modules.rst>.  The module
  will be called amba-clcd.

FB_ASILIANT
  This is the frame buffer device driver for the Asiliant 69030 chipset

FB_ATARI
  This is the frame buffer device driver for the builtin graphics
  chipset found in Ataris.

FB_ATMEL
  This enables support for the AT91 LCD Controller.

FB_ATY
  This driver supports graphics boards with the ATI Mach64 chips.
  Say Y if you have such a graphics board.
  
  To compile this driver as a module, choose M here: the
  module will be called atyfb.

FB_ATY128
  This driver supports graphics boards with the ATI Rage128 chips.
  Say Y if you have such a graphics board and read
  <file:Documentation/fb/aty128fb.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called aty128fb.

FB_ATY128_BACKLIGHT
  Say Y here if you want to control the backlight of your display.

FB_ATY_BACKLIGHT
  Say Y here if you want to control the backlight of your display.

FB_ATY_CT
  Say Y here to support use of ATI's 64-bit Rage boards (or other
  boards based on the Mach64 CT, VT, GT, and LT chipsets) as a
  framebuffer device.  The ATI product support page for these boards
  is at <http://support.ati.com/products/pc/mach64/mach64.html>.

FB_ATY_GENERIC_LCD
  Say Y if you have a laptop with an ATI Rage LT PRO, Rage Mobility,
  Rage XC, or Rage XL chipset.

FB_ATY_GX
  Say Y here to support use of the ATI Mach64 Graphics Expression
  board (or other boards based on the Mach64 GX chipset) as a
  framebuffer device.  The ATI product support page for these boards
  is at
  <http://support.ati.com/products/pc/mach64/graphics_xpression.html>.

FB_AU1100
  This is the framebuffer driver for the AMD Au1100 SOC.  It can drive
  various panels and CRTs by passing in kernel cmd line option
  au1100fb:panel=<name>.

FB_AU1200
  This is the framebuffer driver for the Au1200/Au1300 SOCs.
  It can drive various panels and CRTs by passing in kernel cmd line
  option au1200fb:panel=<name>.

FB_BACKLIGHT
  No help

FB_BIG_ENDIAN
  No help

FB_BOOT_VESA_SUPPORT
  If true, at least one selected framebuffer driver can take advantage
  of VESA video modes set at an early boot stage via the vga= parameter.

FB_BOTH_ENDIAN
  No help

FB_BROADSHEET
  This driver implements support for the E-Ink Broadsheet
  controller. The release name for this device was Epson S1D13521
  and could also have been called by other names when coupled with
  a bridge adapter.

FB_BW2
  This is the frame buffer device driver for the BWtwo frame buffer.

FB_CARILLO_RANCH
  This driver supports the LE80578 (Carillo Ranch) board

FB_CARMINE
  This is the frame buffer device driver for the Fujitsu Carmine chip.
  The driver provides two independent frame buffer devices.

FB_CARMINE_DRAM_EVAL
  Use timings which work on the eval card.

FB_CFB_COPYAREA
  Include the cfb_copyarea function for generic software area copying.
  This is used by drivers that don't provide their own (accelerated)
  version.

FB_CFB_FILLRECT
  Include the cfb_fillrect function for generic software rectangle
  filling. This is used by drivers that don't provide their own
  (accelerated) version.

FB_CFB_IMAGEBLIT
  Include the cfb_imageblit function for generic software image
  blitting. This is used by drivers that don't provide their own
  (accelerated) version.

FB_CFB_REV_PIXELS_IN_BYTE
  Allow generic frame-buffer functions to work on displays with 1, 2
  and 4 bits per pixel depths which has opposite order of pixels in
  byte order to bytes in long order.

FB_CG14
  This is the frame buffer device driver for the CGfourteen frame
  buffer on Desktop SPARCsystems with the SX graphics option.

FB_CG3
  This is the frame buffer device driver for the CGthree frame buffer.

FB_CG6
  This is the frame buffer device driver for the CGsix (GX, TurboGX)
  frame buffer.

FB_CIRRUS
  This enables support for Cirrus Logic GD542x/543x based boards on
  Amiga: SD64, Piccolo, Picasso II/II+, Picasso IV, or EGS Spectrum.
  
  If you have a PCI-based system, this enables support for these
  chips: GD-543x, GD-544x, GD-5480.
  
  Please read the file <file:Documentation/fb/cirrusfb.rst>.
  
  Say N unless you have such a graphics board or plan to get one
  before you next recompile the kernel.

FB_CLPS711X
  Say Y to enable the Framebuffer driver for the Cirrus Logic
  CLPS711X CPUs.

FB_CMDLINE
  No help

FB_COBALT
  No help

FB_CONTROL
  This driver supports a frame buffer for the graphics adapter in the
  Power Macintosh 7300 and others.

FB_CT65550
  This is the frame buffer device driver for the Chips & Technologies
  65550 graphics chip in PowerBooks.

FB_CYBER2000
  This enables support for the Integraphics CyberPro 20x0 and 5000
  VGA chips used in the Rebel.com Netwinder and other machines.
  Say Y if you have a NetWinder or a graphics card containing this
  device, otherwise say N.

FB_CYBER2000_DDC
  Say Y here if you want DDC support for your CyberPro graphics
  card. This is only I2C bus support, driver does not use EDID.

FB_CYBER2000_I2C
  Enable support for the I2C video decoder interface on the
  Integraphics CyberPro 20x0 and 5000 VGA chips.  This is used
  on the Netwinder machines for the SAA7111 video capture.

FB_DA8XX
  This is the frame buffer device driver for the TI LCD controller
  found on DA8xx/OMAP-L1xx/AM335x SoCs.
  If unsure, say N.

FB_DDC
  No help

FB_DEFERRED_IO
  No help

FB_EFI
  This is the EFI frame buffer device driver. If the firmware on
  your platform is EFI 1.10 or UEFI 2.0, select Y to add support for
  using the EFI framebuffer as your console.

FB_EP93XX
  Framebuffer driver for the Cirrus Logic EP93XX series of processors.
  This driver is also available as a module. The module will be called
  ep93xx-fb.

FB_FFB
  This is the frame buffer device driver for the Creator, Creator3D,
  and Elite3D graphics boards.

FB_FM2
  This is the frame buffer device driver for the Amiga FrameMaster
  card from BSC (exhibited 1992 but not shipped as a CBM product).

FB_FOREIGN_ENDIAN
  This menu will let you enable support for the framebuffers with
  non-native endianness (e.g. Little-Endian framebuffer on a
  Big-Endian machine). Most probably you don't have such hardware,
  so it's safe to say "n" here.

FB_FSL_DIU
  Framebuffer driver for the Freescale SoC DIU

FB_G364
  The G364 driver is the framebuffer used in MIPS Magnum 4000 and
  Olivetti M700-10 systems.

FB_GBE
  This is the frame buffer device driver for SGI Graphics Backend.
  This chip is used in SGI O2 and Visual Workstation 320/540.

FB_GBE_MEM
  This is the amount of memory reserved for the framebuffer,
  which can be any value between 1MB and 8MB.

FB_GEODE
  Say 'Y' here to allow you to select framebuffer drivers for
  the AMD Geode family of processors.

FB_GEODE_GX
  Framebuffer driver for the display controller integrated into the
  AMD Geode GX processors.
  
  To compile this driver as a module, choose M here: the module will be
  called gxfb.
  
  If unsure, say N.

FB_GEODE_GX1
  Framebuffer driver for the display controller integrated into the
  AMD Geode GX1 processor.
  
  To compile this driver as a module, choose M here: the module will be
  called gx1fb.
  
  If unsure, say N.

FB_GEODE_LX
  Framebuffer driver for the display controller integrated into the
  AMD Geode LX processors.
  
  To compile this driver as a module, choose M here: the module will
  be called lxfb.
  
  If unsure, say N.

FB_GOLDFISH
  Framebuffer driver for Goldfish Virtual Platform

FB_GRVGA
  This enables support for the SVGACTRL framebuffer in the GRLIB IP library from Aeroflex Gaisler.

FB_HECUBA
  No help

FB_HGA
  Say Y here if you have a Hercules mono graphics card.
  
  To compile this driver as a module, choose M here: the
  module will be called hgafb.
  
  As this card technology is at least 25 years old,
  most people will answer N here.

FB_HIT
  This is the frame buffer device driver for the Hitachi HD64461 LCD
  frame buffer card.

FB_HP300
  No help

FB_HYPERV
  This framebuffer driver supports Microsoft Hyper-V Synthetic Video.

FB_I740
  This driver supports graphics cards based on Intel740 chip.

FB_I810
  This driver supports the on-board graphics built in to the Intel 810
  and 815 chipsets.  Say Y if you have and plan to use such a board.
  
  To compile this driver as a module, choose M here: the
  module will be called i810fb.
  
  For more information, please read
  <file:Documentation/fb/intel810.rst>

FB_I810_GTF
  If you say Y, then the VESA standard, Generalized Timing Formula
  or GTF, will be used to calculate the required video timing values
  per video mode.  Since the GTF allows nondiscrete timings
  (nondiscrete being a range of values as opposed to discrete being a
  set of values), you'll be able to use any combination of horizontal
  and vertical resolutions, and vertical refresh rates without having
  to specify your own timing parameters.  This is especially useful
  to maximize the performance of an aging display, or if you just
  have a display with nonstandard dimensions. A VESA compliant
  monitor is recommended, but can still work with non-compliant ones.
  If you need or want this, then select this option. The timings may
  not be compliant with Intel's recommended values. Use at your own
  risk.
  
  If you say N, the driver will revert to discrete video timings
  using a set recommended by Intel in their documentation.
  
  If unsure, say N.

FB_I810_I2C
  Add DDC/I2C support for i810fb.  This will allow the driver to get
  display information, especially for monitors with fickle timings.
  
  If unsure, say Y.

FB_IBM_GXT4500
  Say Y here to enable support for the IBM GXT4000P/6000P and
  GXT4500P/6500P display adaptor based on Raster Engine RC1000,
  found on some IBM System P (pSeries) machines. This driver
  doesn't use Geometry Engine GT1000. This driver also supports
  AGP Fire GL2/3/4 cards on x86.

FB_IMSTT
  The IMS Twin Turbo is a PCI-based frame buffer card bundled with
  many Macintosh and compatible computers.

FB_IMX
  No help

FB_INTEL
  This driver supports the on-board graphics built in to the Intel
  830M/845G/852GM/855GM/865G/915G/915GM/945G/945GM/965G/965GM chipsets.
  Say Y if you have and plan to use such a board.
  
  To make FB_INTEL=Y work you need to say AGP_INTEL=y too.
  
  To compile this driver as a module, choose M here: the
  module will be called intelfb.
  
  For more information, please read <file:Documentation/fb/intelfb.rst>

FB_INTEL_DEBUG
  Say Y here if you want the Intel driver to output all sorts
  of debugging information to provide to the maintainer when
  something goes wrong.

FB_INTEL_I2C
  Say Y here if you want DDC/I2C support for your on-board Intel graphics.

FB_KYRO
  Say Y here if you have a STG4000 / Kyro / PowerVR 3 based
  graphics board.
  
  To compile this driver as a module, choose M here: the
  module will be called kyrofb.

FB_LE80578
  This driver supports the LE80578 (Vermilion Range) chipset

FB_LEO
  This is the frame buffer device driver for the SBUS-based Sun ZX
  (leo) frame buffer cards.

FB_LITTLE_ENDIAN
  No help

FB_LOGO_EXTRA
  No help

FB_MAC
  No help

FB_MACMODES
  No help

FB_MATROX
  Say Y here if you have a Matrox Millennium, Matrox Millennium II,
  Matrox Mystique, Matrox Mystique 220, Matrox Productiva G100, Matrox
  Mystique G200, Matrox Millennium G200, Matrox Marvel G200 video,
  Matrox G400, G450 or G550 card in your box.
  
  To compile this driver as a module, choose M here: the
  module will be called matroxfb.
  
  You can pass several parameters to the driver at boot time or at
  module load time. The parameters look like "video=matroxfb:XXX", and
  are described in <file:Documentation/fb/matroxfb.rst>.

FB_MATROX_G
  Say Y here if you have a Matrox G100, G200, G400, G450 or G550 based
  video card. If you select "Advanced lowlevel driver options", you
  should check 8 bpp packed pixel, 16 bpp packed pixel, 24 bpp packed
  pixel and 32 bpp packed pixel. You can also use font widths
  different from 8.
  
  If you need support for G400 secondary head, you must say Y to
  "Matrox I2C support" and "G400 second head support" right below.
  G450/G550 secondary head and digital output are supported without
  additional modules.
  
  The driver starts in monitor mode. You must use the matroxset tool
  (available at <ftp://platan.vc.cvut.cz/pub/linux/matrox-latest/>) to
  swap primary and secondary head outputs, or to change output mode.
  Secondary head driver always start in 640x480 resolution and you
  must use fbset to change it.
  
  Do not forget that second head supports only 16 and 32 bpp
  packed pixels, so it is a good idea to compile them into the kernel
  too. You can use only some font widths, as the driver uses generic
  painting procedures (the secondary head does not use acceleration
  engine).
  
  G450/G550 hardware can display TV picture only from secondary CRTC,
  and it performs no scaling, so picture must have 525 or 625 lines.

FB_MATROX_I2C
  This drivers creates I2C buses which are needed for accessing the
  DDC (I2C) bus present on all Matroxes, an I2C bus which
  interconnects Matrox optional devices, like MGA-TVO on G200 and
  G400, and the secondary head DDC bus, present on G400 only.
  
  You can say Y or M here if you want to experiment with monitor
  detection code. You must say Y or M here if you want to use either
  second head of G400 or MGA-TVO on G200 or G400.
  
  If you compile it as module, it will create a module named
  i2c-matroxfb.

FB_MATROX_MAVEN
  WARNING !!! This support does not work with G450 !!!
  
  Say Y or M here if you want to use a secondary head (meaning two
  monitors in parallel) on G400 or MGA-TVO add-on on G200. Secondary
  head is not compatible with accelerated XFree 3.3.x SVGA servers -
  secondary head output is blanked while you are in X. With XFree
  3.9.17 preview you can use both heads if you use SVGA over fbdev or
  the fbdev driver on first head and the fbdev driver on second head.
  
  If you compile it as module, two modules are created,
  matroxfb_crtc2 and matroxfb_maven. Matroxfb_maven is needed for
  both G200 and G400, matroxfb_crtc2 is needed only by G400. You must
  also load i2c-matroxfb to get it to run.
  
  The driver starts in monitor mode and you must use the matroxset
  tool (available at
  <ftp://platan.vc.cvut.cz/pub/linux/matrox-latest/>) to switch it to
  PAL or NTSC or to swap primary and secondary head outputs.
  Secondary head driver also always start in 640x480 resolution, you
  must use fbset to change it.
  
  Also do not forget that second head supports only 16 and 32 bpp
  packed pixels, so it is a good idea to compile them into the kernel
  too.  You can use only some font widths, as the driver uses generic
  painting procedures (the secondary head does not use acceleration
  engine).

FB_MATROX_MILLENIUM
  Say Y here if you have a Matrox Millennium or Matrox Millennium II
  video card. If you select "Advanced lowlevel driver options" below,
  you should check 4 bpp packed pixel, 8 bpp packed pixel, 16 bpp
  packed pixel, 24 bpp packed pixel and 32 bpp packed pixel. You can
  also use font widths different from 8.

FB_MATROX_MYSTIQUE
  Say Y here if you have a Matrox Mystique or Matrox Mystique 220
  video card. If you select "Advanced lowlevel driver options" below,
  you should check 8 bpp packed pixel, 16 bpp packed pixel, 24 bpp
  packed pixel and 32 bpp packed pixel. You can also use font widths
  different from 8.

FB_MAXINE
  Support for the onboard framebuffer (1024x768x8) in the Personal
  DECstation series (Personal DECstation 5000/20, /25, /33, /50,
  Codename "Maxine").

FB_MB862XX
  Frame buffer driver for Fujitsu Carmine/Coral-P(A)/Lime controllers.

FB_MB862XX_I2C
  Selecting this option adds Coral-P(A)/Lime GDC I2C bus adapter
  driver to support accessing I2C devices on controller's I2C bus.
  These are usually some video decoder chips.

FB_MB862XX_LIME
  Framebuffer support for Fujitsu Lime GDC on host CPU bus.

FB_MB862XX_PCI_GDC
  This enables framebuffer support for Fujitsu Carmine/Coral-P(A)
  PCI graphics controller devices.

FB_METRONOME
  This driver implements support for the E-Ink Metronome
  controller. The pre-release name for this device was 8track
  and could also have been called by some vendors as PVI-nnnn.

FB_MODE_HELPERS
  This enables functions for handling video modes using the
  Generalized Timing Formula and the EDID parser. A few drivers rely
  on this feature such as the radeonfb, rivafb, and the i810fb. If
  your driver does not take advantage of this feature, choosing Y will
  just increase the kernel size by about 5K.

FB_MX3
  This is a framebuffer device for the i.MX31 LCD Controller. So
  far only synchronous displays are supported. If you plan to use
  an LCD display with your i.MX31 system, say Y here.

FB_N411
  This enables support for the Apollo display controller in its
  Hecuba form using the n411 devkit.

FB_NEOMAGIC
  This driver supports notebooks with NeoMagic PCI chips.
  Say Y if you have such a graphics card.
  
  To compile this driver as a module, choose M here: the
  module will be called neofb.

FB_NOTIFY
  No help

FB_NVIDIA
  This driver supports graphics boards with the nVidia chips, TNT
  and newer. For very old chipsets, such as the RIVA128, then use
  the rivafb.
  Say Y if you have such a graphics board.
  
  To compile this driver as a module, choose M here: the
  module will be called nvidiafb.

FB_NVIDIA_BACKLIGHT
  Say Y here if you want to control the backlight of your display.

FB_NVIDIA_DEBUG
  Say Y here if you want the nVidia driver to output all sorts
  of debugging information to provide to the maintainer when
  something goes wrong.

FB_NVIDIA_I2C
  This enables I2C support for nVidia Chipsets.  This is used
  only for getting EDID information from the attached display
  allowing for robust video mode handling and switching.
  
  Because fbdev-2.6 requires that drivers must be able to
  independently validate video mode parameters, you should say Y
  here.

FB_OF
  Say Y if you want support with Open Firmware for your graphics
  board.

FB_OLPC_DCON
  In order to support very low power operation, the XO laptop uses a
  secondary Display CONtroller, or DCON.  This secondary controller
  is present in the video pipeline between the primary display
  controller (integrate into the processor or chipset) and the LCD
  panel.  It allows the main processor/display controller to be
  completely powered off while still retaining an image on the display.
  This controller is only available on OLPC platforms.  Unless you have
  one of these platforms, you will want to say 'N'.
  

FB_OMAP
  Frame buffer driver for OMAP based boards.

FB_OMAP2
  Frame buffer driver for OMAP2+ based boards.

FB_OMAP2_CONNECTOR_ANALOG_TV
  Driver for a generic analog TV connector.

FB_OMAP2_CONNECTOR_DVI
  Driver for a generic DVI connector.

FB_OMAP2_CONNECTOR_HDMI
  Driver for a generic HDMI connector.

FB_OMAP2_DEBUG_SUPPORT
  Support for debug output. You have to enable the actual printing
  with 'debug' module parameter.

FB_OMAP2_DSS
  No help

FB_OMAP2_DSS_COLLECT_IRQ_STATS
  Collect DSS IRQ statistics, printable via debugfs.
  
  The statistics can be found from
  <debugfs>/omapdss/dispc_irq for DISPC interrupts, and
  <debugfs>/omapdss/dsi_irq for DSI interrupts.

FB_OMAP2_DSS_DEBUG
  This enables printing of debug messages. Alternatively, debug messages
  can also be enabled by setting CONFIG_DYNAMIC_DEBUG and then setting
  appropriate flags in <debugfs>/dynamic_debug/control.

FB_OMAP2_DSS_DEBUGFS
  This enables debugfs for OMAPDSS at <debugfs>/omapdss. This enables
  querying about clock configuration and register configuration of dss,
  dispc, dsi, hdmi and rfbi.

FB_OMAP2_DSS_DPI
  DPI Interface. This is the Parallel Display Interface.

FB_OMAP2_DSS_DSI
  MIPI DSI (Display Serial Interface) support.
  
  DSI is a high speed half-duplex serial interface between the host
  processor and a peripheral, such as a display or a framebuffer chip.
  
  See https://www.mipi.org/ for DSI specifications.

FB_OMAP2_DSS_HDMI_COMMON
  No help

FB_OMAP2_DSS_INIT
  No help

FB_OMAP2_DSS_MIN_FCK_PER_PCK
  This can be used to adjust the minimum FCK/PCK ratio.
  
  With this you can make sure that DISPC FCK is at least
  n x PCK. Video plane scaling requires higher FCK than
  normally.
  
  If this is set to 0, there's no extra constraint on the
  DISPC FCK. However, the FCK will at minimum be
  2xPCK (if active matrix) or 3xPCK (if passive matrix).
  
  Max FCK is 173MHz, so this doesn't work if your PCK
  is very high.

FB_OMAP2_DSS_SDI
  SDI (Serial Display Interface) support.
  
  SDI is a high speed one-way display serial bus between the host
  processor and a display.

FB_OMAP2_DSS_SLEEP_AFTER_VENC_RESET
  There is a 20ms sleep after VENC reset which seemed to fix the
  reset. The reason for the bug is unclear, and it's also unclear
  on what platforms this happens.
  
  This option enables the sleep, and is enabled by default. You can
  disable the sleep if it doesn't cause problems on your platform.

FB_OMAP2_DSS_VENC
  OMAP Video Encoder support for S-Video and composite TV-out.

FB_OMAP2_ENCODER_OPA362
  Driver for OPA362 external analog TV amplifier controlled
  through a GPIO.

FB_OMAP2_ENCODER_TFP410
  Driver for TFP410 DPI to DVI encoder.

FB_OMAP2_ENCODER_TPD12S015
  Driver for TPD12S015, which offers HDMI ESD protection and level
  shifting.

FB_OMAP2_NUM_FBS
  Select the number of framebuffers created. OMAP2/3 has 3 overlays
  so normally this would be 3.

FB_OMAP2_PANEL_DPI
  Driver for generic DPI panels.

FB_OMAP2_PANEL_DSI_CM
  Driver for generic DSI command mode panels.

FB_OMAP2_PANEL_LGPHILIPS_LB035Q02
  LCD Panel used on the Gumstix Overo Palo35

FB_OMAP2_PANEL_NEC_NL8048HL11
  This NEC NL8048HL11 panel is TFT LCD used in the
  Zoom2/3/3630 sdp boards.

FB_OMAP2_PANEL_SHARP_LS037V7DW01
  LCD Panel used in TI's SDP3430 and EVM boards

FB_OMAP2_PANEL_SONY_ACX565AKM
  This is the LCD panel used on Nokia N900

FB_OMAP2_PANEL_TPO_TD028TTEC1
  LCD panel used in Openmoko.

FB_OMAP2_PANEL_TPO_TD043MTEA1
  LCD Panel used in OMAP3 Pandora

FB_OMAP4_DSS_HDMI
  HDMI support for OMAP4 based SoCs.

FB_OMAP5_DSS_HDMI
  HDMI Interface for OMAP5 and similar cores. This adds the High
  Definition Multimedia Interface. See https://www.hdmi.org/ for HDMI
  specification.

FB_OMAP_DMA_TUNE
  On systems in which video memory is in system memory
  (SDRAM) this will speed up graphics DMA operations.
  If you have such a system and want to use rotation
  answer yes. Answer no if you have a dedicated video
  memory, or don't use any of the accelerated features.

FB_OMAP_LCDC_EXTERNAL
  Say Y here, if you want to have support for boards with an
  external LCD controller connected to the SoSSI/RFBI interface.

FB_OMAP_LCDC_HWA742
  Say Y here if you want to have support for the external
  Epson HWA742 LCD controller.

FB_OMAP_LCD_H3
  Say Y here if you want to have support for the LCD on the
  H3 board.

FB_OMAP_LCD_MIPID
  Say Y here if you want to have support for LCDs compatible with
  the Mobile Industry Processor Interface DBI-C/DCS
  specification. (Supported LCDs: Philips LPH8923, Sharp LS041Y3)

FB_OMAP_MANUAL_UPDATE
  Say Y here, if your user-space applications are capable of
  notifying the frame buffer driver when a change has occurred in
  the frame buffer content and thus a reload of the image data to
  the external frame buffer is required. If unsure, say N.

FB_OPENCORES
  This enables support for the OpenCores VGA/LCD core.
  
  The OpenCores VGA/LCD core is typically used together with
  softcore CPUs (e.g. OpenRISC or Microblaze) or hard processor
  systems (e.g. Altera socfpga or Xilinx Zynq) on FPGAs.
  
  The source code and specification for the core is available at
  <https://opencores.org/project,vga_lcd>

FB_P9100
  This is the frame buffer device driver for the P9100 card
  supported on Sparcbook 3 machines.

FB_PLATINUM
  This driver supports a frame buffer for the "platinum" graphics
  adapter in some Power Macintoshes.

FB_PM2
  This is the frame buffer device driver for cards based on
  the 3D Labs Permedia, Permedia 2 and Permedia 2V chips.
  The driver was tested on the following cards:
        Diamond FireGL 1000 PRO AGP
        ELSA Gloria Synergy PCI
        Appian Jeronimo PRO (both heads) PCI
        3DLabs Oxygen ACX aka EONtronics Picasso P2 PCI
        Techsource Raptor GFX-8P (aka Sun PGX-32) on SPARC
        ASK Graphic Blaster Exxtreme AGP
  
  To compile this driver as a module, choose M here: the
  module will be called pm2fb.

FB_PM2_FIFO_DISCONNECT
  Support the Permedia2 FIFO disconnect feature.

FB_PM3
  This is the frame buffer device driver for the 3DLabs Permedia3
  chipset, used in Formac ProFormance III, 3DLabs Oxygen VX1 &
  similar boards, 3DLabs Permedia3 Create!, Appian Jeronimo 2000
  and maybe other boards.

FB_PMAGB_B
  Support for the PMAGB-B TURBOchannel framebuffer card used mainly
  in the MIPS-based DECstation series. The card is currently only
  supported in 1280x1024x8 mode.

FB_PMAG_AA
  Support for the PMAG-AA TURBOchannel framebuffer card (1280x1024x1)
  used mainly in the MIPS-based DECstation series.

FB_PMAG_BA
  Support for the PMAG-BA TURBOchannel framebuffer card (1024x864x8)
  used mainly in the MIPS-based DECstation series.

FB_PRE_INIT_FB
  Select this option if display contents should be inherited as set by
  the bootloader.

FB_PROVIDE_GET_FB_UNMAPPED_AREA
  Allow generic frame-buffer to provide get_fb_unmapped_area
  function.

FB_PS3
  Include support for the virtual frame buffer in the PS3 platform.

FB_PS3_DEFAULT_SIZE_M
  This is the default size (in MiB) of the virtual frame buffer in
  the PS3.
  The default value can be overridden on the kernel command line
  using the "ps3fb" option (e.g. "ps3fb=9M");

FB_PVR2
  Say Y here if you have a PowerVR 2 card in your box.  If you plan to
  run linux on your Dreamcast, you will have to say Y here.
  This driver may or may not work on other PowerVR 2 cards, but is
  totally untested.  Use at your own risk.  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called pvr2fb.
  
  You can pass several parameters to the driver at boot time or at
  module load time.  The parameters look like "video=pvr2:XXX", where
  the meaning of XXX can be found at the end of the main source file
  (<file:drivers/video/pvr2fb.c>). Please see the file
  <file:Documentation/fb/pvr2fb.rst>.

FB_PXA
  Frame buffer driver for the built-in LCD controller in the Intel
  PXA2x0 processor.
  
  This driver is also available as a module ( = code which can be
  inserted and removed from the running kernel whenever you want). The
  module will be called pxafb. If you want to compile it as a module,
  say M here and read <file:Documentation/kbuild/modules.rst>.
  
  If unsure, say N.

FB_PXA168
  Frame buffer driver for the built-in LCD controller in the Marvell
  MMP processor.

FB_PXA_OVERLAY
  No help

FB_PXA_PARAMETERS
  Enable the use of kernel command line or module parameters
  to configure the physical properties of the LCD panel when
  using the PXA LCD driver.
  
  This option allows you to override the panel parameters
  supplied by the platform in order to support multiple
  different models of flatpanel. If you will only be using a
  single model of flatpanel then you can safely leave this
  option disabled.
  
  <file:Documentation/fb/pxafb.rst> describes the available parameters.

FB_PXA_SMARTPANEL
  No help

FB_Q40
  No help

FB_RADEON
  Choose this option if you want to use an ATI Radeon graphics card as
  a framebuffer device.  There are both PCI and AGP versions.  You
  don't need to choose this to run the Radeon in plain VGA mode.
  
  There is a product page at
  https://products.amd.com/en-us/GraphicCardResult.aspx

FB_RADEON_BACKLIGHT
  Say Y here if you want to control the backlight of your display.

FB_RADEON_DEBUG
  Say Y here if you want the Radeon driver to output all sorts
  of debugging information to provide to the maintainer when
  something goes wrong.

FB_RADEON_I2C
  Say Y here if you want DDC/I2C support for your Radeon board.

FB_RIVA
  This driver supports graphics boards with the nVidia Riva/Geforce
  chips.
  Say Y if you have such a graphics board.
  
  To compile this driver as a module, choose M here: the
  module will be called rivafb.

FB_RIVA_BACKLIGHT
  Say Y here if you want to control the backlight of your display.

FB_RIVA_DEBUG
  Say Y here if you want the Riva driver to output all sorts
  of debugging information to provide to the maintainer when
  something goes wrong.

FB_RIVA_I2C
  This enables I2C support for nVidia Chipsets.  This is used
  only for getting EDID information from the attached display
  allowing for robust video mode handling and switching.
  
  Because fbdev-2.6 requires that drivers must be able to
  independently validate video mode parameters, you should say Y
  here.

FB_S1D13XXX
  Support for S1D13XXX framebuffer device family (currently only
  working with S1D13806). Product specs at
  <https://vdc.epson.com/>

FB_S3
  Driver for graphics boards with S3 Trio / S3 Virge chip.

FB_S3C
  Frame buffer driver for the built-in FB controller in the Samsung
  SoC line from the S3C2443 onwards, including the S3C2416, S3C2450,
  and the S3C64XX series such as the S3C6400 and S3C6410.
  
  These chips all have the same basic framebuffer design with the
  actual capabilities depending on the chip. For instance the S3C6400
  and S3C6410 support 4 hardware windows whereas the S3C24XX series
  currently only have two.
  
  Currently the support is only for the S3C6400 and S3C6410 SoCs.

FB_S3C2410
  Frame buffer driver for the built-in LCD controller in the Samsung
  S3C2410 processor.
  
  This driver is also available as a module ( = code which can be
  inserted and removed from the running kernel whenever you want). The
  module will be called s3c2410fb. If you want to compile it as a module,
  say M here and read <file:Documentation/kbuild/modules.rst>.
  
  If unsure, say N.

FB_S3C2410_DEBUG
  Turn on debugging messages. Note that you can set/unset at run time
  through sysfs

FB_S3C_DEBUG_REGWRITE
  Show all register writes via pr_debug()

FB_S3_DDC
  Say Y here if you want DDC support for your S3 graphics card.

FB_SA1100
  This is a framebuffer device for the SA-1100 LCD Controller.
  See <http://www.linux-fbdev.org/> for information on framebuffer
  devices.
  
  If you plan to use the LCD display with your SA-1100 system, say
  Y here.

FB_SAVAGE
  This driver supports notebooks and computers with S3 Savage PCI/AGP
  chips.
  
  Say Y if you have such a graphics card.
  
  To compile this driver as a module, choose M here; the module
  will be called savagefb.

FB_SAVAGE_ACCEL
  This option will compile in console acceleration support. If
  the resulting framebuffer console has bothersome glitches, then
  choose N here.

FB_SAVAGE_I2C
  This enables I2C support for S3 Savage Chipsets.  This is used
  only for getting EDID information from the attached display
  allowing for robust video mode handling and switching.
  
  Because fbdev-2.6 requires that drivers must be able to
  independently validate video mode parameters, you should say Y
  here.

FB_SBUS
  Say Y if you want support for SBUS or UPA based frame buffer device.

FB_SH7760
  Support for the SH7760/SH7763/SH7720/SH7721 integrated
  (D)STN/TFT LCD Controller.
  Supports display resolutions up to 1024x1024 pixel, grayscale and
  color operation, with depths ranging from 1 bpp to 8 bpp monochrome
  and 8, 15 or 16 bpp color; 90 degrees clockwise display rotation for
  panels <= 320 pixel horizontal resolution.

FB_SH_MOBILE_LCDC
  Frame buffer driver for the on-chip SH-Mobile LCD controller.

FB_SIMPLE
  Say Y if you want support for a simple frame-buffer.
  
  This driver assumes that the display hardware has been initialized
  before the kernel boots, and the kernel will simply render to the
  pre-allocated frame buffer surface.
  
  Configuration re: surface address, size, and format must be provided
  through device tree, or plain old platform data.

FB_SIS
  This is the frame buffer device driver for the SiS 300, 315, 330
  and 340 series as well as XGI V3XT, V5, V8, Z7 graphics chipsets.
  Specs available at <https://www.sis.com> and <http://www.xgitech.com>.
  
  To compile this driver as a module, choose M here; the module
  will be called sisfb.

FB_SIS_300
  Say Y here to support use of the SiS 300/305, 540, 630 and 730.

FB_SIS_315
  Say Y here to support use of the SiS 315, 330 and 340 series
  (315/H/PRO, 55x, 650, 651, 740, 330, 661, 741, 760, 761) as well
  as XGI V3XT, V5, V8 and Z7.

FB_SM501
  Frame buffer driver for the CRT and LCD controllers in the Silicon
  Motion SM501.
  
  This driver is also available as a module ( = code which can be
  inserted and removed from the running kernel whenever you want). The
  module will be called sm501fb. If you want to compile it as a module,
  say M here and read <file:Documentation/kbuild/modules.rst>.
  
  If unsure, say N.

FB_SM712
  Frame buffer driver for the Silicon Motion SM710, SM712, SM721
  and SM722 chips.
  
  This driver is also available as a module. The module will be
  called sm712fb. If you want to compile it as a module, say M
  here and read <file:Documentation/kbuild/modules.rst>.

FB_SM750
  Frame buffer driver for the Silicon Motion SM750 chip
  with 2D accelearion and dual head support.
  
  This driver is also available as a module. The module will be
  called sm750fb. If you want to compile it as a module, say M
  here and read <file:Documentation/kbuild/modules.rst>.

FB_SMSCUFX
  This is a kernel framebuffer driver for SMSC UFX USB devices.
  Supports fbdev clients like xf86-video-fbdev, kdrive, fbi, and
  mplayer -vo fbdev. Supports both UFX6000 (USB 2.0) and UFX7000
  (USB 3.0) devices.
  To compile as a module, choose M here: the module name is smscufx.

FB_SSD1307
  This driver implements support for the Solomon SSD1307
  OLED controller over I2C.

FB_STI
  STI refers to the HP "Standard Text Interface" which is a set of
  BIOS routines contained in a ROM chip in HP PA-RISC based machines.
  Enabling this option will implement the linux framebuffer device
  using calls to the STI BIOS routines for initialisation.
  
  If you enable this option, you will get a planar framebuffer device
  /dev/fb which will work on the most common HP graphic cards of the
  NGLE family, including the artist chips (in the 7xx and Bxxx series),
  HCRX, HCRX24, CRX, CRX24 and VisEG series.
  
  It is safe to enable this option, so you should probably say "Y".

FB_SVGALIB
  Common utility functions useful to fbdev drivers of VGA-based
  cards.

FB_SYS_COPYAREA
  Include the sys_copyarea function for generic software area copying.
  This is used by drivers that don't provide their own (accelerated)
  version and the framebuffer is in system RAM.

FB_SYS_FILLRECT
  Include the sys_fillrect function for generic software rectangle
  filling. This is used by drivers that don't provide their own
  (accelerated) version and the framebuffer is in system RAM.

FB_SYS_FOPS
  No help

FB_SYS_IMAGEBLIT
  Include the sys_imageblit function for generic software image
  blitting. This is used by drivers that don't provide their own
  (accelerated) version and the framebuffer is in system RAM.

FB_TCX
  This is the frame buffer device driver for the TCX 24/8bit frame
  buffer.

FB_TFT
  No help

FB_TFT_AGM1264K_FL
  Framebuffer support for the AGM1264K-FL LCD display (two Samsung KS0108 compatible chips)

FB_TFT_BD663474
  Generic Framebuffer support for BD663474

FB_TFT_HX8340BN
  Generic Framebuffer support for HX8340BN

FB_TFT_HX8347D
  Generic Framebuffer support for HX8347D

FB_TFT_HX8353D
  Generic Framebuffer support for HX8353D

FB_TFT_HX8357D
  Generic Framebuffer support for HX8357D

FB_TFT_ILI9163
  Generic Framebuffer support for ILI9163

FB_TFT_ILI9320
  Generic Framebuffer support for ILI9320

FB_TFT_ILI9325
  Generic Framebuffer support for ILI9325

FB_TFT_ILI9340
  Generic Framebuffer support for ILI9340

FB_TFT_ILI9341
  Generic Framebuffer support for ILI9341

FB_TFT_ILI9481
  Generic Framebuffer support for ILI9481

FB_TFT_ILI9486
  Generic Framebuffer support for ILI9486

FB_TFT_PCD8544
  Generic Framebuffer support for PCD8544

FB_TFT_RA8875
  Generic Framebuffer support for RA8875

FB_TFT_S6D02A1
  Generic Framebuffer support for S6D02A1

FB_TFT_S6D1121
  Generic Framebuffer support for S6D1121

FB_TFT_SEPS525
  Generic Framebuffer support for SEPS525
  Say Y if you have such a display that utilizes this controller.

FB_TFT_SH1106
  Framebuffer support for SH1106

FB_TFT_SSD1289
  Framebuffer support for SSD1289

FB_TFT_SSD1305
  Framebuffer support for SSD1305

FB_TFT_SSD1306
  Framebuffer support for SSD1306

FB_TFT_SSD1331
  Framebuffer support for SSD1331

FB_TFT_SSD1351
  Framebuffer support for SSD1351

FB_TFT_ST7735R
  Generic Framebuffer support for ST7735R

FB_TFT_ST7789V
  This enables generic framebuffer support for the Sitronix ST7789V
  display controller. The controller is intended for small color
  displays with a resolution of up to 320x240 pixels.
  
  Say Y if you have such a display that utilizes this controller.

FB_TFT_TINYLCD
  Custom Framebuffer support for tinylcd.com display

FB_TFT_TLS8204
  Generic Framebuffer support for TLS8204

FB_TFT_UC1611
  Generic Framebuffer support for UC1611

FB_TFT_UC1701
  Generic Framebuffer support for UC1701

FB_TFT_UPD161704
  Generic Framebuffer support for uPD161704

FB_TFT_WATTEROTT
  Generic Framebuffer support for WATTEROTT

FB_TGA
  This is the frame buffer device driver for generic TGA and SFB+
  graphic cards.  These include DEC ZLXp-E1, -E2 and -E3 PCI cards,
  also known as PBXGA-A, -B and -C, and DEC ZLX-E1, -E2 and -E3
  TURBOchannel cards, also known as PMAGD-A, -B and -C.
  
  Due to hardware limitations ZLX-E2 and E3 cards are not supported
  for DECstation 5000/200 systems.  Additionally due to firmware
  limitations these cards may cause troubles with booting DECstation
  5000/240 and /260 systems, but are fully supported under Linux if
  you manage to get it going. ;-)
  
  Say Y if you have one of those.

FB_TILEBLITTING
  This enables tile blitting.  Tile blitting is a drawing technique
  where the screen is divided into rectangular sections (tiles), whereas
  the standard blitting divides the screen into pixels. Because the
  default drawing element is a tile, drawing functions will be passed
  parameters in terms of number of tiles instead of number of pixels.
  For example, to draw a single character, instead of using bitmaps,
  an index to an array of bitmaps will be used.  To clear or move a
  rectangular section of a screen, the rectangle will be described in
  terms of number of tiles in the x- and y-axis.
  
  This is particularly important to one driver, matroxfb.  If
  unsure, say N.

FB_TMIO
  Frame buffer driver for the Toshiba Mobile IO integrated as found
  on the Sharp SL-6000 series
  
  This driver is also available as a module ( = code which can be
  inserted and removed from the running kernel whenever you want). The
  module will be called tmiofb. If you want to compile it as a module,
  say M here and read <file:Documentation/kbuild/modules.rst>.
  
  If unsure, say N.

FB_TMIO_ACCELL
  No help

FB_TRIDENT
  This is the frame buffer device driver for Trident PCI/AGP chipsets.
  Supported chipset families are TGUI 9440/96XX, 3DImage, Blade3D
  and Blade XP.
  There are also integrated versions of these chips called CyberXXXX,
  CyberImage or CyberBlade. These chips are mostly found in laptops
  but also on some motherboards including early VIA EPIA motherboards.
  For more information, read <file:Documentation/fb/tridentfb.rst>
  
  Say Y if you have such a graphics board.
  
  To compile this driver as a module, choose M here: the
  module will be called tridentfb.

FB_UDL
  This is a kernel framebuffer driver for DisplayLink USB devices.
  Supports fbdev clients like xf86-video-fbdev, kdrive, fbi, and
  mplayer -vo fbdev. Supports all USB 2.0 era DisplayLink devices.
  To compile as a module, choose M here: the module name is udlfb.

FB_UVESA
  This is the frame buffer driver for generic VBE 2.0 compliant
  graphic cards. It can also take advantage of VBE 3.0 features,
  such as refresh rate adjustment.
  
  This driver generally provides more features than vesafb but
  requires a userspace helper application called 'v86d'. See
  <file:Documentation/fb/uvesafb.rst> for more information.
  
  If unsure, say N.

FB_VALKYRIE
  This driver supports a frame buffer for the "valkyrie" graphics
  adapter in some Power Macintoshes.

FB_VESA
  This is the frame buffer device driver for generic VESA 2.0
  compliant graphic cards. The older VESA 1.2 cards are not supported.
  You will get a boot time penguin logo at no additional cost. Please
  read <file:Documentation/fb/vesafb.rst>. If unsure, say Y.

FB_VGA16
  This is the frame buffer device driver for VGA 16 color graphic
  cards. Say Y if you have such a card.
  
  To compile this driver as a module, choose M here: the
  module will be called vga16fb.

FB_VIA
  This is the frame buffer device driver for Graphics chips of VIA
  UniChrome (Pro) Family (CLE266,PM800/CN400,P4M800CE/P4M800Pro/
  CN700/VN800,CX700/VX700,P4M890) and Chrome9 Family (K8M890,CN896
  /P4M900,VX800)
  Say Y if you have a VIA UniChrome graphics board.
  
  To compile this driver as a module, choose M here: the
  module will be called viafb.

FB_VIA_DIRECT_PROCFS
  Allow direct hardware access to some output registers via procfs.
  This is dangerous but may provide the only chance to get the
  correct output device configuration.
  Its use is strongly discouraged.

FB_VIA_X_COMPATIBILITY
  This option reduces the functionality (power saving, ...) of the
  framebuffer to avoid negative impact on the OpenChrome X server.
  If you use any X server other than fbdev you should enable this
  otherwise it should be safe to disable it and allow using all
  features.

FB_VIRTUAL
  This is a `virtual' frame buffer device. It operates on a chunk of
  unswappable kernel memory instead of on the memory of a graphics
  board. This means you cannot see any output sent to this frame
  buffer device, while it does consume precious memory. The main use
  of this frame buffer device is testing and debugging the frame
  buffer subsystem. Do NOT enable it for normal systems! To protect
  the innocent, it has to be enabled explicitly at boot time using the
  kernel option `video=vfb:'.
  
  To compile this driver as a module, choose M here: the
  module will be called vfb. In order to load it, you must use
  the vfb_enable=1 option.
  
  If unsure, say N.

FB_VOODOO1
  Say Y here if you have a 3Dfx Voodoo Graphics (Voodoo1/sst1) or
  Voodoo2 (cvg) based graphics card.
  
  To compile this driver as a module, choose M here: the
  module will be called sstfb.
  
  WARNING: Do not use any application that uses the 3D engine
  (namely glide) while using this driver.
  Please read the <file:Documentation/fb/sstfb.rst> for supported
  options and other important info  support.

FB_VT8500
  This is the framebuffer driver for VIA VT8500 integrated LCD
  controller.

FB_VT8623
  Driver for CastleRock integrated graphics core in the
  VIA VT8623 [Apollo CLE266] chipset.

FB_W100
  Frame buffer driver for the w100 as found on the Sharp SL-Cxx series.
  It can also drive the w3220 chip found on iPAQ hx4700.
  
  This driver is also available as a module ( = code which can be
  inserted and removed from the running kernel whenever you want). The
  module will be called w100fb. If you want to compile it as a module,
  say M here and read <file:Documentation/kbuild/modules.rst>.
  
  If unsure, say N.

FB_WM8505
  This is the framebuffer driver for WonderMedia WM8xxx-series
  integrated LCD controller. This driver covers the WM8505, WM8650
  and WM8850 SoCs.

FB_WMT_GE_ROPS
  This adds support for accelerated raster operations on the
  VIA VT8500 and Wondermedia 85xx series SoCs.

FB_XILINX
  Include support for the Xilinx ML300/ML403 reference design
  framebuffer. ML300 carries a 640*480 LCD display on the board,
  ML403 uses a standard DB15 VGA connector.

FB_XVR1000
  This is the framebuffer device for the Sun XVR-1000 and similar
  graphics cards.  The driver only works on sparc64 systems where
  the system firmware has mostly initialized the card already.  It
  is treated as a completely dumb framebuffer device.

FB_XVR2500
  This is the framebuffer device for the Sun XVR-2500 and similar
  graphics cards based upon the 3DLABS Wildcat chipset.  The driver
  only works on sparc64 systems where the system firmware has
  mostly initialized the card already.  It is treated as a
  completely dumb framebuffer device.

FB_XVR500
  This is the framebuffer device for the Sun XVR-500 and similar
  graphics cards based upon the 3DLABS Wildcat chipset.  The driver
  only works on sparc64 systems where the system firmware has
  mostly initialized the card already.  It is treated as a
  completely dumb framebuffer device.

FCOE
  Fibre Channel over Ethernet module

FCOE_FNIC
  This is support for the Cisco PCI-Express FCoE HBA.
  
  To compile this driver as a module, choose M here and read
  <file:Documentation/scsi/scsi.rst>.
  The module will be called fnic.

FDDI
  Fiber Distributed Data Interface is a high speed local area network
  design; essentially a replacement for high speed Ethernet. FDDI can
  run over copper or fiber. If you are connected to such a network and
  want a driver for the FDDI card in your computer, say Y here (and
  then also Y to the driver for your FDDI card, below). Most people
  will say N.

FEALNX
  Say Y here to support the Myson MTD-800 family of PCI-based Ethernet
  cards. <http://www.myson.com.tw/>

FEC
  Say Y here if you want to use the built-in 10/100 Fast ethernet
  controller on some Motorola ColdFire and Freescale i.MX processors.

FEC_MPC52xx
  This option enables support for the MPC5200's on-chip
  Fast Ethernet Controller
  If compiled as module, it will be called fec_mpc52xx.

FEC_MPC52xx_MDIO
  The MPC5200's FEC can connect to the Ethernet either with
  an external MII PHY chip or 10 Mbps 7-wire interface
  (Motorola? industry standard).
  If your board uses an external PHY connected to FEC, enable this.
  If not sure, enable.
  If compiled as module, it will be called fec_mpc52xx_phy.

FHANDLE
  If you say Y here, a user level program will be able to map
  file names to handle and then later use the handle for
  different file system operations. This is useful in implementing
  userspace file servers, which now track files using handles instead
  of names. The handle would remain the same even if file names
  get renamed. Enables open_by_handle_at(2) and name_to_handle_at(2)
  syscalls.

FHCI_DEBUG
  Say "y" to see some FHCI debug information and statistics
  through debugfs.

FIB_RULES
  No help

FIELDBUS_DEV
  Support for Fieldbus Device Adapters.
  
  Fieldbus device (client) adapters allow data exchange with a PLC aka.
  "Fieldbus Controller" over a fieldbus (Profinet, FLNet, etc.)
  
  They are typically used when a Linux device wants to expose itself
  as an actuator, motor, console light, switch, etc. over the fieldbus.
  
  This framework is designed to provide a generic interface to Fieldbus
  Devices from both the Linux Kernel and the userspace.
  
  If unsure, say no.

FILE_LOCKING
  This option enables standard file locking support, required
  for filesystems like NFS and for the flock() system
  call. Disabling this option saves about 11k.

FIND_BIT_BENCHMARK
  This builds the "test_find_bit" module that measure find_*_bit()
  functions performance.
  
  If unsure, say N.

FIREWIRE
  This is the new-generation IEEE 1394 (FireWire) driver stack
  a.k.a. Juju, a new implementation designed for robustness and
  simplicity.
  See http://ieee1394.wiki.kernel.org/index.php/Juju_Migration
  for information about migration from the older Linux 1394 stack
  to the new driver stack.
  
  To compile this driver as a module, say M here: the module will be
  called firewire-core.

FIREWIRE_NET
  This enables IPv4/IPv6 over IEEE 1394, providing IP connectivity
  with other implementations of RFC 2734/3146 as found on several
  operating systems.  Multicast support is currently limited.
  
  To compile this driver as a module, say M here:  The module will be
  called firewire-net.

FIREWIRE_NOSY
  Nosy is an IEEE 1394 packet sniffer that is used for protocol
  analysis and in development of IEEE 1394 drivers, applications,
  or firmwares.
  
  This driver lets you use a Texas Instruments PCILynx 1394 to PCI
  link layer controller TSB12LV21/A/B as a low-budget bus analyzer.
  PCILynx is a nowadays very rare IEEE 1394 controller which is
  not OHCI 1394 compliant.
  
  The following cards are known to be based on PCILynx or PCILynx-2:
  IOI IOI-1394TT (PCI card), Unibrain Fireboard 400 PCI Lynx-2
  (PCI card), Newer Technology FireWire 2 Go (CardBus card),
  Apple Power Mac G3 blue & white and G4 with PCI graphics
  (onboard controller).
  
  To compile this driver as a module, say M here:  The module will be
  called nosy.  Source code of a userspace interface to nosy, called
  nosy-dump, can be found in tools/firewire/ of the kernel sources.
  
  If unsure, say N.

FIREWIRE_OHCI
  Enable this driver if you have a FireWire controller based
  on the OHCI specification.  For all practical purposes, this
  is the only chipset in use, so say Y here.
  
  To compile this driver as a module, say M here:  The module will be
  called firewire-ohci.

FIREWIRE_SBP2
  This option enables you to use SBP-2 devices connected to a
  FireWire bus.  SBP-2 devices include storage devices like
  harddisks and DVD drives, also some other FireWire devices
  like scanners.
  
  To compile this driver as a module, say M here:  The module will be
  called firewire-sbp2.
  
  You should also enable support for disks, CD-ROMs, etc. in the SCSI
  configuration section.

FIREWIRE_SERIAL
  This enables TTY over IEEE 1394, providing high-speed serial
  connectivity to cabled peers. This driver implements a
  ad-hoc transport protocol and is currently limited to
  Linux-to-Linux communication.
  
  To compile this driver as a module, say M here:  the module will
  be called firewire-serial.

FIRMWARE_EDID
  This enables access to the EDID transferred from the firmware.
  On the i386, this is from the Video BIOS. Enable this if DDC/I2C
  transfers do not work for your driver and if you are using
  nvidiafb, i810fb or savagefb.
  
  In general, choosing Y for this option is safe.  If you
  experience extremely long delays while booting before you get
  something on your display, try setting this to N.  Matrox cards in
  combination with certain motherboards and monitors are known to
  suffer from this problem.

FIRMWARE_MEMMAP
  Add the firmware-provided (unmodified) memory map to /sys/firmware/memmap.
  That memory map is used for example by kexec to set up parameter area
  for the next kernel, but can also be used for debugging purposes.
  
  See also Documentation/ABI/testing/sysfs-firmware-memmap.

FIXED_PHY
  Adds the platform "fixed" MDIO Bus to cover the boards that use
  PHYs that are not connected to the real MDIO bus.
  
  Currently tested with mpc866ads and mpc8349e-mitx.

FIX_EARLYCON_MEM
  No help

FLATMEM
  No help

FLATMEM_MANUAL
  This option is best suited for non-NUMA systems with
  flat address space. The FLATMEM is the most efficient
  system in terms of performance and resource consumption
  and it is the best option for smaller systems.
  
  For systems that have holes in their physical address
  spaces and for features like NUMA and memory hotplug,
  choose "Sparse Memory".
  
  If unsure, choose this option (Flat Memory) over any other.

FLAT_NODE_MEM_MAP
  No help

FM10K
  This driver supports Intel(R) FM10000 Ethernet Switch Host
  Interface.  For more information on how to identify your adapter,
  go to the Adapter & Driver ID Guide that can be located at:
  
  <http://support.intel.com>
  
  More specific information on configuring the driver is in
  <file:Documentation/networking/device_drivers/ethernet/intel/fm10k.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called fm10k.  MSI-X interrupt support is required

FONTS
  Say Y here if you would like to use fonts other than the default
  your frame buffer console usually use.
  
  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about foreign fonts.
  
  If unsure, say N (the default choices are safe).

FONT_10x18
  This is a high resolution console font for machines with very
  big letters. It fits between the sun 12x22 and the normal 8x16 font.
  If other fonts are too big or too small for you, say Y, otherwise say N.

FONT_6x10
  Medium-size console font. Suitable for framebuffer consoles on
  embedded devices with a 320x240 screen, to get a reasonable number
  of characters (53x24) that are still at a readable size.

FONT_6x11
  Small console font with Macintosh-style high-half glyphs.  Some Mac
  framebuffer drivers don't support this one at all.

FONT_6x8
  This font is useful for small displays (OLED).

FONT_7x14
  Console font with characters just a bit smaller than the default.
  If the standard 8x16 font is a little too big for you, say Y.
  Otherwise, say N.

FONT_8x16
  This is the "high resolution" font for the VGA frame buffer (the one
  provided by the VGA text console 80x25 mode.
  
  If unsure, say Y.

FONT_8x8
  This is the "high resolution" font for the VGA frame buffer (the one
  provided by the text console 80x50 (and higher) modes).
  
  Note that this is a poor quality font. The VGA 8x16 font is quite a
  lot more readable.
  
  Given the resolution provided by the frame buffer device, answer N
  here is safe.

FONT_ACORN_8x8
  Small console font with PC-style control characters and high-half
  glyphs.

FONT_AUTOSELECT
  No help

FONT_MINI_4x6
  No help

FONT_PEARL_8x8
  Small console font with PC-style control-character and high-half
  glyphs.

FONT_SUN12x22
  This is the high resolution console font for Sun machines with very
  big letters (like the letters used in the SPARC PROM). If the
  standard font is unreadable for you, say Y, otherwise say N.

FONT_SUN8x16
  This is the high resolution console font for Sun machines. Say Y.

FONT_SUPPORT
  No help

FONT_TER16x32
  Terminus Font is a clean, fixed width bitmap font, designed
  for long (8 and more hours per day) work with computers.
  This is the high resolution, large version for use with HiDPI screens.
  If the standard font is unreadable for you, say Y, otherwise say N.

FORCEDETH
  If you have a network (Ethernet) controller of this type, say Y here.
  
  To compile this driver as a module, choose M here. The module
  will be called forcedeth.

FORCE_DYNAMIC_FTRACE
  We keep the static function tracing (!DYNAMIC_FTRACE) around
  in order to test the non static function tracing in the
  generic code, as other architectures still use it. But we
  only need to keep it around for x86_64. No need to keep it
  for x86_32. For x86_32, force DYNAMIC_FTRACE.

FORCE_PCI
  No help

FORTIFY_SOURCE
  Detect overflows of buffers in common string and memory functions
  where the compiler can determine and validate the buffer sizes.

FPGA
  Say Y here if you want support for configuring FPGAs from the
  kernel.  The FPGA framework adds a FPGA manager class and FPGA
  manager drivers.

FPGA_BRIDGE
  Say Y here if you want to support bridges connected between host
  processors and FPGAs or between FPGAs.

FPGA_DFL
  Device Feature List (DFL) defines a feature list structure that
  creates a linked list of feature headers within the MMIO space
  to provide an extensible way of adding features for FPGA.
  Driver can walk through the feature headers to enumerate feature
  devices (e.g. FPGA Management Engine, Port and Accelerator
  Function Unit) and their private features for target FPGA devices.
  
  Select this option to enable common support for Field-Programmable
  Gate Array (FPGA) solutions which implement Device Feature List.
  It provides enumeration APIs and feature device infrastructure.

FPGA_DFL_AFU
  This is the driver for FPGA Accelerated Function Unit (AFU) which
  implements AFU and Port management features. A User AFU connects
  to the FPGA infrastructure via a Port. There may be more than one
  Port/AFU per DFL based FPGA device.

FPGA_DFL_FME
  The FPGA Management Engine (FME) is a feature device implemented
  under Device Feature List (DFL) framework. Select this option to
  enable the platform device driver for FME which implements all
  FPGA platform level management features. There shall be one FME
  per DFL based FPGA device.

FPGA_DFL_FME_BRIDGE
  Say Y to enable FPGA Bridge driver for FPGA Management Engine.

FPGA_DFL_FME_MGR
  Say Y to enable FPGA Manager driver for FPGA Management Engine.

FPGA_DFL_FME_REGION
  Say Y to enable FPGA Region driver for FPGA Management Engine.

FPGA_DFL_PCI
  Select this option to enable PCIe driver for PCIe-based
  Field-Programmable Gate Array (FPGA) solutions which implement
  the Device Feature List (DFL). This driver provides interfaces
  for userspace applications to configure, enumerate, open and access
  FPGA accelerators on the FPGA DFL devices, enables system level
  management functions such as FPGA partial reconfiguration, power
  management and virtualization with DFL framework and DFL feature
  device drivers.
  
  To compile this as a module, choose M here.

FPGA_MGR_ALTERA_CVP
  FPGA manager driver support for Arria-V, Cyclone-V, Stratix-V,
  Arria 10 and Stratix10 Altera FPGAs using the CvP interface over PCIe.

FPGA_MGR_ALTERA_PS_SPI
  FPGA manager driver support for Altera Arria/Cyclone/Stratix
  using the passive serial interface over SPI.

FPGA_MGR_ICE40_SPI
  FPGA manager driver support for Lattice iCE40 FPGAs over SPI.

FPGA_MGR_MACHXO2_SPI
  FPGA manager driver support for Lattice MachXO2 configuration
  over slave SPI interface.

FPGA_MGR_SOCFPGA
  FPGA manager driver support for Altera SOCFPGA.

FPGA_MGR_SOCFPGA_A10
  FPGA manager driver support for Altera Arria10 SoCFPGA.

FPGA_MGR_STRATIX10_SOC
  FPGA manager driver support for the Intel Stratix10 SoC.

FPGA_MGR_TS73XX
  FPGA manager driver support for the Altera Cyclone II FPGA
  present on the TS-73xx SBC boards.

FPGA_MGR_XILINX_SPI
  FPGA manager driver support for Xilinx FPGA configuration
  over slave serial interface.

FPGA_MGR_ZYNQMP_FPGA
  FPGA manager driver support for Xilinx ZynqMP FPGAs.
  This driver uses the processor configuration port(PCAP)
  to configure the programmable logic(PL) through PS
  on ZynqMP SoC.

FPGA_MGR_ZYNQ_FPGA
  FPGA manager driver support for Xilinx Zynq FPGAs.

FPGA_REGION
  FPGA Region common code.  A FPGA Region controls a FPGA Manager
  and the FPGA Bridges associated with either a reconfigurable
  region of an FPGA or a whole FPGA.

FRAMEBUFFER_CONSOLE
  Low-level framebuffer-based console driver.

FRAMEBUFFER_CONSOLE_DEFERRED_TAKEOVER
  If enabled this defers the framebuffer console taking over the
  console from the dummy console until the first text is displayed on
  the console. This is useful in combination with the "quiet" kernel
  commandline option to keep the framebuffer contents initially put up
  by the firmware in place, rather then replacing the contents with a
  black screen as soon as fbcon loads.

FRAMEBUFFER_CONSOLE_DETECT_PRIMARY
  If this option is selected, the framebuffer console will
  automatically select the primary display device (if the architecture
  supports this feature).  Otherwise, the framebuffer console will
  always select the first framebuffer driver that is loaded. The latter
  is the default behavior.
  
  You can always override the automatic selection of the primary device
  by using the fbcon=map: boot option.
  
  If unsure, select n.

FRAMEBUFFER_CONSOLE_ROTATION
  Enable display rotation for the framebuffer console.  This is done
  in software and may be significantly slower than a normally oriented
  display.  Note that the rotation is done at the console level only
  such that other users of the framebuffer will remain normally
  oriented.

FRAME_POINTER
  If you say Y here the resulting kernel image will be slightly
  larger and slower, but it gives very useful debugging information
  in case of kernel bugs. (precise oopses/stacktraces/warnings)

FRAME_VECTOR
  No help

FRAME_WARN
  Tell gcc to warn at build time for stack frames larger than this.
  Setting this too low will cause a lot of warnings.
  Setting it to 0 disables the warning.

FREEZER
  No help

FRONTSWAP
  Frontswap is so named because it can be thought of as the opposite
  of a "backing" store for a swap device.  The data is stored into
  "transcendent memory", memory that is not directly accessible or
  addressable by the kernel and is of unknown and possibly
  time-varying size.  When space in transcendent memory is available,
  a significant swap I/O reduction may be achieved.  When none is
  available, all frontswap calls are reduced to a single pointer-
  compare-against-NULL resulting in a negligible performance hit
  and swap data is stored as normal on the matching swap device.
  
  If unsure, say Y to enable frontswap.

FSCACHE
  This option enables a generic filesystem caching manager that can be
  used by various network and other filesystems to cache data locally.
  Different sorts of caches can be plugged in, depending on the
  resources available.
  
  See Documentation/filesystems/caching/fscache.rst for more information.

FSCACHE_DEBUG
  This permits debugging to be dynamically enabled in the local caching
  management module.  If this is set, the debugging output may be
  enabled by setting bits in /sys/modules/fscache/parameter/debug.
  
  See Documentation/filesystems/caching/fscache.rst for more information.

FSCACHE_HISTOGRAM
  This option causes latency information to be gathered on local
  caching and exported through file:
  
        /proc/fs/fscache/histogram
  
  The generation of this histogram adds a certain amount of overhead to
  execution as there are a number of points at which data is gathered,
  and on a multi-CPU system these may be on cachelines that keep
  bouncing between CPUs.  On the other hand, the histogram may be
  useful for debugging purposes.  Saying 'N' here is recommended.
  
  See Documentation/filesystems/caching/fscache.rst for more information.

FSCACHE_OBJECT_LIST
  Maintain a global list of active fscache objects that can be
  retrieved through /proc/fs/fscache/objects for debugging purposes

FSCACHE_STATS
  This option causes statistical information to be gathered on local
  caching and exported through file:
  
        /proc/fs/fscache/stats
  
  The gathering of statistics adds a certain amount of overhead to
  execution as there are a quite a few stats gathered, and on a
  multi-CPU system these may be on cachelines that keep bouncing
  between CPUs.  On the other hand, the stats are very useful for
  debugging purposes.  Saying 'Y' here is recommended.
  
  See Documentation/filesystems/caching/fscache.rst for more information.

FSI
  FSI - the FRU Support Interface - is a simple bus for low-level
  access to POWER-based hardware.

FSI_MASTER_ASPEED
  This option enables a FSI master that is present behind an OPB bridge
  in the AST2600.
  
  Enable it for your BMC kernel in an OpenPower or IBM Power system.

FSI_MASTER_AST_CF
  This option enables a FSI master using the AST2400 and AST2500 GPIO
  lines driven by the internal ColdFire coprocessor. This requires
  the corresponding machine specific ColdFire firmware to be available.

FSI_MASTER_GPIO
  This option enables a FSI master driver using GPIO lines.

FSI_MASTER_HUB
  This option enables a FSI hub master driver.  Hub is a type of FSI
  master that is connected to the upstream master via a slave.  Hubs
  allow chaining of FSI links to an arbitrary depth.  This allows for
  a high target device fanout.

FSI_NEW_DEV_NODE
  This option causes char devices created for FSI devices to be
  located under a common /dev/fsi/ directory. Set to N unless your
  userspace has been updated to handle the new location.
  
  Additionally, it also causes the char device names to be offset
  by one so that chip 0 will have /dev/scom1 and chip1 /dev/scom2
  to match old userspace expectations.
  
  New userspace will use udev rules to generate predictable access
  symlinks in /dev/fsi/by-path when this option is enabled.

FSI_OCC
  This option enables an SBEFIFO based On-Chip Controller (OCC) device
  driver. The OCC is a device embedded on a POWER processor that collects
  and aggregates sensor data from the processor and system. The OCC can
  provide the raw sensor data as well as perform thermal and power
  management on the system.

FSI_SBEFIFO
  This option enables an FSI based SBEFIFO device driver. The SBEFIFO is
  a pipe-like FSI device for communicating with the self boot engine
  (SBE) on POWER processors.

FSI_SCOM
  This option enables an FSI based SCOM device driver.

FSL_BMAN_TEST
  Compile the BMan self-test code. These tests will
  exercise the BMan APIs to confirm functionality
  of both the software drivers and hardware device.

FSL_BMAN_TEST_API
  This requires the presence of cpu-affine portals, and performs
  high-level API testing with them (whichever portal(s) are affine
  to the cpu(s) the test executes on).

FSL_CORENET_CF
  Say Y for reporting of errors from the Freescale CoreNet
  Coherency Fabric.  Errors reported include accesses to
  physical addresses that mapped by no local access window
  (LAW) or an invalid LAW, as well as bad cache state that
  represents a coherency violation.

FSL_DMA
  Enable support for the Freescale Elo series DMA controllers.
  The Elo is the DMA controller on some mpc82xx and mpc83xx parts, the
  EloPlus is on mpc85xx and mpc86xx and Pxxx parts, and the Elo3 is on
  some Txxx and Bxxx parts.

FSL_DPAA
  The Freescale Data Path Acceleration Architecture (DPAA) is a set of
  hardware components on specific QorIQ multicore processors.
  This architecture provides the infrastructure to support simplified
  sharing of networking interfaces and accelerators by multiple CPUs.
  The major h/w blocks composing DPAA are BMan and QMan.
  
  The Buffer Manager (BMan) is a hardware buffer pool management block
  that allows software and accelerators on the datapath to acquire and
  release buffers in order to build frames.
  
  The Queue Manager (QMan) is a hardware queue management block
  that allows software and accelerators on the datapath to enqueue and
  dequeue frames in order to communicate.

FSL_DPAA2
  Build drivers for Freescale DataPath Acceleration
  Architecture (DPAA2) family of SoCs.

FSL_DPAA2_ETH
  This is the DPAA2 Ethernet driver supporting Freescale SoCs
  with DPAA2 (DataPath Acceleration Architecture v2).
  The driver manages network objects discovered on the Freescale
  MC bus.

FSL_DPAA2_ETHSW
  Driver for Freescale DPAA2 Ethernet Switch. Select
  BRIDGE to have support for bridge tools.

FSL_DPAA2_ETH_DCB
  Enable Priority-Based Flow Control (PFC) support for DPAA2 Ethernet
  devices.

FSL_DPAA2_PTP_CLOCK
  This driver adds support for using the DPAA2 1588 timer module
  as a PTP clock.

FSL_DPAA2_QDMA
  NXP Data Path Acceleration Architecture 2 QDMA driver,
  using the NXP MC bus driver.

FSL_DPAA_CHECKING
  Compiles in additional checks, to sanity-check the drivers and
  any use of the exported API. Not recommended for performance.

FSL_DPAA_ETH
  Data Path Acceleration Architecture Ethernet driver,
  supporting the Freescale QorIQ chips.
  Depends on Freescale Buffer Manager and Queue Manager
  driver and Frame Manager Driver.

FSL_EDMA
  Support the Freescale eDMA engine with programmable channel
  multiplexing capability for DMA request sources(slot).
  This module can be found on Freescale Vybrid and LS-1 SoCs.

FSL_ENETC
  This driver supports NXP ENETC gigabit ethernet controller PCIe
  physical function (PF) devices, managing ENETC Ports at a privileged
  level.
  
  If compiled as module (M), the module name is fsl-enetc.

FSL_ENETC_MDIO
  This driver supports NXP ENETC Central MDIO controller as a PCIe
  physical function (PF) device.
  
  If compiled as module (M), the module name is fsl-enetc-mdio.

FSL_ENETC_PTP_CLOCK
  This driver adds support for using the ENETC 1588 timer
  as a PTP clock. This clock is only useful if your PTP
  programs are getting hardware time stamps on the PTP Ethernet
  packets using the SO_TIMESTAMPING API.
  
  If compiled as module (M), the module name is fsl-enetc-ptp.

FSL_ENETC_QOS
  There are Time-Sensitive Network(TSN) capabilities(802.1Qbv/802.1Qci
  /802.1Qbu etc.) supported by ENETC. These TSN capabilities can be set
  enable/disable from user space via Qos commands(tc). In the kernel
  side, it can be loaded by Qos driver. Currently, it is only support
  taprio(802.1Qbv) and Credit Based Shaper(802.1Qbu).

FSL_ENETC_VF
  This driver supports NXP ENETC gigabit ethernet controller PCIe
  virtual function (VF) devices enabled by the ENETC PF driver.
  
  If compiled as module (M), the module name is fsl-enetc-vf.

FSL_ERRATUM_A008585
  This option enables a workaround for Freescale/NXP Erratum
  A-008585 ("ARM generic timer may contain an erroneous
  value").  The workaround will only be active if the
  fsl,erratum-a008585 property is found in the timer node.

FSL_FMAN
  Freescale Data-Path Acceleration Architecture Frame Manager
  (FMan) support

FSL_FTM_TIMER
  Support for Freescale FlexTimer Module (FTM) timer.

FSL_GUTS
  The global utilities block controls power management, I/O device
  enabling, power-onreset(POR) configuration monitoring, alternate
  function selection for multiplexed signals,and clock control.
  This driver is to manage and access global utilities block.
  Initially only reading SVR and registering soc device are supported.
  Other guts accesses, such as reading RCW, should eventually be moved
  into this driver as well.

FSL_HV_MANAGER
  The Freescale hypervisor management driver provides several services
  to drivers and applications related to the Freescale hypervisor:
  
  1) An ioctl interface for querying and managing partitions.
  
  2) A file interface to reading incoming doorbells.
  
  3) An interrupt handler for shutting down the partition upon
     receiving the shutdown doorbell from a manager partition.
  
  4) A kernel interface for receiving callbacks when a managed
     partition shuts down.

FSL_IFC
  No help

FSL_IMX8_DDR_PMU
  Provides support for the DDR performance monitor in i.MX8, which
  can give information about memory throughput and other related
  events.

FSL_MC_BUS
  Driver to enable the bus infrastructure for the QorIQ DPAA2
  architecture.  The fsl-mc bus driver handles discovery of
  DPAA2 objects (which are represented as Linux devices) and
  binding objects to drivers.

FSL_MC_DPIO
  Driver for the DPAA2 DPIO object.  A DPIO provides queue and
  buffer management facilities for software to interact with
  other DPAA2 objects. This driver does not expose the DPIO
  objects individually, but groups them under a service layer
  API.

FSL_MX25_ADC
  Generic Conversion Queue driver used for general purpose ADC in the
  MX25. This driver supports single measurements using the MX25 ADC.

FSL_PAMU
  Freescale PAMU support. PAMU is the IOMMU present on Freescale QorIQ platforms.
  PAMU can authorize memory access, remap the memory address, and remap I/O
  transaction types.

FSL_PQ_MDIO
  This driver supports the MDIO bus used by the gianfar and UCC drivers.

FSL_QDMA
  Support the NXP Layerscape qDMA engine with command queue and legacy mode.
  Channel virtualization is supported through enqueuing of DMA jobs to,
  or dequeuing DMA jobs from, different work queues.
  This module can be found on NXP Layerscape SoCs.
   The qdma driver only work on  SoCs with a DPAA hardware block.

FSL_QMAN_TEST
  Compile self-test code for QMan.

FSL_QMAN_TEST_API
  This requires the presence of cpu-affine portals, and performs
  high-level API testing with them (whichever portal(s) are affine to
  the cpu(s) the test executes on).

FSL_QMAN_TEST_STASH
  This performs a "hot potato" style test enqueuing/dequeuing a frame
  across a series of FQs scheduled to different portals (and cpus), with
  DQRR, data and context stashing always on.

FSL_RAID
  Enable support for Freescale RAID Engine. RAID Engine is
  available on some QorIQ SoCs (like P5020/P5040). It has
  the capability to offload memcpy, xor and pq computation
  for raid5/6.

FSL_RCPM
  The NXP QorIQ Processors based on ARM Core have RCPM module
  (Run Control and Power Management), which performs all device-level
  tasks associated with power management, such as wakeup source control.
  Note that currently this driver will not support PowerPC based
  QorIQ processor.

FSL_UCC_HDLC
  Driver for Freescale QUICC Engine HDLC controller. The driver
  supports HDLC in NMSI and TDM mode.
  
  To compile this driver as a module, choose M here: the
  module will be called fsl_ucc_hdlc.

FSL_USB2_OTG
  Enable this to support Freescale USB OTG transceiver.

FSL_XGMAC_MDIO
  This driver supports the MDIO bus on the Fman 10G Ethernet MACs, and
  on the FMan mEMAC (which supports both Clauses 22 and 45)

FSNOTIFY
  No help

FS_DAX
  Direct Access (DAX) can be used on memory-backed block devices.
  If the block device supports DAX and the filesystem supports DAX,
  then you can avoid using the pagecache to buffer I/Os.  Turning
  on this option will compile in support for DAX; you will need to
  mount the filesystem using the -o dax option.
  
  If you do not have a block device that is capable of using this,
  or if unsure, say N.  Saying Y will increase the size of the kernel
  by about 5kB.

FS_DAX_LIMITED
  No help

FS_DAX_PMD
  No help

FS_ENCRYPTION
  Enable encryption of files and directories.  This
  feature is similar to ecryptfs, but it is more memory
  efficient since it avoids caching the encrypted and
  decrypted pages in the page cache.  Currently Ext4,
  F2FS and UBIFS make use of this feature.

FS_ENCRYPTION_ALGS
  No help

FS_ENCRYPTION_INLINE_CRYPT
  Enable fscrypt to use inline encryption hardware if available.

FS_ENET
  No help

FS_ENET_HAS_FCC
  No help

FS_ENET_HAS_FEC
  No help

FS_ENET_HAS_SCC
  No help

FS_ENET_MDIO_FCC
  No help

FS_ENET_MDIO_FEC
  No help

FS_ENET_MPC5121_FEC
  No help

FS_IOMAP
  No help

FS_MBCACHE
  No help

FS_POSIX_ACL
  No help

FS_VERITY
  This option enables fs-verity.  fs-verity is the dm-verity
  mechanism implemented at the file level.  On supported
  filesystems (currently EXT4 and F2FS), userspace can use an
  ioctl to enable verity for a file, which causes the filesystem
  to build a Merkle tree for the file.  The filesystem will then
  transparently verify any data read from the file against the
  Merkle tree.  The file is also made read-only.
  
  This serves as an integrity check, but the availability of the
  Merkle tree root hash also allows efficiently supporting
  various use cases where normally the whole file would need to
  be hashed at once, such as: (a) auditing (logging the file's
  hash), or (b) authenticity verification (comparing the hash
  against a known good value, e.g. from a digital signature).
  
  fs-verity is especially useful on large files where not all
  the contents may actually be needed.  Also, fs-verity verifies
  data each time it is paged back in, which provides better
  protection against malicious disks vs. an ahead-of-time hash.
  
  If unsure, say N.

FS_VERITY_BUILTIN_SIGNATURES
  Support verifying signatures of verity files against the X.509
  certificates that have been loaded into the ".fs-verity"
  kernel keyring.
  
  This is meant as a relatively simple mechanism that can be
  used to provide an authenticity guarantee for verity files, as
  an alternative to IMA appraisal.  Userspace programs still
  need to check that the verity bit is set in order to get an
  authenticity guarantee.
  
  If unsure, say N.

FS_VERITY_DEBUG
  Enable debugging messages related to fs-verity by default.
  
  Say N unless you are an fs-verity developer.

FTGMAC100
  This driver supports the FTGMAC100 Gigabit Ethernet controller
  from Faraday. It is used on Faraday A369, Andes AG102 and some
  other ARM/NDS32 SoC's.

FTL
  This provides support for the original Flash Translation Layer which
  is part of the PCMCIA specification. It uses a kind of pseudo-
  file system on a flash device to emulate a block device with
  512-byte sectors, on top of which you put a 'normal' file system.
  
  You may find that the algorithms used in this code are patented
  unless you live in the Free World where software patents aren't
  legal - in the USA you are only permitted to use this on PCMCIA
  hardware, although under the terms of the GPL you're obviously
  permitted to copy, modify and distribute the code as you wish. Just
  not use it.

FTMAC100
  This driver supports the FTMAC100 10/100 Ethernet controller
  from Faraday. It is used on Faraday A320, Andes AG101 and some
  other ARM/NDS32 SoC's.

FTM_QUADDEC
  Select this option to enable the Flex Timer Quadrature decoder
  driver.
  
  To compile this driver as a module, choose M here: the
  module will be called ftm-quaddec.

FTRACE
  Enable the kernel tracing infrastructure.

FTRACE_MCOUNT_RECORD
  No help

FTRACE_RECORD_RECURSION
  All callbacks that attach to the function tracing have some sort
  of protection against recursion. Even though the protection exists,
  it adds overhead. This option will create a file in the tracefs
  file system called "recursed_functions" that will list the functions
  that triggered a recursion.
  
  This will add more overhead to cases that have recursion.
  
  If unsure, say N

FTRACE_RECORD_RECURSION_SIZE
  This defines the limit of number of functions that can be
  listed in the "recursed_functions" file, that lists all
  the functions that caused a recursion to happen.
  This file can be reset, but the limit can not change in
  size at runtime.

FTRACE_SELFTEST
  No help

FTRACE_STARTUP_TEST
  This option performs a series of startup tests on ftrace. On bootup
  a series of tests are made to verify that the tracer is
  functioning properly. It will do tests on all the configured
  tracers of ftrace.

FTRACE_SYSCALLS
  Basic tracer to catch the syscall entry and exit events.

FTTMR010_TIMER
  Enables support for the Faraday Technology timer block
  FTTMR010.

FTWDT010_WATCHDOG
  Say Y here if to include support for the Faraday Technology
  FTWDT010 watchdog timer embedded in the Cortina Systems Gemini
  family of devices.
  
  To compile this driver as a module, choose M here: the
  module will be called ftwdt010_wdt.

FUEL_GAUGE_SC27XX
  Say Y here to enable support for fuel gauge with SC27XX
  PMIC chips.

FUJITSU_ES
  This driver provides support for Extended Socket network device
  on Extended Partitioning of FUJITSU PRIMEQUEST 2000 E2 series.

FUJITSU_LAPTOP
  This is a driver for laptops built by Fujitsu:
  
    * P2xxx/P5xxx/S6xxx/S7xxx series Lifebooks
    * Possibly other Fujitsu laptop models
    * Tested with S6410 and S7020
  
  It adds support for LCD brightness control and some hotkeys.
  
  If you have a Fujitsu laptop, say Y or M here.

FUJITSU_TABLET
  This is a driver for tablets built by Fujitsu:
  
    * Lifebook P1510/P1610/P1620/Txxxx
    * Stylistic ST5xxx
    * Possibly other Fujitsu tablet models
  
  It adds support for the panel buttons, docking station detection,
  tablet/notebook mode detection for convertible and
  orientation detection for docked slates.
  
  If you have a Fujitsu convertible or slate, say Y or M here.

FUNCTION_ERROR_INJECTION
  No help

FUNCTION_GRAPH_TRACER
  Enable the kernel to trace a function at both its return
  and its entry.
  Its first purpose is to trace the duration of functions and
  draw a call graph for each thread with some information like
  the return value. This is done by setting the current return
  address on the current task structure into a stack of calls.

FUNCTION_PROFILER
  This option enables the kernel function profiler. A file is created
  in debugfs called function_profile_enabled which defaults to zero.
  When a 1 is echoed into this file profiling begins, and when a
  zero is entered, profiling stops. A "functions" file is created in
  the trace_stat directory; this file shows the list of functions that
  have been hit and their counters.
  
  If in doubt, say N.

FUNCTION_TRACER
  Enable the kernel to trace every kernel function. This is done
  by using a compiler feature to insert a small, 5-byte No-Operation
  instruction at the beginning of every kernel function, which NOP
  sequence is then dynamically patched into a tracer call when
  tracing is enabled by the administrator. If it's runtime disabled
  (the bootup default), then the overhead of the instructions is very
  small and not measurable even in micro-benchmarks.

FUSE_DAX
  This allows bypassing guest page cache and allows mapping host page
  cache directly in guest address space.
  
  If you want to allow mounting a Virtio Filesystem with the "dax"
  option, answer Y.

FUSE_FS
  With FUSE it is possible to implement a fully functional filesystem
  in a userspace program.
  
  There's also a companion library: libfuse2.  This library is available
  from the FUSE homepage:
  <https://github.com/libfuse/>
  although chances are your distribution already has that library
  installed if you've installed the "fuse" package itself.
  
  See <file:Documentation/filesystems/fuse.rst> for more information.
  See <file:Documentation/Changes> for needed library/utility version.
  
  If you want to develop a userspace FS, or if you want to use
  a filesystem based on FUSE, answer Y or M.

FUSION
  Say Y here to get to see options for Fusion Message
  Passing Technology (MPT) drivers.
  This option alone does not add any kernel code.
  
  If you say N, all options in this submenu will be skipped and disabled.

FUSION_CTL
  The Fusion MPT misc device driver provides specialized control
  of MPT adapters via system ioctl calls.  Use of ioctl calls to
  the MPT driver requires that you create and use a misc device
  node ala:
  mknod /dev/mptctl c 10 240
  
  One use of this ioctl interface is to perform an upgrade (reflash)
  of the MPT adapter firmware.  Refer to readme file(s) distributed
  with the Fusion MPT linux driver for additional details.
  
  If enabled by saying M to this, a driver named: mptctl
  will be compiled.
  
  If unsure whether you really want or need this, say N.

FUSION_FC
  SCSI HOST support for a Fiber Channel host adapters.
  
  List of supported controllers:
  
  LSIFC909
  LSIFC919
  LSIFC919X
  LSIFC929
  LSIFC929X
  LSIFC929XL
  LSIFC949X
  LSIFC949E
  Brocade FC 410/420

FUSION_LAN
  This module supports LAN IP traffic over Fibre Channel port(s)
  on Fusion MPT compatible hardware (LSIFC9xx chips).
  The physical interface used is defined in RFC 2625.
  Please refer to that document for details.
  
  Installing this driver requires the knowledge to configure and
  activate a new network interface, "fc0", using standard Linux tools.
  
  If enabled by saying M to this, a driver named: mptlan
  will be compiled.
  
  If unsure whether you really want or need this, say N.

FUSION_LOGGING
  This turns on a logging facility that can be used to debug a number
  of Fusion MPT related problems.
  
  The debug level can be programmed on the fly via SysFS (hex values)
  
  echo [level] > /sys/class/scsi_host/host#/debug_level
  
  There are various debug levels that can be found in the source:
  file:drivers/message/fusion/mptdebug.h

FUSION_MAX_SGE
  This option allows you to specify the maximum number of scatter-
  gather entries per I/O. The driver default is 128, which matches
  SCSI_MAX_PHYS_SEGMENTS. However, it may decreased down to 16.
  Decreasing this parameter will reduce memory requirements
  on a per controller instance.

FUSION_SAS
  SCSI HOST support for a SAS host adapters.
  
  List of supported controllers:
  
  LSISAS1064
  LSISAS1068
  LSISAS1064E
  LSISAS1068E
  LSISAS1078

FUSION_SPI
  SCSI HOST support for a parallel SCSI host adapters.
  
  List of supported controllers:
  
  LSI53C1020
  LSI53C1020A
  LSI53C1030
  LSI53C1035
  ATTO UL4D

FUTEX
  Disabling this option will cause the kernel to be built without
  support for "fast userspace mutexes".  The resulting kernel may not
  run glibc-based applications correctly.

FUTEX_PI
  No help

FWTTY_MAX_CARD_PORTS
  Set this to the maximum number of serial ports each firewire
  adapter supports. The actual number of serial ports registered
  is set with the module parameter "ttys".

FWTTY_MAX_TOTAL_PORTS
  Set this to the maximum number of serial ports you want the
  firewire-serial driver to support.

FW_CACHE
  Because firmware caching generates uevent messages that are sent
  over a netlink socket, it can prevent suspend on many platforms.
  It is also not always useful, so on such platforms we have the
  option.
  
  If unsure, say Y.

FW_CFG_SYSFS
  Say Y or M here to enable the exporting of the QEMU firmware
  configuration (fw_cfg) file entries via sysfs. Entries are
  found under /sys/firmware/fw_cfg when this option is enabled
  and loaded.

FW_CFG_SYSFS_CMDLINE
  Allow the qemu_fw_cfg device to be initialized via the kernel
  command line or using a module parameter.
  WARNING: Using incorrect parameters (base address in particular)
  may crash your system.

FW_LOADER
  This enables the firmware loading facility in the kernel. The kernel
  will first look for built-in firmware, if it has any. Next, it will
  look for the requested firmware in a series of filesystem paths:
  
        o firmware_class path module parameter or kernel boot param
        o /lib/firmware/updates/UTS_RELEASE
        o /lib/firmware/updates
        o /lib/firmware/UTS_RELEASE
        o /lib/firmware
  
  Enabling this feature only increases your kernel image by about
  828 bytes, enable this option unless you are certain you don't
  need firmware.
  
  You typically want this built-in (=y) but you can also enable this
  as a module, in which case the firmware_class module will be built.
  You also want to be sure to enable this built-in if you are going to
  enable built-in firmware (CONFIG_EXTRA_FIRMWARE).

FW_LOADER_COMPRESS
  This option enables the support for loading compressed firmware
  files. The caller of firmware API receives the decompressed file
  content. The compressed file is loaded as a fallback, only after
  loading the raw file failed at first.
  
  Currently only XZ-compressed files are supported, and they have to
  be compressed with either none or crc32 integrity check type (pass
  "-C crc32" option to xz command).

FW_LOADER_PAGED_BUF
  No help

FW_LOADER_USER_HELPER
  This option enables a sysfs loading facility to enable firmware
  loading to the kernel through userspace as a fallback mechanism
  if and only if the kernel's direct filesystem lookup for the
  firmware failed using the different /lib/firmware/ paths, or the
  path specified in the firmware_class path module parameter, or the
  firmware_class path kernel boot parameter if the firmware_class is
  built-in. For details on how to work with the sysfs fallback mechanism
  refer to Documentation/driver-api/firmware/fallback-mechanisms.rst.
  
  The direct filesystem lookup for firmware is always used first now.
  
  If the kernel's direct filesystem lookup for firmware fails to find
  the requested firmware a sysfs fallback loading facility is made
  available and userspace is informed about this through uevents.
  The uevent can be suppressed if the driver explicitly requested it,
  this is known as the driver using the custom fallback mechanism.
  If the custom fallback mechanism is used userspace must always
  acknowledge failure to find firmware as the timeout for the fallback
  mechanism is disabled, and failed requests will linger forever.
  
  This used to be the default firmware loading facility, and udev used
  to listen for uvents to load firmware for the kernel. The firmware
  loading facility functionality in udev has been removed, as such it
  can no longer be relied upon as a fallback mechanism. Linux no longer
  relies on or uses a fallback mechanism in userspace. If you need to
  rely on one refer to the permissively licensed firmwared:
  
  https://github.com/teg/firmwared
  
  Since this was the default firmware loading facility at one point,
  old userspace may exist which relies upon it, and as such this
  mechanism can never be removed from the kernel.
  
  You should only enable this functionality if you are certain you
  require a fallback mechanism and have a userspace mechanism ready to
  load firmware in case it is not found. One main reason for this may
  be if you have drivers which require firmware built-in and for
  whatever reason cannot place the required firmware in initramfs.
  Another reason kernels may have this feature enabled is to support a
  driver which explicitly relies on this fallback mechanism. Only two
  drivers need this today:
  
    o CONFIG_LEDS_LP55XX_COMMON
    o CONFIG_DELL_RBU
  
  Outside of supporting the above drivers, another reason for needing
  this may be that your firmware resides outside of the paths the kernel
  looks for and cannot possibly be specified using the firmware_class
  path module parameter or kernel firmware_class path boot parameter
  if firmware_class is built-in.
  
  A modern use case may be to temporarily mount a custom partition
  during provisioning which is only accessible to userspace, and then
  to use it to look for and fetch the required firmware. Such type of
  driver functionality may not even ever be desirable upstream by
  vendors, and as such is only required to be supported as an interface
  for provisioning. Since udev's firmware loading facility has been
  removed you can use firmwared or a fork of it to customize how you
  want to load firmware based on uevents issued.
  
  Enabling this option will increase your kernel image size by about
  13436 bytes.
  
  If you are unsure about this, say N here, unless you are Linux
  distribution and need to support the above two drivers, or you are
  certain you need to support some really custom firmware loading
  facility in userspace.

FW_LOADER_USER_HELPER_FALLBACK
  Enabling this option forces a sysfs userspace fallback mechanism
  to be used for all firmware requests which explicitly do not disable a
  a fallback mechanism. Firmware calls which do prohibit a fallback
  mechanism is request_firmware_direct(). This option is kept for
  backward compatibility purposes given this precise mechanism can also
  be enabled by setting the proc sysctl value to true:
  
       /proc/sys/kernel/firmware_config/force_sysfs_fallback
  
  If you are unsure about this, say N here.

FXAS21002C
  Say yes here to build support for NXP FXAS21002C Tri-axis Gyro
  Sensor driver connected via I2C or SPI.
  
  This driver can also be built as a module.  If so, the module
  will be called fxas21002c_i2c or fxas21002c_spi.

FXAS21002C_I2C
  No help

FXAS21002C_SPI
  No help

FXOS8700
  No help

FXOS8700_I2C
  Say yes here to build support for the NXP FXOS8700 m+g combo
  sensor on I2C.
  
  This driver can also be built as a module. If so, the module will be
  called fxos8700_i2c.

FXOS8700_SPI
  Say yes here to build support for the NXP FXOS8700 m+g combo
  sensor on SPI.
  
  This driver can also be built as a module. If so, the module will be
  called fxos8700_spi.

GACT_PROB
  Say Y here to use the generic action randomly or deterministically.

GADGET_UAC1
  If you instead want older USB Audio Class specification 1.0 support
  with similar driver capabilities.

GADGET_UAC1_LEGACY
  If you instead want legacy UAC Spec-1.0 driver that also has audio
  paths hardwired to the Audio codec chip on-board and doesn't work
  without one.

GAMEPORT
  Gameport support is for the standard 15-pin PC gameport. If you
  have a joystick, gamepad, gameport card, a soundcard with a gameport
  or anything else that uses the gameport, say Y or M here and also to
  at least one of the hardware specific drivers.
  
  For Ensoniq AudioPCI (ES1370), AudioPCI 97 (ES1371), ESS Solo1,
  S3 SonicVibes, Trident 4DWave, SiS7018, and ALi 5451 gameport
  support is provided by the sound drivers, so you won't need any
  from the below listed modules. You still need to say Y here.
  
  If unsure, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called gameport.

GAMEPORT_EMU10K1
  Say Y here if you have a SoundBlaster Live! or SoundBlaster
  Audigy card and want to use its gameport.
  
  To compile this driver as a module, choose M here: the
  module will be called emu10k1-gp.

GAMEPORT_FM801
  Say Y here if you have ForteMedia FM801 PCI audio controller
  (Abit AU10, Genius Sound Maker, HP Workstation zx2000,
  and others), and want to use its gameport.
  
  To compile this driver as a module, choose M here: the
  module will be called fm801-gp.

GAMEPORT_L4
  Say Y here if you have a PDPI Lightning 4 gamecard.
  
  To compile this driver as a module, choose M here: the
  module will be called lightning.

GAMEPORT_NS558
  Say Y here if you have an ISA or PnP gameport.
  
  If unsure, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called ns558.

GARP
  No help

GART_IOMMU
  Provides a driver for older AMD Athlon64/Opteron/Turion/Sempron
  GART based hardware IOMMUs.
  
  The GART supports full DMA access for devices with 32-bit access
  limitations, on systems with more than 3 GB. This is usually needed
  for USB, sound, many IDE/SATA chipsets and some other devices.
  
  Newer systems typically have a modern AMD IOMMU, supported via
  the CONFIG_AMD_IOMMU=y config option.
  
  In normal configurations this driver is only active when needed:
  there's more than 3 GB of memory and the system contains a
  32-bit limited device.
  
  If unsure, say Y.

GCC_PLUGINS
  GCC plugins are loadable modules that provide extra features to the
  compiler. They are useful for runtime instrumentation and static analysis.
  
  See Documentation/kbuild/gcc-plugins.rst for details.

GCC_PLUGIN_ARM_SSP_PER_TASK
  No help

GCC_PLUGIN_CYC_COMPLEXITY
  The complexity M of a function's control flow graph is defined as:
   M = E - N + 2P
  where
  
  E = the number of edges
  N = the number of nodes
  P = the number of connected components (exit nodes).
  
  Enabling this plugin reports the complexity to stderr during the
  build. It mainly serves as a simple example of how to create a
  gcc plugin for the kernel.

GCC_PLUGIN_LATENT_ENTROPY
  By saying Y here the kernel will instrument some kernel code to
  extract some entropy from both original and artificially created
  program state.  This will help especially embedded systems where
  there is little 'natural' source of entropy normally.  The cost
  is some slowdown of the boot process (about 0.5%) and fork and
  irq processing.
  
  Note that entropy extracted this way is not cryptographically
  secure!
  
  This plugin was ported from grsecurity/PaX. More information at:
   * https://grsecurity.net/
   * https://pax.grsecurity.net/

GCC_PLUGIN_RANDSTRUCT
  If you say Y here, the layouts of structures that are entirely
  function pointers (and have not been manually annotated with
  __no_randomize_layout), or structures that have been explicitly
  marked with __randomize_layout, will be randomized at compile-time.
  This can introduce the requirement of an additional information
  exposure vulnerability for exploits targeting these structure
  types.
  
  Enabling this feature will introduce some performance impact,
  slightly increase memory usage, and prevent the use of forensic
  tools like Volatility against the system (unless the kernel
  source tree isn't cleaned after kernel installation).
  
  The seed used for compilation is located at
  scripts/gcc-plugins/randomize_layout_seed.h.  It remains after
  a make clean to allow for external modules to be compiled with
  the existing seed and will be removed by a make mrproper or
  make distclean.
  
  Note that the implementation requires gcc 4.7 or newer.
  
  This plugin was ported from grsecurity/PaX. More information at:
   * https://grsecurity.net/
   * https://pax.grsecurity.net/

GCC_PLUGIN_RANDSTRUCT_PERFORMANCE
  If you say Y here, the RANDSTRUCT randomization will make a
  best effort at restricting randomization to cacheline-sized
  groups of elements.  It will further not randomize bitfields
  in structures.  This reduces the performance hit of RANDSTRUCT
  at the cost of weakened randomization.

GCC_PLUGIN_SANCOV
  This plugin inserts a __sanitizer_cov_trace_pc() call at the start of
  basic blocks. It supports all gcc versions with plugin support (from
  gcc-4.5 on). It is based on the commit "Add fuzzing coverage support"
  by Dmitry Vyukov <dvyukov@google.com>.

GCC_PLUGIN_STACKLEAK
  This option makes the kernel erase the kernel stack before
  returning from system calls. This has the effect of leaving
  the stack initialized to the poison value, which both reduces
  the lifetime of any sensitive stack contents and reduces
  potential for uninitialized stack variable exploits or information
  exposures (it does not cover functions reaching the same stack
  depth as prior functions during the same syscall). This blocks
  most uninitialized stack variable attacks, with the performance
  impact being driven by the depth of the stack usage, rather than
  the function calling complexity.
  
  The performance impact on a single CPU system kernel compilation
  sees a 1% slowdown, other systems and workloads may vary and you
  are advised to test this feature on your expected workload before
  deploying it.
  
  This plugin was ported from grsecurity/PaX. More information at:
   * https://grsecurity.net/
   * https://pax.grsecurity.net/

GCC_PLUGIN_STRUCTLEAK
  While the kernel is built with warnings enabled for any missed
  stack variable initializations, this warning is silenced for
  anything passed by reference to another function, under the
  occasionally misguided assumption that the function will do
  the initialization. As this regularly leads to exploitable
  flaws, this plugin is available to identify and zero-initialize
  such variables, depending on the chosen level of coverage.
  
  This plugin was originally ported from grsecurity/PaX. More
  information at:
   * https://grsecurity.net/
   * https://pax.grsecurity.net/

GCC_PLUGIN_STRUCTLEAK_BYREF
  Zero-initialize any structures on the stack that may
  be passed by reference and had not already been
  explicitly initialized. This can prevent most classes
  of uninitialized stack variable exploits and information
  exposures, like CVE-2017-1000410:
  https://git.kernel.org/linus/06e7e776ca4d3654
  
  As a side-effect, this keeps a lot of variables on the
  stack that can otherwise be optimized out, so combining
  this with CONFIG_KASAN_STACK can lead to a stack overflow
  and is disallowed.

GCC_PLUGIN_STRUCTLEAK_BYREF_ALL
  Zero-initialize any stack variables that may be passed
  by reference and had not already been explicitly
  initialized. This is intended to eliminate all classes
  of uninitialized stack variable exploits and information
  exposures.

GCC_PLUGIN_STRUCTLEAK_USER
  Zero-initialize any structures on the stack containing
  a __user attribute. This can prevent some classes of
  uninitialized stack variable exploits and information
  exposures, like CVE-2013-2141:
  https://git.kernel.org/linus/b9e146d8eb3b9eca

GCC_PLUGIN_STRUCTLEAK_VERBOSE
  This option will cause a warning to be printed each time the
  structleak plugin finds a variable it thinks needs to be
  initialized. Since not all existing initializers are detected
  by the plugin, this can produce false positive warnings.

GCC_VERSION
  No help

GCOV_KERNEL
  This option enables gcov-based code profiling (e.g. for code coverage
  measurements).
  
  If unsure, say N.
  
  Additionally specify CONFIG_GCOV_PROFILE_ALL=y to get profiling data
  for the entire kernel. To enable profiling for specific files or
  directories, add a line similar to the following to the respective
  Makefile:
  
  For a single file (e.g. main.o):
          GCOV_PROFILE_main.o := y
  
  For all files in one directory:
          GCOV_PROFILE := y
  
  To exclude files from being profiled even when CONFIG_GCOV_PROFILE_ALL
  is specified, use:
  
          GCOV_PROFILE_main.o := n
  and:
          GCOV_PROFILE := n
  
  Note that the debugfs filesystem has to be mounted to access
  profiling data.

GCOV_PROFILE_ALL
  This options activates profiling for the entire kernel.
  
  If unsure, say N.
  
  Note that a kernel compiled with profiling flags will be significantly
  larger and run slower. Also be sure to exclude files from profiling
  which are not linked to the kernel image to prevent linker errors.

GCOV_PROFILE_FTRACE
  Enable GCOV profiling on ftrace subsystem for checking
  which functions/lines are tested.
  
  If unsure, say N.
  
  Note that on a kernel compiled with this config, ftrace will
  run significantly slower.

GDB_SCRIPTS
  This creates the required links to GDB helper scripts in the
  build directory. If you load vmlinux into gdb, the helper
  scripts will be automatically imported by gdb as well, and
  additional functions are available to analyze a Linux kernel
  instance. See Documentation/dev-tools/gdb-kernel-debugging.rst
  for further details.

GDROM
  A standard SEGA Dreamcast comes with a modified CD ROM drive called a
  "GD-ROM" by SEGA to signify it is capable of reading special disks
  with up to 1 GB of data. This drive will also read standard CD ROM
  disks. Select this option to access any disks in your GD ROM drive.
  Most users will want to say "Y" here.
  You can also build this as a module which will be called gdrom.

GEF_WDT
  Watchdog timer found in a number of GE single board computers.

GELIC_NET
  This driver supports the network device on the PS3 game
  console.  This driver has built-in support for Ethernet.
  
  To compile this driver as a module, choose M here: the
  module will be called ps3_gelic.

GELIC_WIRELESS
  This option adds the support for the wireless feature of PS3.
  If you have the wireless-less model of PS3 or have no plan to
  use wireless feature, disabling this option saves memory.  As
  the driver automatically distinguishes the models, you can
  safely enable this option even if you have a wireless-less model.

GEMINI_ETHERNET
  This driver supports StorLink SL351x (Gemini) dual Gigabit Ethernet.

GENERIC_ADC_BATTERY
  Say Y here to enable support for the generic battery driver
  which uses IIO framework to read adc.

GENERIC_ADC_THERMAL
  This enabled a thermal sysfs driver for the temperature sensor
  which is connected to the General Purpose ADC. The ADC channel
  is read via IIO framework and the channel information is provided
  to this driver. This driver reports the temperature by reading ADC
  channel and converts it to temperature based on lookup table.

GENERIC_ALLOCATOR
  No help

GENERIC_ARCH_TOPOLOGY
  Enable support for architectures common topology code: e.g., parsing
  CPU capacity information from DT, usage of such information for
  appropriate scaling, sysfs interface for reading capacity values at
  runtime.

GENERIC_ATOMIC64
  No help

GENERIC_BUG
  No help

GENERIC_BUG_RELATIVE_POINTERS
  No help

GENERIC_CALIBRATE_DELAY
  No help

GENERIC_CLOCKEVENTS
  No help

GENERIC_CLOCKEVENTS_BROADCAST
  No help

GENERIC_CLOCKEVENTS_MIN_ADJUST
  No help

GENERIC_CMOS_UPDATE
  No help

GENERIC_COMPAT_VDSO
  This config option enables the compat VDSO layer.

GENERIC_CPU
  Generic x86-64 CPU.
  Run equally well on all x86-64 CPUs.

GENERIC_CPU_AUTOPROBE
  No help

GENERIC_CPU_DEVICES
  No help

GENERIC_CPU_VULNERABILITIES
  No help

GENERIC_EARLY_IOREMAP
  No help

GENERIC_ENTRY
  No help

GENERIC_FIND_FIRST_BIT
  No help

GENERIC_GETTIMEOFDAY
  This is a generic implementation of gettimeofday vdso.
  Each architecture that enables this feature has to
  provide the fallback implementation.

GENERIC_IDLE_POLL_SETUP
  No help

GENERIC_IOMAP
  No help

GENERIC_IOREMAP
  No help

GENERIC_IRQ_CHIP
  No help

GENERIC_IRQ_DEBUGFS
  Exposes internal state information through debugfs. Mostly for
  developers and debugging of hard to diagnose interrupt problems.
  
  If you don't know what to do here, say N.

GENERIC_IRQ_EFFECTIVE_AFF_MASK
  No help

GENERIC_IRQ_INJECTION
  No help

GENERIC_IRQ_IPI
  No help

GENERIC_IRQ_LEGACY
  No help

GENERIC_IRQ_MATRIX_ALLOCATOR
  No help

GENERIC_IRQ_MIGRATION
  No help

GENERIC_IRQ_MULTI_HANDLER
  Allow to specify the low level IRQ handler at run time.

GENERIC_IRQ_PROBE
  No help

GENERIC_IRQ_RESERVATION_MODE
  No help

GENERIC_IRQ_SHOW
  No help

GENERIC_IRQ_SHOW_LEVEL
  No help

GENERIC_ISA_DMA
  No help

GENERIC_LIB_ASHLDI3
  No help

GENERIC_LIB_ASHRDI3
  No help

GENERIC_LIB_CMPDI2
  No help

GENERIC_LIB_DEVMEM_IS_ALLOWED
  No help

GENERIC_LIB_LSHRDI3
  No help

GENERIC_LIB_MULDI3
  No help

GENERIC_LIB_UCMPDI2
  No help

GENERIC_MSI_IRQ
  No help

GENERIC_MSI_IRQ_DOMAIN
  No help

GENERIC_NET_UTILS
  No help

GENERIC_PCI_IOMAP
  No help

GENERIC_PENDING_IRQ
  No help

GENERIC_PHY
  Generic PHY support.
  
  This framework is designed to provide a generic interface for PHY
  devices present in the kernel. This layer will have the generic
  API by which phy drivers can create PHY using the phy framework and
  phy users can obtain reference to the PHY. All the users of this
  framework should select this config.

GENERIC_PHY_MIPI_DPHY
  Generic MIPI D-PHY support.
  
  Provides a number of helpers a core functions for MIPI D-PHY
  drivers to us.

GENERIC_PINCONF
  No help

GENERIC_PINCTRL_GROUPS
  No help

GENERIC_PINMUX_FUNCTIONS
  No help

GENERIC_PTDUMP
  No help

GENERIC_SCHED_CLOCK
  No help

GENERIC_SMP_IDLE_THREAD
  No help

GENERIC_STRNCPY_FROM_USER
  No help

GENERIC_STRNLEN_USER
  No help

GENERIC_TIME_VSYSCALL
  No help

GENERIC_TRACER
  No help

GENERIC_VDSO_32
  This config option helps to avoid possible performance issues
  in 32 bit only architectures.

GENERIC_VDSO_TIME_NS
  Selected by architectures which support time namespaces in the
  VDSO

GENEVE
  This allows one to create geneve virtual interfaces that provide
  Layer 2 Networks over Layer 3 Networks. GENEVE is often used
  to tunnel virtual network infrastructure in virtualized environments.
  For more information see:
    http://tools.ietf.org/html/draft-gross-geneve-02
  
  To compile this driver as a module, choose M here: the module
  will be called geneve.

GENWQE
  Enables PCIe card driver for IBM GenWQE accelerators.
  The user-space interface is described in
  include/linux/genwqe/genwqe_card.h.

GENWQE_PLATFORM_ERROR_RECOVERY
  No help

GEODE_WDT
  This driver enables a watchdog capability built into the
  CS5535/CS5536 companion chips for the AMD Geode GX and LX
  processors.  This watchdog watches your kernel to make sure
  it doesn't freeze, and if it does, it reboots your computer after
  a certain amount of time.
  
  You can compile this driver directly into the kernel, or use
  it as a module.  The module will be called geodewdt.

GEOS
  This option enables system support for the Traverse Technologies GEOS.

GFS2_FS
  A cluster filesystem.
  
  Allows a cluster of computers to simultaneously use a block device
  that is shared between them (with FC, iSCSI, NBD, etc...).  GFS reads
  and writes to the block device like a local filesystem, but also uses
  a lock module to allow the computers coordinate their I/O so
  filesystem consistency is maintained.  One of the nifty features of
  GFS is perfect consistency -- changes made to the filesystem on one
  machine show up immediately on all other machines in the cluster.
  
  To use the GFS2 filesystem in a cluster, you will need to enable
  the locking module below. Documentation and utilities for GFS2 can
  be found here: http://sources.redhat.com/cluster
  
  The "nolock" lock module is now built in to GFS2 by default. If
  you want to use the DLM, be sure to enable IPv4/6 networking.

GFS2_FS_LOCKING_DLM
  Multiple node locking module for GFS2
  
  Most users of GFS2 will require this. It provides the locking
  interface between GFS2 and the DLM, which is required to use GFS2
  in a cluster environment.

GIANFAR
  This driver supports the Gigabit TSEC on the MPC83xx, MPC85xx,
  and MPC86xx family of chips, the eTSEC on LS1021A and the FEC
  on the 8540.

GIC_NON_BANKED
  No help

GLOB
  This option provides a glob_match function for performing
  simple text pattern matching.  It originated in the ATA code
  to blacklist particular drive models, but other device drivers
  may need similar functionality.
  
  All drivers in the Linux kernel tree that require this function
  should automatically select this option.  Say N unless you
  are compiling an out-of tree driver which tells you that it
  depends on this.

GLOB_SELFTEST
  This option enables a simple self-test of the glob_match
  function on startup.        It is primarily useful for people
  working on the code to ensure they haven't introduced any
  regressions.
  
  It only adds a little bit of code and slows kernel boot (or
  module load) by a small amount, so you're welcome to play with
  it, but you probably don't need it.

GNSS
  Say Y here if you have a GNSS receiver (e.g. a GPS receiver).
  
  To compile this driver as a module, choose M here: the module will
  be called gnss.

GNSS_MTK_SERIAL
  Say Y here if you have a Mediatek-based GNSS receiver which uses a
  serial interface.
  
  To compile this driver as a module, choose M here: the module will
  be called gnss-mtk.
  
  If unsure, say N.

GNSS_SERIAL
  No help

GNSS_SIRF_SERIAL
  Say Y here if you have a SiRFstar-based GNSS receiver which uses a
  serial interface.
  
  To compile this driver as a module, choose M here: the module will
  be called gnss-sirf.
  
  If unsure, say N.

GNSS_UBX_SERIAL
  Say Y here if you have a u-blox GNSS receiver which uses a serial
  interface.
  
  To compile this driver as a module, choose M here: the module will
  be called gnss-ubx.
  
  If unsure, say N.

GOLDFISH
  Say Y here to get to see options for the Goldfish virtual platform.
  This option alone does not add any kernel code.
  
  Unless you are building for the Android Goldfish emulator say N here.

GOLDFISH_PIC
  Say yes here to enable Goldfish interrupt controller driver used
  for Goldfish based virtual platforms.

GOLDFISH_PIPE
  This is a virtual device to drive the QEMU pipe interface used by
  the Goldfish Android Virtual Device.

GOLDFISH_TTY
  Console and system TTY driver for the Goldfish virtual platform.

GOLDFISH_TTY_EARLY_CONSOLE
  No help

GOOGLE_COREBOOT_TABLE
  This option enables the coreboot_table module, which provides other
  firmware modules access to the coreboot table. The coreboot table
  pointer is accessed through the ACPI "GOOGCB00" object or the
  device tree node /firmware/coreboot.
  If unsure say N.

GOOGLE_COREBOOT_TABLE_ACPI
  No help

GOOGLE_COREBOOT_TABLE_OF
  No help

GOOGLE_FIRMWARE
  These firmware drivers are used by Google's servers.  They are
  only useful if you are working directly on one of their
  proprietary servers.  If in doubt, say "N".

GOOGLE_FRAMEBUFFER_COREBOOT
  This option enables the kernel to search for a framebuffer in
  the coreboot table.  If found, it is registered with simplefb.

GOOGLE_MEMCONSOLE
  No help

GOOGLE_MEMCONSOLE_COREBOOT
  This option enables the kernel to search for a firmware log in
  the coreboot table.  If found, this log is exported to userland
  in the file /sys/firmware/log.

GOOGLE_MEMCONSOLE_X86_LEGACY
  This option enables the kernel to search for a firmware log in
  the EBDA on Google servers.  If found, this log is exported to
  userland in the file /sys/firmware/log.

GOOGLE_SMI
  Say Y here if you want to enable SMI callbacks for Google
  platforms.  This provides an interface for writing to and
  clearing the event log.  If CONFIG_EFI is also enabled this
  driver provides an interface for reading and writing NVRAM
  variables.

GOOGLE_VPD
  This option enables the kernel to expose the content of Google VPD
  under /sys/firmware/vpd.

GP2AP002
  Say Y here if you have a Sharp GP2AP002 proximity/ALS combo-chip
  hooked to an I2C bus.
  
  To compile this driver as a module, choose M here: the
  module will be called gp2ap002.

GP2AP020A00F
  Say Y here if you have a Sharp GP2AP020A00F proximity/ALS combo-chip
  hooked to an I2C bus.
  
  To compile this driver as a module, choose M here: the
  module will be called gp2ap020a00f.

GPD_POCKET_FAN
  Driver for the GPD Pocket vendor specific FAN02501 ACPI device
  which controls the fan speed on the GPD Pocket.
  
  Without this driver the fan on the Pocket will stay off independent
  of the CPU temperature. Say Y or M if the kernel may be used on a
  GPD pocket.

GPIOLIB
  This enables GPIO support through the generic GPIO library.
  You only need to enable this, if you also want to enable
  one or more of the GPIO drivers below.
  
  If unsure, say N.

GPIOLIB_FASTPATH_LIMIT
  This adjusts the point at which certain APIs will switch from
  using a stack allocated buffer to a dynamically allocated buffer.
  
  You shouldn't need to change this unless you really need to
  optimize either stack space or performance. Change this carefully
  since setting an incorrect value could cause stack corruption.

GPIOLIB_IRQCHIP
  No help

GPIO_104_DIO_48E
  Enables GPIO support for the ACCES 104-DIO-48E series (104-DIO-48E,
  104-DIO-24E). The base port addresses for the devices may be
  configured via the base module parameter. The interrupt line numbers
  for the devices may be configured via the irq module parameter.

GPIO_104_IDIO_16
  Enables GPIO support for the ACCES 104-IDIO-16 family (104-IDIO-16,
  104-IDIO-16E, 104-IDO-16, 104-IDIO-8, 104-IDIO-8E, 104-IDO-8). The
  base port addresses for the devices may be configured via the base
  module parameter. The interrupt line numbers for the devices may be
  configured via the irq module parameter.

GPIO_104_IDI_48
  Enables GPIO support for the ACCES 104-IDI-48 family (104-IDI-48A,
  104-IDI-48AC, 104-IDI-48B, 104-IDI-48BC). The base port addresses for
  the devices may be configured via the base module parameter. The
  interrupt line numbers for the devices may be configured via the irq
  module parameter.

GPIO_74X164
  Driver for 74x164 compatible serial-in/parallel-out 8-outputs
  shift registers. This driver can be used to provide access
  to more gpio outputs.

GPIO_74XX_MMIO
  Say yes here to support GPIO functionality for 74xx-compatible ICs
  with MMIO access. Compatible models include:
    1 bit:        741G125 (Input), 741G74 (Output)
    2 bits:        742G125 (Input), 7474 (Output)
    4 bits:        74125 (Input), 74175 (Output)
    6 bits:        74365 (Input), 74174 (Output)
    8 bits:        74244 (Input), 74273 (Output)
    16 bits:        741624 (Input), 7416374 (Output)

GPIO_ACPI
  No help

GPIO_ADNP
  This option enables support for N GPIOs found on Avionic Design
  I2C GPIO expanders. The register space will be extended by powers
  of two, so the controller will need to accommodate for that. For
  example: if a controller provides 48 pins, 6 registers will be
  enough to represent all pins, but the driver will assume a
  register layout for 64 pins (8 registers).

GPIO_ADP5520
  This option enables support for on-chip GPIO found
  on Analog Devices ADP5520 PMICs.

GPIO_ADP5588
  This option enables support for 18 GPIOs found
  on Analog Devices ADP5588 GPIO Expanders.

GPIO_ADP5588_IRQ
  Say yes here to enable the adp5588 to be used as an interrupt
  controller. It requires the driver to be built in the kernel.

GPIO_AGGREGATOR
  Say yes here to enable the GPIO Aggregator, which provides a way to
  aggregate existing GPIO lines into a new virtual GPIO chip.
  This can serve the following purposes:
    - Assign permissions for a collection of GPIO lines to a user,
    - Export a collection of GPIO lines to a virtual machine,
    - Provide a generic driver for a GPIO-operated device in an
      industrial control context, to be operated from userspace using
      the GPIO chardev interface.

GPIO_ALTERA
  Say Y or M here to build support for the Altera PIO device.
  
  If driver is built as a module it will be called gpio-altera.

GPIO_ALTERA_A10SR
  Driver for Arria10 Development Kit GPIO expansion which
  includes reads of pushbuttons and DIP switches as well
  as writes to LEDs.

GPIO_AMD8111
  The AMD 8111 south bridge contains 32 GPIO pins which can be used.
  
  Note, that usually system firmware/ACPI handles GPIO pins on their
  own and users might easily break their systems with uncarefull usage
  of this driver!
  
  If unsure, say N

GPIO_AMDPT
  driver for GPIO functionality on Promontory IOHub
  Require ACPI ASL code to enumerate as a platform device.

GPIO_AMD_FCH
  This option enables driver for GPIO on AMDs Fusion Controller Hub,
  as found on G-series SOCs (eg. GX-412TC)
  
  Note: This driver doesn't registers itself automatically, as it
  needs to be provided with platform specific configuration.
  (See eg. CONFIG_PCENGINES_APU2.)

GPIO_ARIZONA
  Support for GPIOs on Wolfson Arizona class devices.

GPIO_ASPEED
  Say Y here to support Aspeed AST2400 and AST2500 GPIO controllers.

GPIO_ASPEED_SGPIO
  Say Y here to support Aspeed AST2500 SGPIO functionality.

GPIO_ATH79
  Select this option to enable GPIO driver for
  Atheros AR71XX/AR724X/AR913X SoC devices.

GPIO_BCM_KONA
  Turn on GPIO support for Broadcom "Kona" chips.

GPIO_BCM_XGS_IPROC
  Say yes here to enable GPIO support for Broadcom XGS iProc SoCs.

GPIO_BD70528
  Support for GPIOs on ROHM BD70528 PMIC. There are four GPIOs
  available on the ROHM PMIC in total. The GPIOs can also
  generate interrupts.
  
  This driver can also be built as a module. If so, the module
  will be called gpio-bd70528.

GPIO_BD71828
  Support for GPIOs on ROHM BD71828 PMIC. There are three GPIOs
  available on the ROHM PMIC in total. The GPIOs are limited to
  outputs only and pins must be configured to GPIO outputs by
  OTP. Enable this only if you want to use these pins as outputs.
  
  This driver can also be built as a module. If so, the module
  will be called gpio-bd71828.

GPIO_BD9571MWV
  Support for GPIOs on ROHM BD9571 PMIC. There are two GPIOs
  available on the ROHM PMIC in total, both of which can also
  generate interrupts.
  
  This driver can also be built as a module. If so, the module
  will be called gpio-bd9571mwv.

GPIO_BRCMSTB
  Say yes here to enable GPIO support for Broadcom STB (BCM7XXX) SoCs.

GPIO_BT8XX
  The BT8xx frame grabber chip has 24 GPIO pins that can be abused
  as a cheap PCI GPIO card.
  
  This chip can be found on Miro, Hauppauge and STB TV-cards.
  
  The card needs to be physically altered for using it as a
  GPIO card. For more information on how to build a GPIO card
  from a BT8xx TV card, see the documentation file at
  Documentation/driver-api/gpio/bt8xxgpio.rst
  
  If unsure, say N.

GPIO_CADENCE
  Say yes here to enable support for Cadence GPIO controller.

GPIO_CDEV
  Say Y here to add the character device /dev/gpiochipN interface
  for GPIOs. The character device allows userspace to control GPIOs
  using ioctl() operations.
  
  Only say N if you are sure that the GPIO character device is not
  required.
  
  If unsure, say Y.

GPIO_CDEV_V1
  Say Y here to support version 1 of the GPIO CDEV ABI.
  
  This ABI version is deprecated.
  Please use the latest ABI for new developments.
  
  If unsure, say Y.

GPIO_CLPS711X
  Say yes here to support GPIO on CLPS711X SoCs.

GPIO_CRYSTAL_COVE
  Support for GPIO pins on Crystal Cove PMIC.
  
  Say Yes if you have a Intel SoC based tablet with Crystal Cove PMIC
  inside.
  
  This driver can also be built as a module. If so, the module will be
  called gpio-crystalcove.

GPIO_CS5535
  The AMD CS5535 and CS5536 southbridges support 28 GPIO pins that
  can be used for quite a number of things.  The CS5535/6 is found on
  AMD Geode and Lemote Yeeloong devices.
  
  If unsure, say N.

GPIO_DA9052
  Say yes here to enable the GPIO driver for the DA9052 chip.

GPIO_DA9055
  Say yes here to enable the GPIO driver for the DA9055 chip.
  
  The Dialog DA9055 PMIC chip has 3 GPIO pins that can be
  be controller by this driver.
  
  If driver is built as a module it will be called gpio-da9055.

GPIO_DAVINCI
  Say yes here to enable GPIO support for TI Davinci/Keystone SoCs.

GPIO_DLN2
  Select this option to enable GPIO driver for the Diolan DLN2
  board.
  
  This driver can also be built as a module. If so, the module
  will be called gpio-dln2.

GPIO_DWAPB
  Say Y or M here to build support for the Synopsys DesignWare APB
  GPIO block.

GPIO_EIC_SPRD
  Say yes here to support Spreadtrum EIC device.

GPIO_EM
  Say yes here to support GPIO on Renesas Emma Mobile SoCs.

GPIO_EP93XX
  No help

GPIO_EXAR
  Selecting this option will enable handling of GPIO pins present
  on Exar XR17V352/354/358 chips.

GPIO_F7188X
  This option enables support for GPIOs found on Fintek Super-I/O
  chips F71869, F71869A, F71882FG, F71889F and F81866.
  
  To compile this driver as a module, choose M here: the module will
  be called f7188x-gpio.

GPIO_FTGPIO010
  Support for common GPIOs from the Faraday FTGPIO010 IP core, found in
  Cortina systems Gemini platforms, Moxa ART and others.

GPIO_GENERIC
  No help

GPIO_GENERIC_PLATFORM
  Say yes here to support basic platform_device memory-mapped GPIO controllers.

GPIO_GE_FPGA
  Support for common GPIO functionality provided on some GE Single Board
  Computers.
  
  This driver provides basic support (configure as input or output, read
  and write pin state) for GPIO implemented in a number of GE single
  board computers.

GPIO_GPIO_MM
  Enables GPIO support for the Diamond Systems GPIO-MM and GPIO-MM-12.
  
  The Diamond Systems GPIO-MM device features 48 lines of digital I/O
  via the emulation of dual 82C55A PPI chips. This driver provides GPIO
  support for these 48 channels of digital I/O.
  
  The base port addresses for the devices may be configured via the base
  array module parameter.

GPIO_GRGPIO
  Select this to support Aeroflex Gaisler GRGPIO cores from the GRLIB
  VHDL IP core library.

GPIO_GW_PLD
  Say yes here to provide access to the Gateworks I2C PLD GPIO
  Expander. This is used at least on the Cambria GW2358-4.

GPIO_HISI
  Say Y or M here to build support for the HiSilicon GPIO controller
  driver GPIO block.
  This GPIO controller support double-edge interrupt and multi-core
  concurrent access.

GPIO_HLWD
  Select this to support the GPIO controller of the Nintendo Wii.
  
  If unsure, say N.

GPIO_ICH
  Say yes here to support the GPIO functionality of a number of Intel
  ICH-based chipsets.  Currently supported devices: ICH6, ICH7, ICH8
  ICH9, ICH10, Series 5/3400 (eg Ibex Peak), Series 6/C200 (eg
  Cougar Point), NM10 (Tiger Point), and 3100 (Whitmore Lake).
  
  If unsure, say N.

GPIO_INTEL_MID
  Say Y here to support Intel MID GPIO.

GPIO_IOP
  Say yes here to support the GPIO functionality of a number of Intel
  IOP32X or IOP33X.
  
  If unsure, say N.

GPIO_IT87
  Say yes here to support GPIO functionality of IT87xx Super I/O chips.
  
  This driver is tested with ITE IT8728 and IT8732 Super I/O chips, and
  supports the IT8761E, IT8613, IT8620E, and IT8628E Super I/O chips as
  well.
  
  To compile this driver as a module, choose M here: the module will
  be called gpio_it87

GPIO_IXP4XX
  Say yes here to support the GPIO functionality of a number of Intel
  IXP4xx series of chips.
  
  If unsure, say N.

GPIO_JANZ_TTL
  This enables support for the Janz VMOD-TTL Digital IO module.
  This driver provides support for driving the pins in output
  mode only. Input mode is not supported.

GPIO_KEMPLD
  This enables support for the PLD GPIO interface on some Kontron ETX
  and COMexpress (ETXexpress) modules.
  
  This driver can also be built as a module. If so, the module will be
  called gpio-kempld.

GPIO_LOGICVC
  Say yes here to support GPIO functionality of the Xylon LogiCVC
  programmable logic block.

GPIO_LOONGSON
  driver for GPIO functionality on Loongson-2F/3A/3B processors.

GPIO_LOONGSON1
  Say Y or M here to support GPIO on Loongson1 SoCs.

GPIO_LP3943
  GPIO driver for LP3943 MFD.
  LP3943 can be used as a GPIO expander which provides up to 16 GPIOs.
  Open drain outputs are required for this usage.

GPIO_LP873X
  This driver supports the GPO on TI Lp873x PMICs. 2 GPOs are present
  on LP873X PMICs.
  
  This driver can also be built as a module. If so, the module will be
  called gpio-lp873x.

GPIO_LP87565
  This driver supports the GPIO on TI Lp873565 PMICs. 3 GPIOs are present
  on LP87565 PMICs.
  
  This driver can also be built as a module. If so, the module will be
  called gpio-lp87565.

GPIO_LPC18XX
  Select this option to enable GPIO driver for
  NXP LPC18XX/43XX devices.

GPIO_LPC32XX
  Select this option to enable GPIO driver for
  NXP LPC32XX devices.

GPIO_MADERA
  Support for GPIOs on Cirrus Logic Madera class codecs.

GPIO_MAX3191X
  GPIO driver for Maxim MAX31910, MAX31911, MAX31912, MAX31913,
  MAX31953 and MAX31963 industrial serializer, a daisy-chainable
  chip to make 8 digital 24V inputs available via SPI.  Supports
  CRC checksums to guard against electromagnetic interference,
  as well as undervoltage and overtemperature detection.

GPIO_MAX7300
  GPIO driver for Maxim MAX7300 I2C-based GPIO expander.

GPIO_MAX7301
  GPIO driver for Maxim MAX7301 SPI-based GPIO expander.

GPIO_MAX730X
  No help

GPIO_MAX732X
  Say yes here to support the MAX7319, MAX7320-7327 series of I2C
  Port Expanders. Each IO port on these chips has a fixed role of
  Input (designated by 'I'), Push-Pull Output ('O'), or Open-Drain
  Input and Output (designed by 'P'). The combinations are listed
  below:
  
  8 bits:       max7319 (8I), max7320 (8O), max7321 (8P),
                max7322 (4I4O), max7323 (4P4O)
  
  16 bits:      max7324 (8I8O), max7325 (8P8O),
                max7326 (4I12O), max7327 (4P12O)
  
  Board setup code must specify the model to use, and the start
  number for these GPIOs.

GPIO_MAX732X_IRQ
  Say yes here to enable the max732x to be used as an interrupt
  controller. It requires the driver to be built in the kernel.

GPIO_MAX77620
  GPIO driver for MAX77620 and MAX20024 PMIC from Maxim Semiconductor.
  MAX77620 PMIC has 8 pins that can be configured as GPIOs. The
  driver also provides interrupt support for each of the gpios.
  Say yes here to enable the max77620 to be used as gpio controller.

GPIO_MAX77650
  GPIO driver for MAX77650/77651 PMIC from Maxim Semiconductor.
  These chips have a single pin that can be configured as GPIO.

GPIO_MB86S7X
  Say yes here to support the GPIO controller in Fujitsu MB86S70 SoCs.

GPIO_MC33880
  SPI driver for Freescale MC33880 high-side/low-side switch.
  This provides GPIO interface supporting inputs and outputs.

GPIO_MC9S08DZ60
  Select this to enable the MC9S08DZ60 GPIO driver

GPIO_MENZ127
  Say yes here to support the MEN 16Z127 GPIO Controller

GPIO_MERRIFIELD
  Say Y here to support Intel Merrifield GPIO.

GPIO_MLXBF
  Say Y here if you want GPIO support on Mellanox BlueField SoC.

GPIO_MLXBF2
  Say Y here if you want GPIO support on Mellanox BlueField 2 SoC.

GPIO_ML_IOH
  ML7213 is companion chip for Intel Atom E6xx series.
  This driver can be used for OKI SEMICONDUCTOR ML7213 IOH(Input/Output
  Hub) which is for IVI(In-Vehicle Infotainment) use.
  This driver can access the IOH's GPIO device.

GPIO_MM_LANTIQ
  This enables support for memory mapped GPIOs on the External Bus Unit
  (EBU) found on Lantiq SoCs. The gpios are output only as they are
  created by attaching a 16bit latch to the bus.

GPIO_MOCKUP
  This enables GPIO Testing driver, which provides a way to test GPIO
  subsystem through sysfs(or char device) and debugfs. GPIO_SYSFS
  must be selected for this test.
  User could use it through the script in
  tools/testing/selftests/gpio/gpio-mockup.sh. Reference the usage in
  it.

GPIO_MOXTET
  Say yes here if you are building for the Turris Mox router.
  This is the driver needed for configuring the GPIOs via the Moxtet
  bus. For example the Mox module with SFP cage needs this driver
  so that phylink can use corresponding GPIOs.

GPIO_MPC5200
  No help

GPIO_MPC8XXX
  Say Y here if you're going to use hardware that connects to the
  MPC512x/831x/834x/837x/8572/8610/QorIQ GPIOs.

GPIO_MSC313
  Say Y here to support the main GPIO block on MStar/SigmaStar
  ARMv7 based SoCs.

GPIO_MSIC
  Enable support for GPIO on intel MSIC controllers found in
  intel MID devices

GPIO_MT7621
  Say yes here to support the Mediatek MT7621 SoC GPIO device

GPIO_MVEBU
  No help

GPIO_MXC
  No help

GPIO_MXS
  No help

GPIO_OCTEON
  Say yes here to support the on-chip GPIO lines on the OCTEON
  family of SOCs.

GPIO_OMAP
  Say yes here to enable GPIO support for TI OMAP SoCs.

GPIO_PALMAS
  Select this option to enable GPIO driver for the TI PALMAS
  series chip family.

GPIO_PCA953X
  Say yes here to provide access to several register-oriented
  SMBus I/O expanders, made mostly by NXP or TI.  Compatible
  models include:
  
  4 bits:       pca9536, pca9537
  
  8 bits:       max7310, max7315, pca6107, pca9534, pca9538, pca9554,
                pca9556, pca9557, pca9574, tca6408, tca9554, xra1202
  
  16 bits:      max7312, max7313, pca9535, pca9539, pca9555, pca9575,
                tca6416
  
  24 bits:      tca6424
  
  40 bits:      pca9505, pca9698

GPIO_PCA953X_IRQ
  Say yes here to enable the pca953x to be used as an interrupt
  controller. It requires the driver to be built in the kernel.

GPIO_PCA9570
  Say yes here to enable the GPO driver for the NXP PCA9570 chip.
  
  To compile this driver as a module, choose M here: the module will
  be called gpio-pca9570.

GPIO_PCF857X
  Say yes here to provide access to most "quasi-bidirectional" I2C
  GPIO expanders used for additional digital outputs or inputs.
  Most of these parts are from NXP, though TI is a second source for
  some of them.  Compatible models include:
  
  8 bits:   pcf8574, pcf8574a, pca8574, pca8574a,
            pca9670, pca9672, pca9674, pca9674a,
            max7328, max7329
  
  16 bits:  pcf8575, pcf8575c, pca8575,
            pca9671, pca9673, pca9675
  
  Your board setup code will need to declare the expanders in
  use, and assign numbers to the GPIOs they expose.  Those GPIOs
  can then be used from drivers and other kernel code, just like
  other GPIOs, but only accessible from task contexts.
  
  This driver provides an in-kernel interface to those GPIOs using
  platform-neutral GPIO calls.

GPIO_PCH
  This driver is for PCH(Platform controller Hub) GPIO of Intel Topcliff
  which is an IOH(Input/Output Hub) for x86 embedded processor.
  This driver can access PCH GPIO device.
  
  This driver also can be used for LAPIS Semiconductor IOH(Input/
  Output Hub), ML7223 and ML7831.
  ML7223 IOH is for MP(Media Phone) use.
  ML7831 IOH is for general purpose use.
  ML7223/ML7831 is companion chip for Intel Atom E6xx series.
  ML7223/ML7831 is completely compatible for Intel EG20T PCH.

GPIO_PCIE_IDIO_24
  Enables GPIO support for the ACCES PCIe-IDIO-24 family (PCIe-IDIO-24,
  PCIe-IDI-24, PCIe-IDO-24, PCIe-IDIO-12). An interrupt is generated
  when any of the inputs change state (low to high or high to low).
  Input filter control is not supported by this driver, and the input
  filters are deactivated by this driver.

GPIO_PCI_IDIO_16
  Enables GPIO support for the ACCES PCI-IDIO-16. An interrupt is
  generated when any of the inputs change state (low to high or high to
  low). Input filter control is not supported by this driver, and the
  input filters are deactivated by this driver.

GPIO_PISOSR
  GPIO driver for SPI compatible parallel-in/serial-out shift
  registers. These are input only devices.

GPIO_PL061
  Say yes here to support the PrimeCell PL061 GPIO device

GPIO_PMIC_EIC_SPRD
  Say yes here to support Spreadtrum PMIC EIC device.

GPIO_PXA
  Say yes here to support the PXA GPIO device

GPIO_RASPBERRYPI_EXP
  Turn on GPIO support for the expander on Raspberry Pi 3 boards, using
  the firmware mailbox to communicate with VideoCore on BCM283x chips.

GPIO_RC5T583
  Select this option to enable GPIO driver for the Ricoh RC5T583
  chip family.
  This driver provides the support for driving/reading the gpio pins
  of RC5T583 device through standard gpio library.

GPIO_RCAR
  Say yes here to support GPIO on Renesas R-Car SoCs.

GPIO_RDA
  Say Y here to support RDA Micro GPIO controller.

GPIO_RDC321X
  Support for the RDC R321x SoC GPIOs over southbridge
  PCI configuration space.

GPIO_REG
  A 32-bit single register GPIO fixed in/out implementation.  This
  can be used to represent any register as a set of GPIO signals.

GPIO_REGMAP
  No help

GPIO_SAMA5D2_PIOBU
  Say yes here to use the PIOBU pins as GPIOs.
  
  PIOBU pins on the SAMA5D2 can be used as GPIOs.
  The difference from regular GPIOs is that they
  maintain their value during backup/self-refresh.

GPIO_SCH
  Say yes here to support GPIO interface on Intel Poulsbo SCH,
  Intel Tunnel Creek processor, Intel Centerton processor or
  Intel Quark X1000 SoC.
  
  The Intel SCH contains a total of 14 GPIO pins. Ten GPIOs are
  powered by the core power rail and are turned off during sleep
  modes (S3 and higher). The remaining four GPIOs are powered by
  the Intel SCH suspend power supply. These GPIOs remain
  active during S3. The suspend powered GPIOs can be used to wake the
  system from the Suspend-to-RAM state.
  
  The Intel Tunnel Creek processor has 5 GPIOs powered by the
  core power rail and 9 from suspend power supply.
  
  The Intel Centerton processor has a total of 30 GPIO pins.
  Twenty-one are powered by the core power rail and 9 from the
  suspend power supply.
  
  The Intel Quark X1000 SoC has 2 GPIOs powered by the core
  power well and 6 from the suspend power well.

GPIO_SCH311X
  Driver to enable the GPIOs found on SMSC SMSC SCH3112, SCH3114 and
  SCH3116 "Super I/O" chipsets.
  
  To compile this driver as a module, choose M here: the module will
  be called gpio-sch311x.

GPIO_SIFIVE
  Say yes here to support the GPIO device on SiFive SoCs.

GPIO_SIOX
  Say yes here to support SIOX I/O devices. These are units connected
  via a SIOX bus and have a number of fixed-direction I/O lines.

GPIO_SL28CPLD
  This enables support for the GPIOs found on the Kontron sl28 CPLD.
  
  This driver can also be built as a module. If so, the module will be
  called gpio-sl28cpld.

GPIO_SNPS_CREG
  This driver supports GPIOs via CREG on various Synopsys SoCs.
  This is a single-register MMIO GPIO driver for complex cases
  where only several fields in register belong to GPIO lines and
  each GPIO line owns a field with different length and on/off value.

GPIO_SODAVILLE
  Say Y here to support Intel Sodaville GPIO.

GPIO_SPEAR_SPICS
  Say yes here to support ST SPEAr SPI Chip Select as GPIO device

GPIO_SPRD
  Say yes here to support Spreadtrum GPIO device.

GPIO_STA2X11
  Say yes here to support the STA2x11/ConneXt GPIO device.
  The GPIO module has 128 GPIO pins with alternate functions.

GPIO_STMPE
  This enables support for the GPIOs found on the STMPE I/O
  Expanders.

GPIO_STP_XWAY
  This enables support for the Serial To Parallel (STP) unit found on
  XWAY SoC. The STP allows the SoC to drive a shift registers cascade,
  that can be up to 24 bit. This peripheral is aimed at driving leds.
  Some of the gpios/leds can be auto updated by the soc with dsl and
  phy status.

GPIO_SYSCON
  Say yes here to support GPIO functionality though SYSCON driver.

GPIO_SYSFS
  Say Y here to add the legacy sysfs interface for GPIOs.
  
  This ABI is deprecated. If you want to use GPIO from userspace,
  use the character device /dev/gpiochipN with the appropriate
  ioctl() operations instead.

GPIO_TB0219
  No help

GPIO_TB10X
  No help

GPIO_TC3589X
  This enables support for the GPIOs found on the TC3589X
  I/O Expander.

GPIO_TEGRA
  Say yes here to support GPIO pins on NVIDIA Tegra SoCs.

GPIO_TEGRA186
  Say yes here to support GPIO pins on NVIDIA Tegra186 SoCs.

GPIO_THUNDERX
  Say yes here to support the on-chip GPIO lines on the ThunderX
  and OCTEON-TX families of SoCs.

GPIO_TIMBERDALE
  Add support for the GPIO IP in the timberdale FPGA.

GPIO_TPIC2810
  Say yes here to enable the GPO driver for the TI TPIC2810 chip.
  
  To compile this driver as a module, choose M here: the module will
  be called gpio-tpic2810.

GPIO_TPS65086
  This driver supports the GPO on TI TPS65086x PMICs.

GPIO_TPS65218
  Select this option to enable GPIO driver for the TPS65218
  chip family.

GPIO_TPS6586X
  Select this option to enable GPIO driver for the TPS6586X
  chip family.

GPIO_TPS65910
  Select this option to enable GPIO driver for the TPS65910
  chip family.

GPIO_TPS65912
  This driver supports TPS65912 gpio chip

GPIO_TPS68470
  Select this option to enable GPIO driver for the TPS68470
  chip family.
  There are 7 GPIOs and few sensor related GPIOs supported
  by the TPS68470. While the 7 GPIOs can be configured as
  input or output as appropriate, the sensor related GPIOs
  are "output only" GPIOs.
  
  This driver config is bool, as the GPIO functionality
  of the TPS68470 must be available before dependent
  drivers are loaded.

GPIO_TQMX86
  This driver supports GPIO on the TQMX86 IO controller.

GPIO_TS4800
  This driver support TS-4800 FPGA GPIO controllers.

GPIO_TS4900
  Say yes here to enabled the GPIO driver for Technologic's FPGA core.
  Series supported include TS-4100, TS-4900, TS-7970 and TS-7990.

GPIO_TS5500
  This driver supports Digital I/O exposed by pin blocks found on some
  Technologic Systems platforms. It includes, but is not limited to, 3
  blocks of the TS-5500: DIO1, DIO2 and the LCD port, and the TS-5600
  LCD port.

GPIO_TWL4030
  Say yes here to access the GPIO signals of various multi-function
  power management chips from Texas Instruments.

GPIO_TWL6040
  Say yes here to access the GPO signals of twl6040
  audio chip from Texas Instruments.

GPIO_UCB1400
  This enables support for the Philips UCB1400 GPIO pins.
  The UCB1400 is an AC97 audio codec.

GPIO_UNIPHIER
  Say yes here to support UniPhier GPIOs.

GPIO_VF610
  Say yes here to support Vybrid vf610 GPIOs.

GPIO_VIPERBOARD
  Say yes here to access the GPIO signals of Nano River
  Technologies Viperboard. There are two GPIO chips on the
  board: gpioa and gpiob.
  See viperboard API specification and Nano
  River Tech's viperboard.h for detailed meaning
  of the module parameters.

GPIO_VR41XX
  Say yes here to support the NEC VR4100 series General-purpose I/O Uint

GPIO_VX855
  Support access to the VX855/VX875 GPIO lines through the gpio library.
  
  This driver provides common support for accessing the device,
  additional drivers must be enabled in order to use the
  functionality of the device.

GPIO_WATCHDOG
  If you say yes here you get support for watchdog device
  controlled through GPIO-line.

GPIO_WATCHDOG_ARCH_INITCALL
  In some situations, the default initcall level (module_init)
  in not early enough in the boot process to avoid the watchdog
  to be triggered.
  If you say yes here, the initcall level would be raised to
  arch_initcall.
  If in doubt, say N.

GPIO_WCD934X
  This driver is to supprot GPIO block found on the Qualcomm Technologies
  Inc WCD9340/WCD9341 Audio Codec.

GPIO_WHISKEY_COVE
  Support for GPIO pins on Whiskey Cove PMIC.
  
  Say Yes if you have a Intel SoC based tablet with Whiskey Cove PMIC
  inside.
  
  This driver can also be built as a module. If so, the module will be
  called gpio-wcove.

GPIO_WINBOND
  This option enables support for GPIOs found on Winbond Super I/O
  chips.
  Currently, only W83627UHG (also known as Nuvoton NCT6627UD) is
  supported.
  
  You will need to provide a module parameter "gpios", or a
  boot-time parameter "gpio_winbond.gpios" with a bitmask of GPIO
  ports to enable (bit 0 is GPIO1, bit 1 is GPIO2, etc.).
  
  To compile this driver as a module, choose M here: the module will
  be called gpio-winbond.

GPIO_WM831X
  Say yes here to access the GPIO signals of WM831x power management
  chips from Wolfson Microelectronics.

GPIO_WM8350
  Say yes here to access the GPIO signals of WM8350 power management
  chips from Wolfson Microelectronics.

GPIO_WM8994
  Say yes here to access the GPIO signals of WM8994 audio hub
  CODECs from Wolfson Microelectronics.

GPIO_WS16C48
  Enables GPIO support for the WinSystems WS16C48. The base port
  addresses for the devices may be configured via the base module
  parameter. The interrupt line numbers for the devices may be
  configured via the irq module parameter.

GPIO_XGENE
  This driver is to support the GPIO block within the APM X-Gene SoC
  platform's generic flash controller. The GPIO pins are muxed with
  the generic flash controller's address and data pins. Say yes
  here to enable the GFC GPIO functionality.

GPIO_XGENE_SB
  This driver supports the GPIO block within the APM X-Gene
  Standby Domain. Say yes here to enable the GPIO functionality.

GPIO_XILINX
  Say yes here to support the Xilinx FPGA GPIO device

GPIO_XLP
  This driver provides support for GPIO interface on Netlogic XLP MIPS64
  SoCs. Currently supported XLP variants are XLP8XX, XLP3XX, XLP2XX,
  XLP9XX and XLP5XX. The same GPIO controller block is also present in
  Cavium's ThunderX2 CN99XX SoCs.
  
  If unsure, say N.

GPIO_XRA1403
  GPIO driver for EXAR XRA1403 16-bit SPI-based GPIO expander.

GPIO_XTENSA
  Say yes here to support the Xtensa internal GPIO32 IMPWIRE (input)
  and EXPSTATE (output) ports

GPIO_ZEVIO
  Say yes here to support the GPIO controller in LSI ZEVIO SoCs.

GPIO_ZX
  Say yes here to support the GPIO device on ZTE ZX SoCs.

GPIO_ZYNQ
  Say yes here to support Xilinx Zynq GPIO controller.

GRACE_PERIOD
  No help

GREENASIA_FF
  Say Y here if you have a GreenAsia (Product ID 0x12) based game controller
  (like MANTA Warrior MM816 and SpeedLink Strike2 SL-6635) or adapter
  and want to enable force feedback support for it.

GRETH
  Say Y here if you want to use the Aeroflex Gaisler GRETH Ethernet MAC.

GREYBUS
  This option enables the Greybus driver core.  Greybus is a
  hardware protocol that was designed to provide Unipro with a
  sane application layer.  It was originally designed for the
  ARA project, a module phone system, but has shown up in other
  phones, and can be tunneled over other busses in order to
  control hardware devices.
  
  Say Y here to enable support for these types of drivers.
  
  To compile this code as a module, choose M here: the module
  will be called greybus.ko

GREYBUS_ARCHE
  Select this option if you have an Arche device.
  
  To compile this code as a module, chose M here: the module
  will be called gb-arche.ko

GREYBUS_AUDIO
  Select this option if you have a device that follows the
  Greybus Audio Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-audio.ko

GREYBUS_AUDIO_APB_CODEC
  Select this option if you have a Toshiba APB device that has I2S
  ports and acts as a Greybus "Dummy codec". This device is a
  bridge from an APB-I2S port to a Unipro network.
  
  To compile this code as a module, chose M here: the module
  will be called gb-audio-codec.ko

GREYBUS_BOOTROM
  Select this option if you have a device that follows the
  Greybus Bootrom Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-bootrom.ko

GREYBUS_BRIDGED_PHY
  Select this option to pick from a variety of Greybus Bridged
  PHY class drivers.  These drivers emulate a number of
  different "traditional" busses by tunneling them over Greybus.
  Examples of this include serial, SPI, USB, and others.
  
  To compile this code as a module, chose M here: the module
  will be called gb-phy.ko

GREYBUS_CAMERA
  Select this option if you have a device that follows the
  Greybus Camera Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-camera.ko

GREYBUS_ES2
  Select this option if you have a Toshiba ES3 USB device that
  acts as a Greybus "host controller".  This device is a bridge
  from a USB device to a Unipro network.
  
  To compile this code as a module, choose M here: the module
  will be called gb-es2.ko

GREYBUS_FIRMWARE
  Select this option if you have a device that follows the
  Greybus Firmware Download Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-firmware.ko

GREYBUS_GPIO
  Select this option if you have a device that follows the
  Greybus GPIO Bridged PHY Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-gpio.ko

GREYBUS_HID
  Select this option if you have a device that follows the
  Greybus HID Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-hid.ko

GREYBUS_I2C
  Select this option if you have a device that follows the
  Greybus I2C Bridged PHY Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-i2c.ko

GREYBUS_LIGHT
  Select this option if you have a device that follows the
  Greybus LED Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-light.ko

GREYBUS_LOG
  Select this option if you have a device that follows the
  Greybus Debug Log Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-log.ko

GREYBUS_LOOPBACK
  Select this option if you have a device that follows the
  Greybus Debug Log Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-log.ko

GREYBUS_POWER
  Select this option if you have a device that follows the
  Greybus Powersupply Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-power-supply.ko

GREYBUS_PWM
  Select this option if you have a device that follows the
  Greybus PWM Bridged PHY Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-pwm.ko

GREYBUS_RAW
  Select this option if you have a device that follows the
  Greybus Raw Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-raw.ko

GREYBUS_SDIO
  Select this option if you have a device that follows the
  Greybus SDIO Bridged PHY Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-sdio.ko

GREYBUS_SPI
  Select this option if you have a device that follows the
  Greybus SPI Bridged PHY Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-spi.ko

GREYBUS_UART
  Select this option if you have a device that follows the
  Greybus UART Bridged PHY Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-uart.ko

GREYBUS_USB
  Select this option if you have a device that follows the
  Greybus USB Host Bridged PHY Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-usb.ko

GREYBUS_VIBRATOR
  Select this option if you have a device that follows the
  Greybus Vibrator Motor Class specification.
  
  To compile this code as a module, chose M here: the module
  will be called gb-vibrator.ko

GRO_CELLS
  No help

GS_FPGABOOT
  Xilinx FPGA firmware download module

GTP
  This allows one to create gtp virtual interfaces that provide
  the GPRS Tunneling Protocol datapath (GTP-U). This tunneling protocol
  is used to prevent subscribers from accessing mobile carrier core
  network infrastructure. This driver requires a userspace software that
  implements the signaling protocol (GTP-C) to update its PDP context
  base, such as OpenGGSN <http://git.osmocom.org/openggsn/). This
  tunneling protocol is implemented according to the GSM TS 09.60 and
  3GPP TS 29.060 standards.
  
  To compile this drivers as a module, choose M here: the module
  will be called gtp.

GUP_GET_PTE_LOW_HIGH
  No help

GUP_TEST
  Provides /sys/kernel/debug/gup_test, which in turn provides a way
  to make ioctl calls that can launch kernel-based unit tests for
  the get_user_pages*() and pin_user_pages*() family of API calls.
  
  These tests include benchmark testing of the _fast variants of
  get_user_pages*() and pin_user_pages*(), as well as smoke tests of
  the non-_fast variants.
  
  There is also a sub-test that allows running dump_page() on any
  of up to eight pages (selected by command line args) within the
  range of user-space addresses. These pages are either pinned via
  pin_user_pages*(), or pinned via get_user_pages*(), as specified
  by other command line arguments.
  
  See tools/testing/selftests/vm/gup_test.c

GVE
  This driver supports Google Virtual NIC (gVNIC)"
  
  To compile this driver as a module, choose M here.
  The module will be called gve.

GVP11_SCSI
  If you have a Great Valley Products Series II SCSI controller,
  answer Y. Also say Y if you have a later model of GVP SCSI
  controller (such as the GVP A4008 or a Combo board). Otherwise,
  answer N. This driver does NOT work for the T-Rex series of
  accelerators from TekMagic and GVP-M.
  
  To compile this driver as a module, choose M here: the
  module will be called gvp11.

GX6605S_TIMER
  This option enables support for gx6605s SOC's timer.

H8300_TMR16
  This enables the 16 bits timer for the H8300 platform with the
  H83069 CPU.

H8300_TMR8
  This enables the 8 bits timer for the H8300 platform.

H8300_TPU
  This enables the clocksource for the H8300 platform with the
  H8S2678 CPU.

HABANA_AI
  Enables PCIe card driver for Habana's AI Processors (AIP) that are
  designed to accelerate Deep Learning inference and training workloads.
  
  The driver manages the PCIe devices and provides IOCTL interface for
  the user to submit workloads to the devices.
  
  The user-space interface is described in
  include/uapi/misc/habanalabs.h
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called habanalabs.

HALTPOLL_CPUIDLE
  This option enables halt poll cpuidle driver, which allows to poll
  before halting in the guest (more efficient than polling in the
  host via halt_poll_ns for some scenarios).

HAMACHI
  If you have a Gigabit Ethernet card of this type, say Y here.
  
  To compile this driver as a module, choose M here. The module will be
  called hamachi.

HAMRADIO
  If you want to connect your Linux box to an amateur radio, answer Y
  here. You want to read <https://www.tapr.org/>
  and more specifically about AX.25 on Linux
  <http://www.linux-ax25.org/>.
  
  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about amateur radio.

HANDLE_DOMAIN_IRQ
  No help

HANGCHECK_TIMER
  The hangcheck-timer module detects when the system has gone
  out to lunch past a certain margin.  It can reboot the system
  or merely print a warning.

HAPPYMEAL
  This driver supports the "hme" interface present on most Ultra
  systems and as an option on older Sbus systems. This driver supports
  both PCI and Sbus devices. This driver also supports the "qfe" quad
  100baseT device available in both PCI and Sbus configurations.
  
  To compile this driver as a module, choose M here: the module
  will be called sunhme.

HARDENED_USERCOPY
  This option checks for obviously wrong memory regions when
  copying memory to/from the kernel (via copy_to_user() and
  copy_from_user() functions) by rejecting memory ranges that
  are larger than the specified heap object, span multiple
  separately allocated pages, are not on the process stack,
  or are part of the kernel text. This kills entire classes
  of heap overflow exploits and similar kernel memory exposures.

HARDENED_USERCOPY_FALLBACK
  This is a temporary option that allows missing usercopy whitelists
  to be discovered via a WARN() to the kernel log, instead of
  rejecting the copy, falling back to non-whitelisted hardened
  usercopy that checks the slab allocation size instead of the
  whitelist size. This option will be removed once it seems like
  all missing usercopy whitelists have been identified and fixed.
  Booting with "slab_common.usercopy_fallback=Y/N" can change
  this setting.

HARDENED_USERCOPY_PAGESPAN
  When a multi-page allocation is done without __GFP_COMP,
  hardened usercopy will reject attempts to copy it. There are,
  however, several cases of this in the kernel that have not all
  been removed. This config is intended to be used only while
  trying to find such users.

HARDIRQS_SW_RESEND
  No help

HARDLOCKUP_CHECK_TIMESTAMP
  No help

HARDLOCKUP_DETECTOR
  Say Y here to enable the kernel to act as a watchdog to detect
  hard lockups.
  
  Hardlockups are bugs that cause the CPU to loop in kernel mode
  for more than 10 seconds, without letting other interrupts have a
  chance to run.  The current stack trace is displayed upon detection
  and the system will stay locked up.

HARDLOCKUP_DETECTOR_PERF
  No help

HAS_DMA
  No help

HAS_IOMEM
  No help

HAS_IOPORT_MAP
  No help

HAS_TXX9_ACLC
  No help

HAS_TXX9_SERIAL
  No help

HAVE_64BIT_ALIGNED_ACCESS
  Some architectures require 64 bit accesses to be 64 bit
  aligned, which also requires structs containing 64 bit values
  to be 64 bit aligned too. This includes some 32 bit
  architectures which can do 64 bit accesses, as well as 64 bit
  architectures without unaligned access.
  
  This symbol should be selected by an architecture if 64 bit
  accesses are required to be 64 bit aligned in this way even
  though it is not a 64 bit architecture.
  
  See Documentation/unaligned-memory-access.txt for more
  information on the topic of unaligned memory accesses.

HAVE_ACPI_APEI
  No help

HAVE_ACPI_APEI_NMI
  No help

HAVE_ALIGNED_STRUCT_PAGE
  This makes sure that struct pages are double word aligned and that
  e.g. the SLUB allocator can perform double word atomic operations
  on a struct page for better performance. However selecting this
  might increase the size of a struct page by a word.

HAVE_AOUT
  No help

HAVE_ARCH_AUDITSYSCALL
  No help

HAVE_ARCH_BITREVERSE
  This option enables the use of hardware bit-reversal instructions on
  architectures which support such operations.

HAVE_ARCH_COMPAT_MMAP_BASES
  This allows 64bit applications to invoke 32-bit mmap() syscall
  and vice-versa 32-bit applications to call 64-bit mmap().
  Required for applications doing different bitness syscalls.

HAVE_ARCH_COMPILER_H
  An architecture can select this if it provides an
  asm/compiler.h header that should be included after
  linux/compiler-*.h in order to override macro definitions that those
  headers generally provide.

HAVE_ARCH_HASH
  If this is set, the architecture provides an <asm/hash.h>
  file which provides platform-specific implementations of some
  functions in <linux/hash.h> or fs/namei.c.

HAVE_ARCH_HUGE_VMAP
  No help

HAVE_ARCH_JUMP_LABEL
  No help

HAVE_ARCH_JUMP_LABEL_RELATIVE
  No help

HAVE_ARCH_KASAN
  No help

HAVE_ARCH_KASAN_HW_TAGS
  No help

HAVE_ARCH_KASAN_SW_TAGS
  No help

HAVE_ARCH_KASAN_VMALLOC
  No help

HAVE_ARCH_KCSAN
  No help

HAVE_ARCH_KGDB
  No help

HAVE_ARCH_KGDB_QXFER_PKT
  No help

HAVE_ARCH_MMAP_RND_BITS
  An arch should select this symbol if it supports setting a variable
  number of bits for use in establishing the base address for mmap
  allocations, has MMU enabled and provides values for both:
  - ARCH_MMAP_RND_BITS_MIN
  - ARCH_MMAP_RND_BITS_MAX

HAVE_ARCH_MMAP_RND_COMPAT_BITS
  An arch should select this symbol if it supports running applications
  in compatibility mode, supports setting a variable number of bits for
  use in establishing the base address for mmap allocations, has MMU
  enabled and provides values for both:
  - ARCH_MMAP_RND_COMPAT_BITS_MIN
  - ARCH_MMAP_RND_COMPAT_BITS_MAX

HAVE_ARCH_NVRAM_OPS
  No help

HAVE_ARCH_PFN_VALID
  No help

HAVE_ARCH_PREL32_RELOCATIONS
  May be selected by an architecture if it supports place-relative
  32-bit relocations, both in the toolchain and in the module loader,
  in which case relative references can be used in special sections
  for PCI fixup, initcalls etc which are only half the size on 64 bit
  architectures, and don't require runtime relocation on relocatable
  kernels.

HAVE_ARCH_SECCOMP
  An arch should select this symbol to support seccomp mode 1 (the fixed
  syscall policy), and must provide an overrides for __NR_seccomp_sigreturn,
  and compat syscalls if the asm-generic/seccomp.h defaults need adjustment:
  - __NR_seccomp_read_32
  - __NR_seccomp_write_32
  - __NR_seccomp_exit_32
  - __NR_seccomp_sigreturn_32

HAVE_ARCH_SECCOMP_FILTER
  An arch should select this symbol if it provides all of these things:
  - all the requirements for HAVE_ARCH_SECCOMP
  - syscall_get_arch()
  - syscall_get_arguments()
  - syscall_rollback()
  - syscall_set_return_value()
  - SIGSYS siginfo_t support
  - secure_computing is called from a ptrace_event()-safe context
  - secure_computing return value is checked and a return value of -1
    results in the system call being skipped immediately.
  - seccomp syscall wired up
  - if !HAVE_SPARSE_SYSCALL_NR, have SECCOMP_ARCH_NATIVE,
    SECCOMP_ARCH_NATIVE_NR, SECCOMP_ARCH_NATIVE_NAME defined. If
    COMPAT is supported, have the SECCOMP_ARCH_COMPAT* defines too.

HAVE_ARCH_SOFT_DIRTY
  No help

HAVE_ARCH_STACKLEAK
  An architecture should select this if it has the code which
  fills the used part of the kernel stack with the STACKLEAK_POISON
  value before returning from system calls.

HAVE_ARCH_THREAD_STRUCT_WHITELIST
  An architecture should select this to provide hardened usercopy
  knowledge about what region of the thread_struct should be
  whitelisted for copying to userspace. Normally this is only the
  FPU registers. Specifically, arch_thread_struct_whitelist()
  should be implemented. Without this, the entire thread_struct
  field in task_struct will be left whitelisted.

HAVE_ARCH_TRACEHOOK
  No help

HAVE_ARCH_TRANSPARENT_HUGEPAGE
  No help

HAVE_ARCH_TRANSPARENT_HUGEPAGE_PUD
  No help

HAVE_ARCH_USERFAULTFD_WP
  Arch has userfaultfd write protection support

HAVE_ARCH_VMAP_STACK
  An arch should select this symbol if it can support kernel stacks
  in vmalloc space.  This means:
  
  - vmalloc space must be large enough to hold many kernel stacks.
    This may rule out many 32-bit architectures.
  
  - Stacks in vmalloc space need to work reliably.  For example, if
    vmap page tables are created on demand, either this mechanism
    needs to work while the stack points to a virtual address with
    unpopulated page tables or arch code (switch_to() and switch_mm(),
    most likely) needs to ensure that the stack's page table entries
    are populated before running on a possibly unpopulated stack.
  
  - If the stack overflows into a guard page, something reasonable
    should happen.  The definition of "reasonable" is flexible, but
    instantly rebooting without logging anything would be unfriendly.

HAVE_ARCH_WITHIN_STACK_FRAMES
  An architecture should select this if it can walk the kernel stack
  frames to determine if an object is part of either the arguments
  or local variables (i.e. that it excludes saved return addresses,
  and similar) by implementing an inline arch_within_stack_frames(),
  which is used by CONFIG_HARDENED_USERCOPY.

HAVE_ARM_SMCCC
  Include support for the Secure Monitor Call (SMC) and Hypervisor
  Call (HVC) instructions on Armv7 and above architectures.

HAVE_ARM_SMCCC_DISCOVERY
  SMCCC v1.0 lacked discoverability and hence PSCI v1.0 was updated
  to add SMCCC discovery mechanism though the PSCI firmware
  implementation of PSCI_FEATURES(SMCCC_VERSION) which returns
  success on firmware compliant to SMCCC v1.1 and above.

HAVE_ASM_MODVERSIONS
  This symbol should be selected by an architecture if it provides
  <asm/asm-prototypes.h> to support the module versioning for symbols
  exported from assembly code.

HAVE_ATOMIC_IOMAP
  No help

HAVE_BOOTMEM_INFO_NODE
  No help

HAVE_CBPF_JIT
  No help

HAVE_CLK
  The <linux/clk.h> calls support software clock gating and
  thus are a key power management tool on many systems.

HAVE_CLK_PREPARE
  No help

HAVE_CMPXCHG_DOUBLE
  No help

HAVE_CMPXCHG_LOCAL
  No help

HAVE_CONTEXT_TRACKING
  Provide kernel/user boundaries probes necessary for subsystems
  that need it, such as userspace RCU extended quiescent state.
  Syscalls need to be wrapped inside user_exit()-user_enter(), either
  optimized behind static key or through the slow path using TIF_NOHZ
  flag. Exceptions handlers must be wrapped as well. Irqs are already
  protected inside rcu_irq_enter/rcu_irq_exit() but preemption or signal
  handling on irq exit still need to be protected.

HAVE_CONTEXT_TRACKING_OFFSTACK
  Architecture neither relies on exception_enter()/exception_exit()
  nor on schedule_user(). Also preempt_schedule_notrace() and
  preempt_schedule_irq() can't be called in a preemptible section
  while context tracking is CONTEXT_USER. This feature reflects a sane
  entry implementation where the following requirements are met on
  critical entry code, ie: before user_exit() or after user_enter():
  
  - Critical entry code isn't preemptible (or better yet:
    not interruptible).
  - No use of RCU read side critical sections, unless rcu_nmi_enter()
    got called.
  - No use of instrumentation, unless instrumentation_begin() got
    called.

HAVE_C_RECORDMCOUNT
  C version of recordmcount available?

HAVE_DEBUG_BUGVERBOSE
  No help

HAVE_DEBUG_KMEMLEAK
  No help

HAVE_DEBUG_STACKOVERFLOW
  No help

HAVE_DMA_CONTIGUOUS
  No help

HAVE_DYNAMIC_FTRACE
  See Documentation/trace/ftrace-design.rst

HAVE_DYNAMIC_FTRACE_WITH_ARGS
  If this is set, then arguments and stack can be found from
  the pt_regs passed into the function callback regs parameter
  by default, even without setting the REGS flag in the ftrace_ops.
  This allows for use of regs_get_kernel_argument() and
  kernel_stack_pointer().

HAVE_DYNAMIC_FTRACE_WITH_DIRECT_CALLS
  No help

HAVE_DYNAMIC_FTRACE_WITH_REGS
  No help

HAVE_EBPF_JIT
  No help

HAVE_EFFICIENT_UNALIGNED_ACCESS
  Some architectures are unable to perform unaligned accesses
  without the use of get_unaligned/put_unaligned. Others are
  unable to perform such accesses efficiently (e.g. trap on
  unaligned access and require fixing it up in the exception
  handler.)
  
  This symbol should be selected by an architecture if it can
  perform unaligned accesses efficiently to allow different
  code paths to be selected for these cases. Some network
  drivers, for example, could opt to not fix up alignment
  problems with received packets if doing so would not help
  much.
  
  See Documentation/core-api/unaligned-memory-access.rst for more
  information on the topic of unaligned memory accesses.

HAVE_EISA
  No help

HAVE_EXIT_THREAD
  An architecture implements exit_thread.

HAVE_FAST_GUP
  No help

HAVE_FB_ATMEL
  No help

HAVE_FENTRY
  Arch supports the gcc options -pg with -mfentry

HAVE_FTRACE_MCOUNT_RECORD
  See Documentation/trace/ftrace-design.rst

HAVE_FUNCTION_ARG_ACCESS_API
  This symbol should be selected by an architecture if it supports
  the API needed to access function arguments from pt_regs,
  declared in asm/ptrace.h

HAVE_FUNCTION_ERROR_INJECTION
  No help

HAVE_FUNCTION_GRAPH_TRACER
  See Documentation/trace/ftrace-design.rst

HAVE_FUNCTION_TRACER
  See Documentation/trace/ftrace-design.rst

HAVE_FUTEX_CMPXCHG
  Architectures should select this if futex_atomic_cmpxchg_inatomic()
  is implemented and always working. This removes a couple of runtime
  checks.

HAVE_GCC_PLUGINS
  An arch should select this symbol if it supports building with
  GCC plugins.

HAVE_GENERIC_VDSO
  No help

HAVE_HARDENED_USERCOPY_ALLOCATOR
  The heap allocator implements __check_heap_object() for
  validating memory ranges against heap object sizes in
  support of CONFIG_HARDENED_USERCOPY.

HAVE_HARDLOCKUP_DETECTOR_ARCH
  The arch chooses to provide its own hardlockup detector, which is
  a superset of the HAVE_NMI_WATCHDOG. It also conforms to config
  interfaces and parameters provided by hardlockup detector subsystem.

HAVE_HARDLOCKUP_DETECTOR_PERF
  The arch chooses to use the generic perf-NMI-based hardlockup
  detector. Must define HAVE_PERF_EVENTS_NMI.

HAVE_HW_BREAKPOINT
  No help

HAVE_IDE
  No help

HAVE_IMA_KEXEC
  No help

HAVE_INTEL_TXT
  No help

HAVE_IOREMAP_PROT
  No help

HAVE_IRQ_EXIT_ON_IRQ_STACK
  Architecture doesn't only execute the irq handler on the irq stack
  but also irq_exit(). This way we can process softirqs on this irq
  stack instead of switching to a new one when we call __do_softirq()
  in the end of an hardirq.
  This spares a stack switch and improves cache usage on softirq
  processing.

HAVE_IRQ_TIME_ACCOUNTING
  Archs need to ensure they use a high enough resolution clock to
  support irq time accounting and then call enable_sched_clock_irqtime().

HAVE_KCSAN_COMPILER
  For the list of compilers that support KCSAN, please see
  <file:Documentation/dev-tools/kcsan.rst>.

HAVE_KERNEL_BZIP2
  No help

HAVE_KERNEL_GZIP
  No help

HAVE_KERNEL_LZ4
  No help

HAVE_KERNEL_LZMA
  No help

HAVE_KERNEL_LZO
  No help

HAVE_KERNEL_UNCOMPRESSED
  No help

HAVE_KERNEL_XZ
  No help

HAVE_KERNEL_ZSTD
  No help

HAVE_KPROBES
  No help

HAVE_KPROBES_ON_FTRACE
  No help

HAVE_KRETPROBES
  No help

HAVE_KVM
  No help

HAVE_KVM_ARCH_TLB_FLUSH_ALL
  No help

HAVE_KVM_CPU_RELAX_INTERCEPT
  No help

HAVE_KVM_EVENTFD
  No help

HAVE_KVM_INVALID_WAKEUPS
  No help

HAVE_KVM_IRQCHIP
  No help

HAVE_KVM_IRQFD
  No help

HAVE_KVM_IRQ_BYPASS
  No help

HAVE_KVM_IRQ_ROUTING
  No help

HAVE_KVM_MSI
  No help

HAVE_KVM_NO_POLL
  No help

HAVE_KVM_VCPU_ASYNC_IOCTL
  No help

HAVE_KVM_VCPU_RUN_PID_CHANGE
  No help

HAVE_LD_DEAD_CODE_DATA_ELIMINATION
  This requires that the arch annotates or otherwise protects
  its external entry points from being discarded. Linker scripts
  must also merge .text.*, .data.*, and .bss.* correctly into
  output sections. Care must be taken not to pull in unrelated
  sections (e.g., '.text.init'). Typically '.' in section names
  is used to distinguish them from label names / C identifiers.

HAVE_LEGACY_CLK
  Select this option when the clock API in <linux/clk.h> is implemented
  by platform/architecture code. This method is deprecated. Modern
  code should select COMMON_CLK instead and not define a custom
  'struct clk'.

HAVE_LIVEPATCH
  Arch supports kernel live patching

HAVE_MEMBLOCK_PHYS_MAP
  No help

HAVE_MIXED_BREAKPOINTS_REGS
  Depending on the arch implementation of hardware breakpoints,
  some of them have separate registers for data and instruction
  breakpoints addresses, others have mixed registers to store
  them but define the access type in a control register.
  Select this option if your arch implements breakpoints under the
  latter fashion.

HAVE_MMIOTRACE_SUPPORT
  No help

HAVE_MOD_ARCH_SPECIFIC
  The arch uses struct mod_arch_specific to store data.  Many arches
  just need a simple module loader without arch specific data - those
  should not enable this.

HAVE_MOVE_PMD
  Archs that select this are able to move page tables at the PMD level.

HAVE_MOVE_PUD
  Architectures that select this are able to move page tables at the
  PUD level. If there are only 3 page table levels, the move effectively
  happens at the PGD level.

HAVE_NET_DSA
  No help

HAVE_NMI
  No help

HAVE_NMI_WATCHDOG
  The arch provides a low level NMI watchdog. It provides
  asm/nmi.h, and defines its own arch_touch_nmi_watchdog().

HAVE_NOP_MCOUNT
  Arch supports the gcc options -pg with -mrecord-mcount and -nop-mcount

HAVE_OPROFILE
  No help

HAVE_OPTPROBES
  No help

HAVE_PATA_PLATFORM
  This is an internal configuration node for any machine that
  uses pata-platform driver to enable the relevant driver in the
  configuration structure without having to submit endless patches
  to update the PATA_PLATFORM entry.

HAVE_PCI
  No help

HAVE_PCSPKR_PLATFORM
  No help

HAVE_PERF_EVENTS
  See tools/perf/design.txt for details.

HAVE_PERF_EVENTS_NMI
  System hardware can generate an NMI using the perf event
  subsystem.  Also has support for calculating CPU cycle events
  to determine how many clock cycles in a given period.

HAVE_PERF_REGS
  Support selective register dumps for perf events. This includes
  bit-mapping of each registers and a unique architecture id.

HAVE_PERF_USER_STACK_DUMP
  Support user stack dumps for perf event samples. This needs
  access to the user stack pointer which is not unified across
  architectures.

HAVE_POSIX_CPU_TIMERS_TASK_WORK
  No help

HAVE_RAPIDIO
  No help

HAVE_REGS_AND_STACK_ACCESS_API
  This symbol should be selected by an architecture if it supports
  the API needed to access registers and stack entries from pt_regs,
  declared in asm/ptrace.h
  For example the kprobes-based event tracer needs this API.

HAVE_RELIABLE_STACKTRACE
  Architecture has either save_stack_trace_tsk_reliable() or
  arch_stack_walk_reliable() function which only returns a stack trace
  if it can guarantee the trace is reliable.

HAVE_RSEQ
  This symbol should be selected by an architecture if it
  supports an implementation of restartable sequences.

HAVE_S3C2410_I2C
  This will include I2C support for Samsung SoCs. If you want to
  include I2C support for any machine, kindly select this in the
  respective Kconfig file.

HAVE_S3C_RTC
  This will include RTC support for Samsung SoCs. If
  you want to include RTC support for any machine, kindly
  select this in the respective mach-XXXX/Kconfig file.

HAVE_SCHED_AVG_IRQ
  No help

HAVE_SETUP_PER_CPU_AREA
  No help

HAVE_SPARSE_SYSCALL_NR
  An architecture should select this if its syscall numbering is sparse
  to save space. For example, MIPS architecture has a syscall array with
  entries at 4000, 5000 and 6000 locations. This option turns on syscall
  related optimizations for a given architecture.

HAVE_STACKPROTECTOR
  An arch should select this symbol if:
  - it has implemented a stack canary (e.g. __stack_chk_guard)

HAVE_STACK_VALIDATION
  Architecture supports the 'objtool check' host tool command, which
  performs compile-time stack metadata validation.

HAVE_STATIC_CALL
  No help

HAVE_STATIC_CALL_INLINE
  No help

HAVE_SYSCALL_TRACEPOINTS
  See Documentation/trace/ftrace-design.rst

HAVE_TIF_NOHZ
  Arch relies on TIF_NOHZ and syscall slow path to implement context
  tracking calls to user_enter()/user_exit().

HAVE_UID16
  No help

HAVE_UNSTABLE_SCHED_CLOCK
  No help

HAVE_USER_RETURN_NOTIFIER
  No help

HAVE_VIRT_CPU_ACCOUNTING
  No help

HAVE_VIRT_CPU_ACCOUNTING_GEN
  With VIRT_CPU_ACCOUNTING_GEN, cputime_t becomes 64-bit.
  Before enabling this option, arch code must be audited
  to ensure there are no races in concurrent read/write of
  cputime_t. For example, reading/writing 64-bit cputime_t on
  some 32-bit arches may require multiple accesses, so proper
  locking is needed to protect against concurrent accesses.

HAVE_VIRT_CPU_ACCOUNTING_IDLE
  Architecture has its own way to account idle CPU time and therefore
  doesn't implement vtime_account_idle().

HBMC_AM654
  This is the driver for HyperBus controller on TI's AM65x and
  other SoCs

HD44780
  Enable support for Character LCDs using a HD44780 controller.
  The LCD is accessible through the /dev/lcd char device (10, 156).
  This code can either be compiled as a module, or linked into the
  kernel and started at boot.
  If you don't understand what all this is about, say N.

HD44780_COMMON
  This is a module with the common symbols for HD44780 (and compatibles)
  displays. This is the code that multiple other modules use. It is not
  useful alone. If you have some sort of HD44780 compatible display,
  you very likely use this. It is selected automatically by selecting
  your concrete display.

HDC100X
  Say yes here to build support for the Texas Instruments
  HDC1000, HDC1008, HDC1010, HDC1050, and HDC1080 relative
  humidity and temperature sensors.
  
  To compile this driver as a module, choose M here: the module
  will be called hdc100x.

HDC2010
  Say yes here to build support for the Texas Instruments
  HDC2010 and HDC2080 relative humidity and temperature sensors.
  
  To compile this driver as a module, choose M here: the module
  will be called hdc2010.

HDLC
  Say Y to this option if your Linux box contains a WAN (Wide Area
  Network) card supported by this driver and you are planning to
  connect the box to a WAN.
  
  You will need supporting software from
  <http://www.kernel.org/pub/linux/utils/net/hdlc/>.
  Generic HDLC driver currently supports raw HDLC, Cisco HDLC, Frame
  Relay, synchronous Point-to-Point Protocol (PPP) and X.25.
  
   To compile this driver as a module, choose M here: the
  module will be called hdlc.
  
  If unsure, say N.

HDLC_CISCO
  Generic HDLC driver supporting Cisco HDLC over WAN connections.
  
  If unsure, say N.

HDLC_FR
  Generic HDLC driver supporting Frame Relay over WAN connections.
  
  If unsure, say N.

HDLC_PPP
  Generic HDLC driver supporting PPP over WAN connections.
  
  If unsure, say N.

HDLC_RAW
  Generic HDLC driver supporting raw HDLC over WAN connections.
  
  If unsure, say N.

HDLC_RAW_ETH
  Generic HDLC driver supporting raw HDLC Ethernet device emulation
  over WAN connections.
  
  You will need it for Ethernet over HDLC bridges.
  
  If unsure, say N.

HDLC_X25
  Generic HDLC driver supporting X.25 over WAN connections.
  
  If unsure, say N.

HDMI
  No help

HDMI_LPE_AUDIO
  Choose this option to support HDMI LPE Audio mode

HDQ_MASTER_OMAP
  Say Y here if you want support for the 1-wire or HDQ Interface
  on an OMAP processor.

HEADERS_INSTALL
  This option will install uapi headers (headers exported to user-space)
  into the usr/include directory for use during the kernel build.
  This is unneeded for building the kernel itself, but needed for some
  user-space program samples. It is also needed by some features such
  as uapi header sanity checks.

HERMES
  A driver for 802.11b wireless cards based on the "Hermes" or
  Intersil HFA384x (Prism 2) MAC controller.  This includes the vast
  majority of the PCMCIA 802.11b cards (which are nearly all rebadges)
  - except for the Cisco/Aironet cards.  Cards supported include the
  Apple Airport (not a PCMCIA card), WavelanIEEE/Orinoco,
  Cabletron/EnteraSys Roamabout, ELSA AirLancer, MELCO Buffalo, Avaya,
  IBM High Rate Wireless, Farralon Syyline, Samsung MagicLAN, Netgear
  MA401, LinkSys WPC-11, D-Link DWL-650, 3Com AirConnect, Intel
  IPW2011, and Symbol Spectrum24 High Rate amongst others.
  
  This option includes the guts of the driver, but in order to
  actually use a card you will also need to enable support for PCMCIA
  Hermes cards, PLX9052 based PCI adaptors or the Apple Airport below.
  
  You will also very likely also need the Wireless Tools in order to
  configure your card and that /etc/pcmcia/wireless.opts works :
  <https://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/Tools.html>

HERMES_CACHE_FW_ON_INIT
  Say Y to cache any firmware required by the Hermes drivers
  on startup.  The firmware will remain cached until the
  driver is unloaded.  The cache uses 64K of RAM.
  
  Otherwise load the firmware from userspace as required.  In
  this case the driver should be unloaded and restarted
  whenever the firmware is changed.
  
  If you are not sure, say Y.

HERMES_PRISM
  Say Y to enable support for Prism 2 and 2.5 chipsets.  These
  chipsets are better handled by the hostap driver.  This driver
  would not support WPA or firmware download for Prism chipset.
  
  If you are not sure, say N.

HFI1_DEBUG_SDMA_ORDER
  This is a debug flag to test for out of order
  sdma completions for unit testing

HFSPLUS_FS
  If you say Y here, you will be able to mount extended format
  Macintosh-formatted hard drive partitions with full read-write access.
  
  This file system is often called HFS+ and was introduced with
  MacOS 8. It includes all Mac specific filesystem data such as
  data forks and creator codes, but it also has several UNIX
  style features such as file ownership and permissions.

HFS_FS
  If you say Y here, you will be able to mount Macintosh-formatted
  floppy disks and hard drive partitions with full read-write access.
  Please read <file:Documentation/filesystems/hfs.rst> to learn about
  the available mount options.
  
  To compile this file system support as a module, choose M here: the
  module will be called hfs.

HI13X1_GMAC
  If you wish to compile a kernel for a hardware with hisilicon hi13x1_gamc
  then you should answer Y to this. This makes this driver suitable for use
  on certain boards such as the HI13X1.
  
  If you are unsure, say N.

HI3660_MBOX
  An implementation of the hi3660 mailbox. It is used to send message
  between application processors and other processors/MCU/DSP. Select
  Y here if you want to use Hi3660 mailbox controller.

HI6220_MBOX
  An implementation of the hi6220 mailbox. It is used to send message
  between application processors and MCU. Say Y here if you want to
  build Hi6220 mailbox controller driver.

HI8435
  If you say yes here you get support for Holt Integrated Circuits
  HI-8435 chip.
  
  This driver can also be built as a module. If so, the module will be
  called hi8435.

HIBERNATE_CALLBACKS
  No help

HIBERNATION
  Enable the suspend to disk (STD) functionality, which is usually
  called "hibernation" in user interfaces.  STD checkpoints the
  system and powers it off; and restores that checkpoint on reboot.
  
  You can suspend your machine with 'echo disk > /sys/power/state'
  after placing resume=/dev/swappartition on the kernel command line
  in your bootloader's configuration file.
  
  Alternatively, you can use the additional userland tools available
  from <http://suspend.sf.net>.
  
  In principle it does not require ACPI or APM, although for example
  ACPI will be used for the final steps when it is available.  One
  of the reasons to use software suspend is that the firmware hooks
  for suspend states like suspend-to-RAM (STR) often don't work very
  well with Linux.
  
  It creates an image which is saved in your active swap. Upon the next
  boot, pass the 'resume=/dev/swappartition' argument to the kernel to
  have it detect the saved image, restore memory state from it, and
  continue to run as before. If you do not want the previous state to
  be reloaded, then use the 'noresume' kernel command line argument.
  Note, however, that fsck will be run on your filesystems and you will
  need to run mkswap against the swap partition used for the suspend.
  
  It also works with swap files to a limited extent (for details see
  <file:Documentation/power/swsusp-and-swap-files.rst>).
  
  Right now you may boot without resuming and resume later but in the
  meantime you cannot use the swap partition(s)/file(s) involved in
  suspending.  Also in this case you must not use the filesystems
  that were mounted before the suspend.  In particular, you MUST NOT
  MOUNT any journaled filesystems mounted before the suspend or they
  will get corrupted in a nasty way.
  
  For more information take a look at <file:Documentation/power/swsusp.rst>.

HIBERNATION_SNAPSHOT_DEV
  Device used by the uswsusp tools.
  
  Say N if no snapshotting from userspace is needed, this also
  reduces the attack surface of the kernel.
  
  If in doubt, say Y.

HID
  A human interface device (HID) is a type of computer device that
  interacts directly with and takes input from humans. The term "HID"
  most commonly used to refer to the USB-HID specification, but other
  devices (such as, but not strictly limited to, Bluetooth) are
  designed using HID specification (this involves certain keyboards,
  mice, tablets, etc). This option adds the HID bus to the kernel,
  together with generic HID layer code. The HID devices are added and
  removed from the HID bus by the transport-layer drivers, such as
  usbhid (USB_HID) and hidp (BT_HIDP).
  
  For docs and specs, see https://www.usb.org/developers/hidpage/
  
  If unsure, say Y.

HIDRAW
  Say Y here if you want to support HID devices (from the USB
  specification standpoint) that aren't strictly user interface
  devices, like monitor controls and Uninterruptible Power Supplies.
  
  This module supports these devices separately using a separate
  event interface on /dev/hidraw.
  
  There is also a /dev/hiddev configuration option in the USB HID
  configuration menu. In comparison to hiddev, this device does not process
  the hid events at all (no parsing, no lookups). This lets applications
  to work on raw hid events when they want to, and avoid using transport-specific
  userspace libhid/libusb libraries.
  
  If unsure, say Y.

HID_A4TECH
  Support for A4 tech X5 and WOP-35 / Trust 450L mice.

HID_ACCUTOUCH
  This selects a driver for the Accutouch 2216 touch controller.
  
  The driver works around a problem in the reported device capabilities
  which causes userspace to detect the device as a mouse rather than
  a touchscreen.
  
  Say Y here if you have a Accutouch 2216 touch controller.

HID_ACRUX
  Say Y here if you want to enable support for ACRUX game controllers.

HID_ACRUX_FF
  Say Y here if you want to enable force feedback support for ACRUX
  game controllers.

HID_ALPS
  Support for Alps I2C HID touchpads and StickPointer.
  Say Y here if you have a Alps touchpads over i2c-hid or usbhid
  and want support for its special functionalities.

HID_APPLE
  Support for some Apple devices which less or more break
  HID specification.
  
  Say Y here if you want support for keyboards of        Apple iBooks, PowerBooks,
  MacBooks, MacBook Pros and Apple Aluminum.

HID_APPLEIR
  Support for Apple infrared remote control. All the Apple computers from
    2005 onwards include such a port, except the unibody Macbook (2009),
    and Mac Pros. This receiver is also used in the Apple TV set-top box
    prior to the 2010 model.
  
  Say Y here if you want support for Apple infrared remote control.

HID_ASUS
  Support for Asus notebook built-in keyboard and touchpad via i2c, and
  the Asus Republic of Gamers laptop keyboard special keys.
  
  Supported devices:
  - EeeBook X205TA
  - VivoBook E200HA
  - GL553V series
  - GL753V series

HID_AUREAL
  Support for Aureal Cy se W-01RN Remote Controller and other Aureal derived remotes.

HID_BATTERY_STRENGTH
  This option adds support of reporting battery strength (for HID devices
  that support this feature) through power_supply class so that userspace
  tools, such as upower, can display it.

HID_BELKIN
  Support for Belkin Flip KVM and Wireless keyboard.

HID_BETOP_FF
  Say Y here if you want to enable force feedback support for devices by
  BETOP Production Ltd.
  Currently the following devices are known to be supported:
   - BETOP 2185 PC & BFM MODE

HID_BIGBEN_FF
  Support for the "Kid-friendly Wired Controller" PS3OFMINIPAD
  gamepad made by BigBen Interactive, originally sold as a PS3
  accessory. This driver fixes input mapping and adds support for
  force feedback effects and LEDs on the device.

HID_CHERRY
  Support for Cherry Cymotion keyboard.

HID_CHICONY
  Support for Chicony Tactical pad and special keys on Chicony keyboards.

HID_CMEDIA
  Support for CMedia CM6533 HID audio jack controls.

HID_CORSAIR
  Support for Corsair devices that are not fully compliant with the
  HID standard.
  
  Supported devices:
  - Vengeance K90
  - Scimitar PRO RGB

HID_COUGAR
  Support for Cougar devices that are not fully compliant with the
  HID standard.
  
  Supported devices:
  - Cougar 500k Gaming Keyboard

HID_CP2112
  Support for Silicon Labs CP2112 HID USB to SMBus Master Bridge.
  This is a HID device driver which registers as an i2c adapter
  and gpiochip to expose these functions of the CP2112. The
  customizable USB descriptor fields are exposed as sysfs attributes.

HID_CREATIVE_SB0540
  Support for Creative infrared SB0540-compatible remote controls, such
  as the RM-1500 and RM-1800 remotes.
  
  Say Y here if you want support for Creative SB0540 infrared receiver.

HID_CYPRESS
  Support for cypress mouse and barcode readers.

HID_DRAGONRISE
  Say Y here if you have DragonRise Inc. game controllers.
  These might be branded as:
  - Tesun USB-703
  - Media-tech MT1504 "Rogue"
  - DVTech JS19 "Gear"
  - Defender Game Master

HID_ELAN
  Say Y to enable support for the USB ELAN touchpad
  Currently the following devices are known to be supported:
   - HP Pavilion X2 10-p0XX.

HID_ELECOM
  Support for ELECOM devices:
    - BM084 Bluetooth Mouse
    - EX-G Trackballs (M-XT3DRBK, M-XT3URBK)
    - DEFT Trackballs (M-DT1DRBK, M-DT1URBK, M-DT2DRBK, M-DT2URBK)
    - HUGE Trackballs (M-HT1DRBK, M-HT1URBK)

HID_ELO
  Support for the ELO USB 4000/4500 touchscreens. Note that this is for
  different devices than those handled by CONFIG_TOUCHSCREEN_USB_ELO.

HID_EMS_FF
  Say Y here if you want to enable force feedback support for devices by
  EMS Production Ltd.
  Currently the following devices are known to be supported:
   - Trio Linker Plus II

HID_EZKEY
  Support for Ezkey BTC 8193 keyboard.

HID_GEMBIRD
  Support for Gembird JPD-DualForce 2.

HID_GENERIC
  Support for generic devices on the HID bus. This includes most
  keyboards and mice, joysticks, tablets and digitizers.
  
  To compile this driver as a module, choose M here: the module
  will be called hid-generic.
  
  If unsure, say Y.

HID_GFRM
  Support for Google Fiber TV Box remote controls

HID_GLORIOUS
  Support for Glorious PC Gaming Race mice such as
  the Glorious Model O, O- and D.

HID_GOOGLE_HAMMER
  Say Y here if you have a Google Hammer device.

HID_GREENASIA
  Say Y here if you have a GreenAsia (Product ID 0x12) based game
  controller or adapter.

HID_GT683R
  Say Y here if you want to enable support for the three MSI GT68xR LEDs
  
  This driver support following modes:
    - Normal: LEDs are fully on when enabled
    - Audio:  LEDs brightness depends on sound level
    - Breathing: LEDs brightness varies at human breathing rate
  
  Currently the following devices are know to be supported:
    - MSI GT683R

HID_GYRATION
  Support for Gyration remote control.

HID_HOLTEK
  Support for Holtek based devices:
    - Holtek On Line Grip based game controller
    - Trust GXT 18 Gaming Keyboard
    - Sharkoon Drakonia / Perixx MX-2000 gaming mice
    - Tracer Sniper TRM-503 / NOVA Gaming Slider X200 /
      Zalman ZM-GM1
    - SHARKOON DarkGlider Gaming mouse
    - LEETGION Hellion Gaming Mouse

HID_HYPERV_MOUSE
  Select this option to enable the Hyper-V mouse driver.

HID_ICADE
  Support for the ION iCade arcade controller to work as a joystick.
  
  To compile this driver as a module, choose M here: the
  module will be called hid-icade.

HID_ITE
  Support for ITE devices not fully compliant with HID standard.

HID_JABRA
  Support for Jabra USB HID devices.
  
  Prevents mapping of vendor defined HID usages to input events. Without
  this driver HID        reports from Jabra devices may incorrectly be seen as
  mouse button events.
  Say M here if you may ever plug in a Jabra USB device.

HID_KENSINGTON
  Support for Kensington Slimblade Trackball.

HID_KEYTOUCH
  Support for Keytouch HID devices not fully compliant with
  the specification. Currently supported:
          - Keytouch IEC 60945

HID_KYE
  Support for KYE/Genius devices not fully compliant with HID standard:
  - Ergo Mouse
  - EasyPen i405X tablet
  - MousePen i608X tablet
  - EasyPen M610X tablet

HID_LCPOWER
  Support for LC-Power RC1000MCE RF remote control.

HID_LED
  Support for simple RGB LED devices. Currently supported are:
  - Riso Kagaku Webmail Notifier
  - Dream Cheeky Webmail Notifier and Friends Alert
  - ThingM blink(1)
  - Delcom Visual Signal Indicator Generation 2
  - Greynut Luxafor
  
  To compile this driver as a module, choose M here: the
  module will be called hid-led.

HID_LENOVO
  Support for IBM/Lenovo devices that are not fully compliant with HID standard.
  
  Say Y if you want support for horizontal scrolling of the IBM/Lenovo
  Scrollpoint mice or the non-compliant features of the Lenovo Thinkpad
  standalone keyboards, e.g:
  - ThinkPad USB Keyboard with TrackPoint (supports extra LEDs and trackpoint
    configuration)
  - ThinkPad Compact Bluetooth Keyboard with TrackPoint (supports Fn keys)
  - ThinkPad Compact USB Keyboard with TrackPoint (supports Fn keys)

HID_LOGITECH
  Support for Logitech devices that are not fully compliant with HID standard.

HID_LOGITECH_DJ
  Say Y if you want support for Logitech receivers and devices.
  Logitech receivers are capable of pairing multiple Logitech compliant
  devices to the same receiver. Without this driver it will be handled by
  generic USB_HID driver and all incoming events will be multiplexed
  into a single mouse and a single keyboard device.

HID_LOGITECH_HIDPP
  Support for Logitech devices relyingon the HID++ Logitech specification
  
  Say Y if you want support for Logitech devices relying on the HID++
  specification. Such devices are the various Logitech Touchpads (T650,
  T651, TK820), some mice (Zone Touch mouse), or even keyboards (Solar
  Keyboard).

HID_MACALLY
  Support for Macally devices that are not fully compliant with the
  HID standard.
  
  supported devices:
  - Macally ikey keyboard

HID_MAGICMOUSE
  Support for the Apple Magic Mouse/Trackpad multi-touch.
  
  Say Y here if you want support for the multi-touch features of the
  Apple Wireless "Magic" Mouse and the Apple Wireless "Magic" Trackpad.

HID_MALTRON
  Adds support for the volume up, volume down, mute, and play/pause buttons
  of the Maltron L90 keyboard.

HID_MAYFLASH
  Say Y here if you have HJZ Mayflash PS3 game controller adapters
  and want to enable force feedback support.

HID_MCP2221
  Provides I2C and SMBUS host adapter functionality over USB-HID
  through MCP2221 device.
  
  To compile this driver as a module, choose M here: the module
  will be called hid-mcp2221.ko.

HID_MICROSOFT
  Support for Microsoft devices that are not fully compliant with HID standard.

HID_MONTEREY
  Support for Monterey Genius KB29E.

HID_MULTITOUCH
  Generic support for HID multitouch panels.
  
  Say Y here if you have one of the following devices:
  - 3M PCT touch screens
  - ActionStar dual touch panels
  - Atmel panels
  - Cando dual touch panels
  - Chunghwa panels
  - CJTouch panels
  - CVTouch panels
  - Cypress TrueTouch panels
  - Elan Microelectronics touch panels
  - Elo TouchSystems IntelliTouch Plus panels
  - GeneralTouch 'Sensing Win7-TwoFinger' panels
  - GoodTouch panels
  - Hanvon dual touch panels
  - Ilitek dual touch panels
  - IrTouch Infrared USB panels
  - LG Display panels (Dell ST2220Tc)
  - Lumio CrystalTouch panels
  - MosArt dual-touch panels
  - Panasonic multitouch panels
  - PenMount dual touch panels
  - Perixx Peripad 701 touchpad
  - PixArt optical touch screen
  - Pixcir dual touch panels
  - Quanta panels
  - eGalax dual-touch panels, including the Joojoo and Wetab tablets
  - SiS multitouch panels
  - Stantum multitouch panels
  - Touch International Panels
  - Unitec Panels
  - Wistron optical touch panels
  - XAT optical touch panels
  - Xiroku optical touch panels
  - Zytronic touch panels
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called hid-multitouch.

HID_NTI
  Support for the "extra" Sun keyboard keys on keyboards attached
  through Network Technologies USB-SUN keyboard adapters.

HID_NTRIG
  Support for N-Trig touch screen.

HID_ORTEK
  There are certain devices which have LogicalMaximum wrong in the keyboard
  usage page of their report descriptor. The most prevailing ones so far
  are manufactured by Ortek, thus the name of the driver. Currently
  supported devices by this driver are
  
     - Ortek PKB-1700
     - Ortek WKB-2000
     - Skycable wireless presenter

HID_PANTHERLORD
  Say Y here if you have a PantherLord/GreenAsia based game controller
  or adapter.

HID_PENMOUNT
  This selects a driver for the PenMount 6000 touch controller.
  
  The driver works around a problem in the report descript allowing
  the userspace to touch events instead of mouse events.
  
  Say Y here if you have a Penmount based touch controller.

HID_PETALYNX
  Support for Petalynx Maxter remote control.

HID_PICOLCD
  This provides support for Minibox PicoLCD devices, currently
  only the graphical ones are supported.
  
  This includes support for the following device features:
  - Keypad
  - Switching between Firmware and Flash mode
  - EEProm / Flash access     (via debugfs)
  Features selectively enabled:
  - Framebuffer for monochrome 256x64 display
  - Backlight control
  - Contrast control
  - General purpose outputs
  Features that are not (yet) supported:
  - IR

HID_PICOLCD_BACKLIGHT
  Provide access to PicoLCD's backlight control via backlight
  class.

HID_PICOLCD_CIR
  Provide access to PicoLCD's CIR interface via remote control (LIRC).

HID_PICOLCD_FB
  Provide access to PicoLCD's 256x64 monochrome display via a
  framebuffer device.

HID_PICOLCD_LCD
  Provide access to PicoLCD's LCD contrast via lcd class.

HID_PICOLCD_LEDS
  Provide access to PicoLCD's GPO pins via leds class.

HID_PID
  Say Y here if you have a PID-compliant device and wish to enable force
  feedback for it. Microsoft Sidewinder Force Feedback 2 is one of such
  devices.

HID_PLANTRONICS
  Provides HID support for Plantronics USB audio devices.
  Correctly maps vendor unique volume up/down HID usages to
  KEY_VOLUMEUP and KEY_VOLUMEDOWN events and prevents core mapping
  of other vendor unique HID usages to random mouse events.
  
  Say M here if you may ever plug in a Plantronics USB audio device.

HID_PRIMAX
  Support for Primax devices that are not fully compliant with the
  HID standard.

HID_PRODIKEYS
  Support for Prodikeys PC-MIDI Keyboard device support.
  Say Y here to enable support for this device.
  - Prodikeys PC-MIDI keyboard.
    The Prodikeys PC-MIDI acts as a USB Audio device, with one MIDI
    input and one MIDI output. These MIDI jacks appear as
    a sound "card" in the ALSA sound system.
    Note: if you say N here, this device will still function as a basic
    multimedia keyboard, but will lack support for the musical keyboard
    and some additional multimedia keys.

HID_REDRAGON
  Support for Redragon keyboards that need fix-ups to work properly.

HID_RETRODE
  Support for
    * Retrode 2 cartridge and controller adapter

HID_RMI
  Support for Synaptics RMI4 touchpads.
  Say Y here if you have a Synaptics RMI4 touchpads over i2c-hid or usbhid
  and want support for its special functionalities.

HID_ROCCAT
  Support for Roccat devices.
  Say Y here if you have a Roccat mouse or keyboard and want
  support for its special functionalities.

HID_SAITEK
  Support for Saitek devices that are not fully compliant with the
  HID standard.
  
  Supported devices:
  - PS1000 Dual Analog Pad
  - Saitek R.A.T.7, R.A.T.9, M.M.O.7 Gaming Mice
  - Mad Catz R.A.T.5, R.A.T.9 Gaming Mice

HID_SAMSUNG
  Support for Samsung InfraRed remote control or keyboards.

HID_SENSOR_ACCEL_3D
  Say yes here to build support for the HID SENSOR
  accelerometers 3D.
  
  To compile this driver as a module, choose M here: the
  module will be called hid-sensor-accel-3d.

HID_SENSOR_ALS
  Say yes here to build support for the HID SENSOR
  Ambient light sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called hid-sensor-als.

HID_SENSOR_CUSTOM_SENSOR
  HID Sensor hub specification allows definition of some custom and
  generic sensors. Unlike other HID sensors, they can't be exported
  via Linux IIO because of custom fields. This is up to the manufacturer
  to decide how to interpret these special sensor ids and process in
  the user space. Currently some manufacturers are using these ids for
  sensor calibration and debugging other sensors. Manufacturers
  shouldn't use these special custom sensor ids to export any of the
  standard sensors.
  Select this config option for custom/generic sensor support.

HID_SENSOR_DEVICE_ROTATION
  Say yes here to build support for the HID SENSOR
  device rotation. The output of a device rotation sensor
  is presented using quaternion format.

HID_SENSOR_GYRO_3D
  Say yes here to build support for the HID SENSOR
  Gyroscope 3D.

HID_SENSOR_HUB
  Support for HID Sensor framework. This creates a MFD instance
  for a sensor hub and identifies all the sensors connected to it.
  Each sensor is registered as a MFD cell, so that sensor specific
  processing can be done in a separate driver. Each sensor
  drivers can use the service provided by this driver to register
  for events and handle data streams. Each sensor driver can format
  data and present to user mode using input or IIO interface.

HID_SENSOR_HUMIDITY
  Say yes here to build support for the HID SENSOR
  humidity driver
  
  To compile this driver as a module, choose M here: the module
  will be called hid-sensor-humidity.

HID_SENSOR_IIO_COMMON
  Say yes here to build support for HID sensor to use
  HID sensor common processing for attributes and IIO triggers.
  There are many attributes which can be shared among multiple
  HID sensor drivers, this module contains processing for those
  attributes.

HID_SENSOR_IIO_TRIGGER
  Say yes here to build trigger support for HID sensors.
  Triggers will be send if all requested attributes were read.
  
  If this driver is compiled as a module, it will be named
  hid-sensor-trigger.

HID_SENSOR_INCLINOMETER_3D
  Say yes here to build support for the HID SENSOR
  Inclinometer 3D.

HID_SENSOR_MAGNETOMETER_3D
  Say yes here to build support for the HID SENSOR
  Magnetometer 3D.

HID_SENSOR_PRESS
  Say yes here to build support for the HID SENSOR
  Pressure driver
  
  To compile this driver as a module, choose M here: the module
  will be called hid-sensor-press.

HID_SENSOR_PROX
  Say yes here to build support for the HID SENSOR
  Proximity sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called hid-sensor-prox.

HID_SENSOR_TEMP
  Say yes here to build support for the HID SENSOR
  temperature driver
  
  To compile this driver as a module, choose M here: the module
  will be called hid-sensor-temperature.

HID_SMARTJOYPLUS
  Support for SmartJoy PLUS PS2/USB adapter, Super Dual Box,
  Super Joy Box 3 Pro, Super Dual Box Pro, and Super Joy Box 5 Pro.
  
  Note that DDR (Dance Dance Revolution) mode is not supported, nor
  is pressure sensitive buttons on the pro models.

HID_SONY
  Support for
  
    * Sony PS3 6-axis controllers
    * Sony PS4 DualShock 4 controllers
    * Buzz controllers
    * Sony PS3 Blue-ray Disk Remote Control (Bluetooth)
    * Logitech Harmony adapter for Sony Playstation 3 (Bluetooth)
    * Guitar Hero Live PS3 and Wii U guitar dongles

HID_SPEEDLINK
  Support for Speedlink Vicious and Divine Cezanne mouse.

HID_STEAM
  Say Y here if you have a Steam Controller if you want to use it
  without running the Steam Client. It supports both the wired and
  the wireless adaptor.

HID_STEELSERIES
  Support for Steelseries SRW-S1 steering wheel

HID_SUNPLUS
  Support for Sunplus wireless desktop.

HID_THINGM
  Support for the ThingM blink(1) USB RGB LED. This driver has been
  merged into the generic hid led driver. Config symbol HID_THINGM
  just selects HID_LED and will be removed soon.

HID_THRUSTMASTER
  Say Y here if you have a THRUSTMASTER FireStore Dual Power 2 or
  a THRUSTMASTER Ferrari GT Rumble Wheel.

HID_TIVO
  Say Y if you have a TiVo Slide Bluetooth remote control.

HID_TOPSEED
  Say Y if you have a TopSeed Cyberlink or BTC Emprex or Conceptronic
  CLLRCMCE remote control.

HID_TWINHAN
  Support for Twinhan IR remote control.

HID_U2FZERO
  Support for the LED of the U2F Zero device.
  
  U2F Zero supports custom commands for blinking the LED
  and getting data from the internal hardware RNG.
  The internal hardware can be used to feed the enthropy pool.
  
  U2F Zero only supports blinking its LED, so this driver doesn't
  allow setting the brightness to anything but 1, which will
  trigger a single blink and immediately reset back to 0.

HID_UCLOGIC
  Support for UC-Logic and Huion tablets.

HID_UDRAW_PS3
  Say Y here if you want to use the THQ uDraw gaming tablet for
  the PS3.

HID_VIEWSONIC
  Support for ViewSonic/Signotec PD1011 signature pad.

HID_VIVALDI
  Say Y here if you want to enable support for Vivaldi keyboards.
  
  Vivaldi keyboards use a vendor-specific (Google) HID usage to report
  how the keys in the top row are physically ordered.

HID_WACOM
  Say Y here if you want to use the USB or BT version of the Wacom Intuos
  or Graphire tablet.
  
  To compile this driver as a module, choose M here: the
  module will be called wacom.

HID_WALTOP
  Support for Waltop tablets.

HID_WIIMOTE
  Support for Nintendo Wii and Wii U Bluetooth peripherals. Supported
  devices are the Wii Remote and its extension devices, but also devices
  based on the Wii Remote like the Wii U Pro Controller or the
  Wii Balance Board.
  
  Support for all official Nintendo extensions is available, however, 3rd
  party extensions might not be supported. Please report these devices to:
    http://github.com/dvdhrm/xwiimote/issues
  
  Other Nintendo Wii U peripherals that are IEEE 802.11 based (including
  the Wii U Gamepad) might be supported in the future. But currently
  support is limited to Bluetooth based devices.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called hid-wiimote.

HID_XINMO
  Support for Xin-Mo devices that are not fully compliant with the HID
  standard. Currently only supports the Xin-Mo Dual Arcade. Say Y here
  if you have a Xin-Mo Dual Arcade controller.

HID_ZEROPLUS
  Say Y here if you have a Zeroplus based game controller.

HID_ZYDACRON
  Support for Zydacron remote control.

HIGHMEM
  No help

HIGHMEM4G
  Select this if you have a 32-bit processor and between 1 and 4
  gigabytes of physical RAM.

HIGHMEM64G
  Select this if you have a 32-bit processor and more than 4
  gigabytes of physical RAM.

HIGHPTE
  The VM uses one page table entry for each page of physical memory.
  For systems with a lot of RAM, this can be wasteful of precious
  low memory.  Setting this option will put user-space page table
  entries in high memory.

HIGH_RES_TIMERS
  This option enables high resolution timer support. If your
  hardware is not capable then this option only increases
  the size of the kernel image.

HIL_MLC
  No help

HINIC
  This driver supports HiNIC PCIE Ethernet cards.
  To compile this driver as part of the kernel, choose Y here.
  If unsure, choose N.
  The default is compiled as module.

HIP04_ETH
  If you wish to compile a kernel for a hardware with hisilicon p04 SoC and
  want to use the internal ethernet then you should answer Y to this.

HIPPI
  HIgh Performance Parallel Interface (HIPPI) is a 800Mbit/sec and
  1600Mbit/sec dual-simplex switched or point-to-point network. HIPPI
  can run over copper (25m) or fiber (300m on multi-mode or 10km on
  single-mode). HIPPI networks are commonly used for clusters and to
  connect to super computers. If you are connected to a HIPPI network
  and have a HIPPI network card in your computer that you want to use
  under Linux, say Y here (you must also remember to enable the driver
  for your HIPPI card below). Most people will say N here.

HISILICON_ERRATUM_161010101
  This option enables a workaround for Hisilicon Erratum
  161010101. The workaround will be active if the hisilicon,erratum-161010101
  property is found in the timer node.

HISILICON_IRQ_MBIGEN
  No help

HISILICON_LPC
  Driver to enable I/O access to devices attached to the Low Pin
  Count bus on the HiSilicon Hip06/7 SoC.

HISI_DMA
  Support HiSilicon Kunpeng DMA engine.

HISI_FEMAC
  This selects the Hisilicon Fast Ethernet MAC device(FEMAC).
  The FEMAC receives and transmits data over Ethernet
  ports at 10/100 Mbps in full-duplex or half-duplex mode.
  The FEMAC exchanges data with the CPU, and supports
  the energy efficient Ethernet (EEE).

HISI_HIKEY_USB
  If you say yes here this adds support for the on-board USB GPIO hub
  found on HiKey 960/970 boards, which is necessary to support
  switching between the dual-role USB-C port and the USB-A host ports
  using only one USB controller.

HISI_PMU
  Support for HiSilicon SoC L3 Cache performance monitor, Hydra Home
  Agent performance monitor and DDR Controller performance monitor.

HISI_THERMAL
  Enable this to plug hisilicon's thermal sensor driver into the Linux
  thermal framework. cpufreq is used as the cooling device to throttle
  CPUs when the passive trip is crossed.

HIST_TRIGGERS
  Hist triggers allow one or more arbitrary trace event fields
  to be aggregated into hash tables and dumped to stdout by
  reading a debugfs/tracefs file.  They're useful for
  gathering quick and dirty (though precise) summaries of
  event activity as an initial guide for further investigation
  using more advanced tools.
  
  Inter-event tracing of quantities such as latencies is also
  supported using hist triggers under this option.
  
  See Documentation/trace/histogram.rst.
  If in doubt, say N.

HIST_TRIGGERS_DEBUG
  Add "hist_debug" file for each event, which when read will
  dump out a bunch of internal details about the hist triggers
  defined on that event.
  
  The hist_debug file serves a couple of purposes:
  
    - Helps developers verify that nothing is broken.
  
    - Provides educational information to support the details
      of the hist trigger internals as described by
      Documentation/trace/histogram-design.rst.
  
  The hist_debug output only covers the data structures
  related to the histogram definitions themselves and doesn't
  display the internals of map buckets or variable values of
  running histograms.
  
  If unsure, say N.

HIX5HD2_GMAC
  This selects the hix5hd2 mac family network device.

HMC425
  Say yes here to build support for Analog Devices HMC425A and similar
  gain amplifiers or step attenuators.
  
  To compile this driver as a module, choose M here: the
  module will be called hmc425a.

HMC6352
  This driver provides support for the Honeywell HMC6352 compass,
  providing configuration and heading data via sysfs.

HMC_DRV
  This option enables support for file transfers from a Hardware
  Management Console (HMC) drive CD/DVD-ROM. It is available as a
  module, called 'hmcdrv', and also as kernel built-in. There is one
  optional parameter for this module: cachesize=N, which modifies the
  transfer cache size from it's default value 0.5MB to N bytes. If N
  is zero, then no caching is performed.

HMEM_REPORTING
  Enable reporting for heterogenous memory access attributes under
  their non-uniform memory nodes.

HMM_MIRROR
  No help

HMS_ANYBUSS_BUS
  Driver for the HMS Industrial Networks Anybus-S bus.
  You can attach a single Anybus-S compatible card to it, which
  typically provides fieldbus and industrial ethernet
  functionality.

HMS_PROFINET
  If you say yes here you get support for the HMS Industrial
  Networks Profinet IRT Controller.
  
  It will be registered with the kernel as a fieldbus_dev,
  so userspace can interact with it via the fieldbus_dev userspace
  interface(s).
  
  This driver can also be built as a module. If so, the module
  will be called hms-profinet.
  
  If unsure, say N.

HNS
  This selects the framework support for Hisilicon Network Subsystem. It
  is needed by any driver which provides HNS acceleration engine or make
  use of the engine

HNS3
  This selects the framework support for Hisilicon Network Subsystem 3.
  This layer facilitates clients like ENET, RoCE and user-space ethernet
  drivers(like ODP)to register with HNAE devices and their associated
  operations.

HNS3_DCB
  Say Y here if you want to use Data Center Bridging (DCB) in the HNS3 driver.
  
  If unsure, say N.

HNS3_ENET
  This selects the Ethernet Driver for Hisilicon Network Subsystem 3 for hip08
  family of SoCs. This module depends upon HNAE3 driver to access the HNAE3
  devices and their associated operations.

HNS3_HCLGE
  This selects the HNS3_HCLGE network acceleration engine & its hardware
  compatibility layer. The engine would be used in Hisilicon hip08 family of
  SoCs and further upcoming SoCs.

HNS3_HCLGEVF
  This selects the HNS3 VF drivers network acceleration engine & its hardware
  compatibility layer. The engine would be used in Hisilicon hip08 family of
  SoCs and further upcoming SoCs.

HNS_DSAF
  This selects the DSAF (Distributed System Area Frabric) network
  acceleration engine support. The engine is used in Hisilicon hip05,
  Hi1610 and further ICT SoC

HNS_ENET
  This selects the general ethernet driver for HNS.  This module make
  use of any HNS AE driver, such as HNS_DSAF

HNS_MDIO
  This selects the HNS MDIO support. It is needed by HNS_DSAF to access
  the PHY

HOLTEK_FF
  Say Y here if you have a Holtek On Line Grip based game controller
  and want to have force feedback support for it.

HOSTAP
  Shared driver code for IEEE 802.11b wireless cards based on
  Intersil Prism2/2.5/3 chipset. This driver supports so called
  Host AP mode that allows the card to act as an IEEE 802.11
  access point.
  
  See <http://hostap.epitest.fi/> for more information about the
  Host AP driver configuration and tools. This site includes
  information and tools (hostapd and wpa_supplicant) for WPA/WPA2
  support.
  
  This option includes the base Host AP driver code that is shared by
  different hardware models. You will also need to enable support for
  PLX/PCI/CS version of the driver to actually use the driver.
  
  The driver can be compiled as a module and it will be called
  hostap.

HOSTAP_CS
  Host AP driver's version for Prism2/2.5/3 PC Cards.
  
  "Host AP support for Prism2/2.5/3 IEEE 802.11b" is required for this
  driver and its help text includes more information about the Host AP
  driver.
  
  The driver can be compiled as a module and will be named
  hostap_cs.

HOSTAP_FIRMWARE
  Configure Host AP driver to include support for firmware image
  download. This option by itself only enables downloading to the
  volatile memory, i.e. the card RAM. This option is required to
  support cards that don't have firmware in flash, such as D-Link
  DWL-520 rev E and D-Link DWL-650 rev P.
  
  Firmware image downloading needs a user space tool, prism2_srec.
  It is available from http://hostap.epitest.fi/.

HOSTAP_FIRMWARE_NVRAM
  Allow Host AP driver to write firmware images to the non-volatile
  card memory, i.e. flash memory that survives power cycling.
  Enable this option if you want to be able to change card firmware
  permanently.
  
  Firmware image downloading needs a user space tool, prism2_srec.
  It is available from http://hostap.epitest.fi/.

HOSTAP_PCI
  Host AP driver's version for Prism2.5 PCI adaptors.
  
  "Host AP support for Prism2/2.5/3 IEEE 802.11b" is required for this
  driver and its help text includes more information about the Host AP
  driver.
  
  The driver can be compiled as a module and will be named
  hostap_pci.

HOSTAP_PLX
  Host AP driver's version for Prism2/2.5/3 PC Cards in PLX9052 based
  PCI adaptors.
  
  "Host AP support for Prism2/2.5/3 IEEE 802.11b" is required for this
  driver and its help text includes more information about the Host AP
  driver.
  
  The driver can be compiled as a module and will be named
  hostap_plx.

HOSTESS_SV11
  Driver for Comtrol Hostess SV-11 network card which
  operates on low speed synchronous serial links at up to
  256Kbps, supporting PPP and Cisco HDLC.
  
  The driver will be compiled as a module: the
  module will be called hostess_sv11.

HOTPLUG_CPU
  No help

HOTPLUG_PCI
  Say Y here if you have a motherboard with a PCI Hotplug controller.
  This allows you to add and remove PCI cards while the machine is
  powered up and running.
  
  When in doubt, say N.

HOTPLUG_PCI_ACPI
  Say Y here if you have a system that supports PCI Hotplug using
  ACPI.
  
  When in doubt, say N.

HOTPLUG_PCI_ACPI_IBM
  Say Y here if you have an IBM system that supports PCI Hotplug using
  ACPI.
  
  To compile this driver as a module, choose M here: the
  module will be called acpiphp_ibm.
  
  When in doubt, say N.

HOTPLUG_PCI_COMPAQ
  Say Y here if you have a motherboard with a Compaq PCI Hotplug
  controller.
  
  To compile this driver as a module, choose M here: the
  module will be called cpqphp.
  
  When in doubt, say N.

HOTPLUG_PCI_COMPAQ_NVRAM
  Say Y here if you have a Compaq server that has a PCI Hotplug
  controller.  This will allow the PCI Hotplug driver to store the PCI
  system configuration options in NVRAM.
  
  When in doubt, say N.

HOTPLUG_PCI_CPCI
  Say Y here if you have a CompactPCI system card with CompactPCI
  hotswap support per the PICMG 2.1 specification.
  
  When in doubt, say N.

HOTPLUG_PCI_CPCI_GENERIC
  Say Y here if you have a CompactPCI system card that exposes the #ENUM
  hotswap signal as a bit in a system register that can be read through
  standard port I/O.
  
  To compile this driver as a module, choose M here: the
  module will be called cpcihp_generic.
  
  When in doubt, say N.

HOTPLUG_PCI_CPCI_ZT5550
  Say Y here if you have an Performance Technologies (formerly Intel,
  formerly just Ziatech) Ziatech ZT5550 CompactPCI system card.
  
  To compile this driver as a module, choose M here: the
  module will be called cpcihp_zt5550.
  
  When in doubt, say N.

HOTPLUG_PCI_IBM
  Say Y here if you have a motherboard with a IBM PCI Hotplug
  controller.
  
  To compile this driver as a module, choose M here: the
  module will be called ibmphp.
  
  When in doubt, say N.

HOTPLUG_PCI_PCIE
  Say Y here if you have a motherboard that supports PCI Express Native
  Hotplug
  
  When in doubt, say N.

HOTPLUG_PCI_POWERNV
  Say Y here if you run PowerPC PowerNV platform that supports
  PCI Hotplug
  
  To compile this driver as a module, choose M here: the
  module will be called pnv-php.
  
  When in doubt, say N.

HOTPLUG_PCI_RPA
  Say Y here if you have a RPA system that supports PCI Hotplug.
  
  To compile this driver as a module, choose M here: the
  module will be called rpaphp.
  
  When in doubt, say N.

HOTPLUG_PCI_RPA_DLPAR
  Say Y here if your system supports Dynamic Logical Partitioning
  for I/O slots.
  
  To compile this driver as a module, choose M here: the
  module will be called rpadlpar_io.
  
  When in doubt, say N.

HOTPLUG_PCI_S390
  Say Y here if you want to use the System z PCI Hotplug
  driver for PCI devices. Without this driver it is not
  possible to access stand-by PCI functions nor to deconfigure
  PCI functions.
  
  When in doubt, say Y.

HOTPLUG_PCI_SHPC
  Say Y here if you have a motherboard with a SHPC PCI Hotplug
  controller.
  
  When in doubt, say N.

HOTPLUG_SMT
  No help

HP03
  Say yes here to build support for Hope RF HP03 pressure and
  temperature sensor.
  
  To compile this driver as a module, choose M here: the module
  will be called hp03.

HP206C
  Say yes here to build support for the HOPREF HP206C precision
  barometer and altimeter sensor.
  
  This driver can also be built as a module. If so, the module will
  be called hp206c.

HPET
  If you say Y here, you will have a miscdevice named "/dev/hpet/".  Each
  open selects one of the timers supported by the HPET.  The timers are
  non-periodic and/or periodic.

HPET_EMULATE_RTC
  No help

HPET_MMAP
  If you say Y here, user applications will be able to mmap
  the HPET registers.

HPET_MMAP_DEFAULT
  In some hardware implementations, the page containing HPET
  registers may also contain other things that shouldn't be
  exposed to the user.  This option selects the default (if
  kernel parameter hpet_mmap is not set) user access to the
  registers for applications that require it.

HPET_TIMER
  Use the IA-PC HPET (High Precision Event Timer) to manage
  time in preference to the PIT and RTC, if a HPET is
  present.
  HPET is the next generation timer replacing legacy 8254s.
  The HPET provides a stable time base on SMP
  systems, unlike the TSC, but it is more expensive to access,
  as it is off-chip.  The interface used is documented
  in the HPET spec, revision 1.
  
  You can safely choose Y here.  However, HPET will only be
  activated if the platform and the BIOS support this feature.
  Otherwise the 8254 will be used for timing services.
  
  Choose N to continue using the legacy 8254 timer.

HPFS_FS
  OS/2 is IBM's operating system for PC's, the same as Warp, and HPFS
  is the file system used for organizing files on OS/2 hard disk
  partitions. Say Y if you want to be able to read files from and
  write files to an OS/2 HPFS partition on your hard drive. OS/2
  floppies however are in regular MSDOS format, so you don't need this
  option in order to be able to read them. Read
  <file:Documentation/filesystems/hpfs.rst>.
  
  To compile this file system support as a module, choose M here: the
  module will be called hpfs.  If unsure, say N.

HPLANCE
  If you want to use the builtin "LANCE" Ethernet controller on an
  HP300 machine, say Y here.

HPWDT_NMI_DECODING
  Enables the NMI handler for the watchdog pretimeout NMI and the iLO
  "Generate NMI to System" virtual button.  When an NMI is claimed
  by the driver, panic is called.

HP_ACCEL
  This driver provides support for the "Mobile Data Protection System 3D"
  or "3D DriveGuard" feature of HP laptops. On such systems the driver
  should load automatically (via ACPI alias).
  
  Support for a led indicating disk protection will be provided as
  hp::hddprotect. For more information on the feature, refer to
  Documentation/misc-devices/lis3lv02d.rst.
  
  To compile this driver as a module, choose M here: the module will
  be called hp_accel.

HP_ILO
  The channel interface driver allows applications to communicate
  with iLO management processors present on HP ProLiant servers.
  Upon loading, the driver creates /dev/hpilo/dXccbN files, which
  can be used to gather data from the management processor, via
  read and write system calls.
  
  To compile this driver as a module, choose M here: the
  module will be called hpilo.

HP_SDC
  This option enables support for the "System Device
  Controller", an i8042 carrying microcode to manage a
  few miscellaneous devices on some Hewlett Packard systems.
  The SDC itself contains a 10ms resolution timer/clock capable
  of delivering interrupts on a periodic and one-shot basis.
  The SDC may also be connected to a battery-backed real-time
  clock, a basic audio waveform generator, and an HP-HIL Master
  Link Controller serving up to seven input devices.
  
  By itself this option is rather useless, but enabling it will
  enable selection of drivers for the abovementioned devices.
  It is, however, incompatible with the old, reliable HIL keyboard
  driver, and the new HIL driver is experimental, so if you plan
  to use a HIL keyboard as your primary keyboard, you may wish
  to keep using that driver until the new HIL drivers have had
  more testing.

HP_SDC_RTC
  Say Y here if you want to support the built-in real time clock
  of the HP SDC controller.

HP_WATCHDOG
  A software monitoring watchdog and NMI handling driver. This driver
  will detect lockups and provide a stack trace. This is a driver that
  will only load on an HP ProLiant system with a minimum of iLO2 support.
  To compile this driver as a module, choose M here: the module will be
  called hpwdt.

HP_WIRELESS
  This driver provides supports for new HP wireless button for Windows 8.
  On such systems the driver should load automatically (via ACPI alias).
  
  To compile this driver as a module, choose M here: the module will
  be called hp-wireless.

HP_WMI
  Say Y here if you want to support WMI-based hotkeys on HP laptops and
  to read data from WMI such as docking or ambient light sensor state.
  
  To compile this driver as a module, choose M here: the module will
  be called hp-wmi.

HSA_AMD
  Enable this if you want to use HSA features on AMD GPU devices.

HSEM_U8500
  Say y here to support the STE Hardware Semaphore functionality, which
  provides a synchronisation mechanism for the various processor on the
  SoC.
  
  If unsure, say N.

HSI
  The "High speed synchronous Serial Interface" is
  synchronous serial interface used mainly to connect
  application engines and cellular modems.

HSI_BOARDINFO
  No help

HSI_CHAR
  If you say Y here, you will enable the HSI/SSI character driver.
  This driver provides a simple character device interface for
  serial communication with the cellular modem over HSI/SSI bus.

HSR
  This enables IEC 62439 defined High-availability Seamless
  Redundancy (HSR) and Parallel Redundancy Protocol (PRP).
  
  If you say Y here, then your Linux box will be able to act as a
  DANH ("Doubly attached node implementing HSR") or DANP ("Doubly
  attached node implementing PRP"). For this to work, your Linux box
  needs (at least) two physical Ethernet interfaces.
  
  For DANH, it must be connected as a node in a ring network together
  with other HSR capable nodes. All Ethernet frames sent over the HSR
  device will be sent in both directions on the ring (over both slave
  ports), giving a redundant, instant fail-over network. Each HSR node
  in the ring acts like a bridge for HSR frames, but filters frames
  that have been forwarded earlier.
  
  For DANP, it must be connected as a node connecting to two
  separate networks over the two slave interfaces. Like HSR, Ethernet
  frames sent over the PRP device will be sent to both networks giving
  a redundant, instant fail-over network. Unlike HSR, PRP networks
  can have Singly Attached Nodes (SAN) such as PC, printer, bridges
  etc and will be able to communicate with DANP nodes.
  
  This code is a "best effort" to comply with the HSR standard as
  described in IEC 62439-3:2010 (HSRv0) and IEC 62439-3:2012 (HSRv1),
  and PRP standard described in IEC 62439-4:2012 (PRP), but no
  compliancy tests have been made. Use iproute2 to select the protocol
  you would like to use.
  
  You need to perform any and all necessary tests yourself before
  relying on this code in a safety critical system!
  
  If unsure, say N.

HSU_DMA
  No help

HSU_DMA_PCI
  No help

HT16K33
  Say yes here to add support for Holtek HT16K33, RAM mapping 16*8
  LED controller driver with keyscan.

HTC_EGPIO
  This driver supports the CPLD egpio chip present on
  several HTC phones.  It provides basic support for input
  pins, output pins, and irqs.

HTC_I2CPLD
  If you say yes here you get support for the supposed CPLD
  found on omap850 HTC devices like the HTC Wizard and HTC Herald.
  This device provides input and output GPIOs through an I2C
  interface to one or more sub-chips.

HTC_PASIC3
  This core driver provides register access for the LED/DS1WM
  chips labeled "AIC2" and "AIC3", found on HTC Blueangel and
  HTC Magician devices, respectively. Actual functionality is
  handled by the leds-pasic3 and ds1wm drivers.

HTS221
  Say yes here to build support for STMicroelectronics HTS221
  temperature-humidity sensor
  
  To compile this driver as a module, choose M here: the module
  will be called hts221.

HTS221_I2C
  No help

HTS221_SPI
  No help

HTU21
  If you say yes here you get support for the Measurement Specialties
  HTU21 humidity and temperature sensor.
  This driver is also used for MS8607 temperature, pressure & humidity
  sensor
  
  This driver can also be built as a module. If so, the module will
  be called htu21.

HUAWEI_WMI
  This driver provides support for Huawei WMI hotkeys, battery charge
  control, fn-lock, mic-mute LED, and other extra features.
  
  To compile this driver as a module, choose M here: the module
  will be called huawei-wmi.

HUGETLBFS
  hugetlbfs is a filesystem backing for HugeTLB pages, based on
  ramfs. For architectures that support it, say Y here and read
  <file:Documentation/admin-guide/mm/hugetlbpage.rst> for details.
  
  If unsure, say N.

HUGETLB_PAGE
  No help

HVCS
  Partitionable IBM Power5 ppc64 machines allow hosting of
  firmware virtual consoles from one Linux partition by
  another Linux partition.  This driver allows console data
  from Linux partitions to be accessed through TTY device
  interfaces in the device tree of a Linux partition running
  this driver.
  
  To compile this driver as a module, choose M here: the
  module will be called hvcs.  Additionally, this module
  will depend on arch specific APIs exported from hvcserver.ko
  which will also be compiled when this driver is built as a
  module.

HVC_CONSOLE
  pSeries machines when partitioned support a hypervisor virtual
  console. This driver allows each pSeries partition to have a console
  which is accessed via the HMC.

HVC_DCC
  This console uses the JTAG DCC on ARM to create a console under the HVC
  driver. This console is used through a JTAG only on ARM. If you don't have
  a JTAG then you probably don't want this option.

HVC_DRIVER
  Generic "hypervisor virtual console" infrastructure for various
  hypervisors (pSeries, iSeries, Xen).
  It will automatically be selected if one of the back-end console drivers
  is selected.

HVC_IRQ
  No help

HVC_IUCV
  This driver provides a Hypervisor console (HVC) back-end to access
  a Linux (console) terminal via a z/VM IUCV communication path.

HVC_OLD_HVSI
  No help

HVC_OPAL
  PowerNV machines running under OPAL need that driver to get a console

HVC_RISCV_SBI
  This enables support for console output via RISC-V SBI calls, which
  is normally used only during boot to output printk.
  
  If you don't know what do to here, say Y.

HVC_RTAS
  IBM Console device driver which makes use of RTAS

HVC_UDBG
  This is meant to be used during HW bring up or debugging when
  no other console mechanism exist but udbg, to get you a quick
  console for userspace. Do NOT enable in production kernels.

HVC_XEN
  Xen virtual console device driver

HVC_XEN_FRONTEND
  Xen driver for secondary virtual consoles

HWBM
  No help

HWLAT_TRACER
  This tracer, when enabled will create one or more kernel threads,
  depending on what the cpumask file is set to, which each thread
  spinning in a loop looking for interruptions caused by
  something other than the kernel. For example, if a
  System Management Interrupt (SMI) takes a noticeable amount of
  time, this tracer will detect it. This is useful for testing
  if a system is reliable for Real Time tasks.
  
  Some files are created in the tracing directory when this
  is enabled:
  
    hwlat_detector/width   - time in usecs for how long to spin for
    hwlat_detector/window  - time in usecs between the start of each
                              iteration
  
  A kernel thread is created that will spin with interrupts disabled
  for "width" microseconds in every "window" cycle. It will not spin
  for "window - width" microseconds, where the system can
  continue to operate.
  
  The output will appear in the trace and trace_pipe files.
  
  When the tracer is not running, it has no affect on the system,
  but when it is running, it can cause the system to be
  periodically non responsive. Do not run this tracer on a
  production system.
  
  To enable this tracer, echo in "hwlat" into the current_tracer
  file. Every time a latency is greater than tracing_thresh, it will
  be recorded into the ring buffer.

HWMON
  Hardware monitoring devices let you monitor the hardware health
  of a system. Most modern motherboards include such a device. It
  can include temperature sensors, voltage sensors, fan speed
  sensors and various additional features such as the ability to
  control the speed of the fans. If you want this support you
  should say Y here and also to the specific driver(s) for your
  sensors chip(s) below.
  
  To find out which specific driver(s) you need, use the
  sensors-detect script from the lm_sensors package.  Read
  <file:Documentation/hwmon/userspace-tools.rst> for details.
  
  This support can also be built as a module. If so, the module
  will be called hwmon.

HWMON_DEBUG_CHIP
  Say Y here if you want the I2C chip drivers to produce a bunch of
  debug messages to the system log.  Select this if you are having
  a problem with I2C support and want to see more of what is going
  on.

HWMON_VID
  No help

HWPOISON_INJECT
  No help

HWSPINLOCK
  No help

HWSPINLOCK_OMAP
  Say y here to support the OMAP Hardware Spinlock device (firstly
  introduced in OMAP4).
  
  If unsure, say N.

HWSPINLOCK_QCOM
  Say y here to support the Qualcomm Hardware Mutex functionality, which
  provides a synchronisation mechanism for the various processors on
  the SoC.
  
  If unsure, say N.

HWSPINLOCK_SIRF
  Say y here to support the SIRF Hardware Spinlock device, which
  provides a synchronisation mechanism for the various processors
  on the SoC.
  
  It's safe to say n here if you're not interested in SIRF hardware
  spinlock or just want a bare minimum kernel.

HWSPINLOCK_SPRD
  Say y here to support the SPRD Hardware Spinlock device.
  
  If unsure, say N.

HWSPINLOCK_STM32
  Say y here to support the STM32 Hardware Spinlock device.
  
  If unsure, say N.

HW_CONSOLE
  No help

HW_RANDOM
  Hardware Random Number Generator Core infrastructure.
  
  To compile this driver as a module, choose M here: the
  module will be called rng-core.  This provides a device
  that's usually called /dev/hwrng, and which exposes one
  of possibly several hardware random number generators.
  
  These hardware random number generators do feed into the
  kernel's random number generator entropy pool.
  
  If unsure, say Y.

HW_RANDOM_AMD
  This driver provides kernel-side support for the Random Number
  Generator hardware found on AMD 76x-based motherboards.
  
  To compile this driver as a module, choose M here: the
  module will be called amd-rng.
  
  If unsure, say Y.

HW_RANDOM_ATMEL
  This driver provides kernel-side support for the Random Number
  Generator hardware found on Atmel AT91 devices.
  
  To compile this driver as a module, choose M here: the
  module will be called atmel-rng.
  
  If unsure, say Y.

HW_RANDOM_BA431
  This driver provides kernel-side support for the Random Number
  Generator hardware based on Silex Insight BA431 IP.
  
  To compile this driver as a module, choose M here: the
  module will be called ba431-rng.

HW_RANDOM_BCM2835
  This driver provides kernel-side support for the Random Number
  Generator hardware found on the Broadcom BCM2835 and BCM63xx SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called bcm2835-rng
  
  If unsure, say Y.

HW_RANDOM_CAVIUM
  This driver provides kernel-side support for the Random Number
  Generator hardware found on Cavium SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called cavium_rng.
  
  If unsure, say Y.

HW_RANDOM_CCTRNG
  Say 'Y' to enable the True Random Number Generator driver for the
  Arm TrustZone CryptoCell family of processors.
  Currently the CryptoCell 713 and 703 are supported.
  The driver is supported only in SoC where Trusted Execution
  Environment is not used.
  Choose 'M' to compile this driver as a module. The module
  will be called cctrng.
  If unsure, say 'N'.

HW_RANDOM_EXYNOS
  This driver provides support for the True Random Number
  Generator available in Exynos SoCs.
  
  To compile this driver as a module, choose M here: the module
  will be called exynos-trng.
  
  If unsure, say Y.

HW_RANDOM_GEODE
  This driver provides kernel-side support for the Random Number
  Generator hardware found on the AMD Geode LX.
  
  To compile this driver as a module, choose M here: the
  module will be called geode-rng.
  
  If unsure, say Y.

HW_RANDOM_HISI
  This driver provides kernel-side support for the Random Number
  Generator hardware found on Hisilicon Hip04 and Hip05 SoC.
  
  To compile this driver as a module, choose M here: the
  module will be called hisi-rng.
  
  If unsure, say Y.

HW_RANDOM_IMX_RNGC
  This driver provides kernel-side support for the Random Number
  Generator Version C hardware found on some Freescale i.MX
  processors. Version B is also supported by this driver.
  
  To compile this driver as a module, choose M here: the
  module will be called imx-rngc.
  
  If unsure, say Y.

HW_RANDOM_INGENIC_RNG
  This driver provides kernel-side support for the Random Number Generator
  hardware found in ingenic JZ4780 and X1000 SoC. MIPS Creator CI20 uses
  JZ4780 SoC, YSH & ATIL CU1000-Neo uses X1000 SoC.
  
  To compile this driver as a module, choose M here: the
  module will be called ingenic-rng.
  
  If unsure, say Y.

HW_RANDOM_INGENIC_TRNG
  This driver provides kernel-side support for the True Random Number Generator
  hardware found in ingenic X1830 SoC. YSH & ATIL CU1830-Neo uses X1830 SoC.
  
  To compile this driver as a module, choose M here: the
  module will be called ingenic-trng.
  
  If unsure, say Y.

HW_RANDOM_INTEL
  This driver provides kernel-side support for the Random Number
  Generator hardware found on Intel i8xx-based motherboards.
  
  To compile this driver as a module, choose M here: the
  module will be called intel-rng.
  
  If unsure, say Y.

HW_RANDOM_IPROC_RNG200
  This driver provides kernel-side support for the RNG200
  hardware found on the Broadcom iProc and STB SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called iproc-rng200
  
  If unsure, say Y.

HW_RANDOM_IXP4XX
  This driver provides kernel-side support for the Pseudo-Random
  Number Generator hardware found on the Intel IXP45x/46x NPU.
  
  To compile this driver as a module, choose M here: the
  module will be called ixp4xx-rng.
  
  If unsure, say Y.

HW_RANDOM_KEYSTONE
  This option enables Keystone's hardware random generator.

HW_RANDOM_MESON
  This driver provides kernel-side support for the Random Number
  Generator hardware found on Amlogic Meson SoCs.
  
  To compile this driver as a module, choose M here. the
  module will be called meson-rng.
  
  If unsure, say Y.

HW_RANDOM_MTK
  This driver provides kernel-side support for the Random Number
  Generator hardware found on Mediatek SoCs.
  
  To compile this driver as a module, choose M here. the
  module will be called mtk-rng.
  
  If unsure, say Y.

HW_RANDOM_MXC_RNGA
  This driver provides kernel-side support for the Random Number
  Generator hardware found on Freescale i.MX processors.
  
  To compile this driver as a module, choose M here: the
  module will be called mxc-rnga.
  
  If unsure, say Y.

HW_RANDOM_N2RNG
  This driver provides kernel-side support for the Random Number
  Generator hardware found on Niagara2 cpus.
  
  To compile this driver as a module, choose M here: the
  module will be called n2-rng.
  
  If unsure, say Y.

HW_RANDOM_NOMADIK
  This driver provides kernel-side support for the Random Number
  Generator hardware found on ST-Ericsson SoCs (8815 and 8500).
  
  To compile this driver as a module, choose M here: the
  module will be called nomadik-rng.
  
  If unsure, say Y.

HW_RANDOM_NPCM
  This driver provides support for the Random Number

HW_RANDOM_OCTEON
  This driver provides kernel-side support for the Random Number
  Generator hardware found on Octeon processors.
  
  To compile this driver as a module, choose M here: the
  module will be called octeon-rng.
  
  If unsure, say Y.

HW_RANDOM_OMAP
  This driver provides kernel-side support for the Random Number

HW_RANDOM_OMAP3_ROM
  This driver provides kernel-side support for the Random Number
  Generator hardware found on OMAP34xx processors.
  
  To compile this driver as a module, choose M here: the
  module will be called omap3-rom-rng.
  
  If unsure, say Y.

HW_RANDOM_OPTEE
  This  driver provides support for OP-TEE based Random Number
  Generator on ARM SoCs where hardware entropy sources are not
  accessible to normal world (Linux).
  
  To compile this driver as a module, choose M here: the module
  will be called optee-rng.
  
  If unsure, say Y.

HW_RANDOM_PASEMI
  This driver provides kernel-side support for the Random Number
  Generator hardware found on PA Semi PWRficient SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called pasemi-rng.
  
  If unsure, say Y.

HW_RANDOM_PIC32
  This driver provides kernel-side support for the Random Number
  Generator hardware found on a PIC32.
  
  To compile this driver as a module, choose M here. the
  module will be called pic32-rng.
  
  If unsure, say Y.

HW_RANDOM_POWERNV
  This is the driver for Random Number Generator hardware found
  in POWER7+ and above machines for PowerNV platform.
  
  To compile this driver as a module, choose M here: the
  module will be called powernv-rng.
  
  If unsure, say Y.

HW_RANDOM_PPC4XX
  This option provides the kernel-side support for the TRNG hardware
  found in the security function of some PowerPC 4xx SoCs.

HW_RANDOM_PSERIES
  This driver provides kernel-side support for the Random Number
  Generator hardware found on POWER7+ machines and above
  
  To compile this driver as a module, choose M here: the
  module will be called pseries-rng.
  
  If unsure, say Y.

HW_RANDOM_S390
  This driver provides kernel-side support for the True
  Random Number Generator available as CPACF extension
  on modern s390 hardware platforms.
  
  To compile this driver as a module, choose M here: the
  module will be called s390-trng.
  
  If unsure, say Y.

HW_RANDOM_ST
  This driver provides kernel-side support for the Random Number
  Generator hardware found on STi series of SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called st-rng.

HW_RANDOM_STM32
  This driver provides kernel-side support for the Random Number
  Generator hardware found on STM32 microcontrollers.
  
  To compile this driver as a module, choose M here: the
  module will be called stm32-rng.
  
  If unsure, say N.

HW_RANDOM_TIMERIOMEM
  This driver provides kernel-side support for a generic Random
  Number Generator used by reading a 'dumb' iomem address that
  is to be read no faster than, for example, once a second;
  the default FPGA bitstream on the TS-7800 has such functionality.
  
  To compile this driver as a module, choose M here: the
  module will be called timeriomem-rng.
  
  If unsure, say Y.

HW_RANDOM_TPM
  This setting exposes the TPM's Random Number Generator as a hwrng
  device. This allows the kernel to collect randomness from the TPM at
  boot, and provides the TPM randomines in /dev/hwrng.
  
  If unsure, say Y.

HW_RANDOM_TX4939
  This driver provides kernel-side support for the Random Number
  Generator hardware found on TX4939 SoC.
  
  To compile this driver as a module, choose M here: the
  module will be called tx4939-rng.
  
  If unsure, say Y.

HW_RANDOM_VIA
  This driver provides kernel-side support for the Random Number
  Generator hardware found on VIA based motherboards.
  
  To compile this driver as a module, choose M here: the
  module will be called via-rng.
  
  If unsure, say Y.

HW_RANDOM_VIRTIO
  This driver provides kernel-side support for the virtual Random Number
  Generator hardware.
  
  To compile this driver as a module, choose M here: the
  module will be called virtio-rng.  If unsure, say N.

HW_RANDOM_XGENE
  This driver provides kernel-side support for the Random Number
  Generator hardware found on APM X-Gene SoC.
  
  To compile this driver as a module, choose M here: the
  module will be called xgene_rng.
  
  If unsure, say Y.

HW_RANDOM_XIPHERA
  This driver provides kernel-side support for Xiphera True Random
  Number Generator Intellectual Property Core.
  
  To compile this driver as a module, choose M here: the
  module will be called xiphera-trng.

HX711
  If you say yes here you get support for AVIA HX711 ADC which is used
  for weigh cells
  
  This driver uses two GPIOs, one acts as the clock and controls the
  channel selection and gain, the other one is used for the measurement
  data
  
  Currently the raw value is read from the chip and delivered.
  To get an actual weight one needs to subtract the
  zero offset and multiply by a scale factor.
  This should be done in userspace.
  
  This driver can also be built as a module. If so, the module will be
  called hx711.

HYDRA
  If you have a Hydra Ethernet adapter, say Y. Otherwise, say N.
  
  To compile this driver as a module, choose M here: the module
  will be called hydra.

HYPERV
  Select this option to run Linux as a Hyper-V client operating
  system.

HYPERVISOR_GUEST
  Say Y here to enable options for running Linux under various hyper-
  visors. This option enables basic hypervisor detection and platform
  setup.
  
  If you say N, all options in this submenu will be skipped and
  disabled, and Linux guest support won't be built in.

HYPERV_BALLOON
  Select this option to enable Hyper-V Balloon driver.

HYPERV_IOMMU
  Stub IOMMU driver to handle IRQs as to allow Hyper-V Linux
  guests to run with x2APIC mode enabled.

HYPERV_KEYBOARD
  Select this option to enable the Hyper-V Keyboard driver.
  
  To compile this driver as a module, choose M here: the module will
  be called hyperv_keyboard.

HYPERV_NET
  Select this option to enable the Hyper-V virtual network driver.

HYPERV_STORAGE
  Select this option to enable the Hyper-V virtual storage driver.

HYPERV_TESTING
  Select this option to enable Hyper-V vmbus testing.

HYPERV_TIMER
  No help

HYPERV_UTILS
  Select this option to enable the Hyper-V Utilities.

HYPERV_VSOCKETS
  This module implements a Hyper-V transport for Virtual Sockets.
  
  Enable this transport if your Virtual Machine host supports Virtual
  Sockets over Hyper-V VMBus.
  
  To compile this driver as a module, choose M here: the module will be
  called hv_sock. If unsure, say N.

HZ
  No help

HZ_100
  100 Hz is a typical choice for servers, SMP and NUMA systems
  with lots of processors that may show reduced performance if
  too many timer interrupts are occurring.

HZ_1000
  1000 Hz is the preferred choice for desktop systems and other
  systems requiring fast interactive responses to events.

HZ_250
  250 Hz is a good compromise choice allowing server performance
  while also showing good interactive responsiveness even
  on SMP and NUMA systems. If you are going to be using NTSC video
  or multimedia, selected 300Hz instead.

HZ_300
  300 Hz is a good compromise choice allowing server performance
  while also showing good interactive responsiveness even
  on SMP and NUMA systems and exactly dividing by both PAL and
  NTSC frame rates for video and multimedia work.

HZ_PERIODIC
  This option keeps the tick running periodically at a constant
  rate, even when the CPU doesn't need it.

I2C
  I2C (pronounce: I-squared-C) is a slow serial bus protocol used in
  many micro controller applications and developed by Philips.  SMBus,
  or System Management Bus is a subset of the I2C protocol.  More
  information is contained in the directory <file:Documentation/i2c/>,
  especially in the file called "summary" there.
  
  Both I2C and SMBus are supported here. You will need this for
  hardware sensors support, and also for Video For Linux support.
  
  If you want I2C support, you should say Y here and also to the
  specific driver for your bus adapter(s) below.
  
  This I2C support can also be built as a module.  If so, the module
  will be called i2c-core.

I2C_ACORN
  Say yes if you want to support the I2C bus on Acorn platforms.
  
  If you don't know, say Y.

I2C_ALGOBIT
  No help

I2C_ALGOPCA
  No help

I2C_ALGOPCF
  No help

I2C_ALI1535
  If you say yes to this option, support will be included for the SMB
  Host controller on Acer Labs Inc. (ALI) M1535 South Bridges.  The SMB
  controller is part of the 7101 device, which is an ACPI-compliant
  Power Management Unit (PMU).
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-ali1535.

I2C_ALI1563
  If you say yes to this option, support will be included for the SMB
  Host controller on Acer Labs Inc. (ALI) M1563 South Bridges.  The SMB
  controller is part of the 7101 device, which is an ACPI-compliant
  Power Management Unit (PMU).
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-ali1563.

I2C_ALI15X3
  If you say yes to this option, support will be included for the
  Acer Labs Inc. (ALI) M1514 and M1543 motherboard I2C interfaces.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-ali15x3.

I2C_ALTERA
  If you say yes to this option, support will be included for the
  Altera Soft IP I2C interfaces on SoCFPGA and Nios2 architectures.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-altera.

I2C_AMD756
  If you say yes to this option, support will be included for the AMD
  756/766/768 mainboard I2C interfaces.  The driver also includes
  support for the first (SMBus 1.0) I2C interface of the AMD 8111 and
  the nVidia nForce I2C interface.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-amd756.

I2C_AMD756_S4882
  Enabling this option will add specific SMBus support for the Tyan
  S4882 motherboard.  On this 4-CPU board, the SMBus is multiplexed
  over 8 different channels, where the various memory module EEPROMs
  and temperature sensors live.  Saying yes here will give you access
  to these in addition to the trunk.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-amd756-s4882.

I2C_AMD8111
  If you say yes to this option, support will be included for the
  second (SMBus 2.0) AMD 8111 mainboard I2C interface.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-amd8111.

I2C_AMD_MP2
  If you say yes to this option, support will be included for the AMD
  MP2 PCIe I2C adapter.
  
  This driver can also be built as modules.  If so, the modules will
  be called i2c-amd-mp2-pci and i2c-amd-mp2-plat.

I2C_ARB_GPIO_CHALLENGE
  If you say yes to this option, support will be included for an
  I2C multimaster arbitration scheme using GPIOs and a challenge &
  response mechanism where masters have to claim the bus by asserting
  a GPIO.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-arb-gpio-challenge.

I2C_ASPEED
  If you say yes to this option, support will be included for the
  Aspeed I2C controller.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-aspeed.

I2C_AT91
  This supports the use of the I2C interface on Atmel AT91
  processors.
  
  A serious problem is that there is no documented way to issue
  repeated START conditions for more than two messages, as needed
  to support combined I2C messages.  Use the i2c-gpio driver
  unless your system can cope with this limitation.
  
  Caution! at91rm9200, at91sam9261, at91sam9260, at91sam9263 devices
  don't have clock stretching in transmission mode. For that reason,
  you can encounter underrun issues causing premature stop sendings if
  the latency to fill the transmission register is too long. If you
  are facing this situation, use the i2c-gpio driver.

I2C_AT91_SLAVE_EXPERIMENTAL
  If you say yes to this option, support for the slave mode will be
  added. Caution: do not use it for production. This feature has not
  been tested in a heavy way, help wanted.
  There are known bugs:
    - It can hang, on a SAMA5D4, after several transfers.
    - There are some mismtaches with a SAMA5D4 as slave and a SAMA5D2 as
    master.

I2C_AU1550
  If you say yes to this option, support will be included for the
  Au1550/Au1200/Au1300 SMBus interface.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-au1550.

I2C_AXXIA
  Say yes if you want to support the I2C bus on Axxia platforms.
  
  Please note that this controller is limited to transfers of maximum
  255 bytes in length. Any attempt to to a larger transfer will return
  an error.

I2C_BCM2835
  If you say yes to this option, support will be included for the
  BCM2835 I2C controller.
  
  If you don't know what to do here, say N.
  
  This support is also available as a module.  If so, the module
  will be called i2c-bcm2835.

I2C_BCM_IPROC
  If you say yes to this option, support will be included for the
  Broadcom iProc I2C controller.
  
  If you don't know what to do here, say N.

I2C_BCM_KONA
  If you say yes to this option, support will be included for the
  I2C interface on the Broadcom Kona family of processors.
  
  If you do not need KONA I2C interface, say N.

I2C_BOARDINFO
  No help

I2C_BRCMSTB
  If you say yes to this option, support will be included for the
  I2C interface on the Broadcom Settop/DSL SoCs.
  
  If you do not need I2C interface, say N.

I2C_CADENCE
  Say yes here to select Cadence I2C Host Controller. This controller is
  e.g. used by Xilinx Zynq.

I2C_CBUS_GPIO
  Support for CBUS access using I2C API. Mostly relevant for Nokia
  Internet Tablets (770, N800 and N810).
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-cbus-gpio.

I2C_CHARDEV
  Say Y here to use i2c-* device files, usually found in the /dev
  directory on your system.  They make it possible to have user-space
  programs use the I2C bus.  Information on how to do this is
  contained in the file <file:Documentation/i2c/dev-interface.rst>.
  
  This support is also available as a module.  If so, the module
  will be called i2c-dev.

I2C_CHT_WC
  If you say yes to this option, support will be included for the
  SMBus controller found in the Intel Cherry Trail Whiskey Cove PMIC
  found on some Intel Cherry Trail systems.
  
  Note this controller is hooked up to a TI bq24292i charger-IC,
  combined with a FUSB302 Type-C port-controller as such it is advised
  to also select CONFIG_TYPEC_FUSB302=m.

I2C_COMPAT
  Say Y here if you intend to run lm-sensors 3.1.1 or older, or any
  other user-space package which expects i2c adapters to be class
  devices. If you don't know, say Y.

I2C_CPM
  This supports the use of the I2C interface on Freescale
  processors with CPM1 or CPM2.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-cpm.

I2C_CROS_EC_TUNNEL
  If you say yes here you get an I2C bus that will tunnel i2c commands
  through to the other side of the ChromeOS EC to the i2c bus
  connected there. This will work whatever the interface used to
  talk to the EC (SPI, I2C or LPC).

I2C_DAVINCI
  Support for TI DaVinci I2C controller driver.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-davinci.
  
  Please note that this driver might be needed to bring up other
  devices such as DaVinci NIC.
  For details please see http://www.ti.com/davinci

I2C_DEBUG_ALGO
  Say Y here if you want the I2C algorithm drivers to produce a bunch
  of debug messages to the system log.  Select this if you are having
  a problem with I2C support and want to see more of what is going
  on.

I2C_DEBUG_BUS
  Say Y here if you want the I2C bus drivers to produce a bunch of
  debug messages to the system log.  Select this if you are having
  a problem with I2C support and want to see more of what is going
  on.

I2C_DEBUG_CORE
  Say Y here if you want the I2C core to produce a bunch of debug
  messages to the system log.  Select this if you are having a
  problem with I2C support and want to see more of what is going on.

I2C_DEMUX_PINCTRL
  If you say yes to this option, support will be included for an I2C
  demultiplexer that uses the pinctrl subsystem. This is useful if you
  want to change the I2C master at run-time depending on features.

I2C_DESIGNWARE_BAYTRAIL
  This driver enables managed host access to the PMIC I2C bus on select
  Intel BayTrail platforms using the X-Powers AXP288 PMIC. It allows
  the host to request uninterrupted access to the PMIC's I2C bus from
  the platform firmware controlling it. You should say Y if running on
  a BayTrail system using the AXP288.

I2C_DESIGNWARE_CORE
  No help

I2C_DESIGNWARE_PCI
  If you say yes to this option, support will be included for the
  Synopsys DesignWare I2C adapter. Only master mode is supported.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-designware-pci.

I2C_DESIGNWARE_PLATFORM
  If you say yes to this option, support will be included for the
  Synopsys DesignWare I2C adapter.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-designware-platform.

I2C_DESIGNWARE_SLAVE
  If you say yes to this option, support will be included for the
  Synopsys DesignWare I2C slave adapter.
  
  This is not a standalone module, this module compiles together with
  i2c-designware-core.

I2C_DIGICOLOR
  Support for Conexant Digicolor SoCs (CX92755) I2C controller driver.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-digicolor.

I2C_DIOLAN_U2C
  If you say yes to this option, support will be included for Diolan
  U2C-12, a USB to I2C interface.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-diolan-u2c.

I2C_DLN2
  If you say yes to this option, support will be included for Diolan
  DLN2, a USB to I2C interface.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-dln2.

I2C_EFM32
  This driver supports the i2c block found in Energy Micro's EFM32
  SoCs.

I2C_EG20T
  This driver is for PCH(Platform controller Hub) I2C of EG20T which
  is an IOH(Input/Output Hub) for x86 embedded processor.
  This driver can access PCH I2C bus device.
  
  This driver also can be used for LAPIS Semiconductor IOH(Input/
  Output Hub), ML7213, ML7223 and ML7831.
  ML7213 IOH is for IVI(In-Vehicle Infotainment) use, ML7223 IOH is
  for MP(Media Phone) use and ML7831 IOH is for general purpose use.
  ML7213/ML7223/ML7831 is companion chip for Intel Atom E6xx series.
  ML7213/ML7223/ML7831 is completely compatible for Intel EG20T PCH.

I2C_ELEKTOR
  This supports the PCF8584 ISA bus I2C adapter.  Say Y if you own
  such an adapter.
  
  This support is also available as a module.  If so, the module
  will be called i2c-elektor.

I2C_EMEV2
  If you say yes to this option, support will be included for the
  I2C interface on the Renesas Electronics EM/EV family of processors.

I2C_EXYNOS5
  High-speed I2C controller on Exynos5 and newer Samsung SoCs.

I2C_FSI
  Driver for FSI bus attached I2C masters. These are I2C masters that
  are connected to the system over an FSI bus, instead of the more
  common PCI or MMIO interface.
  
  This driver can also be built as a module. If so, the module will be
  called as i2c-fsi.

I2C_GPIO
  This is a very simple bitbanging I2C driver utilizing the
  arch-neutral GPIO API to control the SCL and SDA lines.

I2C_GPIO_FAULT_INJECTOR
  This adds some functionality to the i2c-gpio driver which can inject
  faults to an I2C bus, so another bus master can be stress-tested.
  This is for debugging. If unsure, say 'no'.

I2C_HELPER_AUTO
  Some I2C bus drivers require so-called "I2C algorithm" modules
  to work. These are basically software-only abstractions of generic
  I2C interfaces. This option will autoselect them so that you don't
  have to care.
  
  Unselect this only if you need to enable additional helper
  modules, for example for use with external I2C bus drivers.
  
  In doubt, say Y.

I2C_HID
  Say Y here if you use a keyboard, a touchpad, a touchscreen, or any
  other HID based devices which is connected to your computer via I2C.
  
  If unsure, say N.
  
  This support is also available as a module.  If so, the module
  will be called i2c-hid.

I2C_HIGHLANDER
  If you say yes to this option, support will be included for
  the SMBus interface located in the FPGA on various Highlander
  boards, particularly the R0P7780LC0011RL and R0P7785LC0011RL
  FPGAs. This is wholly unrelated to the SoC I2C.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-highlander.

I2C_HIX5HD2
  Say Y here to include support for the high-speed I2C controller
  used in HiSilicon hix5hd2 SoCs.
  
  This driver can also be built as a module. If so, the module
  will be called i2c-hix5hd2.

I2C_HYDRA
  This supports the use of the I2C interface in the Apple Hydra Mac
  I/O chip on some CHRP machines (e.g. the LongTrail).  Say Y if you
  have such a machine.
  
  This support is also available as a module.  If so, the module
  will be called i2c-hydra.

I2C_I801
  If you say yes to this option, support will be included for the Intel
  801 family of mainboard I2C interfaces.  Specifically, the following
  versions of the chipset are supported:
    82801AA
    82801AB
    82801BA
    82801CA/CAM
    82801DB
    82801EB/ER (ICH5/ICH5R)
    6300ESB
    ICH6
    ICH7
    ESB2
    ICH8
    ICH9
    EP80579 (Tolapai)
    ICH10
    5/3400 Series (PCH)
    6 Series (PCH)
    Patsburg (PCH)
    DH89xxCC (PCH)
    Panther Point (PCH)
    Lynx Point (PCH)
    Avoton (SOC)
    Wellsburg (PCH)
    Coleto Creek (PCH)
    Wildcat Point (PCH)
    BayTrail (SOC)
    Braswell (SOC)
    Sunrise Point (PCH)
    Kaby Lake (PCH)
    DNV (SOC)
    Broxton (SOC)
    Lewisburg (PCH)
    Gemini Lake (SOC)
    Cannon Lake (PCH)
    Cedar Fork (PCH)
    Ice Lake (PCH)
    Comet Lake (PCH)
    Elkhart Lake (PCH)
    Tiger Lake (PCH)
    Jasper Lake (SOC)
    Emmitsburg (PCH)
    Alder Lake (PCH)
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-i801.

I2C_IBM_IIC
  Say Y here if you want to use IIC peripheral found on
  embedded IBM PPC 4xx based systems.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-ibm_iic.

I2C_ICY
  This supports the PCF8584 Zorro bus I2C adapter, known as ICY.
  Say Y if you own such an adapter.
  
  This support is also available as a module.  If so, the module
  will be called i2c-icy.
  
  If you have a 2019 edition board with an LTC2990 sensor at address
  0x4c, loading the module 'ltc2990' is sufficient to enable it.

I2C_IMG
  Say Y here if you want to use the IMG I2C SCB controller,
  available on the TZ1090 and other IMG SoCs.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-img-scb.

I2C_IMX
  Say Y here if you want to use the IIC bus controller on
  the Freescale i.MX/MXC, Layerscape or ColdFire processors.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-imx.

I2C_IMX_LPI2C
  Say Y here if you want to use the Low Power IIC bus controller
  on the Freescale i.MX processors.
  
  This driver can also be built as a module. If so, the module
  will be called i2c-imx-lpi2c.

I2C_IOP3XX
  Say Y here if you want to use the IIC bus controller on
  the Intel IOPx3xx I/O Processors or IXP4xx Network Processors.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-iop3xx.

I2C_ISCH
  Say Y here if you want to use SMBus controller on the Intel SCH
  based systems.
  
  This driver can also be built as a module. If so, the module
  will be called i2c-isch.

I2C_ISMT
  If you say yes to this option, support will be included for the Intel
  iSMT SMBus host controller interface.
  
  This driver can also be built as a module.  If so, the module will be
  called i2c-ismt.

I2C_JZ4780
  If you say yes to this option, support will be included for the
  Ingenic JZ4780 I2C controller.
  
  If you don't know what to do here, say N.

I2C_KEMPLD
  This enables support for the I2C bus interface on some Kontron ETX
  and COMexpress (ETXexpress) modules.
  
  This driver can also be built as a module. If so, the module
  will be called i2c-kempld.

I2C_LPC2K
  This driver supports the I2C interface found several NXP
  devices including LPC2xxx, LPC178x/7x and LPC18xx/43xx.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-lpc2k.

I2C_MESON
  If you say yes to this option, support will be included for the
  I2C interface on the Amlogic Meson family of SoCs.

I2C_MLXBF
  Enabling this option will add I2C SMBus support for Mellanox BlueField
  system.
  
  This driver can also be built as a module. If so, the module will be
  called i2c-mlxbf.
  
  This driver implements an I2C SMBus host controller and enables both
  master and slave functions.

I2C_MLXCPLD
  This exposes the Mellanox platform I2C busses to the linux I2C layer
  for X86 based systems.
  Controller is implemented as CPLD logic.
  
  This driver can also be built as a module. If so, the module will be
  called as i2c-mlxcpld.

I2C_MPC
  If you say yes to this option, support will be included for the
  built-in I2C interface on the MPC107, Tsi107, MPC512x, MPC52xx,
  MPC8240, MPC8245, MPC83xx, MPC85xx and MPC8641 family processors.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-mpc.

I2C_MT65XX
  This selects the MediaTek(R) Integrated Inter Circuit bus driver
  for MT65xx and MT81xx.
  If you want to use MediaTek(R) I2C interface, say Y or M here.
  If unsure, say N.

I2C_MT7621
  Say Y here to include support for I2C controller in the
  MediaTek MT7621/MT7628 SoCs.

I2C_MULTI_INSTANTIATE
  Some ACPI-based systems list multiple i2c-devices in a single ACPI
  firmware-node. This driver will instantiate separate i2c-clients
  for each device in the firmware-node.
  
  To compile this driver as a module, choose M here: the module
  will be called i2c-multi-instantiate.

I2C_MUX
  Say Y here if you want the I2C core to support the ability to
  handle multiplexed I2C bus topologies, by presenting each
  multiplexed segment as a I2C adapter.
  
  This support is also available as a module.  If so, the module
  will be called i2c-mux.

I2C_MUX_GPIO
  If you say yes to this option, support will be included for a
  GPIO based I2C multiplexer. This driver provides access to
  I2C busses connected through a MUX, which is controlled
  through GPIO pins.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-mux-gpio.

I2C_MUX_GPMUX
  If you say yes to this option, support will be included for a
  general purpose I2C multiplexer. This driver provides access to
  I2C busses connected through a MUX, which in turn is controlled
  by a MUX-controller from the MUX subsystem.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-mux-gpmux.

I2C_MUX_LTC4306
  If you say yes here you get support for the Analog Devices
  LTC4306 or LTC4305 I2C mux/switch devices.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-mux-ltc4306.

I2C_MUX_MLXCPLD
  If you say yes to this option, support will be included for a
  CPLD based I2C multiplexer. This driver provides access to
  I2C busses connected through a MUX, which is controlled
  by a CPLD register.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-mux-mlxcpld.

I2C_MUX_PCA9541
  If you say yes here you get support for the NXP PCA9541
  I2C Master Selector.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-mux-pca9541.

I2C_MUX_PCA954x
  If you say yes here you get support for the NXP PCA954x
  and PCA984x I2C mux/switch devices.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-mux-pca954x.

I2C_MUX_PINCTRL
  If you say yes to this option, support will be included for an I2C
  multiplexer that uses the pinctrl subsystem, i.e. pin multiplexing.
  This is useful for SoCs whose I2C module's signals can be routed to
  different sets of pins at run-time.
  
  This driver can also be built as a module. If so, the module will be
  called i2c-mux-pinctrl.

I2C_MUX_REG
  If you say yes to this option, support will be included for a
  register based I2C multiplexer. This driver provides access to
  I2C busses connected through a MUX, which is controlled
  by a single register.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-mux-reg.

I2C_MV64XXX
  If you say yes to this option, support will be included for the
  built-in I2C interface on the Marvell 64xxx line of host bridges.
  This driver is also used for Allwinner SoCs I2C controllers.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-mv64xxx.

I2C_MXS
  Say Y here if you want to use the I2C bus controller on
  the Freescale i.MX28 processors.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-mxs.

I2C_NFORCE2
  If you say yes to this option, support will be included for the Nvidia
  nForce2, nForce3 and nForce4 families of mainboard I2C interfaces.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-nforce2.

I2C_NFORCE2_S4985
  Enabling this option will add specific SMBus support for the Tyan
  S4985 motherboard.  On this 4-CPU board, the SMBus is multiplexed
  over 4 different channels, where the various memory module EEPROMs
  live.  Saying yes here will give you access to these in addition
  to the trunk.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-nforce2-s4985.

I2C_NOMADIK
  If you say yes to this option, support will be included for the
  I2C interface from ST-Ericsson's Nomadik and Ux500 architectures,
  as well as the STA2X11 PCIe I/O HUB.

I2C_NPCM7XX
  If you say yes to this option, support will be included for the
  Nuvoton I2C controller, which is available on the NPCM7xx BMC
  controller.
  Driver can also support slave mode (select I2C_SLAVE).

I2C_NVIDIA_GPU
  If you say yes to this option, support will be included for the
  NVIDIA GPU I2C controller which is used to communicate with the GPU's
  Type-C controller. This driver can also be built as a module called
  i2c-nvidia-gpu.

I2C_OCORES
  If you say yes to this option, support will be included for the
  OpenCores I2C controller. For details see
  http://www.opencores.org/projects.cgi/web/i2c/overview
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-ocores.

I2C_OCTEON
  Say yes if you want to support the I2C serial bus on Cavium
  OCTEON SOC.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-octeon.

I2C_OMAP
  If you say yes to this option, support will be included for the
  I2C interface on the Texas Instruments OMAP1/2 family of processors.
  Like OMAP1510/1610/1710/5912 and OMAP242x.
  For details see http://www.ti.com/omap.

I2C_OPAL
  This exposes the PowerNV platform i2c busses to the linux i2c layer,
  the driver is based on the OPAL interfaces.
  
  This driver can also be built as a module. If so, the module will be
  called as i2c-opal.

I2C_OWL
  Say Y here if you want to use the I2C bus controller on
  the Actions Semiconductor Owl SoC's.

I2C_PARPORT
  This supports parallel port I2C adapters such as the ones made by
  Philips or Velleman, Analog Devices evaluation boards, and more.
  Basically any adapter using the parallel port as an I2C bus with
  no extra chipset is supported by this driver, or could be. Please
  read the file Documentation/i2c/busses/i2c-parport.rst for details.
  
  This support is also available as a module.  If so, the module
  will be called i2c-parport.

I2C_PASEMI
  Supports the PA Semi PWRficient on-chip SMBus interfaces.

I2C_PCA_ISA
  This driver supports ISA boards using the Philips PCA9564/PCA9665
  parallel bus to I2C bus controller.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-pca-isa.
  
  This device is almost undetectable and using this driver on a
  system which doesn't have this device will result in long
  delays when I2C/SMBus chip drivers are loaded (e.g. at boot
  time).  If unsure, say N.

I2C_PCA_PLATFORM
  This driver supports a memory mapped Philips PCA9564/PCA9665
  parallel bus to I2C bus controller.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-pca-platform.

I2C_PIIX4
  If you say yes to this option, support will be included for the Intel
  PIIX4 family of mainboard I2C interfaces.  Specifically, the following
  versions of the chipset are supported (note that Serverworks is part
  of Broadcom):
    Intel PIIX4
    Intel 440MX
    ATI IXP200
    ATI IXP300
    ATI IXP400
    ATI SB600
    ATI SB700/SP5100
    ATI SB800
    AMD Hudson-2
    AMD ML
    AMD CZ
    Hygon CZ
    Serverworks OSB4
    Serverworks CSB5
    Serverworks CSB6
    Serverworks HT-1000
    Serverworks HT-1100
    SMSC Victory66
  
  Some AMD chipsets contain two PIIX4-compatible SMBus
  controllers. This driver will attempt to use both controllers
  on the SB700/SP5100, if they have been initialized by the BIOS.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-piix4.

I2C_PMCMSP
  This driver supports the PMC TWI controller on MSP devices.
  
  This driver can also be built as module. If so, the module
  will be called i2c-pmcmsp.

I2C_PNX
  This driver supports the Philips IP3204 I2C IP block master and/or
  slave controller
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-pnx.

I2C_POWERMAC
  This exposes the various PowerMac i2c interfaces to the linux i2c
  layer and to userland. It is used by various drivers on the PowerMac
  platform, and should generally be enabled.
  
  This support is also available as a module.  If so, the module
  will be called i2c-powermac.

I2C_PXA
  If you have devices in the PXA I2C bus, say yes to this option.
  This driver can also be built as a module.  If so, the module
  will be called i2c-pxa.

I2C_PXA_PCI
  No help

I2C_PXA_SLAVE
  Support I2C slave mode communications on the PXA I2C bus.  This
  is necessary for systems where the PXA may be a target on the
  I2C bus.

I2C_QCOM_CCI
  If you say yes to this option, support will be included for the
  built-in camera control interface on the Qualcomm SoCs.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-qcom-cci.

I2C_QCOM_GENI
  This driver supports GENI serial engine based I2C controller in
  master mode on the Qualcomm Technologies Inc.'s SoCs. If you say
  yes to this option, support will be included for the built-in I2C
  interface on the Qualcomm Technologies Inc.'s SoCs.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-qcom-geni.

I2C_QUP
  If you say yes to this option, support will be included for the
  built-in I2C interface on the Qualcomm SoCs.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-qup.

I2C_RCAR
  If you say yes to this option, support will be included for the
  R-Car I2C controller.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-rcar.

I2C_RIIC
  If you say yes to this option, support will be included for the
  Renesas RIIC I2C interface.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-riic.

I2C_RK3X
  Say Y here to include support for the I2C adapter in Rockchip RK3xxx
  SoCs.
  
  This driver can also be built as a module. If so, the module will
  be called i2c-rk3x.

I2C_ROBOTFUZZ_OSIF
  If you say yes to this option, support will be included for the
  RobotFuzz Open Source InterFace USB to I2C interface.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-osif.

I2C_S3C2410
  Say Y here to include support for I2C controller in the
  Samsung SoCs (S3C, S5Pv210, Exynos).

I2C_SCMI
  This driver supports the SMBus Control Method Interface. It needs the
  BIOS to declare ACPI control methods as described in the SMBus Control
  Method Interface specification.
  
  To compile this driver as a module, choose M here:
  the module will be called i2c-scmi.

I2C_SH7760
  This driver supports the 2 I2C interfaces on the Renesas SH7760.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-sh7760.

I2C_SH_MOBILE
  If you say yes to this option, support will be included for the
  built-in I2C interface on the Renesas SH-Mobile processor.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-sh_mobile.

I2C_SI470X
  This is a driver for I2C devices with the Silicon Labs SI470x
  chip.
  
  Say Y here if you want to connect this type of radio to your
  computer's I2C port.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-i2c-si470x.

I2C_SI4713
  Say Y here if you want support to Si4713 FM Radio Transmitter.
  This device can transmit audio through FM. It can transmit
  RDS and RBDS signals as well. This module is the v4l2 radio
  interface for the i2c driver of this device.
  
  To compile this driver as a module, choose M here: the
  module will be called si4713.

I2C_SIBYTE
  Supports the SiByte SOC on-chip I2C interfaces (2 channels).

I2C_SIMTEC
  If you say yes to this option, support will be included for
  the Simtec Generic I2C interface. This driver is for the
  simple I2C bus used on newer Simtec products for general
  I2C, such as DDC on the Simtec BBD2016A.
  
  This driver can also be built as a module. If so, the module
  will be called i2c-simtec.

I2C_SIRF
  If you say yes to this option, support will be included for the
  CSR SiRFprimaII I2C interface.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-sirf.

I2C_SIS5595
  If you say yes to this option, support will be included for the
  SiS5595 SMBus (a subset of I2C) interface.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-sis5595.

I2C_SIS630
  If you say yes to this option, support will be included for the
  SiS630, SiS730 and SiS964 SMBus (a subset of I2C) interface.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-sis630.

I2C_SIS96X
  If you say yes to this option, support will be included for the SiS
  96x SMBus (a subset of I2C) interfaces.  Specifically, the following
  chipsets are supported:
    645/961
    645DX/961
    645DX/962
    648/961
    650/961
    735
    745
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-sis96x.

I2C_SLAVE
  This enables Linux to act as an I2C slave device. Note that your I2C
  bus master driver also needs to support this functionality. Please
  read Documentation/i2c/slave-interface.rst for further details.

I2C_SLAVE_EEPROM
  This backend makes Linux behave like an I2C EEPROM. Please read
  Documentation/i2c/slave-eeprom-backend.rst for further details.

I2C_SLAVE_TESTUNIT
  This backend can be used to trigger test cases for I2C bus masters
  which require a remote device with certain capabilities, e.g.
  multi-master, SMBus Host Notify, etc. Please read
  Documentation/i2c/slave-testunit-backend.rst for further details.

I2C_SMBUS
  Say Y here if you want support for SMBus extensions to the I2C
  specification. At the moment, two extensions are supported:
  the SMBus Alert protocol and the SMBus Host Notify protocol.
  
  This support is also available as a module.  If so, the module
  will be called i2c-smbus.

I2C_SPRD
  If you say yes to this option, support will be included for the
  Spreadtrum I2C interface.

I2C_ST
  Enable this option to add support for STMicroelectronics SoCs
  hardware SSC (Synchronous Serial Controller) as an I2C controller.
  
  This driver can also be built as module. If so, the module
  will be called i2c-st.

I2C_STM32F4
  Enable this option to add support for STM32 I2C controller embedded
  in STM32F4 SoCs.
  
  This driver can also be built as module. If so, the module
  will be called i2c-stm32f4.

I2C_STM32F7
  Enable this option to add support for STM32 I2C controller embedded
  in STM32F7 SoCs.
  
  This driver can also be built as module. If so, the module
  will be called i2c-stm32f7.

I2C_STU300
  If you say yes to this option, support will be included for the
  I2C interface from ST Microelectronics simply called "DDC I2C"
  supporting both I2C and DDC, used in e.g. the U300 series
  mobile platforms.
  
  This driver can also be built as a module. If so, the module
  will be called i2c-stu300.

I2C_STUB
  This module may be useful to developers of SMBus client drivers,
  especially for certain kinds of sensor chips.
  
  If you do build this module, be sure to read the notes and warnings
  in <file:Documentation/i2c/i2c-stub.rst>.
  
  If you don't know what to do here, definitely say N.

I2C_SUN6I_P2WI
  If you say yes to this option, support will be included for the
  P2WI (Push/Pull 2 Wire Interface) controller embedded in some sunxi
  SOCs.
  The P2WI looks like an SMBus controller (which supports only byte
  accesses), except that it only supports one slave device.
  This interface is used to connect to specific PMIC devices (like the
  AXP221).

I2C_SYNQUACER
  Say Y here to include support for the I2C controller used in some
  Fujitsu and Socionext SoCs.
  
  This driver can also be built as a module. If so, the module
  will be called i2c-synquacer.

I2C_TAOS_EVM
  This supports TAOS evaluation modules on serial port. In order to
  use this driver, you will need the inputattach tool, which is part
  of the input-utils package.
  
  If unsure, say N.
  
  This support is also available as a module.  If so, the module
  will be called i2c-taos-evm.

I2C_TEGRA
  If you say yes to this option, support will be included for the
  I2C controller embedded in NVIDIA Tegra SOCs

I2C_TEGRA_BPMP
  If you say yes to this option, support will be included for the I2C
  controller embedded in NVIDIA Tegra SoCs accessed via the BPMP.
  
  This I2C driver is a 'virtual' I2C driver. The real driver is part
  of the BPMP firmware, and this driver merely communicates with that
  real driver.

I2C_THUNDERX
  Say yes if you want to support the I2C serial bus on Cavium
  ThunderX SOC.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-thunderx.

I2C_TINY_USB
  If you say yes to this option, support will be included for the
  i2c-tiny-usb, a simple do-it-yourself USB to I2C interface. See
  http://www.harbaum.org/till/i2c_tiny_usb for hardware details.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-tiny-usb.

I2C_UNIPHIER
  If you say yes to this option, support will be included for
  the UniPhier FIFO-less I2C interface embedded in PH1-LD4, PH1-sLD8,
  or older UniPhier SoCs.

I2C_UNIPHIER_F
  If you say yes to this option, support will be included for
  the UniPhier FIFO-builtin I2C interface embedded in PH1-Pro4,
  PH1-Pro5, or newer UniPhier SoCs.

I2C_VERSATILE
  Say yes if you want to support the I2C serial bus on ARMs Versatile
  range of platforms.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-versatile.

I2C_VIA
  If you say yes to this option, support will be included for the VIA
  82C586B I2C interface
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-via.

I2C_VIAPRO
  If you say yes to this option, support will be included for the VIA
  VT82C596 and later SMBus interface.  Specifically, the following
  chipsets are supported:
    VT82C596A/B
    VT82C686A/B
    VT8231
    VT8233/A
    VT8235
    VT8237R/A/S
    VT8251
    CX700
    VX800/VX820
    VX855/VX875
    VX900
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-viapro.

I2C_VIPERBOARD
  Say yes here to access the I2C part of the Nano River
  Technologies Viperboard as I2C master.
  See viperboard API specification and Nano
  River Tech's viperboard.h for detailed meaning
  of the module parameters.

I2C_WMT
  Say yes if you want to support the I2C bus on Wondermedia 8xxx-series
  SoCs.
  
  This driver can also be built as a module. If so, the module will be
  called i2c-wmt.

I2C_XGENE_SLIMPRO
  Enable I2C bus access using the APM X-Gene SoC SLIMpro
  co-processor. The I2C device access the I2C bus via the X-Gene
  to SLIMpro (On chip coprocessor) mailbox mechanism.
  If unsure, say N.

I2C_XILINX
  If you say yes to this option, support will be included for the
  Xilinx I2C controller.
  
  This driver can also be built as a module.  If so, the module
  will be called xilinx_i2c.

I2C_XLP9XX
  This driver enables support for the on-chip I2C interface of
  the Broadcom XLP9xx/XLP5xx MIPS and Vulcan ARM64 processors.
  
  This driver can also be built as a module.  If so, the module will
  be called i2c-xlp9xx.

I2C_XLR
  This driver enables support for the on-chip I2C interface of
  the Netlogic XLR/XLS MIPS processors and Sigma Designs SOCs.
  
  This driver can also be built as a module.  If so, the module
  will be called i2c-xlr.

I2C_ZX2967
  Selecting this option will add ZX2967 I2C driver.
  This driver can also be built as a module. If so, the module will be
  called i2c-zx2967.

I3C
  I3C is a serial protocol standardized by the MIPI alliance.
  
  It's supposed to be backward compatible with I2C while providing
  support for high speed transfers and native interrupt support
  without the need for extra pins.
  
  The I3C protocol also standardizes the slave device types and is
  mainly designed to communicate with sensors.
  
  If you want I3C support, you should say Y here and also to the
  specific driver for your bus adapter(s) below.
  
  This I3C support can also be built as a module.  If so, the module
  will be called i3c.

I40E
  This driver supports Intel(R) Ethernet Controller XL710 Family of
  devices.  For more information on how to identify your adapter, go
  to the Adapter & Driver ID Guide that can be located at:
  
  <http://support.intel.com>
  
  More specific information on configuring the driver is in
  <file:Documentation/networking/device_drivers/ethernet/intel/i40e.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called i40e.

I40EVF
  This driver supports virtual functions for Intel XL710,
  X710, X722, XXV710, and all devices advertising support for
  Intel Ethernet Adaptive Virtual Function devices. For more
  information on how to identify your adapter, go to the Adapter
  & Driver ID Guide that can be located at:
  
  <https://support.intel.com>
  
  This driver was formerly named i40evf.
  
  More specific information on configuring the driver is in
  <file:Documentation/networking/device_drivers/ethernet/intel/iavf.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called iavf.  MSI-X interrupt support is required
  for this driver to work correctly.

I40E_DCB
  Say Y here if you want to use Data Center Bridging (DCB) in the
  driver.
  
  If unsure, say N.

I6300ESB_WDT
  Hardware driver for the watchdog timer built into the Intel
  6300ESB controller hub.
  
  To compile this driver as a module, choose M here: the
  module will be called i6300esb.

I82092
  This provides support for the Intel I82092AA PCI-to-PCMCIA bridge device,
  found in some older laptops and more commonly in evaluation boards for the
  chip.

I82365
  Say Y here to include support for ISA-bus PCMCIA host bridges that
  are register compatible with the Intel i82365.  These are found on
  older laptops and ISA-bus card readers for desktop systems.  A
  "bridge" is the hardware inside your computer that PCMCIA cards are
  plugged into. If unsure, say N.

I8253_LOCK
  No help

I8259
  No help

I8K
  This option enables legacy /proc/i8k userspace interface in hwmon
  dell-smm-hwmon driver. Character file /proc/i8k reports bios version,
  temperature and allows controlling fan speeds of Dell laptops via
  System Management Mode. For old Dell laptops (like Dell Inspiron 8000)
  it reports also power and hotkey status. For fan speed control is
  needed userspace package i8kutils.
  
  Say Y if you intend to run this kernel on old Dell laptops or want to
  use userspace package i8kutils.
  Say N otherwise.

IA32_AOUT
  Support old a.out binaries in the 32bit emulation.

IA32_EMULATION
  Include code to run legacy 32-bit programs under a
  64-bit kernel. You should likely turn this on, unless you're
  100% sure that you don't have any 32-bit programs left.

IA32_FEAT_CTL
  No help

IA64_ACPI_CPUFREQ
  This driver adds a CPUFreq driver which utilizes the ACPI
  Processor Performance States.
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  If in doubt, say N.

IAQCORE
  Say Y here to build I2C interface support for the AMS
  iAQ-Core Continuous/Pulsed VOC (Volatile Organic Compounds)
  sensors

IAVF
  No help

IB700_WDT
  This is the driver for the hardware watchdog on the IB700 Single
  Board Computer produced by TMC Technology (www.tmc-uk.com). This watchdog
  simply watches your kernel to make sure it doesn't freeze, and if
  it does, it reboots your computer after a certain amount of time.
  
  This driver is like the WDT501 driver but for slightly different hardware.
  
  To compile this driver as a module, choose M here: the
  module will be called ib700wdt.
  
  Most people will say N.

IBMASR
  This is the driver for the IBM Automatic Server Restart watchdog
  timer built-in into some eServer xSeries machines.
  
  To compile this driver as a module, choose M here: the
  module will be called ibmasr.

IBMVETH
  This driver supports virtual ethernet adapters on newer IBM iSeries
  and pSeries systems.
  
  To compile this driver as a module, choose M here. The module will
  be called ibmveth.

IBMVMC
  This is the IBM POWER Virtual Management Channel
  
  This driver is to be used for the POWER Virtual
  Management Channel virtual adapter on the PowerVM
  platform. It provides both request/response and
  async message support through the /dev/ibmvmc node.
  
  To compile this driver as a module, choose M here: the
  module will be called ibmvmc.

IBMVNIC
  This driver supports Virtual NIC adapters on IBM i and IBM System p
  systems.
  
  To compile this driver as a module, choose M here. The module will
  be called ibmvnic.

IBM_ASM
  This option enables device driver support for in-band access to the
  IBM RSA (Condor) service processor in eServer xSeries systems.
  The ibmasm device driver allows user space application to access
  ASM (Advanced Systems Management) functions on the service
  processor. The driver is meant to be used in conjunction with
  a user space API.
  The ibmasm driver also enables the OS to use the UART on the
  service processor board as a regular serial port. To make use of
  this feature serial driver support (CONFIG_SERIAL_8250) must be
  enabled.
  
  WARNING: This software may not be supported or function
  correctly on your IBM server. Please consult the IBM ServerProven
  website <https://www-03.ibm.com/systems/info/x86servers/serverproven/compat/us/>
  for information on the specific driver level and support statement
  for your IBM server.

IBM_BSR
  This devices exposes a hardware mechanism for fast synchronization
  of threads across a large system which avoids bouncing a cacheline
  between several cores on a system

IBM_EMAC
  This driver supports the IBM EMAC family of Ethernet controllers
  typically found on 4xx embedded PowerPC chips, but also on the
  Axon southbridge for Cell.

IBM_EMAC_DEBUG
  No help

IBM_EMAC_EMAC4
  No help

IBM_EMAC_MAL_CLR_ICINTSTAT
  No help

IBM_EMAC_MAL_COMMON_ERR
  No help

IBM_EMAC_NO_FLOW_CTRL
  No help

IBM_EMAC_POLL_WEIGHT
  No help

IBM_EMAC_RGMII
  No help

IBM_EMAC_RXB
  No help

IBM_EMAC_RX_COPY_THRESHOLD
  No help

IBM_EMAC_TAH
  No help

IBM_EMAC_TXB
  No help

IBM_EMAC_ZMII
  No help

IBM_PARTITION
  Say Y here if you would like to be able to read the hard disk
  partition table format used by IBM DASD disks operating under CMS.
  Otherwise, say N.

IBM_RTL
  Enable support for IBM Premium Real Time Mode (PRTM).
  This module will allow you the enter and exit PRTM in the BIOS via
  sysfs on platforms that support this feature.  System in PRTM will
  not receive CPU-generated SMIs for recoverable errors.  Use of this
  feature without proper support may void your hardware warranty.
  
  If the proper BIOS support is found the driver will load and create
  /sys/devices/system/ibm_rtl/.  The "state" variable will indicate
  whether or not the BIOS is in PRTM.
  state = 0 (BIOS SMIs on)
  state = 1 (BIOS SMIs off)

ICE
  This driver supports Intel(R) Ethernet Connection E800 Series of
  devices.  For more information on how to identify your adapter, go
  to the Adapter & Driver ID Guide that can be located at:
  
  <http://support.intel.com>
  
  More specific information on configuring the driver is in
  <file:Documentation/networking/device_drivers/ethernet/intel/ice.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called ice.

ICP10100
  Say yes here to build support for InvenSense ICP-101xx barometric
  pressure and temperature sensor.
  
  To compile this driver as a module, choose M here: the module
  will be called icp10100.

ICPLUS_PHY
  Currently supports the IP175C and IP1001 PHYs.

ICS932S401
  If you say yes here you get support for the Integrated Circuits
  ICS932S401 clock control chips.
  
  This driver can also be built as a module. If so, the module
  will be called ics932s401.

ICST
  Supports clocking on ARM Reference designs:
  - Integrator/AP and Integrator/CP
  - RealView PB1176, EB, PB11MP and PBX

IDE
  If you say Y here, your kernel will be able to manage ATA/(E)IDE and
  ATAPI units. The most common cases are IDE hard drives and ATAPI
  CD-ROM drives.
  
  This subsystem is currently in maintenance mode with only bug fix
  changes applied. Users of ATA hardware are encouraged to migrate to
  the newer ATA subsystem ("Serial ATA (prod) and Parallel ATA
  (experimental) drivers") which is more actively maintained.
  
  To compile this driver as a module, choose M here: the
  module will be called ide-core.
  
  For further information, please read <file:Documentation/ide/ide.rst>.
  
  If unsure, say N.

IDEAPAD_LAPTOP
  This is a driver for Lenovo IdeaPad netbooks contains drivers for
  rfkill switch, hotkey, fan control and backlight control.

IDEPCI_PCIBUS_ORDER
  Probe IDE PCI devices in the order in which they appear on the
  PCI bus (i.e. 00:1f.1 PCI device before 02:01.0 PCI device)
  instead of the order in which IDE PCI host drivers are loaded.
  
  Please note that this method of assuring stable naming of
  IDE devices is unreliable and use other means for achieving
  it (i.e. udev).
  
  If in doubt, say N.

IDE_ATAPI
  No help

IDE_GD
  Support for ATA/ATAPI disks (including ATAPI floppy drives).
  
  To compile this driver as a module, choose M here.
  The module will be called ide-gd_mod.
  
  If unsure, say Y.

IDE_GD_ATA
  This will include support for ATA hard disks.
  
  If unsure, say Y.

IDE_GD_ATAPI
  This will include support for ATAPI floppy drives
  (i.e. Iomega ZIP or MKE LS-120).
  
  For information about jumper settings and the question
  of when a ZIP drive uses a partition table, see
  <http://www.win.tue.nl/~aeb/linux/zip/zip-1.html>.
  
  If unsure, say N.

IDE_GENERIC
  This is the generic IDE driver.  This driver attaches to the
  fixed legacy ports (e.g. on PCs 0x1f0/0x170, 0x1e8/0x168 and
  so on).  Please note that if this driver is built into the
  kernel or loaded before other ATA (IDE or libata) drivers
  and the controller is located at legacy ports, this driver
  may grab those ports and thus can prevent the controller
  specific driver from attaching.
  
  Also, currently, IDE generic doesn't allow IRQ sharing
  meaning that the IRQs it grabs won't be available to other
  controllers sharing those IRQs which usually makes drivers
  for those controllers fail.  Generally, it's not a good idea
  to load IDE generic driver on modern systems.
  
  If unsure, say N.

IDE_LEGACY
  No help

IDE_PROC_FS
  This option enables support for the various files in
  /proc/ide.  In Linux 2.6 this has been superseded by
  files in sysfs but many legacy applications rely on this.
  
  If unsure say Y.

IDE_TASK_IOCTL
  This is a direct raw access to the media.  It is a complex but
  elegant solution to test and validate the domain of the hardware and
  perform below the driver data recovery if needed.  This is the most
  basic form of media-forensics.
  
  If you are unsure, say N here.

IDE_TIMINGS
  No help

IDE_XFER_MODE
  No help

IDLE_INJECT
  This enables support for the idle injection framework. It
  provides a way to force idle periods on a set of specified
  CPUs for power capping. Idle period can be injected
  synchronously on a set of specified CPUs or alternatively
  on a per CPU basis.

IDLE_PAGE_TRACKING
  This feature allows to estimate the amount of user pages that have
  not been touched during a given period of time. This information can
  be useful to tune memory cgroup limits and/or for job placement
  within a compute cluster.
  
  See Documentation/admin-guide/mm/idle_page_tracking.rst for
  more details.

IE6XX_WDT
  Hardware driver for the watchdog timer built into the Intel
  Atom E6XX (TunnelCreek) processor.
  
  To compile this driver as a module, choose M here: the
  module will be called ie6xx_wdt.

IEEE802154
  IEEE Std 802.15.4 defines a low data rate, low power and low
  complexity short range wireless personal area networks. It was
  designed to organise networks of sensors, switches, etc automation
  devices. Maximum allowed data rate is 250 kb/s and typical personal
  operating space around 10m.
  
  Say Y here to compile LR-WPAN support into the kernel or say M to
  compile it as modules.

IEEE802154_6LOWPAN
  IPv6 compression over IEEE 802.15.4.

IEEE802154_ADF7242
  Say Y here to enable the ADF7242 SPI 802.15.4 wireless
  controller.
  
  This driver can also be built as a module. To do so, say M here.
  the module will be called 'adf7242'.

IEEE802154_AT86RF230
  Say Y here to enable the at86rf230/231/233/212 SPI 802.15.4 wireless
  controller.
  
  This driver can also be built as a module. To do so, say M here.
  the module will be called 'at86rf230'.

IEEE802154_AT86RF230_DEBUGFS
  This option compiles debugfs code for the at86rf230 driver.

IEEE802154_ATUSB
  Say Y here to enable the ATUSB IEEE 802.15.4 wireless
  controller.
  
  This driver can also be built as a module. To do so say M here.
  The module will be called 'atusb'.

IEEE802154_CA8210
  Say Y here to enable the CA8210 SPI 802.15.4 wireless
  controller.
  
  This driver can also be built as a module. To do so, say M here.
  the module will be called 'ca8210'.

IEEE802154_CA8210_DEBUGFS
  This option compiles debugfs code for the ca8210 driver. This
  exposes a debugfs node for each CA8210 instance which allows
  direct use of the Cascoda API, exposing the 802.15.4 MAC
  management entities.

IEEE802154_CC2520
  Say Y here to enable the CC2520 SPI 802.15.4 wireless
  controller.
  
  This driver can also be built as a module. To do so, say M here.
  the module will be called 'cc2520'.

IEEE802154_DRIVERS
  Say Y here to get to see options for IEEE 802.15.4 Low-Rate
  Wireless Personal Area Network device drivers. This option alone
  does not add any kernel code.
  
  If you say N, all options in this submenu will be skipped and
  disabled.

IEEE802154_FAKELB
  Say Y here to enable the fake driver that can emulate a net
  of several interconnected radio devices.
  
  This driver can also be built as a module. To do so say M here.
  The module will be called 'fakelb'.

IEEE802154_HWSIM
  This driver is a developer testing tool that can be used to test
  IEEE 802.15.4 networking stack (mac802154) functionality. This is not
  needed for normal wpan usage and is only for testing.
  
  This driver can also be built as a module. To do so say M here.
  The module will be called 'mac802154_hwsim'.

IEEE802154_MCR20A
  Say Y here to enable the MCR20A SPI 802.15.4 wireless
  controller.
  
  This driver can also be built as a module. To do so, say M here.
  the module will be called 'mcr20a'.

IEEE802154_MRF24J40
  Say Y here to enable the MRF24J20 SPI 802.15.4 wireless
  controller.
  
  This driver can also be built as a module. To do so, say M here.
  the module will be called 'mrf24j40'.

IEEE802154_NL802154_EXPERIMENTAL
  Adds experimental netlink support for nl802154.

IEEE802154_SOCKET
  Socket interface for IEEE 802.15.4. Contains DGRAM sockets interface
  for 802.15.4 dataframes. Also RAW socket interface to build MAC
  header from userspace.

IFB
  This is an intermediate driver that allows sharing of
  resources.
  To compile this driver as a module, choose M here: the module
  will be called ifb.  If you want to use more than one ifb
  device at a time, you need to compile this driver as a module.
  Instead of 'ifb', the devices will then be called 'ifb0',
  'ifb1' etc.
  Look at the iproute2 documentation directory for usage etc

IFCVF
  This kernel module can drive Intel IFC VF NIC to offload
  virtio dataplane traffic to hardware.
  To compile this driver as a module, choose M here: the module will
  be called ifcvf.

IGB
  This driver supports Intel(R) 82575/82576 gigabit ethernet family of
  adapters.  For more information on how to identify your adapter, go
  to the Adapter & Driver ID Guide that can be located at:
  
  <http://support.intel.com>
  
  More specific information on configuring the driver is in
  <file:Documentation/networking/device_drivers/ethernet/intel/igb.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called igb.

IGBVF
  This driver supports Intel(R) 82576 virtual functions.  For more
  information on how to identify your adapter, go to the Adapter &
  Driver ID Guide that can be located at:
  
  <http://support.intel.com>
  
  More specific information on configuring the driver is in
  <file:Documentation/networking/device_drivers/ethernet/intel/igbvf.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called igbvf.

IGB_DCA
  Say Y here if you want to use Direct Cache Access (DCA) in the
  driver.  DCA is a method for warming the CPU cache before data
  is used, with the intent of lessening the impact of cache misses.

IGB_HWMON
  Say Y if you want to expose thermal sensor data on Intel devices.
  
  Some of our devices contain thermal sensors, both external and internal.
  This data is available via the hwmon sysfs interface and exposes
  the onboard sensors.

IGC
  This driver supports Intel(R) Ethernet Controller I225-LM/I225-V
  family of adapters.
  
  For more information on how to identify your adapter, go
  to the Adapter & Driver ID Guide that can be located at:
  
  <http://support.intel.com>
  
  To compile this driver as a module, choose M here. The module
  will be called igc.

IIO
  The industrial I/O subsystem provides a unified framework for
  drivers for many different types of embedded sensors using a
  number of different physical interfaces (i2c, spi, etc).

IIO_ADIS_LIB
  A set of IO helper functions for the Analog Devices ADIS* device family.

IIO_ADIS_LIB_BUFFER
  A set of buffer helper functions for the Analog Devices ADIS* device
  family.

IIO_BUFFER
  Provide core support for various buffer based data
  acquisition methods.

IIO_BUFFER_CB
  Should be selected by any drivers that do in-kernel push
  usage.  That is, those where the data is pushed to the consumer.

IIO_BUFFER_DMA
  Provides the generic IIO DMA buffer infrastructure that can be used by
  drivers for devices with DMA support to implement the IIO buffer.
  
  Should be selected by drivers that want to use the generic DMA buffer
  infrastructure.

IIO_BUFFER_DMAENGINE
  Provides a bonding of the generic IIO DMA buffer infrastructure with the
  DMAEngine framework. This can be used by converter drivers with a DMA port
  connected to an external DMA controller which is supported by the
  DMAEngine framework.
  
  Should be selected by drivers that want to use this functionality.

IIO_BUFFER_HW_CONSUMER
  Provides a way to bonding when an IIO device has a direct connection
  to another device in hardware. In this case buffers for data transfers
  are handled by hardware.
  
  Should be selected by drivers that want to use the generic Hw consumer
  interface.

IIO_CONFIGFS
  This allows configuring various IIO bits through configfs
  (e.g. software triggers). For more info see
  Documentation/iio/iio_configfs.rst.

IIO_CONSUMERS_PER_TRIGGER
  This value controls the maximum number of consumers that a
  given trigger may handle. Default is 2.

IIO_CROS_EC_ACCEL_LEGACY
  Say yes here to get support for accelerometers on Chromebook using
  legacy EC firmware.
  Sensor data is retrieved through IO memory.
  Newer devices should use IIO_CROS_EC_SENSORS.

IIO_CROS_EC_BARO
  Say yes here to build support for the Barometer sensor when
  presented by the ChromeOS EC Sensor hub.
  
  To compile this driver as a module, choose M here: the module
  will be called cros_ec_baro.

IIO_CROS_EC_LIGHT_PROX
  Say Y here if you use the light and proximity sensors
  presented by the ChromeOS EC Sensor hub.
  
  To compile this driver as a module, choose M here:
  the module will be called cros_ec_light_prox.

IIO_CROS_EC_SENSORS
  Module to handle 3d contiguous sensors like
  Accelerometers, Gyroscope and Magnetometer that are
  presented by the ChromeOS EC Sensor hub.
  Creates an IIO device for each functions.

IIO_CROS_EC_SENSORS_CORE
  Base module for the ChromeOS EC Sensors module.
  Contains core functions used by other IIO CrosEC sensor
  drivers.
  Define common attributes and sysfs interrupt handler.

IIO_CROS_EC_SENSORS_LID_ANGLE
  Module to report the angle between lid and base for some
  convertible devices.
  This module is loaded when the EC can calculate the angle between the base
  and the lid.

IIO_DUMMY_EVGEN
  No help

IIO_HRTIMER_TRIGGER
  Provides a frequency based IIO trigger using high resolution
  timers as interrupt source.
  
  To compile this driver as a module, choose M here: the
  module will be called iio-trig-hrtimer.

IIO_INTERRUPT_TRIGGER
  Provides support for using an interrupt of any type as an IIO
  trigger.  This may be provided by a gpio driver for example.
  
  To compile this driver as a module, choose M here: the
  module will be called iio-trig-interrupt.

IIO_KFIFO_BUF
  A simple fifo based on kfifo.  Note that this currently provides
  no buffer events so it is up to userspace to work out how
  often to read from the buffer.

IIO_MS_SENSORS_I2C
  No help

IIO_MUX
  Say yes here to build support for the IIO multiplexer.
  
  To compile this driver as a module, choose M here: the
  module will be called iio-mux.

IIO_RESCALE
  Say yes here to build support for the IIO rescaling
  that handles voltage dividers, current sense shunts and
  current sense amplifiers.
  
  To compile this driver as a module, choose M here: the
  module will be called iio-rescale.

IIO_SIMPLE_DUMMY
  Driver intended mainly as documentation for how to write
  a driver. May also be useful for testing userspace code
  without hardware.

IIO_SIMPLE_DUMMY_BUFFER
  Add buffered data capture to the simple dummy driver.
  
  Buffer handling elements of industrial I/O reference driver.
  Uses the kfifo buffer.

IIO_SIMPLE_DUMMY_EVENTS
  Add some dummy events to the simple dummy driver.
  
  The purpose of this is to generate 'fake' event interrupts thus
  allowing that driver's code to be as close as possible to that
  a normal driver talking to hardware.

IIO_SSP_SENSORHUB
  SSP driver for sensorhub.
  If you say yes here you get ssp support for sensorhub.
  To compile this driver as a module, choose M here: the
  module will be called sensorhub.

IIO_SSP_SENSORS_COMMONS
  Say yes here to build commons for SSP sensors.
  To compile this as a module, choose M here: the module
  will be called ssp_iio.

IIO_STM32_LPTIMER_TRIGGER
  Select this option to enable STM32 Low-Power Timer Trigger.
  This can be used as trigger source for STM32 internal ADC
  and/or DAC.
  
  To compile this driver as a module, choose M here: the
  module will be called stm32-lptimer-trigger.

IIO_STM32_TIMER_TRIGGER
  Select this option to enable STM32 Timer Trigger
  
  To compile this driver as a module, choose M here: the
  module will be called stm32-timer-trigger.

IIO_ST_ACCEL_3AXIS
  Say yes here to build support for STMicroelectronics accelerometers:
  LSM303DLH, LSM303DLHC, LIS3DH, LSM330D, LSM330DL, LSM330DLC,
  LIS331DLH, LSM303DL, LSM303DLM, LSM330, LIS2DH12, H3LIS331DL,
  LNG2DM, LIS3DE, LIS2DE12, LIS2HH12
  
  This driver can also be built as a module. If so, these modules
  will be created:
  - st_accel (core functions for the driver [it is mandatory]);
  - st_accel_i2c (necessary for the I2C devices [optional*]);
  - st_accel_spi (necessary for the SPI devices [optional*]);
  
  (*) one of these is necessary to do something.

IIO_ST_ACCEL_I2C_3AXIS
  No help

IIO_ST_ACCEL_SPI_3AXIS
  No help

IIO_ST_GYRO_3AXIS
  Say yes here to build support for STMicroelectronics gyroscopes:
  L3G4200D, LSM330DL, L3GD20, LSM330DLC, L3G4IS, LSM330, LSM9DS0.
  
  This driver can also be built as a module. If so, these modules
  will be created:
  - st_gyro (core functions for the driver [it is mandatory]);
  - st_gyro_i2c (necessary for the I2C devices [optional*]);
  - st_gyro_spi (necessary for the SPI devices [optional*]);
  
  (*) one of these is necessary to do something.

IIO_ST_GYRO_I2C_3AXIS
  No help

IIO_ST_GYRO_SPI_3AXIS
  No help

IIO_ST_LSM6DSX
  Say yes here to build support for STMicroelectronics LSM6DSx imu
  sensor. Supported devices: lsm6ds3, lsm6ds3h, lsm6dsl, lsm6dsm,
  ism330dlc, lsm6dso, lsm6dsox, asm330lhh, lsm6dsr, lsm6ds3tr-c,
  ism330dhcx, lsm6dsrx, lsm6ds0, lsm6dsop, the accelerometer/gyroscope
  of lsm9ds1 and lsm6dst.
  
  To compile this driver as a module, choose M here: the module
  will be called st_lsm6dsx.

IIO_ST_LSM6DSX_I2C
  No help

IIO_ST_LSM6DSX_I3C
  No help

IIO_ST_LSM6DSX_SPI
  No help

IIO_ST_MAGN_3AXIS
  Say yes here to build support for STMicroelectronics magnetometers:
  LSM303DLHC, LSM303DLM, LIS3MDL.
  
  This driver can also be built as a module. If so, these modules
  will be created:
  - st_magn (core functions for the driver [it is mandatory]);
  - st_magn_i2c (necessary for the I2C devices [optional*]);
  - st_magn_spi (necessary for the SPI devices [optional*]);
  
  (*) one of these is necessary to do something.

IIO_ST_MAGN_I2C_3AXIS
  No help

IIO_ST_MAGN_SPI_3AXIS
  No help

IIO_ST_PRESS
  Say yes here to build support for STMicroelectronics pressure
  sensors: LPS001WP, LPS25H, LPS331AP, LPS22HB, LPS22HH.
  
  This driver can also be built as a module. If so, these modules
  will be created:
  - st_pressure (core functions for the driver [it is mandatory]);
  - st_pressure_i2c (necessary for the I2C devices [optional*]);
  - st_pressure_spi (necessary for the SPI devices [optional*]);
  
  (*) one of these is necessary to do something.

IIO_ST_PRESS_I2C
  No help

IIO_ST_PRESS_SPI
  No help

IIO_ST_SENSORS_CORE
  No help

IIO_ST_SENSORS_I2C
  No help

IIO_ST_SENSORS_SPI
  No help

IIO_SW_DEVICE
  Provides IIO core support for software devices. A software
  device can be created via configfs or directly by a driver
  using the API provided.

IIO_SW_TRIGGER
  Provides IIO core support for software triggers. A software
  trigger can be created via configfs or directly by a driver
  using the API provided.

IIO_SYSFS_TRIGGER
  Provides support for using SYSFS entries as IIO triggers.
  If unsure, say N (but it's safe to say "Y").
  
  To compile this driver as a module, choose M here: the
  module will be called iio-trig-sysfs.

IIO_TIGHTLOOP_TRIGGER
  An experimental trigger, used to allow sensors to be sampled as fast
  as possible under the limitations of whatever else is going on.
  Uses a tight loop in a kthread.  Will only work with lower half only
  trigger consumers.
  
  To compile this driver as a module, choose M here: the
  module will be called iio-trig-loop.

IIO_TRIGGER
  Provides IIO core support for triggers.  Currently these
  are used to initialize capture of samples to push into
  buffers.  The triggers are effectively a 'capture
  data now' interrupt.

IIO_TRIGGERED_BUFFER
  Provides helper functions for setting up triggered buffers.

IIO_TRIGGERED_EVENT
  Provides helper functions for setting up triggered events.

IKCONFIG
  This option enables the complete Linux kernel ".config" file
  contents to be saved in the kernel. It provides documentation
  of which kernel options are used in a running kernel or in an
  on-disk kernel.  This information can be extracted from the kernel
  image file with the script scripts/extract-ikconfig and used as
  input to rebuild the current kernel or to build another kernel.
  It can also be extracted from a running kernel by reading
  /proc/config.gz if enabled (below).

IKCONFIG_PROC
  This option enables access to the kernel configuration file
  through /proc/config.gz.

IKHEADERS
  This option enables access to the in-kernel headers that are generated during
  the build process. These can be used to build eBPF tracing programs,
  or similar programs.  If you build the headers as a module, a module called
  kheaders.ko is built which can be loaded on-demand to get access to headers.

ILLEGAL_POINTER_VALUE
  No help

IMA
  The Trusted Computing Group(TCG) runtime Integrity
  Measurement Architecture(IMA) maintains a list of hash
  values of executables and other sensitive system files,
  as they are read or executed. If an attacker manages
  to change the contents of an important system file
  being measured, we can tell.
  
  If your system has a TPM chip, then IMA also maintains
  an aggregate integrity value over this list inside the
  TPM hardware, so that the TPM can prove to a third party
  whether or not critical system files have been modified.
  Read <https://www.usenix.org/events/sec04/tech/sailer.html>
  to learn more about IMA.
  If unsure, say N.

IMA_APPRAISE
  This option enables local measurement integrity appraisal.
  It requires the system to be labeled with a security extended
  attribute containing the file hash measurement.  To protect
  the security extended attributes from offline attack, enable
  and configure EVM.
  
  For more information on integrity appraisal refer to:
  <http://linux-ima.sourceforge.net>
  If unsure, say N.

IMA_APPRAISE_BOOTPARAM
  This option enables the different "ima_appraise=" modes
  (eg. fix, log) from the boot command line.

IMA_APPRAISE_BUILD_POLICY
  This option defines an IMA appraisal policy at build time, which
  is enforced at run time without having to specify a builtin
  policy name on the boot command line.  The build time appraisal
  policy rules persist after loading a custom policy.
  
  Depending on the rules configured, this policy may require kernel
  modules, firmware, the kexec kernel image, and/or the IMA policy
  to be signed.  Unsigned files might prevent the system from
  booting or applications from working properly.

IMA_APPRAISE_MODSIG
  Adds support for signatures appended to files. The format of the
  appended signature is the same used for signed kernel modules.
  The modsig keyword can be used in the IMA policy to allow a hook
  to accept such signatures.

IMA_APPRAISE_REQUIRE_FIRMWARE_SIGS
  This option defines a policy requiring all firmware to be signed,
  including the regulatory.db.  If both this option and
  CFG80211_REQUIRE_SIGNED_REGDB are enabled, then both signature
  verification methods are necessary.

IMA_APPRAISE_REQUIRE_KEXEC_SIGS
  Enabling this rule will require all kexec'ed kernel images to
  be signed and verified by a public key on the trusted IMA
  keyring.
  
  Kernel image signatures can not be verified by the original
  kexec_load syscall.  Enabling this rule will prevent its
  usage.

IMA_APPRAISE_REQUIRE_MODULE_SIGS
  Enabling this rule will require all kernel modules to be signed
  and verified by a public key on the trusted IMA keyring.
  
  Kernel module signatures can only be verified by IMA-appraisal,
  via the finit_module syscall. Enabling this rule will prevent
  the usage of the init_module syscall.

IMA_APPRAISE_REQUIRE_POLICY_SIGS
  Enabling this rule will require the IMA policy to be signed and
  and verified by a key on the trusted IMA keyring.

IMA_APPRAISE_SIGNED_INIT
  This option requires user-space init to be signed.

IMA_ARCH_POLICY
  This option enables loading an IMA architecture specific policy
  based on run time secure boot flags.

IMA_BLACKLIST_KEYRING
  This option creates an IMA blacklist keyring, which contains all
  revoked IMA keys.  It is consulted before any other keyring.  If
  the search is successful the requested operation is rejected and
  an error is returned to the caller.

IMA_DEFAULT_HASH
  No help

IMA_DEFAULT_HASH_SHA1
  No help

IMA_DEFAULT_HASH_SHA256
  No help

IMA_DEFAULT_HASH_SHA512
  No help

IMA_DEFAULT_HASH_SM3
  No help

IMA_DEFAULT_HASH_WP512
  No help

IMA_DEFAULT_TEMPLATE
  No help

IMA_KEXEC
  TPM PCRs are only reset on a hard reboot.  In order to validate
  a TPM's quote after a soft boot, the IMA measurement list of the
  running kernel must be saved and restored on boot.
  
  Depending on the IMA policy, the measurement list can grow to
  be very large.

IMA_KEYRINGS_PERMIT_SIGNED_BY_BUILTIN_OR_SECONDARY
  Keys may be added to the IMA or IMA blacklist keyrings, if the
  key is validly signed by a CA cert in the system built-in or
  secondary trusted keyrings.
  
  Intermediate keys between those the kernel has compiled in and the
  IMA keys to be added may be added to the system secondary keyring,
  provided they are validly signed by a key already resident in the
  built-in or secondary trusted keyrings.

IMA_LOAD_X509
  File signature verification is based on the public keys
  loaded on the .ima trusted keyring. These public keys are
  X509 certificates signed by a trusted key on the
  .system keyring.  This option enables X509 certificate
  loading from the kernel onto the '.ima' trusted keyring.

IMA_LSM_RULES
  Disabling this option will disregard LSM based policy rules.

IMA_MEASURE_ASYMMETRIC_KEYS
  No help

IMA_MEASURE_PCR_IDX
  IMA_MEASURE_PCR_IDX determines the TPM PCR register index
  that IMA uses to maintain the integrity aggregate of the
  measurement list.  If unsure, use the default 10.

IMA_NG_TEMPLATE
  No help

IMA_QUEUE_EARLY_BOOT_KEYS
  No help

IMA_READ_POLICY
  It is often useful to be able to read back the IMA policy.  It is
  even more important after introducing CONFIG_IMA_WRITE_POLICY.
  This option allows the root user to see the current policy rules.

IMA_SECURE_AND_OR_TRUSTED_BOOT
  This option is selected by architectures to enable secure and/or
  trusted boot based on IMA runtime policies.

IMA_SIG_TEMPLATE
  No help

IMA_TEMPLATE
  No help

IMA_TRUSTED_KEYRING
  This option requires that all keys added to the .ima
  keyring be signed by a key on the system trusted keyring.
  
  This option is deprecated in favor of INTEGRITY_TRUSTED_KEYRING

IMA_WRITE_POLICY
  IMA policy can now be updated multiple times.  The new rules get
  appended to the original policy.  Have in mind that the rules are
  scanned in FIFO order so be careful when you design and add new ones.
  
  If unsure, say N.

IMA_X509_PATH
  This option defines IMA X509 certificate path.

IMGPDC_IRQ
  No help

IMGPDC_WDT
  Driver for Imagination Technologies PowerDown Controller
  Watchdog Timer.
  
  To compile this driver as a loadable module, choose M here.
  The module will be called imgpdc_wdt.

IMG_ASCII_LCD
  Enable this to support the simple ASCII LCD displays found on
  development boards such as the MIPS Boston, MIPS Malta & MIPS SEAD3
  from Imagination Technologies.

IMG_MDC_DMA
  Enable support for the IMG multi-threaded DMA controller (MDC).

IMX2_WDT
  This is the driver for the hardware watchdog
  on the Freescale IMX2 and later processors.
  If you have one of these processors and wish to have
  watchdog support enabled, say Y, otherwise say N.
  
  To compile this driver as a module, choose M here: the
  module will be called imx2_wdt.

IMX7D_ADC
  Say yes here to build support for IMX7D ADC.
  
  This driver can also be built as a module. If so, the module will be
  called imx7d_adc.

IMX7ULP_WDT
  This is the driver for the hardware watchdog on the Freescale
  IMX7ULP and later processors. If you have one of these
  processors and wish to have watchdog support enabled,
  say Y, otherwise say N.
  
  To compile this driver as a module, choose M here: the
  module will be called imx7ulp_wdt.

IMX8MM_THERMAL
  Support for Thermal Monitoring Unit (TMU) found on Freescale i.MX8MM SoC.
  It supports one critical trip point and one passive trip point. The
  cpufreq is used as the cooling device to throttle CPUs when the passive
  trip is crossed.

IMX_DMA
  Support the i.MX DMA engine. This engine is integrated into
  Freescale i.MX1/21/27 chips.

IMX_DSP
  This enables DSP IPC protocol between host AP (Linux)
  and the firmware running on DSP.
  DSP exists on some i.MX8 processors (e.g i.MX8QM, i.MX8QXP).
  
  It acts like a doorbell. Client might use shared memory to
  exchange information with DSP side.

IMX_GPCV2
  Enables the wakeup IRQs for IMX platforms with GPCv2 block

IMX_GPCV2_PM_DOMAINS
  No help

IMX_INTMUX
  Support for the i.MX INTMUX interrupt multiplexer.

IMX_IPUV3_CORE
  Choose this if you have a i.MX5/6 system and want to use the Image
  Processing Unit. This option only enables IPU base support.

IMX_IRQSTEER
  Support for the i.MX IRQSTEER interrupt multiplexer/remapper.

IMX_MBOX
  Mailbox implementation for i.MX Messaging Unit (MU).

IMX_REMOTEPROC
  Say y here to support iMX's remote processors (Cortex M4
  on iMX7D) via the remote processor framework.
  
  It's safe to say N here.

IMX_SCU
  The System Controller Firmware (SCFW) is a low-level system function
  which runs on a dedicated Cortex-M core to provide power, clock, and
  resource management. It exists on some i.MX8 processors. e.g. i.MX8QM
  (QM, QP), and i.MX8QX (QXP, DX).
  
  This driver manages the IPC interface between host CPU and the
  SCU firmware running on M4.

IMX_SCU_PD
  The System Controller Firmware (SCFW) based power domain driver.

IMX_SC_THERMAL
  Support for Temperature Monitor (TEMPMON) found on NXP i.MX SoCs with
  system controller inside, Linux kernel has to communicate with system
  controller via MU (message unit) IPC to get temperature from thermal
  sensor. It supports one critical trip point and one
  passive trip point for each thermal sensor.

IMX_SC_WDT
  This is the driver for the system controller watchdog
  on the NXP i.MX SoCs with system controller inside, the
  watchdog driver will call ARM SMC API and trap into
  ARM-Trusted-Firmware for operations, ARM-Trusted-Firmware
  will request system controller to execute the operations.
  If you have one of these processors and wish to have
  watchdog support enabled, say Y, otherwise say N.
  
  To compile this driver as a module, choose M here: the
  module will be called imx_sc_wdt.

IMX_SDMA
  Support the i.MX SDMA engine. This engine is integrated into
  Freescale i.MX25/31/35/51/53/6 chips.

IMX_THERMAL
  Support for Temperature Monitor (TEMPMON) found on Freescale i.MX SoCs.
  It supports one critical trip point and one passive trip point.  The
  cpufreq is used as the cooling device to throttle CPUs when the
  passive trip is crossed.

IMX_WEIM
  Driver for i.MX WEIM controller.
  The WEIM(Wireless External Interface Module) works like a bus.
  You can attach many different devices on it, such as NOR, onenand.

INA2XX_ADC
  Say yes here to build support for TI INA2xx family of Power Monitors.
  This driver is mutually exclusive with the HWMON version.

INDIRECT_PIO
  On some platforms where no separate I/O space exists, there are I/O
  hosts which can not be accessed in MMIO mode. Using the logical PIO
  mechanism, the host-local I/O resource can be mapped into system
  logic PIO space shared with MMIO hosts, such as PCI/PCIe, then the
  system can access the I/O devices with the mapped-logic PIO through
  I/O accessors.
  
  This way has relatively little I/O performance cost. Please make
  sure your devices really need this configure item enabled.
  
  When in doubt, say N.

INDYDOG
  Hardware driver for the Indy's/I2's watchdog. This is a
  watchdog timer that will reboot the machine after a 60 second
  timer expired and no process has written to /dev/watchdog during
  that time.

INET
  These are the protocols used on the Internet and on most local
  Ethernets. It is highly recommended to say Y here (this will enlarge
  your kernel by about 400 KB), since some programs (e.g. the X window
  system) use TCP/IP even if your machine is not connected to any
  other computer. You will get the so-called loopback device which
  allows you to ping yourself (great fun, that!).
  
  For an excellent introduction to Linux networking, please read the
  Linux Networking HOWTO, available from
  <http://www.tldp.org/docs.html#howto>.
  
  If you say Y here and also to "/proc file system support" and
  "Sysctl support" below, you can change various aspects of the
  behavior of the TCP/IP code by writing to the (virtual) files in
  /proc/sys/net/ipv4/*; the options are explained in the file
  <file:Documentation/networking/ip-sysctl.rst>.
  
  Short answer: say Y.

INET6_AH
  Support for IPsec AH (Authentication Header).
  
  AH can be used with various authentication algorithms.  Besides
  enabling AH support itself, this option enables the generic
  implementations of the algorithms that RFC 8221 lists as MUST be
  implemented.  If you need any other algorithms, you'll need to enable
  them in the crypto API.  You should also enable accelerated
  implementations of any needed algorithms when available.
  
  If unsure, say Y.

INET6_ESP
  Support for IPsec ESP (Encapsulating Security Payload).
  
  ESP can be used with various encryption and authentication algorithms.
  Besides enabling ESP support itself, this option enables the generic
  implementations of the algorithms that RFC 8221 lists as MUST be
  implemented.  If you need any other algorithms, you'll need to enable
  them in the crypto API.  You should also enable accelerated
  implementations of any needed algorithms when available.
  
  If unsure, say Y.

INET6_ESPINTCP
  Support for RFC 8229 encapsulation of ESP and IKE over
  TCP/IPv6 sockets.
  
  If unsure, say N.

INET6_ESP_OFFLOAD
  Support for ESP transformation offload. This makes sense
  only if this system really does IPsec and want to do it
  with high throughput. A typical desktop system does not
  need it, even if it does IPsec.
  
  If unsure, say N.

INET6_IPCOMP
  Support for IP Payload Compression Protocol (IPComp) (RFC3173),
  typically needed for IPsec.
  
  If unsure, say Y.

INET6_TUNNEL
  No help

INET6_XFRM_TUNNEL
  No help

INET_AH
  Support for IPsec AH (Authentication Header).
  
  AH can be used with various authentication algorithms.  Besides
  enabling AH support itself, this option enables the generic
  implementations of the algorithms that RFC 8221 lists as MUST be
  implemented.  If you need any other algorithms, you'll need to enable
  them in the crypto API.  You should also enable accelerated
  implementations of any needed algorithms when available.
  
  If unsure, say Y.

INET_DCCP_DIAG
  No help

INET_DIAG
  Support for INET (TCP, DCCP, etc) socket monitoring interface used by
  native Linux tools such as ss. ss is included in iproute2, currently
  downloadable at:
  
    http://www.linuxfoundation.org/collaborate/workgroups/networking/iproute2
  
  If unsure, say Y.

INET_DIAG_DESTROY
  Provides a SOCK_DESTROY operation that allows privileged processes
  (e.g., a connection manager or a network administration tool such as
  ss) to close sockets opened by other processes. Closing a socket in
  this way interrupts any blocking read/write/connect operations on
  the socket and causes future socket calls to behave as if the socket
  had been disconnected.
  If unsure, say N.

INET_ESP
  Support for IPsec ESP (Encapsulating Security Payload).
  
  ESP can be used with various encryption and authentication algorithms.
  Besides enabling ESP support itself, this option enables the generic
  implementations of the algorithms that RFC 8221 lists as MUST be
  implemented.  If you need any other algorithms, you'll need to enable
  them in the crypto API.  You should also enable accelerated
  implementations of any needed algorithms when available.
  
  If unsure, say Y.

INET_ESPINTCP
  Support for RFC 8229 encapsulation of ESP and IKE over
  TCP/IPv4 sockets.
  
  If unsure, say N.

INET_ESP_OFFLOAD
  Support for ESP transformation offload. This makes sense
  only if this system really does IPsec and want to do it
  with high throughput. A typical desktop system does not
  need it, even if it does IPsec.
  
  If unsure, say N.

INET_IPCOMP
  Support for IP Payload Compression Protocol (IPComp) (RFC3173),
  typically needed for IPsec.
  
  If unsure, say Y.

INET_MPTCP_DIAG
  No help

INET_RAW_DIAG
  Support for RAW socket monitoring interface used by the ss tool.
  If unsure, say Y.

INET_SCTP_DIAG
  No help

INET_TCP_DIAG
  No help

INET_TUNNEL
  No help

INET_UDP_DIAG
  Support for UDP socket monitoring interface used by the ss tool.
  If unsure, say Y.

INET_XFRM_TUNNEL
  No help

INFINIBAND
  Core support for InfiniBand (IB).  Make sure to also select
  any protocols you wish to use as well as drivers for your
  InfiniBand hardware.

INFINIBAND_ADDR_TRANS
  Support for RDMA communication manager (CM).
  This allows for a generic connection abstraction over RDMA.

INFINIBAND_ADDR_TRANS_CONFIGFS
  ConfigFS support for RDMA communication manager (CM).
  This allows the user to config the default GID type that the CM
  uses for each device, when initiaing new connections.

INFINIBAND_BNXT_RE
  This driver supports Broadcom NetXtreme-E 10/25/40/50 gigabit
  RoCE HCAs.  To compile this driver as a module, choose M here:
  the module will be called bnxt_re.

INFINIBAND_CXGB4
  This is an iWARP/RDMA driver for the Chelsio T4 and T5
  1GbE, 10GbE adapters and T5 40GbE adapter.
  
  For general information about Chelsio and our products, visit
  our website at <http://www.chelsio.com>.
  
  For customer support, please visit our customer support page at
  <http://www.chelsio.com/support.html>.
  
  Please send feedback to <linux-bugs@chelsio.com>.
  
  To compile this driver as a module, choose M here: the module
  will be called iw_cxgb4.

INFINIBAND_EFA
  This driver supports Amazon Elastic Fabric Adapter (EFA).
  
  To compile this driver as a module, choose M here.
  The module will be called efa.

INFINIBAND_HFI1
  This is a low-level driver for Intel OPA Gen1 adapter.

INFINIBAND_HNS
  This is a RoCE/RDMA driver for the Hisilicon RoCE engine. The engine
  is used in Hisilicon Hip06 and more further ICT SoC based on
  platform device.
  
  To compile HIP06 or HIP08 driver as module, choose M here.

INFINIBAND_HNS_HIP06
  RoCE driver support for Hisilicon RoCE engine in Hisilicon Hip06 and
  Hip07 SoC. These RoCE engines are platform devices.
  
  To compile this driver, choose Y here: if INFINIBAND_HNS is m, this
  module will be called hns-roce-hw-v1

INFINIBAND_HNS_HIP08
  RoCE driver support for Hisilicon RoCE engine in Hisilicon Hip08 SoC.
  The RoCE engine is a PCI device.
  
  To compile this driver, choose Y here: if INFINIBAND_HNS is m, this
  module will be called hns-roce-hw-v2.

INFINIBAND_I40IW
  Intel(R) Ethernet X722 iWARP Driver

INFINIBAND_IPOIB
  Support for the IP-over-InfiniBand protocol (IPoIB). This
  transports IP packets over InfiniBand so you can use your IB
  device as a fancy NIC.
  
  See Documentation/infiniband/ipoib.rst for more information

INFINIBAND_IPOIB_CM
  This option enables support for IPoIB connected mode.  After
  enabling this option, you need to switch to connected mode
  through /sys/class/net/ibXXX/mode to actually create
  connections, and then increase the interface MTU with
  e.g. ifconfig ib0 mtu 65520.
  
  WARNING: Enabling connected mode will trigger some packet
  drops for multicast and UD mode traffic from this interface,
  unless you limit mtu for these destinations to 2044.

INFINIBAND_IPOIB_DEBUG
  This option causes debugging code to be compiled into the
  IPoIB driver.  The output can be turned on via the
  debug_level and mcast_debug_level module parameters (which
  can also be set after the driver is loaded through sysfs).
  
  This option also creates a directory tree under ipoib/ in
  debugfs, which contains files that expose debugging
  information about IB multicast groups used by the IPoIB
  driver.

INFINIBAND_IPOIB_DEBUG_DATA
  This option compiles debugging code into the data path
  of the IPoIB driver.  The output can be turned on via the
  data_debug_level module parameter; however, even with output
  turned off, this debugging code will have some performance
  impact.

INFINIBAND_ISER
  Support for the iSCSI Extensions for RDMA (iSER) Protocol
  over InfiniBand. This allows you to access storage devices
  that speak iSCSI over iSER over InfiniBand.
  
  The iSER protocol is defined by IETF.
  See <http://www.ietf.org/rfc/rfc5046.txt>
  and <http://members.infinibandta.org/kwspub/spec/Annex_iSER.PDF>

INFINIBAND_ISERT
  Support for iSCSI Extensions for RDMA (iSER) Target on Infiniband fabrics.

INFINIBAND_MTHCA
  This is a low-level driver for Mellanox InfiniHost host
  channel adapters (HCAs), including the MT23108 PCI-X HCA
  ("Tavor") and the MT25208 PCI Express HCA ("Arbel").

INFINIBAND_MTHCA_DEBUG
  This option causes debugging code to be compiled into the
  mthca driver.  The output can be turned on via the
  debug_level module parameter (which can also be set after
  the driver is loaded through sysfs).

INFINIBAND_OCRDMA
  This driver provides low-level InfiniBand over Ethernet
  support for Emulex One Connect host channel adapters (HCAs).

INFINIBAND_ON_DEMAND_PAGING
  On demand paging support for the InfiniBand subsystem.
  Together with driver support this allows registration of
  memory regions without pinning their pages, fetching the
  pages on demand instead.

INFINIBAND_OPA_VNIC
  This is Omni-Path (OPA) Virtual Network Interface Controller (VNIC)
  driver for Ethernet over Omni-Path feature. It implements the HW
  independent VNIC functionality. It interfaces with Linux stack for
  data path and IB MAD for the control path.

INFINIBAND_QEDR
  This driver provides low-level InfiniBand over Ethernet
  support for QLogic QED host channel adapters (HCAs).

INFINIBAND_QIB
  This is a low-level driver for Intel PCIe QLE InfiniBand host
  channel adapters.  This driver does not support the Intel
  HyperTransport card (model QHT7140).

INFINIBAND_QIB_DCA
  Setting this enables DCA support on some Intel chip sets
  with the iba7322 HCA.

INFINIBAND_RDMAVT
  This is a common software verbs provider for RDMA networks.

INFINIBAND_RTRS
  No help

INFINIBAND_RTRS_CLIENT
  RDMA transport client module.
  
  RDMA Transport (RTRS) client implements a reliable transport layer
  and also multipathing functionality and that it is intended to be
  the base layer for a block storage initiator over RDMA.

INFINIBAND_RTRS_SERVER
  RDMA transport server module.
  
  RDMA Transport (RTRS) server module processing connection and IO
  requests received from the RTRS client module, it will pass the
  IO requests to its user eg. RNBD_server.

INFINIBAND_SRP
  Support for the SCSI RDMA Protocol over InfiniBand.  This
  allows you to access storage devices that speak SRP over
  InfiniBand.
  
  The SRP protocol is defined by the INCITS T10 technical
  committee.  See <http://www.t10.org/>.
  

INFINIBAND_SRPT
  Support for the SCSI RDMA Protocol (SRP) Target driver. The
  SRP protocol is a protocol that allows an initiator to access
  a block storage device on another host (target) over a network
  that supports the RDMA protocol. Currently the RDMA protocol is
  supported by InfiniBand and by iWarp network hardware. More
  information about the SRP protocol can be found on the website
  of the INCITS T10 technical committee (http://www.t10.org/).

INFINIBAND_USER_ACCESS
  Userspace InfiniBand access support.  This enables the
  kernel side of userspace verbs and the userspace
  communication manager (CM).  This allows userspace processes
  to set up connections and directly access InfiniBand
  hardware for fast-path operations.  You will also need
  libibverbs, libibcm and a hardware driver library from
  rdma-core <https://github.com/linux-rdma/rdma-core>.

INFINIBAND_USER_MAD
  Userspace InfiniBand Management Datagram (MAD) support.  This
  is the kernel side of the userspace MAD support, which allows
  userspace processes to send and receive MADs. You will also
  need libibumad from rdma-core
  <https://github.com/linux-rdma/rdma-core>.

INFINIBAND_USER_MEM
  No help

INFINIBAND_USNIC
  This is a low-level driver for Cisco's Virtual Interface
  Cards (VICs), including the VIC 1240 and 1280 cards.

INFINIBAND_VIRT_DMA
  No help

INFINIBAND_VMWARE_PVRDMA
  This driver provides low-level support for VMware Paravirtual
  RDMA adapter. It interacts with the VMXNet3 driver to provide
  Ethernet capabilities.

INFTL
  This provides support for the Inverse NAND Flash Translation
  Layer which is used on M-Systems' newer DiskOnChip devices. It
  uses a kind of pseudo-file system on a flash device to emulate
  a block device with 512-byte sectors, on top of which you put
  a 'normal' file system.
  
  You may find that the algorithms used in this code are patented
  unless you live in the Free World where software patents aren't
  legal - in the USA you are only permitted to use this on DiskOnChip
  hardware, although under the terms of the GPL you're obviously
  permitted to copy, modify and distribute the code as you wish. Just
  not use it.

INGENIC_ADC
  Say yes here to build support for the Ingenic JZ47xx SoCs ADC unit.
  
  This driver can also be built as a module. If so, the module will be
  called ingenic_adc.

INGENIC_CGU_COMMON
  No help

INGENIC_CGU_JZ4725B
  Support the clocks provided by the CGU hardware on Ingenic JZ4725B
  and compatible SoCs.
  
  If building for a JZ4725B SoC, you want to say Y here.

INGENIC_CGU_JZ4740
  Support the clocks provided by the CGU hardware on Ingenic JZ4740
  and compatible SoCs.
  
  If building for a JZ4740 SoC, you want to say Y here.

INGENIC_CGU_JZ4770
  Support the clocks provided by the CGU hardware on Ingenic JZ4770
  and compatible SoCs.
  
  If building for a JZ4770 SoC, you want to say Y here.

INGENIC_CGU_JZ4780
  Support the clocks provided by the CGU hardware on Ingenic JZ4780
  and compatible SoCs.
  
  If building for a JZ4780 SoC, you want to say Y here.

INGENIC_CGU_X1000
  Support the clocks provided by the CGU hardware on Ingenic X1000
  and compatible SoCs.
  
  If building for a X1000 SoC, you want to say Y here.

INGENIC_CGU_X1830
  Support the clocks provided by the CGU hardware on Ingenic X1830
  and compatible SoCs.
  
  If building for a X1830 SoC, you want to say Y here.

INGENIC_IRQ
  No help

INGENIC_OST
  Support for the Operating System Timer of the Ingenic JZ SoCs.

INGENIC_SYSOST
  Support for the SYSOST of the Ingenic X Series SoCs.

INGENIC_TCU_CLK
  Support the clocks of the Timer/Counter Unit (TCU) of the Ingenic
  JZ47xx SoCs.

INGENIC_TCU_IRQ
  Support for interrupts in the Timer/Counter Unit (TCU) of the Ingenic
  JZ47xx SoCs.
  
  If unsure, say N.

INGENIC_TIMER
  Support for the timer/counter unit of the Ingenic JZ SoCs.

INGENIC_VPU_RPROC
  Say y or m here to support the VPU in the JZ47xx SoCs from Ingenic.
  
  This can be either built-in or a loadable module.
  If unsure say N.

INITRAMFS_COMPRESSION_BZIP2
  It's compression ratio and speed is intermediate. Decompression speed
  is slowest among the choices. The initramfs size is about 10% smaller
  with bzip2, in comparison to gzip. Bzip2 uses a large amount of
  memory. For modern kernels you will need at least 8MB RAM or more for
  booting.
  
  If you choose this, keep in mind that you need to have the bzip2 tool
  available to be able to compress the initram.

INITRAMFS_COMPRESSION_GZIP
  Use the old and well tested gzip compression algorithm. Gzip provides
  a good balance between compression ratio and decompression speed and
  has a reasonable compression speed. It is also more likely to be
  supported by your build system as the gzip tool is present by default
  on most distros.

INITRAMFS_COMPRESSION_LZ4
  It's compression ratio is the poorest amongst the choices. The kernel
  size is about 15% bigger than gzip; however its decompression speed
  is the fastest.
  
  If you choose this, keep in mind that most distros don't provide lz4
  by default which could cause a build failure.

INITRAMFS_COMPRESSION_LZMA
  This algorithm's compression ratio is best but has a large dictionary
  size which might cause issues in memory constrained systems.
  Decompression speed is between the other choices. Compression is
  slowest. The initramfs size is about 33% smaller with LZMA in
  comparison to gzip.
  
  If you choose this, keep in mind that you may need to install the xz
  or lzma tools to be able to compress the initram.

INITRAMFS_COMPRESSION_LZO
  It's compression ratio is the second poorest amongst the choices. The
  kernel size is about 10% bigger than gzip. Despite that, it's
  decompression speed is the second fastest and it's compression speed
  is quite fast too.
  
  If you choose this, keep in mind that you may need to install the lzop
  tool to be able to compress the initram.

INITRAMFS_COMPRESSION_NONE
  Do not compress the built-in initramfs at all. This may sound wasteful
  in space, but, you should be aware that the built-in initramfs will be
  compressed at a later stage anyways along with the rest of the kernel,
  on those architectures that support this. However, not compressing the
  initramfs may lead to slightly higher memory consumption during a
  short time at boot, while both the cpio image and the unpacked
  filesystem image will be present in memory simultaneously

INITRAMFS_COMPRESSION_XZ
  XZ uses the LZMA2 algorithm and has a large dictionary which may cause
  problems on memory constrained systems. The initramfs size is about
  30% smaller with XZ in comparison to gzip. Decompression speed is
  better than that of bzip2 but worse than gzip and LZO. Compression is
  slow.
  
  If you choose this, keep in mind that you may need to install the xz
  tool to be able to compress the initram.

INITRAMFS_COMPRESSION_ZSTD
  ZSTD is a compression algorithm targeting intermediate compression
  with fast decompression speed. It will compress better than GZIP and
  decompress around the same speed as LZO, but slower than LZ4.
  
  If you choose this, keep in mind that you may need to install the zstd
  tool to be able to compress the initram.

INITRAMFS_FORCE
  This option causes the kernel to ignore the initramfs image
  (or initrd image) passed to it by the bootloader. This is
  analogous to CMDLINE_FORCE, which is found on some architectures,
  and is useful if you cannot or don't want to change the image
  your bootloader passes to the kernel.

INITRAMFS_ROOT_GID
  If INITRAMFS_SOURCE points to a directory, files owned by this GID
  (-1 = current group) will be owned by root in the resulting image.
  
  If you are not sure, leave it set to "0".

INITRAMFS_ROOT_UID
  If INITRAMFS_SOURCE points to a directory, files owned by this UID
  (-1 = current user) will be owned by root in the resulting image.
  
  If you are not sure, leave it set to "0".

INITRAMFS_SOURCE
  This can be either a single cpio archive with a .cpio suffix or a
  space-separated list of directories and files for building the
  initramfs image.  A cpio archive should contain a filesystem archive
  to be used as an initramfs image.  Directories should contain a
  filesystem layout to be included in the initramfs image.  Files
  should contain entries according to the format described by the
  "usr/gen_init_cpio" program in the kernel tree.
  
  When multiple directories and files are specified then the
  initramfs image will be the aggregate of all of them.
  
  See <file:Documentation/driver-api/early-userspace/early_userspace_support.rst> for more details.
  
  If you are not sure, leave it blank.

INIT_ALL_POSSIBLE
  Back when each arch used to define their own cpu_online_mask and
  cpu_possible_mask, some of them chose to initialize cpu_possible_mask
  with all 1s, and others with all 0s.  When they were centralised,
  it was better to provide this option than to break all the archs
  and have several arch maintainers pursuing me down dark alleys.

INIT_ENV_ARG_LIMIT
  Maximum of each of the number of arguments and environment
  variables passed to init from the kernel command line.

INIT_ON_ALLOC_DEFAULT_ON
  This has the effect of setting "init_on_alloc=1" on the kernel
  command line. This can be disabled with "init_on_alloc=0".
  When "init_on_alloc" is enabled, all page allocator and slab
  allocator memory will be zeroed when allocated, eliminating
  many kinds of "uninitialized heap memory" flaws, especially
  heap content exposures. The performance impact varies by
  workload, but most cases see <1% impact. Some synthetic
  workloads have measured as high as 7%.

INIT_ON_FREE_DEFAULT_ON
  This has the effect of setting "init_on_free=1" on the kernel
  command line. This can be disabled with "init_on_free=0".
  Similar to "init_on_alloc", when "init_on_free" is enabled,
  all page allocator and slab allocator memory will be zeroed
  when freed, eliminating many kinds of "uninitialized heap memory"
  flaws, especially heap content exposures. The primary difference
  with "init_on_free" is that data lifetime in memory is reduced,
  as anything freed is wiped immediately, making live forensics or
  cold boot memory attacks unable to recover freed memory contents.
  The performance impact varies by workload, but is more expensive
  than "init_on_alloc" due to the negative cache effects of
  touching "cold" memory areas. Most cases see 3-5% impact. Some
  synthetic workloads have measured as high as 8%.

INIT_STACK_ALL_PATTERN
  Initializes everything on the stack with a 0xAA
  pattern. This is intended to eliminate all classes
  of uninitialized stack variable exploits and information
  exposures, even variables that were warned to have been
  left uninitialized.
  
  Pattern initialization is known to provoke many existing bugs
  related to uninitialized locals, e.g. pointers receive
  non-NULL values, buffer sizes and indices are very big.

INIT_STACK_ALL_ZERO
  Initializes everything on the stack with a zero
  value. This is intended to eliminate all classes
  of uninitialized stack variable exploits and information
  exposures, even variables that were warned to have been
  left uninitialized.
  
  Zero initialization provides safe defaults for strings,
  pointers, indices and sizes, and is therefore
  more suitable as a security mitigation measure.

INIT_STACK_NONE
  Disable automatic stack variable initialization.
  This leaves the kernel vulnerable to the standard
  classes of uninitialized stack variable exploits
  and information exposures.

INLINE_READ_LOCK
  No help

INLINE_READ_LOCK_BH
  No help

INLINE_READ_LOCK_IRQ
  No help

INLINE_READ_LOCK_IRQSAVE
  No help

INLINE_READ_TRYLOCK
  No help

INLINE_READ_UNLOCK
  No help

INLINE_READ_UNLOCK_BH
  No help

INLINE_READ_UNLOCK_IRQ
  No help

INLINE_READ_UNLOCK_IRQRESTORE
  No help

INLINE_SPIN_LOCK
  No help

INLINE_SPIN_LOCK_BH
  No help

INLINE_SPIN_LOCK_IRQ
  No help

INLINE_SPIN_LOCK_IRQSAVE
  No help

INLINE_SPIN_TRYLOCK
  No help

INLINE_SPIN_TRYLOCK_BH
  No help

INLINE_SPIN_UNLOCK_BH
  No help

INLINE_SPIN_UNLOCK_IRQ
  No help

INLINE_SPIN_UNLOCK_IRQRESTORE
  No help

INLINE_WRITE_LOCK
  No help

INLINE_WRITE_LOCK_BH
  No help

INLINE_WRITE_LOCK_IRQ
  No help

INLINE_WRITE_LOCK_IRQSAVE
  No help

INLINE_WRITE_TRYLOCK
  No help

INLINE_WRITE_UNLOCK
  No help

INLINE_WRITE_UNLOCK_BH
  No help

INLINE_WRITE_UNLOCK_IRQ
  No help

INLINE_WRITE_UNLOCK_IRQRESTORE
  No help

INOTIFY_USER
  Say Y here to enable inotify support for userspace, including the
  associated system calls.  Inotify allows monitoring of both files and
  directories via a single open fd.  Events are read from the file
  descriptor, which is also select()- and poll()-able.
  Inotify fixes numerous shortcomings in dnotify and introduces several
  new features including multiple file events, one-shot support, and
  unmount notification.
  
  For more information, see <file:Documentation/filesystems/inotify.rst>
  
  If unsure, say Y.

INPUT
  Say Y here if you have any input device (mouse, keyboard, tablet,
  joystick, steering wheel ...) connected to your system and want
  it to be available to applications. This includes standard PS/2
  keyboard and mouse.
  
  Say N here if you have a headless (no monitor, no keyboard) system.
  
  More information is available: <file:Documentation/input/input.rst>
  
  If unsure, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called input.

INPUT_88PM80X_ONKEY
  Support the ONKEY of Marvell 88PM80x PMICs as an input device
  reporting power button status.
  
  To compile this driver as a module, choose M here: the module
  will be called 88pm80x_onkey.

INPUT_88PM860X_ONKEY
  Support the ONKEY of Marvell 88PM860x PMICs as an input device
  reporting power button status.
  
  To compile this driver as a module, choose M here: the module
  will be called 88pm860x_onkey.

INPUT_AB8500_PONKEY
  Say Y here to use the PowerOn Key for ST-Ericsson's AB8500
  Mix-Sig PMIC.
  
  To compile this driver as a module, choose M here: the module
  will be called ab8500-ponkey.

INPUT_AD714X
  Say Y here if you want to support an AD7142/3/7/8/7A touch sensor.
  
  You should select a bus connection too.
  
  To compile this driver as a module, choose M here: the
  module will be called ad714x.

INPUT_AD714X_I2C
  Say Y here if you have AD7142/AD7147 hooked to an I2C bus.
  
  To compile this driver as a module, choose M here: the
  module will be called ad714x-i2c.

INPUT_AD714X_SPI
  Say Y here if you have AD7142/AD7147 hooked to a SPI bus.
  
  To compile this driver as a module, choose M here: the
  module will be called ad714x-spi.

INPUT_ADBHID
  Say Y here if you want to have ADB (Apple Desktop Bus) HID devices
  such as keyboards, mice, joysticks, trackpads  or graphic tablets
  handled by the input layer.  If you say Y here, make sure to say Y to
  the corresponding drivers "Mouse Support" (CONFIG_INPUT_MOUSEDEV) and
  "Event interface support" (CONFIG_INPUT_EVDEV) as well.
  
  If unsure, say Y.

INPUT_ADXL34X
  Say Y here if you have a Accelerometer interface using the
  ADXL345/6 controller, and your board-specific initialization
  code includes that in its table of devices.
  
  This driver can use either I2C or SPI communication to the
  ADXL345/6 controller.  Select the appropriate method for
  your system.
  
  If unsure, say N (but it's safe to say "Y").
  
  To compile this driver as a module, choose M here: the
  module will be called adxl34x.

INPUT_ADXL34X_I2C
  Say Y here if you have ADXL345/6 hooked to an I2C bus.
  
  To compile this driver as a module, choose M here: the
  module will be called adxl34x-i2c.

INPUT_ADXL34X_SPI
  Say Y here if you have ADXL345/6 hooked to a SPI bus.
  
  To compile this driver as a module, choose M here: the
  module will be called adxl34x-spi.

INPUT_APANEL
  Say Y here for support of the Application Panel buttons, used on
  Fujitsu Lifebook. These are attached to the mainboard through
  an SMBus interface managed by the I2C Intel ICH (i801) driver,
  which you should also build for this kernel.
  
  To compile this driver as a module, choose M here: the module will
  be called apanel.

INPUT_APMPOWER
  Say Y here if you want suspend key events to trigger a user
  requested suspend through APM. This is useful on embedded
  systems where such behaviour is desired without userspace
  interaction. If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called apm-power.

INPUT_ARIEL_PWRBUTTON
  Say Y to enable support for reporting power button status on
  on Dell Wyse 3020 ("Ariel") thin client.
  
  To compile this driver as a module, choose M here: the module
  will be called ariel-pwrbutton.

INPUT_ARIZONA_HAPTICS
  Say Y to enable support for the haptics module in Arizona CODECs.
  
  To compile this driver as a module, choose M here: the
  module will be called arizona-haptics.

INPUT_ATI_REMOTE2
  Say Y here if you want to use an ATI or Philips USB RF remote control.
  These are RF remotes with USB receivers.
  ATI Remote Wonder II comes with some ATI's All-In-Wonder video cards
  and is also available as a separate product.
  This driver provides mouse pointer, left and right mouse buttons,
  and maps all the other remote buttons to keypress events.
  
  To compile this driver as a module, choose M here: the module will be
  called ati_remote2.

INPUT_ATLAS_BTNS
  Say Y here for support of Atlas wallmount touchscreen buttons.
  The events will show up as scancodes F1 through F9 via evdev.
  
  To compile this driver as a module, choose M here: the module will
  be called atlas_btns.

INPUT_ATMEL_CAPTOUCH
  Say Y here if an Atmel Capacitive Touch Button device which
  implements "captouch" protocol is connected to I2C bus. Typically
  this device consists of Atmel Touch sensor controlled by AtMegaXX
  MCU running firmware based on Qtouch library.
  One should find "atmel,captouch" node in the board specific DTS.
  
  To compile this driver as a module, choose M here: the
  module will be called atmel_captouch.

INPUT_AXP20X_PEK
  Say Y here if you want to enable power key reporting via the
  AXP20X PMIC.
  
  To compile this driver as a module, choose M here. The module will
  be called axp20x-pek.

INPUT_BMA150
  Say Y here if you have Bosch Sensortec's BMA150 or SMB380
  acceleration sensor hooked to an I2C bus.
  
  To compile this driver as a module, choose M here: the
  module will be called bma150.

INPUT_CM109
  Say Y here if you want to enable keyboard and buzzer functions of the
  C-Media CM109 usb phones. The audio part is enabled by the generic
  usb sound driver, so you might want to enable that as well.
  
  To compile this driver as a module, choose M here: the module will be
  called cm109.

INPUT_CMA3000
  Say Y here if you want to use VTI CMA3000_D0x Accelerometer
  driver
  
  This driver currently only supports I2C interface to the
  controller. Also select the I2C method.
  
  If unsure, say N
  
  To compile this driver as a module, choose M here: the
  module will be called cma3000_d0x.

INPUT_CMA3000_I2C
  Say Y here if you want to use VTI CMA3000_D0x Accelerometer
  through I2C interface.
  
  To compile this driver as a module, choose M here: the
  module will be called cma3000_d0x_i2c.

INPUT_COBALT_BTNS
  Say Y here if you want to support MIPS Cobalt button interface.
  
  To compile this driver as a module, choose M here: the
  module will be called cobalt_btns.

INPUT_CPCAP_PWRBUTTON
  Say Y here if you want to enable power key reporting via the
  Motorola CPCAP chip.
  
  To compile this driver as a module, choose M here. The module will
  be called cpcap-pwrbutton.

INPUT_DA7280_HAPTICS
  Say Y to enable support for the Dialog DA7280 haptics driver.
  The haptics can be controlled by PWM or GPIO
  with I2C communication.
  
  To compile this driver as a module, choose M here: the
  module will be called da7280.

INPUT_DA9052_ONKEY
  Support the ONKEY of Dialog DA9052 PMICs as an input device
  reporting power button status.
  
  To compile this driver as a module, choose M here: the
  module will be called da9052_onkey.

INPUT_DA9055_ONKEY
  Support the ONKEY of DA9055 PMICs as an input device
  reporting power button status.
  
  To compile this driver as a module, choose M here: the module
  will be called da9055_onkey.

INPUT_DA9063_ONKEY
  Support the ONKEY of Dialog DA9063, DA9062 and DA9061 Power
  Management ICs as an input device capable of reporting the
  power button status.
  
  To compile this driver as a module, choose M here: the module
  will be called da9063_onkey.

INPUT_DM355EVM
  Supports the pushbuttons and IR remote used with
  the DM355 EVM board.
  
  To compile this driver as a module, choose M here: the
  module will be called dm355evm_keys.

INPUT_DRV260X_HAPTICS
  Say Y to enable support for the TI DRV260X haptics driver.
  
  To compile this driver as a module, choose M here: the
  module will be called drv260x-haptics.

INPUT_DRV2665_HAPTICS
  Say Y to enable support for the TI DRV2665 haptics driver.
  
  To compile this driver as a module, choose M here: the
  module will be called drv2665-haptics.

INPUT_DRV2667_HAPTICS
  Say Y to enable support for the TI DRV2667 haptics driver.
  
  To compile this driver as a module, choose M here: the
  module will be called drv2667-haptics.

INPUT_E3X0_BUTTON
  Say Y here to enable support for the NI Ettus Research
  USRP E3xx Button.
  
  To compile this driver as a module, choose M here: the
  module will be called e3x0_button.

INPUT_EVBUG
  Say Y here if you have a problem with the input subsystem and
  want all events (keypresses, mouse movements), to be output to
  the system log. While this is useful for debugging, it's also
  a security threat - your keypresses include your passwords, of
  course.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called evbug.

INPUT_EVDEV
  Say Y here if you want your input device events be accessible
  under char device 13:64+ - /dev/input/eventX in a generic way.
  
  To compile this driver as a module, choose M here: the
  module will be called evdev.

INPUT_FF_MEMLESS
  Say Y here if you have memoryless force-feedback input device
  such as Logitech WingMan Force 3D, ThrustMaster FireStorm Dual
  Power 2, or similar. You will also need to enable hardware-specific
  driver.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called ff-memless.

INPUT_GPIO_BEEPER
  Say Y here if you have a beeper connected to a GPIO pin.
  
  To compile this driver as a module, choose M here: the
  module will be called gpio-beeper.

INPUT_GPIO_DECODER
  Say Y here if you want driver to read status of multiple GPIO
  lines and report the encoded value as an absolute integer to
  input subsystem.
  
  To compile this driver as a module, choose M here: the module
  will be called gpio_decoder.

INPUT_GPIO_ROTARY_ENCODER
  Say Y here to add support for rotary encoders connected to GPIO lines.
  Check file:Documentation/input/devices/rotary-encoder.rst for more
  information.
  
  To compile this driver as a module, choose M here: the
  module will be called rotary_encoder.

INPUT_GPIO_VIBRA
  Say Y here to get support for GPIO based vibrator devices.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the module will be
  called gpio-vibra.

INPUT_HISI_POWERKEY
  Say Y to enable support for PMIC ONKEY.
  
  To compile this driver as a module, choose M here: the
  module will be called hisi_powerkey.

INPUT_IDEAPAD_SLIDEBAR
  Say Y here if you have an IdeaPad laptop with a slidebar.
  
  To compile this driver as a module, choose M here: the
  module will be called ideapad_slidebar.

INPUT_IMS_PCU
  Say Y here if you have system with IMS Rave Passenger Control Unit.
  
  To compile this driver as a module, choose M here: the module will be
  called ims_pcu.

INPUT_IQS269A
  Say Y to enable support for the Azoteq IQS269A capacitive
  touch controller.
  
  To compile this driver as a module, choose M here: the
  module will be called iqs269a.

INPUT_IXP4XX_BEEPER
  If you say yes here, you can connect a beeper to the
  ixp4xx gpio pins. This is used by the LinkSys NSLU2.
  
  If unsure, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called ixp4xx-beeper.

INPUT_JOYDEV
  Say Y here if you want your joystick or gamepad to be
  accessible as char device 13:0+ - /dev/input/jsX device.
  
  If unsure, say Y.
  
  More information is available: <file:Documentation/input/joydev/joystick.rst>
  
  To compile this driver as a module, choose M here: the
  module will be called joydev.

INPUT_JOYSTICK
  If you have a joystick, 6dof controller, gamepad, steering wheel,
  weapon control system or something like that you can say Y here
  and the list of supported devices will be displayed. This option
  doesn't affect the kernel.
  
  Please read the file <file:Documentation/input/joydev/joystick.rst> which
  contains more information.

INPUT_KEYBOARD
  Say Y here, and a list of supported keyboards will be displayed.
  This option doesn't affect the kernel.
  
  If unsure, say Y.

INPUT_KEYSPAN_REMOTE
  Say Y here if you want to use a Keyspan DMR USB remote control.
  Currently only the UIA-11 type of receiver has been tested.  The tag
  on the receiver that connects to the USB port should have a P/N that
  will tell you what type of DMR you have.  The UIA-10 type is not
  supported at this time.  This driver maps all buttons to keypress
  events.
  
  To compile this driver as a module, choose M here: the module will
  be called keyspan_remote.

INPUT_KXTJ9
  Say Y here to enable support for the Kionix KXTJ9 digital tri-axis
  accelerometer.
  
  To compile this driver as a module, choose M here: the module will
  be called kxtj9.

INPUT_LEDS
  Say Y here if you would like to export LEDs on input devices
  as standard LED class devices in sysfs.
  
  If unsure, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called input-leds.

INPUT_M68K_BEEP
  No help

INPUT_MATRIXKMAP
  Say Y here if you are using a driver for an input
  device that uses matrix keymap. This option is only
  useful for out-of-tree drivers since in-tree drivers
  select it automatically.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called matrix-keymap.

INPUT_MAX77650_ONKEY
  Support the ONKEY of the MAX77650 PMIC as an input device.
  
  To compile this driver as a module, choose M here: the module
  will be called max77650-onkey.

INPUT_MAX77693_HAPTIC
  This option enables support for the haptic controller on
  MAXIM MAX77693 and MAX77843 chips.
  
  To compile this driver as module, choose M here: the
  module will be called max77693-haptic.

INPUT_MAX8925_ONKEY
  Support the ONKEY of MAX8925 PMICs as an input device
  reporting power button status.
  
  To compile this driver as a module, choose M here: the module
  will be called max8925_onkey.

INPUT_MAX8997_HAPTIC
  This option enables device driver support for the haptic controller
  on MAXIM MAX8997 chip. This driver supports ff-memless interface
  from input framework.
  
  To compile this driver as module, choose M here: the
  module will be called max8997-haptic.

INPUT_MC13783_PWRBUTTON
  Support the ON buttons of MC13783 PMIC as an input device
  reporting power button status.
  
  To compile this driver as a module, choose M here: the module
  will be called mc13783-pwrbutton.

INPUT_MISC
  Say Y here, and a list of miscellaneous input drivers will be displayed.
  Everything that didn't fit into the other categories is here. This option
  doesn't affect the kernel.
  
  If unsure, say Y.

INPUT_MMA8450
  Say Y here if you want to support Freescale's MMA8450 Accelerometer
  through I2C interface.
  
  To compile this driver as a module, choose M here: the
  module will be called mma8450.

INPUT_MOUSE
  Say Y here, and a list of supported mice will be displayed.
  This option doesn't affect the kernel.
  
  If unsure, say Y.

INPUT_MOUSEDEV
  Say Y here if you want your mouse to be accessible as char devices
  13:32+ - /dev/input/mouseX and 13:63 - /dev/input/mice as an
  emulated IntelliMouse Explorer PS/2 mouse. That way, all user space
  programs (including SVGAlib, GPM and X) will be able to use your
  mouse.
  
  If unsure, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called mousedev.

INPUT_MOUSEDEV_PSAUX
  Say Y here if you want your mouse also be accessible as char device
  10:1 - /dev/psaux. The data available through /dev/psaux is exactly
  the same as the data from /dev/input/mice.
  
  If unsure, say Y.

INPUT_MOUSEDEV_SCREEN_X
  If you're using a digitizer, or a graphic tablet, and want to use
  it as a mouse then the mousedev driver needs to know the X window
  screen resolution you are using to correctly scale the data. If
  you're not using a digitizer, this value is ignored.

INPUT_MOUSEDEV_SCREEN_Y
  If you're using a digitizer, or a graphic tablet, and want to use
  it as a mouse then the mousedev driver needs to know the X window
  screen resolution you are using to correctly scale the data. If
  you're not using a digitizer, this value is ignored.

INPUT_PALMAS_PWRBUTTON
  Say Y here if you want to enable power key reporting via the
  Palmas family of PMICs.
  
  To compile this driver as a module, choose M here. The module will
  be called palmas_pwrbutton.

INPUT_PCAP
  Say Y here if you want to use Power key and Headphone button
  on Motorola EZX phones.
  
  To compile this driver as a module, choose M here: the
  module will be called pcap_keys.

INPUT_PCF50633_PMU
  Say Y to include support for delivering  PMU events via  input
  layer on NXP PCF50633.

INPUT_PCF8574
  Say Y here if you want to support a keypad connected via I2C
  with a PCF8574.
  
  To compile this driver as a module, choose M here: the
  module will be called pcf8574_keypad.

INPUT_PCSPKR
  Say Y here if you want the standard PC Speaker to be used for
  bells and whistles.
  
  If unsure, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called pcspkr.

INPUT_PM8941_PWRKEY
  Say Y here if you want support for the power key usually found
  on boards using a Qualcomm PM8941 compatible PMIC.
  
  If unsure, say Y.
  
  To compile this driver as a module, choose M here: the module
  will be called pm8941-pwrkey.

INPUT_PM8XXX_VIBRATOR
  This option enables device driver support for the vibrator
  on Qualcomm PM8xxx chip. This driver supports ff-memless interface
  from input framework.
  
  To compile this driver as module, choose M here: the
  module will be called pm8xxx-vibrator.

INPUT_PMIC8XXX_PWRKEY
  Say Y here if you want support for the PMIC8XXX power key.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called pmic8xxx-pwrkey.

INPUT_POWERMATE
  Say Y here if you want to use Griffin PowerMate or Contour Jog devices.
  These are aluminum dials which can measure clockwise and anticlockwise
  rotation.  The dial also acts as a pushbutton.  The base contains an LED
  which can be instructed to pulse or to switch to a particular intensity.
  
  You can download userspace tools from
  <http://sowerbutts.com/powermate/>.
  
  To compile this driver as a module, choose M here: the
  module will be called powermate.

INPUT_PWM_BEEPER
  Say Y here to get support for PWM based beeper devices.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the module will be
  called pwm-beeper.

INPUT_PWM_VIBRA
  Say Y here to get support for PWM based vibrator devices.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the module will be
  called pwm-vibra.

INPUT_RAVE_SP_PWRBUTTON
  Say Y here if you want to enable power key reporting from RAVE SP
  
  To compile this driver as a module, choose M here: the
  module will be called rave-sp-pwrbutton.

INPUT_RB532_BUTTON
  Say Y here if you want support for the S1 button built into
  Mikrotik's Routerboard 532.
  
  To compile this driver as a module, choose M here: the
  module will be called rb532_button.

INPUT_REGULATOR_HAPTIC
  This option enables device driver support for the haptic controlled
  by a regulator. This driver supports ff-memless interface
  from input framework.
  
  To compile this driver as a module, choose M here: the
  module will be called regulator-haptic.

INPUT_RETU_PWRBUTTON
  Say Y here if you want to enable power key reporting via the
  Retu chips found in Nokia Internet Tablets (770, N800, N810).
  
  To compile this driver as a module, choose M here. The module will
  be called retu-pwrbutton.

INPUT_RK805_PWRKEY
  Select this option to enable power key driver for RK805.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the module will be
  called rk805_pwrkey.

INPUT_SC27XX_VIBRA
  This option enables support for Spreadtrum sc27xx vibrator driver.
  
  To compile this driver as a module, choose M here. The module will
  be called sc27xx_vibra.

INPUT_SGI_BTNS
  Say Y here if you want to support SGI Indy/O2 volume button interface.
  
  To compile this driver as a module, choose M here: the
  module will be called sgi_btns.

INPUT_SIRFSOC_ONKEY
  Say Y here if you want to support for the SiRFSoC power on/off/suspend key
  in Linux, after you press the onkey, system will suspend.
  
  If unsure, say N.

INPUT_SOC_BUTTON_ARRAY
  Say Y here if you have a SoC-based tablet that originally runs
  Windows 8 or a Microsoft Surface Book 2, Pro 5, Laptop 1 or later.
  
  To compile this driver as a module, choose M here: the
  module will be called soc_button_array.

INPUT_SPARCSPKR
  Say Y here if you want the standard Speaker on Sparc PCI systems
  to be used for bells and whistles.
  
  If unsure, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called sparcspkr.

INPUT_SPARSEKMAP
  Say Y here if you are using a driver for an input
  device that uses sparse keymap. This option is only
  useful for out-of-tree drivers since in-tree drivers
  select it automatically.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called sparse-keymap.

INPUT_STPMIC1_ONKEY
  Say Y to enable support of onkey embedded into STPMIC1 PMIC. onkey
  can be used to wakeup from low power modes and force a shut-down on
  long press.
  
  To compile this driver as a module, choose M here: the
  module will be called stpmic1_onkey.

INPUT_TABLET
  Say Y here, and a list of supported tablets will be displayed.
  This option doesn't affect the kernel.
  
  If unsure, say Y.

INPUT_TOUCHSCREEN
  Say Y here, and a list of supported touchscreens will be displayed.
  This option doesn't affect the kernel.
  
  If unsure, say Y.

INPUT_TPS65218_PWRBUTTON
  Say Y here if you want to enable power button reporting for
  TPS65217 and TPS65218 Power Management IC devices.
  
  To compile this driver as a module, choose M here. The module will
  be called tps65218-pwrbutton.

INPUT_TWL4030_PWRBUTTON
  Say Y here if you want to enable power key reporting via the
  TWL4030 family of chips.
  
  To compile this driver as a module, choose M here. The module will
  be called twl4030_pwrbutton.

INPUT_TWL4030_VIBRA
  This option enables support for TWL4030 Vibrator Driver.
  
  To compile this driver as a module, choose M here. The module will
  be called twl4030_vibra.

INPUT_TWL6040_VIBRA
  This option enables support for TWL6040 Vibrator Driver.
  
  To compile this driver as a module, choose M here. The module will
  be called twl6040_vibra.

INPUT_UINPUT
  Say Y here if you want to support user level drivers for input
  subsystem accessible under char device 10:223 - /dev/input/uinput.
  
  To compile this driver as a module, choose M here: the
  module will be called uinput.

INPUT_WISTRON_BTNS
  Say Y here for support of Wistron laptop button interfaces, used on
  laptops of various brands, including Acer and Fujitsu-Siemens. If
  available, mail and wifi LEDs will be controllable via /sys/class/leds.
  
  To compile this driver as a module, choose M here: the module will
  be called wistron_btns.

INPUT_WM831X_ON
  Support the ON pin of WM831X PMICs as an input device
  reporting power button status.
  
  To compile this driver as a module, choose M here: the module
  will be called wm831x_on.

INPUT_XEN_KBDDEV_FRONTEND
  This driver implements the front-end of the Xen virtual
  keyboard and mouse device driver.  It communicates with a back-end
  in another domain.
  
  To compile this driver as a module, choose M here: the
  module will be called xen-kbdfront.

INPUT_YEALINK
  Say Y here if you want to enable keyboard and LCD functions of the
  Yealink usb-p1k usb phones. The audio part is enabled by the generic
  usb sound driver, so you might want to enable that as well.
  
  For information about how to use these additional functions, see
  <file:Documentation/input/devices/yealink.rst>.
  
  To compile this driver as a module, choose M here: the module will be
  called yealink.

INSTRUCTION_DECODER
  No help

INT3406_THERMAL
  The display thermal device represents the LED/LCD display panel
  that may or may not include touch support. The main function of
  the display thermal device is to allow control of the display
  brightness in order to address a thermal condition or to reduce
  power consumed by display device.

INT340X_THERMAL
  Newer laptops and tablets that use ACPI may have thermal sensors and
  other devices with thermal control capabilities outside the core
  CPU/SOC, for thermal safety reasons.
  They are exposed for the OS to use via the INT3400 ACPI device object
  as the master, and INT3401~INT340B ACPI device objects as the slaves.
  Enable this to expose the temperature information and cooling ability
  from these objects to userspace via the normal thermal framework.
  This means that a wide range of applications and GUI widgets can show
  the information to the user or use this information for making
  decisions. For example, the Intel Thermal Daemon can use this
  information to allow the user to select his laptop to run without
  turning on the fans.

INTEGRATOR_AP_TIMER
  Enables support for the Integrator-AP timer.

INTEGRITY
  This option enables the integrity subsystem, which is comprised
  of a number of different components including the Integrity
  Measurement Architecture (IMA), Extended Verification Module
  (EVM), IMA-appraisal extension, digital signature verification
  extension and audit measurement log support.
  
  Each of these components can be enabled/disabled separately.
  Refer to the individual components for additional details.

INTEGRITY_ASYMMETRIC_KEYS
  This option enables digital signature verification using
  asymmetric keys.

INTEGRITY_AUDIT
  In addition to enabling integrity auditing support, this
  option adds a kernel parameter 'integrity_audit', which
  controls the level of integrity auditing messages.
  0 - basic integrity auditing messages (default)
  1 - additional integrity auditing messages
  
  Additional informational integrity auditing messages would
  be enabled by specifying 'integrity_audit=1' on the kernel
  command line.

INTEGRITY_PLATFORM_KEYRING
  Provide a separate, distinct keyring for platform trusted keys, which
  the kernel automatically populates during initialization from values
  provided by the platform for verifying the kexec'ed kerned image
  and, possibly, the initramfs signature.

INTEGRITY_SIGNATURE
  This option enables digital signature verification support
  using multiple keyrings. It defines separate keyrings for each
  of the different use cases - evm, ima, and modules.
  Different keyrings improves search performance, but also allow
  to "lock" certain keyring to prevent adding new keys.
  This is useful for evm and module keyrings, when keys are
  usually only added from initramfs.

INTEGRITY_TRUSTED_KEYRING
  This option requires that all keys added to the .ima and
  .evm keyrings be signed by a key on the system trusted
  keyring.

INTEL_ATOMISP
  Enable support for the Intel ISP2 camera interfaces and MIPI
  sensor drivers.

INTEL_ATOMISP2_LED
  Many Bay Trail and Cherry Trail devices come with a camera attached
  to Intel's Image Signal Processor. Linux currently does not have a
  driver for these, so they do not work as a camera. Some of these
  camera's have a LED which is controlled through a GPIO.
  
  Some of these devices have a firmware issue where the LED gets turned
  on at boot. This driver will turn the LED off at boot and also allows
  controlling the LED (repurposing it) through the sysfs LED interface.
  
  Which GPIO is attached to the LED is usually not described in the
  ACPI tables, so this driver contains per-system info about the GPIO
  inside the driver, this means that this driver only works on systems
  the driver knows about.
  
  To compile this driver as a module, choose M here: the module
  will be called intel_atomisp2_led.

INTEL_ATOMISP2_PM
  Power-management driver for Intel's Image Signal Processor found on
  Bay Trail and Cherry Trail devices. This dummy driver's sole purpose
  is to turn the ISP off (put it in D3) to save power and to allow
  entering of S0ix modes.
  
  To compile this driver as a module, choose M here: the module
  will be called intel_atomisp2_pm.

INTEL_BXTWC_PMIC_TMU
  Select this driver to use Intel BXT Whiskey Cove PMIC TMU feature.
  This driver enables the alarm wakeup functionality in the TMU unit
  of Whiskey Cove PMIC.

INTEL_BXT_PMIC_THERMAL
  Select this driver for Intel Broxton PMIC with ADC channels monitoring
  system temperature measurements and alerts.
  This driver is used for monitoring the ADC channels of PMIC and handles
  the alert trip point interrupts and notifies the thermal framework with
  the trip point and temperature details of the zone.

INTEL_CHTDC_TI_PWRBTN
  This option adds a power button driver driver for Dollar Cove TI
  PMIC on Intel Cherry Trail devices.
  
  To compile this driver as a module, choose M here: the module
  will be called intel_chtdc_ti_pwrbtn.

INTEL_CHT_INT33FE
  This driver add support for the INT33FE ACPI device found on
  some Intel Cherry Trail devices.
  
  There are two kinds of INT33FE ACPI device possible: for hardware
  with USB Type-C and Micro-B connectors. This driver supports both.
  
  The INT33FE ACPI device has a CRS table with I2cSerialBusV2
  resources for Fuel Gauge Controller and (in the Type-C variant)
  FUSB302 USB Type-C Controller and PI3USB30532 USB switch.
  This driver instantiates i2c-clients for these, so that standard
  i2c drivers for these chips can bind to the them.
  
  If you enable this driver it is advised to also select
  CONFIG_BATTERY_BQ27XXX=m or CONFIG_BATTERY_BQ27XXX_I2C=m for Micro-B
  device and CONFIG_TYPEC_FUSB302=m and CONFIG_BATTERY_MAX17042=m
  for Type-C device.

INTEL_GTT
  No help

INTEL_HID_EVENT
  This driver provides support for the Intel HID Event hotkey interface.
  Some laptops require this driver for hotkey support.
  
  To compile this driver as a module, choose M here: the module will
  be called intel_hid.

INTEL_IDLE
  Enable intel_idle, a cpuidle driver that includes knowledge of
  native Intel hardware idle features.  The acpi_idle driver
  can be configured at the same time, in order to handle
  processors intel_idle does not support.

INTEL_IDMA64
  Enable DMA support for Intel Low Power Subsystem such as found on
  Intel Skylake PCH.

INTEL_IDXD
  Enable support for the Intel(R) data accelerators present
  in Intel Xeon CPU.
  
  Say Y if you have such a platform.
  
  If unsure, say N.

INTEL_IDXD_SVM
  No help

INTEL_IMR
  This option provides a means to manipulate Isolated Memory Regions.
  IMRs are a set of registers that define read and write access masks
  to prohibit certain system agents from accessing memory with 1 KiB
  granularity.
  
  IMRs make it possible to control read/write access to an address
  by hardware agents inside the SoC. Read and write masks can be
  defined for:
        - eSRAM flush
        - Dirty CPU snoop (write only)
        - RMU access
        - PCI Virtual Channel 0/Virtual Channel 1
        - SMM mode
        - Non SMM mode
  
  Quark contains a set of eight IMR registers and makes use of those
  registers during its bootup process.
  
  If you are running on a Galileo/Quark say Y here.

INTEL_INT0002_VGPIO
  Some peripherals on Bay Trail and Cherry Trail platforms signal a
  Power Management Event (PME) to the Power Management Controller (PMC)
  to wakeup the system. When this happens software needs to explicitly
  clear the PME bus 0 status bit in the GPE0a_STS register to avoid an
  IRQ storm on IRQ 9.
  
  This is modelled in ACPI through the INT0002 ACPI device, which is
  called a "Virtual GPIO controller" in ACPI because it defines the
  event handler to call when the PME triggers through _AEI and _L02
  methods as would be done for a real GPIO interrupt in ACPI.
  
  To compile this driver as a module, choose M here: the module will
  be called intel_int0002_vgpio.

INTEL_IOATDMA
  Enable support for the Intel(R) I/OAT DMA engine present
  in recent Intel Xeon chipsets.
  
  Say Y here if you have such a chipset.
  
  If unsure, say N.

INTEL_IOMMU
  DMA remapping (DMAR) devices support enables independent address
  translations for Direct Memory Access (DMA) from devices.
  These DMA remapping devices are reported via ACPI tables
  and include PCI device scope covered by these DMA
  remapping devices.

INTEL_IOMMU_BROKEN_GFX_WA
  Current Graphics drivers tend to use physical address
  for DMA and avoid using DMA APIs. Setting this config
  option permits the IOMMU driver to set a unity map for
  all the OS-visible memory. Hence the driver can continue
  to use physical addresses for DMA, at least until this
  option is removed in the 2.6.32 kernel.

INTEL_IOMMU_DEBUGFS
  !!!WARNING!!!
  
  DO NOT ENABLE THIS OPTION UNLESS YOU REALLY KNOW WHAT YOU ARE DOING!!!
  
  Expose Intel IOMMU internals in Debugfs.
  
  This option is -NOT- intended for production environments, and should
  only be enabled for debugging Intel IOMMU.

INTEL_IOMMU_DEFAULT_ON
  Selecting this option will enable a DMAR device at boot time if
  one is found. If this option is not selected, DMAR support can
  be enabled by passing intel_iommu=on to the kernel.

INTEL_IOMMU_FLOPPY_WA
  Floppy disk drivers are known to bypass DMA API calls
  thereby failing to work when IOMMU is enabled. This
  workaround will setup a 1:1 mapping for the first
  16MiB to make floppy (an ISA device) work.

INTEL_IOMMU_SCALABLE_MODE_DEFAULT_ON
  Selecting this option will enable by default the scalable mode if
  hardware presents the capability. The scalable mode is defined in
  VT-d 3.0. The scalable mode capability could be checked by reading
  /sys/devices/virtual/iommu/dmar*/intel-iommu/ecap. If this option
  is not selected, scalable mode support could also be enabled by
  passing intel_iommu=sm_on to the kernel. If not sure, please use
  the default value.

INTEL_IOMMU_SVM
  Shared Virtual Memory (SVM) provides a facility for devices
  to access DMA resources through process address space by
  means of a Process Address Space ID (PASID).

INTEL_IOP_ADMA
  Enable support for the Intel(R) IOP Series RAID engines.

INTEL_IPS
  Intel Calpella platforms support dynamic power sharing between the
  CPU and GPU, maximizing performance in a given TDP.  This driver,
  along with the CPU frequency and i915 drivers, provides that
  functionality.  If in doubt, say Y here; it will only load on
  supported platforms.

INTEL_ISH_FIRMWARE_DOWNLOADER
  The Integrated Sensor Hub (ISH) enables the kernel to offload
  sensor polling and algorithm processing to a dedicated low power
  processor in the chipset.
  
  The Host Firmware Load feature adds support to load the ISH
  firmware from host file system at boot.
  
  Say M here if you want to support Host Firmware Loading feature
  for Intel ISH. If unsure, say N.

INTEL_ISH_HID
  The Integrated Sensor Hub (ISH) enables the ability to offload
  sensor polling and algorithm processing to a dedicated low power
  processor in the chipset. This allows the core processor to go into
  low power modes more often, resulting in the increased battery life.
  The current processors that support ISH are: Cherrytrail, Skylake,
  Broxton and Kaby Lake.
  
  Say Y here if you want to support Intel ISH. If unsure, say N.

INTEL_MEI
  The Intel Management Engine (Intel ME) provides Manageability,
  Security and Media services for system containing Intel chipsets.
  if selected /dev/mei misc device will be created.
  
  For more information see
  <https://software.intel.com/en-us/manageability/>

INTEL_MEI_HDCP
  MEI Support for HDCP2.2 Services on Intel platforms.
  
  Enables the ME FW services required for HDCP2.2 support through
  I915 display driver of Intel.

INTEL_MEI_ME
  MEI support for ME Enabled Intel chipsets.
  
  Supported Chipsets are:
  7 Series Chipset Family
  6 Series Chipset Family
  5 Series Chipset Family
  4 Series Chipset Family
  Mobile 4 Series Chipset Family
  ICH9
  82946GZ/GL
  82G35 Express
  82Q963/Q965
  82P965/G965
  Mobile PM965/GM965
  Mobile GME965/GLE960
  82Q35 Express
  82G33/G31/P35/P31 Express
  82Q33 Express
  82X38/X48 Express

INTEL_MEI_TXE
  MEI Support for Trusted Execution Environment device on Intel SoCs
  
  Supported SoCs:
  Intel Bay Trail

INTEL_MEI_WDT
  A device driver for the Intel MEI iAMT watchdog.
  
  The Intel AMT Watchdog is an OS Health (Hang/Crash) watchdog.
  Whenever the OS hangs or crashes, iAMT will send an event
  to any subscriber to this event. The watchdog doesn't reset the
  the platform.
  
  To compile this driver as a module, choose M here:
  the module will be called mei_wdt.

INTEL_MENLOW
  ACPI thermal management enhancement driver on
  Intel Menlow platform.
  
  If unsure, say N.

INTEL_MFLD_THERMAL
  Say Y here to enable thermal driver support for the  Intel Medfield
  platform.

INTEL_MID_POWER_BUTTON
  This driver handles the power button on the Intel MID platforms.
  
  If unsure, say N.

INTEL_MID_PTI
  The PTI (Parallel Trace Interface) driver directs
  trace data routed from various parts in the system out
  through an Intel Penwell PTI port and out of the mobile
  device for analysis with a debugging tool (Lauterbach or Fido).
  
  You should select this driver if the target kernel is meant for
  an Intel Atom (non-netbook) mobile device containing a MIPI
  P1149.7 standard implementation.

INTEL_MID_WATCHDOG
  Watchdog timer driver built into the Intel SCU for Intel MID
  Platforms.
  
  This driver currently supports only the watchdog evolution
  implementation in SCU, available for Merrifield generation.
  
  To compile this driver as a module, choose M here.

INTEL_MRFLD_ADC
  Say yes here to have support for Basin Cove power management IC (PMIC) ADC
  device. Depending on platform configuration, this general purpose ADC can
  be used for sampling sensors such as thermal resistors.
  
  To compile this driver as a module, choose M here: the module will be
  called intel_mrfld_adc.

INTEL_MRFLD_PWRBTN
  This option adds a power button driver for Basin Cove PMIC
  on Intel Merrifield devices.
  
  To compile this driver as a module, choose M here: the module
  will be called intel_mrfld_pwrbtn.

INTEL_OAKTRAIL
  Intel Oaktrail platform need this driver to provide interfaces to
  enable/disable the Camera, WiFi, BT etc. devices. If in doubt, say Y
  here; it will only load on supported platforms.

INTEL_PCH_THERMAL
  Enable this to support thermal reporting on certain intel PCHs.
  Thermal reporting device will provide temperature reading,
  programmable trip points and other information.

INTEL_PMC_CORE
  The Intel Platform Controller Hub for Intel Core SoCs provides access
  to Power Management Controller registers via a PCI interface. This
  driver can utilize debugging capabilities and supported features as
  exposed by the Power Management Controller.
  
  Supported features:
        - SLP_S0_RESIDENCY counter
        - PCH IP Power Gating status
        - LTR Ignore
        - MPHY/PLL gating status (Sunrisepoint PCH only)

INTEL_PMT_CLASS
  The Intel Platform Monitoring Technology (PMT) class driver provides
  the basic sysfs interface and file hierarchy uses by PMT devices.
  
  For more information, see:
  <file:Documentation/ABI/testing/sysfs-class-intel_pmt>
  
  To compile this driver as a module, choose M here: the module
  will be called intel_pmt_class.

INTEL_PMT_CRASHLOG
  The Intel Platform Monitoring Technology (PMT) crashlog driver provides
  access to hardware crashlog capabilities on devices that support the
  feature.
  
  To compile this driver as a module, choose M here: the module
  will be called intel_pmt_crashlog.

INTEL_PMT_TELEMETRY
  The Intel Platform Monitory Technology (PMT) Telemetry driver provides
  access to hardware telemetry metrics on devices that support the
  feature.
  
  To compile this driver as a module, choose M here: the module
  will be called intel_pmt_telemetry.

INTEL_POWERCLAMP
  Enable this to enable Intel PowerClamp idle injection driver. This
  enforce idle time which results in more package C-state residency. The
  user interface is exposed via generic thermal framework.

INTEL_PUNIT_IPC
  This driver provides support for Intel P-Unit Mailbox IPC mechanism,
  which is used to bridge the communications between kernel and P-Unit.

INTEL_QUARK_DTS_THERMAL
  Enable this to register Intel Quark SoC (e.g. X1000) platform digital
  temperature sensor (DTS). For X1000 SoC, it has one on-die DTS.
  The DTS will be registered as a thermal zone. There are two trip points:
  hot & critical. The critical trip point default value is set by
  underlying BIOS/Firmware.

INTEL_RAPL
  This enables support for the Intel Running Average Power Limit (RAPL)
  technology via MSR interface, which allows power limits to be enforced
  and monitored on modern Intel processors (Sandy Bridge and later).
  
  In RAPL, the platform level settings are divided into domains for
  fine grained control. These domains include processor package, DRAM
  controller, CPU core (Power Plane 0), graphics uncore (Power Plane
  1), etc.

INTEL_RAPL_CORE
  No help

INTEL_RST
  This driver provides support for modifying parameters on systems
  equipped with Intel's Rapid Start Technology. When put in an ACPI
  sleep state, these devices will wake after either a configured
  timeout or when the system battery reaches a critical state,
  automatically copying memory contents to disk. On resume, the
  firmware will copy the memory contents back to RAM and resume the OS
  as usual.

INTEL_SCU
  No help

INTEL_SCU_IPC
  No help

INTEL_SCU_IPC_UTIL
  The IPC Util driver provides an interface with the SCU enabling
  low level access for debug work and updating the firmware. Say
  N unless you will be doing this on an Intel MID platform.

INTEL_SCU_PCI
  This driver is used to bridge the communications between kernel
  and SCU on some embedded Intel x86 platforms. It also creates
  devices that are connected to the SoC through the SCU.
  Platforms supported:
    Medfield
    Clovertrail
    Merrifield
    Broxton
    Apollo Lake

INTEL_SCU_PLATFORM
  This driver is used to bridge the communications between kernel
  and SCU (sometimes called PMC as well). The driver currently
  supports Intel Elkhart Lake and compatible platforms.

INTEL_SCU_WATCHDOG
  Hardware driver for the watchdog time built into the Intel SCU
  for Intel Mobile Platforms.
  
  To compile this driver as a module, choose M here.

INTEL_SMARTCONNECT
  Intel Smart Connect is a technology intended to permit devices to
  update state by resuming for a short period of time at regular
  intervals. If a user enables this functionality under Windows and
  then reboots into Linux, the system may remain configured to resume
  on suspend. In the absence of any userspace to support it, the system
  will then remain awake until something triggers another suspend.
  
  This driver checks to determine whether the device has Intel Smart
  Connect enabled, and if so disables it.

INTEL_SOC_DTS_IOSF_CORE
  This is becoming a common feature for Intel SoCs to expose the additional
  digital temperature sensors (DTSs) using side band interface (IOSF). This
  implements the common set of helper functions to register, get temperature
  and get/set thresholds on DTSs.

INTEL_SOC_DTS_THERMAL
  Enable this to register Intel SoCs (e.g. Bay Trail) platform digital
  temperature sensor (DTS). These SoCs have two additional DTSs in
  addition to DTSs on CPU cores. Each DTS will be registered as a
  thermal zone. There are two trip points. One of the trip point can
  be set by user mode programs to get notifications via Linux thermal
  notification methods.The other trip is a critical trip point, which
  was set by the driver based on the TJ MAX temperature.

INTEL_SOC_PMIC
  Select this option to enable support for Crystal Cove PMIC
  on some Intel SoC systems. The PMIC provides ADC, GPIO,
  thermal, charger and related power management functions
  on these systems.
  
  This option is a bool as it provides an ACPI OpRegion which must be
  available before any devices using it are probed. This option also
  causes the designware-i2c driver to be builtin for the same reason.

INTEL_SOC_PMIC_BXTWC
  Select this option to enable support for Whiskey Cove PMIC
  on Intel Broxton systems. The PMIC provides ADC, GPIO,
  thermal, charger and related power management functions
  on these systems.

INTEL_SOC_PMIC_CHTDC_TI
  Select this option for supporting Dollar Cove (TI version) PMIC
  device that is found on some Intel Cherry Trail systems.

INTEL_SOC_PMIC_CHTWC
  Select this option to enable support for the Intel Cherry Trail
  Whiskey Cove PMIC found on some Intel Cherry Trail systems.
  
  This option is a bool as it provides an ACPI OpRegion which must be
  available before any devices using it are probed. This option also
  causes the designware-i2c driver to be builtin for the same reason.

INTEL_SOC_PMIC_MRFLD
  Select this option for supporting Basin Cove PMIC device
  that is found on Intel Merrifield systems.

INTEL_SPEED_SELECT_INTERFACE
  This config enables the Intel(R) Speed Select Technology interface
  drivers. The Intel(R) speed select technology features are non
  architectural and only supported on specific Xeon(R) servers.
  These drivers provide interface to directly communicate with hardware
  via MMIO and Mail boxes to enumerate and control all the speed select
  features.
  
  Enable this config, if there is a need to enable and control the
  Intel(R) Speed Select Technology features from the user space.

INTEL_STRATIX10_RSU
  The Intel Remote System Update (RSU) driver exposes interfaces
  access through the Intel Service Layer to user space via sysfs
  device attribute nodes. The RSU interfaces report/control some of
  the optional RSU features of the Stratix 10 SoC FPGA.
  
  The RSU provides a way for customers to update the boot
  configuration of a Stratix 10 SoC device with significantly reduced
  risk of corrupting the bitstream storage and bricking the system.
  
  Enable RSU support if you are using an Intel SoC FPGA with the RSU
  feature enabled and you want Linux user space control.
  
  Say Y here if you want Intel RSU support.

INTEL_STRATIX10_SERVICE
  Intel Stratix10 service layer runs at privileged exception level,
  interfaces with the service providers (FPGA manager is one of them)
  and manages secure monitor call to communicate with secure monitor
  software at secure monitor exception level.
  
  Say Y here if you want Stratix10 service layer support.

INTEL_TELEMETRY
  This driver provides interfaces to configure and use
  telemetry for INTEL SoC from APL onwards. It is also
  used to get various SoC events and parameters
  directly via debugfs files. Various tools may use
  this interface for SoC state monitoring.

INTEL_TH
  Intel(R) Trace Hub (TH) is a set of hardware blocks (subdevices) that
  produce, switch and output trace data from multiple hardware and
  software sources over several types of trace output ports encoded
  in System Trace Protocol (MIPI STPv2) and is intended to perform
  full system debugging.
  
  This option enables intel_th bus and common code used by TH
  subdevices to interact with each other and hardware and for
  platform glue layers to drive Intel TH devices.
  
  Say Y here to enable Intel(R) Trace Hub controller support.

INTEL_TH_ACPI
  Intel(R) Trace Hub may exist as an ACPI device. This option enables
  support glue layer for ACPI-based Intel TH. This typically implies
  'host debugger' mode, that is, the trace configuration and capture
  is handled by an external debug host and corresponding controls will
  not be available on the target.
  
  Say Y here to enable ACPI Intel TH support.

INTEL_TH_DEBUG
  Say Y here to enable debugging.

INTEL_TH_GTH
  Global Trace Hub (GTH) is the central component of the
  Intel TH infrastructure and acts as a switch for source
  and output devices. This driver is required for other
  Intel TH subdevices to initialize.
  
  Say Y here to enable GTH subdevice of Intel(R) Trace Hub.

INTEL_TH_MSU
  Memory Storage Unit (MSU) trace output device enables
  storing STP traces to system memory. It supports single
  and multiblock modes of operation and provides read()
  and mmap() access to the collected data.
  
  Say Y here to enable MSU output device for Intel TH.

INTEL_TH_PCI
  Intel(R) Trace Hub may exist as a PCI device. This option enables
  support glue layer for PCI-based Intel TH.
  
  Say Y here to enable PCI Intel TH support.

INTEL_TH_PTI
  Parallel Trace Interface unit (PTI) is a trace output device
  of Intel TH architecture that facilitates STP trace output via
  a PTI port.
  
  Say Y to enable PTI output of Intel TH data.

INTEL_TH_STH
  Software Trace Hub (STH) enables trace data from software
  trace sources to be sent out via Intel(R) Trace Hub. It
  uses stm class device to interface with its sources.
  
  Say Y here to enable STH subdevice of Intel(R) Trace Hub.

INTEL_TURBO_MAX_3
  This driver reads maximum performance ratio of each CPU and set up
  the scheduler priority metrics. In this way scheduler can prefer
  CPU with higher performance to schedule tasks.
  This driver is only required when the system is not using Hardware
  P-States (HWP). In HWP mode, priority can be read from ACPI tables.

INTEL_TXT
  This option enables support for booting the kernel with the
  Trusted Boot (tboot) module. This will utilize
  Intel(R) Trusted Execution Technology to perform a measured launch
  of the kernel. If the system does not support Intel(R) TXT, this
  will have no effect.
  
  Intel TXT will provide higher assurance of system configuration and
  initial state as well as data reset protection.  This is used to
  create a robust initial kernel measurement and verification, which
  helps to ensure that kernel security mechanisms are functioning
  correctly. This level of protection requires a root of trust outside
  of the kernel itself.
  
  Intel TXT also helps solve real end user concerns about having
  confidence that their hardware is running the VMM or kernel that
  it was configured with, especially since they may be responsible for
  providing such assurances to VMs and services running on it.
  
  See <https://www.intel.com/technology/security/> for more information
  about Intel(R) TXT.
  See <http://tboot.sourceforge.net> for more information about tboot.
  See Documentation/x86/intel_txt.rst for a description of how to enable
  Intel TXT support in a kernel boot.
  
  If you are unsure as to whether this is required, answer N.

INTEL_UNCORE_FREQ_CONTROL
  This driver allows control of uncore frequency limits on
  supported server platforms.
  Uncore frequency controls RING/LLC (last-level cache) clocks.
  
  To compile this driver as a module, choose M here: the module
  will be called intel-uncore-frequency.

INTEL_VBTN
  This driver provides support for the Intel Virtual Button interface.
  Some laptops require this driver for power button support.
  
  To compile this driver as a module, choose M here: the module will
  be called intel_vbtn.

INTEL_WMI_SBL_FW_UPDATE
  Say Y here if you want to be able to use the WMI interface to signal
  Slim Bootloader to trigger update on next reboot.
  
  To compile this driver as a module, choose M here: the module will
  be called intel-wmi-sbl-fw-update.

INTEL_WMI_THUNDERBOLT
  Say Y here if you want to be able to use the WMI interface on select
  systems to force the power control of Intel Thunderbolt controllers.
  This is useful for updating the firmware when devices are not plugged
  into the controller.
  
  To compile this driver as a module, choose M here: the module will
  be called intel-wmi-thunderbolt.

INTEL_XWAY_PHY
  Supports the Intel XWAY (former Lantiq) 11G and 22E PHYs.
  These PHYs are marked as standalone chips under the names
  PEF 7061, PEF 7071 and PEF 7072 or integrated into the Intel
  SoCs xRX200, xRX300, xRX330, xRX350 and xRX550.

INTERCONNECT
  Support for management of the on-chip interconnects.
  
  This framework is designed to provide a generic interface for
  managing the interconnects in a SoC.
  
  If unsure, say no.

INTERCONNECT_EXYNOS
  Generic interconnect driver for Exynos SoCs.

INTERCONNECT_IMX
  Generic interconnect drivers for i.MX SOCs

INTERCONNECT_IMX8MM
  No help

INTERCONNECT_IMX8MN
  No help

INTERCONNECT_IMX8MQ
  No help

INTERCONNECT_QCOM
  Support for Qualcomm's Network-on-Chip interconnect hardware.

INTERCONNECT_QCOM_BCM_VOTER
  No help

INTERCONNECT_QCOM_MSM8916
  This is a driver for the Qualcomm Network-on-Chip on msm8916-based
  platforms.

INTERCONNECT_QCOM_MSM8974
  This is a driver for the Qualcomm Network-on-Chip on msm8974-based
  platforms.

INTERCONNECT_QCOM_OSM_L3
  Say y here to support the Operating State Manager (OSM) interconnect
  driver which controls the scaling of L3 caches on Qualcomm SoCs.

INTERCONNECT_QCOM_QCS404
  This is a driver for the Qualcomm Network-on-Chip on qcs404-based
  platforms.

INTERCONNECT_QCOM_RPMH
  No help

INTERCONNECT_QCOM_RPMH_POSSIBLE
  Compile-testing RPMH drivers is possible on other platforms,
  but in order to avoid link failures, drivers must not be built-in
  when QCOM_RPMH or QCOM_COMMAND_DB are loadable modules

INTERCONNECT_QCOM_SC7180
  This is a driver for the Qualcomm Network-on-Chip on sc7180-based
  platforms.

INTERCONNECT_QCOM_SDM845
  This is a driver for the Qualcomm Network-on-Chip on sdm845-based
  platforms.

INTERCONNECT_QCOM_SM8150
  This is a driver for the Qualcomm Network-on-Chip on sm8150-based
  platforms.

INTERCONNECT_QCOM_SM8250
  This is a driver for the Qualcomm Network-on-Chip on sm8250-based
  platforms.

INTERCONNECT_QCOM_SMD_RPM
  No help

INTERCONNECT_SAMSUNG
  Interconnect drivers for Samsung SoCs.

INTERVAL_TREE
  Simple, embeddable, interval-tree. Can find the start of an
  overlapping range in log(n) time and then iterate over all
  overlapping nodes. The algorithm is implemented as an
  augmented rbtree.
  
  See:
  
        Documentation/core-api/rbtree.rst
  
  for more information.

INTERVAL_TREE_TEST
  A benchmark measuring the performance of the interval tree library

INV_ICM42600
  No help

INV_ICM42600_I2C
  This driver supports the InvenSense ICM-426xx motion tracking
  devices over I2C.
  
  This driver can be built as a module. The module will be called
  inv-icm42600-i2c.

INV_ICM42600_SPI
  This driver supports the InvenSense ICM-426xx motion tracking
  devices over SPI.
  
  This driver can be built as a module. The module will be called
  inv-icm42600-spi.

INV_MPU6050_I2C
  This driver supports the Invensense MPU6050/9150,
  MPU6500/6515/9250/9255, ICM20608/20609/20689, ICM20602/ICM20690 and
  IAM20680 motion tracking devices over I2C.
  This driver can be built as a module. The module will be called
  inv-mpu6050-i2c.

INV_MPU6050_IIO
  No help

INV_MPU6050_SPI
  This driver supports the Invensense MPU6000,
  MPU6500/6515/9250/9255, ICM20608/20609/20689, ICM20602/ICM20690 and
  IAM20680 motion tracking devices over SPI.
  This driver can be built as a module. The module will be called
  inv-mpu6050-spi.

IOASID
  No help

IOMMU_API
  No help

IOMMU_DEBUG
  Force the IOMMU to on even when you have less than 4GB of
  memory and add debugging code. On overflow always panic. And
  allow to enable IOMMU leak tracing. Can be disabled at boot
  time with iommu=noforce. This will also enable scatter gather
  list merging.  Currently not recommended for production
  code. When you use it make sure you have a big enough
  IOMMU/AGP aperture.  Most of the options enabled by this can
  be set more finegrained using the iommu= command line
  options. See Documentation/x86/x86_64/boot-options.rst for more
  details.

IOMMU_DEBUGFS
  Allows exposure of IOMMU device internals. This option enables
  the use of debugfs by IOMMU drivers as required. Devices can,
  at initialization time, cause the IOMMU code to create a top-level
  debug/iommu directory, and then populate a subdirectory with
  entries as required.

IOMMU_DEFAULT_PASSTHROUGH
  Enable passthrough by default, removing the need to pass in
  iommu.passthrough=on or iommu=pt through command line. If this
  is enabled, you can still disable with iommu.passthrough=off
  or iommu=nopt depending on the architecture.
  
  If unsure, say N here.

IOMMU_DMA
  No help

IOMMU_HELPER
  No help

IOMMU_IOVA
  No help

IOMMU_IO_PGTABLE
  No help

IOMMU_IO_PGTABLE_ARMV7S
  Enable support for the ARM Short-descriptor pagetable format.
  This supports 32-bit virtual and physical addresses mapped using
  2-level tables with 4KB pages/1MB sections, and contiguous entries
  for 64KB pages/16MB supersections if indicated by the IOMMU driver.

IOMMU_IO_PGTABLE_ARMV7S_SELFTEST
  Enable self-tests for ARMv7s page table allocator. This performs
  a series of page-table consistency checks during boot.
  
  If unsure, say N here.

IOMMU_IO_PGTABLE_LPAE
  Enable support for the ARM long descriptor pagetable format.
  This allocator supports 4K/2M/1G, 16K/32M and 64K/512M page
  sizes at both stage-1 and stage-2, as well as address spaces
  up to 48-bits in size.

IOMMU_IO_PGTABLE_LPAE_SELFTEST
  Enable self-tests for LPAE page table allocator. This performs
  a series of page-table consistency checks during boot.
  
  If unsure, say N here.

IOMMU_LEAK
  Add a simple leak tracer to the IOMMU code. This is useful when you
  are debugging a buggy device driver that leaks IOMMU mappings.

IOMMU_SUPPORT
  Say Y here if you want to compile device drivers for IO Memory
  Management Units into the kernel. These devices usually allow to
  remap DMA requests and/or remap interrupts from other devices on the
  system.

IOMMU_SVA_LIB
  No help

IONIC
  This enables the support for the Pensando family of Ethernet
  adapters.  More specific information on this driver can be
  found in
  <file:Documentation/networking/device_drivers/ethernet/pensando/ionic.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called ionic.

IOP_WATCHDOG
  Say Y here if to include support for the watchdog timer
  in the Intel IOP3XX & IOP13XX I/O Processors.  This driver can
  be built as a module by choosing M. The module will
  be called iop_wdt.
  
  Note: The IOP13XX watchdog does an Internal Bus Reset which will
  affect both cores and the peripherals of the IOP.  The ATU-X
  and/or ATUe configuration registers will remain intact, but if
  operating as an Root Complex and/or Central Resource, the PCI-X
  and/or PCIe busses will also be reset.  THIS IS A VERY BIG HAMMER.

IOSCHED_BFQ
  BFQ I/O scheduler for BLK-MQ. BFQ distributes the bandwidth of
  of the device among all processes according to their weights,
  regardless of the device parameters and with any workload. It
  also guarantees a low latency to interactive and soft
  real-time applications.  Details in
  Documentation/block/bfq-iosched.rst

IOSF_MBI
  This option enables sideband register access support for Intel SoC
  platforms. On these platforms the IOSF sideband is used in lieu of
  MSR's for some register accesses, mostly but not limited to thermal
  and power. Drivers may query the availability of this device to
  determine if they need the sideband in order to work on these
  platforms. The sideband is available on the following SoC products.
  This list is not meant to be exclusive.
   - BayTrail
   - Braswell
   - Quark
  
  You should say Y if you are running a kernel on one of these SoC's.

IOSF_MBI_DEBUG
  Select this option to expose the IOSF sideband access registers (MCR,
  MDR, MCRX) through debugfs to write and read register information from
  different units on the SoC. This is most useful for obtaining device
  state information for debug and analysis. As this is a general access
  mechanism, users of this option would have specific knowledge of the
  device they want to access.
  
  If you don't require the option or are in doubt, say N.

IO_DELAY_0X80
  This is the traditional Linux IO delay used for in/out_p.
  It is the most tested hence safest selection here.

IO_DELAY_0XED
  Use port 0xed as the IO delay. This frees up port 0x80 which is
  often used as a hardware-debug port.

IO_DELAY_NONE
  No port-IO delay. Will break on old boxes that require port-IO
  delay for certain operations. Should work on most new machines.

IO_DELAY_UDELAY
  Use udelay(2) as the IO delay method. This provides the delay
  while not having any side-effect on the IO port space.

IO_STRICT_DEVMEM
  If this option is disabled, you allow userspace (root) access to all
  io-memory regardless of whether a driver is actively using that
  range.  Accidental access to this is obviously disastrous, but
  specific access can be used by people debugging kernel drivers.
  
  If this option is switched on, the /dev/mem file only allows
  userspace access to *idle* io-memory ranges (see /proc/iomem) This
  may break traditional users of /dev/mem (dosemu, legacy X, etc...)
  if the driver using a given range cannot be disabled.
  
  If in doubt, say Y.

IO_URING
  This option enables support for the io_uring interface, enabling
  applications to submit and complete IO through submission and
  completion rings that are shared between the kernel and application.

IO_WQ
  No help

IP6_NF_FILTER
  Packet filtering defines a table `filter', which has a series of
  rules for simple packet filtering at local input, forwarding and
  local output.  See the man page for iptables(8).
  
  To compile it as a module, choose M here.  If unsure, say N.

IP6_NF_IPTABLES
  ip6tables is a general, extensible packet identification framework.
  Currently only the packet filtering and packet mangling subsystem
  for IPv6 use this, but connection tracking is going to follow.
  Say 'Y' or 'M' here if you want to use either of those.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP6_NF_MANGLE
  This option adds a `mangle' table to iptables: see the man page for
  iptables(8).  This table is used for various packet alterations
  which can effect how the packet is routed.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP6_NF_MATCH_AH
  This module allows one to match AH packets.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP6_NF_MATCH_EUI64
  This module performs checking on the IPv6 source address
  Compares the last 64 bits with the EUI64 (delivered
  from the MAC address) address
  
  To compile it as a module, choose M here.  If unsure, say N.

IP6_NF_MATCH_FRAG
  frag matching allows you to match packets based on the fragmentation
  header of the packet.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP6_NF_MATCH_HL
  This is a backwards-compat option for the user's convenience
  (e.g. when running oldconfig). It selects
  CONFIG_NETFILTER_XT_MATCH_HL.

IP6_NF_MATCH_IPV6HEADER
  This module allows one to match packets based upon
  the ipv6 extension headers.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP6_NF_MATCH_MH
  This module allows one to match MH packets.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP6_NF_MATCH_OPTS
  This allows one to match packets based on the hop-by-hop
  and destination options headers of a packet.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP6_NF_MATCH_RPFILTER
  This option allows you to match packets whose replies would
  go out via the interface the packet came in.
  
  To compile it as a module, choose M here.  If unsure, say N.
  The module will be called ip6t_rpfilter.

IP6_NF_MATCH_RT
  rt matching allows you to match packets based on the routing
  header of the packet.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP6_NF_MATCH_SRH
  srh matching allows you to match packets based on the segment
  routing header of the packet.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP6_NF_NAT
  This enables the `nat' table in ip6tables. This allows masquerading,
  port forwarding and other forms of full Network Address Port
  Translation.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP6_NF_RAW
  This option adds a `raw' table to ip6tables. This table is the very
  first in the netfilter framework and hooks in at the PREROUTING
  and OUTPUT chains.
  
  If you want to compile it as a module, say M here and read
  <file:Documentation/kbuild/modules.rst>.  If unsure, say `N'.

IP6_NF_SECURITY
  This option adds a `security' table to iptables, for use
  with Mandatory Access Control (MAC) policy.
  
  If unsure, say N.

IP6_NF_TARGET_HL
  This is a backwards-compatible option for the user's convenience
  (e.g. when running oldconfig). It selects
  CONFIG_NETFILTER_XT_TARGET_HL.

IP6_NF_TARGET_MASQUERADE
  This is a backwards-compat option for the user's convenience
  (e.g. when running oldconfig). It selects NETFILTER_XT_TARGET_MASQUERADE.

IP6_NF_TARGET_NPT
  This option adds the `SNPT' and `DNPT' target, which perform
  stateless IPv6-to-IPv6 Network Prefix Translation per RFC 6296.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP6_NF_TARGET_REJECT
  The REJECT target allows a filtering rule to specify that an ICMPv6
  error should be issued in response to an incoming packet, rather
  than silently being dropped.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP6_NF_TARGET_SYNPROXY
  The SYNPROXY target allows you to intercept TCP connections and
  establish them using syncookies before they are passed on to the
  server. This allows to avoid conntrack and server resource usage
  during SYN-flood attacks.
  
  To compile it as a module, choose M here. If unsure, say N.

IPACK_BUS
  This option provides support for the IndustryPack framework.  There
  are IndustryPack carrier boards, which interface another bus (such as
  PCI) to an IndustryPack bus, and IndustryPack modules, that are
  hosted on these buses.  While IndustryPack modules can provide a
  large variety of functionality, they are most often found in
  industrial control applications.
  
  Say N if unsure.

IPC_NS
  In this namespace tasks work with IPC ids which correspond to
  different IPC objects in different namespaces.

IPDDP
  This allows IP networking for users who only have AppleTalk
  networking available. This feature is experimental. With this
  driver, you can encapsulate IP inside AppleTalk (e.g. if your Linux
  box is stuck on an AppleTalk only network) or decapsulate (e.g. if
  you want your Linux box to act as an Internet gateway for a zoo of
  AppleTalk connected Macs). Please see the file
  <file:Documentation/networking/ipddp.rst> for more information.
  
  If you say Y here, the AppleTalk-IP support will be compiled into
  the kernel. In this case, you can either use encapsulation or
  decapsulation, but not both. With the following two questions, you
  decide which one you want.
  
  To compile the AppleTalk-IP support as a module, choose M here: the
  module will be called ipddp.
  In this case, you will be able to use both encapsulation and
  decapsulation simultaneously, by loading two copies of the module
  and specifying different values for the module option ipddp_mode.

IPDDP_ENCAP
  If you say Y here, the AppleTalk-IP code will be able to encapsulate
  IP packets inside AppleTalk frames; this is useful if your Linux box
  is stuck on an AppleTalk network (which hopefully contains a
  decapsulator somewhere). Please see
  <file:Documentation/networking/ipddp.rst> for more information.

IPMB_DEVICE_INTERFACE
  Provides a driver for a device (Satellite MC) to
  receive requests and send responses back to the BMC via
  the IPMB interface. This module requires I2C support.

IPMI_DEVICE_INTERFACE
  This provides an IOCTL interface to the IPMI message handler so
  userland processes may use IPMI.  It supports poll() and select().

IPMI_DMI_DECODE
  No help

IPMI_HANDLER
  This enables the central IPMI message handler, required for IPMI
  to work.
  
  IPMI is a standard for managing sensors (temperature,
  voltage, etc.) in a system.
  
  See <file:Documentation/driver-api/ipmi.rst> for more details on the driver.
  
  If unsure, say N.

IPMI_KCS_BMC
  No help

IPMI_PANIC_EVENT
  When a panic occurs, this will cause the IPMI message handler to,
  by default, generate an IPMI event describing the panic to each
  interface registered with the message handler.  This is always
  available, the module parameter for ipmi_msghandler named
  panic_op can be set to "event" to chose this value, this config
  simply causes the default value to be set to "event".

IPMI_PANIC_STRING
  When a panic occurs, this will cause the IPMI message handler to,
  by default, generate IPMI OEM type f0 events holding the IPMB
  address of the panic generator (byte 4 of the event), a sequence
  number for the string (byte 5 of the event) and part of the
  string (the rest of the event).  Bytes 1, 2, and 3 are the normal
  usage for an OEM event.  You can fetch these events and use the
  sequence numbers to piece the string together.  This config
  parameter sets the default value to generate these events,
  the module parameter for ipmi_msghandler named panic_op can
  be set to "string" to chose this value, this config simply
  causes the default value to be set to "string".

IPMI_PLAT_DATA
  No help

IPMI_POWERNV
  Provides a driver for OPAL firmware-based IPMI interfaces.

IPMI_POWEROFF
  This enables a function to power off the system with IPMI if
  the IPMI management controller is capable of this.

IPMI_SI
  Provides a driver for System Interfaces (KCS, SMIC, BT).
  Currently, only KCS and SMIC are supported.  If
  you are using IPMI, you should probably say "y" here.

IPMI_SSIF
  Provides a driver for a SMBus interface to a BMC, meaning that you
  have a driver that must be accessed over an I2C bus instead of a
  standard interface.  This module requires I2C support.

IPMI_WATCHDOG
  This enables the IPMI watchdog timer.

IPMMU_VMSA
  Support for the Renesas VMSA-compatible IPMMU found in the R-Mobile
  APE6, R-Car Gen{2,3} and RZ/G{1,2} SoCs.
  
  If unsure, say N.

IPQ_APSS_6018
  Support for APSS clock controller on IPQ platforms. The
  APSS clock controller manages the Mux and enable block that feeds the
  CPUs.
  Say Y if you want to support CPU frequency scaling on
  ipq based devices.

IPQ_APSS_PLL
  Support for APSS PLL on ipq devices. The APSS PLL is the main
  clock that feeds the CPUs on ipq based devices.
  Say Y if you want to support CPU frequency scaling on ipq based
  devices.

IPQ_GCC_4019
  Support for the global clock controller on ipq4019 devices.
  Say Y if you want to use peripheral devices such as UART, SPI,
  i2c, USB, SD/eMMC, etc.

IPQ_GCC_6018
  Support for global clock controller on ipq6018 devices.
  Say Y if you want to use peripheral devices such as UART, SPI,
  i2c, USB, SD/eMMC, etc. Select this for the root clock
  of ipq6018.

IPQ_GCC_806X
  Support for the global clock controller on ipq806x devices.
  Say Y if you want to use peripheral devices such as UART, SPI,
  i2c, USB, SD/eMMC, etc.

IPQ_GCC_8074
  Support for global clock controller on ipq8074 devices.
  Say Y if you want to use peripheral devices such as UART, SPI,
  i2c, USB, SD/eMMC, etc. Select this for the root clock
  of ipq8074.

IPQ_LCC_806X
  Support for the LPASS clock controller on ipq806x devices.
  Say Y if you want to use audio devices such as i2s, pcm,
  S/PDIF, etc.

IPV6
  Support for IP version 6 (IPv6).
  
  For general information about IPv6, see
  <https://en.wikipedia.org/wiki/IPv6>.
  For specific information about IPv6 under Linux, see
  Documentation/networking/ipv6.rst and read the HOWTO at
  <https://www.tldp.org/HOWTO/Linux+IPv6-HOWTO/>
  
  To compile this protocol support as a module, choose M here: the
  module will be called ipv6.

IPV6_FOU
  No help

IPV6_FOU_TUNNEL
  No help

IPV6_GRE
  Tunneling means encapsulating data of one protocol type within
  another protocol and sending it over a channel that understands the
  encapsulating protocol. This particular tunneling driver implements
  GRE (Generic Routing Encapsulation) and at this time allows
  encapsulating of IPv4 or IPv6 over existing IPv6 infrastructure.
  This driver is useful if the other endpoint is a Cisco router: Cisco
  likes GRE much better than the other Linux tunneling driver ("IP
  tunneling" above). In addition, GRE allows multicast redistribution
  through the tunnel.
  
  Saying M here will produce a module called ip6_gre. If unsure, say N.

IPV6_ILA
  Support for IPv6 Identifier Locator Addressing (ILA).
  
  ILA is a mechanism to do network virtualization without
  encapsulation. The basic concept of ILA is that we split an
  IPv6 address into a 64 bit locator and 64 bit identifier. The
  identifier is the identity of an entity in communication
  ("who") and the locator expresses the location of the
  entity ("where").
  
  ILA can be configured using the "encap ila" option with
  "ip -6 route" command. ILA is described in
  https://tools.ietf.org/html/draft-herbert-nvo3-ila-00.
  
  If unsure, say N.

IPV6_MIP6
  Support for IPv6 Mobility described in RFC 3775.
  
  If unsure, say N.

IPV6_MROUTE
  Support for IPv6 multicast forwarding.
  If unsure, say N.

IPV6_MROUTE_MULTIPLE_TABLES
  Normally, a multicast router runs a userspace daemon and decides
  what to do with a multicast packet based on the source and
  destination addresses. If you say Y here, the multicast router
  will also be able to take interfaces and packet marks into
  account and run multiple instances of userspace daemons
  simultaneously, each one handling a single table.
  
  If unsure, say N.

IPV6_MULTIPLE_TABLES
  Support multiple routing tables.

IPV6_NDISC_NODETYPE
  No help

IPV6_OPTIMISTIC_DAD
  Support for optimistic Duplicate Address Detection. It allows for
  autoconfigured addresses to be used more quickly.
  
  If unsure, say N.

IPV6_PIMSM_V2
  Support for IPv6 PIM multicast routing protocol PIM-SMv2.
  If unsure, say N.

IPV6_ROUTER_PREF
  Router Preference is an optional extension to the Router
  Advertisement message which improves the ability of hosts
  to pick an appropriate router, especially when the hosts
  are placed in a multi-homed network.
  
  If unsure, say N.

IPV6_ROUTE_INFO
  Support of Route Information.
  
  If unsure, say N.

IPV6_RPL_LWTUNNEL
  Support for RFC6554 RPL Source Routing Header using the lightweight
  tunnels mechanism.
  
  If unsure, say N.

IPV6_SEG6_BPF
  No help

IPV6_SEG6_HMAC
  Support for HMAC signature generation and verification
  of SR-enabled packets.
  
  If unsure, say N.

IPV6_SEG6_LWTUNNEL
  Support for encapsulation of packets within an outer IPv6
  header and a Segment Routing Header using the lightweight
  tunnels mechanism. Also enable support for advanced local
  processing of SRv6 packets based on their active segment.
  
  If unsure, say N.

IPV6_SIT
  Tunneling means encapsulating data of one protocol type within
  another protocol and sending it over a channel that understands the
  encapsulating protocol. This driver implements encapsulation of IPv6
  into IPv4 packets. This is useful if you want to connect two IPv6
  networks over an IPv4-only path.
  
  Saying M here will produce a module called sit. If unsure, say Y.

IPV6_SIT_6RD
  IPv6 Rapid Deployment (6rd; draft-ietf-softwire-ipv6-6rd) builds upon
  mechanisms of 6to4 (RFC3056) to enable a service provider to rapidly
  deploy IPv6 unicast service to IPv4 sites to which it provides
  customer premise equipment.  Like 6to4, it utilizes stateless IPv6 in
  IPv4 encapsulation in order to transit IPv4-only network
  infrastructure.  Unlike 6to4, a 6rd service provider uses an IPv6
  prefix of its own in place of the fixed 6to4 prefix.
  
  With this option enabled, the SIT driver offers 6rd functionality by
  providing additional ioctl API to configure the IPv6 Prefix for in
  stead of static 2002::/16 for 6to4.
  
  If unsure, say N.

IPV6_SUBTREES
  Enable routing by source address or prefix.
  
  The destination address is still the primary routing key, so mixing
  normal and source prefix specific routes in the same routing table
  may sometimes lead to unintended routing behavior.  This can be
  avoided by defining different routing tables for the normal and
  source prefix specific routes.
  
  If unsure, say N.

IPV6_TUNNEL
  Support for IPv6-in-IPv6 and IPv4-in-IPv6 tunnels described in
  RFC 2473.
  
  If unsure, say N.

IPV6_VTI
  Tunneling means encapsulating data of one protocol type within
  another protocol and sending it over a channel that understands the
  encapsulating protocol. This can be used with xfrm mode tunnel to give
  the notion of a secure tunnel for IPSEC and then use routing protocol
  on top.

IPVLAN
  This allows one to create virtual devices off of a main interface
  and packets will be delivered based on the dest L3 (IPv6/IPv4 addr)
  on packets. All interfaces (including the main interface) share L2
  making it transparent to the connected L2 switch.
  
  Ipvlan devices can be added using the "ip" command from the
  iproute2 package starting with the iproute2-3.19 release:
  
  "ip link add link <main-dev> [ NAME ] type ipvlan"
  
  To compile this driver as a module, choose M here: the module
  will be called ipvlan.

IPVLAN_L3S
  No help

IPVTAP
  This adds a specialized tap character device driver that is based
  on the IP-VLAN network interface, called ipvtap. An ipvtap device
  can be added in the same way as a ipvlan device, using 'type
  ipvtap', and then be accessed through the tap user space interface.
  
  To compile this driver as a module, choose M here: the module
  will be called ipvtap.

IPW2100
  A driver for the Intel PRO/Wireless 2100 Network
  Connection 802.11b wireless network adapter.
  
  See <file:Documentation/networking/device_drivers/wifi/intel/ipw2100.rst>
  for information on the capabilities currently enabled in this driver
  and for tips for debugging issues and problems.
  
  In order to use this driver, you will need a firmware image for it.
  You can obtain the firmware from
  <http://ipw2100.sf.net/>.  Once you have the firmware image, you
  will need to place it in /lib/firmware.
  
  You will also very likely need the Wireless Tools in order to
  configure your card:
  
  <https://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/Tools.html>.
  
  It is recommended that you compile this driver as a module (M)
  rather than built-in (Y). This driver requires firmware at device
  initialization time, and when built-in this typically happens
  before the filesystem is accessible (hence firmware will be
  unavailable and initialization will fail). If you do choose to build
  this driver into your kernel image, you can avoid this problem by
  including the firmware and a firmware loader in an initramfs.

IPW2100_DEBUG
  This option will enable debug tracing output for the IPW2100.
  
  This will result in the kernel module being ~60k larger.  You can
  control which debug output is sent to the kernel log by setting the
  value in
  
  /sys/bus/pci/drivers/ipw2100/debug_level
  
  This entry will only exist if this option is enabled.
  
  If you are not trying to debug or develop the IPW2100 driver, you
  most likely want to say N here.

IPW2100_MONITOR
  Enables promiscuous/monitor mode support for the ipw2100 driver.
  With this feature compiled into the driver, you can switch to
  promiscuous mode via the Wireless Tool's Monitor mode.  While in this
  mode, no packets can be sent.

IPW2200
  A driver for the Intel PRO/Wireless 2200BG and 2915ABG Network
  Connection adapters.
  
  See <file:Documentation/networking/device_drivers/wifi/intel/ipw2200.rst>
  for information on the capabilities currently enabled in this
  driver and for tips for debugging issues and problems.
  
  In order to use this driver, you will need a firmware image for it.
  You can obtain the firmware from
  <http://ipw2200.sf.net/>.  See the above referenced README.ipw2200
  for information on where to install the firmware images.
  
  You will also very likely need the Wireless Tools in order to
  configure your card:
  
  <https://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/Tools.html>.
  
  It is recommended that you compile this driver as a module (M)
  rather than built-in (Y). This driver requires firmware at device
  initialization time, and when built-in this typically happens
  before the filesystem is accessible (hence firmware will be
  unavailable and initialization will fail). If you do choose to build
  this driver into your kernel image, you can avoid this problem by
  including the firmware and a firmware loader in an initramfs.

IPW2200_DEBUG
  This option will enable low level debug tracing output for IPW2200.
  
  Note, normal debug code is already compiled in. This low level
  debug option enables debug on hot paths (e.g Tx, Rx, ISR) and
  will result in the kernel module being ~70 larger.  Most users
  will typically not need this high verbosity debug information.
  
  If you are not sure, say N here.

IPW2200_MONITOR
  Enables promiscuous/monitor mode support for the ipw2200 driver.
  With this feature compiled into the driver, you can switch to
  promiscuous mode via the Wireless Tool's Monitor mode.  While in this
  mode, no packets can be sent.

IPW2200_PROMISCUOUS
  Enables the creation of a second interface prefixed 'rtap'.
  This second interface will provide every received in radiotap
  format.
  
  This is useful for performing wireless network analysis while
  maintaining an active association.
  
  Example usage:
  
    % modprobe ipw2200 rtap_iface=1
    % ifconfig rtap0 up
    % tethereal -i rtap0
  
  If you do not specify 'rtap_iface=1' as a module parameter then
  the rtap interface will not be created and you will need to turn
  it on via sysfs:
  
    % echo 1 > /sys/bus/pci/drivers/ipw2200/*/rtap_iface

IPW2200_QOS
  No help

IPW2200_RADIOTAP
  No help

IPWIRELESS
  This is a driver for 3G UMTS PCMCIA card from IPWireless company. In
  some countries (for example Czech Republic, T-Mobile ISP) this card
  is shipped for service called UMTS 4G.

IP_ADVANCED_ROUTER
  If you intend to run your Linux box mostly as a router, i.e. as a
  computer that forwards and redistributes network packets, say Y; you
  will then be presented with several options that allow more precise
  control about the routing process.
  
  The answer to this question won't directly affect the kernel:
  answering N will just cause the configurator to skip all the
  questions about advanced routing.
  
  Note that your box can only act as a router if you enable IP
  forwarding in your kernel; you can do that by saying Y to "/proc
  file system support" and "Sysctl support" below and executing the
  line
  
  echo "1" > /proc/sys/net/ipv4/ip_forward
  
  at boot time after the /proc file system has been mounted.
  
  If you turn on IP forwarding, you should consider the rp_filter, which
  automatically rejects incoming packets if the routing table entry
  for their source address doesn't match the network interface they're
  arriving on. This has security advantages because it prevents the
  so-called IP spoofing, however it can pose problems if you use
  asymmetric routing (packets from you to a host take a different path
  than packets from that host to you) or if you operate a non-routing
  host which has several IP addresses on different interfaces. To turn
  rp_filter on use:
  
  echo 1 > /proc/sys/net/ipv4/conf/<device>/rp_filter
   or
  echo 1 > /proc/sys/net/ipv4/conf/all/rp_filter
  
  Note that some distributions enable it in startup scripts.
  For details about rp_filter strict and loose mode read
  <file:Documentation/networking/ip-sysctl.rst>.
  
  If unsure, say N here.

IP_DCCP
  Datagram Congestion Control Protocol (RFC 4340)
  
  From https://www.ietf.org/rfc/rfc4340.txt:
  
  The Datagram Congestion Control Protocol (DCCP) is a transport
  protocol that implements bidirectional, unicast connections of
  congestion-controlled, unreliable datagrams. It should be suitable
  for use by applications such as streaming media, Internet telephony,
  and on-line games.
  
  To compile this protocol support as a module, choose M here: the
  module will be called dccp.
  
  If in doubt, say N.

IP_DCCP_CCID2_DEBUG
  Enable CCID-2 specific debugging messages.
  
  The debugging output can additionally be toggled by setting the
  ccid2_debug parameter to 0 or 1.
  
  If in doubt, say N.

IP_DCCP_CCID3
  CCID-3 denotes TCP-Friendly Rate Control (TFRC), an equation-based
  rate-controlled congestion control mechanism.  TFRC is designed to
  be reasonably fair when competing for bandwidth with TCP-like flows,
  where a flow is "reasonably fair" if its sending rate is generally
  within a factor of two of the sending rate of a TCP flow under the
  same conditions.  However, TFRC has a much lower variation of
  throughput over time compared with TCP, which makes CCID-3 more
  suitable than CCID-2 for applications such streaming media where a
  relatively smooth sending rate is of importance.
  
  CCID-3 is further described in RFC 4342,
  https://www.ietf.org/rfc/rfc4342.txt
  
  The TFRC congestion control algorithms were initially described in
  RFC 5348.
  
  This text was extracted from RFC 4340 (sec. 10.2),
  https://www.ietf.org/rfc/rfc4340.txt
  
  If in doubt, say N.

IP_DCCP_CCID3_DEBUG
  Enable CCID-3 specific debugging messages.
  
  The debugging output can additionally be toggled by setting the
  ccid3_debug parameter to 0 or 1.
  
  If in doubt, say N.

IP_DCCP_DEBUG
  Only use this if you're hacking DCCP.
  
  When compiling DCCP as a module, this debugging output can be toggled
  by setting the parameter dccp_debug of the `dccp' module to 0 or 1.
  
  Just say N.

IP_DCCP_TFRC_DEBUG
  No help

IP_DCCP_TFRC_LIB
  No help

IP_FIB_TRIE_STATS
  Keep track of statistics on structure of FIB TRIE table.
  Useful for testing and measuring TRIE performance.

IP_MROUTE
  This is used if you want your machine to act as a router for IP
  packets that have several destination addresses. It is needed on the
  MBONE, a high bandwidth network on top of the Internet which carries
  audio and video broadcasts. In order to do that, you would most
  likely run the program mrouted. If you haven't heard about it, you
  don't need it.

IP_MROUTE_COMMON
  No help

IP_MROUTE_MULTIPLE_TABLES
  Normally, a multicast router runs a userspace daemon and decides
  what to do with a multicast packet based on the source and
  destination addresses. If you say Y here, the multicast router
  will also be able to take interfaces and packet marks into
  account and run multiple instances of userspace daemons
  simultaneously, each one handling a single table.
  
  If unsure, say N.

IP_MULTICAST
  This is code for addressing several networked computers at once,
  enlarging your kernel by about 2 KB. You need multicasting if you
  intend to participate in the MBONE, a high bandwidth network on top
  of the Internet which carries audio and video broadcasts. More
  information about the MBONE is on the WWW at
  <https://www.savetz.com/mbone/>. For most people, it's safe to say N.

IP_MULTIPLE_TABLES
  Normally, a router decides what to do with a received packet based
  solely on the packet's final destination address. If you say Y here,
  the Linux router will also be able to take the packet's source
  address into account. Furthermore, the TOS (Type-Of-Service) field
  of the packet can be used for routing decisions as well.
  
  If you need more information, see the Linux Advanced
  Routing and Traffic Control documentation at
  <https://lartc.org/howto/lartc.rpdb.html>
  
  If unsure, say N.

IP_NF_ARPFILTER
  ARP packet filtering defines a table `filter', which has a series of
  rules for simple ARP packet filtering at local input and
  local output.  On a bridge, you can also specify filtering rules
  for forwarded ARP packets. See the man page for arptables(8).
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_NF_ARPTABLES
  arptables is a general, extensible packet identification framework.
  The ARP packet filtering and mangling (manipulation)subsystems
  use this: say Y or M here if you want to use either of those.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_NF_ARP_MANGLE
  Allows altering the ARP packet payload: source and destination
  hardware and network addresses.

IP_NF_FILTER
  Packet filtering defines a table `filter', which has a series of
  rules for simple packet filtering at local input, forwarding and
  local output.  See the man page for iptables(8).
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_NF_IPTABLES
  iptables is a general, extensible packet identification framework.
  The packet filtering and full NAT (masquerading, port forwarding,
  etc) subsystems now use this: say `Y' or `M' here if you want to use
  either of those.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_NF_MANGLE
  This option adds a `mangle' table to iptables: see the man page for
  iptables(8).  This table is used for various packet alterations
  which can effect how the packet is routed.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_NF_MATCH_AH
  This match extension allows you to match a range of SPIs
  inside AH header of IPSec packets.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_NF_MATCH_ECN
  This is a backwards-compat option for the user's convenience
  (e.g. when running oldconfig). It selects
  CONFIG_NETFILTER_XT_MATCH_ECN.

IP_NF_MATCH_RPFILTER
  This option allows you to match packets whose replies would
  go out via the interface the packet came in.
  
  To compile it as a module, choose M here.  If unsure, say N.
  The module will be called ipt_rpfilter.

IP_NF_MATCH_TTL
  This is a backwards-compat option for the user's convenience
  (e.g. when running oldconfig). It selects
  CONFIG_NETFILTER_XT_MATCH_HL.

IP_NF_NAT
  This enables the `nat' table in iptables. This allows masquerading,
  port forwarding and other forms of full Network Address Port
  Translation.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_NF_RAW
  This option adds a `raw' table to iptables. This table is the very
  first in the netfilter framework and hooks in at the PREROUTING
  and OUTPUT chains.
  
  If you want to compile it as a module, say M here and read
  <file:Documentation/kbuild/modules.rst>.  If unsure, say `N'.

IP_NF_SECURITY
  This option adds a `security' table to iptables, for use
  with Mandatory Access Control (MAC) policy.
  
  If unsure, say N.

IP_NF_TARGET_CLUSTERIP
  The CLUSTERIP target allows you to build load-balancing clusters of
  network servers without having a dedicated load-balancing
  router/server/switch.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_NF_TARGET_ECN
  This option adds a `ECN' target, which can be used in the iptables mangle
  table.
  
  You can use this target to remove the ECN bits from the IPv4 header of
  an IP packet.  This is particularly useful, if you need to work around
  existing ECN blackholes on the internet, but don't want to disable
  ECN support in general.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_NF_TARGET_MASQUERADE
  This is a backwards-compat option for the user's convenience
  (e.g. when running oldconfig). It selects NETFILTER_XT_TARGET_MASQUERADE.

IP_NF_TARGET_NETMAP
  This is a backwards-compat option for the user's convenience
  (e.g. when running oldconfig). It selects
  CONFIG_NETFILTER_XT_TARGET_NETMAP.

IP_NF_TARGET_REDIRECT
  This is a backwards-compat option for the user's convenience
  (e.g. when running oldconfig). It selects
  CONFIG_NETFILTER_XT_TARGET_REDIRECT.

IP_NF_TARGET_REJECT
  The REJECT target allows a filtering rule to specify that an ICMP
  error should be issued in response to an incoming packet, rather
  than silently being dropped.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_NF_TARGET_SYNPROXY
  The SYNPROXY target allows you to intercept TCP connections and
  establish them using syncookies before they are passed on to the
  server. This allows to avoid conntrack and server resource usage
  during SYN-flood attacks.
  
  To compile it as a module, choose M here. If unsure, say N.

IP_NF_TARGET_TTL
  This is a backwards-compatible option for the user's convenience
  (e.g. when running oldconfig). It selects
  CONFIG_NETFILTER_XT_TARGET_HL.

IP_PIMSM_V1
  Kernel side support for Sparse Mode PIM (Protocol Independent
  Multicast) version 1. This multicast routing protocol is used widely
  because Cisco supports it. You need special software to use it
  (pimd-v1). Please see <http://netweb.usc.edu/pim/> for more
  information about PIM.
  
  Say Y if you want to use PIM-SM v1. Note that you can say N here if
  you just want to use Dense Mode PIM.

IP_PIMSM_V2
  Kernel side support for Sparse Mode PIM version 2. In order to use
  this, you need an experimental routing daemon supporting it (pimd or
  gated-5). This routing protocol is not used widely, so say N unless
  you want to play with it.

IP_PNP
  This enables automatic configuration of IP addresses of devices and
  of the routing table during kernel boot, based on either information
  supplied on the kernel command line or by BOOTP or RARP protocols.
  You need to say Y only for diskless machines requiring network
  access to boot (in which case you want to say Y to "Root file system
  on NFS" as well), because all other machines configure the network
  in their startup scripts.

IP_PNP_BOOTP
  If you want your Linux box to mount its whole root file system (the
  one containing the directory /) from some other computer over the
  net via NFS and you want the IP address of your computer to be
  discovered automatically at boot time using the BOOTP protocol (a
  special protocol designed for doing this job), say Y here. In case
  the boot ROM of your network card was designed for booting Linux and
  does BOOTP itself, providing all necessary information on the kernel
  command line, you can say N here. If unsure, say Y. Note that if you
  want to use BOOTP, a BOOTP server must be operating on your network.
  Read <file:Documentation/admin-guide/nfs/nfsroot.rst> for details.

IP_PNP_DHCP
  If you want your Linux box to mount its whole root file system (the
  one containing the directory /) from some other computer over the
  net via NFS and you want the IP address of your computer to be
  discovered automatically at boot time using the DHCP protocol (a
  special protocol designed for doing this job), say Y here. In case
  the boot ROM of your network card was designed for booting Linux and
  does DHCP itself, providing all necessary information on the kernel
  command line, you can say N here.
  
  If unsure, say Y. Note that if you want to use DHCP, a DHCP server
  must be operating on your network.  Read
  <file:Documentation/admin-guide/nfs/nfsroot.rst> for details.

IP_PNP_RARP
  If you want your Linux box to mount its whole root file system (the
  one containing the directory /) from some other computer over the
  net via NFS and you want the IP address of your computer to be
  discovered automatically at boot time using the RARP protocol (an
  older protocol which is being obsoleted by BOOTP and DHCP), say Y
  here. Note that if you want to use RARP, a RARP server must be
  operating on your network. Read
  <file:Documentation/admin-guide/nfs/nfsroot.rst> for details.

IP_ROUTE_CLASSID
  No help

IP_ROUTE_MULTIPATH
  Normally, the routing tables specify a single action to be taken in
  a deterministic manner for a given packet. If you say Y here
  however, it becomes possible to attach several actions to a packet
  pattern, in effect specifying several alternative paths to travel
  for those packets. The router considers all these paths to be of
  equal "cost" and chooses one of them in a non-deterministic fashion
  if a matching packet arrives.

IP_ROUTE_VERBOSE
  If you say Y here, which is recommended, then the kernel will print
  verbose messages regarding the routing, for example warnings about
  received packets which look strange and could be evidence of an
  attack or a misconfigured system somewhere. The information is
  handled by the klogd daemon which is responsible for kernel messages
  ("man klogd").

IP_SCTP
  Stream Control Transmission Protocol
  
  From RFC 2960 <http://www.ietf.org/rfc/rfc2960.txt>.
  
  "SCTP is a reliable transport protocol operating on top of a
  connectionless packet network such as IP.  It offers the following
  services to its users:
  
  -- acknowledged error-free non-duplicated transfer of user data,
  -- data fragmentation to conform to discovered path MTU size,
  -- sequenced delivery of user messages within multiple streams,
  with an option for order-of-arrival delivery of individual user
  messages,
  -- optional bundling of multiple user messages into a single SCTP
  packet, and
  -- network-level fault tolerance through supporting of multi-
  homing at either or both ends of an association."
  
  To compile this protocol support as a module, choose M here: the
  module will be called sctp. Debug messages are handled by the
  kernel's dynamic debugging framework.
  
  If in doubt, say N.

IP_SET
  This option adds IP set support to the kernel.
  In order to define and use the sets, you need the userspace utility
  ipset(8). You can use the sets in netfilter via the "set" match
  and "SET" target.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_BITMAP_IP
  This option adds the bitmap:ip set type support, by which one
  can store IPv4 addresses (or network addresse) from a range.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_BITMAP_IPMAC
  This option adds the bitmap:ip,mac set type support, by which one
  can store IPv4 address and (source) MAC address pairs from a range.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_BITMAP_PORT
  This option adds the bitmap:port set type support, by which one
  can store TCP/UDP port numbers from a range.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_HASH_IP
  This option adds the hash:ip set type support, by which one
  can store arbitrary IPv4 or IPv6 addresses (or network addresses)
  in a set.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_HASH_IPMAC
  This option adds the hash:ip,mac set type support, by which
  one can store IPv4/IPv6 address and MAC (ethernet address) pairs in a set.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_HASH_IPMARK
  This option adds the hash:ip,mark set type support, by which one
  can store IPv4/IPv6 address and mark pairs.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_HASH_IPPORT
  This option adds the hash:ip,port set type support, by which one
  can store IPv4/IPv6 address and protocol/port pairs.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_HASH_IPPORTIP
  This option adds the hash:ip,port,ip set type support, by which
  one can store IPv4/IPv6 address, protocol/port, and IPv4/IPv6
  address triples in a set.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_HASH_IPPORTNET
  This option adds the hash:ip,port,net set type support, by which
  one can store IPv4/IPv6 address, protocol/port, and IPv4/IPv6
  network address/prefix triples in a set.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_HASH_MAC
  This option adds the hash:mac set type support, by which
  one can store MAC (ethernet address) elements in a set.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_HASH_NET
  This option adds the hash:net set type support, by which
  one can store IPv4/IPv6 network address/prefix elements in a set.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_HASH_NETIFACE
  This option adds the hash:net,iface set type support, by which
  one can store IPv4/IPv6 network address/prefix and
  interface name pairs as elements in a set.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_HASH_NETNET
  This option adds the hash:net,net  set type support, by which
  one can store IPv4/IPv6 network address/prefix pairs in a set.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_HASH_NETPORT
  This option adds the hash:net,port set type support, by which
  one can store IPv4/IPv6 network address/prefix and
  protocol/port pairs as elements in a set.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_HASH_NETPORTNET
  This option adds the hash:net,port,net set type support, by which
  one can store two IPv4/IPv6 subnets, and a protocol/port in a set.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_LIST_SET
  This option adds the list:set set type support. In this
  kind of set one can store the name of other sets and it forms
  an ordered union of the member sets.
  
  To compile it as a module, choose M here.  If unsure, say N.

IP_SET_MAX
  You can define here default value of the maximum number
  of IP sets for the kernel.
  
  The value can be overridden by the 'max_sets' module
  parameter of the 'ip_set' module.

IP_VS
  IP Virtual Server support will let you build a high-performance
  virtual server based on cluster of two or more real servers. This
  option must be enabled for at least one of the clustered computers
  that will take care of intercepting incoming connections to a
  single IP address and scheduling them to real servers.
  
  Three request dispatching techniques are implemented, they are
  virtual server via NAT, virtual server via tunneling and virtual
  server via direct routing. The several scheduling algorithms can
  be used to choose which server the connection is directed to,
  thus load balancing can be achieved among the servers.  For more
  information and its administration program, please visit the
  following URL: <http://www.linuxvirtualserver.org/>.
  
  If you want to compile it in kernel, say Y. To compile it as a
  module, choose M here. If unsure, say N.

IP_VS_DEBUG
  Say Y here if you want to get additional messages useful in
  debugging the IP virtual server code. You can change the debug
  level in /proc/sys/net/ipv4/vs/debug_level

IP_VS_DH
  The destination hashing scheduling algorithm assigns network
  connections to the servers through looking up a statically assigned
  hash table by their destination IP addresses.
  
  If you want to compile it in kernel, say Y. To compile it as a
  module, choose M here. If unsure, say N.

IP_VS_FO
  The weighted failover scheduling algorithm directs network
  connections to the server with the highest weight that is
  currently available.
  
  If you want to compile it in kernel, say Y. To compile it as a
  module, choose M here. If unsure, say N.

IP_VS_FTP
  FTP is a protocol that transfers IP address and/or port number in
  the payload. In the virtual server via Network Address Translation,
  the IP address and port number of real servers cannot be sent to
  clients in ftp connections directly, so FTP protocol helper is
  required for tracking the connection and mangling it back to that of
  virtual service.
  
  If you want to compile it in kernel, say Y. To compile it as a
  module, choose M here. If unsure, say N.

IP_VS_IPV6
  Add IPv6 support to IPVS.
  
  Say Y if unsure.

IP_VS_LBLC
  The locality-based least-connection scheduling algorithm is for
  destination IP load balancing. It is usually used in cache cluster.
  This algorithm usually directs packet destined for an IP address to
  its server if the server is alive and under load. If the server is
  overloaded (its active connection numbers is larger than its weight)
  and there is a server in its half load, then allocate the weighted
  least-connection server to this IP address.
  
  If you want to compile it in kernel, say Y. To compile it as a
  module, choose M here. If unsure, say N.

IP_VS_LBLCR
  The locality-based least-connection with replication scheduling
  algorithm is also for destination IP load balancing. It is
  usually used in cache cluster. It differs from the LBLC scheduling
  as follows: the load balancer maintains mappings from a target
  to a set of server nodes that can serve the target. Requests for
  a target are assigned to the least-connection node in the target's
  server set. If all the node in the server set are over loaded,
  it picks up a least-connection node in the cluster and adds it
  in the sever set for the target. If the server set has not been
  modified for the specified time, the most loaded node is removed
  from the server set, in order to avoid high degree of replication.
  
  If you want to compile it in kernel, say Y. To compile it as a
  module, choose M here. If unsure, say N.

IP_VS_LC
  The least-connection scheduling algorithm directs network
  connections to the server with the least number of active
  connections.
  
  If you want to compile it in kernel, say Y. To compile it as a
  module, choose M here. If unsure, say N.

IP_VS_MH
  The maglev consistent hashing scheduling algorithm provides the
  Google's Maglev hashing algorithm as a IPVS scheduler. It assigns
  network connections to the servers through looking up a statically
  assigned special hash table called the lookup table. Maglev hashing
  is to assign a preference list of all the lookup table positions
  to each destination.
  
  Through this operation, The maglev hashing gives an almost equal
  share of the lookup table to each of the destinations and provides
  minimal disruption by using the lookup table. When the set of
  destinations changes, a connection will likely be sent to the same
  destination as it was before.
  
  If you want to compile it in kernel, say Y. To compile it as a
  module, choose M here. If unsure, say N.

IP_VS_MH_TAB_INDEX
  The maglev hashing scheduler maps source IPs to destinations
  stored in a hash table. This table is assigned by a preference
  list of the positions to each destination until all slots in
  the table are filled. The index determines the prime for size of
  the table as 251, 509, 1021, 2039, 4093, 8191, 16381, 32749,
  65521 or 131071. When using weights to allow destinations to
  receive more connections, the table is assigned an amount
  proportional to the weights specified. The table needs to be large
  enough to effectively fit all the destinations multiplied by their
  respective weights.

IP_VS_NFCT
  The Netfilter connection tracking support allows the IPVS
  connection state to be exported to the Netfilter framework
  for filtering purposes.

IP_VS_NQ
  The never queue scheduling algorithm adopts a two-speed model.
  When there is an idle server available, the job will be sent to
  the idle server, instead of waiting for a fast one. When there
  is no idle server available, the job will be sent to the server
  that minimize its expected delay (The Shortest Expected Delay
  scheduling algorithm).
  
  If you want to compile it in kernel, say Y. To compile it as a
  module, choose M here. If unsure, say N.

IP_VS_OVF
  The weighted overflow scheduling algorithm directs network
  connections to the server with the highest weight that is
  currently available and overflows to the next when active
  connections exceed the node's weight.
  
  If you want to compile it in kernel, say Y. To compile it as a
  module, choose M here. If unsure, say N.

IP_VS_PE_SIP
  Allow persistence based on the SIP Call-ID

IP_VS_PROTO_AH
  This option enables support for load balancing AH (Authentication
  Header) transport protocol. Say Y if unsure.

IP_VS_PROTO_AH_ESP
  No help

IP_VS_PROTO_ESP
  This option enables support for load balancing ESP (Encapsulation
  Security Payload) transport protocol. Say Y if unsure.

IP_VS_PROTO_SCTP
  This option enables support for load balancing SCTP transport
  protocol. Say Y if unsure.

IP_VS_PROTO_TCP
  This option enables support for load balancing TCP transport
  protocol. Say Y if unsure.

IP_VS_PROTO_UDP
  This option enables support for load balancing UDP transport
  protocol. Say Y if unsure.

IP_VS_RR
  The robin-robin scheduling algorithm simply directs network
  connections to different real servers in a round-robin manner.
  
  If you want to compile it in kernel, say Y. To compile it as a
  module, choose M here. If unsure, say N.

IP_VS_SED
  The shortest expected delay scheduling algorithm assigns network
  connections to the server with the shortest expected delay. The
  expected delay that the job will experience is (Ci + 1) / Ui if
  sent to the ith server, in which Ci is the number of connections
  on the ith server and Ui is the fixed service rate (weight)
  of the ith server.
  
  If you want to compile it in kernel, say Y. To compile it as a
  module, choose M here. If unsure, say N.

IP_VS_SH
  The source hashing scheduling algorithm assigns network
  connections to the servers through looking up a statically assigned
  hash table by their source IP addresses.
  
  If you want to compile it in kernel, say Y. To compile it as a
  module, choose M here. If unsure, say N.

IP_VS_SH_TAB_BITS
  The source hashing scheduler maps source IPs to destinations
  stored in a hash table. This table is tiled by each destination
  until all slots in the table are filled. When using weights to
  allow destinations to receive more connections, the table is
  tiled an amount proportional to the weights specified. The table
  needs to be large enough to effectively fit all the destinations
  multiplied by their respective weights.

IP_VS_TAB_BITS
  The IPVS connection hash table uses the chaining scheme to handle
  hash collisions. Using a big IPVS connection hash table will greatly
  reduce conflicts when there are hundreds of thousands of connections
  in the hash table.
  
  Note the table size must be power of 2. The table size will be the
  value of 2 to the your input number power. The number to choose is
  from 8 to 20, the default number is 12, which means the table size
  is 4096. Don't input the number too small, otherwise you will lose
  performance on it. You can adapt the table size yourself, according
  to your virtual server application. It is good to set the table size
  not far less than the number of connections per second multiplying
  average lasting time of connection in the table.  For example, your
  virtual server gets 200 connections per second, the connection lasts
  for 200 seconds in average in the connection table, the table size
  should be not far less than 200x200, it is good to set the table
  size 32768 (2**15).
  
  Another note that each connection occupies 128 bytes effectively and
  each hash entry uses 8 bytes, so you can estimate how much memory is
  needed for your box.
  
  You can overwrite this number setting conn_tab_bits module parameter
  or by appending ip_vs.conn_tab_bits=? to the kernel command line
  if IP VS was compiled built-in.

IP_VS_WLC
  The weighted least-connection scheduling algorithm directs network
  connections to the server with the least active connections
  normalized by the server weight.
  
  If you want to compile it in kernel, say Y. To compile it as a
  module, choose M here. If unsure, say N.

IP_VS_WRR
  The weighted robin-robin scheduling algorithm directs network
  connections to different real servers based on server weights
  in a round-robin manner. Servers with higher weights receive
  new connections first than those with less weights, and servers
  with higher weights get more connections than those with less
  weights and servers with equal weights get equal connections.
  
  If you want to compile it in kernel, say Y. To compile it as a
  module, choose M here. If unsure, say N.

IQS620AT_TEMP
  Say Y here if you want to build support for the Azoteq IQS620AT
  temperature sensor.
  
  To compile this driver as a module, choose M here: the module
  will be called iqs620at-temp.

IQS621_ALS
  Say Y here if you want to build support for the Azoteq IQS621
  and IQS622 ambient light sensors.
  
  To compile this driver as a module, choose M here: the module
  will be called iqs621-als.

IQS624_POS
  Say Y here if you want to build support for the Azoteq IQS624
  and IQS625 angular position sensors.
  
  To compile this driver as a module, choose M here: the module
  will be called iqs624-pos.

IRQCHIP
  No help

IRQSOFF_TRACER
  This option measures the time spent in irqs-off critical
  sections, with microsecond accuracy.
  
  The default measurement method is a maximum search, which is
  disabled by default and can be runtime (re-)started
  via:
  
      echo 0 > /sys/kernel/debug/tracing/tracing_max_latency
  
  (Note that kernel size and overhead increase with this option
  enabled. This option and the preempt-off timing option can be
  used together or separately.)

IRQ_BYPASS_MANAGER
  No help

IRQ_CROSSBAR
  Support for a CROSSBAR ip that precedes the main interrupt controller.
  The primary irqchip invokes the crossbar's callback which inturn allocates
  a free irq and configures the IP. Thus the peripheral interrupts are
  routed to one of the free irqchip interrupt lines.

IRQ_DOMAIN
  No help

IRQ_DOMAIN_HIERARCHY
  No help

IRQ_EDGE_EOI_HANDLER
  No help

IRQ_FASTEOI_HIERARCHY_HANDLERS
  No help

IRQ_FORCED_THREADING
  No help

IRQ_MIPS_CPU
  No help

IRQ_MSI_IOMMU
  No help

IRQ_MXS
  No help

IRQ_POLL
  Helper library to poll interrupt mitigation using polling.

IRQ_REMAP
  Supports Interrupt remapping for IO-APIC and MSI devices.
  To use x2apic mode in the CPU's which support x2APIC enhancements or
  to support platforms with CPU's having > 8 bit APIC ID, say Y.

IRQ_SIM
  No help

IRQ_TIME_ACCOUNTING
  Select this option to enable fine granularity task irq time
  accounting. This is done by reading a timestamp on each
  transitions between softirq and hardirq state, so there can be a
  small performance impact.
  
  If in doubt, say N here.

IRQ_TIMINGS
  No help

IRQ_UNIPHIER_AIDET
  Support for the UniPhier AIDET (ARM Interrupt Detector).

IRQ_WORK
  No help

IR_ENE
  Say Y here to enable support for integrated infrared receiver
  /transceiver made by ENE.
  
  You can see if you have it by looking at lspnp output.
  Output should include ENE0100 ENE0200 or something similar.
  
  To compile this driver as a module, choose M here: the
  module will be called ene_ir.

IR_FINTEK
  Say Y here to enable support for integrated infrared receiver
  /transceiver made by Fintek. This chip is found on assorted
  Jetway motherboards (and of course, possibly others).
  
  To compile this driver as a module, choose M here: the
  module will be called fintek-cir.

IR_GPIO_CIR
  Say Y if you want to use GPIO based IR Receiver.
  
  To compile this driver as a module, choose M here: the module will
  be called gpio-ir-recv.

IR_GPIO_TX
  Say Y if you want to a GPIO based IR transmitter. This is a
  bit banging driver.
  
  To compile this driver as a module, choose M here: the module will
  be called gpio-ir-tx.

IR_HIX5HD2
  Say Y here if you want to use hisilicon hix5hd2 remote control.
  To compile this driver as a module, choose M here: the module will be
  called ir-hix5hd2.
  
  If you're not sure, select N here

IR_IGORPLUGUSB
  Say Y here if you want to use the IgorPlug-USB IR Receiver by
  Igor Cesko. This device is included on the Fit-PC2.
  
  Note that this device can only record bursts of 36 IR pulses and
  spaces, which is not enough for the NEC, Sanyo and RC-6 protocol.
  
  To compile this driver as a module, choose M here: the module will
  be called igorplugusb.

IR_IGUANA
  Say Y here if you want to use the IguanaWorks USB IR Transceiver.
  Both infrared receive and send are supported. If you want to
  change the ID or the pin config, use the user space driver from
  IguanaWorks.
  
  Only firmware 0x0205 and later is supported.
  
  To compile this driver as a module, choose M here: the module will
  be called iguanair.

IR_IMG
  Say Y or M here if you want to use the ImgTec infrared decoder
  functionality found in SoCs such as TZ1090.

IR_IMG_HW
  Say Y here to enable the hardware decode driver which decodes the IR
  signals in hardware. This is more reliable, consumes less processing
  power since only a single interrupt is received for each scancode,
  and allows an IR scancode to be used as a wake event.

IR_IMG_JVC
  Say Y here to enable support for the JVC protocol in the ImgTec
  infrared decoder block.

IR_IMG_NEC
  Say Y here to enable support for the NEC, extended NEC, and 32-bit
  NEC protocols in the ImgTec infrared decoder block.

IR_IMG_RAW
  Say Y here to enable the raw mode driver which passes raw IR signal
  changes to the IR raw decoders for software decoding. This is much
  less reliable (due to lack of timestamps) and consumes more
  processing power than using hardware decode, but can be useful for
  testing, debug, and to make more protocols available.

IR_IMG_RC5
  Say Y here to enable support for the RC5 protocol in the ImgTec
  infrared decoder block.

IR_IMG_RC6
  Say Y here to enable support for the RC6 protocol in the ImgTec
  infrared decoder block.
  Note: This version only supports mode 0.

IR_IMG_SANYO
  Say Y here to enable support for the Sanyo protocol (used by Sanyo,
  Aiwa, Chinon remotes) in the ImgTec infrared decoder block.

IR_IMG_SHARP
  Say Y here to enable support for the Sharp protocol in the ImgTec
  infrared decoder block.

IR_IMG_SONY
  Say Y here to enable support for the Sony protocol in the ImgTec
  infrared decoder block.

IR_IMON
  Say Y here if you want to use a SoundGraph iMON (aka Antec Veris)
  IR Receiver and/or LCD/VFD/VGA display.
  
  To compile this driver as a module, choose M here: the
  module will be called imon.

IR_IMON_DECODER
  Enable this option if you have iMON PAD or Antec Veris infrared
  remote control and you would like to use it with a raw IR
  receiver, or if you wish to use an encoder to transmit this IR.

IR_IMON_RAW
  Say Y here if you want to use a SoundGraph iMON IR Receiver,
  early raw models.
  
  To compile this driver as a module, choose M here: the
  module will be called imon_raw.

IR_ITE_CIR
  Say Y here to enable support for integrated infrared receivers
  /transceivers made by ITE Tech Inc. These are found in
  several ASUS devices, like the ASUS Digimatrix or the ASUS
  EEEBox 1501U.
  
  To compile this driver as a module, choose M here: the
  module will be called ite-cir.

IR_JVC_DECODER
  Enable this option if you have an infrared remote control which
  uses the JVC protocol, and you need software decoding support.

IR_MCEUSB
  Say Y here if you want to use a Windows Media Center Edition
  eHome Infrared Transceiver.
  
  To compile this driver as a module, choose M here: the
  module will be called mceusb.

IR_MCE_KBD_DECODER
  Enable this option if you have a Microsoft Remote Keyboard for
  Windows Media Center Edition, which you would like to use with
  a raw IR receiver in your system.

IR_MESON
  Say Y if you want to use the IR remote receiver available
  on Amlogic Meson SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called meson-ir.

IR_MTK
  Say Y if you want to use the IR remote receiver available
  on Mediatek SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called mtk-cir.

IR_NEC_DECODER
  Enable this option if you have IR with NEC protocol, and
  if the IR is decoded in software

IR_NUVOTON
  Say Y here to enable support for integrated infrared receiver
  /transceiver made by Nuvoton (formerly Winbond). This chip is
  found in the ASRock ION 330HT, as well as assorted Intel
  DP55-series motherboards (and of course, possibly others).
  
  To compile this driver as a module, choose M here: the
  module will be called nuvoton-cir.

IR_PWM_TX
  Say Y if you want to use a PWM based IR transmitter. This is
  more power efficient than the bit banging gpio driver.
  
  To compile this driver as a module, choose M here: the module will
  be called pwm-ir-tx.

IR_RC5_DECODER
  Enable this option if you have IR with RC-5 protocol, and
  if the IR is decoded in software

IR_RC6_DECODER
  Enable this option if you have an infrared remote control which
  uses the RC6 protocol, and you need software decoding support.

IR_RCMM_DECODER
  Enable this option when you have IR with RC-MM protocol, and
  you need the software decoder. The driver supports 12,
  24 and 32 bits RC-MM variants. You can enable or disable the
  different modes using the following RC protocol keywords:
  'rc-mm-12', 'rc-mm-24' and 'rc-mm-32'.
  
  To compile this driver as a module, choose M here: the module
  will be called ir-rcmm-decoder.

IR_REDRAT3
  Say Y here if you want to use a RedRat3 Infrared Transceiver.
  
  To compile this driver as a module, choose M here: the
  module will be called redrat3.

IR_RX51
  Say Y or M here if you want to enable support for the IR
  transmitter diode built in the Nokia N900 (RX51) device.
  
  The driver uses omap DM timers for generating the carrier
  wave and pulses.

IR_SANYO_DECODER
  Enable this option if you have an infrared remote control which
  uses the Sanyo protocol (Sanyo, Aiwa, Chinon remotes),
  and you need software decoding support.

IR_SERIAL
  Say Y if you want to use Homebrew Serial Port Receivers and
  Transceivers.
  
  To compile this driver as a module, choose M here: the module will
  be called serial-ir.

IR_SERIAL_TRANSMITTER
  Serial Port Transmitter support

IR_SHARP_DECODER
  Enable this option if you have an infrared remote control which
  uses the Sharp protocol (Sharp, Denon), and you need software
  decoding support.

IR_SIR
  Say Y if you want to use a IrDA SIR port Transceivers.
  
  To compile this driver as a module, choose M here: the module will
  be called sir-ir.

IR_SONY_DECODER
  Enable this option if you have an infrared remote control which
  uses the Sony protocol, and you need software decoding support.

IR_SPI
  Say Y if you want to use an IR LED connected through SPI bus.
  
  To compile this driver as a module, choose M here: the module will be
  called ir-spi.

IR_STREAMZAP
  Say Y here if you want to use a Streamzap PC Remote
  Infrared Receiver.
  
  To compile this driver as a module, choose M here: the
  module will be called streamzap.

IR_SUNXI
  Say Y if you want to use sunXi internal IR Controller
  
  To compile this driver as a module, choose M here: the module will
  be called sunxi-ir.

IR_TANGO
  Adds support for the HW IR decoder embedded on Sigma Designs
  Tango-based systems (SMP86xx, SMP87xx).
  The HW decoder supports NEC, RC-5, RC-6 IR protocols.
  When compiled as a module, look for tango-ir.

IR_TOY
  Say Y here if you want to use the Infrared Toy or IR Droid, USB
  versions.
  
  To compile this driver as a module, choose M here: the module will be
  called ir_toy.

IR_TTUSBIR
  Say Y here if you want to use the TechnoTrend USB IR Receiver. The
  driver can control the led.
  
  To compile this driver as a module, choose M here: the module will
  be called ttusbir.

IR_WINBOND_CIR
  Say Y here if you want to use the IR remote functionality found
  in some Winbond SuperI/O chips. Currently only the WPCD376I
  chip is supported (included in some Intel Media series
  motherboards).
  
  To compile this driver as a module, choose M here: the module will
  be called winbond_cir.

IR_XMP_DECODER
  Enable this option if you have IR with XMP protocol, and
  if the IR is decoded in software

IR_ZX
  Say Y if you want to use the IR remote control available
  on ZTE ZX family SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called zx-irdec.

ISA
  Find out whether you have ISA slots on your motherboard.  ISA is the
  name of a bus system, i.e. the way the CPU talks to the other stuff
  inside your box.  Other bus systems are PCI, EISA, MicroChannel
  (MCA) or VESA.  ISA is an older system, now being displaced by PCI;
  newer boards don't support it.  If you have ISA, say Y, otherwise N.

ISAPNP
  Say Y here if you would like support for ISA Plug and Play devices.
  Some information is in <file:Documentation/driver-api/isapnp.rst>.
  
  If unsure, say Y.

ISA_BUS
  Expose ISA bus device drivers and options available for selection and
  configuration. Enable this option if your target machine has an ISA
  bus. ISA is an older system, displaced by PCI and newer bus
  architectures -- if your target machine is modern, it probably does
  not have an ISA bus.
  
  If unsure, say N.

ISA_BUS_API
  No help

ISA_DMA_API
  Enables ISA-style DMA support for devices requiring such controllers.
  If unsure, say Y.

ISCSI_BOOT_SYSFS
  This option enables support for exposing iSCSI boot information
  via sysfs to userspace. If you wish to export this information,
  say Y. Otherwise, say N.

ISCSI_IBFT
  This option enables support for detection and exposing of iSCSI
  Boot Firmware Table (iBFT) via sysfs to userspace. If you wish to
  detect iSCSI boot parameters dynamically during system boot, say Y.
  Otherwise, say N.

ISCSI_IBFT_FIND
  This option enables the kernel to find the region of memory
  in which the ISCSI Boot Firmware Table (iBFT) resides. This
  is necessary for iSCSI Boot Firmware Table Attributes module to work
  properly.

ISCSI_TARGET
  Say M here to enable the ConfigFS enabled Linux-iSCSI.org iSCSI
  Target Mode Stack.

ISCSI_TARGET_CXGB4
  To compile this driver as module, choose M here: the module
  will be called cxgbit.

ISCSI_TCP
  The iSCSI Driver provides a host with the ability to access storage
  through an IP network. The driver uses the iSCSI protocol to transport
  SCSI requests and responses over a TCP/IP network between the host
  (the "initiator") and "targets".  Architecturally, the iSCSI driver
  combines with the host's TCP/IP stack, network drivers, and Network
  Interface Card (NIC) to provide the same functions as a SCSI or a
  Fibre Channel (FC) adapter driver with a Host Bus Adapter (HBA).
  
  To compile this driver as a module, choose M here: the
  module will be called iscsi_tcp.
  
  The userspace component needed to initialize the driver, documentation,
  and sample configuration files can be found here:
  
  http://open-iscsi.org

ISDN
  ISDN ("Integrated Services Digital Network", called RNIS in France)
  is a fully digital telephone service that can be used for voice and
  data connections.  If your computer is equipped with an ISDN
  adapter you can use it to connect to your Internet service provider
  (with SLIP or PPP) faster than via a conventional telephone modem
  (though still much slower than with DSL) or to make and accept
  voice calls (eg. turning your PC into a software answering machine
  or PABX).
  
  Select this option if you want your kernel to support ISDN.

ISDN_CAPI
  This provides CAPI (the Common ISDN Application Programming
  Interface) Version 2.0, a standard making it easy for programs to
  access ISDN hardware in a device independent way. (For details see
  <https://www.capi.org/>.)  CAPI supports making and accepting voice
  and data connections, controlling call options and protocols,
  as well as ISDN supplementary services like call forwarding or
  three-party conferences (if supported by the specific hardware
  driver).
  
  This subsystem requires a hardware specific driver.
  See CONFIG_BT_CMTP for the last remaining regular driver
  in the kernel that uses the CAPI subsystem.

ISDN_CAPI_MIDDLEWARE
  This option will enhance the capabilities of the /dev/capi20
  interface.  It will provide a means of moving a data connection,
  established via the usual /dev/capi20 interface to a special tty
  device.  If you want to use pppd with pppdcapiplugin to dial up to
  your ISP, say Y here.

ISI
  This is a driver for the Multi-Tech cards which provide several
  serial ports.  The driver is experimental and can currently only be
  built as a module. The module will be called isicom.
  If you want to do that, choose M here.

ISL29003
  If you say yes here you get support for the Intersil ISL29003
  ambient light sensor.
  
  This driver can also be built as a module.  If so, the module
  will be called isl29003.

ISL29020
  If you say yes here you get support for the Intersil ISL29020
  ambient light sensor.
  
  This driver can also be built as a module.  If so, the module
  will be called isl29020.

ISL29125
  Say Y here if you want to build a driver for the Intersil ISL29125
  RGB light sensor for I2C.
  
  To compile this driver as a module, choose M here: the module will be
  called isl29125.

ISL29501
  Say Y here if you want to build a driver for the Intersil ISL29501
  Time of Flight sensor.
  
  To compile this driver as a module, choose M here: the module will be
  called isl29501.

ISM
  Select this option if you want to use the Internal Shared Memory
  vPCI Adapter.
  
  To compile as a module choose M. The module name is ism.
  If unsure, choose N.

ISO9660_FS
  This is the standard file system used on CD-ROMs.  It was previously
  known as "High Sierra File System" and is called "hsfs" on other
  Unix systems.  The so-called Rock-Ridge extensions which allow for
  long Unix filenames and symbolic links are also supported by this
  driver.  If you have a CD-ROM drive and want to do more with it than
  just listen to audio CDs and watch its LEDs, say Y (and read
  <file:Documentation/filesystems/isofs.rst> and the CD-ROM-HOWTO,
  available from <http://www.tldp.org/docs.html#howto>), thereby
  enlarging your kernel by about 27 KB; otherwise say N.
  
  To compile this file system support as a module, choose M here: the
  module will be called isofs.

ISP1301_OMAP
  If you say yes here you get support for the Philips ISP1301
  USB-On-The-Go transceiver working with the OMAP OTG controller.
  The ISP1301 is a full speed USB  transceiver which is used in
  products including H2, H3, and H4 development boards for Texas
  Instruments OMAP processors.
  
  This driver can also be built as a module.  If so, the module
  will be called phy-isp1301-omap.

IT8712F_WDT
  This is the driver for the built-in watchdog timer on the IT8712F
  Super I/0 chipset used on many motherboards.
  
  If the driver does not work, then make sure that the game port in
  the BIOS is enabled.
  
  To compile this driver as a module, choose M here: the
  module will be called it8712f_wdt.

IT87_WDT
  This is the driver for the hardware watchdog on the ITE IT8607,
  IT8620, IT8622, IT8625, IT8628, IT8655, IT8665, IT8686, IT8702,
  IT8712, IT8716, IT8718, IT8720, IT8721, IT8726, IT8728, and
  IT8783 Super I/O chips.
  
  This watchdog simply watches your kernel to make sure it doesn't
  freeze, and if it does, it reboots your computer after a certain
  amount of time.
  
  To compile this driver as a module, choose M here: the module will
  be called it87_wdt.

ITCO_VENDOR_SUPPORT
  Add vendor specific support to the intel TCO timer based watchdog
  devices. At this moment we only have additional support for some
  SuperMicro Inc. motherboards.

ITCO_WDT
  Hardware driver for the intel TCO timer based watchdog devices.
  These drivers are included in the Intel 82801 I/O Controller
  Hub family (from ICH0 up to ICH10) and in the Intel 63xxESB
  controller hub.
  
  The TCO (Total Cost of Ownership) timer is a watchdog timer
  that will reboot the machine after its second expiration. The
  expiration time can be configured with the "heartbeat" parameter.
  
  On some motherboards the driver may fail to reset the chipset's
  NO_REBOOT flag which prevents the watchdog from rebooting the
  machine. If this is the case you will get a kernel message like
  "failed to reset NO_REBOOT flag, reboot disabled by hardware".
  
  To compile this driver as a module, choose M here: the
  module will be called iTCO_wdt.

ITG3200
  Say yes here to add support for the InvenSense ITG3200 digital
  3-axis gyroscope sensor.

IUCV
  Select this option if you want to use inter-user communication
  under VM or VIF. If you run on z/VM, say "Y" to enable a fast
  communication link between VM guests.

IWL3945
  Select to build the driver supporting the:
  
  Intel PRO/Wireless 3945ABG/BG Network Connection
  
  This driver uses the kernel's mac80211 subsystem.
  
  In order to use this driver, you will need a microcode (uCode)
  image for it. You can obtain the microcode from:
  
          <http://intellinuxwireless.org/>.
  
  The microcode is typically installed in /lib/firmware. You can
  look in the hotplug script /etc/hotplug/firmware.agent to
  determine which directory FIRMWARE_DIR is set to when the script
  runs.
  
  If you want to compile the driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read <file:Documentation/kbuild/modules.rst>.  The
  module will be called iwl3945.

IWL4965
  This option enables support for
  
  Select to build the driver supporting the:
  
  Intel Wireless WiFi Link 4965AGN
  
  This driver uses the kernel's mac80211 subsystem.
  
  In order to use this driver, you will need a microcode (uCode)
  image for it. You can obtain the microcode from:
  
          <http://intellinuxwireless.org/>.
  
  The microcode is typically installed in /lib/firmware. You can
  look in the hotplug script /etc/hotplug/firmware.agent to
  determine which directory FIRMWARE_DIR is set to when the script
  runs.
  
  If you want to compile the driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read <file:Documentation/kbuild/modules.rst>.  The
  module will be called iwl4965.

IWLDVM
  This is the driver that supports the DVM firmware. The list
  of the devices that use this firmware is available here:
  https://wireless.wiki.kernel.org/en/users/drivers/iwlwifi#firmware

IWLEGACY
  No help

IWLEGACY_DEBUG
  This option will enable debug tracing output for the iwlegacy
  drivers.
  
  This will result in the kernel module being ~100k larger.  You can
  control which debug output is sent to the kernel log by setting the
  value in
  
        /sys/class/net/wlan0/device/debug_level
  
  This entry will only exist if this option is enabled.
  
  To set a value, simply echo an 8-byte hex value to the same file:
  
          % echo 0x43fff > /sys/class/net/wlan0/device/debug_level
  
  You can find the list of debug mask values in:
          drivers/net/wireless/iwlegacy/common.h
  
  If this is your first time using this driver, you should say Y here
  as the debug information can assist others in helping you resolve
  any problems you may encounter.

IWLEGACY_DEBUGFS
  Enable creation of debugfs files for the iwlegacy drivers. This
  is a low-impact option that allows getting insight into the
  driver's state at runtime.

IWLMVM
  This is the driver that supports the MVM firmware. The list
  of the devices that use this firmware is available here:
  https://wireless.wiki.kernel.org/en/users/drivers/iwlwifi#firmware

IWLWIFI
  Select to build the driver supporting the:
  
  Intel Wireless WiFi Link Next-Gen AGN
  
  This option enables support for use with the following hardware:
        Intel Wireless WiFi Link 6250AGN Adapter
        Intel 6000 Series Wi-Fi Adapters (6200AGN and 6300AGN)
        Intel WiFi Link 1000BGN
        Intel Wireless WiFi 5150AGN
        Intel Wireless WiFi 5100AGN, 5300AGN, and 5350AGN
        Intel 6005 Series Wi-Fi Adapters
        Intel 6030 Series Wi-Fi Adapters
        Intel Wireless WiFi Link 6150BGN 2 Adapter
        Intel 100 Series Wi-Fi Adapters (100BGN and 130BGN)
        Intel 2000 Series Wi-Fi Adapters
        Intel 7260 Wi-Fi Adapter
        Intel 3160 Wi-Fi Adapter
        Intel 7265 Wi-Fi Adapter
        Intel 8260 Wi-Fi Adapter
        Intel 3165 Wi-Fi Adapter
  
  
  This driver uses the kernel's mac80211 subsystem.
  
  In order to use this driver, you will need a firmware
  image for it. You can obtain the microcode from:
  
          <https://wireless.wiki.kernel.org/en/users/Drivers/iwlwifi>.
  
  The firmware is typically installed in /lib/firmware. You can
  look in the hotplug script /etc/hotplug/firmware.agent to
  determine which directory FIRMWARE_DIR is set to when the script
  runs.
  
  If you want to compile the driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read <file:Documentation/kbuild/modules.rst>.  The
  module will be called iwlwifi.

IWLWIFI_BCAST_FILTERING
  Say Y here to enable default bcast filtering configuration.
  
  Enabling broadcast filtering will drop any incoming wireless
  broadcast frames, except some very specific predefined
  patterns (e.g. incoming arp requests).
  
  If unsure, don't enable this option, as some programs might
  expect incoming broadcasts for their normal operations.

IWLWIFI_DEBUG
  This option will enable debug tracing output for the iwlwifi drivers
  
  This will result in the kernel module being ~100k larger.  You can
  control which debug output is sent to the kernel log by setting the
  value in
  
        /sys/module/iwlwifi/parameters/debug
  
  This entry will only exist if this option is enabled.
  
  To set a value, simply echo an 8-byte hex value to the same file:
  
          % echo 0x43fff > /sys/module/iwlwifi/parameters/debug
  
  You can find the list of debug mask values in:
          drivers/net/wireless/iwlwifi/iwl-debug.h
  
  If this is your first time using this driver, you should say Y here
  as the debug information can assist others in helping you resolve
  any problems you may encounter.

IWLWIFI_DEBUGFS
  Enable creation of debugfs files for the iwlwifi drivers. This
  is a low-impact option that allows getting insight into the
  driver's state at runtime.

IWLWIFI_DEVICE_TRACING
  Say Y here to trace all commands, including TX frames and IO
  accesses, sent to the device. If you say yes, iwlwifi will
  register with the ftrace framework for event tracing and dump
  all this information to the ringbuffer, you may need to
  increase the ringbuffer size. See the ftrace documentation
  for more information.
  
  When tracing is not enabled, this option still has some
  (though rather small) overhead.
  
  If unsure, say Y so we can help you better when problems
  occur.

IWLWIFI_LEDS
  No help

IWLWIFI_OPMODE_MODULAR
  No help

IXGB
  This driver supports Intel(R) PRO/10GbE family of adapters for
  PCI-X type cards. For PCI-E type cards, use the "ixgbe" driver
  instead. For more information on how to identify your adapter, go
  to the Adapter & Driver ID Guide that can be located at:
  
  <http://support.intel.com>
  
  More specific information on configuring the driver is in
  <file:Documentation/networking/device_drivers/ethernet/intel/ixgb.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called ixgb.

IXGBE
  This driver supports Intel(R) 10GbE PCI Express family of
  adapters.  For more information on how to identify your adapter, go
  to the Adapter & Driver ID Guide that can be located at:
  
  <http://support.intel.com>
  
  More specific information on configuring the driver is in
  <file:Documentation/networking/device_drivers/ethernet/intel/ixgbe.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called ixgbe.

IXGBEVF
  This driver supports Intel(R) PCI Express virtual functions for the
  Intel(R) ixgbe driver.  For more information on how to identify your
  adapter, go to the Adapter & Driver ID Guide that can be located at:
  
  <http://support.intel.com>
  
  More specific information on configuring the driver is in
  <file:Documentation/networking/device_drivers/ethernet/intel/ixgbevf.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called ixgbevf.  MSI-X interrupt support is required
  for this driver to work correctly.

IXGBEVF_IPSEC
  Enable support for IPSec offload in ixgbevf.ko

IXGBE_DCA
  Say Y here if you want to use Direct Cache Access (DCA) in the
  driver.  DCA is a method for warming the CPU cache before data
  is used, with the intent of lessening the impact of cache misses.

IXGBE_DCB
  Say Y here if you want to use Data Center Bridging (DCB) in the
  driver.
  
  If unsure, say N.

IXGBE_HWMON
  Say Y if you want to expose the thermal sensor data on some of
  our cards, via a hwmon sysfs interface.

IXGBE_IPSEC
  Enable support for IPSec offload in ixgbe.ko

IXP4XX_ETH
  Say Y here if you want to use built-in Ethernet ports
  on IXP4xx processor.

IXP4XX_HSS
  Say Y here if you want to use built-in HSS ports
  on IXP4xx processor.

IXP4XX_IRQ
  No help

IXP4XX_NPE
  This driver supports IXP4xx built-in network coprocessors
  and is automatically selected by Ethernet and HSS drivers.

IXP4XX_QMGR
  This driver supports IXP4xx built-in hardware queue manager
  and is automatically selected by Ethernet and HSS drivers.

IXP4XX_TIMER
  Enables support for the Intel XScale IXP4xx SoC timer.

IXP4XX_WATCHDOG
  Say Y here if to include support for the watchdog timer
  in the Intel IXP4xx network processors. This driver can
  be built as a module by choosing M. The module will
  be called ixp4xx_wdt.
  
  Note: The internal IXP4xx watchdog does a soft CPU reset
  which doesn't reset any peripherals. There are circumstances
  where the watchdog will fail to reset the board correctly
  (e.g., if the boot ROM is in an unreadable state).
  
  Say N if you are unsure.

JAILHOUSE_GUEST
  This option allows to run Linux as guest in a Jailhouse non-root
  cell. You can leave this option disabled if you only want to start
  Jailhouse and run Linux afterwards in the root cell.

JAZZ_ESP
  This is the driver for the onboard SCSI host adapter of MIPS Magnum
  4000, Acer PICA, Olivetti M700-10 and a few other identical OEM
  systems.

JBD2
  This is a generic journaling layer for block devices that support
  both 32-bit and 64-bit block numbers.  It is currently used by
  the ext4 and OCFS2 filesystems, but it could also be used to add
  journal support to other file systems or block devices such
  as RAID or LVM.
  
  If you are using ext4 or OCFS2, you need to say Y here.
  If you are not using ext4 or OCFS2 then you will
  probably want to say N.
  
  To compile this device as a module, choose M here. The module will be
  called jbd2.  If you are compiling ext4 or OCFS2 into the kernel,
  you cannot compile this code as a module.

JBD2_DEBUG
  If you are using the ext4 journaled file system (or
  potentially any other filesystem/device using JBD2), this option
  allows you to enable debugging output while the system is running,
  in order to help track down any problems you are having.
  By default, the debugging output will be turned off.
  
  If you select Y here, then you will be able to turn on debugging
  with "echo N > /sys/module/jbd2/parameters/jbd2_debug", where N is a
  number between 1 and 5. The higher the number, the more debugging
  output is generated.  To turn debugging off again, do
  "echo 0 > /sys/module/jbd2/parameters/jbd2_debug".

JCORE_AIC
  Support for the J-Core integrated AIC.

JFFS2_CMODE_FAVOURLZO
  Tries all compressors and chooses the one which has the smallest
  result but gives some preference to LZO (which has faster
  decompression) at the expense of size.

JFFS2_CMODE_NONE
  Uses no compression.

JFFS2_CMODE_PRIORITY
  Tries the compressors in a predefined order and chooses the first
  successful one.

JFFS2_CMODE_SIZE
  Tries all compressors and chooses the one which has the smallest
  result.

JFFS2_COMPRESSION_OPTIONS
  Enabling this option allows you to explicitly choose which
  compression modules, if any, are enabled in JFFS2. Removing
  compressors can mean you cannot read existing file systems,
  and enabling experimental compressors can mean that you
  write a file system which cannot be read by a standard kernel.
  
  If unsure, you should _definitely_ say 'N'.

JFFS2_FS
  JFFS2 is the second generation of the Journalling Flash File System
  for use on diskless embedded devices. It provides improved wear
  levelling, compression and support for hard links. You cannot use
  this on normal block devices, only on 'MTD' devices.
  
  Further information on the design and implementation of JFFS2 is
  available at <http://sources.redhat.com/jffs2/>.

JFFS2_FS_DEBUG
  This controls the amount of debugging messages produced by the JFFS2
  code. Set it to zero for use in production systems. For evaluation,
  testing and debugging, it's advisable to set it to one. This will
  enable a few assertions and will print debugging messages at the
  KERN_DEBUG loglevel, where they won't normally be visible. Level 2
  is unlikely to be useful - it enables extra debugging in certain
  areas which at one point needed debugging, but when the bugs were
  located and fixed, the detailed messages were relegated to level 2.
  
  If reporting bugs, please try to have available a full dump of the
  messages at debug level 1 while the misbehaviour was occurring.

JFFS2_FS_POSIX_ACL
  Posix Access Control Lists (ACLs) support permissions for users and
  groups beyond the owner/group/world scheme.
  
  If you don't know what Access Control Lists are, say N

JFFS2_FS_SECURITY
  Security labels support alternative access control models
  implemented by security modules like SELinux.  This option
  enables an extended attribute handler for file security
  labels in the jffs2 filesystem.
  
  If you are not using a security module that requires using
  extended attributes for file security labels, say N.

JFFS2_FS_WBUF_VERIFY
  This causes JFFS2 to read back every page written through the
  write-buffer, and check for errors.

JFFS2_FS_WRITEBUFFER
  This enables the write-buffering support in JFFS2.
  
  This functionality is required to support JFFS2 on the following
  types of flash devices:
    - NAND flash
    - NOR flash with transparent ECC
    - DataFlash

JFFS2_FS_XATTR
  Extended attributes are name:value pairs associated with inodes by
  the kernel or by users (see the attr(5) manual page for details).
  
  If unsure, say N.

JFFS2_LZO
  minilzo-based compression. Generally works better than Zlib.
  
  This feature was added in July, 2007. Say 'N' if you need
  compatibility with older bootloaders or kernels.

JFFS2_RTIME
  Rtime does manage to recompress already-compressed data. Say 'Y' if unsure.

JFFS2_RUBIN
  RUBINMIPS and DYNRUBIN compressors. Say 'N' if unsure.

JFFS2_SUMMARY
  This feature makes it possible to use summary information
  for faster filesystem mount.
  
  The summary information can be inserted into a filesystem image
  by the utility 'sumtool'.
  
  If unsure, say 'N'.

JFFS2_ZLIB
  Zlib is designed to be a free, general-purpose, legally unencumbered,
  lossless data-compression library for use on virtually any computer
  hardware and operating system. See <http://www.gzip.org/zlib/> for
  further information.
  
  Say 'Y' if unsure.

JFS_DEBUG
  If you are experiencing any problems with the JFS filesystem, say
  Y here.  This will result in additional debugging messages to be
  written to the system log.  Under normal circumstances, this
  results in very little overhead.

JFS_FS
  This is a port of IBM's Journaled Filesystem .  More information is
  available in the file <file:Documentation/admin-guide/jfs.rst>.
  
  If you do not intend to use the JFS filesystem, say N.

JFS_POSIX_ACL
  Posix Access Control Lists (ACLs) support permissions for users and
  groups beyond the owner/group/world scheme.
  
  If you don't know what Access Control Lists are, say N

JFS_SECURITY
  Security labels support alternative access control models
  implemented by security modules like SELinux.  This option
  enables an extended attribute handler for file security
  labels in the jfs filesystem.
  
  If you are not using a security module that requires using
  extended attributes for file security labels, say N.

JFS_STATISTICS
  Enabling this option will cause statistics from the JFS file system
  to be made available to the user in the /proc/fs/jfs/ directory.

JME
  This driver supports the PCI-Express gigabit ethernet adapters
  based on JMicron JMC250 chipset.
  
  To compile this driver as a module, choose M here. The module
  will be called jme.

JOLIET
  Joliet is a Microsoft extension for the ISO 9660 CD-ROM file system
  which allows for long filenames in unicode format (unicode is the
  new 16 bit character code, successor to ASCII, which encodes the
  characters of almost all languages of the world; see
  <http://www.unicode.org/> for more information).  Say Y here if you
  want to be able to read Joliet CD-ROMs under Linux.

JOYSTICK_A3D
  Say Y here if you have an FPGaming or MadCatz controller using the
  A3D protocol over the PC gameport.
  
  To compile this driver as a module, choose M here: the
  module will be called a3d.

JOYSTICK_ADC
  Say Y here if you have a simple joystick connected over ADC.
  
  To compile this driver as a module, choose M here: the
  module will be called adc-joystick.

JOYSTICK_ADI
  Say Y here if you have a Logitech controller using the ADI
  protocol over the PC gameport.
  
  To compile this driver as a module, choose M here: the
  module will be called adi.

JOYSTICK_AMIGA
  Say Y here if you have an Amiga with a digital joystick connected
  to it.
  
  To compile this driver as a module, choose M here: the
  module will be called amijoy.

JOYSTICK_ANALOG
  Say Y here if you have a joystick that connects to the PC
  gameport. In addition to the usual PC analog joystick, this driver
  supports many extensions, including joysticks with throttle control,
  with rudders, additional hats and buttons compatible with CH
  Flightstick Pro, ThrustMaster FCS, 6 and 8 button gamepads, or
  Saitek Cyborg joysticks.
  
  Please read the file <file:Documentation/input/joydev/joystick.rst> which
  contains more information.
  
  To compile this driver as a module, choose M here: the
  module will be called analog.

JOYSTICK_AS5011
  Say Y here if you have an AS5011 digital joystick connected to your
  system.
  
  To compile this driver as a module, choose M here: the
  module will be called as5011.

JOYSTICK_COBRA
  Say Y here if you have a Creative Labs Blaster Cobra gamepad.
  
  To compile this driver as a module, choose M here: the
  module will be called cobra.

JOYSTICK_DB9
  Say Y here if you have a Sega Master System gamepad, Sega Genesis
  gamepad, Sega Saturn gamepad, or a Multisystem -- Atari, Amiga,
  Commodore, Amstrad CPC joystick connected to your parallel port.
  For more information on how to use the driver please read
  <file:Documentation/input/devices/joystick-parport.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called db9.

JOYSTICK_FSIA6B
  Say Y here if you use a FlySky FS-i6 RC remote control along with the
  FS-iA6B RC receiver as a joystick input device.
  
  To compile this driver as a module, choose M here: the
  module will be called fsia6b.

JOYSTICK_GAMECON
  Say Y here if you have a Nintendo Entertainment System gamepad,
  Super Nintendo Entertainment System gamepad, Nintendo 64 gamepad,
  Sony PlayStation gamepad or a Multisystem -- Atari, Amiga,
  Commodore, Amstrad CPC joystick connected to your parallel port.
  For more information on how to use the driver please read
  <file:Documentation/input/devices/joystick-parport.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called gamecon.

JOYSTICK_GF2K
  Say Y here if you have a Genius Flight2000 or MaxFighter digitally
  communicating joystick or gamepad.
  
  To compile this driver as a module, choose M here: the
  module will be called gf2k.

JOYSTICK_GRIP
  Say Y here if you have a Gravis controller using the GrIP protocol
  over the PC gameport.
  
  To compile this driver as a module, choose M here: the
  module will be called grip.

JOYSTICK_GRIP_MP
  Say Y here if you have the original Gravis GrIP MultiPort, a hub
  that connects to the gameport and you connect gamepads to it.
  
  To compile this driver as a module, choose M here: the
  module will be called grip_mp.

JOYSTICK_GUILLEMOT
  Say Y here if you have a Guillemot joystick using a digital
  protocol over the PC gameport.
  
  To compile this driver as a module, choose M here: the
  module will be called guillemot.

JOYSTICK_IFORCE
  Say Y here if you have an I-Force joystick or steering wheel
  
  You also must choose at least one of the two options below.
  
  To compile this driver as a module, choose M here: the
  module will be called iforce.

JOYSTICK_IFORCE_232
  Say Y here if you have an I-Force joystick or steering wheel
  connected to your serial (COM) port.
  
  You will need an additional utility called inputattach, see
  <file:Documentation/input/joydev/joystick.rst>
  and <file:Documentation/input/ff.rst>.
  

JOYSTICK_IFORCE_USB
  Say Y here if you have an I-Force joystick or steering wheel
  connected to your USB port.

JOYSTICK_INTERACT
  Say Y here if you have an InterAct gameport or joystick
  communicating digitally over the gameport.
  
  To compile this driver as a module, choose M here: the
  module will be called interact.

JOYSTICK_JOYDUMP
  Say Y here if you want to dump data from your joystick into the system
  log for debugging purposes. Say N if you are making a production
  configuration or aren't sure.
  
  To compile this driver as a module, choose M here: the
  module will be called joydump.

JOYSTICK_MAGELLAN
  Say Y here if you have a Magellan or Space Mouse 6DOF controller
  connected to your computer's serial port.
  
  To compile this driver as a module, choose M here: the
  module will be called magellan.

JOYSTICK_MAPLE
  Say Y here if you have a SEGA Dreamcast and want to use your
  controller as a joystick.
  
  Most Dreamcast users will say Y.
  
  To compile this as a module choose M here: the module will be called
  maplecontrol.

JOYSTICK_PSXPAD_SPI
  Say Y here if you wish to connect PlayStation 1/2 joypads
  via SPI interface.
  
  To compile this driver as a module, choose M here: the
  module will be called psxpad-spi.

JOYSTICK_PSXPAD_SPI_FF
  Say Y here if you want to take advantage of PlayStation 1/2
  joypads rumble features.
  
  To drive rumble motor a dedicated power supply is required.

JOYSTICK_PXRC
  Say Y here if you want to use the PhoenixRC Flight Controller Adapter.
  
  To compile this driver as a module, choose M here: the
  module will be called pxrc.

JOYSTICK_SIDEWINDER
  Say Y here if you have a Microsoft controller using the Digital
  Overdrive protocol over PC gameport.
  
  To compile this driver as a module, choose M here: the
  module will be called sidewinder.

JOYSTICK_SPACEBALL
  Say Y here if you have a SpaceTec SpaceBall 2003/3003/4000 FLX
  controller connected to your computer's serial port. For the
  SpaceBall 4000 USB model, use the USB HID driver.
  
  To compile this driver as a module, choose M here: the
  module will be called spaceball.

JOYSTICK_SPACEORB
  Say Y here if you have a SpaceOrb 360 or SpaceBall Avenger 6DOF
  controller connected to your computer's serial port.
  
  To compile this driver as a module, choose M here: the
  module will be called spaceorb.

JOYSTICK_STINGER
  Say Y here if you have a Gravis Stinger connected to one of your
  serial ports.
  
  To compile this driver as a module, choose M here: the
  module will be called stinger.

JOYSTICK_TMDC
  Say Y here if you have a ThrustMaster controller using the
  DirectConnect (BSP) protocol over the PC gameport.
  
  To compile this driver as a module, choose M here: the
  module will be called tmdc.

JOYSTICK_TURBOGRAFX
  Say Y here if you have the TurboGraFX interface by Steffen Schwenke,
  and want to use it with Multisystem -- Atari, Amiga, Commodore,
  Amstrad CPC joystick. For more information on how to use the driver
  please read <file:Documentation/input/devices/joystick-parport.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called turbografx.

JOYSTICK_TWIDJOY
  Say Y here if you have a Handykey Twiddler connected to your
  computer's serial port and want to use it as a joystick.
  
  To compile this driver as a module, choose M here: the
  module will be called twidjoy.

JOYSTICK_WALKERA0701
  Say Y or M here if you have a Walkera WK-0701 transmitter which is
  supplied with a ready to fly Walkera helicopters such as HM36,
  HM37, HM60 and want to use it via parport as a joystick. More
  information is available: <file:Documentation/input/devices/walkera0701.rst>
  
  To compile this driver as a module, choose M here: the
  module will be called walkera0701.

JOYSTICK_WARRIOR
  Say Y here if you have a Logitech WingMan Warrior joystick connected
  to your computer's serial port.
  
  To compile this driver as a module, choose M here: the
  module will be called warrior.

JOYSTICK_XPAD
  Say Y here if you want to use the X-Box pad with your computer.
  Make sure to say Y to "Joystick support" (CONFIG_INPUT_JOYDEV)
  and/or "Event interface support" (CONFIG_INPUT_EVDEV) as well.
  
  For information about how to connect the X-Box pad to USB, see
  <file:Documentation/input/devices/xpad.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called xpad.

JOYSTICK_XPAD_FF
  Say Y here if you want to take advantage of xbox 360 rumble features.

JOYSTICK_XPAD_LEDS
  This option enables support for the LED which surrounds the Big X on
  XBox 360 controller.

JOYSTICK_ZHENHUA
  Say Y here if you have a Zhen Hua PPM-4CH transmitter which is
  supplied with a ready to fly micro electric indoor helicopters
  such as EasyCopter, Lama, MiniCopter, DragonFly or Jabo and want
  to use it via serial cable as a joystick.
  
  To compile this driver as a module, choose M here: the
  module will be called zhenhua.

JSA1212
  Say Y here if you want to build a IIO driver for JSA1212
  proximity & ALS sensor device.
  
  To compile this driver as a module, choose M here:
  the module will be called jsa1212.

JUMP_LABEL
  This option enables a transparent branch optimization that
  makes certain almost-always-true or almost-always-false branch
  conditions even cheaper to execute within the kernel.
  
  Certain performance-sensitive kernel code, such as trace points,
  scheduler functionality, networking code and KVM have such
  branches and include support for this optimization technique.
  
  If it is detected that the compiler has support for "asm goto",
  the kernel will compile such branches with just a nop
  instruction. When the condition flag is toggled to true, the
  nop will be converted to a jump instruction to execute the
  conditional block of instructions.
  
  This technique lowers overhead and stress on the branch prediction
  of the processor and generally makes the kernel faster. The update
  of the condition is slower, but those are always very rare.
  
  ( On 32-bit x86, the necessary options added to the compiler
    flags may increase the size of the kernel slightly. )

JZ4740_WDT
  Hardware driver for the built-in watchdog timer on Ingenic jz4740 SoCs.

JZ4770_PHY
  This driver provides PHY support for the USB controller found
  on the JZ-series and X-series SoCs from Ingenic.

JZ4780_EFUSE
  Say Y here to include support for JZ4780 efuse memory found on
  all JZ4780 SoC based devices.
  To compile this driver as a module, choose M here: the module
  will be called nvmem_jz4780_efuse.

JZ4780_NEMC
  This driver is for the NAND/External Memory Controller (NEMC) in
  the Ingenic JZ4780. This controller is used to handle external
  memory devices such as NAND and SRAM.

K210_SYSCTL
  Enables controlling the K210 various clocks and to enable
  general purpose use of the extra 2MB of SRAM normally
  reserved for the AI engine.

K3_DMA
  Support the DMA engine for Hisilicon K3 platform
  devices.

K3_RTI_WATCHDOG
  Say Y here if you want to include support for the K3 watchdog
  timer (RTI module) available in the K3 generation of processors.

K3_THERMAL
  If you say yes here you get thermal support for the Texas Instruments
  K3 SoC family. The current chip supported is:
  - AM654
  
  This includes temperature reading functionality.

KALLSYMS
  Say Y here to let the kernel print out symbolic crash information and
  symbolic stack backtraces. This increases the size of the kernel
  somewhat, as all symbols have to be loaded into the kernel image.

KALLSYMS_ABSOLUTE_PERCPU
  No help

KALLSYMS_ALL
  Normally kallsyms only contains the symbols of functions for nicer
  OOPS messages and backtraces (i.e., symbols from the text and inittext
  sections). This is sufficient for most cases. And only in very rare
  cases (e.g., when a debugger is used) all symbols are required (e.g.,
  names of variables from the data sections, etc).
  
  This option makes sure that all symbols are loaded into the kernel
  image (i.e., symbols from all sections) in cost of increased kernel
  size (depending on the kernel configuration, it may be 300KiB or
  something like this).
  
  Say N unless you really need all symbols.

KALLSYMS_BASE_RELATIVE
  Instead of emitting them as absolute values in the native word size,
  emit the symbol references in the kallsyms table as 32-bit entries,
  each containing a relative value in the range [base, base + U32_MAX]
  or, when KALLSYMS_ABSOLUTE_PERCPU is in effect, each containing either
  an absolute value in the range [0, S32_MAX] or a relative value in the
  range [base, base + S32_MAX], where base is the lowest relative symbol
  address encountered in the image.
  
  On 64-bit builds, this reduces the size of the address table by 50%,
  but more importantly, it results in entries whose values are build
  time constants, and no relocation pass is required at runtime to fix
  up the entries based on the runtime load address of the kernel.

KARMA_PARTITION
  Say Y here if you would like to mount the Rio Karma MP3 player, as it
  uses a proprietary partition table.

KASAN
  Enables KASAN (KernelAddressSANitizer) - runtime memory debugger,
  designed to find out-of-bounds accesses and use-after-free bugs.
  See Documentation/dev-tools/kasan.rst for details.

KASAN_GENERIC
  Enables generic KASAN mode.
  
  This mode is supported in both GCC and Clang. With GCC it requires
  version 8.3.0 or later. Any supported Clang version is compatible,
  but detection of out-of-bounds accesses for global variables is
  supported only since Clang 11.
  
  This mode consumes about 1/8th of available memory at kernel start
  and introduces an overhead of ~x1.5 for the rest of the allocations.
  The performance slowdown is ~x3.
  
  Currently CONFIG_KASAN_GENERIC doesn't work with CONFIG_DEBUG_SLAB
  (the resulting kernel does not boot).

KASAN_HW_TAGS
  Enables hardware tag-based KASAN mode.
  
  This mode requires hardware memory tagging support, and can be used
  by any architecture that provides it.
  
  Currently this mode is only implemented for arm64 CPUs starting from
  ARMv8.5 and relies on Memory Tagging Extension and Top Byte Ignore.

KASAN_INLINE
  Compiler directly inserts code checking shadow memory before
  memory accesses. This is faster than outline (in some workloads
  it gives about x2 boost over outline instrumentation), but
  make kernel's .text size much bigger.

KASAN_KUNIT_TEST
  This is a KUnit test suite doing various nasty things like
  out of bounds and use after free accesses. It is useful for testing
  kernel debugging features like KASAN.
  
  For more information on KUnit and unit tests in general, please refer
  to the KUnit documentation in Documentation/dev-tools/kunit

KASAN_OUTLINE
  Before every memory access compiler insert function call
  __asan_load*/__asan_store*. These functions performs check
  of shadow memory. This is slower than inline instrumentation,
  however it doesn't bloat size of kernel's .text section so
  much as inline does.

KASAN_SHADOW_OFFSET
  No help

KASAN_STACK
  No help

KASAN_STACK_ENABLE
  The LLVM stack address sanitizer has a know problem that
  causes excessive stack usage in a lot of functions, see
  https://bugs.llvm.org/show_bug.cgi?id=38809
  Disabling asan-stack makes it safe to run kernels build
  with clang-8 with KASAN enabled, though it loses some of
  the functionality.
  This feature is always disabled when compile-testing with clang
  to avoid cluttering the output in stack overflow warnings,
  but clang users can still enable it for builds without
  CONFIG_COMPILE_TEST.        On gcc it is assumed to always be safe
  to use and enabled by default.

KASAN_SW_TAGS
  Enables software tag-based KASAN mode.
  
  This mode require software memory tagging support in the form of
  HWASan-like compiler instrumentation.
  
  Currently this mode is only implemented for arm64 CPUs and relies on
  Top Byte Ignore. This mode requires Clang.
  
  This mode consumes about 1/16th of available memory at kernel start
  and introduces an overhead of ~20% for the rest of the allocations.
  This mode may potentially introduce problems relating to pointer
  casting and comparison, as it embeds tags into the top byte of each
  pointer.
  
  Currently CONFIG_KASAN_SW_TAGS doesn't work with CONFIG_DEBUG_SLAB
  (the resulting kernel does not boot).

KASAN_SW_TAGS_IDENTIFY
  This option enables best-effort identification of bug type
  (use-after-free or out-of-bounds) at the cost of increased
  memory consumption.

KASAN_VMALLOC
  By default, the shadow region for vmalloc space is the read-only
  zero page. This means that KASAN cannot detect errors involving
  vmalloc space.
  
  Enabling this option will hook in to vmap/vmalloc and back those
  mappings with real shadow memory allocated on demand. This allows
  for KASAN to detect more sorts of errors (and to support vmapped
  stacks), but at the cost of higher memory usage.

KCOV
  KCOV exposes kernel code coverage information in a form suitable
  for coverage-guided fuzzing (randomized testing).
  
  If RANDOMIZE_BASE is enabled, PC values will not be stable across
  different machines and across reboots. If you need stable PC values,
  disable RANDOMIZE_BASE.
  
  For more details, see Documentation/dev-tools/kcov.rst.

KCOV_ENABLE_COMPARISONS
  KCOV also exposes operands of every comparison in the instrumented
  code along with operand sizes and PCs of the comparison instructions.
  These operands can be used by fuzzing engines to improve the quality
  of fuzzing coverage.

KCOV_INSTRUMENT_ALL
  If you are doing generic system call fuzzing (like e.g. syzkaller),
  then you will want to instrument the whole kernel and you should
  say y here. If you are doing more targeted fuzzing (like e.g.
  filesystem fuzzing with AFL) then you will want to enable coverage
  for more specific subsets of files, and should say n here.

KCOV_IRQ_AREA_SIZE
  KCOV uses preallocated per-cpu areas to collect coverage from
  soft interrupts. This specifies the size of those areas in the
  number of unsigned long words.

KCSAN
  The Kernel Concurrency Sanitizer (KCSAN) is a dynamic
  data-race detector that relies on compile-time instrumentation.
  KCSAN uses a watchpoint-based sampling approach to detect races.
  
  While KCSAN's primary purpose is to detect data races, it
  also provides assertions to check data access constraints.
  These assertions can expose bugs that do not manifest as
  data races.
  
  See <file:Documentation/dev-tools/kcsan.rst> for more details.

KCSAN_ASSUME_PLAIN_WRITES_ATOMIC
  Assume that plain aligned writes up to word size are atomic by
  default, and also not subject to other unsafe compiler optimizations
  resulting in data races. This will cause KCSAN to not report data
  races due to conflicts where the only plain accesses are aligned
  writes up to word size: conflicts between marked reads and plain
  aligned writes up to word size will not be reported as data races;
  notice that data races between two conflicting plain aligned writes
  will also not be reported.

KCSAN_DEBUG
  No help

KCSAN_DELAY_RANDOMIZE
  If delays should be randomized, where the maximum is KCSAN_UDELAY_*.
  If false, the chosen delays are always the KCSAN_UDELAY_* values
  as defined above.

KCSAN_EARLY_ENABLE
  If KCSAN should be enabled globally as soon as possible. KCSAN can
  later be enabled/disabled via debugfs.

KCSAN_IGNORE_ATOMICS
  Never instrument marked atomic accesses. This option can be used for
  additional filtering. Conflicting marked atomic reads and plain
  writes will never be reported as a data race, however, will cause
  plain reads and marked writes to result in "unknown origin" reports.
  If combined with CONFIG_KCSAN_REPORT_RACE_UNKNOWN_ORIGIN=n, data
  races where at least one access is marked atomic will never be
  reported.
  
  Similar to KCSAN_ASSUME_PLAIN_WRITES_ATOMIC, but including unaligned
  accesses, conflicting marked atomic reads and plain writes will not
  be reported as data races; however, unlike that option, data races
  due to two conflicting plain writes will be reported (aligned and
  unaligned, if CONFIG_KCSAN_ASSUME_PLAIN_WRITES_ATOMIC=n).

KCSAN_INTERRUPT_WATCHER
  If enabled, a task that set up a watchpoint may be interrupted while
  delayed. This option will allow KCSAN to detect races between
  interrupted tasks and other threads of execution on the same CPU.
  
  Currently disabled by default, because not all safe per-CPU access
  primitives and patterns may be accounted for, and therefore could
  result in false positives.

KCSAN_KCOV_BROKEN
  Some versions of clang support either KCSAN and KCOV but not the
  combination of the two.
  See https://bugs.llvm.org/show_bug.cgi?id=45831 for the status
  in newer releases.

KCSAN_NUM_WATCHPOINTS
  Total number of available watchpoints. An address range maps into a
  specific watchpoint slot as specified in kernel/kcsan/encoding.h.
  Although larger number of watchpoints may not be usable due to
  limited number of CPUs, a larger value helps to improve performance
  due to reducing cache-line contention. The chosen default is a
  conservative value; we should almost never observe "no_capacity"
  events (see /sys/kernel/debug/kcsan).

KCSAN_REPORT_ONCE_IN_MS
  Any given race is only reported once in the defined time window.
  Different races may still generate reports within a duration that is
  smaller than the duration defined here. This allows rate limiting
  reporting to avoid flooding the console with reports.  Setting this
  to 0 disables rate limiting.

KCSAN_REPORT_RACE_UNKNOWN_ORIGIN
  If KCSAN should report races where only one access is known, and the
  conflicting access is of unknown origin. This type of race is
  reported if it was only possible to infer a race due to a data value
  change while an access is being delayed on a watchpoint.

KCSAN_REPORT_VALUE_CHANGE_ONLY
  If enabled and a conflicting write is observed via a watchpoint, but
  the data value of the memory location was observed to remain
  unchanged, do not report the data race.

KCSAN_SELFTEST
  Run KCSAN selftests on boot. On test failure, causes the kernel to
  panic. Recommended to be enabled, ensuring critical functionality
  works as intended.

KCSAN_SKIP_WATCH
  The number of per-CPU memory operations to skip, before another
  watchpoint is set up, i.e. one in KCSAN_WATCH_SKIP per-CPU
  memory operations are used to set up a watchpoint. A smaller value
  results in more aggressive race detection, whereas a larger value
  improves system performance at the cost of missing some races.

KCSAN_SKIP_WATCH_RANDOMIZE
  If instruction skip count should be randomized, where the maximum is
  KCSAN_WATCH_SKIP. If false, the chosen value is always
  KCSAN_WATCH_SKIP.

KCSAN_TEST
  KCSAN test focusing on behaviour of the integrated runtime. Tests
  various race scenarios, and verifies the reports generated to
  console. Makes use of KUnit for test organization, and the Torture
  framework for test thread control.
  
  Each test case may run at least up to KCSAN_REPORT_ONCE_IN_MS
  milliseconds. Test run duration may be optimized by building the
  kernel and KCSAN test with KCSAN_REPORT_ONCE_IN_MS set to a lower
  than default value.
  
  Say Y here if you want the test to be built into the kernel and run
  during boot; say M if you want the test to build as a module; say N
  if you are unsure.

KCSAN_UDELAY_INTERRUPT
  For interrupts, the microsecond delay after setting up a watchpoint.
  Interrupts have tighter latency requirements, and their delay should
  be lower than for tasks.

KCSAN_UDELAY_TASK
  For tasks, the microsecond delay after setting up a watchpoint.

KCSAN_VERBOSE
  If enabled, reports show more information about the system state that
  may help better analyze and debug races. This includes held locks and
  IRQ trace events.
  
  While this option should generally be benign, we call into more
  external functions on report generation; if a race report is
  generated from any one of them, system stability may suffer due to
  deadlocks or recursion.  If in doubt, say N.

KDB_CONTINUE_CATASTROPHIC
  This integer controls the behaviour of kdb when the kernel gets a
  catastrophic error, i.e. for a panic or oops.
  When KDB is active and a catastrophic error occurs, nothing extra
  will happen until you type 'go'.
  CONFIG_KDB_CONTINUE_CATASTROPHIC == 0 (default). The first time
  you type 'go', you will be warned by kdb. The secend time you type
  'go', KDB tries to continue. No guarantees that the
  kernel is still usable in this situation.
  CONFIG_KDB_CONTINUE_CATASTROPHIC == 1. KDB tries to continue.
  No guarantees that the kernel is still usable in this situation.
  CONFIG_KDB_CONTINUE_CATASTROPHIC == 2. KDB forces a reboot.
  If you are not sure, say 0.

KDB_DEFAULT_ENABLE
  Specifiers which kdb commands are enabled by default. This may
  be set to 1 or 0 to enable all commands or disable almost all
  commands.
  
  Alternatively the following bitmask applies:
  
    0x0002 - allow arbitrary reads from memory and symbol lookup
    0x0004 - allow arbitrary writes to memory
    0x0008 - allow current register state to be inspected
    0x0010 - allow current register state to be modified
    0x0020 - allow passive inspection (backtrace, process list, lsmod)
    0x0040 - allow flow control management (breakpoint, single step)
    0x0080 - enable signalling of processes
    0x0100 - allow machine to be rebooted
  
  The config option merely sets the default at boot time. Both
  issuing 'echo X > /sys/module/kdb/parameters/cmd_enable' or
  setting with kdb.cmd_enable=X kernel command line option will
  override the default settings.

KDB_KEYBOARD
  KDB can use a PS/2 type keyboard for an input device

KEMPLD_WDT
  Support for the PLD watchdog on some Kontron ETX and COMexpress
  (ETXexpress) modules
  
  This driver can also be built as a module. If so, the module will be
  called kempld_wdt.

KERNEL_BZIP2
  Its compression ratio and speed is intermediate.
  Decompression speed is slowest among the choices.  The kernel
  size is about 10% smaller with bzip2, in comparison to gzip.
  Bzip2 uses a large amount of memory. For modern kernels you
  will need at least 8MB RAM or more for booting.

KERNEL_GZIP
  The old and tried gzip compression. It provides a good balance
  between compression ratio and decompression speed.

KERNEL_LZ4
  LZ4 is an LZ77-type compressor with a fixed, byte-oriented encoding.
  A preliminary version of LZ4 de/compression tool is available at
  <https://code.google.com/p/lz4/>.
  
  Its compression ratio is worse than LZO. The size of the kernel
  is about 8% bigger than LZO. But the decompression speed is
  faster than LZO.

KERNEL_LZMA
  This compression algorithm's ratio is best.  Decompression speed
  is between gzip and bzip2.  Compression is slowest.
  The kernel size is about 33% smaller with LZMA in comparison to gzip.

KERNEL_LZO
  Its compression ratio is the poorest among the choices. The kernel
  size is about 10% bigger than gzip; however its speed
  (both compression and decompression) is the fastest.

KERNEL_UNCOMPRESSED
  Produce uncompressed kernel image. This option is usually not what
  you want. It is useful for debugging the kernel in slow simulation
  environments, where decompressing and moving the kernel is awfully
  slow. This option allows early boot code to skip the decompressor
  and jump right at uncompressed kernel image.

KERNEL_XZ
  XZ uses the LZMA2 algorithm and instruction set specific
  BCJ filters which can improve compression ratio of executable
  code. The size of the kernel is about 30% smaller with XZ in
  comparison to gzip. On architectures for which there is a BCJ
  filter (i386, x86_64, ARM, IA-64, PowerPC, and SPARC), XZ
  will create a few percent smaller kernel than plain LZMA.
  
  The speed is about the same as with LZMA: The decompression
  speed of XZ is better than that of bzip2 but worse than gzip
  and LZO. Compression is slow.

KERNEL_ZSTD
  ZSTD is a compression algorithm targeting intermediate compression
  with fast decompression speed. It will compress better than GZIP and
  decompress around the same speed as LZO, but slower than LZ4. You
  will need at least 192 KB RAM or more for booting. The zstd command
  line tool is required for compression.

KERNFS
  No help

KEXEC
  kexec is a system call that implements the ability to shutdown your
  current kernel, and to start another kernel.  It is like a reboot
  but it is independent of the system firmware.   And like a reboot
  you can start any kernel with it, not just Linux.
  
  The name comes from the similarity to the exec system call.
  
  It is an ongoing process to be certain the hardware in a machine
  is properly shutdown, so do not be surprised if this code does not
  initially work for you.  As of this writing the exact hardware
  interface is strongly in flux, so no good recommendation can be
  made.

KEXEC_BZIMAGE_VERIFY_SIG
  Enable bzImage signature verification support.

KEXEC_CORE
  No help

KEXEC_ELF
  No help

KEXEC_FILE
  This is new version of kexec system call. This system call is
  file based and takes file descriptors as system call argument
  for kernel and initramfs as opposed to list of segments as
  accepted by previous system call.

KEXEC_JUMP
  Jump between original kernel and kexeced kernel and invoke
  code in physical address mode via KEXEC

KEXEC_SIG
  This option makes the kexec_file_load() syscall check for a valid
  signature of the kernel image.  The image can still be loaded without
  a valid signature unless you also enable KEXEC_SIG_FORCE, though if
  there's a signature that we can check, then it must be valid.
  
  In addition to this option, you need to enable signature
  verification for the corresponding kernel image type being
  loaded in order for this to work.

KEXEC_SIG_FORCE
  This option makes kernel signature verification mandatory for
  the kexec_file_load() syscall.

KEYBOARD_ADC
  This driver implements support for buttons connected
  to an ADC using a resistor ladder.
  
  Say Y here if your device has such buttons connected to an ADC.  Your
  board-specific setup logic must also provide a configuration data
  for mapping voltages to buttons.
  
  To compile this driver as a module, choose M here: the
  module will be called adc_keys.

KEYBOARD_ADP5520
  This option enables support for the keypad scan matrix
  on Analog Devices ADP5520 PMICs.
  
  To compile this driver as a module, choose M here: the module will
  be called adp5520-keys.

KEYBOARD_ADP5588
  Say Y here if you want to use a ADP5588/87 attached to your
  system I2C bus.
  
  To compile this driver as a module, choose M here: the
  module will be called adp5588-keys.

KEYBOARD_ADP5589
  Say Y here if you want to use a ADP5585/ADP5589 attached to your
  system I2C bus.
  
  To compile this driver as a module, choose M here: the
  module will be called adp5589-keys.

KEYBOARD_AMIGA
  Say Y here if you are running Linux on any AMIGA and have a keyboard
  attached.
  
  To compile this driver as a module, choose M here: the
  module will be called amikbd.

KEYBOARD_APPLESPI
  Say Y here if you are running Linux on any Apple MacBook8,1 or later,
  or any MacBookPro13,* or MacBookPro14,*.
  
  You will also need to enable appropriate SPI master controllers:
  spi_pxa2xx_platform and spi_pxa2xx_pci for MacBook8,1, and
  spi_pxa2xx_platform and intel_lpss_pci for the rest.
  
  To compile this driver as a module, choose M here: the
  module will be called applespi.

KEYBOARD_ATARI
  Say Y here if you are running Linux on any Atari and have a keyboard
  attached.
  
  To compile this driver as a module, choose M here: the
  module will be called atakbd.

KEYBOARD_ATKBD
  Say Y here if you want to use a standard AT or PS/2 keyboard. Usually
  you'll need this, unless you have a different type keyboard (USB, ADB
  or other). This also works for AT and PS/2 keyboards connected over a
  PS/2 to serial converter.
  
  If unsure, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called atkbd.

KEYBOARD_ATKBD_HP_KEYCODES
  Say Y here if you have a PA-RISC machine and want to use an AT or
  PS/2 keyboard, and your keyboard uses keycodes that are specific to
  PA-RISC keyboards.
  
  Say N if you use a standard keyboard.

KEYBOARD_ATKBD_RDI_KEYCODES
  If you have an RDI PrecisionBook, say Y here if you want to use its
  built-in keyboard (as opposed to an external keyboard).
  
  The PrecisionBook has five keys that conflict with those used by most
  AT and PS/2 keyboards. These are as follows:
  
    PrecisionBook    Standard AT or PS/2
  
    F1               F12
    Left Ctrl        Left Alt
    Caps Lock        Left Ctrl
    Right Ctrl       Caps Lock
    Left             102nd key (the key to the right of Left Shift)
  
  If you say N here, and use the PrecisionBook keyboard, then each key
  in the left-hand column will be interpreted as the corresponding key
  in the right-hand column.
  
  If you say Y here, and use an external keyboard, then each key in the
  right-hand column will be interpreted as the key shown in the
  left-hand column.

KEYBOARD_BCM
  Say Y here if you want to use Broadcom keypad.
  
  To compile this driver as a module, choose M here: the
  module will be called bcm-keypad.

KEYBOARD_CAP11XX
  Say Y here to enable the CAP11XX touch sensor driver.
  
  To compile this driver as a module, choose M here: the
  module will be called cap11xx.

KEYBOARD_CLPS711X
  Say Y here to enable the matrix keypad on the Cirrus Logic
  CLPS711X CPUs.
  
  To compile this driver as a module, choose M here: the
  module will be called clps711x-keypad.

KEYBOARD_CROS_EC
  Say Y here to enable the matrix keyboard used by ChromeOS devices
  and implemented on the ChromeOS EC. You must enable one bus option
  (CROS_EC_I2C or CROS_EC_SPI) to use this.
  
  To compile this driver as a module, choose M here: the
  module will be called cros_ec_keyb.

KEYBOARD_DAVINCI
  Say Y to enable keypad module support for the TI DaVinci
  platforms (DM365).
  
  To compile this driver as a module, choose M here: the
  module will be called davinci_keyscan.

KEYBOARD_DLINK_DIR685
  If you say yes here you get support for the D-Link DIR-685
  touchkeys.
  
  To compile this driver as a module, choose M here: the
  module will be called dlink-dir685-touchkeys.

KEYBOARD_EP93XX
  Say Y here to enable the matrix keypad on the Cirrus EP93XX.
  
  To compile this driver as a module, choose M here: the
  module will be called ep93xx_keypad.

KEYBOARD_GOLDFISH_EVENTS
  Say Y here to get an input event device for the Goldfish virtual
  device emulator.
  
  To compile this driver as a module, choose M here: the
  module will be called goldfish-events.

KEYBOARD_GPIO
  This driver implements support for buttons connected
  to GPIO pins of various CPUs (and some other chips).
  
  Say Y here if your device has buttons connected
  directly to such GPIO pins.  Your board-specific
  setup logic must also provide a platform device,
  with configuration data saying which GPIOs are used.
  
  To compile this driver as a module, choose M here: the
  module will be called gpio_keys.

KEYBOARD_GPIO_POLLED
  This driver implements support for buttons connected
  to GPIO pins that are not capable of generating interrupts.
  
  Say Y here if your device has buttons connected
  directly to such GPIO pins.  Your board-specific
  setup logic must also provide a platform device,
  with configuration data saying which GPIOs are used.
  
  To compile this driver as a module, choose M here: the
  module will be called gpio_keys_polled.

KEYBOARD_HIL
  The "Human Interface Loop" is a older, 8-channel USB-like
  controller used in several Hewlett Packard models.
  This driver implements support for HIL-keyboards and pointing
  devices (mice, tablets, touchscreens) attached
  to your machine, so normally you should say Y here.

KEYBOARD_HIL_OLD
  The "Human Interface Loop" is a older, 8-channel USB-like
  controller used in several Hewlett Packard models. This driver
  was adapted from the one written for m68k/hp300, and implements
  support for a keyboard attached to the HIL port, but not for
  any other types of HIL input devices like mice or tablets.
  However, it has been thoroughly tested and is stable.
  
  If you want full HIL support including support for multiple
  keyboards, mice, and tablets, you have to enable the
  "HP System Device Controller i8042 Support" in the input/serio
  submenu.

KEYBOARD_HP6XX
  Say Y here if you have a HP Jornada 620/660/680/690 and want to
  support the built-in keyboard.
  
  To compile this driver as a module, choose M here: the
  module will be called jornada680_kbd.

KEYBOARD_HP7XX
  Say Y here if you have a HP Jornada 710/720/728 and want to
  support the built-in keyboard.
  
  To compile this driver as a module, choose M here: the
  module will be called jornada720_kbd.

KEYBOARD_IMX
  Enable support for IMX keypad port.
  
  To compile this driver as a module, choose M here: the
  module will be called imx_keypad.

KEYBOARD_IMX_SC_KEY
  This is the system controller key driver for NXP i.MX SoCs with
  system controller inside.
  
  To compile this driver as a module, choose M here: the
  module will be called imx_sc_key.

KEYBOARD_IPAQ_MICRO
  Say Y to enable support for the buttons attached to
  Micro peripheral controller on iPAQ h3100/h3600/h3700
  
  To compile this driver as a module, choose M here: the
  module will be called ipaq-micro-keys.

KEYBOARD_IQS62X
  Say Y here to enable key and switch support for the Azoteq IQS620A,
  IQS621, IQS622, IQS624 and IQS625 multi-function sensors.
  
  To compile this driver as a module, choose M here: the module will
  be called iqs62x-keys.

KEYBOARD_LKKBD
  Say Y here if you want to use a LK201 or LK401 style serial
  keyboard. This keyboard is also useable on PCs if you attach
  it with the inputattach program. The connector pinout is
  described within lkkbd.c.
  
  To compile this driver as a module, choose M here: the
  module will be called lkkbd.

KEYBOARD_LM8323
  If you say yes here you get support for the National Semiconductor
  LM8323 keypad controller.
  
  To compile this driver as a module, choose M here: the
  module will be called lm8323.

KEYBOARD_LM8333
  If you say yes here you get support for the National Semiconductor
  LM8333 keypad controller.
  
  To compile this driver as a module, choose M here: the
  module will be called lm8333.

KEYBOARD_LOCOMO
  Say Y here if you are running Linux on a Sharp Zaurus Collie or Poodle based PDA
  
  To compile this driver as a module, choose M here: the
  module will be called locomokbd.

KEYBOARD_LPC32XX
  Say Y here if you want to use NXP LPC32XX SoC key scanner interface,
  connected to a key matrix.
  
  To compile this driver as a module, choose M here: the
  module will be called lpc32xx-keys.

KEYBOARD_MAPLE
  Say Y here if you have a Dreamcast console running Linux and have
  a keyboard attached to its Maple bus.
  
  To compile this driver as a module, choose M here: the
  module will be called maple_keyb.

KEYBOARD_MATRIX
  Enable support for GPIO driven matrix keypad.
  
  To compile this driver as a module, choose M here: the
  module will be called matrix_keypad.

KEYBOARD_MAX7359
  If you say yes here you get support for the Maxim MAX7359 Key
  Switch Controller chip. This providers microprocessors with
  management of up to 64 key switches
  
  To compile this driver as a module, choose M here: the
  module will be called max7359_keypad.

KEYBOARD_MCS
  Say Y here if you have the MELFAS MCS5000/5080 touchkey controller
  chip in your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called mcs_touchkey.

KEYBOARD_MPR121
  Say Y here if you have Freescale MPR121 touchkey controller
  chip in your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called mpr121_touchkey.

KEYBOARD_MTK_PMIC
  Say Y here if you want to use the pmic keys (powerkey/homekey).
  
  To compile this driver as a module, choose M here: the
  module will be called pmic-keys.

KEYBOARD_NEWTON
  Say Y here if you have a Newton keyboard on a serial port.
  
  To compile this driver as a module, choose M here: the
  module will be called newtonkbd.

KEYBOARD_NOMADIK
  Say Y here if you want to use a keypad provided on the SKE controller
  used on the Ux500 and Nomadik platforms
  
  To compile this driver as a module, choose M here: the
  module will be called nmk-ske-keypad.

KEYBOARD_NSPIRE
  Say Y here if you want to use the built-in keypad on TI-NSPIRE.
  
  To compile this driver as a module, choose M here: the
  module will be called nspire-keypad.

KEYBOARD_NVEC
  Say Y here to enable support for a keyboard connected to
  a nVidia compliant embedded controller.
  
  To compile this driver as a module, say M here: the module will be
  called keyboard-nvec

KEYBOARD_OMAP
  Say Y here if you want to use the OMAP keypad.
  
  To compile this driver as a module, choose M here: the
  module will be called omap-keypad.

KEYBOARD_OMAP4
  Say Y here if you want to use the OMAP4+ keypad.
  
  To compile this driver as a module, choose M here: the
  module will be called omap4-keypad.

KEYBOARD_OPENCORES
  Say Y here if you want to use the OpenCores Keyboard Controller
  http://www.opencores.org/project,keyboardcontroller
  
  To compile this driver as a module, choose M here; the
  module will be called opencores-kbd.

KEYBOARD_PMIC8XXX
  Say Y here if you want to enable the driver for the PMIC8XXX
  keypad provided as a reference design from Qualcomm. This is intended
  to support upto 18x8 matrix based keypad design.
  
  To compile this driver as a module, choose M here: the module will
  be called pmic8xxx-keypad.

KEYBOARD_PXA27x
  Enable support for PXA27x/PXA3xx keypad controller.
  
  To compile this driver as a module, choose M here: the
  module will be called pxa27x_keypad.

KEYBOARD_PXA930_ROTARY
  Enable support for PXA930/PXA935 Enhanced Rotary Controller.
  
  To compile this driver as a module, choose M here: the
  module will be called pxa930_rotary.

KEYBOARD_QT1050
  Say Y here if you want to use Microchip AT42QT1050 QTouch
  Sensor chip as input device.
  
  To compile this driver as a module, choose M here:
  the module will be called qt1050

KEYBOARD_QT1070
  Say Y here if you want to use Atmel AT42QT1070 QTouch
  Sensor chip as input device.
  
  To compile this driver as a module, choose M here:
  the module will be called qt1070

KEYBOARD_QT2160
  If you say yes here you get support for Atmel AT42QT2160 Touch
  Sensor chip as a keyboard input.
  
  This driver can also be built as a module. If so, the module
  will be called qt2160.

KEYBOARD_SAMSUNG
  Say Y here if you want to use the keypad on your Samsung mobile
  device.
  
  To compile this driver as a module, choose M here: the
  module will be called samsung-keypad.

KEYBOARD_SH_KEYSC
  Say Y here if you want to use a keypad attached to the KEYSC block
  on SuperH processors such as sh7722 and sh7343.
  
  To compile this driver as a module, choose M here: the
  module will be called sh_keysc.

KEYBOARD_SNVS_PWRKEY
  This is the snvs powerkey driver for the Freescale i.MX application
  processors.
  
  To compile this driver as a module, choose M here; the
  module will be called snvs_pwrkey.

KEYBOARD_SPEAR
  Say Y here if you want to use the SPEAR keyboard.
  
  To compile this driver as a module, choose M here: the
  module will be called spear-keyboard.

KEYBOARD_STMPE
  Say Y here if you want to use the keypad controller on STMPE I/O
  expanders.
  
  To compile this driver as a module, choose M here: the module will be
  called stmpe-keypad.

KEYBOARD_STOWAWAY
  Say Y here if you have a Stowaway keyboard on a serial port.
  Stowaway compatible keyboards like Dicota Input-PDA keyboard
  are also supported by this driver.
  
  To compile this driver as a module, choose M here: the
  module will be called stowaway.

KEYBOARD_ST_KEYSCAN
  Say Y here if you want to use a keypad attached to the keyscan block
  on some STMicroelectronics SoC devices.
  
  To compile this driver as a module, choose M here: the
  module will be called st-keyscan.

KEYBOARD_SUN4I_LRADC
  This selects support for the Allwinner low res adc attached tablet
  keys found on Allwinner sunxi SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called sun4i-lradc-keys.

KEYBOARD_SUNKBD
  Say Y here if you want to use a Sun Type 4 or Type 5 keyboard,
  connected either to the Sun keyboard connector or to an serial
  (RS-232) port via a simple adapter.
  
  To compile this driver as a module, choose M here: the
  module will be called sunkbd.

KEYBOARD_TC3589X
  Say Y here if you want to use the keypad controller on
  TC35892/3 I/O expander.
  
  To compile this driver as a module, choose M here: the
  module will be called tc3589x-keypad.

KEYBOARD_TCA6416
  This driver implements basic keypad functionality
  for keys connected through TCA6416/TCA6408A IO expanders.
  
  Say Y here if your device has keys connected to
  TCA6416/TCA6408A IO expander. Your board-specific setup logic
  must also provide pin-mask details(of which TCA6416 pins
  are used for keypad).
  
  If enabled the entire TCA6416 device will be managed through
  this driver.
  
  To compile this driver as a module, choose M here: the
  module will be called tca6416_keypad.

KEYBOARD_TCA8418
  This driver implements basic keypad functionality
  for keys connected through TCA8418 keypad decoder.
  
  Say Y here if your device has keys connected to
  TCA8418 keypad decoder.
  
  If enabled the complete TCA8418 device will be managed through
  this driver.
  
  To compile this driver as a module, choose M here: the
  module will be called tca8418_keypad.

KEYBOARD_TEGRA
  Say Y here if you want to use a matrix keyboard connected directly
  to the internal keyboard controller on Tegra SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called tegra-kbc.

KEYBOARD_TM2_TOUCHKEY
  Say Y here to enable device driver for tm2-touchkey with
  LED control for the Exynos5433 TM2 board.
  
  To compile this driver as a module, choose M here.
  module will be called tm2-touchkey.

KEYBOARD_TWL4030
  Say Y here if your board use the keypad controller on
  TWL4030 family chips.  It's safe to say enable this
  even on boards that don't use the keypad controller.
  
  To compile this driver as a module, choose M here: the
  module will be called twl4030_keypad.

KEYBOARD_XTKBD
  Say Y here if you want to use the old IBM PC/XT keyboard (or
  compatible) on your system. This is only possible with a
  parallel port keyboard adapter, you cannot connect it to the
  keyboard port on a PC that runs Linux.
  
  To compile this driver as a module, choose M here: the
  module will be called xtkbd.

KEYS
  This option provides support for retaining authentication tokens and
  access keys in the kernel.
  
  It also includes provision of methods by which such keys might be
  associated with a process so that network filesystems, encryption
  support and the like can find them.
  
  Furthermore, a special type of key is available that acts as keyring:
  a searchable sequence of keys. Each process is equipped with access
  to five standard keyrings: UID-specific, GID-specific, session,
  process and thread.
  
  If you are unsure as to whether this is required, answer N.

KEYSTONE_IRQ
  Support for Texas Instruments Keystone 2 IRQ controller IP which
  is part of the Keystone 2 IPC mechanism

KEYSTONE_NAVIGATOR_DMA
  Say y tp enable support for the Keystone Navigator Packet DMA on
  on Keystone family of devices. It sets up the dma channels for the
  Queue Manager Sub System.
  
  If unsure, say N.

KEYSTONE_NAVIGATOR_QMSS
  Say y here to support the Keystone multicore Navigator Queue
  Manager support. The Queue Manager is a hardware module that
  is responsible for accelerating management of the packet queues.
  Packets are queued/de-queued by writing/reading descriptor address
  to a particular memory mapped location in the Queue Manager module.
  
  If unsure, say N.

KEYSTONE_REMOTEPROC
  Say Y here here to support Keystone remote processors (DSP)
  via the remote processor framework.
  
  It's safe to say N here if you're not interested in the Keystone
  DSPs or just want to use a bare minimum kernel.

KEYSTONE_TIMER
  Enables support for the Keystone timer.

KEYSTONE_USB_PHY
  Enable this to support Keystone USB phy. This driver provides
  interface to interact with USB 2.0 and USB 3.0 PHY that is part
  of the Keystone SOC.

KEYS_REQUEST_CACHE
  This option causes the result of the last successful request_key()
  call that didn't upcall to the kernel to be cached temporarily in the
  task_struct.  The cache is cleared by exit and just prior to the
  resumption of userspace.
  
  This allows the key used for multiple step processes where each step
  wants to request a key that is likely the same as the one requested
  by the last step to save on the searching.
  
  An example of such a process is a pathwalk through a network
  filesystem in which each method needs to request an authentication
  key.  Pathwalk will call multiple methods for each dentry traversed
  (permission, d_revalidate, lookup, getxattr, getacl, ...).

KEY_DH_OPERATIONS
  This option provides support for calculating Diffie-Hellman
  public keys and shared secrets using values stored as keys
  in the kernel.
  
  If you are unsure as to whether this is required, answer N.

KEY_NOTIFICATIONS
  This option provides support for getting change notifications on keys
  and keyrings on which the caller has View permission.  This makes use
  of the /dev/watch_queue misc device to handle the notification
  buffer and provides KEYCTL_WATCH_KEY to enable/disable watches.

KGDB
  If you say Y here, it will be possible to remotely debug the
  kernel using gdb.  It is recommended but not required, that
  you also turn on the kernel config option
  CONFIG_FRAME_POINTER to aid in producing more reliable stack
  backtraces in the external debugger.  Documentation of
  kernel debugger is available at http://kgdb.sourceforge.net
  as well as in Documentation/dev-tools/kgdb.rst.  If
  unsure, say N.

KGDB_HONOUR_BLOCKLIST
  If set to Y the debug core will use the kprobe blocklist to
  identify symbols where it is unsafe to set breakpoints.
  In particular this disallows instrumentation of functions
  called during debug trap handling and thus makes it very
  difficult to inadvertently provoke recursive trap handling.
  
  If unsure, say Y.

KGDB_KDB
  KDB frontend for kernel

KGDB_LOW_LEVEL_TRAP
  This will add an extra call back to kgdb for the breakpoint
  exception handler which will allow kgdb to step through a
  notify handler.

KGDB_SERIAL_CONSOLE
  Share a serial console with kgdb. Sysrq-g must be used
  to break in initially.

KGDB_TESTS
  This is a kgdb I/O module specifically designed to test
  kgdb's internal functions.  This kgdb I/O module is
  intended to for the development of new kgdb stubs
  as well as regression testing the kgdb internals.
  See the drivers/misc/kgdbts.c for the details about
  the tests.  The most basic of this I/O module is to boot
  a kernel boot arguments "kgdbwait kgdbts=V1F100"

KGDB_TESTS_BOOT_STRING
  This is the command string to send the kgdb test suite on
  boot.  See the drivers/misc/kgdbts.c for detailed
  information about other strings you could use beyond the
  default of V1F100.

KGDB_TESTS_ON_BOOT
  Run the kgdb tests on boot up automatically without the need
  to pass in a kernel parameter

KHADAS_MCU_FAN_THERMAL
  If you say yes here you get support for the FAN controlled
  by the Microcontroller found on the Khadas VIM boards.

KIRKWOOD_CLK
  No help

KIRKWOOD_THERMAL
  Support for the Kirkwood thermal sensor driver into the Linux thermal
  framework. Only kirkwood 88F6282 and 88F6283 have this sensor.

KMAP_LOCAL
  No help

KMX61
  Say Y here if you want to build a driver for Kionix KMX61 6-axis
  accelerometer and magnetometer.
  To compile this driver as module, choose M here: the module will
  be called kmx61.

KORINA
  If you have a Mikrotik RouterBoard 500 or IDT RC32434
  based system say Y. Otherwise say N.

KPC2000
  Select this if you wish to use the Daktronics KPC PCI devices
  
  If unsure, say N.

KPC2000_CORE
  Say Y here if you wish to support the Daktronics KPC PCI
  device in UIO mode.
  
  To compile this driver as a module, choose M here: the module
  will be called kpc2000
  
  If unsure, say N.

KPC2000_DMA
  Say Y here if you wish to support the Daktronics DMA controller.
  
  To compile this driver as a module, choose M here: the module
  will be called kpc2000_dma
  
  If unsure, say N.
  

KPC2000_I2C
  Say Y here if you wish to support the Daktronics KPC PCI
  device in I2C mode.
  
  To compile this driver as a module, choose M here: the module
  will be called kpc2000_i2c
  
  If unsure, say N.

KPC2000_SPI
  Say Y here if you wish to support the Daktronics KPC PCI
  device in SPI mode.
  
  To compile this driver as a module, choose M here: the module
  will be called kpc2000_spi
  
  If unsure, say N.

KPROBES
  Kprobes allows you to trap at almost any kernel address and
  execute a callback function.  register_kprobe() establishes
  a probepoint and specifies the callback.  Kprobes is useful
  for kernel debugging, non-intrusive instrumentation and testing.
  If in doubt, say "N".

KPROBES_ON_FTRACE
  If function tracer is enabled and the arch supports full
  passing of pt_regs to function tracing, then kprobes can
  optimize on top of function tracing.

KPROBES_SANITY_TEST
  This option provides for testing basic kprobes functionality on
  boot. Samples of kprobe and kretprobe are inserted and
  verified for functionality.
  
  Say N if you are unsure.

KPROBE_EVENTS
  This allows the user to add tracing events (similar to tracepoints)
  on the fly via the ftrace interface. See
  Documentation/trace/kprobetrace.rst for more details.
  
  Those events can be inserted wherever kprobes can probe, and record
  various register and memory values.
  
  This option is also required by perf-probe subcommand of perf tools.
  If you want to use perf tools, this option is strongly recommended.

KPROBE_EVENTS_ON_NOTRACE
  This is only for the developers who want to debug ftrace itself
  using kprobe events.
  
  If kprobes can use ftrace instead of breakpoint, ftrace related
  functions are protected from kprobe-events to prevent an infinit
  recursion or any unexpected execution path which leads to a kernel
  crash.
  
  This option disables such protection and allows you to put kprobe
  events on ftrace functions for debugging ftrace by itself.
  Note that this might let you shoot yourself in the foot.
  
  If unsure, say N.

KPROBE_EVENT_GEN_TEST
  This option creates a test module to check the base
  functionality of in-kernel kprobe event definition.
  
  To test, insert the module, and then check the trace buffer
  for the generated kprobe events.
  
  If unsure, say N.

KPSS_XCC
  Support for the Krait ACC and GCC clock controllers. Say Y
  if you want to support CPU frequency scaling on devices such
  as MSM8960, APQ8064, etc.

KRAITCC
  Support for the Krait CPU clocks on Qualcomm devices.
  Say Y if you want to support CPU frequency scaling.

KRAIT_CLOCKS
  No help

KRETPROBES
  No help

KS0108
  If you have a LCD controlled by one or more KS0108
  controllers, say Y. You will need also another more specific
  driver for your LCD.
  
  Depends on Parallel Port support. If you say Y at
  parport, you will be able to compile this as a module (M)
  and built-in as well (Y).
  
  To compile this as a module, choose M here:
  the module will be called ks0108.
  
  If unsure, say N.

KS0108_DELAY
  Amount of time the ks0108 should wait between each control write
  to the parallel port.
  
  If your LCD seems to miss random writings, increment this.
  
  If you don't know what I'm talking about, ignore it.
  
  If you compile this as a module, you can still override this
  value using the module parameters.

KS0108_PORT
  The address of the parallel port where the LCD is connected.
  
  The first  standard parallel port address is 0x378.
  The second standard parallel port address is 0x278.
  The third  standard parallel port address is 0x3BC.
  
  You can specify a different address if you need.
  
  If you don't know what I'm talking about, load the parport module,
  and execute "dmesg" or "cat /proc/ioports". You can see there how
  many parallel ports are present and which address each one has.
  
  Usually you only need to use 0x378.
  
  If you compile this as a module, you can still override this
  using the module parameters.

KS7010
  This is a driver for KeyStream KS7010 based SDIO WIFI cards. It is
  found on at least later Spectec SDW-821 (FCC-ID "S2Y-WLAN-11G-K" only,
  sadly not FCC-ID "S2Y-WLAN-11B-G") and Spectec SDW-823 microSD cards.

KS8842
  This platform driver is for KSZ8841(1-port) / KS8842(2-port)
  ethernet switch chip (managed, VLAN, QoS) from Micrel or
  Timberdale(FPGA).

KS8851
  SPI driver for Micrel KS8851 SPI attached network chip.

KS8851_MLL
  This platform driver is for Micrel KS8851 Address/data bus
  multiplexed network chip.

KSM
  Enable Kernel Samepage Merging: KSM periodically scans those areas
  of an application's address space that an app has advised may be
  mergeable.  When it finds pages of identical content, it replaces
  the many instances by a single page with that content, so
  saving memory until one or another app needs to modify the content.
  Recommended for use with KVM, or with other duplicative applications.
  See Documentation/vm/ksm.rst for more information: KSM is inactive
  until a program has madvised that an area is MADV_MERGEABLE, and
  root has set /sys/kernel/mm/ksm/run to 1 (if CONFIG_SYSFS is set).

KSZ884X_PCI
  This PCI driver is for Micrel KSZ8841/KSZ8842 PCI Ethernet chip.
  
  To compile this driver as a module, choose M here. The module
  will be called ksz884x.

KUNIT
  Enables support for kernel unit tests (KUnit), a lightweight unit
  testing and mocking framework for the Linux kernel. These tests are
  able to be run locally on a developer's workstation without a VM or
  special hardware when using UML. Can also be used on most other
  architectures. For more information, please see
  Documentation/dev-tools/kunit/.

KUNIT_ALL_TESTS
  Enables all KUnit tests, if they can be enabled.
  KUnit tests run during boot and output the results to the debug log
  in TAP format (http://testanything.org/). Only useful for kernel devs
  running the KUnit test harness, and not intended for inclusion into a
  production build.
  
  For more information on KUnit and unit tests in general please refer
  to the KUnit documentation in Documentation/dev-tools/kunit/.
  
  If unsure, say N.

KUNIT_DEBUGFS
  Enable debugfs representation for kunit.  Currently this consists
  of /sys/kernel/debug/kunit/<test_suite>/results files for each
  test suite, which allow users to see results of the last test suite
  run that occurred.

KUNIT_DRIVER_PE_TEST
  No help

KUNIT_EXAMPLE_TEST
  Enables an example unit test that illustrates some of the basic
  features of KUnit. This test only exists to help new users understand
  what KUnit is and how it is used. Please refer to the example test
  itself, lib/kunit/example-test.c, for more information. This option
  is intended for curious hackers who would like to understand how to
  use KUnit for kernel development.

KUNIT_TEST
  Enables the unit tests for the KUnit test framework. These tests test
  the KUnit test framework itself; the tests are both written using
  KUnit and test KUnit. This option should only be enabled for testing
  purposes by developers interested in testing that KUnit works as
  expected.

KVM
  Support hosting fully virtualized guest machines using hardware
  virtualization extensions.  You will need a fairly recent
  processor equipped with virtualization extensions. You will also
  need to select one or more of the processor modules below.
  
  This module provides access to the hardware capabilities through
  a character device node named /dev/kvm.
  
  To compile this as a module, choose M here: the module
  will be called kvm.
  
  If unsure, say N.

KVM_AMD
  Provides support for KVM on AMD processors equipped with the AMD-V
  (SVM) extensions.
  
  To compile this as a module, choose M here: the module
  will be called kvm-amd.

KVM_AMD_SEV
  Provides support for launching Encrypted VMs (SEV) and Encrypted VMs
  with Encrypted State (SEV-ES) on AMD processors.

KVM_ASYNC_PF
  No help

KVM_ASYNC_PF_SYNC
  No help

KVM_COMPAT
  No help

KVM_GENERIC_DIRTYLOG_READ_PROTECT
  No help

KVM_GUEST
  This option enables various optimizations for running under the KVM
  hypervisor. It includes a paravirtualized clock, so that instead
  of relying on a PIT (or probably other) emulation by the
  underlying device model, the host provides the guest with
  timing infrastructure such as time of day, and system time

KVM_INTEL
  Provides support for KVM on processors equipped with Intel's VT
  extensions, a.k.a. Virtual Machine Extensions (VMX).
  
  To compile this as a module, choose M here: the module
  will be called kvm-intel.

KVM_MMIO
  No help

KVM_MMU_AUDIT
  This option adds a R/W kVM module parameter 'mmu_audit', which allows
  auditing of KVM MMU events at runtime.

KVM_VFIO
  No help

KVM_WERROR
  Add -Werror to the build flags for KVM.
  
  If in doubt, say "N".

KVM_XFER_TO_GUEST_WORK
  No help

KXCJK1013
  Say Y here if you want to build a driver for the Kionix KXCJK-1013
  triaxial acceleration sensor. This driver also supports KXCJ9-1008,
  KXTJ2-1009 and KXTF9.
  
  To compile this driver as a module, choose M here: the module will
  be called kxcjk-1013.

KXSD9
  Say yes here to build support for the Kionix KXSD9 accelerometer.
  It can be accessed using an (optional) SPI or I2C interface.
  
  To compile this driver as a module, choose M here: the module
  will be called kxsd9.

KXSD9_I2C
  Say yes here to enable the Kionix KXSD9 accelerometer
  I2C transport channel.

KXSD9_SPI
  Say yes here to enable the Kionix KXSD9 accelerometer
  SPI transport channel.

L2TP
  Layer Two Tunneling Protocol
  
  From RFC 2661 <http://www.ietf.org/rfc/rfc2661.txt>.
  
  L2TP facilitates the tunneling of packets across an
  intervening network in a way that is as transparent as
  possible to both end-users and applications.
  
  L2TP is often used to tunnel PPP traffic over IP
  tunnels. One IP tunnel may carry thousands of individual PPP
  connections. L2TP is also used as a VPN protocol, popular
  with home workers to connect to their offices.
  
  L2TPv3 allows other protocols as well as PPP to be carried
  over L2TP tunnels. L2TPv3 is defined in RFC 3931
  <http://www.ietf.org/rfc/rfc3931.txt>.
  
  The kernel component handles only L2TP data packets: a
  userland daemon handles L2TP the control protocol (tunnel
  and session setup). One such daemon is OpenL2TP
  (http://openl2tp.org/).
  
  If you don't need L2TP, say N. To compile all L2TP code as
  modules, choose M here.

L2TP_DEBUGFS
  Support for l2tp directory in debugfs filesystem. This may be
  used to dump internal state of the l2tp drivers for problem
  analysis.
  
  If unsure, say 'Y'.
  
  To compile this driver as a module, choose M here. The module
  will be called l2tp_debugfs.

L2TP_ETH
  Support for carrying raw ethernet frames over L2TPv3.
  
  From RFC 4719 <http://www.ietf.org/rfc/rfc4719.txt>.
  
  The Layer 2 Tunneling Protocol, Version 3 (L2TPv3) can be
  used as a control protocol and for data encapsulation to set
  up Pseudowires for transporting layer 2 Packet Data Units
  across an IP network [RFC3931].
  
  This driver provides an ethernet virtual interface for each
  L2TP ethernet pseudowire instance. Standard Linux tools may
  be used to assign an IP address to the local virtual
  interface, or add the interface to a bridge.
  
  If you are using L2TPv3, you will almost certainly want to
  enable this option.
  
  To compile this driver as a module, choose M here. The module
  will be called l2tp_eth.

L2TP_IP
  Support for L2TP-over-IP socket family.
  
  The L2TPv3 protocol defines two possible encapsulations for
  L2TP frames, namely UDP and plain IP (without UDP). This
  driver provides a new L2TPIP socket family with which
  userspace L2TPv3 daemons may create L2TP/IP tunnel sockets
  when UDP encapsulation is not required. When L2TP is carried
  in IP packets, it used IP protocol number 115, so this port
  must be enabled in firewalls.
  
  To compile this driver as a module, choose M here. The module
  will be called l2tp_ip.

L2TP_V3
  Layer Two Tunneling Protocol Version 3
  
  From RFC 3931 <http://www.ietf.org/rfc/rfc3931.txt>.
  
  The Layer Two Tunneling Protocol (L2TP) provides a dynamic
  mechanism for tunneling Layer 2 (L2) "circuits" across a
  packet-oriented data network (e.g., over IP).  L2TP, as
  originally defined in RFC 2661, is a standard method for
  tunneling Point-to-Point Protocol (PPP) [RFC1661] sessions.
  L2TP has since been adopted for tunneling a number of other
  L2 protocols, including ATM, Frame Relay, HDLC and even raw
  ethernet frames.
  
  If you are connecting to L2TPv3 equipment, or you want to
  tunnel raw ethernet frames using L2TP, say Y here. If
  unsure, say N.

LAN743X
  Support for the Microchip LAN743x PCI Express Gigabit Ethernet chip
  
  To compile this driver as a module, choose M here. The module will be
  called lan743x.

LANCE
  If you have a network (Ethernet) card of this type, say Y here.
  Some LinkSys cards are of this type.
  
  To compile this driver as a module, choose M here: the module
  will be called lance.  This is recommended.

LANMEDIA
  Driver for the following Lan Media family of serial boards:
  
  - LMC 1000 board allows you to connect synchronous serial devices
  (for example base-band modems, or any other device with the X.21,
  V.24, V.35 or V.36 interface) to your Linux box.
  
  - LMC 1200 with on board DSU board allows you to connect your Linux
  box directly to a T1 or E1 circuit.
  
  - LMC 5200 board provides a HSSI interface capable of running up to
  52 Mbits per second.
  
  - LMC 5245 board connects directly to a T3 circuit saving the
  additional external hardware.
  
  To change setting such as clock source you will need lmcctl.
  It is available at <ftp://ftp.lanmedia.com/> (broken link).
  
  To compile this driver as a module, choose M here: the
  module will be called lmc.

LANTIQ_ETOP
  Support for the MII0 inside the Lantiq SoC

LANTIQ_WDT
  Hardware driver for the Lantiq SoC Watchdog Timer.

LANTIQ_XRX200
  Support for the PMAC of the Gigabit switch (GSWIP) inside the
  Lantiq / Intel VRX200 VDSL SoC

LAPB
  Link Access Procedure, Balanced (LAPB) is the data link layer (i.e.
  the lower) part of the X.25 protocol. It offers a reliable
  connection service to exchange data frames with one other host, and
  it is used to transport higher level protocols (mostly X.25 Packet
  Layer, the higher part of X.25, but others are possible as well).
  Usually, LAPB is used with specialized X.21 network cards, but Linux
  currently supports LAPB only over Ethernet connections. If you want
  to use LAPB connections over Ethernet, say Y here and to "LAPB over
  Ethernet driver" below. Read
  <file:Documentation/networking/lapb-module.rst> for technical
  details.
  
  To compile this driver as a module, choose M here: the
  module will be called lapb.  If unsure, say N.

LAPBETHER
  Driver for a pseudo device (typically called /dev/lapb0) which allows
  you to open an LAPB point-to-point connection to some other computer
  on your Ethernet network.
  
  In order to do this, you need to say Y or M to the driver for your
  Ethernet card as well as to "LAPB Data Link Driver".
  
  To compile this driver as a module, choose M here: the
  module will be called lapbether.
  
  If unsure, say N.

LASI_82596
  Say Y here to support the builtin Intel 82596 ethernet controller
  found in Hewlett-Packard PA-RISC machines with 10Mbit ethernet.

LATENCYTOP
  Enable this option if you want to use the LatencyTOP tool
  to find out which userspace is blocking on what kernel operations.

LATTICE_ECP3_CONFIG
  This option enables support for bitstream configuration (programming
  or loading) of the Lattice ECP3 FPGA family via SPI.
  
  If unsure, say N.

LCD2S
  This is a driver that lets you use the lcd2s 20x4 character display
  from Modtronix engineering as a console output device. The display
  is a simple single color character display. You have to connect it
  to an I2C bus.

LCD_AMS369FG06
  If you have an AMS369FG06 AMOLED Panel, say Y to enable its
  LCD control driver.

LCD_CLASS_DEVICE
  This framework adds support for low-level control of LCD.
  Some framebuffer devices connect to platform-specific LCD modules
  in order to have a platform-specific way to control the flat panel
  (contrast and applying power to the LCD (not to the backlight!)).
  
  To have support for your specific LCD panel you will have to
  select the proper drivers which depend on this option.

LCD_CORGI
  Say y here to support the LCD panels usually found on SHARP
  corgi (C7x0) and spitz (Cxx00) models.

LCD_HP700
  If you have an HP Jornada 700 series handheld (710/720/728)
  say Y to enable LCD control driver.

LCD_HX8357
  If you have a HX-8357 LCD panel, say Y to enable its LCD control
  driver.

LCD_ILI922X
  If you have a panel based on the ILI9221/9222 controller
  chip then say y to include a driver for it.

LCD_ILI9320
  If you have a panel based on the ILI9320 controller chip
  then say y to include a power driver for it.

LCD_L4F00242T03
  SPI driver for Epson L4F00242T03. This provides basic support
  for init and powering the LCD up/down through a sysfs interface.

LCD_LMS283GF05
  SPI driver for Samsung LMS283GF05. This provides basic support
  for powering the LCD up/down through a sysfs interface.

LCD_LMS501KF03
  If you have an LMS501KF03 LCD Panel, say Y to enable its
  LCD control driver.

LCD_LTV350QV
  If you have a Samsung LTV350QV LCD panel, say y to include a
  power control driver for it.  The panel starts up in power
  off state, so you need this driver in order to see any
  output.
  
  The LTV350QV panel is present on all ATSTK1000 boards.

LCD_OTM3225A
  If you have a panel based on the OTM3225A controller
  chip then say y to include a driver for it.

LCD_PLATFORM
  This driver provides a platform-device registered LCD power
  control interface.

LCD_TDO24M
  If you have a Toppoly TDO24M/TDO35S series LCD panel, say y here to
  include the support for it.

LCD_TOSA
  If you have an Sharp SL-6000 Zaurus say Y to enable a driver
  for its LCD.

LCD_VGG2432A4
  If you have a VGG2432A4 panel based on the ILI9320 controller chip
  then say y to include a power driver for it.

LCS
  Select this option if you want to use LCS networking on IBM System z.
  This device driver supports FDDI (IEEE 802.7) and Ethernet.
  To compile as a module, choose M. The module name is lcs.
  If you do not know what it is, it's safe to choose Y.

LDISC_AUTOLOAD
  Historically the kernel has always automatically loaded any
  line discipline that is in a kernel module when a user asks
  for it to be loaded with the TIOCSETD ioctl, or through other
  means.  This is not always the best thing to do on systems
  where you know you will not be using some of the more
  "ancient" line disciplines, so prevent the kernel from doing
  this unless the request is coming from a process with the
  CAP_SYS_MODULE permissions.
  
  Say 'Y' here if you trust your userspace users to do the right
  thing, or if you have only provided the line disciplines that
  you know you will be using, or if you wish to continue to use
  the traditional method of on-demand loading of these modules
  by any user.
  
  This functionality can be changed at runtime with the
  dev.tty.ldisc_autoload sysctl, this configuration option will
  only set the default value of this functionality.

LDMVSW
  Support for virtual switch devices under Sun4v Logical Domains.
  This driver adds a network interface for every vsw-port node
  found in the machine description of a service domain.
  Linux bridge/switch software can use these interfaces for
  guest domain network interconnectivity or guest domain
  connection to a physical network on a service domain.

LDM_DEBUG
  Say Y here if you would like LDM to log verbosely.  This could be
  helpful if the driver doesn't work as expected and you'd like to
  report a bug.
  
  If unsure, say N.

LDM_PARTITION
  Say Y here if you would like to use hard disks under Linux which
  were partitioned using Windows 2000's/XP's or Vista's Logical Disk
  Manager.  They are also known as "Dynamic Disks".
  
  Note this driver only supports Dynamic Disks with a protective MBR
  label, i.e. DOS partition table.  It does not support GPT labelled
  Dynamic Disks yet as can be created with Vista.
  
  Windows 2000 introduced the concept of Dynamic Disks to get around
  the limitations of the PC's partitioning scheme.  The Logical Disk
  Manager allows the user to repartition a disk and create spanned,
  mirrored, striped or RAID volumes, all without the need for
  rebooting.
  
  Normal partitions are now called Basic Disks under Windows 2000, XP,
  and Vista.
  
  For a fuller description read <file:Documentation/admin-guide/ldm.rst>.
  
  If unsure, say N.

LD_DEAD_CODE_DATA_ELIMINATION
  Enable this if you want to do dead code and data elimination with
  the linker by compiling with -ffunction-sections -fdata-sections,
  and linking with --gc-sections.
  
  This can reduce on disk and in-memory size of the kernel
  code and static data, particularly for small configs and
  on small systems. This has the possibility of introducing
  silently broken kernel if the required annotations are not
  present. This option is not well tested yet, so use at your
  own risk.

LD_IS_LLD
  No help

LD_ORPHAN_WARN
  No help

LD_VERSION
  No help

LEDS_88PM860X
  This option enables support for on-chip LED drivers found on Marvell
  Semiconductor 88PM8606 PMIC.

LEDS_AAT1290
  This option enables support for the LEDs on the AAT1290.

LEDS_ACER_A500
  This option enables support for the Power Button LED of
  Acer Iconia Tab A500.

LEDS_ADP5520
  This option enables support for on-chip LED drivers found
  on Analog Devices ADP5520/ADP5501 PMICs.
  
  To compile this driver as a module, choose M here: the module will
  be called leds-adp5520.

LEDS_AN30259A
  This option enables support for the AN30259A 3-channel
  LED driver.
  
  To compile this driver as a module, choose M here: the module
  will be called leds-an30259a.

LEDS_APU
  This driver makes the PC Engines APU1 front panel LEDs
  accessible from userspace programs through the LED subsystem.
  
  If you're looking for APU2/3, use the pcengines-apu2 driver.
  (symbol CONFIG_PCENGINES_APU2)
  
  To compile this driver as a module, choose M here: the
  module will be called leds-apu.

LEDS_ARIEL
  This driver adds support for controlling the front panel status
  LEDs on Dell Wyse 3020 (Ariel) board via the KB3930 Embedded
  Controller.
  
  Say Y to if your machine is a Dell Wyse 3020 thin client.

LEDS_AS3645A
  Enable LED flash class support for AS3645A LED flash
  controller. V4L2 flash API is provided as well if
  CONFIG_V4L2_FLASH_API is enabled.

LEDS_ASIC3
  This option enables support for the LEDs on the HTC ASIC3. The HTC
  ASIC3 LED GPIOs are inputs, not outputs, thus the leds-gpio driver
  cannot be used. This driver supports hardware blinking with an on+off
  period from 62ms to 125s. Say Y to enable LEDs on the HP iPAQ hx4700.

LEDS_AW2013
  This option enables support for the AW2013 3-channel
  LED driver.
  
  To compile this driver as a module, choose M here: the module
  will be called leds-aw2013.

LEDS_BCM6328
  This option enables support for LEDs connected to the BCM6328
  LED HW controller accessed via MMIO registers.

LEDS_BCM6358
  This option enables support for LEDs connected to the BCM6358
  LED HW controller accessed via MMIO registers.

LEDS_BD2802
  This option enables support for BD2802GU RGB LED driver chips
  accessed via the I2C bus.

LEDS_BLINKM
  This option enables support for the BlinkM RGB LED connected
  through I2C. Say Y to enable support for the BlinkM LED.

LEDS_BRIGHTNESS_HW_CHANGED
  This option enables support for the brightness_hw_changed attribute
  for LED sysfs class devices under /sys/class/leds.
  
  See Documentation/ABI/testing/sysfs-class-led for details.

LEDS_CLASS
  This option enables the LED sysfs class in /sys/class/leds.  You'll
  need this to do anything useful with LEDs.  If unsure, say N.

LEDS_CLASS_FLASH
  This option enables the flash LED sysfs class in /sys/class/leds.
  It wraps LED Class and adds flash LEDs specific sysfs attributes
  and kernel internal API to it. You'll need this to provide support
  for the flash related features of a LED device. It can be built
  as a module.

LEDS_CLASS_MULTICOLOR
  This option enables the multicolor LED sysfs class in /sys/class/leds.
  It wraps LED class and adds multicolor LED specific sysfs attributes
  and kernel internal API to it. You'll need this to provide support
  for multicolor LEDs that are grouped together. This class is not
  intended for single color LEDs. It can be built as a module.

LEDS_CLEVO_MAIL
  This driver makes the mail LED accessible from userspace
  programs through the leds subsystem. This LED have three
  known mode: off, blink at 0.5Hz and blink at 1Hz.
  
  The driver supports two kinds of interface: using ledtrig-timer
  or through /sys/class/leds/clevo::mail/brightness. As this LED
  cannot change it's brightness it blinks instead. The brightness
  value 0 means off, 1..127 means blink at 0.5Hz and 128..255 means
  blink at 1Hz.
  
  This module can drive the mail LED for the following notebooks:
  
        Clevo D400P
        Clevo D410J
        Clevo D410V
        Clevo D400V/D470V (not tested, but might work)
        Clevo M540N
        Clevo M5x0N (not tested, but might work)
        Positivo Mobile (Clevo M5x0V)
  
  If your model is not listed here you can try the "nodetect"
  module parameter.
  
  To compile this driver as a module, choose M here: the
  module will be called leds-clevo-mail.

LEDS_COBALT_QUBE
  This option enables support for the front LED on Cobalt Qube series

LEDS_COBALT_RAQ
  This option enables support for the Cobalt Raq series LEDs.

LEDS_CPCAP
  This option enables support for LEDs offered by Motorola's
  CPCAP PMIC.

LEDS_CR0014114
  This option enables support for CR0014114 LED Board which
  is widely used in vending machines produced by
  Crane Merchandising Systems.
  
  To compile this driver as a module, choose M here: the module
  will be called leds-cr0014114.

LEDS_DA903X
  This option enables support for on-chip LED drivers found
  on Dialog Semiconductor DA9030/DA9034 PMICs.

LEDS_DA9052
  This option enables support for on-chip LED drivers found
  on Dialog Semiconductor DA9052-BC and DA9053-AA/Bx PMICs.

LEDS_DAC124S085
  This option enables support for DAC124S085 SPI DAC from NatSemi,
  which can be used to control up to four LEDs.

LEDS_EL15203000
  This option enables support for EL15203000 LED Board
  (aka RED LED board) which is widely used in coffee vending
  machines produced by Crane Merchandising Systems.
  
  To compile this driver as a module, choose M here: the module
  will be called leds-el15203000.

LEDS_FSG
  This option enables support for the LEDs on the Freecom FSG-3.

LEDS_GPIO
  This option enables support for the LEDs connected to GPIO
  outputs. To be useful the particular board must have LEDs
  and they must be connected to the GPIO lines.  The LEDs must be
  defined as platform devices and/or OpenFirmware platform devices.
  The code to use these bindings can be selected below.

LEDS_GPIO_REGISTER
  This option provides the function gpio_led_register_device.
  As this function is used by arch code it must not be compiled as a
  module.

LEDS_HP6XX
  This option enables LED support for the handheld
  HP Jornada 620/660/680/690.

LEDS_INTEL_SS4200
  This option enables support for the Intel SS4200 series of
  Network Attached Storage servers. You may control the hard
  drive or power LEDs on the front panel. Using this driver
  can stop the front LED from blinking after startup.

LEDS_IP30
  This option enables support for the Red and White LEDs of
  SGI Octane machines.
  
  To compile this driver as a module, choose M here: the module
  will be called leds-ip30.

LEDS_IPAQ_MICRO
  Choose this option if you want to use the notification LED on
  Compaq/HP iPAQ h3100 and h3600.

LEDS_IS31FL319X
  This option enables support for LEDs connected to ISSI IS31FL319x
  fancy LED driver chips accessed via the I2C bus.
  Driver supports individual PWM brightness control for each channel.
  
  This driver can also be built as a module. If so the module will be
  called leds-is31fl319x.

LEDS_IS31FL32XX
  Say Y here to include support for ISSI IS31FL32XX and Si-En SN32xx
  LED controllers. They are I2C devices with multiple constant-current
  channels, each with independent 256-level PWM control.

LEDS_KTD2692
  This option enables support for KTD2692 LED flash connected
  through ExpressWire interface.
  
  Say Y to enable this driver.

LEDS_LM3530
  This option enables support for the LCD backlight using
  LM3530 ambient light sensor chip. This ALS chip can be
  controlled manually or using PWM input or using ambient
  light automatically.

LEDS_LM3532
  This option enables support for the LCD backlight using
  LM3532 ambient light sensor chip. This ALS chip can be
  controlled manually or using PWM input or using ambient
  light automatically.

LEDS_LM3533
  This option enables support for the LEDs on National Semiconductor /
  TI LM3533 Lighting Power chips.
  
  The LEDs can be controlled directly, through PWM input, or by the
  ambient-light-sensor interface. The chip supports
  hardware-accelerated blinking with maximum on and off periods of 9.8
  and 77 seconds respectively.

LEDS_LM355x
  This option enables support for LEDs connected to LM3554
  and LM3556. It includes Torch, Flash and Indicator functions.

LEDS_LM3601X
  This option enables support for the TI LM3601x family
  of flash, torch and indicator classes.

LEDS_LM36274
  Say Y to enable the LM36274 LED driver for TI LMU devices.
  This supports the LED device LM36274.

LEDS_LM3642
  This option enables support for LEDs connected to LM3642.
  The LM3642 is a 4MHz fixed-frequency synchronous boost
  converter plus 1.5A constant current driver for a high-current
  white LED.

LEDS_LM3692X
  This option enables support for the TI LM3692x family
  of white LED string drivers used for backlighting.

LEDS_LM3697
  Say Y to enable the LM3697 LED driver for TI LMU devices.
  This supports the LED device LM3697.

LEDS_LOCOMO
  This option enables support for the LEDs on Sharp Locomo.
  Zaurus models SL-5500 and SL-5600.

LEDS_LP3944
  This option enables support for LEDs connected to the National
  Semiconductor LP3944 Lighting Management Unit (LMU) also known as
  Fun Light Chip.
  
  To compile this driver as a module, choose M here: the
  module will be called leds-lp3944.

LEDS_LP3952
  This option enables support for LEDs connected to the Texas
  Instruments LP3952 LED driver.
  
  To compile this driver as a module, choose M here: the
  module will be called leds-lp3952.

LEDS_LP50XX
  If you say yes here you get support for the Texas Instruments
  LP5036, LP5030, LP5024, LP5018, LP5012 and LP5009 LED driver.
  
  To compile this driver as a module, choose M here: the
  module will be called leds-lp50xx.

LEDS_LP5521
  If you say yes here you get support for the National Semiconductor
  LP5521 LED driver. It is 3 channel chip with programmable engines.
  Driver provides direct control via LED class and interface for
  programming the engines.

LEDS_LP5523
  If you say yes here you get support for TI/National Semiconductor
  LP5523/55231 LED driver.
  It is 9 channel chip with programmable engines.
  Driver provides direct control via LED class and interface for
  programming the engines.

LEDS_LP5562
  If you say yes here you get support for TI LP5562 LED driver.
  It is 4 channels chip with programmable engines.
  Driver provides direct control via LED class and interface for
  programming the engines.

LEDS_LP55XX_COMMON
  This option supports common operations for LP5521/5523/55231/5562/8501
  devices.

LEDS_LP8501
  If you say yes here you get support for TI LP8501 LED driver.
  It is 9 channel chip with programmable engines.
  Driver provides direct control via LED class and interface for
  programming the engines.
  It is similar as LP5523, but output power selection is available.
  And register layout and engine program schemes are different.

LEDS_LP8788
  This option enables support for the Keyboard LEDs on the LP8788 PMIC.

LEDS_LP8860
  If you say yes here you get support for the TI LP8860 4 channel
  LED driver.
  This option enables support for the display cluster LEDs
  on the LP8860 4 channel LED driver using the I2C communication
  bus.

LEDS_LT3593
  This option enables support for LEDs driven by a Linear Technology
  LT3593 controller. This controller uses a special one-wire pulse
  coding protocol to set the brightness.

LEDS_MAX77650
  LEDs driver for MAX77650 family of PMICs from Maxim Integrated.

LEDS_MAX77693
  This option enables support for the flash part of the MAX77693
  multifunction device. It has build in control for two leds in flash
  and torch mode.

LEDS_MAX8997
  This option enables support for on-chip LED drivers on
  MAXIM MAX8997 PMIC.

LEDS_MC13783
  This option enables support for on-chip LED drivers found
  on Freescale Semiconductor MC13783/MC13892/MC34708 PMIC.

LEDS_MENF21BMC
  Say Y here to include support for the MEN 14F021P00 BMC LEDs.
  
  This driver can also be built as a module. If so the module
  will be called leds-menf21bmc.

LEDS_MIKROTIK_RB532
  This option enables support for the so called "User LED" of
  Mikrotik's Routerboard 532.

LEDS_MLXCPLD
  This option enables support for the LEDs on the Mellanox
  boards. Say Y to enable these.

LEDS_MLXREG
  This option enables support for the LEDs on the Mellanox Ethernet and
  InfiniBand switches. The driver can be activated by the platform device
  device add call. Say Y to enable these. To compile this driver as a
  module, choose 'M' here: the module will be called leds-mlxreg.

LEDS_MT6323
  This option enables support for on-chip LED drivers found on
  Mediatek MT6323 PMIC.

LEDS_NET48XX
  This option enables support for the Soekris net4801 and net4826 error
  LED.

LEDS_NETXBIG
  This option enables support for LEDs found on the LaCie 2Big
  and 5Big Network v2 boards. The LEDs are wired to a CPLD and are
  controlled through a GPIO extension bus.

LEDS_NIC78BX
  This option enables support for the User1 and User2 LEDs on NI
  PXI NIC78bx devices.
  
  To compile this driver as a module, choose M here: the module
  will be called leds-nic78bx.

LEDS_NS2
  This option enables support for the dual-GPIO LEDs found on the
  following LaCie/Seagate boards:
  
        Network Space v2 (and parents: Max, Mini)
        Internet Space v2
        d2 Network v2
        n090401 (Seagate NAS 4-Bay)

LEDS_OT200
  This option enables support for the LEDs on the Bachmann OT200.
  Say Y to enable LEDs on the Bachmann OT200.

LEDS_PCA9532
  This option enables support for NXP pca9532
  LED controller. It is generally only useful
  as a platform driver

LEDS_PCA9532_GPIO
  Allow unused pins on PCA9532 to be used as gpio.
  
  To use a pin as gpio pca9532_type in pca9532_platform data needs to
  set to PCA9532_TYPE_GPIO.

LEDS_PCA955X
  This option enables support for LEDs connected to PCA955x
  LED driver chips accessed via the I2C bus.  Supported
  devices include PCA9550, PCA9551, PCA9552, and PCA9553.

LEDS_PCA955X_GPIO
  Allow unused pins on PCA955X to be used as gpio.
  
  To use a pin as gpio the pin type should be set to
  PCA955X_TYPE_GPIO in the device tree.

LEDS_PCA963X
  This option enables support for LEDs connected to the PCA963x
  LED driver chip accessed via the I2C bus. Supported
  devices include PCA9633 and PCA9634

LEDS_PM8058
  Choose this option if you want to use the LED drivers in
  the Qualcomm PM8058 PMIC.

LEDS_POWERNV
  This option enables support for the system LEDs present on
  PowerNV platforms. Say 'y' to enable this support in kernel.
  To compile this driver as a module, choose 'm' here: the module
  will be called leds-powernv.

LEDS_PWM
  This option enables support for pwm driven LEDs

LEDS_REGULATOR
  This option enables support for regulator driven LEDs.

LEDS_RT8515
  This option enables support for the Richtek RT8515 flash
  and torch LEDs found on some mobile phones.
  
  To compile this driver as a module, choose M here: the module
  will be called leds-rt8515.

LEDS_S3C24XX
  This option enables support for LEDs connected to GPIO lines
  on Samsung S3C24XX series CPUs, such as the S3C2410 and S3C2440.

LEDS_SC27XX_BLTC
  Say Y here to include support for the SC27xx breathing light controller
  LEDs.
  
  This driver can also be built as a module. If so the module will be
  called leds-sc27xx-bltc.

LEDS_SGM3140
  This option enables support for the SGM3140 500mA Buck/Boost Charge
  Pump LED Driver.

LEDS_SPI_BYTE
  This option enables support for LED controller which use a single byte
  for controlling the brightness. Currently the following controller is
  supported: Ubiquiti airCube ISP microcontroller based LED controller.

LEDS_SUNFIRE
  This option enables support for the Left, Middle, and Right
  LEDs on the I/O and CPU boards of SunFire UltraSPARC servers.

LEDS_SYSCON
  This option enables support for the LEDs on syscon type
  devices. This will only work with device tree enabled
  devices.

LEDS_TCA6507
  This option enables support for LEDs connected to TC6507
  LED driver chips accessed via the I2C bus.
  Driver support brightness control and hardware-assisted blinking.

LEDS_TI_LMU_COMMON
  Say Y to enable the LED driver for TI LMU devices.
  This supports common features between the TI LM3532, LM3631, LM3632,
  LM3633, LM3695 and LM3697.

LEDS_TLC591XX
  This option enables support for Texas Instruments TLC59108
  and TLC59116 LED controllers.

LEDS_TPS6105X
  This driver supports TPS61050/TPS61052 LED chips.
  It is a single boost converter primarily for white LEDs and
  audio amplifiers.

LEDS_TRIGGERS
  This option enables trigger support for the leds class.
  These triggers allow kernel events to drive the LEDs and can
  be configured via sysfs. If unsure, say Y.

LEDS_TRIGGER_ACTIVITY
  This allows LEDs to be controlled by an immediate CPU usage.
  The flash frequency and duty cycle varies from faint flashes to
  intense brightness depending on the instant CPU load.
  If unsure, say N.

LEDS_TRIGGER_AUDIO
  This allows LEDs to be controlled by audio drivers for following
  the audio mute and mic-mute changes.
  If unsure, say N

LEDS_TRIGGER_BACKLIGHT
  This allows LEDs to be controlled as a backlight device: they
  turn off and on when the display is blanked and unblanked.
  
  If unsure, say N.

LEDS_TRIGGER_CAMERA
  This allows LEDs to be controlled as a camera flash/torch device.
  This enables direct flash/torch on/off by the driver, kernel space.
  If unsure, say Y.

LEDS_TRIGGER_CPU
  This allows LEDs to be controlled by active CPUs. This shows
  the active CPUs across an array of LEDs so you can see which
  CPUs are active on the system at any given moment.
  
  If unsure, say N.

LEDS_TRIGGER_DEFAULT_ON
  This allows LEDs to be initialised in the ON state.
  If unsure, say Y.

LEDS_TRIGGER_DISK
  This allows LEDs to be controlled by disk activity.
  If unsure, say Y.

LEDS_TRIGGER_GPIO
  This allows LEDs to be controlled by gpio events. It's good
  when using gpios as switches and triggering the needed LEDs
  from there. One use case is n810's keypad LEDs that could
  be triggered by this trigger when user slides up to show
  keypad.
  
  If unsure, say N.

LEDS_TRIGGER_HEARTBEAT
  This allows LEDs to be controlled by a CPU load average.
  The flash frequency is a hyperbolic function of the 1-minute
  load average.
  If unsure, say Y.

LEDS_TRIGGER_MTD
  This allows LEDs to be controlled by MTD activity.
  If unsure, say N.

LEDS_TRIGGER_NETDEV
  This allows LEDs to be controlled by network device activity.
  If unsure, say Y.

LEDS_TRIGGER_ONESHOT
  This allows LEDs to blink in one-shot pulses with parameters
  controlled via sysfs.  It's useful to notify the user on
  sporadic events, when there are no clear begin and end trap points,
  or on dense events, where this blinks the LED at constant rate if
  rearmed continuously.
  
  It also shows how to use the led_blink_set_oneshot() function.
  
  If unsure, say Y.

LEDS_TRIGGER_PANIC
  This allows LEDs to be configured to blink on a kernel panic.
  Enabling this option will allow to mark certain LEDs as panic indicators,
  allowing to blink them on a kernel panic, even if they are set to
  a different trigger.
  If unsure, say Y.

LEDS_TRIGGER_PATTERN
  This allows LEDs to be controlled by a software or hardware pattern
  which is a series of tuples, of brightness and duration (ms).
  If unsure, say N

LEDS_TRIGGER_TIMER
  This allows LEDs to be controlled by a programmable timer
  via sysfs. Some LED hardware can be programmed to start
  blinking the LED without any further software interaction.
  For more details read Documentation/leds/leds-class.rst.
  
  If unsure, say Y.

LEDS_TRIGGER_TRANSIENT
  This allows one time activation of a transient state on
  GPIO/PWM based hardware.
  If unsure, say Y.

LEDS_TURRIS_OMNIA
  This option enables basic support for the LEDs found on the front
  side of CZ.NIC's Turris Omnia router. There are 12 RGB LEDs on the
  front panel.

LEDS_USER
  This option enables support for userspace LEDs. Say 'y' to enable this
  support in kernel. To compile this driver as a module, choose 'm' here:
  the module will be called uleds.

LEDS_WM831X_STATUS
  This option enables support for the status LEDs of the WM831x
  series of PMICs.

LEDS_WM8350
  This option enables support for LEDs driven by the Wolfson
  Microelectronics WM8350 AudioPlus PMIC.

LEDS_WRAP
  This option enables support for the PCEngines WRAP programmable LEDs.

LED_TRIGGER_PHY
  Adds support for a set of LED trigger events per-PHY.  Link
  state change will trigger the events, for consumption by an
  LED class driver.  There are triggers for each link speed currently
  supported by the PHY and also a one common "link" trigger as a
  logical-or of all the link speed ones.
  All these triggers are named according to the following pattern:
      <mii bus id>:<phy>:<speed>
  
  Where speed is in the form:
        <Speed in megabits>Mbps OR <Speed in gigabits>Gbps OR link
        for any speed known to the PHY.

LEGACY_PTYS
  A pseudo terminal (PTY) is a software device consisting of two
  halves: a master and a slave. The slave device behaves identical to
  a physical terminal; the master device is used by a process to
  read data from and write data to the slave, thereby emulating a
  terminal. Typical programs for the master side are telnet servers
  and xterms.
  
  Linux has traditionally used the BSD-like names /dev/ptyxx
  for masters and /dev/ttyxx for slaves of pseudo
  terminals. This scheme has a number of problems, including
  security.  This option enables these legacy devices; on most
  systems, it is safe to say N.

LEGACY_PTY_COUNT
  The maximum number of legacy PTYs that can be used at any one time.
  The default is 256, and should be more than enough.  Embedded
  systems may want to reduce this to save memory.
  
  When not in use, each legacy PTY occupies 12 bytes on 32-bit
  architectures and 24 bytes on 64-bit architectures.

LEGACY_TIMER_TICK
  The legacy timer tick helper is used by platforms that
  lack support for the generic clockevent framework.
  New platforms should use generic clockevents instead.

LEGACY_VSYSCALL_EMULATE
  The kernel traps and emulates calls into the fixed vsyscall
  address mapping. This makes the mapping non-executable, but
  it still contains readable known contents, which could be
  used in certain rare security vulnerability exploits. This
  configuration is recommended when using legacy userspace
  that still uses vsyscalls along with legacy binary
  instrumentation tools that require code to be readable.
  
  An example of this type of legacy userspace is running
  Pin on an old binary that still uses vsyscalls.

LEGACY_VSYSCALL_NONE
  There will be no vsyscall mapping at all. This will
  eliminate any risk of ASLR bypass due to the vsyscall
  fixed address mapping. Attempts to use the vsyscalls
  will be reported to dmesg, so that either old or
  malicious userspace programs can be identified.

LEGACY_VSYSCALL_XONLY
  The kernel traps and emulates calls into the fixed vsyscall
  address mapping and does not allow reads.  This
  configuration is recommended when userspace might use the
  legacy vsyscall area but support for legacy binary
  instrumentation of legacy code is not needed.  It mitigates
  certain uses of the vsyscall area as an ASLR-bypassing
  buffer.

LG_LAPTOP
  This driver adds support for hotkeys as well as control of keyboard
  backlight, battery maximum charge level and various other ACPI
  features.
  
  If you have an LG Gram laptop, say Y or M here.

LIB80211
  This options enables a library of common routines used
  by IEEE802.11 wireless LAN drivers.
  
  Drivers should select this themselves if needed.

LIB80211_CRYPT_CCMP
  No help

LIB80211_CRYPT_TKIP
  No help

LIB80211_CRYPT_WEP
  No help

LIB80211_DEBUG
  You can enable this if you want verbose debugging messages
  from lib80211.
  
  If unsure, say N.

LIBCRC32C
  This option is provided for the case where no in-kernel-tree
  modules require CRC32c functions, but a module built outside the
  kernel tree does. Such modules that use library CRC32c functions
  require M here.  See Castagnoli93.
  Module will be libcrc32c.

LIBERTAS
  A library for Marvell Libertas 8xxx devices.

LIBERTAS_CS
  A driver for Marvell Libertas 8385 CompactFlash devices.

LIBERTAS_DEBUG
  Debugging support.

LIBERTAS_MESH
  This enables Libertas' MESH support, used by e.g. the OLPC people.

LIBERTAS_SDIO
  A driver for Marvell Libertas 8385/8686/8688 SDIO devices.

LIBERTAS_SPI
  A driver for Marvell Libertas 8686 SPI devices.

LIBERTAS_THINFIRM
  A library for Marvell Libertas 8xxx devices using thinfirm.

LIBERTAS_THINFIRM_DEBUG
  Debugging support.

LIBERTAS_THINFIRM_USB
  A driver for Marvell Libertas 8388 USB devices using thinfirm.

LIBERTAS_USB
  A driver for Marvell Libertas 8388 USB devices.

LIBFC
  Fibre Channel library module

LIBFCOE
  Library for Fibre Channel over Ethernet module

LIBFDT
  No help

LIBIPW
  This option enables the hardware independent IEEE 802.11
  networking stack.  This component is deprecated in favor of the
  mac80211 component.

LIBIPW_DEBUG
  This option will enable debug tracing output for the
  libipw component.
  
  This will result in the kernel module being ~70k larger.  You
  can control which debug output is sent to the kernel log by
  setting the value in
  
  /proc/net/ieee80211/debug_level
  
  For example:
  
  % echo 0x00000FFO > /proc/net/ieee80211/debug_level
  
  For a list of values you can assign to debug_level, you
  can look at the bit mask values in ieee80211.h
  
  If you are not trying to debug or develop the libipw
  component, you most likely want to say N here.

LIBNVDIMM
  Generic support for non-volatile memory devices including
  ACPI-6-NFIT defined resources.  On platforms that define an
  NFIT, or otherwise can discover NVDIMM resources, a libnvdimm
  bus is registered to advertise PMEM (persistent memory)
  namespaces (/dev/pmemX) and BLK (sliding mmio window(s))
  namespaces (/dev/ndblkX.Y). A PMEM namespace refers to a
  memory resource that may span multiple DIMMs and support DAX
  (see CONFIG_DAX).  A BLK namespace refers to an NVDIMM control
  region which exposes an mmio register set for windowed access
  mode to non-volatile memory.

LIDAR_LITE_V2
  Say Y to build a driver for PulsedLight LIDAR range finding
  sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called pulsedlight-lite-v2

LINEAR_RANGES
  No help

LINEAR_RANGES_TEST
  This builds the linear_ranges unit test, which runs on boot.
  Tests the linear_ranges logic correctness.
  For more information on KUnit and unit tests in general please refer
  to the KUnit documentation in Documentation/dev-tools/kunit/.
  
  If unsure, say N.

LIQUIDIO
  This driver supports Cavium LiquidIO Intelligent Server Adapters
  based on CN66XX, CN68XX and CN23XX chips.
  
  To compile this driver as a module, choose M here: the module
  will be called liquidio.  This is recommended.

LIQUIDIO_VF
  This driver supports Cavium LiquidIO Intelligent Server Adapter
  based on CN23XX chips.
  
  To compile this driver as a module, choose M here: The module
  will be called liquidio_vf. MSI-X interrupt support is required
  for this driver to work correctly

LIRC
  Enable this option to enable the Linux Infrared Remote
  Control user interface (e.g. /dev/lirc*). This interface
  passes raw IR to and from userspace, which is needed for
  IR transmitting (aka "blasting") and for the lirc daemon.

LIST_KUNIT_TEST
  This builds the linked list KUnit test suite.
  It tests that the API and basic functionality of the list_head type
  and associated macros.
  
  KUnit tests run during boot and output the results to the debug log
  in TAP format (https://testanything.org/). Only useful for kernel devs
  running the KUnit test harness, and not intended for inclusion into a
  production build.
  
  For more information on KUnit and unit tests in general please refer
  to the KUnit documentation in Documentation/dev-tools/kunit/.
  
  If unsure, say N.

LITEX
  No help

LITEX_SOC_CONTROLLER
  This option enables the SoC Controller Driver which verifies
  LiteX CSR access and provides common litex_get_reg/litex_set_reg
  accessors.
  All drivers that use functions from litex.h must depend on
  LITEX.

LIVEPATCH
  Say Y here if you want to support kernel live patching.
  This option has no runtime impact until a kernel "patch"
  module uses the interface provided by this option to register
  a patch, causing calls to patched functions to be redirected
  to new function code contained in the patch module.

LKDTM
  This module enables testing of the different dumping mechanisms by
  inducing system failures at predefined crash points.
  If you don't need it: say N
  Choose M here to compile this code as a module. The module will be
  called lkdtm.
  
  Documentation on how to use the module can be found in
  Documentation/fault-injection/provoke-crashes.rst

LLC
  No help

LLC2
  This is a Logical Link Layer type 2, connection oriented support.
  Select this if you want to have support for PF_LLC sockets.

LLD_VERSION
  No help

LMP91000
  Say yes here to build support for the Texas Instruments
  LMP91000 digital potentiostat chip.
  
  To compile this driver as a module, choose M here: the
  module will be called lmp91000

LOAD_IPL_KEYS
  No help

LOAD_PPC_KEYS
  Enable loading of keys to the .platform keyring and blacklisted
  hashes to the .blacklist keyring for powerpc based platforms.

LOAD_UEFI_KEYS
  No help

LOCALVERSION
  Append an extra string to the end of your kernel version.
  This will show up when you type uname, for example.
  The string you set here will be appended after the contents of
  any files with a filename matching localversion* in your
  object and source tree, in that order.  Your total string can
  be a maximum of 64 characters.

LOCALVERSION_AUTO
  This will try to automatically determine if the current tree is a
  release tree by looking for git tags that belong to the current
  top of tree revision.
  
  A string of the format -gxxxxxxxx will be added to the localversion
  if a git-based tree is found.  The string generated by this will be
  appended after any matching localversion* files, and after the value
  set in CONFIG_LOCALVERSION.
  
  (The actual string used here is the first eight characters produced
  by running the command:
  
    $ git rev-parse --verify HEAD
  
  which is done within the script "scripts/setlocalversion".)

LOCKD
  No help

LOCKDEP
  No help

LOCKDEP_SMALL
  No help

LOCKDEP_SUPPORT
  No help

LOCKD_V4
  No help

LOCKUP_DETECTOR
  No help

LOCK_DEBUGGING_SUPPORT
  No help

LOCK_DOWN_KERNEL_FORCE_CONFIDENTIALITY
  The kernel runs in confidentiality mode by default. Features that
  allow the kernel to be modified at runtime or that permit userland
  code to read confidential material held inside the kernel are
  disabled.

LOCK_DOWN_KERNEL_FORCE_INTEGRITY
  The kernel runs in integrity mode by default. Features that allow
  the kernel to be modified at runtime are disabled.

LOCK_DOWN_KERNEL_FORCE_NONE
  No lockdown functionality is enabled by default. Lockdown may be
  enabled via the kernel commandline or /sys/kernel/security/lockdown.

LOCK_EVENT_COUNTS
  Enable light-weight counting of various locking related events
  in the system with minimal performance impact. This reduces
  the chance of application behavior change because of timing
  differences. The counts are reported via debugfs.

LOCK_SPIN_ON_OWNER
  No help

LOCK_STAT
  This feature enables tracking lock contention points
  
  For more details, see Documentation/locking/lockstat.rst
  
  This also enables lock events required by "perf lock",
  subcommand of perf.
  If you want to use "perf lock", you also need to turn on
  CONFIG_EVENT_TRACING.
  
  CONFIG_LOCK_STAT defines "contended" and "acquired" lock events.
  (CONFIG_LOCKDEP defines "acquire" and "release" events.)

LOCK_TORTURE_TEST
  This option provides a kernel module that runs torture tests
  on kernel locking primitives.  The kernel module may be built
  after the fact on the running kernel to be tested, if desired.
  
  Say Y here if you want kernel locking-primitive torture tests
  to be built into the kernel.
  Say M if you want these torture tests to build as a module.
  Say N if you are unsure.

LOGIG940_FF
  Say Y here if you want to enable force feedback support for Logitech
  Flight System G940 devices.

LOGIRUMBLEPAD2_FF
  Say Y here if you want to enable force feedback support for:
  - Logitech RumblePad
  - Logitech Rumblepad 2
  - Logitech Formula Vibration Feedback Wheel

LOGITECH_FF
  Say Y here if you have one of these devices:
  - Logitech WingMan Cordless RumblePad
  - Logitech WingMan Cordless RumblePad 2
  - Logitech WingMan Force 3D
  
  and if you want to enable force feedback for them.
  Note: if you say N here, this device will still be supported, but without
  force feedback.

LOGIWHEELS_FF
  Say Y here if you want to enable force feedback and range setting(*)
  support for following Logitech wheels:
  - Logitech G25 (*)
  - Logitech G27 (*)
  - Logitech G29 (*)
  - Logitech Driving Force
  - Logitech Driving Force Pro (*)
  - Logitech Driving Force GT (*)
  - Logitech Driving Force EX/RX
  - Logitech Driving Force Wireless
  - Logitech Speed Force Wireless
  - Logitech MOMO Force
  - Logitech MOMO Racing Force
  - Logitech Formula Force GP
  - Logitech Formula Force EX/RX
  - Logitech Wingman Formula Force GP

LOGO
  Enable and select frame buffer bootup logos.

LOGO_DEC_CLUT224
  No help

LOGO_LINUX_CLUT224
  No help

LOGO_LINUX_MONO
  No help

LOGO_LINUX_VGA16
  No help

LOGO_MAC_CLUT224
  No help

LOGO_PARISC_CLUT224
  No help

LOGO_SGI_CLUT224
  No help

LOGO_SUN_CLUT224
  No help

LOGO_SUPERH_CLUT224
  No help

LOGO_SUPERH_MONO
  No help

LOGO_SUPERH_VGA16
  No help

LOG_BUF_SHIFT
  Select the minimal kernel log buffer size as a power of 2.
  The final size is affected by LOG_CPU_MAX_BUF_SHIFT config
  parameter, see below. Any higher size also might be forced
  by "log_buf_len" boot parameter.
  
  Examples:
             17 => 128 KB
             16 => 64 KB
             15 => 32 KB
             14 => 16 KB
             13 =>  8 KB
             12 =>  4 KB

LOG_CPU_MAX_BUF_SHIFT
  This option allows to increase the default ring buffer size
  according to the number of CPUs. The value defines the contribution
  of each CPU as a power of 2. The used space is typically only few
  lines however it might be much more when problems are reported,
  e.g. backtraces.
  
  The increased size means that a new buffer has to be allocated and
  the original static one is unused. It makes sense only on systems
  with more CPUs. Therefore this value is used only when the sum of
  contributions is greater than the half of the default kernel ring
  buffer as defined by LOG_BUF_SHIFT. The default values are set
  so that more than 16 CPUs are needed to trigger the allocation.
  
  Also this option is ignored when "log_buf_len" kernel parameter is
  used as it forces an exact (power of two) size of the ring buffer.
  
  The number of possible CPUs is used for this computation ignoring
  hotplugging making the computation optimal for the worst case
  scenario while allowing a simple algorithm to be used from bootup.
  
  Examples shift values and their meaning:
             17 => 128 KB for each CPU
             16 =>  64 KB for each CPU
             15 =>  32 KB for each CPU
             14 =>  16 KB for each CPU
             13 =>   8 KB for each CPU
             12 =>   4 KB for each CPU

LOONGSON1_CPUFREQ
  This option adds a CPUFreq driver for loongson1 processors which
  support software configurable cpu frequency.
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  If in doubt, say N.

LOONGSON1_WDT
  Hardware driver for the Loongson1 SoC Watchdog Timer.

LOONGSON2_CPUFREQ
  This option adds a CPUFreq driver for loongson processors which
  support software configurable cpu frequency.
  
  Loongson2F and it's successors support this feature.
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  If in doubt, say N.

LOONGSON_HTPIC
  Support for the Loongson-3 HyperTransport PIC Controller.

LOONGSON_HTVEC
  Support for the Loongson3 HyperTransport Interrupt Vector Controller.

LOONGSON_LIOINTC
  Support for the Loongson Local I/O Interrupt Controller.

LOONGSON_PCH_MSI
  Support for the Loongson PCH MSI Controller.

LOONGSON_PCH_PIC
  Support for the Loongson PCH PIC Controller.

LOOPBACK_TARGET
  Say Y here to enable the TCM Virtual SAS target and Linux/SCSI LLD
  fabric loopback module.

LP8788_ADC
  Say yes here to build support for TI LP8788 ADC.
  
  To compile this driver as a module, choose M here: the module will be
  called lp8788_adc.

LPC18XX_ADC
  Say yes here to build support for NXP LPC18XX ADC.
  
  To compile this driver as a module, choose M here: the module will be
  called lpc18xx_adc.

LPC18XX_DAC
  Say yes here to build support for NXP LPC18XX DAC.
  
  To compile this driver as a module, choose M here: the module will be
  called lpc18xx_dac.

LPC18XX_DMAMUX
  Enable support for DMA on NXP LPC18xx/43xx platforms
  with PL080 and multiplexed DMA request lines.

LPC18XX_WATCHDOG
  Say Y here if to include support for the watchdog timer
  in NXP LPC SoCs family, which includes LPC18xx/LPC43xx
  processors.
  To compile this driver as a module, choose M here: the
  module will be called lpc18xx_wdt.

LPC32XX_ADC
  Say yes here to build support for the integrated ADC inside the
  LPC32XX SoC. Note that this feature uses the same hardware as the
  touchscreen driver, so you should either select only one of the two
  drivers (lpc32xx_adc or lpc32xx_ts) or, in the OpenFirmware case,
  activate only one via device tree selection.  Provides direct access
  via sysfs.

LPC_ENET
  Say Y or M here if you want to use the NXP ethernet MAC included on
  some NXP LPC devices. You can safely enable this option for LPC32xx
  SoC. Also available as a module.

LPC_ICH
  The LPC bridge function of the Intel ICH provides support for
  many functional units. This driver provides needed support for
  other drivers to control these functions, currently GPIO and
  watchdog.

LPC_SCH
  LPC bridge function of the Intel SCH provides support for
  System Management Bus and General Purpose I/O.

LP_CONSOLE
  If you want kernel messages to be printed out as they occur, you
  can have a console on the printer. This option adds support for
  doing that; to actually get it to happen you need to pass the
  option "console=lp0" to the kernel at boot time.
  
  If the printer is out of paper (or off, or unplugged, or too
  busy..) the kernel will stall until the printer is ready again.
  By defining CONSOLE_LP_STRICT to 0 (at your own risk) you
  can make the kernel continue when this happens,
  but it'll lose the kernel messages.
  
  If unsure, say N.

LRU_CACHE
  No help

LS1X_IRQ
  Support for the Loongson-1 platform Interrupt Controller.

LSI_ET1011C_PHY
  Supports the LSI ET1011C PHY.

LSM
  A comma-separated list of LSMs, in initialization order.
  Any LSMs left off this list will be ignored. This can be
  controlled at boot with the "lsm=" parameter.
  
  If unsure, leave this as the default.

LSM_MMAP_MIN_ADDR
  This is the portion of low virtual memory which should be protected
  from userspace allocation.  Keeping a user from writing to low pages
  can help reduce the impact of kernel NULL pointer bugs.
  
  For most ia64, ppc64 and x86 users with lots of address space
  a value of 65536 is reasonable and should cause no problems.
  On arm and other archs it should not be higher than 32768.
  Programs which use vm86 functionality or have some need to map
  this low address space will need the permission specific to the
  systems running LSM.

LS_EXTIRQ
  No help

LS_SCFG_MSI
  No help

LTC1660
  Say yes here to build support for Linear Technology
  LTC1660 and LTC1665 Digital to Analog Converters.
  
  To compile this driver as a module, choose M here: the
  module will be called ltc1660.

LTC2471
  Say yes here to build support for Linear Technology LTC2471 and
  LTC2473 16-bit I2C ADC.
  
  This driver can also be built as a module. If so, the module will
  be called ltc2471.

LTC2485
  Say yes here to build support for Linear Technology LTC2485 ADC.
  
  To compile this driver as a module, choose M here: the module will be
  called ltc2485.

LTC2496
  Say yes here to build support for Linear Technology LTC2496
  16-Bit 8-/16-Channel Delta Sigma ADC.
  
  To compile this driver as a module, choose M here: the module will be
  called ltc2496.

LTC2497
  Say yes here to build support for Linear Technology LTC2497
  16-Bit 8-/16-Channel Delta Sigma ADC.
  
  To compile this driver as a module, choose M here: the module will be
  called ltc2497.

LTC2632
  Say yes here to build support for Linear Technology
  LTC2632, LTC2634 and LTC2636 DAC resolution 12/10/8 bit
  low 0-2.5V and high 0-4.096V range converters.
  
  To compile this driver as a module, choose M here: the
  module will be called ltc2632.

LTC2983
  Say yes here to build support for the LTC2983 Multi-Sensor
  high accuracy digital temperature measurement system.
  
  To compile this driver as a module, choose M here: the module
  will be called ltc2983.

LTE_GDM724X
  This driver supports GCT GDM724x LTE chip based USB modem devices.
  It exposes 4 network devices to be used per PDN and 2 tty devices to be
  used for AT commands and DM monitoring applications.
  The modules will be called gdmulte.ko and gdmtty.ko
  
  GCT-ATCx can be used for AT Commands
  GCT-DMx can be used for LTE protocol monitoring

LTPC
  This allows you to use the AppleTalk PC card to connect to LocalTalk
  networks. The card is also known as the Farallon PhoneNet PC card.
  If you are in doubt, this card is the one with the 65C02 chip on it.
  You also need version 1.3.3 or later of the netatalk package.
  This driver is experimental, which means that it may not work.
  See the file <file:Documentation/networking/device_drivers/appletalk/ltpc.rst>.

LTR501
  If you say yes here you get support for the Lite-On LTR-501ALS-01
  ambient light and proximity sensor. This driver also supports LTR-559
  ALS/PS or LTR-301 ALS sensors.
  
  This driver can also be built as a module.  If so, the module
  will be called ltr501.

LV0104CS
  Say Y here if you want to build support for the On Semiconductor
  LV0104CS ambient light sensor.
  
  To compile this driver as a module, choose M here:
  the module will be called lv0104cs.

LWTUNNEL
  This feature provides an infrastructure to support light weight
  tunnels like mpls. There is no netdevice associated with a light
  weight tunnel endpoint. Tunnel encapsulation parameters are stored
  with light weight tunnel state associated with fib routes.

LWTUNNEL_BPF
  Allows to run BPF programs as a nexthop action following a route
  lookup for incoming and outgoing packets.

LXT_PHY
  Currently supports the lxt970, lxt971

LZ4HC_COMPRESS
  No help

LZ4_COMPRESS
  No help

LZ4_DECOMPRESS
  No help

LZO_COMPRESS
  No help

LZO_DECOMPRESS
  No help

M486
  Select this for an 486-class CPU such as AMD/Cyrix/IBM/Intel
  486DX/DX2/DX4 and UMC U5D.

M486SX
  Select this for an 486-class CPU without an FPU such as
  AMD/Cyrix/IBM/Intel SL/SLC/SLC2/SLC3/SX/SX2 and UMC U5S.

M54xx_WATCHDOG
  To compile this driver as a module, choose M here: the
  module will be called m54xx_wdt.

M586
  Select this for an 586 or 686 series processor such as the AMD K5,
  the Cyrix 5x86, 6x86 and 6x86MX.  This choice does not
  assume the RDTSC (Read Time Stamp Counter) instruction.

M586MMX
  Select this for a Pentium with the MMX graphics/multimedia
  extended instructions.

M586TSC
  Select this for a Pentium Classic processor with the RDTSC (Read
  Time Stamp Counter) instruction for benchmarking.

M62332
  If you say yes here you get support for the Mitsubishi M62332
  (I2C 8-Bit DACs with rail-to-rail outputs).
  
  This driver can also be built as a module.  If so, the module
  will be called m62332.

M686
  Select this for Intel Pentium Pro chips.  This enables the use of
  Pentium Pro extended instructions, and disables the init-time guard
  against the f00f bug found in earlier Pentiums.

MAC80211
  This option enables the hardware independent IEEE 802.11
  networking stack.

MAC80211_DEBUGFS
  Select this to see extensive information about
  the internal state of mac80211 in debugfs.
  
  Say N unless you know you need this.

MAC80211_DEBUG_COUNTERS
  Selecting this option causes mac80211 to keep additional
  and very verbose statistics about TX and RX handler use
  as well as a few selected dot11 counters. These will be
  exposed in debugfs.
  
  Note that some of the counters are not concurrency safe
  and may thus not always be accurate.
  
  If unsure, say N.

MAC80211_DEBUG_MENU
  This option collects various mac80211 debug settings.

MAC80211_HAS_RC
  No help

MAC80211_HT_DEBUG
  This option enables 802.11n High Throughput features
  debug tracing output.
  
  It should not be selected on production systems as some
  of the messages are remotely triggerable.
  
  Do not select this option.

MAC80211_HWSIM
  This driver is a developer testing tool that can be used to test
  IEEE 802.11 networking stack (mac80211) functionality. This is not
  needed for normal wireless LAN usage and is only for testing. See
  Documentation/networking/mac80211_hwsim for more information on how
  to use this tool.
  
  To compile this driver as a module, choose M here: the module will be
  called mac80211_hwsim.  If unsure, say N.

MAC80211_IBSS_DEBUG
  Selecting this option causes mac80211 to print out
  very verbose IBSS debugging messages. It should not
  be selected on production systems as those messages
  are remotely triggerable.
  
  Do not select this option.

MAC80211_LEDS
  This option enables a few LED triggers for different
  packet receive/transmit events.

MAC80211_MESH
  Select this option to enable 802.11 mesh operation in mac80211
  drivers that support it.  802.11 mesh connects multiple stations
  over (possibly multi-hop) wireless links to form a single logical
  LAN.

MAC80211_MESH_CSA_DEBUG
  Selecting this option causes mac80211 to print out very verbose mesh
  channel switch debugging messages (when mac80211 is taking part in a
  mesh network).
  
  Do not select this option.

MAC80211_MESH_PS_DEBUG
  Selecting this option causes mac80211 to print out very verbose mesh
  powersave debugging messages (when mac80211 is taking part in a
  mesh network).
  
  Do not select this option.

MAC80211_MESH_SYNC_DEBUG
  Selecting this option causes mac80211 to print out very verbose mesh
  synchronization debugging messages (when mac80211 is taking part in a
  mesh network).
  
  Do not select this option.

MAC80211_MESSAGE_TRACING
  Select this option to have mac80211 register the
  mac80211_msg trace subsystem with tracepoints to
  collect all debugging messages, independent of
  printing them into the kernel log.
  
  The overhead in this option is that all the messages
  need to be present in the binary and formatted at
  runtime for tracing.

MAC80211_MHWMP_DEBUG
  Selecting this option causes mac80211 to print out very
  verbose mesh routing (HWMP) debugging messages (when mac80211
  is taking part in a mesh network).
  It should not be selected on production systems as those
  messages are remotely triggerable.
  
  Do not select this option.

MAC80211_MLME_DEBUG
  Selecting this option causes mac80211 to print out
  debugging messages for the managed-mode MLME. It
  should not be selected on production systems as some
  of the messages are remotely triggerable.
  
  Do not select this option.

MAC80211_MPATH_DEBUG
  Selecting this option causes mac80211 to print out very
  verbose mesh path selection debugging messages (when mac80211
  is taking part in a mesh network).
  It should not be selected on production systems as those
  messages are remotely triggerable.
  
  Do not select this option.

MAC80211_MPL_DEBUG
  Selecting this option causes mac80211 to print out very
  verbose mesh peer link debugging messages (when mac80211
  is taking part in a mesh network).
  It should not be selected on production systems as those
  messages are remotely triggerable.
  
  Do not select this option.

MAC80211_NOINLINE
  This option affects code generation in mac80211, when
  selected some functions are marked "noinline" to allow
  easier debugging of problems in the transmit and receive
  paths.
  
  This option increases code size a bit and inserts a lot
  of function calls in the code, but is otherwise safe to
  enable.
  
  If unsure, say N unless you expect to be finding problems
  in mac80211.

MAC80211_OCB_DEBUG
  Selecting this option causes mac80211 to print out
  very verbose OCB debugging messages. It should not
  be selected on production systems as those messages
  are remotely triggerable.
  
  Do not select this option.

MAC80211_PS_DEBUG
  Selecting this option causes mac80211 to print out very
  verbose power save mode debugging messages (when mac80211
  is an AP and has power saving stations.)
  It should not be selected on production systems as those
  messages are remotely triggerable.
  
  Do not select this option.

MAC80211_RC_DEFAULT
  No help

MAC80211_RC_DEFAULT_MINSTREL
  Select Minstrel as the default rate control algorithm.

MAC80211_RC_MINSTREL
  This option enables the 'minstrel' TX rate control algorithm

MAC80211_STA_DEBUG
  Selecting this option causes mac80211 to print out
  debugging messages for station addition/removal.
  
  Do not select this option.

MAC80211_STA_HASH_MAX_SIZE
  Setting this option to a low value (e.g. 4) allows testing the
  hash table with collisions relatively deterministically (just
  connect more stations than the number selected here.)
  
  If unsure, leave the default of 0.

MAC80211_TDLS_DEBUG
  Selecting this option causes mac80211 to print out very
  verbose TDLS selection debugging messages (when mac80211
  is a TDLS STA).
  It should not be selected on production systems as those
  messages are remotely triggerable.
  
  Do not select this option.

MAC80211_VERBOSE_DEBUG
  Selecting this option causes mac80211 to print out
  many debugging messages. It should not be selected
  on production systems as some of the messages are
  remotely triggerable.
  
  Do not select this option.

MAC802154
  This option enables the hardware independent IEEE 802.15.4
  networking stack for SoftMAC devices (the ones implementing
  only PHY level of IEEE 802.15.4 standard).
  
  Note: this implementation is neither certified, nor feature
  complete! Compatibility with other implementations hasn't
  been tested yet!
  
  If you plan to use HardMAC IEEE 802.15.4 devices, you can
  say N here. Alternatively you can say M to compile it as
  module.

MAC8390
  If you want to include a driver to support Nubus or LC-PDS
  Ethernet cards using an NS8390 chipset or its equivalent, say Y.

MAC89x0
  Support for CS89x0 chipset based Ethernet cards.  If you have a
  Nubus or LC-PDS network (Ethernet) card of this type, say Y here.
  
  To compile this driver as a module, choose M here. This module will
  be called mac89x0.

MACB
  The Cadence MACB ethernet interface is found on many Atmel AT32 and
  AT91 parts.  This driver also supports the Cadence GEM (Gigabit
  Ethernet MAC found in some ARM SoC devices).  Say Y to include
  support for the MACB/GEM chip.
  
  To compile this driver as a module, choose M here: the module
  will be macb.

MACB_PCI
  This is PCI wrapper for MACB driver.
  
  To compile this driver as a module, choose M here: the module
  will be called macb_pci.

MACB_USE_HWSTAMP
  Enable IEEE 1588 Precision Time Protocol (PTP) support for MACB.

MACE
  Power Macintoshes and clones with Ethernet built-in on the
  motherboard will usually use a MACE (Medium Access Control for
  Ethernet) interface. Say Y to include support for the MACE chip.
  
  To compile this driver as a module, choose M here: the module
  will be called mace.

MACE_AAUI_PORT
  Some Apple machines (notably the Apple Network Server) which use the
  MACE ethernet chip have an Apple AUI port (small 15-pin connector),
  instead of an 8-pin RJ45 connector for twisted-pair ethernet.  Say
  Y here if you have such a machine.  If unsure, say N.
  The driver will default to AAUI on ANS anyway, and if you use it as
  a module, you can provide the port_aaui=0|1 to force the driver.

MACHZ_WDT
  If you are using a ZF Micro MachZ processor, say Y here, otherwise
  N.  This is the driver for the watchdog timer built-in on that
  processor using ZF-Logic interface.  This watchdog simply watches
  your kernel to make sure it doesn't freeze, and if it does, it
  reboots your computer after a certain amount of time.
  
  To compile this driver as a module, choose M here: the
  module will be called machzwd.

MACINTOSH_DRIVERS
  Say Y here to get to see options for devices used with Macintosh
  computers. This option alone does not add any kernel code.
  
  If you say N, all options in this submenu will be skipped and disabled.

MACMACE
  Support for the onboard AMD 79C940 MACE Ethernet controller used in
  the 660AV and 840AV Macintosh.  If you have one of these Macintoshes
  say Y here.

MACSEC
  MACsec is an encryption standard for Ethernet.

MACSONIC
  Support for NatSemi SONIC based Ethernet devices.  This includes
  the onboard Ethernet in many Quadras as well as some LC-PDS,
  a few Nubus and all known Comm Slot Ethernet cards.  If you have
  one of these say Y here.
  
  To compile this driver as a module, choose M here. This module will
  be called macsonic.

MACVLAN
  This allows one to create virtual interfaces that map packets to
  or from specific MAC addresses to a particular interface.
  
  Macvlan devices can be added using the "ip" command from the
  iproute2 package starting with the iproute2-2.6.23 release:
  
  "ip link add link <real dev> [ address MAC ] [ NAME ] type macvlan"
  
  To compile this driver as a module, choose M here: the module
  will be called macvlan.

MACVTAP
  This adds a specialized tap character device driver that is based
  on the MAC-VLAN network interface, called macvtap. A macvtap device
  can be added in the same way as a macvlan device, using 'type
  macvtap', and then be accessed through the tap user space interface.
  
  To compile this driver as a module, choose M here: the module
  will be called macvtap.

MAC_EMUMOUSEBTN
  This provides generic support for emulating the 2nd and 3rd mouse
  button with keypresses.  If you say Y here, the emulation is still
  disabled by default.  The emulation is controlled by these sysctl
  entries:
  /proc/sys/dev/mac_hid/mouse_button_emulation
  /proc/sys/dev/mac_hid/mouse_button2_keycode
  /proc/sys/dev/mac_hid/mouse_button3_keycode
  
  If you have an Apple machine with a 1-button mouse, say Y here.
  
  To compile this driver as a module, choose M here: the
  module will be called mac_hid.

MAC_FLOPPY
  If you have a SWIM-3 (Super Woz Integrated Machine 3; from Apple)
  floppy controller, say Y here. Most commonly found in PowerMacs.

MAC_PARTITION
  Say Y here if you would like to use hard disks under Linux which
  were partitioned on a Macintosh.

MAC_SCSI
  This is the NCR 5380 SCSI controller included on most of the 68030
  based Macintoshes.  If you have one of these say Y and read the
  SCSI-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>.

MADERA_IRQ
  No help

MAG3110
  Say yes here to build support for the Freescale MAG3110 3-Axis
  magnetometer.
  
  To compile this driver as a module, choose M here: the module
  will be called mag3110.

MAGIC_SYSRQ
  If you say Y here, you will have some control over the system even
  if the system crashes for example during kernel debugging (e.g., you
  will be able to flush the buffer cache to disk, reboot the system
  immediately or dump some status information). This is accomplished
  by pressing various keys while holding SysRq (Alt+PrintScreen). It
  also works on a serial console (on PC hardware at least), if you
  send a BREAK and then within 5 seconds a command keypress. The
  keys are documented in <file:Documentation/admin-guide/sysrq.rst>.
  Don't say Y unless you really know what this hack does.

MAGIC_SYSRQ_DEFAULT_ENABLE
  Specifies which SysRq key functions are enabled by default.
  This may be set to 1 or 0 to enable or disable them all, or
  to a bitmask as described in Documentation/admin-guide/sysrq.rst.

MAGIC_SYSRQ_SERIAL
  Many embedded boards have a disconnected TTL level serial which can
  generate some garbage that can lead to spurious false sysrq detects.
  This option allows you to decide whether you want to enable the
  magic SysRq key.

MAGIC_SYSRQ_SERIAL_SEQUENCE
  Specifies a sequence of characters that can follow BREAK to enable
  SysRq on a serial console.
  
  If unsure, leave an empty string and the option will not be enabled.

MAILBOX
  Mailbox is a framework to control hardware communication between
  on-chip processors through queued messages and interrupt driven
  signals. Say Y if your platform supports hardware mailboxes.

MAILBOX_TEST
  Test client to help with testing new Controller driver
  implementations.

MANAGER_SBS
  Say Y here to include support for Smart Battery System Manager
  ICs. The driver reports online and charging status via sysfs.
  It presents itself also as I2C mux which allows to bind
  smart battery driver to its ports.
  Supported is for example LTC1760.
  
  This driver can also be built as a module. If so, the module will be
  called sbs-manager.

MANDATORY_FILE_LOCKING
  This option enables files appropriately marked files on appropriely
  mounted filesystems to support mandatory locking.
  
  To the best of my knowledge this is dead code that no one cares about.

MANTIS_CORE
  Support for PCI cards based on the Mantis and Hopper PCi bridge.
  
  Say Y if you own such a device and want to use it.

MAPPING_DIRTY_HELPERS
  No help

MARVELL_10G_PHY
  Support for the Marvell Alaska MV88X3310 and compatible PHYs.

MARVELL_PHY
  Currently has a driver for the 88E1XXX

MATH_EMULATION
  Linux can emulate a math coprocessor (used for floating point
  operations) if you don't have one. 486DX and Pentium processors have
  a math coprocessor built in, 486SX and 386 do not, unless you added
  a 487DX or 387, respectively. (The messages during boot time can
  give you some hints here ["man dmesg"].) Everyone needs either a
  coprocessor or this emulation.
  
  If you don't have a math coprocessor, you need to say Y here; if you
  say Y here even though you have a coprocessor, the coprocessor will
  be used nevertheless. (This behavior can be changed with the kernel
  command line option "no387", which comes handy if your coprocessor
  is broken. Try "man bootparam" or see the documentation of your boot
  loader (lilo or loadlin) about how to pass options to the kernel at
  boot time.) This means that it is a good idea to say Y here if you
  intend to use this kernel on different machines.
  
  More information about the internals of the Linux math coprocessor
  emulation can be found in <file:arch/x86/math-emu/README>.
  
  If you are not sure, say Y; apart from resulting in a 66 KB bigger
  kernel, it won't hurt.

MATOM
  Select this for the Intel Atom platform. Intel Atom CPUs have an
  in-order pipelining architecture and thus can benefit from
  accordingly optimized code. Use a recent GCC with specific Atom
  support in order to fully benefit from selecting this option.

MAX1027
  Say yes here to build support for Maxim SPI {10,12}-bit ADC models:
  max1027, max1029, max1031, max1227, max1229 and max1231.
  
  To compile this driver as a module, choose M here: the module will be
  called max1027.

MAX11100
  Say yes here to build support for Maxim max11100 SPI ADC
  
  To compile this driver as a module, choose M here: the module will be
  called max11100.

MAX1118
  Say yes here to build support for Maxim max1117/max1118/max1119
  8-bit, dual-channel ADCs.
  
  To compile this driver as a module, choose M here: the module will be
  called max1118.

MAX1241
  Say yes here to build support for Maxim max1241 12-bit, single-channel
  ADC.
  
  To compile this driver as a module, choose M here: the module will be
  called max1241.

MAX1363
  Say yes here to build support for many Maxim i2c analog to digital
  converters (ADC). (max1361, max1362, max1363, max1364, max1036,
  max1037, max1038, max1039, max1136, max1136, max1137, max1138,
  max1139, max1236, max1237, max11238, max1239, max11600, max11601,
  max11602, max11603, max11604, max11605, max11606, max11607,
  max11608, max11609, max11610, max11611, max11612, max11613,
  max11614, max11615, max11616, max11617, max11644, max11645,
  max11646, max11647) Provides direct access via sysfs and buffered
  data via the iio dev interface.
  
  To compile this driver as a module, choose M here: the module will be
  called max1363.

MAX30100
  Say Y here to build I2C interface support for the Maxim
  MAX30100 heart rate, and pulse oximeter sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called max30100.

MAX30102
  Say Y here to build I2C interface support for the Maxim
  MAX30102 heart rate, and pulse oximeter sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called max30102.

MAX31856
  If you say yes here you get support for MAX31856
  thermocouple sensor chip connected via SPI.
  
  This driver can also be built as a module.  If so, the module
  will be called max31856.

MAX44000
  Say Y here if you want to build support for Maxim Integrated's
  MAX44000 ambient and infrared proximity sensor device.
  
  To compile this driver as a module, choose M here:
  the module will be called max44000.

MAX44009
  Say Y here if you want to build support for Maxim Integrated's
  MAX44009 ambient light sensor device.
  
  To compile this driver as a module, choose M here:
  the module will be called max44009.

MAX517
  If you say yes here you get support for the following Maxim chips
  (I2C 8-Bit DACs with rail-to-rail outputs):
  MAX517 - Single channel, single reference
  MAX518 - Dual channel, ref=Vdd
  MAX519 - Dual channel, dual reference
  MAX520 - Quad channel, quad reference
  MAX521 - Octal channel, independent ref for ch0-3, shared ref for ch4-7
  
  This driver can also be built as a module.  If so, the module
  will be called max517.

MAX5432
  Say yes here to build support for the Maxim
  MAX5432, MAX5433, MAX5434 and MAX5435 digital
  potentiometer chips.
  
  To compile this driver as a module, choose M here: the
  module will be called max5432.

MAX5481
  Say yes here to build support for the Maxim
  MAX5481, MAX5482, MAX5483, MAX5484 digital potentiometer
  chips.
  
  To compile this driver as a module, choose M here: the
  module will be called max5481.

MAX5487
  Say yes here to build support for the Maxim
  MAX5487, MAX5488, MAX5489 digital potentiometer
  chips.
  
  To compile this driver as a module, choose M here: the
  module will be called max5487.

MAX5821
  Say yes here to build support for Maxim MAX5821
  10 bits DAC.

MAX63XX_WATCHDOG
  Support for memory mapped max63{69,70,71,72,73,74} watchdog timer.

MAX77620_THERMAL
  Support for die junction temperature warning alarm for Maxim
  Semiconductor PMIC MAX77620 device. Device generates two alarm
  interrupts when PMIC die temperature cross the threshold of
  120 degC and 140 degC.

MAX77620_WATCHDOG
  This is the driver for the Max77620 watchdog timer.
  Say 'Y' here to enable the watchdog timer support for
  MAX77620 chips. To compile this driver as a module,
  choose M here: the module will be called max77620_wdt.

MAX8925_POWER
  Say Y here to enable support for the battery charger in the Maxim
  MAX8925 PMIC.

MAX9611
  Say yes here to build support for Maxim max9611/max9612 current sense
  amplifier with 12-bits ADC interface.
  
  To compile this driver as a module, choose M here: the module will be
  called max9611.

MAXIM_THERMOCOUPLE
  If you say yes here you get support for the Maxim series of
  thermocouple sensors connected via SPI.
  
  Supported sensors:
   * MAX6675
   * MAX31855
  
  This driver can also be built as a module. If so, the module will
  be called maxim_thermocouple.

MAXSMP
  Enable maximum number of CPUS and NUMA Nodes for this architecture.
  If unsure, say N.

MAX_RAW_DEVS
  The maximum number of RAW devices that are supported.
  Default is 256. Increase this number in case you need lots of
  raw devices.

MAY_HAVE_SPARSE_IRQ
  No help

MB1232
  Say Y to build a driver for the ultrasonic sensors I2CXL of
  MaxBotix which have an i2c interface. It can be used to measure
  the distance of objects. Supported types are mb1202, mb1212,
  mb1222, mb1232, mb1242, mb7040, mb7137
  
  To compile this driver as a module, choose M here: the
  module will be called mb1232.

MC3230
  Say yes here to build support for the mCube MC3230 low-g tri-axial
  digital accelerometer.
  
  To compile this driver as a module, choose M here: the
  module will be called mc3230.

MCB
  The MCB (MEN Chameleon Bus) is a Bus specific to MEN Mikroelektronik
  FPGA based devices. It is used to identify MCB based IP-Cores within
  an FPGA and provide the necessary framework for instantiating drivers
  for these devices.
  
  If build as a module, the module is called mcb.ko

MCB_LPC
  This is a MCB carrier on a LPC or non PCI device.
  
  If build as a module, the module is called mcb-lpc.ko

MCB_PCI
  This is a MCB carrier on a PCI device. Both PCI attached on-board
  FPGAs as well as CompactPCI attached MCB FPGAs are supported with
  this driver.
  
  If build as a module, the module is called mcb-pci.ko

MCF8390
  This driver is for Ethernet devices using an NS8390-compatible
  chipset on many common ColdFire CPU based boards. Many of the older
  Freescale dev boards use this, and some other common boards like
  some SnapGear routers do as well.
  
  If you have one of these boards and want to use the network interface
  on them then choose Y. To compile this driver as a module, choose M
  here, the module will be called mcf8390.

MCF_EDMA
  Support the Freescale ColdFire eDMA engine, 64-channel
  implementation that performs complex data transfers with
  minimal intervention from a host processor.
  This module can be found on Freescale ColdFire mcf5441x SoCs.

MCORE2
  Select this for Intel Core 2 and newer Core 2 Xeons (Xeon 51xx and
  53xx) CPUs. You can distinguish newer from older Xeons by the CPU
  family in /proc/cpuinfo. Newer ones have 6 and older ones 15
  (not a typo)

MCP
  No help

MCP320X
  Say yes here to build support for Microchip Technology's
  MCP3001, MCP3002, MCP3004, MCP3008, MCP3201, MCP3202, MCP3204,
  MCP3208, MCP3301, MCP3550, MCP3551 and MCP3553 analog to digital
  converters.
  
  This driver can also be built as a module. If so, the module will be
  called mcp320x.

MCP3422
  Say yes here to build support for Microchip Technology's MCP3421
  MCP3422, MCP3423, MCP3424, MCP3425, MCP3426, MCP3427 or MCP3428
  analog to digital converters.
  
  This driver can also be built as a module. If so, the module will be
  called mcp3422.

MCP3911
  Say yes here to build support for Microchip Technology's MCP3911
  analog to digital converter.
  
  This driver can also be built as a module. If so, the module will be
  called mcp3911.

MCP4018
  Say yes here to build support for the Microchip
  MCP4017, MCP4018, MCP4019
  digital potentiometer chips.
  
  To compile this driver as a module, choose M here: the
  module will be called mcp4018.

MCP41010
  Say yes here to build support for the Microchip
  MCP41010, MCP41050, MCP41100,
  MCP42010, MCP42050, MCP42100
  digital potentiometer chips.
  
  To compile this driver as a module, choose M here: the
  module will be called mcp41010.

MCP4131
  Say yes here to build support for the Microchip
  MCP4131, MCP4132,
  MCP4141, MCP4142,
  MCP4151, MCP4152,
  MCP4161, MCP4162,
  MCP4231, MCP4232,
  MCP4241, MCP4242,
  MCP4251, MCP4252,
  MCP4261, MCP4262,
  digital potentiometer chips.
  
  To compile this driver as a module, choose M here: the
  module will be called mcp4131.

MCP4531
  Say yes here to build support for the Microchip
  MCP4531, MCP4532, MCP4541, MCP4542,
  MCP4551, MCP4552, MCP4561, MCP4562,
  MCP4631, MCP4632, MCP4641, MCP4642,
  MCP4651, MCP4652, MCP4661, MCP4662
  digital potentiometer chips.
  
  To compile this driver as a module, choose M here: the
  module will be called mcp4531.

MCP4725
  Say Y here if you want to build a driver for the Microchip
  MCP 4725/6 12-bit digital-to-analog converter (DAC) with I2C
  interface.
  
  To compile this driver as a module, choose M here: the module
  will be called mcp4725.

MCP4922
  Say yes here to build the driver for the Microchip MCP4902
  MCP4912, and MCP4922 DAC devices.
  
  To compile this driver as a module, choose M here: the module
  will be called mcp4922.

MCP_SA11X0
  No help

MCP_UCB1200
  No help

MCP_UCB1200_TS
  No help

MCRUSOE
  Select this for a Transmeta Crusoe processor.  Treats the processor
  like a 586 with TSC, and sets some GCC optimization flags (like a
  Pentium Pro with no alignment requirements).

MCYRIXIII
  Select this for a Cyrix III or C3 chip.  Presently Linux and GCC
  treat this chip as a generic 586. Whilst the CPU is 686 class,
  it lacks the cmov extension which gcc assumes is present when
  generating 686 code.
  Note that Nehemiah (Model 9) and above will not boot with this
  kernel due to them lacking the 3DNow! instructions used in earlier
  incarnations of the CPU.

MD
  Support multiple physical spindles through a single logical device.
  Required for RAID and logical volume management.

MDA_CONSOLE
  Say Y here if you have an old MDA or monochrome Hercules graphics
  adapter in your system acting as a second head ( = video card). You
  will then be able to use two monitors with your Linux system. Do not
  say Y here if your MDA card is the primary card in your system; the
  normal VGA driver will handle it.
  
  To compile this driver as a module, choose M here: the
  module will be called mdacon.
  
  If unsure, say N.

MDIO
  No help

MDIO_ASPEED
  This module provides a driver for the independent MDIO bus
  controllers found in the ASPEED AST2600 SoC. This is a driver for the
  third revision of the ASPEED MDIO register interface - the first two
  revisions are the "old" and "new" interfaces found in the AST2400 and
  AST2500, embedded in the MAC. For legacy reasons, FTGMAC100 driver
  continues to drive the embedded MDIO controller for the AST2400 and
  AST2500 SoCs, so say N if AST2600 support is not required.

MDIO_BCM_IPROC
  This module provides a driver for the MDIO busses found in the
  Broadcom iProc SoC's.

MDIO_BCM_UNIMAC
  This module provides a driver for the Broadcom UniMAC MDIO busses.
  This hardware can be found in the Broadcom GENET Ethernet MAC
  controllers as well as some Broadcom Ethernet switches such as the
  Starfighter 2 switches.

MDIO_BITBANG
  This module implements the MDIO bus protocol in software,
  for use by low level drivers that export the ability to
  drive the relevant pins.
  
  If in doubt, say N.

MDIO_BUS
  This internal symbol is used for link time dependencies and it
  reflects whether the mdio_bus/mdio_device code is built as a
  loadable module or built-in.

MDIO_BUS_MUX
  This module provides a driver framework for MDIO bus
  multiplexers which connect one of several child MDIO busses
  to a parent bus.  Switching between child busses is done by
  device specific drivers.

MDIO_BUS_MUX_BCM_IPROC
  This module provides a driver for MDIO bus multiplexers found in
  iProc based Broadcom SoCs. This multiplexer connects one of several
  child MDIO bus to a parent bus. Buses could be internal as well as
  external and selection logic lies inside the same multiplexer.

MDIO_BUS_MUX_GPIO
  This module provides a driver for MDIO bus multiplexers that
  are controlled via GPIO lines.  The multiplexer connects one of
  several child MDIO busses to a parent bus.  Child bus
  selection is under the control of GPIO lines.

MDIO_BUS_MUX_MESON_G12A
  This module provides a driver for the MDIO multiplexer/glue of
  the amlogic g12a SoC. The multiplexers connects either the external
  or the internal MDIO bus to the parent bus.

MDIO_BUS_MUX_MMIOREG
  This module provides a driver for MDIO bus multiplexers that
  are controlled via a simple memory-mapped device, like an FPGA.
  The multiplexer connects one of several child MDIO busses to a
  parent bus.  Child bus selection is under the control of one of
  the FPGA's registers.
  
  Currently, only 8/16/32 bits registers are supported.

MDIO_BUS_MUX_MULTIPLEXER
  This module provides a driver for MDIO bus multiplexer
  that is controlled via the kernel multiplexer subsystem. The
  bus multiplexer connects one of several child MDIO busses to
  a parent bus.  Child bus selection is under the control of
  the kernel multiplexer subsystem.

MDIO_CAVIUM
  No help

MDIO_DEVICE
  MDIO devices and driver infrastructure code.

MDIO_DEVRES
  No help

MDIO_GPIO
  Supports GPIO lib-based MDIO busses.
  
  To compile this driver as a module, choose M here: the module
  will be called mdio-gpio.

MDIO_HISI_FEMAC
  This module provides a driver for the MDIO busses found in the
  Hisilicon SoC that have an Fast Ethernet MAC.

MDIO_I2C
  Support I2C based PHYs.  This provides a MDIO bus bridged
  to I2C to allow PHYs connected in I2C mode to be accessed
  using the existing infrastructure.
  
  This is library mode.

MDIO_IPQ4019
  This driver supports the MDIO interface found in Qualcomm
  IPQ40xx series Soc-s.

MDIO_IPQ8064
  This driver supports the MDIO interface found in the network
  interface units of the IPQ8064 SoC

MDIO_MOXART
  This driver supports the MDIO interface found in the network
  interface units of the MOXA ART SoC

MDIO_MSCC_MIIM
  This driver supports the MIIM (MDIO) interface found in the network
  switches of the Microsemi SoCs; it is recommended to switch on
  CONFIG_HIGH_RES_TIMERS

MDIO_MVUSB
  A USB to MDIO converter present on development boards for
  Marvell's Link Street family of Ethernet switches.

MDIO_OCTEON
  This module provides a driver for the Octeon and ThunderX MDIO
  buses. It is required by the Octeon and ThunderX ethernet device
  drivers on some systems.

MDIO_SUN4I
  This driver supports the MDIO interface found in the network
  interface units of the Allwinner SoC that have an EMAC (A10,
  A12, A10s, etc.)

MDIO_THUNDER
  This driver supports the MDIO interfaces found on Cavium
  ThunderX SoCs when the MDIO bus device appears as a PCI
  device.

MDIO_XGENE
  This module provides a driver for the MDIO busses found in the
  APM X-Gene SoC's.

MDM_GCC_9615
  Support for the global clock controller on mdm9615 devices.
  Say Y if you want to use peripheral devices such as UART, SPI,
  i2c, USB, SD/eMMC, etc.

MDM_LCC_9615
  Support for the LPASS clock controller on mdm9615 devices.
  Say Y if you want to use audio devices such as i2s, pcm,
  SLIMBus, etc.

MD_AUTODETECT
  If you say Y here, then the kernel will try to autodetect raid
  arrays as part of its boot process.
  
  If you don't use raid and say Y, this autodetection can cause
  a several-second delay in the boot time due to various
  synchronisation steps that are part of this step.
  
  If unsure, say Y.

MD_CLUSTER
  Clustering support for MD devices. This enables locking and
  synchronization across multiple systems on the cluster, so all
  nodes in the cluster can access the MD devices simultaneously.
  
  This brings the redundancy (and uptime) of RAID levels across the
  nodes of the cluster. Currently, it can work with raid1 and raid10
  (limited support).
  
  If unsure, say N.

MD_FAULTY
  The "faulty" module allows for a block device that occasionally returns
  read or write errors.  It is useful for testing.
  
  In unsure, say N.

MD_LINEAR
  If you say Y here, then your multiple devices driver will be able to
  use the so-called linear mode, i.e. it will combine the hard disk
  partitions by simply appending one to the other.
  
  To compile this as a module, choose M here: the module
  will be called linear.
  
  If unsure, say Y.

MD_MULTIPATH
  MD_MULTIPATH provides a simple multi-path personality for use
  the MD framework.  It is not under active development.  New
  projects should consider using DM_MULTIPATH which has more
  features and more testing.
  
  If unsure, say N.

MD_RAID0
  If you say Y here, then your multiple devices driver will be able to
  use the so-called raid0 mode, i.e. it will combine the hard disk
  partitions into one logical device in such a fashion as to fill them
  up evenly, one chunk here and one chunk there. This will increase
  the throughput rate if the partitions reside on distinct disks.
  
  Information about Software RAID on Linux is contained in the
  Software-RAID mini-HOWTO, available from
  <https://www.tldp.org/docs.html#howto>. There you will also
  learn where to get the supporting user space utilities raidtools.
  
  To compile this as a module, choose M here: the module
  will be called raid0.
  
  If unsure, say Y.

MD_RAID1
  A RAID-1 set consists of several disk drives which are exact copies
  of each other.  In the event of a mirror failure, the RAID driver
  will continue to use the operational mirrors in the set, providing
  an error free MD (multiple device) to the higher levels of the
  kernel.  In a set with N drives, the available space is the capacity
  of a single drive, and the set protects against a failure of (N - 1)
  drives.
  
  Information about Software RAID on Linux is contained in the
  Software-RAID mini-HOWTO, available from
  <https://www.tldp.org/docs.html#howto>.  There you will also
  learn where to get the supporting user space utilities raidtools.
  
  If you want to use such a RAID-1 set, say Y.  To compile this code
  as a module, choose M here: the module will be called raid1.
  
  If unsure, say Y.

MD_RAID10
  RAID-10 provides a combination of striping (RAID-0) and
  mirroring (RAID-1) with easier configuration and more flexible
  layout.
  Unlike RAID-0, but like RAID-1, RAID-10 requires all devices to
  be the same size (or at least, only as much as the smallest device
  will be used).
  RAID-10 provides a variety of layouts that provide different levels
  of redundancy and performance.
  
  RAID-10 requires mdadm-1.7.0 or later, available at:
  
  https://www.kernel.org/pub/linux/utils/raid/mdadm/
  
  If unsure, say Y.

MD_RAID456
  A RAID-5 set of N drives with a capacity of C MB per drive provides
  the capacity of C * (N - 1) MB, and protects against a failure
  of a single drive. For a given sector (row) number, (N - 1) drives
  contain data sectors, and one drive contains the parity protection.
  For a RAID-4 set, the parity blocks are present on a single drive,
  while a RAID-5 set distributes the parity across the drives in one
  of the available parity distribution methods.
  
  A RAID-6 set of N drives with a capacity of C MB per drive
  provides the capacity of C * (N - 2) MB, and protects
  against a failure of any two drives. For a given sector
  (row) number, (N - 2) drives contain data sectors, and two
  drives contains two independent redundancy syndromes.  Like
  RAID-5, RAID-6 distributes the syndromes across the drives
  in one of the available parity distribution methods.
  
  Information about Software RAID on Linux is contained in the
  Software-RAID mini-HOWTO, available from
  <https://www.tldp.org/docs.html#howto>. There you will also
  learn where to get the supporting user space utilities raidtools.
  
  If you want to use such a RAID-4/RAID-5/RAID-6 set, say Y.  To
  compile this code as a module, choose M here: the module
  will be called raid456.
  
  If unsure, say Y.

MEDIATEK_MT6360_ADC
  Say Y here to enable MT6360 ADC support.
  Integrated for System Monitoring includes
  is used in smartphones and tablets and supports a 11 channel
  general purpose ADC.

MEDIATEK_MT6577_AUXADC
  Say yes here to enable support for MediaTek mt65xx AUXADC.
  
  The driver supports immediate mode operation to read from one of sixteen
  channels (external or internal).
  
  This driver can also be built as a module. If so, the module will be
  called mt6577_auxadc.

MEDIATEK_WATCHDOG
  Say Y here to include support for the watchdog timer
  in Mediatek SoCs.
  To compile this driver as a module, choose M here: the
  module will be called mtk_wdt.

MEDIA_ALTERA_CI
  An Altera FPGA CI module for NetUP Dual DVB-T/C RF CI card.
  
  To compile this driver as a module, choose M here: the
  module will be called altera-ci

MEDIA_ANALOG_TV_SUPPORT
  Enable analog TV support.
  
  Say Y when you have a TV board with analog support or with a
  hybrid analog/digital TV chipset.
  
  Note: There are several DVB cards that are based on chips that
        support both analog and digital TV. Disabling this option
        will disable support for them.

MEDIA_ATTACH
  No help

MEDIA_CAMERA_SUPPORT
  Enable support for webcams and video grabbers.
  
  Say Y when you have a webcam or a video capture grabber board.

MEDIA_CEC_RC
  Pass on CEC remote control messages to the RC framework.

MEDIA_CEC_SUPPORT
  Enable support for HDMI CEC (Consumer Electronics Control),
  which is an optional HDMI feature.
  
  Say Y when you have an HDMI receiver, transmitter or a USB CEC
  adapter that supports HDMI CEC.

MEDIA_COMMON_OPTIONS
  No help

MEDIA_CONTROLLER
  Enable the media controller API used to query media devices internal
  topology and configure it dynamically.
  
  This API is mostly used by camera interfaces in embedded platforms.

MEDIA_CONTROLLER_DVB
  Enable the media controller API support for DVB.
  
  This is currently experimental.

MEDIA_CONTROLLER_REQUEST_API
  DO NOT ENABLE THIS OPTION UNLESS YOU KNOW WHAT YOU'RE DOING.
  
  This option enables the Request API for the Media controller and V4L2
  interfaces. It is currently needed by a few stateless codec drivers.
  
  There is currently no intention to provide API or ABI stability for
  this new API as of yet.

MEDIA_DIGITAL_TV_SUPPORT
  Enable digital TV support.
  
  Say Y when you have a board with digital support or a board with
  hybrid digital TV and analog TV.

MEDIA_HIDE_ANCILLARY_SUBDRV
  No help

MEDIA_PCI_SUPPORT
  Enable media drivers for PCI/PCIe bus.
  If you have such devices, say Y.

MEDIA_PLATFORM_SUPPORT
  Enable support for complex cameras, codecs, and other hardware
  that are integrated at the CPU, GPU or on Image Signalling Processor
  and don't use PCI, USB or Firewire buses.
  
  This is found on Embedded hardware (SoC), on V4L2 codecs and
  on some GPU and newer CPU chipsets.
  
  Say Y when you want to be able so see such devices.

MEDIA_RADIO_SUPPORT
  Enable AM/FM radio support.
  
  Additional info and docs are available on the web at
  <https://linuxtv.org>
  
  Say Y when you have a board with radio support.
  
  Note: There are several TV cards that are based on chips that
        support radio reception. Disabling this option will
        disable support for them.

MEDIA_SDR_SUPPORT
  Enable software defined radio support.
  
  Say Y when you have a software defined radio device.

MEDIA_SUBDRV_AUTOSELECT
  By default, a media driver auto-selects all possible ancillary
  devices such as tuners, sensors, video encoders/decoders and
  frontends, that are used by any of the supported devices.
  
  This is generally the right thing to do, except when there
  are strict constraints with regards to the kernel size,
  like on embedded systems.
  
  Use this option with care, as deselecting ancillary drivers which
  are, in fact, necessary will result in the lack of the needed
  functionality for your device (it may not tune or may not have
  the needed demodulators).
  
  If unsure say Y.

MEDIA_SUPPORT
  If you want to use media devices, including Webcams, Video grabber
  devices and/or TV devices, V4L2 codecs, etc, enable this option
  and other options below.
  
  Additional info and docs are available on the web at
  <https://linuxtv.org>

MEDIA_SUPPORT_FILTER
  Configuring the media subsystem can be complex, as there are
  hundreds of drivers and other config options.
  
  This menu offers option that will help the Kernel's config
  system to hide drivers that are out of the scope of the
  user needs, and disabling core support for unused APIs.
  
  If not selected, all non-optional media core functionality
  needed to support media drivers will be enabled. Also, all
  media device drivers should be shown.

MEDIA_TEST_SUPPORT
  Those drivers should not be used on production Kernels, but
  can be useful on debug ones. It enables several dummy drivers
  that simulate a real hardware. Very useful to test userspace
  applications and to validate if the subsystem core is doesn't
  have regressions.
  
  Say Y if you want to use some virtual test driver.
  
  In case of doubts, say N.
  Say Y when you have a software defined radio device.

MEDIA_TUNER
  No help

MEDIA_TUNER_E4000
  Elonics E4000 silicon tuner driver.

MEDIA_TUNER_FC0011
  Fitipower FC0011 silicon tuner driver.

MEDIA_TUNER_FC0012
  Fitipower FC0012 silicon tuner driver.

MEDIA_TUNER_FC0013
  Fitipower FC0013 silicon tuner driver.

MEDIA_TUNER_FC2580
  FCI FC2580 silicon tuner driver.

MEDIA_TUNER_IT913X
  ITE Tech IT913x silicon tuner driver.

MEDIA_TUNER_M88RS6000T
  Montage M88RS6000 internal tuner.

MEDIA_TUNER_MAX2165
  A driver for the silicon tuner MAX2165 from Maxim.

MEDIA_TUNER_MC44S803
  Say Y here to support the Freescale MC44S803 based tuners

MEDIA_TUNER_MSI001
  Mirics MSi001 silicon tuner driver.

MEDIA_TUNER_MT2060
  A driver for the silicon IF tuner MT2060 from Microtune.

MEDIA_TUNER_MT2063
  A driver for the silicon IF tuner MT2063 from Microtune.

MEDIA_TUNER_MT20XX
  Say Y here to include support for the MT2032 / MT2050 tuner.

MEDIA_TUNER_MT2131
  A driver for the silicon baseband tuner MT2131 from Microtune.

MEDIA_TUNER_MT2266
  A driver for the silicon baseband tuner MT2266 from Microtune.

MEDIA_TUNER_MXL301RF
  MaxLinear MxL301RF OFDM tuner driver.

MEDIA_TUNER_MXL5005S
  A driver for the silicon tuner MXL5005S from MaxLinear.

MEDIA_TUNER_MXL5007T
  A driver for the silicon tuner MxL5007T from MaxLinear.

MEDIA_TUNER_QM1D1B0004
  Sharp QM1D1B0004 ISDB-S tuner driver.

MEDIA_TUNER_QM1D1C0042
  Sharp QM1D1C0042 trellis coded 8PSK tuner driver.

MEDIA_TUNER_QT1010
  A driver for the silicon tuner QT1010 from Quantek.

MEDIA_TUNER_R820T
  Rafael Micro R820T silicon tuner driver.

MEDIA_TUNER_SI2157
  Silicon Labs Si2157 silicon tuner driver.

MEDIA_TUNER_SIMPLE
  Say Y here to include support for various simple tuners.

MEDIA_TUNER_TDA18212
  NXP TDA18212 silicon tuner driver.

MEDIA_TUNER_TDA18218
  NXP TDA18218 silicon tuner driver.

MEDIA_TUNER_TDA18250
  Say Y here to include support for TDA18250 tuner.

MEDIA_TUNER_TDA18271
  A silicon tuner module. Say Y when you want to support this tuner.

MEDIA_TUNER_TDA827X
  A DVB-T silicon tuner module. Say Y when you want to support this tuner.

MEDIA_TUNER_TDA8290
  Say Y here to include support for Philips TDA8290+8275(a) tuner.

MEDIA_TUNER_TDA9887
  Say Y here to include support for Philips TDA9885/6/7
  analog IF demodulator.

MEDIA_TUNER_TEA5761
  Say Y here to include support for the Philips TEA5761 radio tuner.

MEDIA_TUNER_TEA5767
  Say Y here to include support for the Philips TEA5767 radio tuner.

MEDIA_TUNER_TUA9001
  Infineon TUA 9001 silicon tuner driver.

MEDIA_TUNER_XC2028
  Say Y here to include support for the xc2028/xc3028 tuners.

MEDIA_TUNER_XC4000
  A driver for the silicon tuner XC4000 from Xceive.
  This device is only used inside a SiP called together with a
  demodulator for now.

MEDIA_TUNER_XC5000
  A driver for the silicon tuner XC5000 from Xceive.
  This device is only used inside a SiP called together with a
  demodulator for now.

MEDIA_USB_SUPPORT
  Enable media drivers for USB bus.
  If you have such devices, say Y.

MEFFICEON
  Select this for a Transmeta Efficeon processor.

MEGARAID_LEGACY
  This driver supports the LSI MegaRAID 418, 428, 438, 466, 762, 490
  and 467 SCSI host adapters. This driver also support the all U320
  RAID controllers
  
  To compile this driver as a module, choose M here: the
  module will be called megaraid

MEGARAID_MAILBOX
  List of supported controllers
  
  OEM        Product Name                VID :DID :SVID:SSID
  ---        ------------                ---- ---- ---- ----
  Dell PERC3/QC                        101E:1960:1028:0471
  Dell PERC3/DC                        101E:1960:1028:0493
  Dell PERC3/SC                        101E:1960:1028:0475
  Dell PERC3/Di                        1028:000E:1028:0123
  Dell PERC4/SC                        1000:1960:1028:0520
  Dell PERC4/DC                        1000:1960:1028:0518
  Dell PERC4/QC                        1000:0407:1028:0531
  Dell PERC4/Di                        1028:000F:1028:014A
  Dell PERC 4e/Si                        1028:0013:1028:016c
  Dell PERC 4e/Di                        1028:0013:1028:016d
  Dell PERC 4e/Di                        1028:0013:1028:016e
  Dell PERC 4e/Di                        1028:0013:1028:016f
  Dell PERC 4e/Di                        1028:0013:1028:0170
  Dell PERC 4e/DC                        1000:0408:1028:0002
  Dell PERC 4e/SC                        1000:0408:1028:0001
  LSI MegaRAID SCSI 320-0                1000:1960:1000:A520
  LSI MegaRAID SCSI 320-1                1000:1960:1000:0520
  LSI MegaRAID SCSI 320-2                1000:1960:1000:0518
  LSI MegaRAID SCSI 320-0X        1000:0407:1000:0530
  LSI MegaRAID SCSI 320-2X        1000:0407:1000:0532
  LSI MegaRAID SCSI 320-4X        1000:0407:1000:0531
  LSI MegaRAID SCSI 320-1E        1000:0408:1000:0001
  LSI MegaRAID SCSI 320-2E        1000:0408:1000:0002
  LSI MegaRAID SATA 150-4                1000:1960:1000:4523
  LSI MegaRAID SATA 150-6                1000:1960:1000:0523
  LSI MegaRAID SATA 300-4X        1000:0409:1000:3004
  LSI MegaRAID SATA 300-8X        1000:0409:1000:3008
  INTEL RAID Controller SRCU42X        1000:0407:8086:0532
  INTEL RAID Controller SRCS16        1000:1960:8086:0523
  INTEL RAID Controller SRCU42E        1000:0408:8086:0002
  INTEL RAID Controller SRCZCRX        1000:0407:8086:0530
  INTEL RAID Controller SRCS28X        1000:0409:8086:3008
  INTEL RAID Controller SROMBU42E        1000:0408:8086:3431
  INTEL RAID Controller SROMBU42E        1000:0408:8086:3499
  INTEL RAID Controller SRCU51L        1000:1960:8086:0520
  FSC MegaRAID PCI Express ROMB        1000:0408:1734:1065
  ACER MegaRAID ROMB-2E                1000:0408:1025:004D
  NEC MegaRAID PCI Express ROMB        1000:0408:1033:8287
  
  To compile this driver as a module, choose M here: the
  module will be called megaraid_mbox

MEGARAID_MM
  Management Module provides ioctl, sysfs support for LSI Logic
  RAID controllers.
  To compile this driver as a module, choose M here: the
  module will be called megaraid_mm

MEGARAID_NEWGEN
  LSI Logic RAID Device Drivers

MEGARAID_SAS
  Module for LSI Logic's SAS based RAID controllers.
  To compile this driver as a module, choose 'm' here.
  Module will be called megaraid_sas
  

MELAN
  Select this for an AMD Elan processor.
  
  Do not use this option for K6/Athlon/Opteron processors!

MELLANOX_PLATFORM
  Say Y here to get to see options for platform support for
  Mellanox systems. This option alone does not add any kernel code.
  
  If you say N, all options in this submenu will be skipped and disabled.

MEMBARRIER
  Enable the membarrier() system call that allows issuing memory
  barriers across all running threads, which can be used to distribute
  the cost of user-space memory barriers asymmetrically by transforming
  pairs of memory barriers into pairs consisting of membarrier() and a
  compiler barrier.
  
  If unsure, say Y.

MEMCG
  Provides control over the memory footprint of tasks in a cgroup.

MEMCG_KMEM
  No help

MEMCG_SWAP
  No help

MEMFD_CREATE
  No help

MEMORY
  This option allows to enable specific memory controller drivers,
  useful mostly on embedded systems.  These could be controllers
  for DRAM (SDR, DDR), ROM, SRAM and others.  The drivers features
  vary from memory tuning and frequency scaling to enabling
  access to attached peripherals through memory bus.

MEMORY_BALLOON
  No help

MEMORY_FAILURE
  Enables code to recover from some memory failures on systems
  with MCA recovery. This allows a system to continue running
  even when some of its memory has uncorrected errors. This requires
  special hardware support and typically ECC memory.

MEMORY_HOTPLUG
  No help

MEMORY_HOTPLUG_DEFAULT_ONLINE
  This option sets the default policy setting for memory hotplug
  onlining policy (/sys/devices/system/memory/auto_online_blocks) which
  determines what happens to newly added memory regions. Policy setting
  can always be changed at runtime.
  See Documentation/admin-guide/mm/memory-hotplug.rst for more information.
  
  Say Y here if you want all hot-plugged memory blocks to appear in
  'online' state by default.
  Say N here if you want the default policy to keep all hot-plugged
  memory blocks in 'offline' state.

MEMORY_HOTPLUG_SPARSE
  No help

MEMORY_HOTREMOVE
  No help

MEMORY_ISOLATION
  No help

MEMORY_NOTIFIER_ERROR_INJECT
  This option provides the ability to inject artificial errors to
  memory hotplug notifier chain callbacks.  It is controlled through
  debugfs interface under /sys/kernel/debug/notifier-error-inject/memory
  
  If the notifier call chain should be failed with some events
  notified, write the error code to "actions/<notifier event>/error".
  
  Example: Inject memory hotplug offline error (-12 == -ENOMEM)
  
  # cd /sys/kernel/debug/notifier-error-inject/memory
  # echo -12 > actions/MEM_GOING_OFFLINE/error
  # echo offline > /sys/devices/system/memory/memoryXXX/state
  bash: echo: write error: Cannot allocate memory
  
  To compile this code as a module, choose M here: the module will
  be called memory-notifier-error-inject.
  
  If unsure, say N.

MEMREGION
  No help

MEMSTICK
  Sony MemoryStick is a proprietary storage/extension card protocol.
  
  If you want MemoryStick support, you should say Y here and also
  to the specific driver for your MemoryStick interface.

MEMSTICK_DEBUG
  This is an option for use by developers; most people should
  say N here.  This enables MemoryStick core and driver debugging.

MEMSTICK_JMICRON_38X
  Say Y here if you want to be able to access MemoryStick cards with
  the JMicron(R) JMB38X MemoryStick card reader.
  
  To compile this driver as a module, choose M here: the
  module will be called jmb38x_ms.

MEMSTICK_R592
  Say Y here if you want to be able to access MemoryStick cards with
  the Ricoh R5C592 MemoryStick card reader (which is part of 5 in one
        multifunction reader)
  
  To compile this driver as a module, choose M here: the module will
  be called r592.

MEMSTICK_REALTEK_PCI
  Say Y here to include driver code to support Memstick card interface
  of Realtek PCI-E card reader
  
  To compile this driver as a module, choose M here: the module will
  be called rtsx_pci_ms.

MEMSTICK_REALTEK_USB
  Say Y here to include driver code to support Memstick card interface
  of Realtek RTS5129/39 series USB card reader
  
  To compile this driver as a module, choose M here: the module will
  be called rts5139_ms.

MEMSTICK_TIFM_MS
  Say Y here if you want to be able to access MemoryStick cards with
  the Texas Instruments(R) Flash Media card reader, found in many
  laptops.
  This option 'selects' (turns on, enables) 'TIFM_CORE', but you
  probably also need appropriate card reader host adapter, such as
  'Misc devices: TI Flash Media PCI74xx/PCI76xx host adapter support
  (TIFM_7XX1)'.
  
  To compile this driver as a module, choose M here: the
  module will be called tifm_ms.

MEMSTICK_UNSAFE_RESUME
  If you say Y here, the MemoryStick layer will assume that all
  cards stayed in their respective slots during the suspend. The
  normal behaviour is to remove them at suspend and
  redetecting them at resume. Breaking this assumption will
  in most cases result in data corruption.
  
  This option is usually just for embedded systems which use
  a MemoryStick card for rootfs. Most people should say N here.

MEMTEST
  This option adds a kernel parameter 'memtest', which allows memtest
  to be set.
        memtest=0, mean disabled; -- default
        memtest=1, mean do 1 test pattern;
        ...
        memtest=17, mean do 17 test patterns.
  If you are unsure how to answer this question, answer N.

MEM_SOFT_DIRTY
  This option enables memory changes tracking by introducing a
  soft-dirty bit on pte-s. This bit it set when someone writes
  into a page just as regular dirty bit, but unlike the latter
  it can be cleared by hands.
  
  See Documentation/admin-guide/mm/soft-dirty.rst for more details.

MENELAUS
  If you say yes here you get support for the Texas Instruments
  TWL92330/Menelaus Power Management chip. This include voltage
  regulators, Dual slot memory card transceivers, real-time clock
  and other features that are often used in portable devices like
  cell phones and PDAs.

MENF21BMC_WATCHDOG
  Say Y here to include support for the MEN 14F021P00 BMC Watchdog.
  
  This driver can also be built as a module. If so the module
  will be called menf21bmc_wdt.

MENZ069_WATCHDOG
  Say Y here to include support for the MEN 16Z069 Watchdog.
  
  This driver can also be built as a module. If so the module
  will be called menz069_wdt.

MEN_A21_WDT
  Watchdog driver for MEN A21 VMEbus CPU Carrier Boards.
  
  The driver can also be built as a module. If so, the module will be
  called mena21_wdt.
  
  If unsure select N here.

MEN_Z188_ADC
  Say yes here to enable support for the MEN 16z188 ADC IP-Core on a MCB
  carrier.
  
  This driver can also be built as a module. If so, the module will be
  called men_z188_adc.

MESON6_TIMER
  Enables the support for the Meson6 timer driver.

MESON_CANVAS
  Say yes to support the canvas IP for Amlogic SoCs.

MESON_CLK_MEASURE
  Say yes to support of Measuring a set of internal SoC clocks
  from the debugfs interface.

MESON_EE_PM_DOMAINS
  Say yes to expose Amlogic Meson Everything-Else Power Domains as
  Generic Power Domains.

MESON_EFUSE
  This is a driver to retrieve specific values from the eFuse found on
  the Amlogic Meson GX SoCs.
  
  This driver can also be built as a module. If so, the module
  will be called nvmem_meson_efuse.

MESON_GXBB_WATCHDOG
  Say Y here to include support for the watchdog timer
  in Amlogic Meson GXBB SoCs.
  To compile this driver as a module, choose M here: the
  module will be called meson_gxbb_wdt.

MESON_GXL_PHY
  Currently has a driver for the Amlogic Meson GXL Internal PHY

MESON_GX_PM_DOMAINS
  Say yes to expose Amlogic Meson GX Power Domains as
  Generic Power Domains.

MESON_GX_SOCINFO
  Say yes to support decoding of Amlogic Meson GX SoC family
  information about the type, package and version.

MESON_IRQ_GPIO
  Support Meson SoC Family GPIO Interrupt Multiplexer

MESON_MX_EFUSE
  This is a driver to retrieve specific values from the eFuse found on
  the Amlogic Meson6, Meson8 and Meson8b SoCs.
  
  This driver can also be built as a module. If so, the module
  will be called nvmem_meson_mx_efuse.

MESON_MX_SOCINFO
  Say yes to support decoding of Amlogic Meson6, Meson8,
  Meson8b and Meson8m2 SoC family information about the type
  and version.

MESON_SARADC
  Say yes here to build support for the SAR ADC found in Amlogic Meson
  SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called meson_saradc.

MESON_SECURE_PM_DOMAINS
  Support for the power controller on Amlogic A1/C1 series.
  Say yes to expose Amlogic Meson Secure Power Domains as Generic
  Power Domains.

MESON_SM
  Say y here to enable the Amlogic secure monitor driver

MESON_WATCHDOG
  Say Y here to include support for the watchdog timer
  in Amlogic Meson SoCs.
  To compile this driver as a module, choose M here: the
  module will be called meson_wdt.

MESSAGE_LOGLEVEL_DEFAULT
  Default log level for printk statements with no specified priority.
  
  This was hard-coded to KERN_WARNING since at least 2.6.10 but folks
  that are auditing their logs closely may want to set it to a lower
  priority.
  
  Note: This does not affect what message level gets printed on the console
  by default. To change that, use loglevel=<x> in the kernel bootargs,
  or pick a different CONSOLE_LOGLEVEL_DEFAULT configuration value.

MFD_88PM800
  This supports for Marvell 88PM800 Power Management IC.
  This includes the I2C driver and the core APIs _only_, you have to
  select individual components like voltage regulators, RTC and
  battery-charger under the corresponding menus.

MFD_88PM805
  This supports for Marvell 88PM805 Power Management IC. This includes
  the I2C driver and the core APIs _only_, you have to select individual
  components like codec device, headset/Mic device under the
  corresponding menus.

MFD_88PM860X
  This supports for Marvell 88PM8606/88PM8607 Power Management IC.
  This includes the I2C driver and the core APIs _only_, you have to
  select individual components like voltage regulators, RTC and
  battery-charger under the corresponding menus.

MFD_AAT2870_CORE
  If you say yes here you get support for the AAT2870.
  This driver provides common support for accessing the device,
  additional drivers must be enabled in order to use the
  functionality of the device.

MFD_AC100
  If you say Y here you get support for the X-Powers AC100 audio codec
  IC.
  This driver include only the core APIs. You have to select individual
  components like codecs or RTC under the corresponding menus.

MFD_ACT8945A
  Support for the ACT8945A PMIC from Active-semi. This device
  features three step-down DC/DC converters and four low-dropout
  linear regulators, along with a complete ActivePath battery
  charger.

MFD_ALTERA_A10SR
  Support for the Altera Arria10 DevKit MAX5 System Resource chip
  using the SPI interface. This driver provides common support for
  accessing the external gpio extender (LEDs & buttons) and
  power supply alarms (hwmon).

MFD_ALTERA_SYSMGR
  Select this to get System Manager support for all Altera branded
  SOCFPGAs. The SOCFPGA System Manager handles all SOCFPGAs by
  using regmap_mmio accesses for ARM32 parts and SMC calls to
  EL3 for ARM64 parts.

MFD_ARIZONA
  No help

MFD_ARIZONA_I2C
  Support for the Cirrus Logic/Wolfson Microelectronics Arizona platform
  audio SoC core functionality controlled via I2C.

MFD_ARIZONA_SPI
  Support for the Cirrus Logic/Wolfson Microelectronics Arizona platform
  audio SoC core functionality controlled via SPI.

MFD_AS3711
  Support for the AS3711 PMIC from AMS

MFD_AS3722
  The ams AS3722 is a compact system PMU suitable for mobile phones,
  tablets etc. It has 4 DC/DC step-down regulators, 3 DC/DC step-down
  controllers, 11 LDOs, RTC, automatic battery, temperature and
  over current monitoring, GPIOs, ADC and a watchdog.

MFD_ASIC3
  This driver supports the ASIC3 multifunction chip found on many
  PDAs (mainly iPAQ and HTC based ones)

MFD_AT91_USART
  Select this to get support for AT91 USART IP. This is a wrapper
  over at91-usart-serial driver and usart-spi-driver. Only one function
  can be used at a time. The choice is done at boot time by the probe
  function of this MFD driver according to a device tree property.

MFD_ATMEL_FLEXCOM
  Select this to get support for Atmel Flexcom. This is a wrapper
  which embeds a SPI controller, a I2C controller and a USART. Only
  one function can be used at a time. The choice is done at boot time
  by the probe function of this MFD driver according to a device tree
  property.

MFD_ATMEL_HLCDC
  If you say yes here you get support for the HLCDC block.
  This driver provides common support for accessing the device,
  additional drivers must be enabled in order to use the
  functionality of the device.

MFD_ATMEL_SMC
  No help

MFD_AXP20X
  No help

MFD_AXP20X_I2C
  If you say Y here you get support for the X-Powers AXP series power
  management ICs (PMICs) controlled with I2C.
  This driver include only the core APIs. You have to select individual
  components like regulators or the PEK (Power Enable Key) under the
  corresponding menus.
  
  Note on x86 this provides an ACPI OpRegion, so this must be 'y'
  (builtin) and not a module, as the OpRegion must be available as
  soon as possible. For the same reason the I2C bus driver options
  I2C_DESIGNWARE_PLATFORM and I2C_DESIGNWARE_BAYTRAIL must be 'y' too.

MFD_AXP20X_RSB
  If you say Y here you get support for the X-Powers AXP series power
  management ICs (PMICs) controlled with RSB.
  This driver include only the core APIs. You have to select individual
  components like regulators or the PEK (Power Enable Key) under the
  corresponding menus.

MFD_BCM590XX
  Support for the BCM590xx PMUs from Broadcom

MFD_BD9571MWV
  Support for the ROHM BD9571MWV PMIC, which contains single
  voltage regulator, voltage sampling units, GPIO block and
  watchdog block.
  
  This driver can also be built as a module. If so, the module
  will be called bd9571mwv.

MFD_CORE
  No help

MFD_CPCAP
  Say yes here if you want to include driver for CPCAP.
  It is used on many Motorola phones and tablets as a PMIC.
  At least Motorola Droid 4 is known to use CPCAP.

MFD_CROS_EC_DEV
  Select this to get support for ChromeOS Embedded Controller
  sub-devices. This driver will instantiate additional drivers such
  as RTC, USBPD, etc. but you have to select the individual drivers.
  
  To compile this driver as a module, choose M here: the module will be
  called cros-ec-dev.

MFD_CS47L15
  Support for Cirrus Logic CS47L15 Smart Codec

MFD_CS47L24
  Support for Cirrus Logic CS47L24 and WM1831 low power audio SoC

MFD_CS47L35
  Support for Cirrus Logic CS47L35 Smart Codec

MFD_CS47L85
  Support for Cirrus Logic CS47L85 Smart Codec

MFD_CS47L90
  Support for Cirrus Logic CS47L90 and CS47L91 Smart Codecs

MFD_CS47L92
  Support for Cirrus Logic CS42L92, CS47L92 and CS47L93 Smart Codecs

MFD_CS5535
  This is the core driver for CS5535/CS5536 MFD functions.  This is
  necessary for using the board's GPIO and MFGPT functionality.

MFD_DA9052_I2C
  Support for the Dialog Semiconductor DA9052 PMIC
  when controlled using I2C. This driver provides common support
  for accessing the device, additional drivers must be enabled in
  order to use the functionality of the device.

MFD_DA9052_SPI
  Support for the Dialog Semiconductor DA9052 PMIC
  when controlled using SPI. This driver provides common support
  for accessing the device, additional drivers must be enabled in
  order to use the functionality of the device.

MFD_DA9055
  Say yes here for support of Dialog Semiconductor DA9055. This is
  a Power Management IC. This driver provides common support for
  accessing the device as well as the I2C interface to the chip itself.
  Additional drivers must be enabled in order to use the functionality
  of the device.
  
  This driver can be built as a module. If built as a module it will be
  called "da9055"

MFD_DA9062
  Say yes here for support for the Dialog Semiconductor DA9061 and
  DA9062 PMICs.
  This includes the I2C driver and core APIs.
  Additional drivers must be enabled in order to use the functionality
  of the device.

MFD_DA9063
  Say yes here for support for the Dialog Semiconductor DA9063 PMIC.
  This includes the I2C driver and core APIs.
  Additional drivers must be enabled in order to use the functionality
  of the device.

MFD_DA9150
  This adds support for the DA9150 integrated charger and fuel-gauge
  chip. This driver provides common support for accessing the device.
  Additional drivers must be enabled in order to use the specific
  features of the device.

MFD_DAVINCI_VOICECODEC
  No help

MFD_DB8500_PRCMU
  Select this option to enable support for the DB8500 Power Reset
  and Control Management Unit. This is basically an autonomous
  system controller running an XP70 microprocessor, which is accessed
  through a register map.

MFD_DLN2
  This adds support for Diolan USB-I2C/SPI/GPIO Master Adapter
  DLN-2. Additional drivers such as I2C_DLN2, GPIO_DLN2,
  etc. must be enabled in order to use the functionality of
  the device.

MFD_DM355EVM_MSP
  This driver supports the MSP430 microcontroller used on these
  boards.  MSP430 firmware manages resets and power sequencing,
  inputs from buttons and the IR remote, LEDs, an RTC, and more.

MFD_ENE_KB3930
  This adds support for the power-off functionality and access to
  the registers that control LEDS and USB port power on ENE KB3930
  Embedded Controller. To use the LED functionality LEDS_ARIEL must
  be enabled.

MFD_EXYNOS_LPASS
  Select this option to enable support for Samsung Exynos Low Power
  Audio Subsystem.

MFD_GATEWORKS_GSC
  Enable support for the Gateworks System Controller (GSC) found
  on Gateworks Single Board Computers supporting system functions
  such as push-button monitor, multiple ADC's for voltage and
  temperature monitoring, fan controller and watchdog monitor.
  This driver provides common support for accessing the device.
  Additional drivers must be enabled in order to use the
  functionality of the device.

MFD_HI6421_PMIC
  Add support for HiSilicon Hi6421 PMIC. Hi6421 includes multi-
  functions, such as regulators, RTC, codec, Coulomb counter, etc.
  This driver includes core APIs _only_. You have to select
  individual components like voltage regulators under corresponding
  menus in order to enable them.
  We communicate with the Hi6421 via memory-mapped I/O.

MFD_HI6421_SPMI
  Add support for HiSilicon Hi6421v600 SPMI PMIC. Hi6421 includes
  multi-functions, such as regulators, RTC, codec, Coulomb counter,
  etc.
  
  This driver includes core APIs _only_. You have to select
  individual components like voltage regulators under corresponding
  menus in order to enable them.
  We communicate with the Hi6421v600 via a SPMI bus.

MFD_HI655X_PMIC
  Select this option to enable Hisilicon hi655x series pmic driver.

MFD_INTEL_LPSS
  No help

MFD_INTEL_LPSS_ACPI
  This driver supports Intel Low Power Subsystem (LPSS) devices such as
  I2C, SPI and HS-UART starting from Intel Sunrisepoint (Intel Skylake
  PCH) in ACPI mode.

MFD_INTEL_LPSS_PCI
  This driver supports Intel Low Power Subsystem (LPSS) devices such as
  I2C, SPI and HS-UART starting from Intel Sunrisepoint (Intel Skylake
  PCH) in PCI mode.

MFD_INTEL_M10_BMC
  Support for the Intel MAX 10 board management controller using the
  SPI interface.
  
  This driver provides common support for accessing the device,
  additional drivers must be enabled in order to use the functionality
  of the device.

MFD_INTEL_MSIC
  Select this option to enable access to Intel MSIC (Avatele
  Passage) chip. This chip embeds audio, battery, GPIO, etc.
  devices used in Intel Medfield platforms.

MFD_INTEL_PMC_BXT
  This driver provides support for the PMC (Power Management
  Controller) on Intel Broxton and Apollo Lake. The PMC is a
  multi-function device that exposes IPC, General Control
  Register and P-unit access. In addition this creates devices
  for iTCO watchdog and telemetry that are part of the PMC.

MFD_INTEL_PMT
  The Intel Platform Monitoring Technology (PMT) is an interface that
  provides access to hardware monitor registers. This driver supports
  Telemetry, Watcher, and Crashlog PMT capabilities/devices for
  platforms starting from Tiger Lake.

MFD_INTEL_QUARK_I2C_GPIO
  This MFD provides support for I2C and GPIO that exist only
  in a single PCI device. It splits the 2 IO devices to
  their respective IO driver.
  The GPIO exports a total amount of 8 interrupt-capable GPIOs.

MFD_IPAQ_MICRO
  Select this to get support for the Microcontroller found in
  the Compaq iPAQ handheld computers. This is an Atmel
  AT90LS8535 microcontroller flashed with a special iPAQ
  firmware using the custom protocol implemented in this driver.

MFD_IQS62X
  Say Y here if you want to build core support for the Azoteq IQS620A,
  IQS621, IQS622, IQS624 and IQS625 multi-function sensors. Additional
  options must be selected to enable device-specific functions.
  
  To compile this driver as a module, choose M here: the module will
  be called iqs62x.

MFD_JANZ_CMODIO
  This is the core driver for the Janz CMOD-IO PCI MODULbus
  carrier board. This device is a PCI to MODULbus bridge which may
  host many different types of MODULbus daughterboards, including
  CAN and GPIO controllers.

MFD_KEMPLD
  This is the core driver for the PLD (Programmable Logic Device) found
  on some Kontron ETX and nearly all COMexpress (ETXexpress) modules as
  well as on some other Kontron products. The PLD device may provide
  functions like watchdog, GPIO, UART and I2C bus.
  
  This driver can also be built as a module. If so, the module
  will be called kempld-core.

MFD_KHADAS_MCU
  Support for the Khadas System control Microcontroller interface
  present on their VIM and Edge boards.
  
  This Microcontroller is present on the Khadas VIM1, VIM2, VIM3 and
  Edge boards.
  
  It provides multiple boot control features like password check,
  power-on options, power-off control and system FAN control on recent
  boards.
  
  This driver provides common support for accessing the device,
  additional drivers must be enabled in order to use the functionality
  of the device.

MFD_LM3533
  Say yes here to enable support for National Semiconductor / TI
  LM3533 Lighting Power chips.
  
  This driver provides common support for accessing the device;
  additional drivers must be enabled in order to use the LED,
  backlight or ambient-light-sensor functionality of the device.

MFD_LOCHNAGAR
  Support for Cirrus Logic Lochnagar audio development board.

MFD_LP3943
  Support for the TI/National Semiconductor LP3943.
  This driver consists of GPIO and PWM drivers.
  With these functionalities, it can be used for LED string control or
  general usage such like a GPIO controller and a PWM controller.

MFD_LP8788
  TI LP8788 PMU supports regulators, battery charger, RTC,
  ADC, backlight driver and current sinks.

MFD_MADERA
  Support for the Cirrus Logic Madera platform audio codecs

MFD_MADERA_I2C
  Support for the Cirrus Logic Madera platform audio SoC
  core functionality controlled via I2C.

MFD_MADERA_SPI
  Support for the Cirrus Logic Madera platform audio SoC
  core functionality controlled via SPI.

MFD_MAX14577
  Say yes here to add support for Maxim Semiconductor MAX14577 and
  MAX77836 Micro-USB ICs with battery charger.
  This driver provides common support for accessing the device;
  additional drivers must be enabled in order to use the functionality
  of the device.

MFD_MAX77620
  Say yes here to add support for Maxim Semiconductor MAX77620 and
  MAX20024 which are Power Management IC with General purpose pins,
  RTC, regulators, clock generator, watchdog etc. This driver
  provides common support for accessing the device; additional drivers
  must be enabled in order to use the functionality of the device.

MFD_MAX77650
  Say Y here to add support for Maxim Semiconductor MAX77650 and
  MAX77651 Power Management ICs. This is the core multifunction
  driver for interacting with the device. The module name is
  'max77650'. Additional drivers can be enabled in order to use
  the following functionalities of the device: GPIO, regulator,
  charger, LED, onkey.

MFD_MAX77686
  Say yes here to add support for Maxim Semiconductor MAX77686 and
  MAX77802 which are Power Management IC with an RTC on chip.
  This driver provides common support for accessing the device;
  additional drivers must be enabled in order to use the functionality
  of the device.

MFD_MAX77693
  Say yes here to add support for Maxim Semiconductor MAX77693.
  This is a companion Power Management IC with Flash, Haptic, Charger,
  and MUIC(Micro USB Interface Controller) controls on chip.
  This driver provides common support for accessing the device;
  additional drivers must be enabled in order to use the functionality
  of the device.

MFD_MAX77843
  Say yes here to add support for Maxim Semiconductor MAX77843.
  This is companion Power Management IC with LEDs, Haptic, Charger,
  Fuel Gauge, MUIC(Micro USB Interface Controller) controls on chip.
  This driver provides common support for accessing the device;
  additional drivers must be enabled in order to use the functionality
  of the device.

MFD_MAX8907
  Say yes here to add support for Maxim Semiconductor MAX8907. This is
  a Power Management IC. This driver provides common support for
  accessing the device; additional drivers must be enabled in order
  to use the functionality of the device.

MFD_MAX8925
  Say yes here to add support for Maxim Semiconductor MAX8925. This is
  a Power Management IC. This driver provides common support for
  accessing the device, additional drivers must be enabled in order
  to use the functionality of the device.

MFD_MAX8997
  Say yes here to add support for Maxim Semiconductor MAX8997/8966.
  This is a Power Management IC with RTC, Flash, Fuel Gauge, Haptic,
  MUIC controls on chip.
  This driver provides common support for accessing the device;
  additional drivers must be enabled in order to use the functionality
  of the device.

MFD_MAX8998
  Say yes here to add support for Maxim Semiconductor MAX8998 and
  National Semiconductor LP3974. This is a Power Management IC.
  This driver provides common support for accessing the device,
  additional drivers must be enabled in order to use the functionality
  of the device.

MFD_MC13XXX
  Enable support for the Freescale MC13783 and MC13892 PMICs.
  This driver provides common support for accessing the device,
  additional drivers must be enabled in order to use the
  functionality of the device.

MFD_MC13XXX_I2C
  Select this if your MC13xxx is connected via an I2C bus.

MFD_MC13XXX_SPI
  Select this if your MC13xxx is connected via an SPI bus.

MFD_MENF21BMC
  Say yes here to add support for the MEN 14F021P00 BMC
  which is a Board Management Controller connected to the I2C bus.
  The device supports multiple sub-devices like LED, HWMON and WDT.
  This driver provides common support for accessing the devices;
  additional drivers must be enabled in order to use the
  functionality of the BMC device.
  
  This driver can also be built as a module. If so the module
  will be called menf21bmc.

MFD_MP2629
  Select this option to enable support for Monolithic Power Systems
  battery charger. This provides ADC, thermal and battery charger power
  management functions.

MFD_MT6360
  Say Y here to enable MT6360 PMU/PMIC/LDO functional support.
  PMU part includes Charger, Flashlight, RGB LED
  PMIC part includes 2-channel BUCKs and 2-channel LDOs
  LDO part includes 4-channel LDOs

MFD_MT6397
  Say yes here to add support for MediaTek MT6397 PMIC. This is
  a Power Management IC. This driver provides common support for
  accessing the device; additional drivers must be enabled in order
  to use the functionality of the device.

MFD_MX25_TSADC
  Enable support for the integrated Touchscreen and ADC unit of the
  i.MX25 processors. They consist of a conversion queue for general
  purpose ADC and a queue for Touchscreens.

MFD_MXS_LRADC
  Say yes here to build support for the Low Resolution
  Analog-to-Digital Converter (LRADC) found on the i.MX23 and i.MX28
  processors. This driver provides common support for accessing the
  device, additional drivers must be enabled in order to use the
  functionality of the device:
        mxs-lradc-adc for ADC readings
        mxs-lradc-ts  for touchscreen support
  
  This driver can also be built as a module. If so, the module will be
  called mxs-lradc.

MFD_NVEC
  Say Y here to enable support for a nVidia compliant embedded
  controller.
  
  To compile this driver as a module, say M here: the module will be
  called mfd-nvec

MFD_OMAP_USB_HOST
  This is the core driver for the OAMP EHCI and OHCI drivers.
  This MFD driver does the required setup functionalities for
  OMAP USB Host drivers.

MFD_PALMAS
  If you say yes here you get support for the Palmas
  series of PMIC chips from Texas Instruments.

MFD_PCF50633
  Say yes here if you have NXP PCF50633 chip on your board.
  This core driver provides register access and IRQ handling
  facilities, and registers devices for the various functions
  so that function-specific drivers can bind to them.

MFD_PM8XXX
  If you say yes to this option, support will be included for the
  built-in PM8xxx PMIC chips.
  
  This is required if your board has a PM8xxx and uses its features,
  such as: MPPs, GPIOs, regulators, interrupts, and PWM.
  
  Say M here if you want to include support for PM8xxx chips as a
  module. This will build a module called "pm8xxx-core".

MFD_QCOM_RPM
  If you say yes to this option, support will be included for the
  Resource Power Manager system found in the Qualcomm 8660, 8960 and
  8064 based devices.
  
  This is required to access many regulators, clocks and bus
  frequencies controlled by the RPM on these devices.
  
  Say M here if you want to include support for the Qualcomm RPM as a
  module. This will build a module called "qcom_rpm".

MFD_RC5T583
  Select this option to get support for the RICOH583 Power
  Management system device.
  This driver provides common support for accessing the device
  through i2c interface. The device supports multiple sub-devices
  like GPIO, interrupts, RTC, LDO and DCDC regulators, onkey.
  Additional drivers must be enabled in order to use the
  different functionality of the device.

MFD_RDC321X
  Say yes here if you want to have support for the RDC R-321x SoC
  southbridge which provides access to GPIOs and Watchdog using the
  southbridge PCI device configuration space.

MFD_RETU
  Retu and Tahvo are a multi-function devices found on Nokia
  Internet Tablets (770, N800 and N810).

MFD_RK808
  If you say yes here you get support for the RK805, RK808, RK809,
  RK817 and RK818 Power Management chips.
  This driver provides common support for accessing the device
  through I2C interface. The device supports multiple sub-devices
  including interrupts, RTC, LDO & DCDC regulators, and onkey.

MFD_RN5T618
  Say yes here to add support for the Ricoh RN5T567,
  RN5T618, RC5T619 PMIC.
  This driver provides common support for accessing the device,
  additional drivers must be enabled in order to use the
  functionality of the device.

MFD_ROHM_BD70528
  Select this option to get support for the ROHM BD70528 Power
  Management IC. BD71837 is general purpose single-chip power
  management IC for battery-powered portable devices. It contains
  3 ultra-low current consumption buck converters, 3 LDOs and 2 LED
  drivers. Also included are 4 GPIOs, a real-time clock (RTC), a 32kHz
  crystal oscillator, high-accuracy VREF for use with an external ADC,
  10 bits SAR ADC for battery temperature monitor and 1S battery
  charger.

MFD_ROHM_BD71828
  Select this option to get support for the ROHM BD71828 Power
  Management IC. BD71828GW is a single-chip power management IC for
  battery-powered portable devices. The IC integrates 7 buck
  converters, 7 LDOs, and a 1500 mA single-cell linear charger.
  Also included is a Coulomb counter, a real-time clock (RTC), and
  a 32.768 kHz clock gate.

MFD_ROHM_BD718XX
  Select this option to get support for the ROHM BD71837
  Power Management ICs. BD71837 is designed to power processors like
  NXP i.MX8. It contains 8 BUCK outputs and 7 LDOs, voltage monitoring
  and emergency shut down as well as 32,768KHz clock output.

MFD_RT5033
  This driver provides for the Richtek RT5033 Power Management IC,
  which includes the I2C driver and the Core APIs. This driver provides
  common support for accessing the device. The device supports multiple
  sub-devices like charger, fuel gauge, flash LED, current source,
  LDO and Buck.

MFD_SC27XX_PMIC
  This enables support for the Spreadtrum SC27xx PMICs with SPI
  interface. The SC27xx series PMICs integrate power management,
  audio codec, battery management and user interface support
  function (such as RTC, Typec, indicator and so on) in a single chip.
  
  This driver provides common support for accessing the SC27xx PMICs,
  and it also adds the irq_chip parts for handling the PMIC chip events.

MFD_SEC_CORE
  Support for the Samsung Electronics PMIC devices coming
  usually along with Samsung Exynos SoC chipset.
  This driver provides common support for accessing the device,
  additional drivers must be enabled in order to use the functionality
  of the device
  
  To compile this driver as a module, choose M here: the
  module will be called sec-core.
  Have in mind that important core drivers (like regulators) depend
  on this driver so building this as a module might require proper
  initial ramdisk or might not boot up as well in certain scenarios.

MFD_SI476X_CORE
  This is the core driver for the SI476x series of AM/FM
  radio. This MFD driver connects the radio-si476x V4L2 module
  and the si476x audio codec.
  
  To compile this driver as a module, choose M here: the
  module will be called si476x-core.

MFD_SIMPLE_MFD_I2C
  This driver creates a single register map with the intention for it
  to be shared by all sub-devices.
  
  Once the register map has been successfully initialised, any
  sub-devices represented by child nodes in Device Tree will be
  subsequently registered.

MFD_SKY81452
  This is the core driver for the Skyworks SKY81452 backlight and
  voltage regulator device.
  
  This driver can also be built as a module.  If so, the module
  will be called sky81452.

MFD_SL28CPLD
  Say yes here to enable support for the Kontron sl28cpld board
  management controller.
  
  It can be found on the following boards:
        * SMARC-sAL28

MFD_SM501
  This is the core driver for the Silicon Motion SM501 multimedia
  companion chip. This device is a multifunction device which may
  provide numerous interfaces including USB host controller, USB gadget,
  asynchronous serial ports, audio functions, and a dual display video
  interface. The device may be connected by PCI or local bus with
  varying functions enabled.

MFD_SM501_GPIO
  This option uses the gpio library layer to export the 64 GPIO
  lines on the SM501. The platform data is used to supply the
  base number for the first GPIO line to register.

MFD_SPMI_PMIC
  This enables support for the Qualcomm SPMI PMICs.
  These PMICs are currently used with the Snapdragon 800 series of
  SoCs.  Note, that this will only be useful paired with descriptions
  of the independent functions as children nodes in the device tree.
  
  Say M here if you want to include support for the SPMI PMIC
  series as a module.  The module will be called "qcom-spmi-pmic".

MFD_STA2X11
  No help

MFD_STM32_LPTIMER
  Select this option to enable STM32 Low-Power Timer driver
  used for PWM, IIO Trigger, IIO Encoder and Counter. Shared
  resources are also dealt with here.
  
  To compile this driver as a module, choose M here: the
  module will be called stm32-lptimer.

MFD_STM32_TIMERS
  Select this option to enable STM32 timers driver used
  for PWM and IIO Timer. This driver allow to share the
  registers between the others drivers.

MFD_STMFX
  Support for the STMicroelectronics Multi-Function eXpander.
  
  This driver provides common support for accessing the device,
  additional drivers must be enabled in order to use the functionality
  of the device.

MFD_STMPE
  Support for the STMPE family of I/O Expanders from
  STMicroelectronics.
  
  Currently supported devices are:
  
        STMPE811: GPIO, Touchscreen, ADC
        STMPE1601: GPIO, Keypad
        STMPE1801: GPIO, Keypad
        STMPE2401: GPIO, Keypad
        STMPE2403: GPIO, Keypad
  
  This driver provides common support for accessing the device,
  additional drivers must be enabled in order to use the functionality
  of the device.  Currently available sub drivers are:
  
        GPIO: stmpe-gpio
        Keypad: stmpe-keypad
        Touchscreen: stmpe-ts
        ADC: stmpe-adc

MFD_STPMIC1
  Support for ST Microelectronics STPMIC1 PMIC. STPMIC1 has power on
  key, watchdog and regulator functionalities which are supported via
  the relevant subsystems. This driver provides core support for the
  STPMIC1. In order to use the actual functionality of the device other
  drivers must be enabled.
  
  To compile this driver as a module, choose M here: the
  module will be called stpmic1.

MFD_STW481X
  Select this option to enable the STw481x chip driver used
  in various ST Microelectronics and ST-Ericsson embedded
  Nomadik series.

MFD_SUN4I_GPADC
  Select this to get support for Allwinner SoCs (A10, A13 and A31) ADC.
  This driver will only map the hardware interrupt and registers, you
  have to select individual drivers based on this MFD to be able to use
  the ADC or the thermal sensor. This will try to probe the ADC driver
  sun4i-gpadc-iio and the hwmon driver iio_hwmon.
  
  To compile this driver as a module, choose M here: the module will be
  called sun4i-gpadc.

MFD_SUN6I_PRCM
  Support for the PRCM (Power/Reset/Clock Management) unit available
  in A31 SoC.

MFD_SYSCON
  Select this option to enable accessing system control registers
  via regmap.

MFD_T7L66XB
  Support for Toshiba Mobile IO Controller T7L66XB

MFD_TC3589X
  Support for the Toshiba TC35892 and variants I/O Expander.
  
  This driver provides common support for accessing the device,
  additional drivers must be enabled in order to use the
  functionality of the device.

MFD_TC6387XB
  Support for Toshiba Mobile IO Controller TC6387XB

MFD_TC6393XB
  Support for Toshiba Mobile IO Controller TC6393XB

MFD_TIMBERDALE
  This is the core driver for the timberdale FPGA. This device is a
  multifunction device which exposes numerous platform devices.
  
  The timberdale FPGA can be found on the Intel Atom development board
  for in-vehicle infontainment, called Russellville.

MFD_TI_AM335X_TSCADC
  If you say yes here you get support for Texas Instruments series
  of Touch Screen /ADC chips.
  To compile this driver as a module, choose M here: the
  module will be called ti_am335x_tscadc.

MFD_TI_LMU
  Say yes here to enable support for TI LMU chips.
  TI LMU MFD supports LM3532, LM3631, LM3632, LM3633, LM3695 and
  LM36274.  It consists of backlight, LED and regulator driver.
  It provides consistent device controls for lighting functions.

MFD_TI_LP873X
  If you say yes here then you get support for the LP873X series of
  Power Management Integrated Circuits (PMIC).
  These include voltage regulators, thermal protection, configurable
  General Purpose Outputs (GPO) that are used in portable devices.
  
  This driver can also be built as a module. If so, the module
  will be called lp873x.

MFD_TI_LP87565
  If you say yes here then you get support for the LP87565 series of
  Power Management Integrated Circuits (PMIC).
  These include voltage regulators, thermal protection, configurable
  General Purpose Outputs (GPO) that are used in portable devices.
  
  This driver can also be built as a module. If so, the module
  will be called lp87565.

MFD_TMIO
  No help

MFD_TPS65086
  If you say yes here you get support for the TPS65086 series of
  Power Management chips.
  This driver provides common support for accessing the device,
  additional drivers must be enabled in order to use the
  functionality of the device.

MFD_TPS65090
  If you say yes here you get support for the TPS65090 series of
  Power Management chips.
  This driver provides common support for accessing the device,
  additional drivers must be enabled in order to use the
  functionality of the device.

MFD_TPS65217
  If you say yes here you get support for the TPS65217 series of
  Power Management / White LED chips.
  These include voltage regulators, lithium ion/polymer battery
  charger, wled and other features that are often used in portable
  devices.
  
  This driver can also be built as a module.  If so, the module
  will be called tps65217.

MFD_TPS65218
  If you say yes here you get support for the TPS65218 series of
  Power Management chips.
  These include voltage regulators, gpio and other features
  that are often used in portable devices.
  
  This driver can also be built as a module.  If so, the module
  will be called tps65218.

MFD_TPS6586X
  If you say yes here you get support for the TPS6586X series of
  Power Management chips.
  This driver provides common support for accessing the device,
  additional drivers must be enabled in order to use the
  functionality of the device.
  
  This driver can also be built as a module.  If so, the module
  will be called tps6586x.

MFD_TPS65910
  if you say yes here you get support for the TPS65910 series of
  Power Management chips.

MFD_TPS65912
  No help

MFD_TPS65912_I2C
  If you say yes here you get support for the TPS65912 series of
  PM chips with I2C interface.

MFD_TPS65912_SPI
  If you say yes here you get support for the TPS65912 series of
  PM chips with SPI interface.

MFD_TPS68470
  If you say yes here you get support for the TPS68470 series of
  Power Management / LED chips.
  
  These include voltage regulators, LEDs and other features
  that are often used in portable devices.
  
  This option is a bool as it provides an ACPI operation
  region, which must be available before any of the devices
  using this are probed. This option also configures the
  designware-i2c driver to be built-in, for the same reason.

MFD_TPS80031
  If you say yes here you get support for the Texas Instruments
  TPS80031/ TPS80032 Fully Integrated Power Management with Power
  Path and Battery Charger. The device provides five configurable
  step-down converters, 11 general purpose LDOs, USB OTG Module,
  ADC, RTC, 2 PWM, System Voltage Regulator/Battery Charger with
  Power Path from USB, 32K clock generator.

MFD_TQMX86
  Say yes here to enable support for various functions of the
  TQ-Systems IO controller and watchdog device, found on their
  ComExpress CPU modules.

MFD_TWL4030_AUDIO
  No help

MFD_VEXPRESS_SYSREG
  System Registers are the platform configuration block
  on the ARM Ltd. Versatile Express board.

MFD_VIPERBOARD
  Say yes here if you want support for Nano River Technologies
  Viperboard.
  There are mfd cell drivers available for i2c master, adc and
  both gpios found on the board. The spi part does not yet
  have a driver.
  You need to select the mfd cell drivers separately.
  The drivers do not support all features the board exposes.

MFD_VX855
  Say yes here to enable support for various functions of the
  VIA VX855/VX875 south bridge. You will need to enable the vx855_spi
  and/or vx855_gpio drivers for this to do anything useful.

MFD_WCD934X
  Support for the Qualcomm WCD9340/WCD9341 Codec.
  This driver provides common support WCD934x audio codec and its
  associated Pin Controller, Soundwire Controller and Audio codec.

MFD_WL1273_CORE
  This is the core driver for the TI WL1273 FM radio. This MFD
  driver connects the radio-wl1273 V4L2 module and the wl1273
  audio codec.

MFD_WM5102
  Support for Wolfson Microelectronics WM5102 low power audio SoC

MFD_WM5110
  Support for Wolfson Microelectronics WM5110 and WM8280/WM8281
  low power audio SoC

MFD_WM831X
  No help

MFD_WM831X_I2C
  Support for the Wolfson Microelecronics WM831x and WM832x PMICs
  when controlled using I2C.  This driver provides common support
  for accessing the device, additional drivers must be enabled in
  order to use the functionality of the device.

MFD_WM831X_SPI
  Support for the Wolfson Microelecronics WM831x and WM832x PMICs
  when controlled using SPI.  This driver provides common support
  for accessing the device, additional drivers must be enabled in
  order to use the functionality of the device.

MFD_WM8350
  No help

MFD_WM8350_I2C
  The WM8350 is an integrated audio and power management
  subsystem with watchdog and RTC functionality for embedded
  systems.  This option enables core support for the WM8350 with
  I2C as the control interface.  Additional options must be
  selected to enable support for the functionality of the chip.

MFD_WM8400
  Support for the Wolfson Microelecronics WM8400 PMIC and audio
  CODEC.  This driver provides common support for accessing
  the device, additional drivers must be enabled in order to use
  the functionality of the device.

MFD_WM8994
  The WM8994 is a highly integrated hi-fi CODEC designed for
  smartphone applications.  As well as audio functionality it
  has on board GPIO and regulator functionality which is
  supported via the relevant subsystems.  This driver provides
  core support for the WM8994, in order to use the actual
  functionality of the device other drivers must be enabled.

MFD_WM8997
  Support for Wolfson Microelectronics WM8997 low power audio SoC

MFD_WM8998
  Support for Wolfson Microelectronics WM8998 low power audio SoC

MFD_WM97xx
  The WM9705, WM9712 and WM9713 is a highly integrated hi-fi CODEC
  designed for smartphone applications.  As well as audio functionality
  it has on board GPIO and a touchscreen functionality which is
  supported via the relevant subsystems.  This driver provides core
  support for the WM97xx, in order to use the actual functionality of
  the device other drivers must be enabled.

MGEODEGX1
  Select this for a Geode GX1 (Cyrix MediaGX) chip.

MGEODE_LX
  Select this for AMD Geode GX and LX processors.

MHI_BUS
  Bus driver for MHI protocol. Modem Host Interface (MHI) is a
  communication protocol used by the host processors to control
  and communicate with modem devices over a high speed peripheral
  bus or shared memory.

MHI_BUS_DEBUG
  Enable debugfs support for use with the MHI transport. Allows
  reading and/or modifying some values within the MHI controller
  for debug and test purposes.

MHI_BUS_PCI_GENERIC
  This driver provides MHI PCI controller driver for devices such as
  Qualcomm SDX55 based PCIe modems.
  

MHI_NET
  This is the network driver for MHI bus.  It can be used with
  QCOM based WWAN modems (like SDX55).  Say Y or M.

MICREL_KS8995MA
  No help

MICREL_PHY
  Supports the KSZ9021, VSC8201, KS8001 PHYs.

MICROCHIP_PHY
  Supports the LAN88XX PHYs.

MICROCHIP_PIT64B
  This option enables Microchip PIT64B timer for Atmel
  based system. It supports the oneshot, the periodic
  modes and high resolution. It is used as a clocksource
  and a clockevent.

MICROCHIP_T1_PHY
  Supports the LAN87XX PHYs.

MICROCHIP_TCB_CAPTURE
  Select this option to enable the Microchip Timer Counter Block
  capture driver.
  
  To compile this driver as a module, choose M here: the
  module will be called microchip-tcb-capture.

MICROCODE
  If you say Y here, you will be able to update the microcode on
  Intel and AMD processors. The Intel support is for the IA32 family,
  e.g. Pentium Pro, Pentium II, Pentium III, Pentium 4, Xeon etc. The
  AMD support is for families 0x10 and later. You will obviously need
  the actual microcode binary data itself which is not shipped with
  the Linux kernel.
  
  The preferred method to load microcode from a detached initrd is described
  in Documentation/x86/microcode.rst. For that you need to enable
  CONFIG_BLK_DEV_INITRD in order for the loader to be able to scan the
  initrd for microcode blobs.
  
  In addition, you can build the microcode into the kernel. For that you
  need to add the vendor-supplied microcode to the CONFIG_EXTRA_FIRMWARE
  config option.

MICROCODE_AMD
  If you select this option, microcode patch loading support for AMD
  processors will be enabled.

MICROCODE_INTEL
  This options enables microcode patch loading support for Intel
  processors.
  
  For the current Intel microcode data package go to
  <https://downloadcenter.intel.com> and search for
  'Linux Processor Microcode Data File'.

MICROCODE_OLD_INTERFACE
  DO NOT USE THIS! This is the ancient /dev/cpu/microcode interface
  which was used by userspace tools like iucode_tool and microcode.ctl.
  It is inadequate because it runs too late to be able to properly
  load microcode on a machine and it needs special tools. Instead, you
  should've switched to the early loading method with the initrd or
  builtin microcode by now: Documentation/x86/microcode.rst

MICROSEMI_PHY
  Currently supports VSC8514, VSC8530, VSC8531, VSC8540 and VSC8541 PHYs

MIGRATION
  Allows the migration of the physical location of pages of processes
  while the virtual addresses are not changed. This is useful in
  two situations. The first is on NUMA systems to put pages nearer
  to the processors accessing. The second is when allocating huge
  pages as migration can relocate pages to satisfy a huge page
  allocation instead of reclaiming.

MII
  No help

MILBEAUT_HDMAC
  Say yes here to support the Socionext Milbeaut
  HDMAC device.

MILBEAUT_TIMER
  Enables the support for Milbeaut timer driver.

MILBEAUT_XDMAC
  Say yes here to support the Socionext Milbeaut
  XDMAC device.

MINIX_FS
  Minix is a simple operating system used in many classes about OS's.
  The minix file system (method to organize files on a hard disk
  partition or a floppy disk) was the original file system for Linux,
  but has been superseded by the second extended file system ext2fs.
  You don't want to use the minix file system on your hard disk
  because of certain built-in restrictions, but it is sometimes found
  on older Linux floppy disks.  This option will enlarge your kernel
  by about 28 KB. If unsure, say N.
  
  To compile this file system support as a module, choose M here: the
  module will be called minix.  Note that the file system of your root
  partition (the one containing the directory /) cannot be compiled as
  a module.

MINIX_FS_BIG_ENDIAN_16BIT_INDEXED
  No help

MINIX_FS_NATIVE_ENDIAN
  No help

MINIX_SUBPARTITION
  Minix 2.0.0/2.0.2 subpartition table support for Linux.
  Say Y here if you want to mount and use Minix 2.0.0/2.0.2
  subpartitions.

MIPI_I3C_HCI
  Support for hardware following the MIPI Aliance's I3C Host Controller
  Interface specification.
  
  For details please see:
  https://www.mipi.org/specifications/i3c-hci
  
  This driver can also be built as a module.  If so, the module will be
  called mipi-i3c-hci.

MIPS_AU1X00_ENET
  If you have an Alchemy Semi AU1X00 based system
  say Y.  Otherwise, say N.

MIPS_CDMM
  Driver needed for the MIPS Common Device Memory Map bus in MIPS
  cores. This bus is for per-CPU tightly coupled devices such as the
  Fast Debug Channel (FDC).
  
  For this to work, either your bootloader needs to enable the CDMM
  region at an unused physical address on the boot CPU, or else your
  platform code needs to implement mips_cdmm_phys_base() (see
  asm/cdmm.h).

MIPS_CPS_CPUIDLE
  Select this option to enable processor idle state management
  through cpuidle for systems built around the MIPS Coherent
  Processing System (CPS) architecture. In order to make use of
  the deepest idle states you will need to ensure that you are
  also using the CONFIG_MIPS_CPS SMP implementation.

MIPS_EJTAG_FDC_EARLYCON
  This registers a console on FDC channel 1 very early during boot (from
  MIPS arch code). This is useful for bring-up and debugging early boot
  issues.
  
  Do not enable unless there is a debug probe attached to drain the FDC
  TX FIFO.
  
  If unsure, say N.

MIPS_EJTAG_FDC_KGDB
  This enables the use of KGDB over an FDC channel, allowing KGDB to be
  used remotely or when a serial port isn't available.

MIPS_EJTAG_FDC_KGDB_CHAN
  FDC channel number to use for KGDB.

MIPS_EJTAG_FDC_TTY
  This enables a TTY and console on the MIPS EJTAG Fast Debug Channels,
  if they are present. This can be useful when working with an EJTAG
  probe which supports it, to get console output and a login prompt via
  EJTAG without needing to connect a serial cable.
  
  TTY devices are named e.g. ttyFDC3c2 (for FDC channel 2 of the FDC on
  CPU3).
  
  The console can be enabled with console=fdc1 (for FDC channel 1 on all
  CPUs). Do not use the console unless there is a debug probe attached
  to drain the FDC TX FIFO.
  
  If unsure, say N.

MIPS_GIC
  No help

MIPS_JAZZ_SONIC
  This is the driver for the onboard card of MIPS Magnum 4000,
  Acer PICA, Olivetti M700-10 and a few other identical OEM systems.

MIPS_PLATFORM_DEVICES
  Say Y here to get to see options for device drivers of various
  MIPS platforms, including vendor-specific netbook/laptop/desktop
  extension and hardware monitor drivers. This option itself does
  not add any kernel code.
  
  If you say N, all options in this submenu will be skipped and disabled.

MISC_ALCOR_PCI
  This supports for Alcor Micro PCI-Express card reader including au6601,
  au6621.
  Alcor Micro card readers support access to many types of memory cards,
  such as Memory Stick, Memory Stick Pro, Secure Digital and
  MultiMediaCard.

MISC_FILESYSTEMS
  Say Y here to get to see options for various miscellaneous
  filesystems, such as filesystems that came from other
  operating systems.
  
  This option alone does not add any kernel code.
  
  If you say N, all options in this submenu will be skipped and
  disabled; if unsure, say Y here.

MISC_RTSX
  No help

MISC_RTSX_PCI
  This supports for Realtek PCI-Express card reader including rts5209,
  rts5227, rts522A, rts5229, rts5249, rts524A, rts525A, rtl8411, rts5260.
  Realtek card readers support access to many types of memory cards,
  such as Memory Stick, Memory Stick Pro, Secure Digital and
  MultiMediaCard.

MISC_RTSX_USB
  Select this option to get support for Realtek USB 2.0 card readers
  including RTS5129, RTS5139, RTS5179 and RTS5170.
  Realtek card reader supports access to many types of memory cards,
  such as Memory Stick Pro, Secure Digital and MultiMediaCard.

MISDN
  Enable support for the modular ISDN driver.

MISDN_AVMFRITZ
  Enable support for AVMs FRITZ!CARD PCI cards

MISDN_DSP
  Enable support for digital audio processing capability.
  
  This module may be used for special applications that require
  cross connecting of bchannels, conferencing, dtmf decoding,
  echo cancellation, tone generation, and Blowfish encryption and
  decryption. It may use hardware features if available.
  
  E.g. it is required for PBX4Linux. Go to http://isdn.eversberg.eu
  and get more information about this module and its usage.
  
  If unsure, say 'N'.

MISDN_HDLC
  No help

MISDN_HFCMULTI
  Enable support for cards with Cologne Chip AG's HFC multiport
  chip. There are three types of chips that are quite similar,
  but the interface is different:
   * HFC-4S (4 S/T interfaces on one chip)
   * HFC-8S (8 S/T interfaces on one chip)
   * HFC-E1 (E1 interface for 2Mbit ISDN)

MISDN_HFCMULTI_8xx
  Enable support for the XHFC embedded solution from Speech Design.

MISDN_HFCPCI
  Enable support for cards with Cologne Chip AG's
  HFC PCI chip.

MISDN_HFCUSB
  Enable support for USB ISDN TAs with Cologne Chip AG's
  HFC-S USB ISDN Controller

MISDN_INFINEON
  Enable support for cards with ISAC + HSCX, IPAC or IPAC-SX
  chip from Infineon (former manufacturer Siemens).

MISDN_IPAC
  No help

MISDN_ISAR
  No help

MISDN_L1OIP
  Enable support for ISDN over IP tunnel.
  
  It features:
    - dynamic IP exchange, if one or both peers have dynamic IPs
    - BRI (S0) and PRI (S2M) interface
    - layer 1 control via network keepalive frames
    - direct tunneling of physical interface via IP
  
  NOTE: This protocol is called 'Layer 1 over IP' and is not
  compatible with ISDNoIP (Agfeo) or TDMoIP. Protocol description is
  provided in the source code.

MISDN_NETJET
  Enable support for Traverse Technologies NETJet PCI cards.

MISDN_SPEEDFAX
  Enable support for Sedlbauer Speedfax+.

MISDN_W6692
  Enable support for Winbond 6692 PCI chip based cards.

MIXCOMWD
  This is a driver for the Mixcom hardware watchdog cards.  This
  watchdog simply watches your kernel to make sure it doesn't freeze,
  and if it does, it reboots your computer after a certain amount of
  time.
  
  To compile this driver as a module, choose M here: the
  module will be called mixcomwd.
  
  Most people will say N.

MK6
  Select this for an AMD K6-family processor.  Enables use of
  some extended instructions, and passes appropriate optimization
  flags to GCC.

MK7
  Select this for an AMD Athlon K7-family processor.  Enables use of
  some extended instructions, and passes appropriate optimization
  flags to GCC.

MK8
  Select this for an AMD Opteron or Athlon64 Hammer-family processor.
  Enables use of some extended instructions, and passes appropriate
  optimization flags to GCC.

MKISS
  KISS is a protocol used for the exchange of data between a computer
  and a Terminal Node Controller (a small embedded system commonly
  used for networking over AX.25 amateur radio connections; it
  connects the computer's serial port with the radio's microphone
  input and speaker output).
  
  Although KISS is less advanced than the 6pack protocol, it has
  the advantage that it is already supported by most modern TNCs
  without the need for a firmware upgrade.
  
  To compile this driver as a module, choose M here: the module
  will be called mkiss.

MLX4_CORE
  No help

MLX4_CORE_GEN2
  Say Y here if you want to use old gen2 Mellanox devices in the
  driver.

MLX4_DEBUG
  This option causes debugging code to be compiled into the
  mlx4_core driver.  The output can be turned on via the
  debug_level module parameter (which can also be set after
  the driver is loaded through sysfs).

MLX4_EN
  This driver supports Mellanox Technologies ConnectX Ethernet
  devices.

MLX4_EN_DCB
  Say Y here if you want to use Data Center Bridging (DCB) in the
  driver.
  If set to N, will not be able to configure QoS and ratelimit attributes.
  This flag is depended on the kernel's DCB support.
  
  If unsure, set to Y

MLX4_INFINIBAND
  This driver provides low-level InfiniBand support for
  Mellanox ConnectX PCI Express host channel adapters (HCAs).
  This is required to use InfiniBand protocols such as
  IP-over-IB or SRP with these devices.

MLX5_ACCEL
  No help

MLX5_CLS_ACT
  mlx5 ConnectX offloads support for TC classifier action (NET_CLS_ACT),
  works in both native NIC mode and Switchdev SRIOV mode.
  Actions get attached to a Hardware offloaded classifiers and are
  invoked after a successful classification. Actions are used to
  overwrite the classification result, instantly drop or redirect and/or
  reformat packets in wire speeds without involving the host cpu.
  
  If set to N, TC offloads in both NIC and switchdev modes will be disabled.
  If unsure, set to Y

MLX5_CORE
  Core driver for low level functionality of the ConnectX-4 and
  Connect-IB cards by Mellanox Technologies.

MLX5_CORE_EN
  Ethernet support in Mellanox Technologies ConnectX-4 NIC.

MLX5_CORE_EN_DCB
  Say Y here if you want to use Data Center Bridging (DCB) in the
  driver.
  If set to N, will not be able to configure QoS and ratelimit attributes.
  This flag is depended on the kernel's DCB support.
  
  If unsure, set to Y

MLX5_CORE_IPOIB
  MLX5 IPoIB offloads & acceleration support.

MLX5_EN_ARFS
  Mellanox MLX5 ethernet hardware-accelerated receive flow steering support,
  Enables ethernet netdevice arfs support and ntuple filtering.

MLX5_EN_IPSEC
  Build support for IPsec cryptography-offload accelaration in the NIC.
  Note: Support for hardware with this capability needs to be selected
  for this option to become available.

MLX5_EN_RXNFC
  Mellanox MLX5 ethernet rx nfc flow steering support
  Enables ethtool receive network flow classification, which allows user defined
  flow rules to direct traffic into arbitrary rx queue via ethtool set/get_rxnfc
  API.

MLX5_EN_TLS
  Build support for TLS cryptography-offload accelaration in the NIC.
  Note: Support for hardware with this capability needs to be selected
  for this option to become available.

MLX5_ESWITCH
  Mellanox Technologies Ethernet SRIOV E-Switch support in ConnectX NIC.
  E-Switch provides internal SRIOV packet steering and switching for the
  enabled VFs and PF in two available modes:
        Legacy SRIOV mode (L2 mac vlan steering based).
        Switchdev mode (eswitch offloads).

MLX5_FPGA
  Build support for the Innova family of network cards by Mellanox
  Technologies. Innova network cards are comprised of a ConnectX chip
  and an FPGA chip on one board. If you select this option, the
  mlx5_core driver will include the Innova FPGA core and allow building
  sandbox-specific client drivers.

MLX5_FPGA_IPSEC
  Build IPsec support for the Innova family of network cards by Mellanox
  Technologies. Innova network cards are comprised of a ConnectX chip
  and an FPGA chip on one board. If you select this option, the
  mlx5_core driver will include the Innova FPGA core and allow building
  sandbox-specific client drivers.

MLX5_FPGA_TLS
  Build TLS support for the Innova family of network cards by Mellanox
  Technologies. Innova network cards are comprised of a ConnectX chip
  and an FPGA chip on one board. If you select this option, the
  mlx5_core driver will include the Innova FPGA core and allow building
  sandbox-specific client drivers.

MLX5_INFINIBAND
  This driver provides low-level InfiniBand support for
  Mellanox Connect-IB PCI Express host channel adapters (HCAs).
  This is required to use InfiniBand protocols such as
  IP-over-IB or SRP with these devices.

MLX5_IPSEC
  Build IPsec support for the Connect-X family of network cards by Mellanox
  Technologies.
  Note: If you select this option, the mlx5_core driver will include
  IPsec support for the Connect-X family.

MLX5_MPFS
  Mellanox Technologies Ethernet Multi-Physical Function Switch (MPFS)
  support in ConnectX NIC. MPFs is required for when multi-PF configuration
  is enabled to allow passing user configured unicast MAC addresses to the
  requesting PF.

MLX5_SW_STEERING
  Build support for software-managed steering in the NIC.

MLX5_TC_CT
  Say Y here if you want to support offloading connection tracking rules
  via tc ct action.
  
  If unsure, set to Y

MLX5_TLS
  Build TLS support for the Connect-X family of network cards by Mellanox
  Technologies.

MLX5_VDPA
  Support library for Mellanox VDPA drivers. Provides code that is
  common for all types of VDPA drivers. The following drivers are planned:
  net, block.

MLX5_VDPA_NET
  VDPA network driver for ConnectX6 and newer. Provides offloading
  of virtio net datapath such that descriptors put on the ring will
  be executed by the hardware. It also supports a variety of stateless
  offloads depending on the actual device used and firmware version.

MLX90614
  If you say yes here you get support for the Melexis
  MLX90614 contact-less infrared sensor connected with I2C.
  
  This driver can also be built as a module. If so, the module will
  be called mlx90614.

MLX90632
  If you say yes here you get support for the Melexis
  MLX90632 contact-less infrared sensor with medical accuracy
  connected with I2C.
  
  This driver can also be built as a module. If so, the module will
  be called mlx90632.

MLXBF_BOOTCTL
  The Mellanox BlueField firmware implements functionality to
  request swapping the primary and alternate eMMC boot partition,
  and to set up a watchdog that can undo that swap if the system
  does not boot up correctly. This driver provides sysfs access
  to the userspace tools, to be used in conjunction with the eMMC
  device driver to do necessary initial swap of the boot partition.

MLXBF_PMC
  Say y here to enable PMC support. The PMC driver provides access
  to performance monitoring counters within various blocks in the
  Mellanox BlueField SoC via a sysfs interface.

MLXBF_TMFIFO
  Say y here to enable TmFifo support. The TmFifo driver provides
  platform driver support for the TmFifo which supports console
  and networking based on the virtio framework.

MLXFW
  This driver supports Mellanox Technologies Firmware
  flashing common logic.
  
  To compile this driver as a module, choose M here: the
  module will be called mlxfw.

MLXREG_HOTPLUG
  This driver handles hot-plug events for the power suppliers, power
  cables and fans on the wide range Mellanox IB and Ethernet systems.

MLXREG_IO
  This driver allows access to Mellanox programmable device register
  space through sysfs interface. The sets of registers for sysfs access
  are defined per system type bases and include the registers related
  to system resets operation, system reset causes monitoring and some
  kinds of mux selection.

MLXSW_CORE
  This driver supports Mellanox Technologies Switch ASICs family.
  
  To compile this driver as a module, choose M here: the
  module will be called mlxsw_core.

MLXSW_CORE_HWMON
  Say Y here if you want to expose HWMON interface on mlxsw devices.

MLXSW_CORE_THERMAL
  Say Y here if you want to automatically control fans speed according
  ambient temperature reported by ASIC.

MLXSW_I2C
  This is I2C bus implementation for Mellanox Technologies Switch ASICs.
  
  To compile this driver as a module, choose M here: the
  module will be called mlxsw_i2c.

MLXSW_MINIMAL
  This driver supports I2C access for Mellanox Technologies Switch
  ASICs.
  
  To compile this driver as a module, choose M here: the
  module will be called mlxsw_minimal.

MLXSW_PCI
  This is PCI bus implementation for Mellanox Technologies Switch ASICs.
  
  To compile this driver as a module, choose M here: the
  module will be called mlxsw_pci.

MLXSW_SPECTRUM
  This driver supports Mellanox Technologies
  Spectrum/Spectrum-2/Spectrum-3 Ethernet Switch ASICs.
  
  To compile this driver as a module, choose M here: the
  module will be called mlxsw_spectrum.

MLXSW_SPECTRUM_DCB
  Say Y here if you want to use Data Center Bridging (DCB) in the
  driver.

MLXSW_SWITCHIB
  This driver supports Mellanox Technologies SwitchIB and SwitchIB-2
  Infiniband Switch ASICs.
  
  To compile this driver as a module, choose M here: the
  module will be called mlxsw_switchib.

MLXSW_SWITCHX2
  This driver supports Mellanox Technologies SwitchX-2 Ethernet
  Switch ASICs.
  
  To compile this driver as a module, choose M here: the
  module will be called mlxsw_switchx2.

MLX_PLATFORM
  This option enables system support for the Mellanox Technologies
  platform. The Mellanox systems provide data center networking
  solutions based on Virtual Protocol Interconnect (VPI) technology
  enable seamless connectivity to 56/100Gb/s InfiniBand or 10/40/56GbE
  connection.
  
  If you have a Mellanox system, say Y or M here.

MLX_WDT
  This is the driver for the hardware watchdog on Mellanox systems.
  If you are going to use it, say Y here, otherwise N.
  This driver can be used together with the watchdog daemon.
  It can also watch your kernel to make sure it doesn't freeze,
  and if it does, it reboots your system after a certain amount of
  time.
  
  To compile this driver as a module, choose M here: the
  module will be called mlx-wdt.

MMA7455
  No help

MMA7455_I2C
  Say yes here to build support for the Freescale MMA7455L and
  MMA7456L 3-axis accelerometer.
  
  To compile this driver as a module, choose M here: the module
  will be called mma7455_i2c.

MMA7455_SPI
  Say yes here to build support for the Freescale MMA7455L and
  MMA7456L 3-axis accelerometer.
  
  To compile this driver as a module, choose M here: the module
  will be called mma7455_spi.

MMA7660
  Say yes here to get support for the Freescale MMA7660FC 3-Axis
  accelerometer.
  
  Choosing M will build the driver as a module. If so, the module
  will be called mma7660.

MMA8452
  Say yes here to build support for the following Freescale / NXP 3-axis
  accelerometers: MMA8451Q, MMA8452Q, MMA8453Q, MMA8652FC, MMA8653FC,
  FXLS8471Q.
  
  To compile this driver as a module, choose M here: the module
  will be called mma8452.

MMA9551
  Say yes here to build support for the Freescale MMA9551L
  Intelligent Motion-Sensing Platform Driver.
  
  To compile this driver as a module, choose M here: the module
  will be called mma9551.

MMA9551_CORE
  No help

MMA9553
  Say yes here to build support for the Freescale MMA9553L
  Intelligent Pedometer Platform Driver.
  
  To compile this driver as a module, choose M here: the module
  will be called mma9553.

MMAP_ALLOW_UNINITIALIZED
  Normally, and according to the Linux spec, anonymous memory obtained
  from mmap() has its contents cleared before it is passed to
  userspace.  Enabling this config option allows you to request that
  mmap() skip that if it is given an MAP_UNINITIALIZED flag, thus
  providing a huge performance boost.  If this option is not enabled,
  then the flag will be ignored.
  
  This is taken advantage of by uClibc's malloc(), and also by
  ELF-FDPIC binfmt's brk and stack allocator.
  
  Because of the obvious security issues, this option should only be
  enabled on embedded devices where you control what is run in
  userspace.  Since that isn't generally a problem on no-MMU systems,
  it is normally safe to say Y here.
  
  See Documentation/admin-guide/mm/nommu-mmap.rst for more information.

MMC
  This selects MultiMediaCard, Secure Digital and Secure
  Digital I/O support.
  
  If you want MMC/SD/SDIO support, you should say Y here and
  also to your specific host controller driver.

MMC35240
  Say yes here to build support for the MEMSIC MMC35240 3-axis
  magnetic sensor.
  
  To compile this driver as a module, choose M here: the module
  will be called mmc35240.

MMCONF_FAM10H
  No help

MMC_ALCOR
  Say Y here to include driver code to support SD/MMC card interface
  of Alcor Micro PCI-E card reader

MMC_ARMMMCI
  This selects the ARM(R) AMBA(R) PrimeCell Multimedia Card
  Interface (PL180 and PL181) support.  If you have an ARM(R)
  platform with a Multimedia Card slot, say Y or M here.
  
  If unsure, say N.

MMC_ATMELMCI
  This selects the Atmel Multimedia Card Interface driver.
  If you have an AT91 platform with a Multimedia Card slot,
  say Y or M here.
  
  If unsure, say N.

MMC_AU1X
  This selects the AMD Alchemy(R) Multimedia card interface.
  If you have a Alchemy platform with a MMC slot, say Y or M here.
  
  If unsure, say N.

MMC_BCM2835
  This selects the BCM2835 SDHOST MMC controller. If you have
  a BCM2835 platform with SD or MMC devices, say Y or M here.
  
  Note that the BCM2835 has two SD controllers: The Arasan
  sdhci controller (supported by MMC_SDHCI_IPROC) and a custom
  sdhost controller (supported by this driver).
  
  If unsure, say N.

MMC_BLOCK
  Say Y here to enable the MMC block device driver support.
  This provides a block device driver, which you can use to
  mount the filesystem. Almost everyone wishing MMC support
  should say Y or M here.

MMC_BLOCK_MINORS
  Number of minors per block device. One is needed for every
  partition on the disk (plus one for the whole disk).
  
  Number of total MMC minors available is 256, so your number
  of supported block devices will be limited to 256 divided
  by this number.
  
  Default is 8 to be backwards compatible with previous
  hardwired device numbering.
  
  If unsure, say 8 here.

MMC_CAVIUM_OCTEON
  This selects Cavium OCTEON SD/MMC card Interface.
  If you have an OCTEON board with a Multimedia Card slot,
  say Y or M here.
  
  If unsure, say N.

MMC_CAVIUM_THUNDERX
  This selects Cavium ThunderX SD/MMC Card Interface.
  If you have an Cavium ARM64 board with a Multimedia Card slot
  or builtin eMMC chip say Y or M here. If built as a module
  the module will be called thunderx_mmc.ko.

MMC_CB710
  This option enables support for MMC/SD part of ENE CB710/720 Flash
  memory card reader found in some laptops (ie. some versions of
  HP Compaq nx9500).
  
  This driver can also be built as a module. If so, the module
  will be called cb710-mmc.

MMC_CQHCI
  This selects the Command Queue Host Controller Interface (CQHCI)
  support present in host controllers of Qualcomm Technologies, Inc
  amongst others.
  This controller supports eMMC devices with command queue support.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_DAVINCI
  This selects the TI DAVINCI Multimedia card Interface.
  If you have an DAVINCI board with a Multimedia Card slot,
  say Y or M here.  If unsure, say N.

MMC_DEBUG
  This is an option for use by developers; most people should
  say N here. This enables MMC host driver debugging. And further
  added host drivers please don't invent their private macro for
  debugging.

MMC_DW
  This selects support for the Synopsys DesignWare Mobile Storage IP
  block, this provides host support for SD and MMC interfaces, in both
  PIO, internal DMA mode and external DMA mode.

MMC_DW_BLUEFIELD
  This selects support for Mellanox BlueField SoC specific extensions to
  the Synopsys DesignWare Memory Card Interface driver. Select this
  option for platforms based on Mellanox BlueField SoC's.

MMC_DW_EXYNOS
  This selects support for Samsung Exynos SoC specific extensions to the
  Synopsys DesignWare Memory Card Interface driver. Select this option
  for platforms based on Exynos4 and Exynos5 SoC's.

MMC_DW_HI3798CV200
  This selects support for HiSilicon Hi3798CV200 SoC specific extensions to the
  Synopsys DesignWare Memory Card Interface driver. Select this option
  for platforms based on HiSilicon Hi3798CV200 SoC.

MMC_DW_K3
  This selects support for Hisilicon K3 SoC specific extensions to the
  Synopsys DesignWare Memory Card Interface driver. Select this option
  for platforms based on Hisilicon K3 SoC's.

MMC_DW_PCI
  This selects the PCI bus for the Synopsys Designware Mobile Storage IP.
  Select this option if the IP is present on PCI platform.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_DW_PLTFM
  This selects the common helper functions support for Host Controller
  Interface based platform driver. Please select this option if the IP
  is present as a platform device. This is the common interface for the
  Synopsys Designware IP.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say Y.

MMC_DW_ROCKCHIP
  This selects support for Rockchip SoC specific extensions to the
  Synopsys DesignWare Memory Card Interface driver. Select this option
  for platforms based on RK3066, RK3188 and RK3288 SoC's.

MMC_DW_ZX
  This selects support for ZTE SoC specific extensions to the
  Synopsys DesignWare Memory Card Interface driver. Select this option
  for platforms based on ZX296718 SoC's.

MMC_GOLDFISH
  This selects the Goldfish Multimedia card Interface emulation
  found on the Goldfish Android virtual device emulation.

MMC_HSQ
  This selects the MMC Host Software Queue support. This may increase
  performance, if the host controller and its driver supports it.
  
  If you have a controller/driver supporting this interface, say Y or M
  here.
  
  If unsure, say N.

MMC_JZ4740
  This selects support for the SD/MMC controller on Ingenic
  JZ4740, JZ4750, JZ4770 and JZ4780 SoCs.
  
  If you have a board based on such a SoC and with a SD/MMC slot,
  say Y or M here.

MMC_MESON_GX
  This selects support for the Amlogic SD/MMC Host Controller
  found on the S905/GX*/AXG family of SoCs.  This controller is
  MMC 5.1 compliant and supports SD, eMMC and SDIO interfaces.
  
  If you have a controller with this interface, say Y here.

MMC_MESON_MX_SDHC
  This selects support for the SDHC Host Controller on
  Amlogic Meson6, Meson8, Meson8b and Meson8m2 SoCs.
  The controller supports the SD/SDIO Spec 3.x and eMMC Spec 4.5x
  with 1, 4, and 8 bit bus widths.
  
  If you have a controller with this interface, say Y or M here.
  If unsure, say N.

MMC_MESON_MX_SDIO
  This selects support for the SD/MMC Host Controller on
  Amlogic Meson6, Meson8 and Meson8b SoCs.
  
  If you have a controller with this interface, say Y or M here.
  If unsure, say N.

MMC_MOXART
  This selects support for the MOXART SD/MMC Host Controller.
  MOXA provides one multi-functional card reader which can
  be found on some embedded hardware such as UC-7112-LX.
  If you have a controller with this interface, say Y here.

MMC_MTK
  This selects the MediaTek(R) Secure digital and Multimedia card Interface.
  If you have a machine with a integrated SD/MMC card reader, say Y or M here.
  This is needed if support for any SD/SDIO/MMC devices is required.
  If unsure, say N.

MMC_MVSDIO
  This selects the Marvell SDIO host driver.
  SDIO may currently be found on the Kirkwood 88F6281 and 88F6192
  SoC controllers.
  
  To compile this driver as a module, choose M here: the
  module will be called mvsdio.

MMC_MXC
  This selects the Freescale i.MX21, i.MX27, i.MX31 or MPC512x
  Multimedia Card Interface. If you have an i.MX or MPC512x platform
  with a Multimedia Card slot, say Y or M here.
  
  If unsure, say N.

MMC_MXS
  This selects the Freescale SSP MMC controller found on MXS based
  platforms like mx23/28.
  
  If unsure, say N.

MMC_OMAP
  This selects the TI OMAP Multimedia card Interface.
  If you have an OMAP board with a Multimedia Card slot,
  say Y or M here.
  
  If unsure, say N.

MMC_OMAP_HS
  This selects the TI OMAP High Speed Multimedia card Interface.
  If you have an omap2plus board with a Multimedia Card slot,
  say Y or M here.
  
  If unsure, say N.

MMC_OWL
  This selects support for the SD/MMC Host Controller on
  Actions Semi Owl SoCs.

MMC_PXA
  This selects the Intel(R) PXA(R) Multimedia card Interface.
  If you have a PXA(R) platform with a Multimedia Card slot,
  say Y or M here.
  
  If unsure, say N.

MMC_QCOM_DML
  This selects the Qualcomm Data Mover lite/local on SD Card controller.
  This option will enable the dma to work correctly, if you are using
  Qcom SOCs and MMC, you would probably need this option to get DMA working.
  
  if unsure, say N.

MMC_REALTEK_PCI
  Say Y here to include driver code to support SD/MMC card interface
  of Realtek PCI-E card reader

MMC_REALTEK_USB
  Say Y here to include driver code to support SD/MMC card interface
  of Realtek RTS5129/39 series card reader

MMC_RICOH_MMC
  This adds a pci quirk to disable Ricoh MMC Controller. This
  proprietary controller is unnecessary because the SDHCI driver
  supports MMC cards on the SD controller, but if it is not
  disabled, it will steal the MMC cards away - rendering them
  useless. It is safe to select this even if you don't
  have a Ricoh based card reader.
  
  If unsure, say Y.

MMC_S3C
  This selects a driver for the MCI interface found in
  Samsung's S3C2410, S3C2412, S3C2440, S3C2442 CPUs.
  If you have a board based on one of those and a MMC/SD
  slot, say Y or M here.
  
  If unsure, say N.

MMC_S3C_DMA
  Use DMA to transfer data between memory and the hardware.
  
  Currently, the DMA support in this driver seems to not be
  working properly and needs to be debugged before this
  option is useful.

MMC_S3C_HW_SDIO_IRQ
  Enable the hardware support for SDIO interrupts instead of using
  the generic polling code.

MMC_S3C_PIO
  Use PIO to transfer data between memory and the hardware.
  
  PIO is slower than DMA as it requires CPU instructions to
  move the data. This has been the traditional default for
  the S3C MCI driver.

MMC_SDHCI
  This selects the generic Secure Digital Host Controller Interface.
  It is used by manufacturers such as Texas Instruments(R), Ricoh(R)
  and Toshiba(R). Most controllers found in laptops are of this type.
  
  If you have a controller with this interface, say Y or M here. You
  also need to enable an appropriate bus interface.
  
  If unsure, say N.

MMC_SDHCI_ACPI
  This selects support for ACPI enumerated SDHCI controllers,
  identified by ACPI Compatibility ID PNP0D40 or specific
  ACPI Hardware IDs.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_AM654
  This selects the Secure Digital Host Controller Interface (SDHCI)
  support present in TI's AM654 SOCs. The controller supports
  SD/MMC/SDIO devices.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_BCM_KONA
  This selects the Broadcom Kona Secure Digital Host Controller
  Interface(SDHCI) support.
  This is used in Broadcom mobile SoCs.
  
  If you have a controller with this interface, say Y or M here.

MMC_SDHCI_BIG_ENDIAN_32BIT_BYTE_SWAPPER
  This option is selected by drivers running on big endian hosts
  and performing I/O to a SDHCI controller through a bus that
  implements a hardware byte swapper using a 32-bit datum.
  This endian mapping mode is called "data invariance" and
  has the effect of scrambling the addresses and formats of data
  accessed in sizes other than the datum size.
  
  This is the case for the Nintendo Wii SDHCI.

MMC_SDHCI_BRCMSTB
  This selects support for the SDIO/SD/MMC Host Controller on
  Broadcom STB SoCs.
  
  If unsure, say Y.

MMC_SDHCI_CADENCE
  This selects the Cadence SD/SDIO/eMMC driver.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_CNS3XXX
  This selects the SDHCI support for CNS3xxx System-on-Chip devices.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_DOVE
  This selects the Secure Digital Host Controller Interface in
  Marvell's Dove SoC.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_ESDHC_IMX
  This selects the Freescale eSDHC/uSDHC controller support
  found on i.MX25, i.MX35 i.MX5x and i.MX6x.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_ESDHC_MCF
  This selects the Freescale eSDHC controller support for
  ColdFire mcf5441x devices.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_EXTERNAL_DMA
  No help

MMC_SDHCI_F_SDH30
  This selects the Secure Digital Host Controller Interface (SDHCI)
  Needed by some Fujitsu SoC for MMC / SD / SDIO support.
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_IO_ACCESSORS
  This is silent Kconfig symbol that is selected by the drivers that
  need to overwrite SDHCI IO memory accessors.

MMC_SDHCI_IPROC
  This selects the iProc SD/MMC controller.
  
  If you have a BCM2835 or IPROC platform with SD or MMC devices,
  say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_MICROCHIP_PIC32
  This selects the Secure Digital Host Controller Interface (SDHCI)
  for PIC32MZDA platform.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_MILBEAUT
  This selects the Secure Digital Host Controller Interface (SDHCI)
  Needed by Milbeaut SoC for MMC / SD / SDIO support.
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_MSM
  This selects the Secure Digital Host Controller Interface (SDHCI)
  support present in Qualcomm SOCs. The controller supports
  SD/MMC/SDIO devices.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_OF_ARASAN
  This selects the Arasan Secure Digital Host Controller Interface
  (SDHCI). This hardware is found e.g. in Xilinx' Zynq SoC.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_OF_ASPEED
  This selects the ASPEED Secure Digital Host Controller Interface.
  
  If you have a controller with this interface, say Y or M here. You
  also need to enable an appropriate bus interface.
  
  If unsure, say N.

MMC_SDHCI_OF_AT91
  This selects the Atmel SDMMC driver

MMC_SDHCI_OF_DWCMSHC
  This selects Synopsys DesignWare Cores Mobile Storage Controller
  support.
  If you have a controller with this interface, say Y or M here.
  If unsure, say N.

MMC_SDHCI_OF_ESDHC
  This selects the Freescale eSDHC controller support.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_OF_HLWD
  This selects the Secure Digital Host Controller Interface (SDHCI)
  found in the "Hollywood" chipset of the Nintendo Wii video game
  console.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_OF_SPARX5
  This selects the Secure Digital Host Controller Interface (SDHCI)
  found in the MCHP Sparx5 SoC.
  
  If you have a Sparx5 SoC with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_OMAP
  This selects the Secure Digital Host Controller Interface (SDHCI)
  support present in TI's DRA7 SOCs. The controller supports
  SD/MMC/SDIO devices.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_PCI
  This selects the PCI Secure Digital Host Controller Interface.
  Most controllers found today are PCI devices.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_PLTFM
  This selects the common helper functions support for Secure Digital
  Host Controller Interface based platform and OF drivers.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_PXAV2
  This selects the Marvell(R) PXAV2 SD Host Controller.
  If you have a PXA9XX platform with SD Host Controller
  and a card slot, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_PXAV3
  This selects the Marvell(R) PXAV3 SD Host Controller.
  If you have a MMP2 platform with SD Host Controller
  and a card slot, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_S3C
  This selects the Secure Digital Host Controller Interface (SDHCI)
  often referrered to as the HSMMC block in some of the Samsung S3C
  range of SoC.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_S3C_DMA
  Enable DMA support on the Samsung S3C SDHCI glue. The DMA
  has proved to be problematic if the controller encounters
  certain errors, and thus should be treated with care.
  
  YMMV.

MMC_SDHCI_SIRF
  This selects the SDHCI support for SiRF System-on-Chip devices.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_SPEAR
  This selects the Secure Digital Host Controller Interface (SDHCI)
  often referrered to as the HSMMC block in some of the ST SPEAR range
  of SoC
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_SPRD
  This selects the SDIO Host Controller in Spreadtrum
  SoCs, this driver supports R11(IP version: R11P0).
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_ST
  This selects the Secure Digital Host Controller Interface in
  STMicroelectronics SoCs.
  
  If you have a controller with this interface, say Y or M here.
  If unsure, say N.

MMC_SDHCI_TEGRA
  This selects the Tegra SD/MMC controller. If you have a Tegra
  platform with SD or MMC devices, say Y or M here.
  
  If unsure, say N.

MMC_SDHCI_XENON
  This selects Marvell Xenon eMMC/SD/SDIO SDHCI.
  If you have a controller with this interface, say Y or M here.
  If unsure, say N.

MMC_SDHI
  This provides support for the SDHI SD/SDIO controller found in
  Renesas SuperH, ARM and ARM64 based SoCs

MMC_SDHI_INTERNAL_DMAC
  This provides DMA support for SDHI SD/SDIO controllers
  using on-chip bus mastering. This supports the controllers
  found in arm64 based SoCs. This controller is also found in
  some RZ family SoCs.

MMC_SDHI_SYS_DMAC
  This provides DMA support for SDHI SD/SDIO controllers
  using SYS-DMAC via DMA Engine. This supports the controllers
  found in SuperH and Renesas ARM based SoCs.

MMC_SDRICOH_CS
  Say Y here if your Notebook reports a Ricoh Bay1Controller PCMCIA
  card whenever you insert a MMC or SD card into the card slot.
  
  To compile this driver as a module, choose M here: the
  module will be called sdricoh_cs.

MMC_SH_MMCIF
  This selects the MMC Host Interface controller (MMCIF) found in various
  Renesas SoCs for SH and ARM architectures.

MMC_SPI
  Some systems access MMC/SD/SDIO cards using a SPI controller
  instead of using a "native" MMC/SD/SDIO controller.  This has a
  disadvantage of being relatively high overhead, but a compensating
  advantage of working on many systems without dedicated MMC/SD/SDIO
  controllers.
  
  If unsure, or if your system has no SPI master driver, say N.

MMC_STM32_SDMMC
  This selects the STMicroelectronics STM32 SDMMC host controller.
  If you have a STM32 sdmmc host with internal DMA say Y here.
  
  If unsure, say N.

MMC_SUNXI
  This selects support for the SD/MMC Host Controller on
  Allwinner sunxi SoCs.

MMC_TEST
  Development driver that performs a series of reads and writes
  to a memory card in order to expose certain well known bugs
  in host controllers. The tests are executed by writing to the
  "test" file in debugfs under each card. Note that whatever is
  on your card will be overwritten by these tests.
  
  This driver is only of interest to those developing or
  testing a host driver. Most people should say N here.
  

MMC_TIFM_SD
  Say Y here if you want to be able to access MMC/SD cards with
  the Texas Instruments(R) Flash Media card reader, found in many
  laptops.
  This option 'selects' (turns on, enables) 'TIFM_CORE', but you
  probably also need appropriate card reader host adapter, such as
  'Misc devices: TI Flash Media PCI74xx/PCI76xx host adapter support
  (TIFM_7XX1)'.
  
  To compile this driver as a module, choose M here: the
  module will be called tifm_sd.

MMC_TMIO
  This provides support for the SD/MMC cell found in TC6393XB,
  T7L66XB and also HTC ASIC3

MMC_TMIO_CORE
  No help

MMC_TOSHIBA_PCI
  No help

MMC_UNIPHIER
  This provides support for the SD/eMMC controller found in
  UniPhier SoCs. The eMMC variant of this controller is used
  only for 32-bit SoCs.

MMC_USDHI6ROL0
  This selects support for the Renesas USDHI6ROL0 SD/SDIO
  Host Controller

MMC_USHC
  This selects support for USB SD Host Controllers based on
  the Cypress Astoria chip with firmware compliant with CSR's
  USB SD Host Controller specification (CS-118793-SP).
  
  CSR boards with this device include: USB<>SDIO (M1985v2),
  and Ultrasira.
  
  Note: These controllers only support SDIO cards and do not
  support MMC or SD memory cards.

MMC_VIA_SDMMC
  This selects the VIA SD/MMC Card Reader driver, say Y or M here.
  VIA provides one multi-functional card reader which integrated into
  some motherboards manufactured by VIA. This card reader supports
  SD/MMC/SDHC.
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

MMC_VUB300
  This selects support for Elan Digital Systems' VUB300 chip.
  
  The VUB300 is a USB-SDIO Host Controller Interface chip
  that enables the host computer to use SDIO/SD/MMC cards
  via a USB 2.0 or USB 1.1 host.
  
  The VUB300 chip will be found in both physically separate
  USB to SDIO/SD/MMC adapters and embedded on some motherboards.
  
  The VUB300 chip supports SD and MMC memory cards in addition
  to single and multifunction SDIO cards.
  
  Some SDIO cards will need a firmware file to be loaded and
  sent to VUB300 chip in order to achieve better data throughput.
  Download these "Offload Pseudocode" from Elan Digital Systems'
  web-site http://www.elandigitalsystems.com/support/downloads.php
  and put them in /lib/firmware. Note that without these additional
  firmware files the VUB300 chip will still function, but not at
  the best obtainable data rate.
  
  To compile this mmc host controller driver as a module,
  choose M here: the module will be called vub300.
  
  If you have a computer with an embedded VUB300 chip
  or if you intend connecting a USB adapter based on a
  VUB300 chip say Y or M here.

MMC_WBSD
  This selects the Winbond(R) W83L51xD Secure digital and
  Multimedia card Interface.
  If you have a machine with a integrated W83L518D or W83L519D
  SD/MMC card reader, say Y or M here.
  
  If unsure, say N.

MMC_WMT
  This selects support for the SD/MMC Host Controller on
  Wondermedia WM8505/WM8650 based SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called wmt-sdmmc.

MMIOTRACE
  Mmiotrace traces Memory Mapped I/O access and is meant for
  debugging and reverse engineering. It is called from the ioremap
  implementation and works via page faults. Tracing is disabled by
  default and can be enabled at run-time.
  
  See Documentation/trace/mmiotrace.rst.
  If you are not helping to develop drivers, say N.

MMIOTRACE_TEST
  This is a dumb module for testing mmiotrace. It is very dangerous
  as it will write garbage to IO memory starting at a given address.
  However, it should be safe to use on e.g. unused portion of VRAM.
  
  Say N, unless you absolutely know what you are doing.

MMIOWB
  No help

MMP_DISP
  Marvell Display Subsystem support.

MMP_DISP_CONTROLLER
  Marvell MMP display hw controller support
  this controller is used on Marvell PXA910 and
  MMP2 chips

MMP_DISP_SPI
  Marvell MMP display hw controller spi port support
  will register as a spi master for panel usage

MMP_FB
  fb driver for Marvell MMP Display Subsystem

MMP_PANEL_TPOHVGA
  tpohvga panel support

MMP_PDMA
  Support the MMP PDMA engine for PXA and MMP platform.

MMP_TDMA
  Support the MMP Two-Channel DMA engine.
  This engine used for MMP Audio DMA and pxa910 SQU.

MMU
  No help

MMU_GATHER_NO_GATHER
  No help

MMU_GATHER_NO_RANGE
  No help

MMU_GATHER_PAGE_SIZE
  No help

MMU_GATHER_RCU_TABLE_FREE
  No help

MMU_GATHER_TABLE_FREE
  No help

MMU_NOTIFIER
  No help

MODIFY_LDT_SYSCALL
  Linux can allow user programs to install a per-process x86
  Local Descriptor Table (LDT) using the modify_ldt(2) system
  call.  This is required to run 16-bit or segmented code such as
  DOSEMU or some Wine programs.  It is also used by some very old
  threading libraries.
  
  Enabling this feature adds a small amount of overhead to
  context switches and increases the low-level kernel attack
  surface.  Disabling it removes the modify_ldt(2) system call.
  
  Saying 'N' here may make sense for embedded or server kernels.

MODULES
  Kernel modules are small pieces of compiled code which can
  be inserted in the running kernel, rather than being
  permanently built into the kernel.  You use the "modprobe"
  tool to add (and sometimes remove) them.  If you say Y here,
  many parts of the kernel can be built as modules (by
  answering M instead of Y where indicated): this is most
  useful for infrequently used options which are not required
  for booting.  For more information, see the man pages for
  modprobe, lsmod, modinfo, insmod and rmmod.
  
  If you say Y here, you will need to run "make
  modules_install" to put the modules under /lib/modules/
  where modprobe can find them (you may need to be root to do
  this).
  
  If unsure, say Y.

MODULES_TREE_LOOKUP
  No help

MODULES_USE_ELF_REL
  Modules only use ELF REL relocations.  Modules with ELF RELA
  relocations will give an error.

MODULES_USE_ELF_RELA
  Modules only use ELF RELA relocations.  Modules with ELF REL
  relocations will give an error.

MODULE_ALLOW_MISSING_NAMESPACE_IMPORTS
  Symbols exported with EXPORT_SYMBOL_NS*() are considered exported in
  a namespace. A module that makes use of a symbol exported with such a
  namespace is required to import the namespace via MODULE_IMPORT_NS().
  There is no technical reason to enforce correct namespace imports,
  but it creates consistency between symbols defining namespaces and
  users importing namespaces they make use of. This option relaxes this
  requirement and lifts the enforcement when loading a module.
  
  If unsure, say N.

MODULE_COMPRESS
  Compresses kernel modules when 'make modules_install' is run; gzip or
  xz depending on "Compression algorithm" below.
  
  module-init-tools MAY support gzip, and kmod MAY support gzip and xz.
  
  Out-of-tree kernel modules installed using Kbuild will also be
  compressed upon installation.
  
  Note: for modules inside an initrd or initramfs, it's more efficient
  to compress the whole initrd or initramfs instead.
  
  Note: This is fully compatible with signed modules.
  
  If in doubt, say N.

MODULE_COMPRESS_GZIP
  No help

MODULE_COMPRESS_XZ
  No help

MODULE_FORCE_LOAD
  Allow loading of modules without version information (ie. modprobe
  --force).  Forced module loading sets the 'F' (forced) taint flag and
  is usually a really bad idea.

MODULE_FORCE_UNLOAD
  This option allows you to force a module to unload, even if the
  kernel believes it is unsafe: the kernel will remove the module
  without waiting for anyone to stop using it (using the -f option to
  rmmod).  This is mainly for kernel developers and desperate users.
  If unsure, say N.

MODULE_REL_CRCS
  No help

MODULE_SIG
  Check modules for valid signatures upon load: the signature
  is simply appended to the module. For more information see
  <file:Documentation/admin-guide/module-signing.rst>.
  
  Note that this option adds the OpenSSL development packages as a
  kernel build dependency so that the signing tool can use its crypto
  library.
  
  You should enable this option if you wish to use either
  CONFIG_SECURITY_LOCKDOWN_LSM or lockdown functionality imposed via
  another LSM - otherwise unsigned modules will be loadable regardless
  of the lockdown policy.
  
  !!!WARNING!!!  If you enable this option, you MUST make sure that the
  module DOES NOT get stripped after being signed.  This includes the
  debuginfo strip done by some packagers (such as rpmbuild) and
  inclusion into an initramfs that wants the module size reduced.

MODULE_SIG_ALL
  Sign all modules during make modules_install. Without this option,
  modules must be signed manually, using the scripts/sign-file tool.

MODULE_SIG_FORCE
  Reject unsigned modules or signed modules for which we don't have a
  key.  Without this, such modules will simply taint the kernel.

MODULE_SIG_FORMAT
  No help

MODULE_SIG_HASH
  No help

MODULE_SIG_KEY
  Provide the file name of a private key/certificate in PEM format,
  or a PKCS#11 URI according to RFC7512. The file should contain, or
  the URI should identify, both the certificate and its corresponding
  private key.
  
  If this option is unchanged from its default "certs/signing_key.pem",
  then the kernel will automatically generate the private key and
  certificate as described in Documentation/admin-guide/module-signing.rst

MODULE_SIG_SHA1
  No help

MODULE_SIG_SHA224
  No help

MODULE_SIG_SHA256
  No help

MODULE_SIG_SHA384
  No help

MODULE_SIG_SHA512
  No help

MODULE_SRCVERSION_ALL
  Modules which contain a MODULE_VERSION get an extra "srcversion"
  field inserted into their modinfo section, which contains a
      sum of the source files which made it.  This helps maintainers
  see exactly which source was used to build a module (since
  others sometimes change the module source without updating
  the version).  With this option, such a "srcversion" field
  will be created for all modules.  If unsure, say N.

MODULE_UNLOAD
  Without this option you will not be able to unload any
  modules (note that some modules may not be unloadable
  anyway), which makes your kernel smaller, faster
  and simpler.  If unsure, say Y.

MODVERSIONS
  Usually, you have to use modules compiled with your kernel.
  Saying Y here makes it sometimes possible to use modules
  compiled for different kernels, by adding enough information
  to the modules to (hopefully) spot any changes which would
  make them incompatible with the kernel you are running.  If
  unsure, say N.

MONREADER
  Character device driver for reading z/VM monitor service records

MONWRITER
  Character device driver for writing z/VM monitor service records

MOST
  Say Y here if you want to enable MOST support.
  This driver needs at least one additional component to enable the
  desired access from userspace (e.g. character devices) and one that
  matches the network controller's hardware interface (e.g. USB).
  
  To compile this driver as a module, choose M here: the
  module will be called most_core.
  
  If in doubt, say N here.

MOST_CDEV
  Say Y here if you want to commumicate via character devices.
  
  To compile this driver as a module, choose M here: the
  module will be called most_cdev.

MOST_COMPONENTS
  Say Y here if you want to enable MOST support.
  This driver needs at least one additional component to enable the
  desired access from userspace (e.g. character devices) and one that
  matches the network controller's hardware interface (e.g. USB).
  
  To compile this driver as a module, choose M here: the
  module will be called most_core.
  
  If in doubt, say N here.

MOST_DIM2
  Say Y here if you want to connect via MediaLB to network transceiver.
  This device driver is platform dependent and needs an additional
  platform driver to be installed. For more information contact
  maintainer of this driver.
  
  To compile this driver as a module, choose M here: the
  module will be called most_dim2.

MOST_I2C
  Say Y here if you want to connect via I2C to network transceiver.
  
  To compile this driver as a module, choose M here: the
  module will be called most_i2c.

MOST_NET
  Say Y here if you want to commumicate via a networking device.
  
  To compile this driver as a module, choose M here: the
  module will be called most_net.

MOST_SOUND
  Say Y here if you want to commumicate via ALSA/sound devices.
  
  To compile this driver as a module, choose M here: the
  module will be called most_sound.

MOST_USB_HDM
  Say Y here if you want to connect via USB to network transceiver.
  
  To compile this driver as a module, choose M here: the
  module will be called most_usb.

MOST_VIDEO
  Say Y here if you want to commumicate via Video 4 Linux.
  
  To compile this driver as a module, choose M here: the
  module will be called most_video.

MOUSE_AMIGA
  Say Y here if you have an Amiga and want its native mouse
  supported by the kernel.
  
  To compile this driver as a module, choose M here: the
  module will be called amimouse.

MOUSE_APPLETOUCH
  Say Y here if you want to use an Apple USB Touchpad.
  
  These are the touchpads that can be found on post-February 2005
  Apple Powerbooks (prior models have a Synaptics touchpad connected
  to the ADB bus).
  
  This driver provides a basic mouse driver but can be interfaced
  with the synaptics X11 driver to provide acceleration and
  scrolling in X11.
  
  For further information, see
  <file:Documentation/input/devices/appletouch.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called appletouch.

MOUSE_ATARI
  Say Y here if you have an Atari and want its native mouse
  supported by the kernel.
  
  To compile this driver as a module, choose M here: the
  module will be called atarimouse.

MOUSE_ATIXL
  Say Y here if your mouse is of the ATI XL variety.

MOUSE_BCM5974
  Say Y here if you have an Apple USB BCM5974 Multitouch
  trackpad.
  
  The BCM5974 is the multitouch trackpad found in the Macbook
  Air (JAN2008) and Macbook Pro Penryn (FEB2008) laptops.
  
  It is also found in the IPhone (2007) and Ipod Touch (2008).
  
  This driver provides multitouch functionality together with
  the synaptics X11 driver.
  
  The interface is currently identical to the appletouch interface,
  for further information, see
  <file:Documentation/input/devices/appletouch.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called bcm5974.

MOUSE_CYAPA
  This driver adds support for Cypress All Points Addressable (APA)
  I2C Trackpads, including the ones used in 2012 Samsung Chromebooks.
  
  Say Y here if you have a Cypress APA I2C Trackpad.
  
  To compile this driver as a module, choose M here: the module will be
  called cyapa.

MOUSE_ELAN_I2C
  This driver adds support for Elan I2C/SMbus Trackpads.
  
  Say Y here if you have a ELAN I2C/SMbus Touchpad.
  
  To compile this driver as a module, choose M here: the module will be
  called elan_i2c.

MOUSE_ELAN_I2C_I2C
  Say Y here if Elan Touchpad in your system is connected to
  a standard I2C controller.
  
  If unsure, say Y.

MOUSE_ELAN_I2C_SMBUS
  Say Y here if Elan Touchpad in your system is connected to
  a SMbus adapter.
  
  If unsure, say Y.

MOUSE_GPIO
  This driver simulates a mouse on GPIO lines of various CPUs (and some
  other chips).
  
  Say Y here if your device has buttons or a simple joystick connected
  directly to GPIO lines. Your board-specific setup logic must also
  provide a platform device and platform data saying which GPIOs are
  used.
  
  To compile this driver as a module, choose M here: the
  module will be called gpio_mouse.

MOUSE_INPORT
  Say Y here if you have an InPort, Microsoft or ATI XL busmouse.
  They are rather rare these days.
  
  To compile this driver as a module, choose M here: the
  module will be called inport.

MOUSE_LOGIBM
  Say Y here if you have a Logitech busmouse.
  They are rather rare these days.
  
  To compile this driver as a module, choose M here: the
  module will be called logibm.

MOUSE_MAPLE
  This driver supports the Maple mouse on the SEGA Dreamcast.
  
  Most Dreamcast users, who have a mouse, will say Y here.
  
  To compile this driver as a module choose M here: the module will be
  called maplemouse.

MOUSE_NAVPOINT_PXA27x
  This driver adds support for the Synaptics NavPoint touchpad connected
  to a PXA27x SSP port in SPI slave mode. The device emulates a mouse;
  a tap or tap-and-a-half drag gesture emulates the left mouse button.
  For example, use the xf86-input-evdev driver for an X pointing device.
  
  To compile this driver as a module, choose M here: the
  module will be called navpoint.

MOUSE_PC110PAD
  Say Y if you have the IBM PC-110 micro-notebook and want its
  touchpad supported.
  
  To compile this driver as a module, choose M here: the
  module will be called pc110pad.

MOUSE_PS2
  Say Y here if you have a PS/2 mouse connected to your system. This
  includes the standard 2 or 3-button PS/2 mouse, as well as PS/2
  mice with wheels and extra buttons, Microsoft, Logitech or Genius
  compatible.
  
  Synaptics, ALPS or Elantech TouchPad users might be interested
  in a specialized Xorg/XFree86 driver at:
        <http://w1.894.telia.com/~u89404340/touchpad/index.html>
  and a new version of GPM at:
        <http://www.geocities.com/dt_or/gpm/gpm.html>
        <http://xorg.freedesktop.org/archive/individual/driver/>
  to take advantage of the advanced features of the touchpad.
  
  If unsure, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called psmouse.

MOUSE_PS2_ALPS
  Say Y here if you have an ALPS PS/2 touchpad connected to
  your system.
  
  If unsure, say Y.

MOUSE_PS2_BYD
  Say Y here if you have a BYD PS/2 touchpad connected to
  your system.
  
  If unsure, say Y.

MOUSE_PS2_CYPRESS
  Say Y here if you have a Cypress PS/2 Trackpad connected to
  your system.
  
  If unsure, say Y.

MOUSE_PS2_ELANTECH
  Say Y here if you have an Elantech PS/2 touchpad connected
  to your system.
  
  This driver exposes some configuration registers via sysfs
  entries. For further information,
  see <file:Documentation/input/devices/elantech.rst>.
  
  If unsure, say N.

MOUSE_PS2_ELANTECH_SMBUS
  Say Y here if you have a Elantech touchpad connected to
  to an SMBus, but enumerated through PS/2.
  
  If unsure, say Y.

MOUSE_PS2_FOCALTECH
  Say Y here if you have a FocalTech PS/2 TouchPad connected to
  your system.
  
  If unsure, say Y.

MOUSE_PS2_LIFEBOOK
  Say Y here if you have a Fujitsu B-series Lifebook PS/2
  TouchScreen connected to your system.
  
  If unsure, say Y.

MOUSE_PS2_LOGIPS2PP
  Say Y here if you have a Logitech PS/2++ mouse connected to
  your system.
  
  If unsure, say Y.

MOUSE_PS2_OLPC
  Say Y here if you have an OLPC XO-1 laptop (with built-in
  PS/2 touchpad/tablet device).  The manufacturer calls the
  touchpad an HGPK.
  
  If unsure, say N.

MOUSE_PS2_SENTELIC
  Say Y here if you have a laptop (such as MSI WIND Netbook)
  with Sentelic Finger Sensing Pad touchpad.
  
  If unsure, say N.

MOUSE_PS2_SMBUS
  No help

MOUSE_PS2_SYNAPTICS
  Say Y here if you have a Synaptics PS/2 TouchPad connected to
  your system.
  
  If unsure, say Y.

MOUSE_PS2_SYNAPTICS_SMBUS
  Say Y here if you have a Synaptics RMI4 touchpad connected to
  to an SMBus, but enumerated through PS/2.
  
  If unsure, say Y.

MOUSE_PS2_TOUCHKIT
  Say Y here if you have an eGalax TouchKit PS/2 touchscreen
  connected to your system.
  
  If unsure, say N.

MOUSE_PS2_TRACKPOINT
  Say Y here if you have an IBM Trackpoint PS/2 mouse connected
  to your system.
  
  If unsure, say Y.

MOUSE_PS2_VMMOUSE
  Say Y here if you are running under control of VMware hypervisor
  (ESXi, Workstation or Fusion). Also make sure that when you enable
  this option, you remove the xf86-input-vmmouse user-space driver
  or upgrade it to at least xf86-input-vmmouse 13.1.0, which doesn't
  load in the presence of an in-kernel vmmouse driver.
  
  If unsure, say N.

MOUSE_PXA930_TRKBALL
  Say Y here to support PXA930 Trackball mouse.

MOUSE_RISCPC
  Say Y here if you have the Acorn RiscPC computer and want its
  native mouse supported.
  
  To compile this driver as a module, choose M here: the
  module will be called rpcmouse.

MOUSE_SERIAL
  Say Y here if you have a serial (RS-232, COM port) mouse connected
  to your system. This includes Sun, MouseSystems, Microsoft,
  Logitech and all other compatible serial mice.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called sermouse.

MOUSE_SYNAPTICS_I2C
  This driver supports Synaptics I2C touchpad controller on eXeda
  mobile device.
  The device will not work the synaptics X11 driver because
  (i) it  reports only relative coordinates and has no capabilities
  to report absolute coordinates
  (ii) the eXeda device itself uses Xfbdev as X Server and it does
  not allow using xf86-input-* drivers.
  
  Say y here if you have eXeda device and want to use a Synaptics
  I2C Touchpad.
  
  To compile this driver as a module, choose M here: the
  module will be called synaptics_i2c.

MOUSE_SYNAPTICS_USB
  Say Y here if you want to use a Synaptics USB touchpad or pointing
  stick.
  
  While these devices emulate an USB mouse by default and can be used
  with standard usbhid driver, this driver, together with its X.Org
  counterpart, allows you to fully utilize capabilities of the device.
  More information can be found at:
  <http://jan-steinhoff.de/linux/synaptics-usb.html>
  
  To compile this driver as a module, choose M here: the
  module will be called synaptics_usb.

MOUSE_VSXXXAA
  Say Y (or M) if you want to use a DEC VSXXX-AA (hockey
  puck) or a VSXXX-GA (rectangular) mouse. These mice are
  typically used on DECstations or VAXstations, but can also
  be used on any box capable of RS232 (with some adaptor
  described in the source file). This driver also works with the
  digitizer (VSXXX-AB) DEC produced.

MOXART_DMA
  Enable support for the MOXA ART SoC DMA controller.
  
  Say Y here if you enabled MMP ADMA, otherwise say N.

MOXART_WDT
  Say Y here to include Watchdog timer support for the watchdog
  existing on the MOXA ART SoC series platforms.
  
  To compile this driver as a module, choose M here: the
  module will be called moxart_wdt.

MOXA_INTELLIO
  Say Y here if you have a Moxa Intellio multiport serial card.
  
  To compile this driver as a module, choose M here: the
  module will be called moxa.

MOXA_SMARTIO
  Say Y here if you have a Moxa SmartIO multiport serial card and/or
  want to help develop a new version of this driver.
  
  This is upgraded (1.9.1) driver from original Moxa drivers with
  changes finally resulting in PCI probing.
  
  This driver can also be built as a module. The module will be called
  mxser. If you want to do that, say M here.

MOXTET
  Say yes here to add support for the module configuration bus found
  on CZ.NIC's Turris Mox. This is needed for the ability to discover
  the order in which the modules are connected and to get/set some of
  their settings. For example the GPIOs on Mox SFP module are
  configured through this bus.

MP2629_ADC
  Say yes to have support for battery charger IC MP2629 ADC device
  accessed over I2C.
  
  This driver provides ADC conversion of system, input power supply
  and battery voltage & current information.

MPC512X_DMA
  Enable support for the Freescale MPC512x built-in DMA engine.

MPC5200_WDT
  Use General Purpose Timer (GPT) 0 on the MPC5200 as Watchdog.

MPENTIUM4
  Select this for Intel Pentium 4 chips.  This includes the
  Pentium 4, Pentium D, P4-based Celeron and Xeon, and
  Pentium-4 M (not Pentium M) chips.  This option enables compile
  flags optimized for the chip, uses the correct cache line size, and
  applies any applicable optimizations.
  
  CPUIDs: F[0-6][1-A] (in /proc/cpuinfo show = cpu family : 15 )
  
  Select this for:
    Pentiums (Pentium 4, Pentium D, Celeron, Celeron D) corename:
        -Willamette
        -Northwood
        -Mobile Pentium 4
        -Mobile Pentium 4 M
        -Extreme Edition (Gallatin)
        -Prescott
        -Prescott 2M
        -Cedar Mill
        -Presler
        -Smithfiled
    Xeons (Intel Xeon, Xeon MP, Xeon LV, Xeon MV) corename:
        -Foster
        -Prestonia
        -Gallatin
        -Nocona
        -Irwindale
        -Cranford
        -Potomac
        -Paxville
        -Dempsey

MPENTIUMII
  Select this for Intel chips based on the Pentium-II and
  pre-Coppermine Celeron core.  This option enables an unaligned
  copy optimization, compiles the kernel with optimization flags
  tailored for the chip, and applies any applicable Pentium Pro
  optimizations.

MPENTIUMIII
  Select this for Intel chips based on the Pentium-III and
  Celeron-Coppermine core.  This option enables use of some
  extended prefetch instructions in addition to the Pentium II
  extensions.

MPENTIUMM
  Select this for Intel Pentium M (not Pentium-4 M)
  notebook chips.

MPILIB
  Multiprecision maths library from GnuPG.
  It is used to implement RSA digital signature verification,
  which is used by IMA/EVM digital signature extension.

MPL115
  No help

MPL115_I2C
  Say yes here to build support for the Freescale MPL115A2
  pressure sensor connected via I2C.
  
  To compile this driver as a module, choose M here: the module
  will be called mpl115_i2c.

MPL115_SPI
  Say yes here to build support for the Freescale MPL115A1
  pressure sensor connected via SPI.
  
  To compile this driver as a module, choose M here: the module
  will be called mpl115_spi.

MPL3115
  Say yes here to build support for the Freescale MPL3115A2
  pressure sensor / altimeter.
  
  To compile this driver as a module, choose M here: the module
  will be called mpl3115.

MPLS
  MultiProtocol Label Switching routes packets through logical
  circuits.  Originally conceived as a way of routing packets at
  hardware speeds (before hardware was capable of routing ipv4 packets),
  MPLS remains a simple way of making tunnels.
  
  If you have not heard of MPLS you probably want to say N here.

MPLS_IPTUNNEL
  mpls ip tunnel support.

MPLS_ROUTING
  Add support for forwarding of mpls packets.

MPSC
  Optimize for Intel Pentium 4, Pentium D and older Nocona/Dempsey
  Xeon CPUs with Intel 64bit which is compatible with x86-64.
  Note that the latest Xeons (Xeon 51xx and 53xx) are not based on the
  Netburst core and shouldn't use this option. You can distinguish them
  using the cpu family field
  in /proc/cpuinfo. Family 15 is an older Xeon, Family 6 a newer one.

MPTCP
  Multipath TCP (MPTCP) connections send and receive data over multiple
  subflows in order to utilize multiple network paths. Each subflow
  uses the TCP protocol, and TCP options carry header information for
  MPTCP.

MPTCP_IPV6
  No help

MPTCP_KUNIT_TESTS
  Currently covers the MPTCP crypto and token helpers.
  Only useful for kernel devs running KUnit test harness and are not
  for inclusion into a production build.
  
  For more information on KUnit and unit tests in general please refer
  to the KUnit documentation in Documentation/dev-tools/kunit/.
  
  If unsure, say N.

MPU3050
  No help

MPU3050_I2C
  This driver supports the Invensense MPU3050 gyroscope over I2C.
  This driver can be built as a module. The module will be called
  inv-mpu3050-i2c.

MQ_IOSCHED_DEADLINE
  MQ version of the deadline IO scheduler.

MQ_IOSCHED_KYBER
  The Kyber I/O scheduler is a low-overhead scheduler suitable for
  multiqueue and other fast devices. Given target latencies for reads and
  synchronous writes, it will self-tune queue depths to achieve that
  goal.

MRP
  No help

MS5611
  Say Y here to build support for the Measurement Specialties
  MS5611, MS5607 pressure and temperature sensors.
  
  To compile this driver as a module, choose M here: the module will
  be called ms5611_core.

MS5611_I2C
  Say Y here to build I2C bus support for MS5611.
  
  To compile this driver as a module, choose M here: the module will
  be called ms5611_i2c.

MS5611_SPI
  Say Y here to build SPI bus support for MS5611.
  
  To compile this driver as a module, choose M here: the module will
  be called ms5611_spi.

MS5637
  If you say yes here you get support for the Measurement Specialties
  MS5637 pressure and temperature sensor.
  This driver is also used for MS8607 temperature, pressure & humidity
  sensor
  
  This driver can also be built as a module. If so, the module will
  be called ms5637.

MSCC_OCELOT_IRQ
  No help

MSCC_OCELOT_SWITCH
  This driver supports the Ocelot network switch device as present on
  the Ocelot SoCs (VSC7514).

MSCC_OCELOT_SWITCH_LIB
  This is a hardware support library for Ocelot network switches. It is
  used by switchdev as well as by DSA drivers.

MSDOS_FS
  This allows you to mount MSDOS partitions of your hard drive (unless
  they are compressed; to access compressed MSDOS partitions under
  Linux, you can either use the DOS emulator DOSEMU, described in the
  DOSEMU-HOWTO, available from
  <https://www.tldp.org/docs.html#howto>, or try dmsdosfs in
  <ftp://ibiblio.org/pub/Linux/system/filesystems/dosfs/>. If you
  intend to use dosemu with a non-compressed MSDOS partition, say Y
  here) and MSDOS floppies. This means that file access becomes
  transparent, i.e. the MSDOS files look and behave just like all
  other Unix files.
  
  If you have Windows 95 or Windows NT installed on your MSDOS
  partitions, you should use the VFAT file system (say Y to "VFAT fs
  support" below), or you will not be able to see the long filenames
  generated by Windows 95 / Windows NT.
  
  This option will enlarge your kernel by about 7 KB. If unsure,
  answer Y. This will only work if you said Y to "DOS FAT fs support"
  as well. To compile this as a module, choose M here: the module will
  be called msdos.

MSDOS_PARTITION
  Say Y here.

MSI_LAPTOP
  This is a driver for laptops built by MSI (MICRO-STAR
  INTERNATIONAL):
  
  MSI MegaBook S270 (MS-1013)
  Cytron/TCM/Medion/Tchibo MD96100/SAM2000
  
  It adds support for Bluetooth, WLAN and LCD brightness control.
  
  More information about this driver is available at
  <http://0pointer.de/lennart/tchibo.html>.
  
  If you have an MSI S270 laptop, say Y or M here.

MSI_WMI
  Say Y here if you want to support WMI-based hotkeys on MSI laptops.
  
  To compile this driver as a module, choose M here: the module will
  be called msi-wmi.

MSM_GCC_8660
  Support for the global clock controller on msm8660 devices.
  Say Y if you want to use peripheral devices such as UART, SPI,
  i2c, USB, SD/eMMC, etc.

MSM_GCC_8916
  Support for the global clock controller on msm8916 devices.
  Say Y if you want to use devices such as UART, SPI i2c, USB,
  SD/eMMC, display, graphics, camera etc.

MSM_GCC_8939
  Support for the global clock controller on msm8939 devices.
  Say Y if you want to use devices such as UART, SPI i2c, USB,
  SD/eMMC, display, graphics, camera etc.

MSM_GCC_8960
  Support for the global clock controller on apq8064/msm8960 devices.
  Say Y if you want to use peripheral devices such as UART, SPI,
  i2c, USB, SD/eMMC, SATA, PCIe, etc.

MSM_GCC_8974
  Support for the global clock controller on msm8974 devices.
  Say Y if you want to use peripheral devices such as UART, SPI,
  i2c, USB, SD/eMMC, SATA, PCIe, etc.

MSM_GCC_8994
  Support for the global clock controller on msm8994 devices.
  Say Y if you want to use peripheral devices such as UART, SPI,
  i2c, USB, UFS, SD/eMMC, PCIe, etc.

MSM_GCC_8996
  Support for the global clock controller on msm8996 devices.
  Say Y if you want to use peripheral devices such as UART, SPI,
  i2c, USB, UFS, SD/eMMC, PCIe, etc.

MSM_GCC_8998
  Support for the global clock controller on msm8998 devices.
  Say Y if you want to use peripheral devices such as UART, SPI,
  i2c, USB, UFS, SD/eMMC, PCIe, etc.

MSM_GPUCC_8998
  Support for the graphics clock controller on MSM8998 devices.
  Say Y if you want to support graphics controller devices and
  functionality such as 3D graphics.

MSM_IOMMU
  Support for the IOMMUs found on certain Qualcomm SOCs.
  These IOMMUs allow virtualization of the address space used by most
  cores within the multimedia subsystem.
  
  If unsure, say N here.

MSM_LCC_8960
  Support for the LPASS clock controller on apq8064/msm8960 devices.
  Say Y if you want to use audio devices such as i2s, pcm,
  SLIMBus, etc.

MSM_MMCC_8960
  Support for the multimedia clock controller on msm8960 devices.
  Say Y if you want to support multimedia devices such as display,
  graphics, video encode/decode, camera, etc.

MSM_MMCC_8974
  Support for the multimedia clock controller on msm8974 devices.
  Say Y if you want to support multimedia devices such as display,
  graphics, video encode/decode, camera, etc.

MSM_MMCC_8996
  Support for the multimedia clock controller on msm8996 devices.
  Say Y if you want to support multimedia devices such as display,
  graphics, video encode/decode, camera, etc.

MSM_MMCC_8998
  Support for the multimedia clock controller on msm8998 devices.
  Say Y if you want to support multimedia devices such as display,
  graphics, video encode/decode, camera, etc.

MSPRO_BLOCK
  Say Y here to enable the MemoryStick Pro block device driver
  support. This provides a block device driver, which you can use
  to mount the filesystem. Almost everyone wishing MemoryStick
  support should say Y or M here.

MSP_FLASH_MAP_LIMIT
  No help

MSP_FLASH_MAP_LIMIT_32M
  No help

MST_IRQ
  Support MStar Interrupt Controller.

MS_BLOCK
  Say Y here to enable the MemoryStick Standard device driver
  support. This provides a block device driver, which you can use
  to mount the filesystem.
  This driver works with old (bulky) MemoryStick and MemoryStick Duo
  but not PRO. Say Y if you have such card.
  Driver is new and not yet well tested, thus it can damage your card
  (even permanently)

MT7601U
  This adds support for MT7601U-based wireless USB dongles.

MT7603E
  This adds support for MT7603E wireless PCIe devices and the WLAN core
  on MT7628/MT7688 SoC devices. This family supports IEEE 802.11n 2x2
  to 300Mbps PHY rate
  
  To compile this driver as a module, choose M here.

MT7615E
  This adds support for MT7615-based wireless PCIe devices,
  which support concurrent dual-band operation at both 5GHz
  and 2.4GHz, IEEE 802.11ac 4x4:4SS 1733Mbps PHY rate, wave2
  MU-MIMO up to 4 users/group and 160MHz channels.
  
  To compile this driver as a module, choose M here.

MT7615_COMMON
  No help

MT7621_WDT
  Hardware driver for the Mediatek/Ralink MT7621/8 SoC Watchdog Timer.

MT7622_WMAC
  This adds support for the built-in WMAC on MT7622 SoC devices
  which has the same feature set as a MT7615, but limited to
  2.4 GHz only.

MT7663S
  This adds support for MT7663S 802.11ac 2x2:2 wireless devices.
  
  To compile this driver as a module, choose M here.

MT7663U
  This adds support for MT7663U 802.11ac 2x2:2 wireless devices.
  
  To compile this driver as a module, choose M here.

MT7663_USB_SDIO_COMMON
  No help

MT76_CORE
  No help

MT76_LEDS
  No help

MT76_SDIO
  No help

MT76_USB
  No help

MT76x02_LIB
  No help

MT76x02_USB
  No help

MT76x0E
  This adds support for MT7610/MT7630-based wireless PCIe devices,
  which comply with IEEE 802.11ac standards and support 1x1
  433Mbps PHY rate.
  
  To compile this driver as a module, choose M here.

MT76x0U
  This adds support for MT7610U-based wireless USB 2.0 dongles,
  which comply with IEEE 802.11ac standards and support 1x1
  433Mbps PHY rate.
  
  To compile this driver as a module, choose M here.

MT76x0_COMMON
  No help

MT76x2E
  This adds support for MT7612/MT7602/MT7662-based wireless PCIe
  devices, which comply with IEEE 802.11ac standards and support
  2SS to 866Mbit/s PHY rate.
  
  To compile this driver as a module, choose M here.

MT76x2U
  This adds support for MT7612U-based wireless USB 3.0 dongles,
  which comply with IEEE 802.11ac standards and support 2SS to
  866Mbit/s PHY rate.
  
  To compile this driver as a module, choose M here.

MT76x2_COMMON
  No help

MT7915E
  This adds support for MT7915-based wireless PCIe devices,
  which support concurrent dual-band operation at both 5GHz
  and 2.4GHz IEEE 802.11ax 4x4:4SS 1024-QAM, 160MHz channels,
  OFDMA, spatial reuse and dual carrier modulation.
  
  To compile this driver as a module, choose M here.

MTD
  Memory Technology Devices are flash, RAM and similar chips, often
  used for solid state file systems on embedded devices. This option
  will provide the generic support for MTD drivers to register
  themselves with the kernel and for potential users of MTD devices
  to enumerate the devices which are present and obtain a handle on
  them. It will also allow you to select individual drivers for
  particular hardware and users of MTD devices. If unsure, say N.

MTDRAM_ERASE_SIZE
  This allows you to configure the size of the erase blocks in the
  device emulated by the MTDRAM driver.  If the MTDRAM driver is built
  as a module, it is also possible to specify this as a parameter when
  loading the module.

MTDRAM_TOTAL_SIZE
  This allows you to configure the total size of the MTD device
  emulated by the MTDRAM driver.  If the MTDRAM driver is built
  as a module, it is also possible to specify this as a parameter when
  loading the module.

MTD_ABSENT
  This option enables support for a dummy probing driver used to
  allocated placeholder MTD devices on systems that have socketed
  or removable media.  Use of this driver as a fallback chip probe
  preserves the expected registration order of MTD device nodes on
  the system regardless of media presence.  Device nodes created
  with this driver will return -ENODEV upon access.

MTD_AFS_PARTS
  The ARM Firmware Suite allows the user to divide flash devices into
  multiple 'images'. Each such image has a header containing its name
  and offset/size etc.
  
  If you need code which can detect and parse these tables, and
  register MTD 'partitions' corresponding to each image detected,
  enable this option.
  
  You will still need the parsing functions to be called by the driver
  for your particular device. It won't happen automatically. The
  'physmap' map driver (CONFIG_MTD_PHYSMAP) does this, for example.

MTD_AMD76XROM
  Support for treating the BIOS flash chip on AMD76x motherboards
  as an MTD device - with this you can reprogram your BIOS.
  
  BE VERY CAREFUL.

MTD_AR7_PARTS
  TI AR7 partitioning parser support

MTD_BCM47XXSFLASH
  BCMA bus can have various flash memories attached, they are
  registered by bcma as platform devices. This enables driver for
  serial flash memories.

MTD_BCM47XX_PARTS
  This provides partitions parser for devices based on BCM47xx
  boards.

MTD_BCM63XX_PARTS
  This provides partition parsing for BCM63xx devices with CFE
  bootloaders.

MTD_BLKDEVS
  No help

MTD_BLOCK
  Although most flash chips have an erase size too large to be useful
  as block devices, it is possible to use MTD devices which are based
  on RAM chips in this manner. This block device is a user of MTD
  devices performing that function.
  
  At the moment, it is also required for the Journalling Flash File
  System(s) to obtain a handle on the MTD device when it's mounted
  (although JFFS and JFFS2 don't actually use any of the functionality
  of the mtdblock device).
  
  Later, it may be extended to perform read/erase/modify/write cycles
  on flash chips to emulate a smaller block size. Needless to say,
  this is very unsafe, but could be useful for file systems which are
  almost never written to.
  
  You do not need this option for use with the DiskOnChip devices. For
  those, enable NFTL support (CONFIG_NFTL) instead.

MTD_BLOCK2MTD
  This driver allows a block device to appear as an MTD. It would
  generally be used in the following cases:
  
  Using Compact Flash as an MTD, these usually present themselves to
  the system as an ATA drive.
  Testing MTD users (eg JFFS2) on large media and media that might
  be removed during a write (using the floppy drive).

MTD_BLOCK_RO
  This allows you to mount read-only file systems (such as cramfs)
  from an MTD device, without the overhead (and danger) of the caching
  driver.
  
  You do not need this option for use with the DiskOnChip devices. For
  those, enable NFTL support (CONFIG_NFTL) instead.

MTD_CFI
  The Common Flash Interface specification was developed by Intel,
  AMD and other flash manufactures that provides a universal method
  for probing the capabilities of flash devices. If you wish to
  support any device that is CFI-compliant, you need to enable this
  option. Visit <https://www.amd.com/products/nvd/overview/cfi.html>
  for more information on CFI.

MTD_CFI_ADV_OPTIONS
  If you need to specify a specific endianness for access to flash
  chips, or if you wish to reduce the size of the kernel by including
  support for only specific arrangements of flash chips, say 'Y'. This
  option does not directly affect the code, but will enable other
  configuration options which allow you to do so.
  
  If unsure, say 'N'.

MTD_CFI_AMDSTD
  The Common Flash Interface defines a number of different command
  sets which a CFI-compliant chip may claim to implement. This code
  provides support for command set 0002, used on chips including
  the AMD Am29LV320.

MTD_CFI_BE_BYTE_SWAP
  No help

MTD_CFI_FLAGADM
  Mapping for the Flaga digital module. If you don't have one, ignore
  this setting.

MTD_CFI_GEOMETRY
  This option does not affect the code directly, but will enable
  some other configuration options which would allow you to reduce
  the size of the kernel by including support for only certain
  arrangements of CFI chips. If unsure, say 'N' and all options
  which are supported by the current code will be enabled.

MTD_CFI_I1
  If your flash chips are not interleaved - i.e. you only have one
  flash chip addressed by each bus cycle, then say 'Y'.

MTD_CFI_I2
  If your flash chips are interleaved in pairs - i.e. you have two
  flash chips addressed by each bus cycle, then say 'Y'.

MTD_CFI_I4
  If your flash chips are interleaved in fours - i.e. you have four
  flash chips addressed by each bus cycle, then say 'Y'.

MTD_CFI_I8
  If your flash chips are interleaved in eights - i.e. you have eight
  flash chips addressed by each bus cycle, then say 'Y'.

MTD_CFI_INTELEXT
  The Common Flash Interface defines a number of different command
  sets which a CFI-compliant chip may claim to implement. This code
  provides support for command set 0001, used on Intel StrataFlash
  and other parts.

MTD_CFI_LE_BYTE_SWAP
  No help

MTD_CFI_NOSWAP
  No help

MTD_CFI_STAA
  The Common Flash Interface defines a number of different command
  sets which a CFI-compliant chip may claim to implement. This code
  provides support for command set 0020.

MTD_CFI_UTIL
  No help

MTD_CK804XROM
  Support for treating the BIOS flash chip on nvidia motherboards
  as an MTD device - with this you can reprogram your BIOS.
  
  BE VERY CAREFUL.

MTD_CMDLINE_PARTS
  Allow generic configuration of the MTD partition tables via the kernel
  command line. Multiple flash resources are supported for hardware where
  different kinds of flash memory are available.
  
  You will still need the parsing functions to be called by the driver
  for your particular device. It won't happen automatically. The
  SA1100 map driver (CONFIG_MTD_SA1100) has an option for this, for
  example.
  
  The format for the command line is as follows:
  
  mtdparts=<mtddef>[;<mtddef]
  <mtddef>  := <mtd-id>:<partdef>[,<partdef>]
  <partdef> := <size>[@offset][<name>][ro]
  <mtd-id>  := unique id used in mapping driver/device
  <size>    := standard linux memsize OR "-" to denote all
  remaining space
  <name>    := (NAME)
  
  Due to the way Linux handles the command line, no spaces are
  allowed in the partition definition, including mtd id's and partition
  names.
  
  Examples:
  
  1 flash resource (mtd-id "sa1100"), with 1 single writable partition:
  mtdparts=sa1100:-
  
  Same flash, but 2 named partitions, the first one being read-only:
  mtdparts=sa1100:256k(ARMboot)ro,-(root)
  
  If unsure, say 'N'.

MTD_COMPLEX_MAPPINGS
  This causes the chip drivers to allow for complicated
  paged mappings of flash chips.

MTD_DATAFLASH
  This enables access to AT45xxx DataFlash chips, using SPI.
  Sometimes DataFlash chips are packaged inside MMC-format
  cards; at this writing, the MMC stack won't handle those.

MTD_DATAFLASH_OTP
  Newer DataFlash chips (revisions C and D) support 128 bytes of
  one-time-programmable (OTP) data.  The first half may be written
  (once) with up to 64 bytes of data, such as a serial number or
  other key product data.  The second half is programmed with a
  unique-to-each-chip bit pattern at the factory.

MTD_DATAFLASH_WRITE_VERIFY
  This adds an extra check when data is written to the flash.
  It may help if you are verifying chip setup (timings etc) on
  your board.  There is a rare possibility that even though the
  device thinks the write was successful, a bit could have been
  flipped accidentally due to device wear or something else.

MTD_DC21285
  This provides a driver for the flash accessed using Intel's
  21285 bridge used with Intel's StrongARM processors. More info at
  <https://www.intel.com/design/bridge/docs/21285_documentation.htm>.

MTD_DOCG3
  This provides an MTD device driver for the M-Systems DiskOnChip
  G3 devices.
  
  The driver provides access to G3 DiskOnChip, distributed by
  M-Systems and now Sandisk. The support is very experimental,
  and doesn't give access to any write operations.

MTD_ESB2ROM
  Support for treating the BIOS flash chip on ESB2 motherboards
  as an MTD device - with this you can reprogram your BIOS.
  
  BE VERY CAREFUL.

MTD_GEN_PROBE
  No help

MTD_HYPERBUS
  This is the framework for the HyperBus which can be used by
  the HyperBus Controller driver to communicate with
  HyperFlash. See Cypress HyperBus specification for more
  details

MTD_ICHXROM
  Support for treating the BIOS flash chip on ICHX motherboards
  as an MTD device - with this you can reprogram your BIOS.
  
  BE VERY CAREFUL.

MTD_IMPA7
  This enables access to the NOR Flash on the impA7 board of
  implementa GmbH. If you have such a board, say 'Y' here.

MTD_INTEL_VR_NOR
  Map driver for a NOR flash bank located on the Expansion Bus of the
  Intel Vermilion Range chipset.

MTD_IXP4XX
  This enables MTD access to flash devices on platforms based
  on Intel's IXP4xx family of network processors such as the
  IXDP425 and Coyote. If you have an IXP4xx based board and
  would like to use the flash chips on it, say 'Y'.

MTD_JEDECPROBE
  This option enables JEDEC-style probing of flash chips which are not
  compatible with the Common Flash Interface, but will use the common
  CFI-targeted flash drivers for any chips which are identified which
  are in fact compatible in all but the probe method. This actually
  covers most AMD/Fujitsu-compatible chips and also non-CFI
  Intel chips.

MTD_L440GX
  Support for treating the BIOS flash chip on Intel L440GX motherboards
  as an MTD device - with this you can reprogram your BIOS.
  
  BE VERY CAREFUL.

MTD_LANTIQ
  Support for NOR flash attached to the Lantiq SoC's External Bus Unit.

MTD_LART
  This enables the flash driver for LART. Please note that you do
  not need any mapping/chip driver for LART. This one does it all
  for you, so go disable all of those if you enabled some of them (:

MTD_LPDDR
  This option enables support of LPDDR (Low power double data rate)
  flash chips. Synonymous with Mobile-DDR. It is a new standard for
  DDR memories, intended for battery-operated systems.

MTD_LPDDR2_NVM
  This option enables support of PCM memories with a LPDDR2-NVM
  (Low power double data rate 2) interface.

MTD_MAP_BANK_WIDTH_1
  If you wish to support CFI devices on a physical bus which is
  8 bits wide, say 'Y'.

MTD_MAP_BANK_WIDTH_16
  If you wish to support CFI devices on a physical bus which is
  128 bits wide, say 'Y'.

MTD_MAP_BANK_WIDTH_2
  If you wish to support CFI devices on a physical bus which is
  16 bits wide, say 'Y'.

MTD_MAP_BANK_WIDTH_32
  If you wish to support CFI devices on a physical bus which is
  256 bits wide, say 'Y'.

MTD_MAP_BANK_WIDTH_4
  If you wish to support CFI devices on a physical bus which is
  32 bits wide, say 'Y'.

MTD_MAP_BANK_WIDTH_8
  If you wish to support CFI devices on a physical bus which is
  64 bits wide, say 'Y'.

MTD_MCHP23K256
  This enables access to Microchip 23K256 SRAM chips, using SPI.
  
  Set up your spi devices with the right board-specific
  platform data, or a device tree description if you want to
  specify device partitioning

MTD_MS02NV
  This is an MTD driver for the DEC's MS02-NV (54-20948-01) battery
  backed-up NVRAM module.  The module was originally meant as an NFS
  accelerator.  Say Y here if you have a DECstation 5000/2x0 or a
  DECsystem 5900 equipped with such a module.
  
  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read <file:Documentation/kbuild/modules.rst>.
  The module will be called ms02-nv.

MTD_MTDRAM
  This enables a test MTD device driver which uses vmalloc() to
  provide storage.  You probably want to say 'N' unless you're
  testing stuff.

MTD_NAND_AMS_DELTA
  Support for NAND flash on Amstrad E3 (Delta).

MTD_NAND_ARASAN
  Enables the driver for the Arasan NAND flash controller on
  Zynq Ultrascale+ MPSoC.

MTD_NAND_ATMEL
  Enables support for NAND Flash / Smart Media Card interface
  on Atmel AT91 processors.

MTD_NAND_AU1550
  This enables the driver for the NAND flash controller on the
  AMD/Alchemy 1550 SOC.

MTD_NAND_BCM47XXNFLASH
  BCMA bus can have various flash memories attached, they are
  registered by bcma as platform devices. This enables driver for
  NAND flash memories. For now only BCM4706 is supported.

MTD_NAND_BRCMNAND
  Enables the Broadcom NAND controller driver. The controller was
  originally designed for Set-Top Box but is used on various BCM7xxx,
  BCM3xxx, BCM63xxx, iProc/Cygnus and more.

MTD_NAND_CADENCE
  Enable the driver for NAND flash on platforms using a Cadence NAND
  controller.

MTD_NAND_CAFE
  Use NAND flash attached to the CAFÉ chip designed for the OLPC
  laptop.

MTD_NAND_CORE
  No help

MTD_NAND_CS553X
  The CS553x companion chips for the AMD Geode processor
  include NAND flash controllers with built-in hardware ECC
  capabilities; enabling this option will allow you to use
  these. The driver will check the MSRs to verify that the
  controller is enabled for NAND, and currently requires that
  the controller be in MMIO mode.
  
  If you say "m", the module will be called cs553x_nand.

MTD_NAND_DAVINCI
  Enable the driver for NAND flash chips on Texas Instruments
  DaVinci/Keystone processors.

MTD_NAND_DENALI
  No help

MTD_NAND_DENALI_DT
  Enable the driver for NAND flash on platforms using a Denali NAND
  controller as a DT device.

MTD_NAND_DENALI_PCI
  Enable the driver for NAND flash on Intel Moorestown, using the
  Denali NAND controller core.

MTD_NAND_DISKONCHIP
  This is a reimplementation of M-Systems DiskOnChip 2000,
  Millennium and Millennium Plus as a standard NAND device driver,
  as opposed to the earlier self-contained MTD device drivers.
  This should enable, among other things, proper JFFS2 operation on
  these devices.

MTD_NAND_DISKONCHIP_BBTWRITE
  On DiskOnChip devices shipped with the INFTL filesystem (Millennium
  and 2000 TSOP/Alon), Linux reserves some space at the end of the
  device for the Bad Block Table (BBT).  If you have existing INFTL
  data on your device (created by non-Linux tools such as M-Systems'
  DOS drivers), your data might overlap the area Linux wants to use for
  the BBT.  If this is a concern for you, leave this option disabled and
  Linux will not write BBT data into this area.
  The downside of leaving this option disabled is that if bad blocks
  are detected by Linux, they will not be recorded in the BBT, which
  could cause future problems.
  Once you enable this option, new filesystems (INFTL or others, created
  in Linux or other operating systems) will not use the reserved area.
  The only reason not to enable this option is to prevent damage to
  preexisting filesystems.
  Even if you leave this disabled, you can enable BBT writes at module
  load time (assuming you build diskonchip as a module) with the module
  parameter "inftl_bbt_write=1".

MTD_NAND_DISKONCHIP_PROBE_ADDRESS
  By default, the probe for DiskOnChip devices will look for a
  DiskOnChip at every multiple of 0x2000 between 0xC8000 and 0xEE000.
  This option allows you to specify a single address at which to probe
  for the device, which is useful if you have other devices in that
  range which get upset when they are probed.
  
  (Note that on PowerPC, the normal probe will only check at
  0xE4000000.)
  
  Normally, you should leave this set to zero, to allow the probe at
  the normal addresses.

MTD_NAND_DISKONCHIP_PROBE_ADVANCED
  This option allows you to specify nonstandard address at which to
  probe for a DiskOnChip, or to change the detection options.  You
  are unlikely to need any of this unless you are using LinuxBIOS.
  Say 'N'.

MTD_NAND_DISKONCHIP_PROBE_HIGH
  By default, the probe for DiskOnChip devices will look for a
  DiskOnChip at every multiple of 0x2000 between 0xC8000 and 0xEE000.
  This option changes to make it probe between 0xFFFC8000 and
  0xFFFEE000.  Unless you are using LinuxBIOS, this is unlikely to be
  useful to you.  Say 'N'.

MTD_NAND_ECC
  No help

MTD_NAND_ECC_SW_BCH
  This enables support for software BCH error correction. Binary BCH
  codes are more powerful and cpu intensive than traditional Hamming
  ECC codes. They are used with NAND devices requiring more than 1 bit
  of error correction.

MTD_NAND_ECC_SW_HAMMING
  This enables support for software Hamming error
  correction. This correction can correct up to 1 bit error
  per chunk and detect up to 2 bit errors. While it used to be
  widely used with old parts, newer NAND chips usually require
  more strength correction and in this case BCH or RS will be
  preferred.

MTD_NAND_ECC_SW_HAMMING_SMC
  Software ECC according to the Smart Media Specification.
  The original Linux implementation had byte 0 and 1 swapped.

MTD_NAND_FSL_ELBC
  Various Freescale chips, including the 8313, include a NAND Flash
  Controller Module with built-in hardware ECC capabilities.
  Enabling this option will enable you to use this to control
  external NAND devices.

MTD_NAND_FSL_IFC
  Various Freescale chips e.g P1010, include a NAND Flash machine
  with built-in hardware ECC capabilities.
  Enabling this option will enable you to use this to control
  external NAND devices.

MTD_NAND_FSL_UPM
  Enables support for NAND Flash chips wired onto Freescale PowerPC
  processor localbus with User-Programmable Machine support.

MTD_NAND_FSMC
  Enables support for NAND Flash chips on the ST Microelectronics
  Flexible Static Memory Controller (FSMC)

MTD_NAND_GPIO
  This enables a NAND flash driver where control signals are
  connected to GPIO pins, and commands and data are communicated
  via a memory mapped interface.

MTD_NAND_GPMI_NAND
  Enables NAND Flash support for IMX23, IMX28 or IMX6.
  The GPMI controller is very powerful, with the help of BCH
  module, it can do the hardware ECC. The GPMI supports several
  NAND flashs at the same time.

MTD_NAND_HISI504
  Enables support for NAND controller on Hisilicon SoC Hip04.

MTD_NAND_INGENIC_ECC
  No help

MTD_NAND_INTEL_LGM
  Enables support for NAND Flash chips on Intel's LGM SoC.
  NAND flash controller interfaced through the External Bus Unit.

MTD_NAND_JZ4725B_BCH
  Enable this driver to support the BCH error-correction hardware
  present on the JZ4725B SoC from Ingenic.
  
  This driver can also be built as a module. If so, the module
  will be called jz4725b-bch.

MTD_NAND_JZ4740_ECC
  Enable this driver to support the Reed-Solomon error-correction
  hardware present on the JZ4740 SoC from Ingenic.
  
  This driver can also be built as a module. If so, the module
  will be called jz4740-ecc.

MTD_NAND_JZ4780
  Enables support for NAND Flash connected to the NEMC on JZ4780 SoC
  based boards, using the BCH controller for hardware error correction.

MTD_NAND_JZ4780_BCH
  Enable this driver to support the BCH error-correction hardware
  present on the JZ4780 SoC from Ingenic.
  
  This driver can also be built as a module. If so, the module
  will be called jz4780-bch.

MTD_NAND_MARVELL
  This enables the NAND flash controller driver for Marvell boards,
  including:
  - PXA3xx processors (NFCv1)
  - 32-bit Armada platforms (XP, 37x, 38x, 39x) (NFCv2)
  - 64-bit Aramda platforms (7k, 8k) (NFCv2)

MTD_NAND_MESON
  Enables support for NAND controller on Amlogic's Meson SoCs.
  This controller is found on Meson SoCs.

MTD_NAND_MLC_LPC32XX
  Uses the LPC32XX MLC (i.e. for Multi Level Cell chips) NAND
  controller. This is the default for the WORK92105 controller
  board.
  
  Please check the actual NAND chip connected and its support
  by the MLC NAND controller.

MTD_NAND_MPC5121_NFC
  This enables the driver for the NAND flash controller on the
  MPC5121 SoC.

MTD_NAND_MTK
  Enables support for NAND controller on MTK SoCs.
  This controller is found on mt27xx, mt81xx, mt65xx SoCs.

MTD_NAND_MXC
  This enables the driver for the NAND flash controller on the
  MXC processors.

MTD_NAND_MXIC
  This selects the Macronix raw NAND controller driver.

MTD_NAND_NANDSIM
  The simulator may simulate various NAND flash chips for the
  MTD nand layer.

MTD_NAND_NDFC
  NDFC Nand Flash Controllers are integrated in IBM/AMCC's 4xx SoCs

MTD_NAND_OMAP2
  Support for NAND flash on Texas Instruments OMAP2, OMAP3, OMAP4
  and Keystone platforms.

MTD_NAND_OMAP_BCH
  This config enables the ELM hardware engine, which can be used to
  locate and correct errors when using BCH ECC scheme. This offloads
  the cpu from doing ECC error searching and correction. However some
  legacy OMAP families like OMAP2xxx, OMAP3xxx do not have ELM engine
  so this is optional for them.

MTD_NAND_OMAP_BCH_BUILD
  No help

MTD_NAND_ORION
  This enables the NAND flash controller on Orion machines.
  
  No board specific support is done by this driver, each board
  must advertise a platform_device for the driver to attach.

MTD_NAND_OXNAS
  This enables the NAND flash controller on Oxford Semiconductor SoCs.

MTD_NAND_PASEMI
  Enables support for NAND Flash interface on PA Semi PWRficient
  based boards

MTD_NAND_PLATFORM
  This implements a generic NAND driver for on-SOC platform
  devices. You will need to provide platform-specific functions
  via platform_data.

MTD_NAND_QCOM
  Enables support for NAND flash chips on SoCs containing the EBI2 NAND
  controller. This controller is found on IPQ806x SoC.

MTD_NAND_RICOH
  Enable support for Ricoh R5C852 xD card reader
  You also need to enable ether
  NAND SSFDC (SmartMedia) read only translation layer' or new
  expermental, readwrite
  'SmartMedia/xD new translation layer'

MTD_NAND_ROCKCHIP
  Enables support for NAND controller on Rockchip SoCs.
  There are four different versions of NAND FLASH Controllers,
  including:
    NFC v600: RK2928, RK3066, RK3188
    NFC v622: RK3036, RK3128
    NFC v800: RK3308, RV1108
    NFC v900: PX30, RK3326

MTD_NAND_S3C2410
  This enables the NAND flash controller on the S3C24xx and S3C64xx
  SoCs
  
  No board specific support is done by this driver, each board
  must advertise a platform_device for the driver to attach.

MTD_NAND_S3C2410_CLKSTOP
  Stop the clock to the NAND controller when there is no chip
  selected to save power. This will mean there is a small delay
  when the is NAND chip selected or released, but will save
  approximately 5mA of power when there is nothing happening.

MTD_NAND_S3C2410_DEBUG
  Enable debugging of the S3C NAND driver

MTD_NAND_SHARPSL
  No help

MTD_NAND_SH_FLCTL
  Several Renesas SuperH CPU has FLCTL. This option enables support
  for NAND Flash using FLCTL.

MTD_NAND_SLC_LPC32XX
  Enables support for NXP's LPC32XX SLC (i.e. for Single Level Cell
  chips) NAND controller. This is the default for the PHYTEC 3250
  reference board which contains a NAND256R3A2CZA6 chip.
  
  Please check the actual NAND chip connected and its support
  by the SLC NAND controller.

MTD_NAND_SOCRATES
  Enables support for NAND Flash chips wired onto Socrates board.

MTD_NAND_STM32_FMC2
  Enables support for NAND Flash chips on SoCs containing the FMC2
  NAND controller. This controller is found on STM32MP SoCs.
  The controller supports a maximum 8k page size and supports
  a maximum 8-bit correction error per sector of 512 bytes.

MTD_NAND_SUNXI
  Enables support for NAND Flash chips on Allwinner SoCs.

MTD_NAND_TANGO
  Enables the NAND Flash controller on Tango chips.

MTD_NAND_TEGRA
  Enables support for NAND flash controller on NVIDIA Tegra SoC.
  The driver has been developed and tested on a Tegra 2 SoC. DMA
  support, raw read/write page as well as HW ECC read/write page
  is supported. Extra OOB bytes when using HW ECC are currently
  not supported.

MTD_NAND_TMIO
  Support for NAND flash connected to a Toshiba Mobile IO
  Controller in some PDAs, including the Sharp SL6000x.

MTD_NAND_TXX9NDFMC
  This enables the NAND flash controller on the TXx9 SoCs.

MTD_NAND_VF610_NFC
  Enables support for NAND Flash Controller on some Freescale
  processors like the VF610, MPC5125, MCF54418 or Kinetis K70.
  The driver supports a maximum 2k page size. With 2k pages and
  64 bytes or more of OOB, hardware ECC with up to 32-bit error
  correction is supported. Hardware ECC is only enabled through
  device tree.

MTD_NAND_XWAY
  Enables support for NAND Flash chips on Lantiq XWAY SoCs. NAND is attached
  to the External Bus Unit (EBU).

MTD_NETSC520
  This enables access routines for the flash chips on the AMD NetSc520
  demonstration board. If you have one of these boards and would like
  to use the flash chips on it, say 'Y'.

MTD_NETtel
  Support for flash chips on NETtel/SecureEdge/SnapGear boards.

MTD_OF_PARTS
  This provides a open firmware device tree partition parser
  which derives the partition map from the children of the
  flash memory node, as described in
  Documentation/devicetree/bindings/mtd/partition.txt.

MTD_ONENAND
  This enables support for accessing all type of OneNAND flash
  devices.

MTD_ONENAND_2X_PROGRAM
  The 2X Program is an extension of Program Operation.
  Since the device is equipped with two DataRAMs, and two-plane NAND
  Flash memory array, these two component enables simultaneous program
  of 4KiB. Plane1 has only even blocks such as block0, block2, block4
  while Plane2 has only odd blocks such as block1, block3, block5.
  So MTD regards it as 4KiB page size and 256KiB block size
  
  Now the following chips support it. (KFXXX16Q2M)
    Demux: KFG2G16Q2M, KFH4G16Q2M, KFW8G16Q2M,
    Mux:   KFM2G16Q2M, KFN4G16Q2M,
  
  And more recent chips

MTD_ONENAND_GENERIC
  Support for OneNAND flash via platform device driver.

MTD_ONENAND_OMAP2
  Support for a OneNAND flash device connected to an OMAP2/OMAP3 SoC
  via the GPMC memory controller.
  Enable dmaengine and gpiolib for better performance.

MTD_ONENAND_OTP
  One Block of the NAND Flash Array memory is reserved as
  a One-Time Programmable Block memory area.
  Also, 1st Block of NAND Flash Array can be used as OTP.
  
  The OTP block can be read, programmed and locked using the same
  operations as any other NAND Flash Array memory block.
  OTP block cannot be erased.
  
  OTP block is fully-guaranteed to be a valid block.

MTD_ONENAND_SAMSUNG
  Support for a OneNAND flash device connected to an Samsung SOC.
  S3C64XX uses command mapping method.
  S5PC110/S5PC210 use generic OneNAND method.

MTD_ONENAND_VERIFY_WRITE
  This adds an extra check when data is written to the flash. The
  OneNAND flash device internally checks only bits transitioning
  from 1 to 0. There is a rare possibility that even though the
  device thinks the write was successful, a bit could have been
  flipped accidentally due to device wear or something else.

MTD_OOPS
  This enables panic and oops messages to be logged to a circular
  buffer in a flash partition where it can be read back at some
  later point.

MTD_OTP
  This enables support for reading, writing and locking so called
  "Protection Registers" present on some flash chips.
  A subset of them are pre-programmed at the factory with a
  unique set of values. The rest is user-programmable.
  
  The user-programmable Protection Registers contain one-time
  programmable (OTP) bits; when programmed, register bits cannot be
  erased. Each Protection Register can be accessed multiple times to
  program individual bits, as long as the register remains unlocked.
  
  Each Protection Register has an associated Lock Register bit. When a
  Lock Register bit is programmed, the associated Protection Register
  can only be read; it can no longer be programmed. Additionally,
  because the Lock Register bits themselves are OTP, when programmed,
  Lock Register bits cannot be erased. Therefore, when a Protection
  Register is locked, it cannot be unlocked.
  
  This feature should therefore be used with extreme care. Any mistake
  in the programming of OTP bits will waste them.

MTD_PARSER_IMAGETAG
  Image Tag is the firmware header used by broadcom on their xDSL line
  of devices. It is used to describe the offsets and lengths of kernel
  and rootfs partitions.
  This driver adds support for parsing a partition with an Image Tag
  header and creates up to two partitions, kernel and rootfs.

MTD_PARSER_TRX
  TRX is a firmware format used by Broadcom on their devices. It
  may contain up to 3/4 partitions (depending on the version).
  This driver will parse TRX header and report at least two partitions:
  kernel and rootfs.

MTD_PARTITIONED_MASTER
  For historical reasons, by default, either a master is present or
  several partitions are present, but not both. The concern was that
  data listed in multiple partitions was dangerous; however, SCSI does
  this and it is frequently useful for applications. This config option
  leaves the master in even if the device is partitioned. It also makes
  the parent of the partition device be the master device, rather than
  what lies behind the master.

MTD_PCI
  Mapping for accessing flash devices on add-in cards like the Intel XScale
  IQ80310 card, and the Intel EBSA285 card in blank ROM programming mode
  (please see the manual for the link settings).
  
  If you are not sure, say N.

MTD_PCMCIA
  Map driver for accessing PCMCIA linear flash memory cards. These
  cards are usually around 4-16MiB in size. This does not include
  Compact Flash cards which are treated as IDE devices.

MTD_PCMCIA_ANONYMOUS
  If this option is enabled, PCMCIA cards which do not report
  anything about themselves are assumed to be MTD cards.
  
  If unsure, say N.

MTD_PHRAM
  This is a re-implementation of the slram driver above.
  
  Use this driver to access physical memory that the kernel proper
  doesn't have access to, memory beyond the mem=xxx limit, nvram,
  memory on the video card, etc...

MTD_PHYSMAP
  This provides a 'mapping' driver which allows the NOR Flash and
  ROM driver code to communicate with chips which are mapped
  physically into the CPU's memory. You will need to configure
  the physical address and size of the flash chips on your
  particular board as well as the bus width, either statically
  with config options or at run-time.
  
  To compile this driver as a module, choose M here: the
  module will be called physmap.

MTD_PHYSMAP_BANKWIDTH
  This is the total width of the data bus of the flash devices
  in octets. For example, if you have a data bus width of 32
  bits, you would set the bus width octet value to 4. This is
  used internally by the CFI drivers.

MTD_PHYSMAP_BT1_ROM
  This provides some extra DT physmap parsing for the Baikal-T1
  platforms, some detection and setting up ROMs-specific accessors.

MTD_PHYSMAP_COMPAT
  Setup a simple mapping via the Kconfig options.  Normally the
  physmap configuration options are done via your board's
  resource file.
  
  If unsure, say N here.

MTD_PHYSMAP_GEMINI
  This provides some extra DT physmap parsing for the Gemini
  platforms, some detection and setting up parallel mode on the
  external interface.

MTD_PHYSMAP_GPIO_ADDR
  Extend the physmap driver to allow flashes to be partially
  physically addressed and assisted by GPIOs.

MTD_PHYSMAP_IXP4XX
  This provides some extra DT physmap parsing for the Intel IXP4xx
  platforms, some elaborate endianness handling in particular.

MTD_PHYSMAP_LEN
  This is the total length of the mapping of the flash chips on
  your particular board. If there is space, or aliases, in the
  physical memory map between the chips, this could be larger
  than the total amount of flash present. Refer to the memory
  map which should hopefully be in the documentation for your
  board.

MTD_PHYSMAP_OF
  This provides a 'mapping' driver which allows the NOR Flash, ROM
  and RAM driver code to communicate with chips which are mapped
  physically into the CPU's memory. The mapping description here is
  taken from OF device tree.

MTD_PHYSMAP_START
  This is the physical memory location at which the flash chips
  are mapped on your particular target board. Refer to the
  memory map which should hopefully be in the documentation for
  your board.

MTD_PHYSMAP_VERSATILE
  This provides some extra DT physmap parsing for the ARM Versatile
  platforms, basically to add a VPP (write protection) callback so
  the flash can be taken out of write protection.

MTD_PISMO
  This driver allows for discovery of PISMO modules - see
  <http://www.pismoworld.org/>.  These are small modules containing
  up to five memory devices (eg, SRAM, flash, DOC) described by an
  I2C EEPROM.
  
  This driver does not create any MTD maps itself; instead it
  creates MTD physmap and MTD SRAM platform devices.  If you
  enable this option, you should consider enabling MTD_PHYSMAP
  and/or MTD_PLATRAM according to the devices on your module.
  
  When built as a module, it will be called pismo.ko

MTD_PLATRAM
  Map driver for RAM areas described via the platform device
  system.
  
  This selection automatically selects the map_ram driver.

MTD_PMC551
  This provides a MTD device driver for the Ramix PMC551 RAM PCI card
  from Ramix Inc. <http://www.ramix.com/products/memory/pmc551.html>.
  These devices come in memory configurations from 32M - 1G.  If you
  have one, you probably want to enable this.
  
  If this driver is compiled as a module you get the ability to select
  the size of the aperture window pointing into the devices memory.
  What this means is that if you have a 1G card, normally the kernel
  will use a 1G memory map as its view of the device.  As a module,
  you can select a 1M window into the memory and the driver will
  "slide" the window around the PMC551's memory.  This was
  particularly useful on the 2.2 kernels on PPC architectures as there
  was limited kernel space to deal with.

MTD_PMC551_BUGFIX
  Some of Ramix's PMC551 boards with 256M configurations have invalid
  column and row mux values.  This option will fix them, but will
  break other memory configurations.  If unsure say N.

MTD_PMC551_DEBUG
  This option makes the PMC551 more verbose during its operation and
  is only really useful if you are developing on this driver or
  suspect a possible hardware or driver bug.  If unsure say N.

MTD_PMC_MSP_EVM
  This provides a 'mapping' driver which supports the way
  in which user-programmable flash chips are connected on the
  PMC-Sierra MSP eval/demo boards.

MTD_POWERNV_FLASH
  This provides an MTD device to access flash on powernv OPAL
  platforms from Linux. This device abstracts away the
  firmware interface for flash access.

MTD_PSTORE
  This enables panic and oops messages to be logged to a circular
  buffer in a flash partition where it can be read back as files after
  mounting pstore filesystem.
  
  If unsure, say N.

MTD_PXA2XX
  This provides a driver for the NOR flash attached to a PXA2xx chip.

MTD_QINFO_PROBE
  Device Information for LPDDR chips is offered through the Overlay
  Window QINFO interface, permits software to be used for entire
  families of devices. This serves similar purpose of CFI on legacy
  Flash products

MTD_RAM
  This option enables basic support for RAM chips accessed through
  a bus mapping driver.

MTD_RAW_NAND
  This enables support for accessing all type of raw/parallel
  NAND flash devices. For further information see
  <http://www.linux-mtd.infradead.org/doc/nand.html>.

MTD_RBTX4939
  Map driver for NOR flash chips on RBTX4939 board.

MTD_REDBOOT_DIRECTORY_BLOCK
  This option is the Linux counterpart to the
  CYGNUM_REDBOOT_FIS_DIRECTORY_BLOCK RedBoot compile time
  option.
  
  The option specifies which Flash sectors holds the RedBoot
  partition table.  A zero or positive value gives an absolute
  erase block number. A negative value specifies a number of
  sectors before the end of the device.
  
  For example "2" means block number 2, "-1" means the last
  block and "-2" means the penultimate block.

MTD_REDBOOT_PARTS
  RedBoot is a ROM monitor and bootloader which deals with multiple
  'images' in flash devices by putting a table one of the erase
  blocks on the device, similar to a partition table, which gives
  the offsets, lengths and names of all the images stored in the
  flash.
  
  If you need code which can detect and parse this table, and register
  MTD 'partitions' corresponding to each image in the table, enable
  this option.
  
  You will still need the parsing functions to be called by the driver
  for your particular device. It won't happen automatically. The
  SA1100 map driver (CONFIG_MTD_SA1100) has an option for this, for
  example.

MTD_REDBOOT_PARTS_READONLY
  If you need to force read-only for 'RedBoot', 'RedBoot Config' and
  'FIS directory' images, enable this option.

MTD_REDBOOT_PARTS_UNALLOCATED
  If you need to register each unallocated flash region as a MTD
  'partition', enable this option.

MTD_ROM
  This option enables basic support for ROM chips accessed through
  a bus mapping driver.

MTD_SA1100
  This enables access to the flash chips on most platforms based on
  the SA1100 and SA1110, including the Assabet and the Compaq iPAQ.
  If you have such a board, say 'Y'.

MTD_SBC_GXX
  This provides a driver for the on-board flash of Arcom Control
  Systems' SBC-GXn family of boards, formerly known as SBC-MediaGX.
  By default the flash is split into 3 partitions which are accessed
  as separate MTD devices. This board utilizes Intel StrataFlash.
  More info at
  <http://www.arcomcontrols.com/products/icp/pc104/processors/SBC_GX1.htm>.

MTD_SC520CDP
  The SC520 CDP board has two banks of CFI-compliant chips and one
  Dual-in-line JEDEC chip. This 'mapping' driver supports that
  arrangement, implementing three MTD devices.

MTD_SCB2_FLASH
  Support for treating the BIOS flash chip on Intel SCB2 boards
  as an MTD device - with this you can reprogram your BIOS.
  
  BE VERY CAREFUL.

MTD_SCx200_DOCFLASH
  Enable support for a flash chip mapped using the DOCCS signal on a
  National Semiconductor SCx200 processor.
  
  If you don't know what to do here, say N.
  
  If compiled as a module, it will be called scx200_docflash.

MTD_SHARPSL_PARTS
  This provides the read-only FTL logic necessary to read the partition
  table from the NAND flash of Sharp SL Series (Zaurus) and the MTD
  partition parser using this code.

MTD_SLRAM
  If your CPU cannot cache all of the physical memory in your machine,
  you can still use it for storage or swap by using this driver to
  present it to the system as a Memory Technology Device.

MTD_SM_COMMON
  No help

MTD_SOLUTIONENGINE
  This enables access to the flash chips on the Hitachi SolutionEngine and
  similar boards. Say 'Y' if you are building a kernel for such a board.

MTD_SPEAR_SMI
  This enable SNOR support on SPEAR platforms using SMI controller

MTD_SPI_NAND
  This is the framework for the SPI NAND device drivers.

MTD_SPI_NOR
  This is the framework for the SPI NOR which can be used by the SPI
  device drivers and the SPI NOR device driver.

MTD_SPI_NOR_SWP_DISABLE
  This option disables the software write protection on any SPI
  flashes at boot-up.
  
  Depending on the flash chip this either clears the block protection
  bits or does a "Global Unprotect" command.
  
  Don't use this if you intent to use the software write protection
  of your SPI flash. This is only to keep backwards compatibility.

MTD_SPI_NOR_SWP_DISABLE_ON_VOLATILE
  Some SPI flashes have volatile block protection bits, ie. after a
  power-up or a reset the flash is software write protected by
  default.
  
  This option disables the software write protection for these kind
  of flashes while keeping it enabled for any other SPI flashes
  which have non-volatile write protection bits.
  
  If the software write protection will be disabled depending on
  the flash either the block protection bits are cleared or a
  "Global Unprotect" command is issued.
  
  If you are unsure, select this option.

MTD_SPI_NOR_SWP_KEEP
  If you select this option the software write protection of any
  SPI flashes will not be changed. If your flash is software write
  protected or will be automatically software write protected after
  power-up you have to manually unlock it before you are able to
  write to it.

MTD_SPI_NOR_USE_4K_SECTORS
  Many flash memories support erasing small (4096 B) sectors. Depending
  on the usage this feature may provide performance gain in comparison
  to erasing whole blocks (32/64 KiB).
  Changing a small part of the flash's contents is usually faster with
  small sectors. On the other hand erasing should be faster when using
  64 KiB block instead of 16 × 4 KiB sectors.
  
  Please note that some tools/drivers/filesystems may not work with
  4096 B erase size (e.g. UBIFS requires 15 KiB as a minimum).

MTD_SST25L
  This enables access to the non JEDEC SST25L SPI flash chips, used
  for program and data storage.
  
  Set up your spi devices with the right board-specific platform data,
  if you want to specify device partitioning.

MTD_ST_SPI_FSM
  This provides an MTD device driver for the ST Microelectronics
  SPI Fast Sequence Mode (FSM) Serial Flash Controller and support
  for a subset of connected Serial Flash devices.

MTD_SUN_UFLASH
  This provides a 'mapping' driver which supports the way in
  which user-programmable flash chips are connected on various
  Sun Microsystems boardsets.  This driver will require CFI support
  in the kernel, so if you did not enable CFI previously, do that now.

MTD_SWAP
  Provides volatile block device driver on top of mtd partition
  suitable for swapping.  The mapping of written blocks is not saved.
  The driver provides wear leveling by storing erase counter into the
  OOB.

MTD_TESTS
  This option includes various MTD tests into compilation. The tests
  should normally be compiled as kernel modules. The modules perform
  various checks and verifications when loaded.
  
  WARNING: some of the tests will ERASE entire MTD device which they
  test. Do not use these tests unless you really know what you do.

MTD_TS5500
  This provides a driver for the on-board flash of the Technologic
  System's TS-5500 board. The 2MB flash is split into 3 partitions
  which are accessed as separate MTD devices.
  
  mtd0 and mtd2 are the two BIOS drives, which use the resident
  flash disk (RFD) flash translation layer.
  
  mtd1 allows you to reprogram your BIOS. BE VERY CAREFUL.
  
  Note that jumper 3 ("Write Enable Drive A") must be set
  otherwise detection won't succeed.

MTD_TSUNAMI
  Support for the flash chip on Tsunami TIG bus.

MTD_UBI
  UBI is a software layer above MTD layer which admits use of LVM-like
  logical volumes on top of MTD devices, hides some complexities of
  flash chips like wear and bad blocks and provides some other useful
  capabilities. Please, consult the MTD web site for more details
  (www.linux-mtd.infradead.org).

MTD_UBI_BEB_LIMIT
  This option specifies the maximum bad physical eraseblocks UBI
  expects on the MTD device (per 1024 eraseblocks). If the underlying
  flash does not admit of bad eraseblocks (e.g. NOR flash), this value
  is ignored.
  
  NAND datasheets often specify the minimum and maximum NVM (Number of
  Valid Blocks) for the flashes' endurance lifetime. The maximum
  expected bad eraseblocks per 1024 eraseblocks then can be calculated
  as "1024 * (1 - MinNVB / MaxNVB)", which gives 20 for most NANDs
  (MaxNVB is basically the total count of eraseblocks on the chip).
  
  To put it differently, if this value is 20, UBI will try to reserve
  about 1.9% of physical eraseblocks for bad blocks handling. And that
  will be 1.9% of eraseblocks on the entire NAND chip, not just the MTD
  partition UBI attaches. This means that if you have, say, a NAND
  flash chip admits maximum 40 bad eraseblocks, and it is split on two
  MTD partitions of the same size, UBI will reserve 40 eraseblocks when
  attaching a partition.
  
  This option can be overridden by the "mtd=" UBI module parameter or
  by the "attach" ioctl.
  
  Leave the default value if unsure.

MTD_UBI_BLOCK
  This option enables read-only UBI block devices support. UBI block
  devices will be layered on top of UBI volumes, which means that the
  UBI driver will transparently handle things like bad eraseblocks and
  bit-flips. You can put any block-oriented file system on top of UBI
  volumes in read-only mode (e.g., ext4), but it is probably most
  practical for read-only file systems, like squashfs.
  
  When selected, this feature will be built in the UBI driver.
  
  If in doubt, say "N".

MTD_UBI_FASTMAP
  Important: this feature is experimental so far and the on-flash
  format for fastmap may change in the next kernel versions
  
  Fastmap is a mechanism which allows attaching an UBI device
  in nearly constant time. Instead of scanning the whole MTD device it
  only has to locate a checkpoint (called fastmap) on the device.
  The on-flash fastmap contains all information needed to attach
  the device. Using fastmap makes only sense on large devices where
  attaching by scanning takes long. UBI will not automatically install
  a fastmap on old images, but you can set the UBI module parameter
  fm_autoconvert to 1 if you want so. Please note that fastmap-enabled
  images are still usable with UBI implementations without
  fastmap support. On typical flash devices the whole fastmap fits
  into one PEB. UBI will reserve PEBs to hold two fastmaps.
  
  If in doubt, say "N".

MTD_UBI_GLUEBI
  This option enables gluebi - an additional driver which emulates MTD
  devices on top of UBI volumes: for each UBI volumes an MTD device is
  created, and all I/O to this MTD device is redirected to the UBI
  volume. This is handy to make MTD-oriented software (like JFFS2)
  work on top of UBI. Do not enable this unless you use legacy
  software.

MTD_UBI_WL_THRESHOLD
  This parameter defines the maximum difference between the highest
  erase counter value and the lowest erase counter value of eraseblocks
  of UBI devices. When this threshold is exceeded, UBI starts performing
  wear leveling by means of moving data from eraseblock with low erase
  counter to eraseblocks with high erase counter.
  
  The default value should be OK for SLC NAND flashes, NOR flashes and
  other flashes which have eraseblock life-cycle 100000 or more.
  However, in case of MLC NAND flashes which typically have eraseblock
  life-cycle less than 10000, the threshold should be lessened (e.g.,
  to 128 or 256, although it does not have to be power of 2).

MTD_UCLINUX
  Map driver to support image based filesystems for uClinux.

MTD_VMU
  This driver enables access to the Dreamcast Visual Memory Unit (VMU).
  
  Most Dreamcast users will want to say Y here.
  
  To build this as a module select M here, the module will be called
  vmu-flash.

MTD_XIP
  This allows MTD support to work with flash memory which is also
  used for XIP purposes.  If you're not sure what this is all about
  then say N.

MTK_CMDQ
  Say yes here to add support for the MediaTek Command Queue (CMDQ)
  driver. The CMDQ is used to help read/write registers with critical
  time limitation, such as updating display configuration during the
  vblank.

MTK_CMDQ_MBOX
  Say yes here to add support for the MediaTek Command Queue (CMDQ)
  mailbox driver. The CMDQ is used to help read/write registers with
  critical time limitation, such as updating display configuration
  during the vblank.

MTK_CQDMA
  Enable support for Command-Queue DMA controller on MediaTek
  SoCs.
  
  This controller provides the channels which is dedicated to
  memory-to-memory transfer to offload from CPU.

MTK_DEVAPC
  Say yes here to enable support for Mediatek Device APC driver.
  This driver is mainly used to handle the violation which catches
  unexpected transaction.
  The violation information is logged for further analysis or
  countermeasures.

MTK_EFUSE
  This is a driver to access hardware related data like sensor
  calibration, HDMI impedance etc.
  
  This driver can also be built as a module. If so, the module
  will be called efuse-mtk.

MTK_HSDMA
  Enable support for High-Speed DMA controller on MediaTek
  SoCs.
  
  This controller provides the channels which is dedicated to
  memory-to-memory transfer to offload from CPU through ring-
  based descriptor management.

MTK_INFRACFG
  Say yes here to add support for the MediaTek INFRACFG controller. The
  INFRACFG controller contains various infrastructure registers not
  directly associated to any device.

MTK_IOMMU
  Support for the M4U on certain Mediatek SOCs. M4U is MultiMedia
  Memory Management Unit. This option enables remapping of DMA memory
  accesses for the multimedia subsystem.
  
  If unsure, say N here.

MTK_IOMMU_V1
  Support for the M4U on certain Mediatek SoCs. M4U generation 1 HW is
  Multimedia Memory Managememt Unit. This option enables remapping of
  DMA memory accesses for the multimedia subsystem.
  
  if unsure, say N here.

MTK_MMSYS
  Say yes here to add support for the MediaTek Multimedia
  Subsystem (MMSYS).

MTK_PMIC_WRAP
  Say yes here to add support for MediaTek PMIC Wrapper found
  on different MediaTek SoCs. The PMIC wrapper is a proprietary
  hardware to connect the PMIC.

MTK_SCP
  Say y here to support Mediatek's System Companion Processor (SCP) via
  the remote processor framework.
  
  It's safe to say N here.

MTK_SCPSYS
  Say yes here to add support for the MediaTek SCPSYS power domain
  driver.

MTK_SCPSYS_PM_DOMAINS
  Say y here to enable power domain support.
  In order to meet high performance and low power requirements, the System
  Control Processor System (SCPSYS) has several power management related
  tasks in the system.

MTK_SMI
  This driver is for the Memory Controller module in MediaTek SoCs,
  mainly help enable/disable iommu and control the power domain and
  clocks for each local arbiter.

MTK_THERMAL
  Enable this option if you want to have support for thermal management
  controller present in Mediatek SoCs

MTK_TIMER
  Support for Mediatek timer driver.

MTK_UART_APDMA
  Support for the UART DMA engine found on MediaTek MTK SoCs.
  When SERIAL_8250_MT6577 is enabled, and if you want to use DMA,
  you can enable the config. The DMA engine can only be used
  with MediaTek SoCs.

MTRR
  On Intel P6 family processors (Pentium Pro, Pentium II and later)
  the Memory Type Range Registers (MTRRs) may be used to control
  processor access to memory ranges. This is most useful if you have
  a video (VGA) card on a PCI or AGP bus. Enabling write-combining
  allows bus write transfers to be combined into a larger transfer
  before bursting over the PCI/AGP bus. This can increase performance
  of image write operations 2.5 times or more. Saying Y here creates a
  /proc/mtrr file which may be used to manipulate your processor's
  MTRRs. Typically the X server should use this.
  
  This code has a reasonably generic interface so that similar
  control registers on other processors can be easily supported
  as well:
  
  The Cyrix 6x86, 6x86MX and M II processors have Address Range
  Registers (ARRs) which provide a similar functionality to MTRRs. For
  these, the ARRs are used to emulate the MTRRs.
  The AMD K6-2 (stepping 8 and above) and K6-3 processors have two
  MTRRs. The Centaur C6 (WinChip) has 8 MCRs, allowing
  write-combining. All of these processors are supported by this code
  and it makes sense to say Y here if you have one of them.
  
  Saying Y here also fixes a problem with buggy SMP BIOSes which only
  set the MTRRs for the boot CPU and not for the secondary CPUs. This
  can lead to all sorts of problems, so it's good to say Y here.
  
  You can safely say Y even if your machine doesn't have MTRRs, you'll
  just add about 9 KB to your kernel.
  
  See <file:Documentation/x86/mtrr.rst> for more information.

MTRR_SANITIZER
  Convert MTRR layout from continuous to discrete, so X drivers can
  add writeback entries.
  
  Can be disabled with disable_mtrr_cleanup on the kernel command line.
  The largest mtrr entry size for a continuous block can be set with
  mtrr_chunk_size.
  
  If unsure, say Y.

MTRR_SANITIZER_ENABLE_DEFAULT
  Enable mtrr cleanup default value

MTRR_SANITIZER_SPARE_REG_NR_DEFAULT
  mtrr cleanup spare entries default, it can be changed via
  mtrr_spare_reg_nr=N on the kernel command line.

MULTIPLEXER
  No help

MULTIUSER
  This option enables support for non-root users, groups and
  capabilities.
  
  If you say N here, all processes will run with UID 0, GID 0, and all
  possible capabilities.  Saying N here also compiles out support for
  system calls related to UIDs, GIDs, and capabilities, such as setuid,
  setgid, and capset.
  
  If unsure, say Y here.

MUSB_PIO_ONLY
  All data is copied between memory and FIFO by the CPU.
  DMA controllers are ignored.
  
  Do not choose this unless DMA support for your SOC or board
  is unavailable (or unstable).  When DMA is enabled at compile time,
  you can still disable it at run time using the "use_dma=n" module
  parameter.

MUTEX_SPIN_ON_OWNER
  No help

MUX_ADG792A
  ADG792A and ADG792G Wide Bandwidth Triple 4:1 Multiplexers
  
  The driver supports both operating the three multiplexers in
  parallel and operating them independently.
  
  To compile the driver as a module, choose M here: the module will
  be called mux-adg792a.

MUX_ADGS1408
  ADGS1408 8:1 multiplexer and ADGS1409 double 4:1 multiplexer
  switches.
  
  To compile the driver as a module, choose M here: the module will
  be called mux-adgs1408.

MUX_GPIO
  GPIO-controlled Multiplexer controller.
  
  The driver builds a single multiplexer controller using a number
  of gpio pins. For N pins, there will be 2^N possible multiplexer
  states. The GPIO pins can be connected (by the hardware) to several
  multiplexers, which in that case will be operated in parallel.
  
  To compile the driver as a module, choose M here: the module will
  be called mux-gpio.

MUX_MMIO
  MMIO/Regmap register bitfield-controlled Multiplexer controller.
  
  The driver builds multiplexer controllers for bitfields in either
  a syscon register or a driver regmap register. For N bit wide
  bitfields, there will be 2^N possible multiplexer states.
  
  To compile the driver as a module, choose M here: the module will
  be called mux-mmio.

MV643XX_ETH
  This driver supports the gigabit ethernet MACs in the
  Marvell Discovery PPC/MIPS chipset family (MV643XX) and
  in the Marvell Orion ARM SoC family.
  
  Some boards that use the Discovery chipset are the Momenco
  Ocelot C and Jaguar ATX and Pegasos II.

MV64X60_WDT
  No help

MVEBU_CLK_COMMON
  No help

MVEBU_CLK_COREDIV
  No help

MVEBU_CLK_CPU
  No help

MVEBU_DEVBUS
  This driver is for the Device Bus controller available in some
  Marvell EBU SoCs such as Discovery (mv78xx0), Orion (88f5xxx) and
  Armada 370 and Armada XP. This controller allows to handle flash
  devices such as NOR, NAND, SRAM, and FPGA.

MVEBU_GICP
  No help

MVEBU_ICU
  No help

MVEBU_MBUS
  Driver needed for the MBus configuration on Marvell EBU SoCs
  (Kirkwood, Dove, Orion5x, MV78XX0 and Armada 370/XP).

MVEBU_ODMI
  No help

MVEBU_PIC
  No help

MVEBU_SEI
  No help

MVIAC3_2
  Select this for a VIA C3 "Nehemiah". Selecting this enables usage
  of SSE and tells gcc to treat the CPU as a 686.
  Note, this kernel will not boot on older (pre model 9) C3s.

MVIAC7
  Select this for a VIA C7.  Selecting this uses the correct cache
  shift and tells gcc to treat the CPU as a 686.

MVMDIO
  This driver supports the MDIO interface found in the network
  interface units of the Marvell EBU SoCs (Kirkwood, Orion5x,
  Dove, Armada 370 and Armada XP).
  
  This driver is used by the MV643XX_ETH and MVNETA drivers.

MVME147_NET
  Support for the on-board Ethernet interface on the Motorola MVME147
  single-board computer.  Say Y here to include the
  driver for this chip in your kernel.
  To compile this driver as a module, choose M here.

MVME147_SCSI
  Support for the on-board SCSI controller on the Motorola MVME147
  single-board computer.

MVME16x_NET
  This is the driver for the Ethernet interface on the Motorola
  MVME162, 166, 167, 172 and 177 boards.  Say Y here to include the
  driver for this chip in your kernel.
  To compile this driver as a module, choose M here.

MVME16x_SCSI
  The Motorola MVME162, 166, 167, 172 and 177 boards use the NCR53C710
  SCSI controller chip.  Almost everyone using one of these boards
  will want to say Y to this question.

MVNETA
  This driver supports the network interface units in the
  Marvell ARMADA XP, ARMADA 370, ARMADA 38x and
  ARMADA 37xx SoC family.
  
  Note that this driver is distinct from the mv643xx_eth
  driver, which should be used for the older Marvell SoCs
  (Dove, Orion, Discovery, Kirkwood).

MVNETA_BM
  MVNETA_BM must not be 'm' if MVNETA=y, so this symbol ensures
  that all dependencies are met.

MVNETA_BM_ENABLE
  This driver supports auxiliary block of the network
  interface units in the Marvell ARMADA XP and ARMADA 38x SoC
  family, which is called buffer manager.
  
  This driver, when enabled, strictly cooperates with mvneta
  driver and is common for all network ports of the devices,
  even for Armada 370 SoC, which doesn't support hardware
  buffer management.

MVPP2
  This driver supports the network interface units in the
  Marvell ARMADA 375, 7K and 8K SoCs.

MVPP2_PTP
  No help

MV_XOR
  Enable support for the Marvell XOR engine.

MV_XOR_V2
  Enable support for the Marvell version 2 XOR engine.
  
  This engine provides acceleration for copy, XOR and RAID6
  operations, and is available on Marvell Armada 7K and 8K
  platforms.

MWAVE
  The ACP modem (Mwave) for Linux is a WinModem. It is composed of a
  kernel driver and a user level application. Together these components
  support direct attachment to public switched telephone networks (PSTNs)
  and support selected world wide countries.
  
  This version of the ACP Modem driver supports the IBM Thinkpad 600E,
  600, and 770 that include on board ACP modem hardware.
  
  The modem also supports the standard communications port interface
  (ttySx) and is compatible with the Hayes AT Command Set.
  
  The user level application needed to use this driver can be found at
  the IBM Linux Technology Center (LTC) web site:
  <http://www.ibm.com/linux/ltc/>.
  
  If you own one of the above IBM Thinkpads which has the Mwave chipset
  in it, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called mwave.

MWIFIEX
  This adds support for wireless adapters based on Marvell
  802.11n/ac chipsets.
  
  If you choose to build it as a module, it will be called
  mwifiex.

MWIFIEX_PCIE
  This adds support for wireless adapters based on Marvell
  8766/8897/8997 chipsets with PCIe interface.
  
  If you choose to build it as a module, it will be called
  mwifiex_pcie.

MWIFIEX_SDIO
  This adds support for wireless adapters based on Marvell
  8786/8787/8797/8887/8897/8977/8987/8997 chipsets with SDIO interface.
  
  If you choose to build it as a module, it will be called
  mwifiex_sdio.

MWIFIEX_USB
  This adds support for wireless adapters based on Marvell
  8797/8997 chipset with USB interface.
  
  If you choose to build it as a module, it will be called
  mwifiex_usb.

MWINCHIP3D
  Select this for an IDT Winchip-2, 2A or 3.  Linux and GCC
  treat this chip as a 586TSC with some extended instructions
  and alignment requirements.  Also enable out of order memory
  stores for this CPU, which can increase performance of some
  operations.

MWINCHIPC6
  Select this for an IDT Winchip C6 chip.  Linux and GCC
  treat this chip as a 586TSC with some extended instructions
  and alignment requirements.

MWL8K
  This driver supports Marvell TOPDOG 802.11 wireless cards.
  
  To compile this driver as a module, choose M here: the module
  will be called mwl8k.  If unsure, say N.

MX3_IPU
  If you plan to use the Image Processing unit in the i.MX3x, say
  Y here. If unsure, select Y.

MX3_IPU_IRQS
  Out of 137 interrupt sources on i.MX31 IPU only very few are used.
  To avoid bloating the irq_desc[] array we allocate a sufficient
  number of IRQ slots and map them dynamically to specific sources.

MXC4005
  Say yes here to build support for the Memsic MXC4005XC 3-axis
  accelerometer.
  
  To compile this driver as a module, choose M. The module will be
  called mxc4005.

MXC6255
  Say yes here to build support for the Memsic MXC6255 Orientation
  Sensing Accelerometer Driver.
  
  To compile this driver as a module, choose M here: the module will be
  called mxc6255.

MXC_CLK
  No help

MXC_CLK_SCU
  No help

MXM_WMI
  MXM is a standard for laptop graphics cards, the WMI interface
  is required for switchable nvidia graphics machines

MXS_DMA
  Support the MXS DMA engine. This engine including APBH-DMA
  and APBX-DMA is integrated into some Freescale chips.

MXS_LRADC_ADC
  Say yes here to build support for the ADC functions of the
  i.MX23/i.MX28 LRADC. This includes general-purpose ADC readings,
  battery voltage measurement, and die temperature measurement.
  
  This driver can also be built as a module. If so, the module will be
  called mxs-lradc-adc.

MXS_TIMER
  Enables support for the MXS timer.

MYRI10GE
  This driver supports Myricom Myri-10G Dual Protocol interface in
  Ethernet mode. If the eeprom on your board is not recent enough,
  you will need a newer firmware image.
  You may get this image or more information, at:
  
  <http://www.myri.com/scs/download-Myri10GE.html>
  
  To compile this driver as a module, choose M here. The module
  will be called myri10ge.

MYRI10GE_DCA
  Say Y here if you want to use Direct Cache Access (DCA) in the
  driver.  DCA is a method for warming the CPU cache before data
  is used, with the intent of lessening the impact of cache misses.

N2
  Driver for RISCom/N2 single or dual channel ISA cards by
  SDL Communications Inc.
  
  If you have such a card, say Y here and see
  <http://www.kernel.org/pub/linux/utils/net/hdlc/>.
  
  Note that N2csu and N2dds cards are not supported by this driver.
  
  To compile this driver as a module, choose M here: the module
  will be called n2.
  
  If unsure, say N.

NAMESPACES
  Provides the way to make tasks work with different objects using
  the same id. For example same IPC id may refer to different objects
  or same user id or pid may refer to different tasks when used in
  different namespaces.

NATIONAL_PHY
  Currently supports the DP83865 PHY.

NATSEMI
  This driver is for the National Semiconductor DP83810 series,
  which is used in cards from PureData, NetGear, Linksys
  and others, including the 83815 chip.
  More specific information and updates are available from
  <http://www.scyld.com/network/natsemi.html>.

NAU7802
  Say yes here to build support for Nuvoton NAU7802 ADC.
  
  To compile this driver as a module, choose M here: the
  module will be called nau7802.

NBPFAXI_DMA
  Support for "Type-AXI" NBPF DMA IPs from Renesas

NCSI_OEM_CMD_GET_MAC
  This allows to get MAC address from NCSI firmware and set them back to
        controller.

NDC_DIS_DYNAMIC_CACHING
  This config option disables caching of dynamic entries such as NIX SQEs
  , NPA stack pages etc in NDC. Also locks down NIX SQ/CQ/RQ/RSS and
  NPA Aura/Pool contexts.

ND_BLK
  Support NVDIMMs, or other devices, that implement a BLK-mode
  access capability.  BLK-mode access uses memory-mapped-i/o
  apertures to access persistent media.
  
  Say Y if your platform firmware emits an ACPI.NFIT table
  (CONFIG_ACPI_NFIT), or otherwise exposes BLK-mode
  capabilities.

ND_BTT
  No help

ND_CLAIM
  No help

ND_PFN
  No help

NE2000
  If you have a network (Ethernet) card of this type, say Y here.
  Many Ethernet cards without a specific driver are compatible with
  the NE2000.
  
  If you have a PCI NE2000 card however, say N here and Y to "PCI
  NE2000 and clone support" below.
  
  To compile this driver as a module, choose M here. The module
  will be called ne.

NE2K_PCI
  This driver is for NE2000 compatible PCI cards. It will not work
  with ISA NE2000 cards (they have their own driver, "NE2000/NE1000
  support" below). If you have a PCI NE2000 network (Ethernet) card,
  say Y here.
  
  This driver also works for the following NE2000 clone cards:
  RealTek RTL-8029  Winbond 89C940  Compex RL2000  KTI ET32P2
  NetVin NV5000SC   Via 86C926      SureCom NE34   Winbond
  Holtek HT80232    Holtek HT80229
  
  To compile this driver as a module, choose M here. The module
  will be called ne2k-pci.

NEED_DMA_MAP_STATE
  No help

NEED_MULTIPLE_NODES
  No help

NEED_PER_CPU_EMBED_FIRST_CHUNK
  No help

NEED_PER_CPU_KM
  No help

NEED_PER_CPU_PAGE_FIRST_CHUNK
  No help

NEED_SG_DMA_LENGTH
  No help

NET
  Unless you really know what you are doing, you should say Y here.
  The reason is that some programs need kernel networking support even
  when running on a stand-alone machine that isn't connected to any
  other computer.
  
  If you are upgrading from an older kernel, you
  should consider updating your networking tools too because changes
  in the kernel and the tools often go hand in hand. The tools are
  contained in the package net-tools, the location and version number
  of which are given in <file:Documentation/Changes>.
  
  For a general introduction to Linux networking, it is highly
  recommended to read the NET-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>.

NET5501
  This option enables system support for the Soekris Engineering net5501.

NETCONSOLE
  If you want to log kernel messages over the network, enable this.
  See <file:Documentation/networking/netconsole.rst> for details.

NETCONSOLE_DYNAMIC
  This option enables the ability to dynamically reconfigure target
  parameters (interface, IP addresses, port numbers, MAC addresses)
  at runtime through a userspace interface exported using configfs.
  See <file:Documentation/networking/netconsole.rst> for details.

NETDEVICES
  You can say N here if you don't intend to connect your Linux box to
  any other computer at all.
  
  You'll have to say Y if your computer contains a network card that
  you want to use under Linux. If you are going to run SLIP or PPP over
  telephone line or null modem cable you need say Y here. Connecting
  two machines with parallel ports using PLIP needs this, as well as
  AX.25/KISS for sending Internet traffic over amateur radio links.
  
  See also "The Linux Network Administrator's Guide" by Olaf Kirch and
  Terry Dawson. Available at <http://www.tldp.org/guides.html>.
  
  If unsure, say Y.

NETDEVSIM
  This driver is a developer testing tool and software model that can
  be used to test various control path networking APIs, especially
  HW-offload related.
  
  To compile this driver as a module, choose M here: the module
  will be called netdevsim.

NETDEV_NOTIFIER_ERROR_INJECT
  This option provides the ability to inject artificial errors to
  netdevice notifier chain callbacks.  It is controlled through debugfs
  interface /sys/kernel/debug/notifier-error-inject/netdev
  
  If the notifier call chain should be failed with some events
  notified, write the error code to "actions/<notifier event>/error".
  
  Example: Inject netdevice mtu change error (-22 = -EINVAL)
  
  # cd /sys/kernel/debug/notifier-error-inject/netdev
  # echo -22 > actions/NETDEV_CHANGEMTU/error
  # ip link set eth0 mtu 1024
  RTNETLINK answers: Invalid argument
  
  To compile this code as a module, choose M here: the module will
  be called netdev-notifier-error-inject.
  
  If unsure, say N.

NETFILTER
  Netfilter is a framework for filtering and mangling network packets
  that pass through your Linux box.
  
  The most common use of packet filtering is to run your Linux box as
  a firewall protecting a local network from the Internet. The type of
  firewall provided by this kernel support is called a "packet
  filter", which means that it can reject individual network packets
  based on type, source, destination etc. The other kind of firewall,
  a "proxy-based" one, is more secure but more intrusive and more
  bothersome to set up; it inspects the network traffic much more
  closely, modifies it and has knowledge about the higher level
  protocols, which a packet filter lacks. Moreover, proxy-based
  firewalls often require changes to the programs running on the local
  clients. Proxy-based firewalls don't need support by the kernel, but
  they are often combined with a packet filter, which only works if
  you say Y here.
  
  You should also say Y here if you intend to use your Linux box as
  the gateway to the Internet for a local network of machines without
  globally valid IP addresses. This is called "masquerading": if one
  of the computers on your local network wants to send something to
  the outside, your box can "masquerade" as that computer, i.e. it
  forwards the traffic to the intended outside destination, but
  modifies the packets to make it look like they came from the
  firewall box itself. It works both ways: if the outside host
  replies, the Linux box will silently forward the traffic to the
  correct local computer. This way, the computers on your local net
  are completely invisible to the outside world, even though they can
  reach the outside and can receive replies. It is even possible to
  run globally visible servers from within a masqueraded local network
  using a mechanism called portforwarding. Masquerading is also often
  called NAT (Network Address Translation).
  
  Another use of Netfilter is in transparent proxying: if a machine on
  the local network tries to connect to an outside host, your Linux
  box can transparently forward the traffic to a local server,
  typically a caching proxy server.
  
  Yet another use of Netfilter is building a bridging firewall. Using
  a bridge with Network packet filtering enabled makes iptables "see"
  the bridged traffic. For filtering on the lower network and Ethernet
  protocols over the bridge, use ebtables (under bridge netfilter
  configuration).
  
  Various modules exist for netfilter which replace the previous
  masquerading (ipmasqadm), packet filtering (ipchains), transparent
  proxying, and portforwarding mechanisms. Please see
  <file:Documentation/Changes> under "iptables" for the location of
  these packages.

NETFILTER_ADVANCED
  If you say Y here you can select between all the netfilter modules.
  If you say N the more unusual ones will not be shown and the
  basic ones needed by most people will default to 'M'.
  
  If unsure, say Y.

NETFILTER_CONNCOUNT
  No help

NETFILTER_FAMILY_ARP
  No help

NETFILTER_FAMILY_BRIDGE
  No help

NETFILTER_INGRESS
  This allows you to classify packets from ingress using the Netfilter
  infrastructure.

NETFILTER_NETLINK
  No help

NETFILTER_NETLINK_ACCT
  If this option is enabled, the kernel will include support
  for extended accounting via NFNETLINK.

NETFILTER_NETLINK_GLUE_CT
  If this option is enabled, NFQUEUE and NFLOG can include
  Connection Tracking information together with the packet is
  the enqueued via NFNETLINK.

NETFILTER_NETLINK_LOG
  If this option is enabled, the kernel will include support
  for logging packets via NFNETLINK.
  
  This obsoletes the existing ipt_ULOG and ebg_ulog mechanisms,
  and is also scheduled to replace the old syslog-based ipt_LOG
  and ip6t_LOG modules.

NETFILTER_NETLINK_OSF
  If this option is enabled, the kernel will include support
  for passive OS fingerprint via NFNETLINK.

NETFILTER_NETLINK_QUEUE
  If this option is enabled, the kernel will include support
  for queueing packets via NFNETLINK.

NETFILTER_SYNPROXY
  No help

NETFILTER_XTABLES
  This is required if you intend to use any of ip_tables,
  ip6_tables or arp_tables.

NETFILTER_XT_CONNMARK
  This option adds the "CONNMARK" target and "connmark" match.
  
  Netfilter allows you to store a mark value per connection (a.k.a.
  ctmark), similarly to the packet mark (nfmark). Using this
  target and match, you can set and match on this mark.

NETFILTER_XT_MARK
  This option adds the "MARK" target and "mark" match.
  
  Netfilter mark matching allows you to match packets based on the
  "nfmark" value in the packet.
  The target allows you to create rules in the "mangle" table which alter
  the netfilter mark (nfmark) field associated with the packet.
  
  Prior to routing, the nfmark can influence the routing method and can
  also be used by other subsystems to change their behavior.

NETFILTER_XT_MATCH_ADDRTYPE
  This option allows you to match what routing thinks of an address,
  eg. UNICAST, LOCAL, BROADCAST, ...
  
  If you want to compile it as a module, say M here and read
  <file:Documentation/kbuild/modules.rst>.  If unsure, say `N'.

NETFILTER_XT_MATCH_BPF
  BPF matching applies a linux socket filter to each packet and
  accepts those for which the filter returns non-zero.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_CGROUP
  Socket/process control group matching allows you to match locally
  generated packets based on which net_cls control group processes
  belong to.

NETFILTER_XT_MATCH_CLUSTER
  This option allows you to build work-load-sharing clusters of
  network servers/stateful firewalls without having a dedicated
  load-balancing router/server/switch. Basically, this match returns
  true when the packet must be handled by this cluster node. Thus,
  all nodes see all packets and this match decides which node handles
  what packets. The work-load sharing algorithm is based on source
  address hashing.
  
  If you say Y or M here, try `iptables -m cluster --help` for
  more information.

NETFILTER_XT_MATCH_COMMENT
  This option adds a `comment' dummy-match, which allows you to put
  comments in your iptables ruleset.
  
  If you want to compile it as a module, say M here and read
  <file:Documentation/kbuild/modules.rst>.  If unsure, say `N'.

NETFILTER_XT_MATCH_CONNBYTES
  This option adds a `connbytes' match, which allows you to match the
  number of bytes and/or packets for each direction within a connection.
  
  If you want to compile it as a module, say M here and read
  <file:Documentation/kbuild/modules.rst>.  If unsure, say `N'.

NETFILTER_XT_MATCH_CONNLABEL
  This match allows you to test and assign userspace-defined labels names
  to a connection.  The kernel only stores bit values - mapping
  names to bits is done by userspace.
  
  Unlike connmark, more than 32 flag bits may be assigned to a
  connection simultaneously.

NETFILTER_XT_MATCH_CONNLIMIT
  This match allows you to match against the number of parallel
  connections to a server per client IP address (or address block).

NETFILTER_XT_MATCH_CONNMARK
  This is a backwards-compat option for the user's convenience
  (e.g. when running oldconfig). It selects
  CONFIG_NETFILTER_XT_CONNMARK (combined connmark/CONNMARK module).

NETFILTER_XT_MATCH_CONNTRACK
  This is a general conntrack match module, a superset of the state match.
  
  It allows matching on additional conntrack information, which is
  useful in complex configurations, such as NAT gateways with multiple
  internet links or tunnels.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_CPU
  CPU matching allows you to match packets based on the CPU
  currently handling the packet.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_DCCP
  With this option enabled, you will be able to use the iptables
  `dccp' match in order to match on DCCP source/destination ports
  and DCCP flags.
  
  If you want to compile it as a module, say M here and read
  <file:Documentation/kbuild/modules.rst>.  If unsure, say `N'.

NETFILTER_XT_MATCH_DEVGROUP
  This options adds a `devgroup' match, which allows to match on the
  device group a network device is assigned to.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_DSCP
  This option adds a `DSCP' match, which allows you to match against
  the IPv4/IPv6 header DSCP field (differentiated services codepoint).
  
  The DSCP field can have any value between 0x0 and 0x3f inclusive.
  
  It will also add a "tos" match, which allows you to match packets
  based on the Type Of Service fields of the IPv4 packet (which share
  the same bits as DSCP).
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_ECN
  This option adds an "ECN" match, which allows you to match against
  the IPv4 and TCP header ECN fields.
  
  To compile it as a module, choose M here. If unsure, say N.

NETFILTER_XT_MATCH_ESP
  This match extension allows you to match a range of SPIs
  inside ESP header of IPSec packets.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_HASHLIMIT
  This option adds a `hashlimit' match.
  
  As opposed to `limit', this match dynamically creates a hash table
  of limit buckets, based on your selection of source/destination
  addresses and/or ports.
  
  It enables you to express policies like `10kpps for any given
  destination address' or `500pps from any given source address'
  with a single rule.

NETFILTER_XT_MATCH_HELPER
  Helper matching allows you to match packets in dynamic connections
  tracked by a conntrack-helper, ie. nf_conntrack_ftp
  
  To compile it as a module, choose M here.  If unsure, say Y.

NETFILTER_XT_MATCH_HL
  HL matching allows you to match packets based on the hoplimit
  in the IPv6 header, or the time-to-live field in the IPv4
  header of the packet.

NETFILTER_XT_MATCH_IPCOMP
  This match extension allows you to match a range of CPIs(16 bits)
  inside IPComp header of IPSec packets.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_IPRANGE
  This option adds a "iprange" match, which allows you to match based on
  an IP address range. (Normal iptables only matches on single addresses
  with an optional mask.)
  
  If unsure, say M.

NETFILTER_XT_MATCH_IPVS
  This option allows you to match against IPVS properties of a packet.
  
  If unsure, say N.

NETFILTER_XT_MATCH_L2TP
  This option adds an "L2TP" match, which allows you to match against
  L2TP protocol header fields.
  
  To compile it as a module, choose M here. If unsure, say N.

NETFILTER_XT_MATCH_LENGTH
  This option allows you to match the length of a packet against a
  specific value or range of values.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_LIMIT
  limit matching allows you to control the rate at which a rule can be
  matched: mainly useful in combination with the LOG target ("LOG
  target support", below) and to avoid some Denial of Service attacks.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_MAC
  MAC matching allows you to match packets based on the source
  Ethernet address of the packet.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_MARK
  This is a backwards-compat option for the user's convenience
  (e.g. when running oldconfig). It selects
  CONFIG_NETFILTER_XT_MARK (combined mark/MARK module).

NETFILTER_XT_MATCH_MULTIPORT
  Multiport matching allows you to match TCP or UDP packets based on
  a series of source or destination ports: normally a rule can only
  match a single range of ports.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_NFACCT
  This option allows you to use the extended accounting through
  nfnetlink_acct.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_OSF
  This option selects the Passive OS Fingerprinting match module
  that allows to passively match the remote operating system by
  analyzing incoming TCP SYN packets.
  
  Rules and loading software can be downloaded from
  http://www.ioremap.net/projects/osf
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_OWNER
  Socket owner matching allows you to match locally-generated packets
  based on who created the socket: the user or group. It is also
  possible to check whether a socket actually exists.

NETFILTER_XT_MATCH_PHYSDEV
  Physdev packet matching matches against the physical bridge ports
  the IP packet arrived on or will leave by.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_PKTTYPE
  Packet type matching allows you to match a packet by
  its "class", eg. BROADCAST, MULTICAST, ...
  
  Typical usage:
  iptables -A INPUT -m pkttype --pkt-type broadcast -j LOG
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_POLICY
  Policy matching allows you to match packets based on the
  IPsec policy that was used during decapsulation/will
  be used during encapsulation.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_QUOTA
  This option adds a `quota' match, which allows to match on a
  byte counter.
  
  If you want to compile it as a module, say M here and read
  <file:Documentation/kbuild/modules.rst>.  If unsure, say `N'.

NETFILTER_XT_MATCH_RATEEST
  This option adds a `rateest' match, which allows to match on the
  rate estimated by the RATEEST target.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_REALM
  This option adds a `realm' match, which allows you to use the realm
  key from the routing subsystem inside iptables.
  
  This match pretty much resembles the CONFIG_NET_CLS_ROUTE4 option
  in tc world.
  
  If you want to compile it as a module, say M here and read
  <file:Documentation/kbuild/modules.rst>.  If unsure, say `N'.

NETFILTER_XT_MATCH_RECENT
  This match is used for creating one or many lists of recently
  used addresses and then matching against that/those list(s).
  
  Short options are available by using 'iptables -m recent -h'
  Official Website: <http://snowman.net/projects/ipt_recent/>

NETFILTER_XT_MATCH_SCTP
  With this option enabled, you will be able to use the
  `sctp' match in order to match on SCTP source/destination ports
  and SCTP chunk types.
  
  If you want to compile it as a module, say M here and read
  <file:Documentation/kbuild/modules.rst>.  If unsure, say `N'.

NETFILTER_XT_MATCH_SOCKET
  This option adds a `socket' match, which can be used to match
  packets for which a TCP or UDP socket lookup finds a valid socket.
  It can be used in combination with the MARK target and policy
  routing to implement full featured non-locally bound sockets.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_STATE
  Connection state matching allows you to match packets based on their
  relationship to a tracked connection (ie. previous packets).  This
  is a powerful tool for packet classification.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_STATISTIC
  This option adds a `statistic' match, which allows you to match
  on packets periodically or randomly with a given percentage.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_STRING
  This option adds a `string' match, which allows you to look for
  pattern matchings in packets.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_TCPMSS
  This option adds a `tcpmss' match, which allows you to examine the
  MSS value of TCP SYN packets, which control the maximum packet size
  for that connection.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_MATCH_TIME
  This option adds a "time" match, which allows you to match based on
  the packet arrival time (at the machine which netfilter is running)
  on) or departure time/date (for locally generated packets).
  
  If you say Y here, try `iptables -m time --help` for
  more information.
  
  If you want to compile it as a module, say M here.
  If unsure, say N.

NETFILTER_XT_MATCH_U32
  u32 allows you to extract quantities of up to 4 bytes from a packet,
  AND them with specified masks, shift them by specified amounts and
  test whether the results are in any of a set of specified ranges.
  The specification of what to extract is general enough to skip over
  headers with lengths stored in the packet, as in IP or TCP header
  lengths.
  
  Details and examples are in the kernel module source.

NETFILTER_XT_NAT
  This option enables the SNAT and DNAT targets.
  
  To compile it as a module, choose M here. If unsure, say N.

NETFILTER_XT_SET
  This option adds the "SET" target and "set" match.
  
  Using this target and match, you can add/delete and match
  elements in the sets created by ipset(8).
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_TARGET_AUDIT
  This option adds a 'AUDIT' target, which can be used to create
  audit records for packets dropped/accepted.
  
  To compileit as a module, choose M here. If unsure, say N.

NETFILTER_XT_TARGET_CHECKSUM
  This option adds a `CHECKSUM' target, which can be used in the iptables mangle
  table to work around buggy DHCP clients in virtualized environments.
  
  Some old DHCP clients drop packets because they are not aware
  that the checksum would normally be offloaded to hardware and
  thus should be considered valid.
  This target can be used to fill in the checksum using iptables
  when such packets are sent via a virtual network device.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_TARGET_CLASSIFY
  This option adds a `CLASSIFY' target, which enables the user to set
  the priority of a packet. Some qdiscs can use this value for
  classification, among these are:
  
    atm, cbq, dsmark, pfifo_fast, htb, prio
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_TARGET_CONNMARK
  This is a backwards-compat option for the user's convenience
  (e.g. when running oldconfig). It selects
  CONFIG_NETFILTER_XT_CONNMARK (combined connmark/CONNMARK module).

NETFILTER_XT_TARGET_CONNSECMARK
  The CONNSECMARK target copies security markings from packets
  to connections, and restores security markings from connections
  to packets (if the packets are not already marked).  This would
  normally be used in conjunction with the SECMARK target.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_TARGET_CT
  This options adds a `CT' target, which allows to specify initial
  connection tracking parameters like events to be delivered and
  the helper to be used.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_TARGET_DSCP
  This option adds a `DSCP' target, which allows you to manipulate
  the IPv4/IPv6 header DSCP field (differentiated services codepoint).
  
  The DSCP field can have any value between 0x0 and 0x3f inclusive.
  
  It also adds the "TOS" target, which allows you to create rules in
  the "mangle" table which alter the Type Of Service field of an IPv4
  or the Priority field of an IPv6 packet, prior to routing.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_TARGET_HL
  This option adds the "HL" (for IPv6) and "TTL" (for IPv4)
  targets, which enable the user to change the
  hoplimit/time-to-live value of the IP header.
  
  While it is safe to decrement the hoplimit/TTL value, the
  modules also allow to increment and set the hoplimit value of
  the header to arbitrary values. This is EXTREMELY DANGEROUS
  since you can easily create immortal packets that loop
  forever on the network.

NETFILTER_XT_TARGET_HMARK
  This option adds the "HMARK" target.
  
  The target allows you to create rules in the "raw" and "mangle" tables
  which set the skbuff mark by means of hash calculation within a given
  range. The nfmark can influence the routing method and can also be used
  by other subsystems to change their behaviour.
  
  To compile it as a module, choose M here. If unsure, say N.

NETFILTER_XT_TARGET_IDLETIMER
  This option adds the `IDLETIMER' target.  Each matching packet
  resets the timer associated with label specified when the rule is
  added.  When the timer expires, it triggers a sysfs notification.
  The remaining time for expiration can be read via sysfs.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_TARGET_LED
  This option adds a `LED' target, which allows you to blink LEDs in
  response to particular packets passing through your machine.
  
  This can be used to turn a spare LED into a network activity LED,
  which only flashes in response to FTP transfers, for example.  Or
  you could have an LED which lights up for a minute or two every time
  somebody connects to your machine via SSH.
  
  You will need support for the "led" class to make this work.
  
  To create an LED trigger for incoming SSH traffic:
    iptables -A INPUT -p tcp --dport 22 -j LED --led-trigger-id ssh --led-delay 1000
  
  Then attach the new trigger to an LED on your system:
    echo netfilter-ssh > /sys/class/leds/<ledname>/trigger
  
  For more information on the LEDs available on your system, see
  Documentation/leds/leds-class.rst

NETFILTER_XT_TARGET_LOG
  This option adds a `LOG' target, which allows you to create rules in
  any iptables table which records the packet header to the syslog.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_TARGET_MARK
  This is a backwards-compat option for the user's convenience
  (e.g. when running oldconfig). It selects
  CONFIG_NETFILTER_XT_MARK (combined mark/MARK module).

NETFILTER_XT_TARGET_MASQUERADE
  Masquerading is a special case of NAT: all outgoing connections are
  changed to seem to come from a particular interface's address, and
  if the interface goes down, those connections are lost.  This is
  only useful for dialup accounts with dynamic IP address (ie. your IP
  address will be different on next dialup).
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_TARGET_NETMAP
  NETMAP is an implementation of static 1:1 NAT mapping of network
  addresses. It maps the network address part, while keeping the host
  address part intact.
  
  To compile it as a module, choose M here. If unsure, say N.

NETFILTER_XT_TARGET_NFLOG
  This option enables the NFLOG target, which allows to LOG
  messages through nfnetlink_log.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_TARGET_NFQUEUE
  This target replaced the old obsolete QUEUE target.
  
  As opposed to QUEUE, it supports 65535 different queues,
  not just one.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_TARGET_NOTRACK
  No help

NETFILTER_XT_TARGET_RATEEST
  This option adds a `RATEEST' target, which allows to measure
  rates similar to TC estimators. The `rateest' match can be
  used to match on the measured rates.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_TARGET_REDIRECT
  REDIRECT is a special case of NAT: all incoming connections are
  mapped onto the incoming interface's address, causing the packets to
  come to the local machine instead of passing through. This is
  useful for transparent proxies.
  
  To compile it as a module, choose M here. If unsure, say N.

NETFILTER_XT_TARGET_SECMARK
  The SECMARK target allows security marking of network
  packets, for use with security subsystems.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_TARGET_TCPMSS
  This option adds a `TCPMSS' target, which allows you to alter the
  MSS value of TCP SYN packets, to control the maximum size for that
  connection (usually limiting it to your outgoing interface's MTU
  minus 40).
  
  This is used to overcome criminally braindead ISPs or servers which
  block ICMP Fragmentation Needed packets.  The symptoms of this
  problem are that everything works fine from your Linux
  firewall/router, but machines behind it can never exchange large
  packets:
        1) Web browsers connect, then hang with no data received.
        2) Small mail works fine, but large emails hang.
        3) ssh works fine, but scp hangs after initial handshaking.
  
  Workaround: activate this option and add a rule to your firewall
  configuration like:
  
  iptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_TARGET_TCPOPTSTRIP
  This option adds a "TCPOPTSTRIP" target, which allows you to strip
  TCP options from TCP packets.

NETFILTER_XT_TARGET_TEE
  This option adds a "TEE" target with which a packet can be cloned and
  this clone be rerouted to another nexthop.

NETFILTER_XT_TARGET_TPROXY
  This option adds a `TPROXY' target, which is somewhat similar to
  REDIRECT.  It can only be used in the mangle table and is useful
  to redirect traffic to a transparent proxy.  It does _not_ depend
  on Netfilter connection tracking and NAT, unlike REDIRECT.
  For it to work you will have to configure certain iptables rules
  and use policy routing. For more information on how to set it up
  see Documentation/networking/tproxy.rst.
  
  To compile it as a module, choose M here.  If unsure, say N.

NETFILTER_XT_TARGET_TRACE
  The TRACE target allows you to mark packets so that the kernel
  will log every rule which match the packets as those traverse
  the tables, chains, rules.
  
  If you want to compile it as a module, say M here and read
  <file:Documentation/kbuild/modules.rst>.  If unsure, say `N'.

NETIUCV
  Select this option if you want to use inter-user communication
  vehicle networking under VM or VIF. It enables a fast communication
  link between VM guests. Using ifconfig a point-to-point connection
  can be established to the Linux on IBM System z
  running on the other VM guest. To compile as a module, choose M.
  The module name is netiucv. If unsure, choose Y.

NETLABEL
  NetLabel provides support for explicit network packet labeling
  protocols such as CIPSO and RIPSO.  For more information see
  Documentation/netlabel as well as the NetLabel SourceForge project
  for configuration tools and additional documentation.
  
   * https://github.com/netlabel/netlabel_tools
  
  If you are unsure, say N.

NETLINK_DIAG
  Support for NETLINK socket monitoring interface used by the ss tool.
  If unsure, say Y.

NETLOGIC_XLR_NET
  This driver support Netlogic XLR/XLS on chip gigabit
  Ethernet.

NETPOLL
  No help

NETROM
  NET/ROM is a network layer protocol on top of AX.25 useful for
  routing.
  
  A comprehensive listing of all the software for Linux amateur radio
  users as well as information about how to configure an AX.25 port is
  contained in the Linux Ham Wiki, available from
  <http://www.linux-ax25.org>. You also might want to check out the
  file <file:Documentation/networking/ax25.rst>. More information about
  digital amateur radio in general is on the WWW at
  <https://www.tapr.org/>.
  
  To compile this driver as a module, choose M here: the
  module will be called netrom.

NETWORK_FILESYSTEMS
  Say Y here to get to see options for network filesystems and
  filesystem-related networking code, such as NFS daemon and
  RPCSEC security modules.
  
  This option alone does not add any kernel code.
  
  If you say N, all options in this submenu will be skipped and
  disabled; if unsure, say Y here.

NETWORK_PHY_TIMESTAMPING
  This allows timestamping of network packets by PHYs (or
  other MII bus snooping devices) with hardware timestamping
  capabilities. This option adds some overhead in the transmit
  and receive paths.
  
  If you are unsure how to answer this question, answer N.

NETWORK_SECMARK
  This enables security marking of network packets, similar
  to nfmark, but designated for security purposes.
  If you are unsure how to answer this question, answer N.

NETXEN_NIC
  This enables the support for NetXen's Gigabit Ethernet card.

NET_9P
  If you say Y here, you will get experimental support for
  Plan 9 resource sharing via the 9P2000 protocol.
  
  See <http://v9fs.sf.net> for more information.
  
  If unsure, say N.

NET_9P_DEBUG
  Say Y if you want the 9P subsystem to log debug information.

NET_9P_RDMA
  This builds support for an RDMA transport.

NET_9P_VIRTIO
  This builds support for a transports between
  guest partitions and a host partition.

NET_9P_XEN
  This builds support for a transport for 9pfs between
  two Xen domains.

NET_ACT_BPF
  Say Y here to execute BPF code on packets. The BPF code will decide
  if the packet should be dropped or not.
  
  If unsure, say N.
  
  To compile this code as a module, choose M here: the
  module will be called act_bpf.

NET_ACT_CONNMARK
  Say Y here to allow retrieving of conn mark
  
  If unsure, say N.
  
  To compile this code as a module, choose M here: the
  module will be called act_connmark.

NET_ACT_CSUM
  Say Y here to update some common checksum after some direct
  packet alterations.
  
  To compile this code as a module, choose M here: the
  module will be called act_csum.

NET_ACT_CT
  Say Y here to allow sending the packets to conntrack module.
  
  If unsure, say N.
  
  To compile this code as a module, choose M here: the
  module will be called act_ct.

NET_ACT_CTINFO
  Say Y here to allow transfer of a connmark stored information.
  Current actions transfer connmark stored DSCP into
  ipv4/v6 diffserv and/or to transfer connmark to packet
  mark.  Both are useful for restoring egress based marks
  back onto ingress connections for qdisc priority mapping
  purposes.
  
  If unsure, say N.
  
  To compile this code as a module, choose M here: the
  module will be called act_ctinfo.

NET_ACT_GACT
  Say Y here to take generic actions such as dropping and
  accepting packets.
  
  To compile this code as a module, choose M here: the
  module will be called act_gact.

NET_ACT_GATE
  Say Y here to allow to control the ingress flow to be passed at
  specific time slot and be dropped at other specific time slot by
  the gate entry list.
  
  If unsure, say N.
  To compile this code as a module, choose M here: the
  module will be called act_gate.

NET_ACT_IFE
  Say Y here to allow for sourcing and terminating metadata
  For details refer to netdev01 paper:
  "Distributing Linux Traffic Control Classifier-Action Subsystem"
   Authors: Jamal Hadi Salim and Damascene M. Joachimpillai
  
  To compile this code as a module, choose M here: the
  module will be called act_ife.

NET_ACT_IPT
  Say Y here to be able to invoke iptables targets after successful
  classification.
  
  To compile this code as a module, choose M here: the
  module will be called act_ipt.

NET_ACT_MIRRED
  Say Y here to allow packets to be mirrored or redirected to
  other devices.
  
  To compile this code as a module, choose M here: the
  module will be called act_mirred.

NET_ACT_MPLS
  Say Y here to push or pop MPLS headers.
  
  If unsure, say N.
  
  To compile this code as a module, choose M here: the
  module will be called act_mpls.

NET_ACT_NAT
  Say Y here to do stateless NAT on IPv4 packets.  You should use
  netfilter for NAT unless you know what you are doing.
  
  To compile this code as a module, choose M here: the
  module will be called act_nat.

NET_ACT_PEDIT
  Say Y here if you want to mangle the content of packets.
  
  To compile this code as a module, choose M here: the
  module will be called act_pedit.

NET_ACT_POLICE
  Say Y here if you want to do traffic policing, i.e. strict
  bandwidth limiting. This action replaces the existing policing
  module.
  
  To compile this code as a module, choose M here: the
  module will be called act_police.

NET_ACT_SAMPLE
  Say Y here to allow packet sampling tc action. The packet sample
  action consists of statistically choosing packets and sampling
  them using the psample module.
  
  To compile this code as a module, choose M here: the
  module will be called act_sample.

NET_ACT_SIMP
  Say Y here to add a simple action for demonstration purposes.
  It is meant as an example and for debugging purposes. It will
  print a configured policy string followed by the packet count
  to the console for every packet that passes by.
  
  If unsure, say N.
  
  To compile this code as a module, choose M here: the
  module will be called act_simple.

NET_ACT_SKBEDIT
  Say Y here to change skb priority or queue_mapping settings.
  
  If unsure, say N.
  
  To compile this code as a module, choose M here: the
  module will be called act_skbedit.

NET_ACT_SKBMOD
  Say Y here to allow modification of skb data
  
  If unsure, say N.
  
  To compile this code as a module, choose M here: the
  module will be called act_skbmod.

NET_ACT_TUNNEL_KEY
  Say Y here to set/release ip tunnel metadata.
  
  If unsure, say N.
  
  To compile this code as a module, choose M here: the
  module will be called act_tunnel_key.

NET_ACT_VLAN
  Say Y here to push or pop vlan headers.
  
  If unsure, say N.
  
  To compile this code as a module, choose M here: the
  module will be called act_vlan.

NET_CALXEDA_XGMAC
  This is the driver for the XGMAC Ethernet IP block found on Calxeda
  Highbank platforms.

NET_CLS
  No help

NET_CLS_ACT
  Say Y here if you want to use traffic control actions. Actions
  get attached to classifiers and are invoked after a successful
  classification. They are used to overwrite the classification
  result, instantly drop or redirect packets, etc.
  
  A recent version of the iproute2 package is required to use
  extended matches.

NET_CLS_BASIC
  Say Y here if you want to be able to classify packets using
  only extended matches and actions.
  
  To compile this code as a module, choose M here: the
  module will be called cls_basic.

NET_CLS_BPF
  If you say Y here, you will be able to classify packets based on
  programmable BPF (JIT'ed) filters as an alternative to ematches.
  
  To compile this code as a module, choose M here: the module will
  be called cls_bpf.

NET_CLS_CGROUP
  Say Y here if you want to classify packets based on the control
  cgroup of their process.
  
  To compile this code as a module, choose M here: the
  module will be called cls_cgroup.

NET_CLS_FLOW
  If you say Y here, you will be able to classify packets based on
  a configurable combination of packet keys. This is mostly useful
  in combination with SFQ.
  
  To compile this code as a module, choose M here: the
  module will be called cls_flow.

NET_CLS_FLOWER
  If you say Y here, you will be able to classify packets based on
  a configurable combination of packet keys and masks.
  
  To compile this code as a module, choose M here: the module will
  be called cls_flower.

NET_CLS_FW
  If you say Y here, you will be able to classify packets
  according to netfilter/firewall marks.
  
  To compile this code as a module, choose M here: the
  module will be called cls_fw.

NET_CLS_MATCHALL
  If you say Y here, you will be able to classify packets based on
  nothing. Every packet will match.
  
  To compile this code as a module, choose M here: the module will
  be called cls_matchall.

NET_CLS_ROUTE4
  If you say Y here, you will be able to classify packets
  according to the route table entry they matched.
  
  To compile this code as a module, choose M here: the
  module will be called cls_route.

NET_CLS_RSVP
  The Resource Reservation Protocol (RSVP) permits end systems to
  request a minimum and maximum data flow rate for a connection; this
  is important for real time data such as streaming sound or video.
  
  Say Y here if you want to be able to classify outgoing packets based
  on their RSVP requests.
  
  To compile this code as a module, choose M here: the
  module will be called cls_rsvp.

NET_CLS_RSVP6
  The Resource Reservation Protocol (RSVP) permits end systems to
  request a minimum and maximum data flow rate for a connection; this
  is important for real time data such as streaming sound or video.
  
  Say Y here if you want to be able to classify outgoing packets based
  on their RSVP requests and you are using the IPv6 protocol.
  
  To compile this code as a module, choose M here: the
  module will be called cls_rsvp6.

NET_CLS_TCINDEX
  Say Y here if you want to be able to classify packets based on
  traffic control indices. You will want this feature if you want
  to implement Differentiated Services together with DSMARK.
  
  To compile this code as a module, choose M here: the
  module will be called cls_tcindex.

NET_CLS_U32
  Say Y here to be able to classify packets using a universal
  32bit pieces based comparison scheme.
  
  To compile this code as a module, choose M here: the
  module will be called cls_u32.

NET_CORE
  You can say N here if you do not intend to use any of the
  networking core drivers (i.e. VLAN, bridging, bonding, etc.)

NET_DEVLINK
  No help

NET_DROP_MONITOR
  This feature provides an alerting service to userspace in the
  event that packets are discarded in the network stack.  Alerts
  are broadcast via netlink socket to any listening user space
  process.  If you don't need network drop alerts, or if you are ok
  just checking the various proc files and other utilities for
  drop statistics, say N here.

NET_DSA
  Say Y if you want to enable support for the hardware switches supported
  by the Distributed Switch Architecture.

NET_DSA_AR9331
  This enables support for the Qualcomm Atheros AR9331 built-in Ethernet
  switch.

NET_DSA_BCM_SF2
  This enables support for the Broadcom Starfighter 2 Ethernet
  switch chips.

NET_DSA_HIRSCHMANN_HELLCREEK
  This driver adds support for Hirschmann Hellcreek TSN switches.

NET_DSA_LANTIQ_GSWIP
  This enables support for the Lantiq / Intel GSWIP 2.1 found in
  the xrx200 / VR9 SoC.

NET_DSA_LOOP
  This enables support for a fake mock-up switch chip which
  exercises the DSA APIs.

NET_DSA_MICROCHIP_KSZ8795
  This driver adds support for Microchip KSZ8795 switch chips.

NET_DSA_MICROCHIP_KSZ8795_SPI
  This driver accesses KSZ8795 chip through SPI.
  
  It is required to use the KSZ8795 switch driver as the only access
  is through SPI.

NET_DSA_MICROCHIP_KSZ9477
  This driver adds support for Microchip KSZ9477 switch chips.

NET_DSA_MICROCHIP_KSZ9477_I2C
  Select to enable support for registering switches configured through I2C.

NET_DSA_MICROCHIP_KSZ9477_SPI
  Select to enable support for registering switches configured through SPI.

NET_DSA_MICROCHIP_KSZ_COMMON
  No help

NET_DSA_MSCC_FELIX
  This driver supports the VSC9959 (Felix) switch, which is embedded as
  a PCIe function of the NXP LS1028A ENETC RCiEP.

NET_DSA_MSCC_SEVILLE
  This driver supports the VSC9953 (Seville) switch, which is embedded
  as a platform device on the NXP T1040 SoC.

NET_DSA_MT7530
  This enables support for the MediaTek MT7530, MT7531, and MT7621
  Ethernet switch chips.

NET_DSA_MV88E6060
  This enables support for the Marvell 88E6060 ethernet switch
  chip.

NET_DSA_MV88E6XXX
  This driver adds support for most of the Marvell 88E6xxx models of
  Ethernet switch chips, except 88E6060.

NET_DSA_MV88E6XXX_GLOBAL2
  This registers set at internal SMI address 0x1C provides extended
  features like EEPROM interface, trunking, cross-chip setup, etc.
  
  It is required on most chips. If the chip you compile the support for
  doesn't have such registers set, say N here. In doubt, say Y.

NET_DSA_MV88E6XXX_PTP
  Say Y to enable PTP hardware timestamping on Marvell 88E6xxx switch
  chips that support it.

NET_DSA_QCA8K
  This enables support for the Qualcomm Atheros QCA8K Ethernet
  switch chips.

NET_DSA_REALTEK_SMI
  This enables support for the Realtek SMI-based switch
  chips, currently only RTL8366RB.

NET_DSA_SJA1105
  This is the driver for the NXP SJA1105 automotive Ethernet switch
  family. These are 5-port devices and are managed over an SPI
  interface. Probing is handled based on OF bindings and so is the
  linkage to PHYLINK. The driver supports the following revisions:
    - SJA1105E (Gen. 1, No TT-Ethernet)
    - SJA1105T (Gen. 1, TT-Ethernet)
    - SJA1105P (Gen. 2, No SGMII, No TT-Ethernet)
    - SJA1105Q (Gen. 2, No SGMII, TT-Ethernet)
    - SJA1105R (Gen. 2, SGMII, No TT-Ethernet)
    - SJA1105S (Gen. 2, SGMII, TT-Ethernet)

NET_DSA_SJA1105_PTP
  This enables support for timestamping and PTP clock manipulations in
  the SJA1105 DSA driver.

NET_DSA_SJA1105_TAS
  This enables support for the TTEthernet-based egress scheduling
  engine in the SJA1105 DSA driver, which is controlled using a
  hardware offload of the tc-tqprio qdisc.

NET_DSA_SJA1105_VL
  This enables support for flow classification using capable devices
  (SJA1105T, SJA1105Q, SJA1105S). The following actions are supported:
  - redirect, trap, drop
  - time-based ingress policing, via the tc-gate action

NET_DSA_SMSC_LAN9303
  This enables support for the SMSC/Microchip LAN9303 3 port ethernet
  switch chips.

NET_DSA_SMSC_LAN9303_I2C
  Enable access functions if the SMSC/Microchip LAN9303 is configured
  for I2C managed mode.

NET_DSA_SMSC_LAN9303_MDIO
  Enable access functions if the SMSC/Microchip LAN9303 is configured
  for MDIO managed mode.

NET_DSA_TAG_8021Q
  Unlike the other tagging protocols, the 802.1Q config option simply
  provides helpers for other tagging implementations that might rely on
  VLAN in one way or another. It is not a complete solution.
  
  Drivers which use these helpers should select this as dependency.

NET_DSA_TAG_AR9331
  Say Y or M if you want to enable support for tagging frames for
  the Atheros AR9331 SoC with built-in switch.

NET_DSA_TAG_BRCM
  Say Y if you want to enable support for tagging frames for the
  Broadcom switches which place the tag after the MAC source address.

NET_DSA_TAG_BRCM_COMMON
  No help

NET_DSA_TAG_BRCM_PREPEND
  Say Y if you want to enable support for tagging frames for the
  Broadcom switches which places the tag before the Ethernet header
  (prepended).

NET_DSA_TAG_DSA
  Say Y or M if you want to enable support for tagging frames for the
  Marvell switches which use DSA headers.

NET_DSA_TAG_DSA_COMMON
  No help

NET_DSA_TAG_EDSA
  Say Y or M if you want to enable support for tagging frames for the
  Marvell switches which use EtherType DSA headers.

NET_DSA_TAG_GSWIP
  Say Y or M if you want to enable support for tagging frames for the
  Lantiq / Intel GSWIP switches.

NET_DSA_TAG_HELLCREEK
  Say Y or M if you want to enable support for tagging frames
  for the Hirschmann Hellcreek TSN switches.

NET_DSA_TAG_KSZ
  Say Y if you want to enable support for tagging frames for the
  Microchip 8795/9477/9893 families of switches.

NET_DSA_TAG_LAN9303
  Say Y or M if you want to enable support for tagging frames for the
  SMSC/Microchip LAN9303 family of switches.

NET_DSA_TAG_MTK
  Say Y or M if you want to enable support for tagging frames for
  Mediatek switches.

NET_DSA_TAG_OCELOT
  Say Y or M if you want to enable support for tagging frames for the
  Ocelot switches (VSC7511, VSC7512, VSC7513, VSC7514, VSC9959).

NET_DSA_TAG_QCA
  Say Y or M if you want to enable support for tagging frames for
  the Qualcomm Atheros QCA8K switches.

NET_DSA_TAG_RTL4_A
  Say Y or M if you want to enable support for tagging frames for the
  Realtek switches with 4 byte protocol A tags, sich as found in
  the Realtek RTL8366RB.

NET_DSA_TAG_SJA1105
  Say Y or M if you want to enable support for tagging frames with the
  NXP SJA1105 switch family. Both the native tagging protocol (which
  is only for link-local traffic) as well as non-native tagging (based
  on a custom 802.1Q VLAN header) are available.

NET_DSA_TAG_TRAILER
  Say Y or M if you want to enable support for tagging frames at
  with a trailed. e.g. Marvell 88E6060.

NET_DSA_VITESSE_VSC73XX
  This enables support for the Vitesse VSC7385, VSC7388,
  VSC7395 and VSC7398 SparX integrated ethernet switches.

NET_DSA_VITESSE_VSC73XX_PLATFORM
  This enables support for the Vitesse VSC7385, VSC7388, VSC7395
  and VSC7398 SparX integrated ethernet switches, connected over
  a CPU-attached address bus and work in memory-mapped I/O mode.

NET_DSA_VITESSE_VSC73XX_SPI
  This enables support for the Vitesse VSC7385, VSC7388, VSC7395
  and VSC7398 SparX integrated ethernet switches in SPI managed mode.

NET_EGRESS
  No help

NET_EMATCH
  Say Y here if you want to use extended matches on top of classifiers
  and select the extended matches below.
  
  Extended matches are small classification helpers not worth writing
  a separate classifier for.
  
  A recent version of the iproute2 package is required to use
  extended matches.

NET_EMATCH_CANID
  Say Y here if you want to be able to classify CAN frames based
  on CAN Identifier.
  
  To compile this code as a module, choose M here: the
  module will be called em_canid.

NET_EMATCH_CMP
  Say Y here if you want to be able to classify packets based on
  simple packet data comparisons for 8, 16, and 32bit values.
  
  To compile this code as a module, choose M here: the
  module will be called em_cmp.

NET_EMATCH_IPSET
  Say Y here if you want to be able to classify packets based on
  ipset membership.
  
  To compile this code as a module, choose M here: the
  module will be called em_ipset.

NET_EMATCH_IPT
  Say Y here to be able to classify packets based on iptables
  matches.
  Current supported match is "policy" which allows packet classification
  based on IPsec policy that was used during decapsulation
  
  To compile this code as a module, choose M here: the
  module will be called em_ipt.

NET_EMATCH_META
  Say Y here if you want to be able to classify packets based on
  metadata such as load average, netfilter attributes, socket
  attributes and routing decisions.
  
  To compile this code as a module, choose M here: the
  module will be called em_meta.

NET_EMATCH_NBYTE
  Say Y here if you want to be able to classify packets based on
  multiple byte comparisons mainly useful for IPv6 address comparisons.
  
  To compile this code as a module, choose M here: the
  module will be called em_nbyte.

NET_EMATCH_STACK
  Size of the local stack variable used while evaluating the tree of
  ematches. Limits the depth of the tree, i.e. the number of
  encapsulated precedences. Every level requires 4 bytes of additional
  stack space.

NET_EMATCH_TEXT
  Say Y here if you want to be able to classify packets based on
  textsearch comparisons.
  
  To compile this code as a module, choose M here: the
  module will be called em_text.

NET_EMATCH_U32
  Say Y here if you want to be able to classify packets using
  the famous u32 key in combination with logic relations.
  
  To compile this code as a module, choose M here: the
  module will be called em_u32.

NET_FAILOVER
  This provides an automated failover mechanism via APIs to create
  and destroy a failover master netdev and manages a primary and
  standby slave netdevs that get registered via the generic failover
  infrastructure. This can be used by paravirtual drivers to enable
  an alternate low latency datapath. It also enables live migration of
  a VM with direct attached VF by failing over to the paravirtual
  datapath when the VF is unplugged.

NET_FC
  Fibre Channel is a high speed serial protocol mainly used to connect
  large storage devices to the computer; it is compatible with and
  intended to replace SCSI.
  
  If you intend to use Fibre Channel, you need to have a Fibre channel
  adaptor card in your computer; say Y here and to the driver for your
  adaptor below. You also should have said Y to "SCSI support" and
  "SCSI generic support".

NET_FLOW_LIMIT
  The network stack has to drop packets when a receive processing CPU's
  backlog reaches netdev_max_backlog. If a few out of many active flows
  generate the vast majority of load, drop their traffic earlier to
  maintain capacity for the other flows. This feature provides servers
  with many clients some protection against DoS by a single (spoofed)
  flow that greatly exceeds average workload.

NET_FOU
  Foo over UDP allows any IP protocol to be directly encapsulated
  over UDP include tunnels (IPIP, GRE, SIT). By encapsulating in UDP
  network mechanisms and optimizations for UDP (such as ECMP
  and RSS) can be leveraged to provide better service.

NET_FOU_IP_TUNNELS
  Allow configuration of FOU or GUE encapsulation for IP tunnels.
  When this option is enabled IP tunnels can be configured to use
  FOU or GUE encapsulation.

NET_IFE
  Say Y here to add support of IFE encapsulation protocol
  For details refer to netdev01 paper:
  "Distributing Linux Traffic Control Classifier-Action Subsystem"
   Authors: Jamal Hadi Salim and Damascene M. Joachimpillai
  
  To compile this support as a module, choose M here: the module will
  be called ife.

NET_IFE_SKBMARK
  No help

NET_IFE_SKBPRIO
  No help

NET_IFE_SKBTCINDEX
  No help

NET_INGRESS
  No help

NET_IPGRE
  Tunneling means encapsulating data of one protocol type within
  another protocol and sending it over a channel that understands the
  encapsulating protocol. This particular tunneling driver implements
  GRE (Generic Routing Encapsulation) and at this time allows
  encapsulating of IPv4 or IPv6 over existing IPv4 infrastructure.
  This driver is useful if the other endpoint is a Cisco router: Cisco
  likes GRE much better than the other Linux tunneling driver ("IP
  tunneling" above). In addition, GRE allows multicast redistribution
  through the tunnel.

NET_IPGRE_BROADCAST
  One application of GRE/IP is to construct a broadcast WAN (Wide Area
  Network), which looks like a normal Ethernet LAN (Local Area
  Network), but can be distributed all over the Internet. If you want
  to do that, say Y here and to "IP multicast routing" below.

NET_IPGRE_DEMUX
  This is helper module to demultiplex GRE packets on GRE version field criteria.
  Required by ip_gre and pptp modules.

NET_IPIP
  Tunneling means encapsulating data of one protocol type within
  another protocol and sending it over a channel that understands the
  encapsulating protocol. This particular tunneling driver implements
  encapsulation of IP within IP, which sounds kind of pointless, but
  can be useful if you want to make your (or some other) machine
  appear on a different network than it physically is, or to use
  mobile-IP facilities (allowing laptops to seamlessly move between
  networks without changing their IP addresses).
  
  Saying Y to this option will produce two modules ( = code which can
  be inserted in and removed from the running kernel whenever you
  want). Most people won't need this and can say N.

NET_IPVTI
  Tunneling means encapsulating data of one protocol type within
  another protocol and sending it over a channel that understands the
  encapsulating protocol. This can be used with xfrm mode tunnel to give
  the notion of a secure tunnel for IPSEC and then use routing protocol
  on top.

NET_IP_TUNNEL
  No help

NET_KEY
  PF_KEYv2 socket family, compatible to KAME ones.
  They are required if you are going to use IPsec tools ported
  from KAME.
  
  Say Y unless you know what you are doing.

NET_KEY_MIGRATE
  Add a PF_KEY MIGRATE message to PF_KEYv2 socket family.
  The PF_KEY MIGRATE message is used to dynamically update
  locator(s) of a given IPsec security association.
  This feature is required, for instance, in a Mobile IPv6
  environment with IPsec configuration where mobile nodes
  change their attachment point to the Internet.  Detail
  information can be found in the internet-draft
  <draft-sugimoto-mip6-pfkey-migrate>.
  
  If unsure, say N.

NET_L3_MASTER_DEV
  This module provides glue between core networking code and device
  drivers to support L3 master devices like VRF.

NET_MEDIATEK_SOC
  This driver supports the gigabit ethernet MACs in the
  MediaTek SoC family.

NET_MEDIATEK_STAR_EMAC
  This driver supports the ethernet MAC IP first used on
  MediaTek MT85** SoCs.

NET_MPLS_GSO
  This is helper module to allow segmentation of non-MPLS GSO packets
  that have had MPLS stack entries pushed onto them and thus
  become MPLS GSO packets.

NET_NCSI
  This module provides NCSI (Network Controller Sideband Interface)
  support. Enable this only if your system connects to a network
  device via NCSI and the ethernet driver you're using supports
  the protocol explicitly.

NET_NS
  Allow user space to create what appear to be multiple instances
  of the network stack.

NET_NSH
  Network Service Header is an implementation of Service Function
  Chaining (RFC 7665). The current implementation in Linux supports
  only MD type 1 and only with the openvswitch module.
  
  If unsure, say N.

NET_PKTGEN
  This module will inject preconfigured packets, at a configurable
  rate, out of a given interface.  It is used for network interface
  stress testing and performance analysis.  If you don't understand
  what was just said, you don't need it: say N.
  
  Documentation on how to use the packet generator can be found
  at <file:Documentation/networking/pktgen.rst>.
  
  To compile this code as a module, choose M here: the
  module will be called pktgen.

NET_POLL_CONTROLLER
  No help

NET_PTP_CLASSIFY
  No help

NET_REDIRECT
  No help

NET_RX_BUSY_POLL
  No help

NET_SB1000
  This is a driver for the General Instrument (also known as
  NextLevel) SURFboard 1000 internal
  cable modem. This is an ISA card which is used by a number of cable
  TV companies to provide cable modem access. It's a one-way
  downstream-only cable modem, meaning that your upstream net link is
  provided by your regular phone modem.
  
  At present this driver only compiles as a module, so say M here if
  you have this card. The module will be called sb1000. Then read
  <file:Documentation/networking/device_drivers/cable/sb1000.rst> for
  information on how to use this module, as it needs special ppp
  scripts for establishing a connection. Further documentation
  and the necessary scripts can be found at:
  
  <http://www.jacksonville.net/~fventuri/>
  <http://home.adelphia.net/~siglercm/sb1000.html>
  <http://linuxpower.cx/~cable/>
  
  If you don't have this card, of course say N.

NET_SCHED
  When the kernel has several packets to send out over a network
  device, it has to decide which ones to send first, which ones to
  delay, and which ones to drop. This is the job of the queueing
  disciplines, several different algorithms for how to do this
  "fairly" have been proposed.
  
  If you say N here, you will get the standard packet scheduler, which
  is a FIFO (first come, first served). If you say Y here, you will be
  able to choose from among several alternative algorithms which can
  then be attached to different network devices. This is useful for
  example if some of your network devices are real time devices that
  need a certain minimum data flow rate, or if you need to limit the
  maximum data flow rate for traffic which matches specified criteria.
  This code is considered to be experimental.
  
  To administer these schedulers, you'll need the user-level utilities
  from the package iproute2+tc at
  <https://www.kernel.org/pub/linux/utils/net/iproute2/>.  That package
  also contains some documentation; for more, check out
  <http://www.linuxfoundation.org/collaborate/workgroups/networking/iproute2>.
  
  This Quality of Service (QoS) support will enable you to use
  Differentiated Services (diffserv) and Resource Reservation Protocol
  (RSVP) on your Linux router if you also say Y to the corresponding
  classifiers below.  Documentation and software is at
  <http://diffserv.sourceforge.net/>.
  
  If you say Y here and to "/proc file system" below, you will be able
  to read status information about packet schedulers from the file
  /proc/net/psched.
  
  The available schedulers are listed in the following questions; you
  can say Y to as many as you like. If unsure, say N now.

NET_SCH_ATM
  Say Y here if you want to use the ATM pseudo-scheduler.  This
  provides a framework for invoking classifiers, which in turn
  select classes of this queuing discipline.  Each class maps
  the flow(s) it is handling to a given virtual circuit.
  
  See the top of <file:net/sched/sch_atm.c> for more details.
  
  To compile this code as a module, choose M here: the
  module will be called sch_atm.

NET_SCH_CAKE
  Say Y here if you want to use the Common Applications Kept Enhanced
  (CAKE) queue management algorithm.
  
  To compile this driver as a module, choose M here: the module
  will be called sch_cake.
  
  If unsure, say N.

NET_SCH_CBQ
  Say Y here if you want to use the Class-Based Queueing (CBQ) packet
  scheduling algorithm. This algorithm classifies the waiting packets
  into a tree-like hierarchy of classes; the leaves of this tree are
  in turn scheduled by separate algorithms.
  
  See the top of <file:net/sched/sch_cbq.c> for more details.
  
  CBQ is a commonly used scheduler, so if you're unsure, you should
  say Y here. Then say Y to all the queueing algorithms below that you
  want to use as leaf disciplines.
  
  To compile this code as a module, choose M here: the
  module will be called sch_cbq.

NET_SCH_CBS
  Say Y here if you want to use the Credit Based Shaper (CBS) packet
  scheduling algorithm.
  
  See the top of <file:net/sched/sch_cbs.c> for more details.
  
  To compile this code as a module, choose M here: the
  module will be called sch_cbs.

NET_SCH_CHOKE
  Say Y here if you want to use the CHOKe packet scheduler (CHOose
  and Keep for responsive flows, CHOose and Kill for unresponsive
  flows). This is a variation of RED which tries to penalize flows
  that monopolize the queue.
  
  To compile this code as a module, choose M here: the
  module will be called sch_choke.

NET_SCH_CODEL
  Say Y here if you want to use the Controlled Delay (CODEL)
  packet scheduling algorithm.
  
  To compile this driver as a module, choose M here: the module
  will be called sch_codel.
  
  If unsure, say N.

NET_SCH_DEFAULT
  Support for selection of default queuing discipline.
  
  Nearly all users can safely say no here, and the default
  of pfifo_fast will be used. Many distributions already set
  the default value via /proc/sys/net/core/default_qdisc.
  
  If unsure, say N.

NET_SCH_DRR
  Say Y here if you want to use the Deficit Round Robin (DRR) packet
  scheduling algorithm.
  
  To compile this driver as a module, choose M here: the module
  will be called sch_drr.
  
  If unsure, say N.

NET_SCH_DSMARK
  Say Y if you want to schedule packets according to the
  Differentiated Services architecture proposed in RFC 2475.
  Technical information on this method, with pointers to associated
  RFCs, is available at <http://www.gta.ufrj.br/diffserv/>.
  
  To compile this code as a module, choose M here: the
  module will be called sch_dsmark.

NET_SCH_ETF
  Say Y here if you want to use the Earliest TxTime First (ETF) packet
  scheduling algorithm.
  
  See the top of <file:net/sched/sch_etf.c> for more details.
  
  To compile this code as a module, choose M here: the
  module will be called sch_etf.

NET_SCH_ETS
  The Enhanced Transmission Selection scheduler is a classful
  queuing discipline that merges functionality of PRIO and DRR
  qdiscs in one scheduler. ETS makes it easy to configure a set of
  strict and bandwidth-sharing bands to implement the transmission
  selection described in 802.1Qaz.
  
  Say Y here if you want to use the ETS packet scheduling
  algorithm.
  
  To compile this driver as a module, choose M here: the module
  will be called sch_ets.
  
  If unsure, say N.

NET_SCH_FIFO
  No help

NET_SCH_FQ
  Say Y here if you want to use the FQ packet scheduling algorithm.
  
  FQ does flow separation, and is able to respect pacing requirements
  set by TCP stack into sk->sk_pacing_rate (for localy generated
  traffic)
  
  To compile this driver as a module, choose M here: the module
  will be called sch_fq.
  
  If unsure, say N.

NET_SCH_FQ_CODEL
  Say Y here if you want to use the FQ Controlled Delay (FQ_CODEL)
  packet scheduling algorithm.
  
  To compile this driver as a module, choose M here: the module
  will be called sch_fq_codel.
  
  If unsure, say N.

NET_SCH_FQ_PIE
  Say Y here if you want to use the Flow Queue Proportional Integral
  controller Enhanced (FQ-PIE) packet scheduling algorithm.
  For more information, please see https://tools.ietf.org/html/rfc8033
  
  To compile this driver as a module, choose M here: the module
  will be called sch_fq_pie.
  
  If unsure, say N.

NET_SCH_GRED
  Say Y here if you want to use the Generic Random Early Detection
  (GRED) packet scheduling algorithm for some of your network devices
  (see the top of <file:net/sched/sch_red.c> for details and
  references about the algorithm).
  
  To compile this code as a module, choose M here: the
  module will be called sch_gred.

NET_SCH_HFSC
  Say Y here if you want to use the Hierarchical Fair Service Curve
  (HFSC) packet scheduling algorithm.
  
  To compile this code as a module, choose M here: the
  module will be called sch_hfsc.

NET_SCH_HHF
  Say Y here if you want to use the Heavy-Hitter Filter (HHF)
  packet scheduling algorithm.
  
  To compile this driver as a module, choose M here: the module
  will be called sch_hhf.

NET_SCH_HTB
  Say Y here if you want to use the Hierarchical Token Buckets (HTB)
  packet scheduling algorithm. See
  <http://luxik.cdi.cz/~devik/qos/htb/> for complete manual and
  in-depth articles.
  
  HTB is very similar to CBQ regarding its goals however is has
  different properties and different algorithm.
  
  To compile this code as a module, choose M here: the
  module will be called sch_htb.

NET_SCH_INGRESS
  Say Y here if you want to use classifiers for incoming and/or outgoing
  packets. This qdisc doesn't do anything else besides running classifiers,
  which can also have actions attached to them. In case of outgoing packets,
  classifiers that this qdisc holds are executed in the transmit path
  before real enqueuing to an egress qdisc happens.
  
  If unsure, say Y.
  
  To compile this code as a module, choose M here: the module will be
  called sch_ingress with alias of sch_clsact.

NET_SCH_MQPRIO
  Say Y here if you want to use the Multi-queue Priority scheduler.
  This scheduler allows QOS to be offloaded on NICs that have support
  for offloading QOS schedulers.
  
  To compile this driver as a module, choose M here: the module will
  be called sch_mqprio.
  
  If unsure, say N.

NET_SCH_MULTIQ
  Say Y here if you want to use an n-band queue packet scheduler
  to support devices that have multiple hardware transmit queues.
  
  To compile this code as a module, choose M here: the
  module will be called sch_multiq.

NET_SCH_NETEM
  Say Y if you want to emulate network delay, loss, and packet
  re-ordering. This is often useful to simulate networks when
  testing applications or protocols.
  
  To compile this driver as a module, choose M here: the module
  will be called sch_netem.
  
  If unsure, say N.

NET_SCH_PIE
  Say Y here if you want to use the Proportional Integral controller
  Enhanced scheduler packet scheduling algorithm.
  For more information, please see https://tools.ietf.org/html/rfc8033
  
  To compile this driver as a module, choose M here: the module
  will be called sch_pie.
  
  If unsure, say N.

NET_SCH_PLUG
  This queuing discipline allows userspace to plug/unplug a network
  output queue, using the netlink interface.  When it receives an
  enqueue command it inserts a plug into the outbound queue that
  causes following packets to enqueue until a dequeue command arrives
  over netlink, causing the plug to be removed and resuming the normal
  packet flow.
  
  This module also provides a generic "network output buffering"
  functionality (aka output commit), wherein upon arrival of a dequeue
  command, only packets up to the first plug are released for delivery.
  The Remus HA project uses this module to enable speculative execution
  of virtual machines by allowing the generated network output to be rolled
  back if needed.
  
  For more information, please refer to <http://wiki.xenproject.org/wiki/Remus>
  
  Say Y here if you are using this kernel for Xen dom0 and
  want to protect Xen guests with Remus.
  
  To compile this code as a module, choose M here: the
  module will be called sch_plug.

NET_SCH_PRIO
  Say Y here if you want to use an n-band priority queue packet
  scheduler.
  
  To compile this code as a module, choose M here: the
  module will be called sch_prio.

NET_SCH_QFQ
  Say Y here if you want to use the Quick Fair Queueing Scheduler (QFQ)
  packet scheduling algorithm.
  
  To compile this driver as a module, choose M here: the module
  will be called sch_qfq.
  
  If unsure, say N.

NET_SCH_RED
  Say Y here if you want to use the Random Early Detection (RED)
  packet scheduling algorithm.
  
  See the top of <file:net/sched/sch_red.c> for more details.
  
  To compile this code as a module, choose M here: the
  module will be called sch_red.

NET_SCH_SFB
  Say Y here if you want to use the Stochastic Fair Blue (SFB)
  packet scheduling algorithm.
  
  See the top of <file:net/sched/sch_sfb.c> for more details.
  
  To compile this code as a module, choose M here: the
  module will be called sch_sfb.

NET_SCH_SFQ
  Say Y here if you want to use the Stochastic Fairness Queueing (SFQ)
  packet scheduling algorithm.
  
  See the top of <file:net/sched/sch_sfq.c> for more details.
  
  To compile this code as a module, choose M here: the
  module will be called sch_sfq.

NET_SCH_SKBPRIO
  Say Y here if you want to use the SKB priority queue
  scheduler. This schedules packets according to skb->priority,
  which is useful for request packets in DoS mitigation systems such
  as Gatekeeper.
  
  To compile this driver as a module, choose M here: the module will
  be called sch_skbprio.
  
  If unsure, say N.

NET_SCH_TAPRIO
  Say Y here if you want to use the Time Aware Priority (taprio) packet
  scheduling algorithm.
  
  See the top of <file:net/sched/sch_taprio.c> for more details.
  
  To compile this code as a module, choose M here: the
  module will be called sch_taprio.

NET_SCH_TBF
  Say Y here if you want to use the Token Bucket Filter (TBF) packet
  scheduling algorithm.
  
  See the top of <file:net/sched/sch_tbf.c> for more details.
  
  To compile this code as a module, choose M here: the
  module will be called sch_tbf.

NET_SCH_TEQL
  Say Y here if you want to use the True Link Equalizer (TLE) packet
  scheduling algorithm. This queueing discipline allows the combination
  of several physical devices into one virtual device.
  
  See the top of <file:net/sched/sch_teql.c> for more details.
  
  To compile this code as a module, choose M here: the
  module will be called sch_teql.

NET_SOCK_MSG
  The NET_SOCK_MSG provides a framework for plain sockets (e.g. TCP) or
  ULPs (upper layer modules, e.g. TLS) to process L7 application data
  with the help of BPF programs.

NET_SWITCHDEV
  This module provides glue between core networking code and device
  drivers in order to support hardware switch chips in very generic
  meaning of the word "switch". This include devices supporting L2/L3 but
  also various flow offloading chips, including switches embedded into
  SR-IOV NICs.

NET_TC_SKB_EXT
  Say Y here to allow tc chain misses to continue in OvS datapath in
  the correct recirc_id, and hardware chain misses to continue in
  the correct chain in tc software datapath.
  
  Say N here if you won't be using tc<->ovs offload or tc chains offload.

NET_TEAM
  This allows one to create virtual interfaces that teams together
  multiple ethernet devices.
  
  Team devices can be added using the "ip" command from the
  iproute2 package:
  
  "ip link add link [ address MAC ] [ NAME ] type team"
  
  To compile this driver as a module, choose M here: the module
  will be called team.

NET_TEAM_MODE_ACTIVEBACKUP
  Only one port is active at a time and the rest of ports are used
  for backup.
  
  Mac addresses of ports are not modified. Userspace is responsible
  to do so.
  
  To compile this team mode as a module, choose M here: the module
  will be called team_mode_activebackup.

NET_TEAM_MODE_BROADCAST
  Basic mode where packets are transmitted always by all suitable ports.
  
  All added ports are setup to have team's device address.
  
  To compile this team mode as a module, choose M here: the module
  will be called team_mode_broadcast.

NET_TEAM_MODE_LOADBALANCE
  This mode provides load balancing functionality. Tx port selection
  is done using BPF function set up from userspace (bpf_hash_func
  option)
  
  To compile this team mode as a module, choose M here: the module
  will be called team_mode_loadbalance.

NET_TEAM_MODE_RANDOM
  Basic mode where port used for transmitting packets is selected
  randomly.
  
  All added ports are setup to have team's device address.
  
  To compile this team mode as a module, choose M here: the module
  will be called team_mode_random.

NET_TEAM_MODE_ROUNDROBIN
  Basic mode where port used for transmitting packets is selected in
  round-robin fashion using packet counter.
  
  All added ports are setup to have team's device address.
  
  To compile this team mode as a module, choose M here: the module
  will be called team_mode_roundrobin.

NET_TULIP
  This selects the "Tulip" family of EISA/PCI network cards.

NET_UDP_TUNNEL
  No help

NET_VENDOR_3COM
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about 3Com cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_8390
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about National Semiconductor 8390 cards. If you say Y,
  you will be asked for your specific card in the following questions.

NET_VENDOR_ADAPTEC
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Adaptec cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_AGERE
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Agere devices. If you say Y, you will be asked
  for your specific card in the following questions.

NET_VENDOR_ALACRITECH
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about Alacritech devices. If you say Y, you will be asked
  for your specific device in the following questions.

NET_VENDOR_ALLWINNER
  If you have a network (Ethernet) card belonging to this
  class, say Y here.
  
  Note that the answer to this question doesn't directly
  affect the kernel: saying N will just cause the configurator
  to skip all the questions about Allwinner cards. If you say Y,
  you will be asked for your specific card in the following
  questions.

NET_VENDOR_ALTEON
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Alteon cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_AMAZON
  If you have a network (Ethernet) device belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Amazon devices. If you say Y, you will be asked
  for your specific device in the following questions.

NET_VENDOR_AMD
  If you have a network (Ethernet) chipset belonging to this class,
  say Y.
  
  Note that the answer to this question does not directly affect
  the kernel: saying N will just cause the configurator to skip all
  the questions regarding AMD chipsets. If you say Y, you will be asked
  for your specific chipset/driver in the following questions.

NET_VENDOR_APPLE
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about Apple devices. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_AQUANTIA
  Set this to y if you have an Ethernet network cards that uses the aQuantia
  AQC107/AQC108 chipset.
  
  This option does not build any drivers; it causes the aQuantia
  drivers that can be built to appear in the list of Ethernet drivers.

NET_VENDOR_ARC
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about ARC cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_ATHEROS
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Atheros devices. If you say Y, you will be asked
  for your specific card in the following questions.

NET_VENDOR_AURORA
  If you have a network (Ethernet) device belonging to this class,
  say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  questions about Aurora devices. If you say Y, you will be asked
  for your specific device in the following questions.

NET_VENDOR_BROADCOM
  If you have a network (Ethernet) chipset belonging to this class,
  say Y.
  
  Note that the answer to this question does not directly affect
  the kernel: saying N will just cause the configurator to skip all
  the questions regarding Broadcom chipsets. If you say Y, you will
  be asked for your specific chipset/driver in the following questions.

NET_VENDOR_BROCADE
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about QLogic BR-series cards. If you say Y, you will be
  asked for your specific card in the following questions.

NET_VENDOR_CADENCE
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  If unsure, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  remaining Cadence network card questions. If you say Y, you will be
  asked for your specific card in the following questions.

NET_VENDOR_CAVIUM
  Select this option if you want enable Cavium network support.
  
  If you have a Cavium SoC or network adapter, say Y.

NET_VENDOR_CHELSIO
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Chelsio devices. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_CIRRUS
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Cirrus cards. If you say Y, you will be asked
  for your specific card in the following questions.

NET_VENDOR_CISCO
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Cisco cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_CORTINA
  If you have a network (Ethernet) card belonging to this class, say Y
  and read the Ethernet-HOWTO, available from
  <https://www.tldp.org/docs.html#howto>.

NET_VENDOR_DEC
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about DEC cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_DLINK
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about D-Link devices. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_EMULEX
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Emulex cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_EZCHIP
  If you have a network (Ethernet) device belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about EZchip devices. If you say Y, you will be asked for
  your specific device in the following questions.

NET_VENDOR_FARADAY
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Faraday cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_FREESCALE
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Freescale devices. If you say Y, you will be
  asked for your specific card in the following questions.

NET_VENDOR_FUJITSU
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  the questions about Fujitsu cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_GOOGLE
  If you have a network (Ethernet) device belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Google devices. If you say Y, you will be asked
  for your specific device in the following questions.

NET_VENDOR_HISILICON
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Hisilicon devices. If you say Y, you will be asked
  for your specific card in the following questions.

NET_VENDOR_HUAWEI
  If you have a network (Ethernet) card belonging to this class, say Y.
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Huawei cards. If you say Y, you will be asked
  for your specific card in the following questions.

NET_VENDOR_I825XX
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question does not directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about these devices. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_IBM
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about IBM devices. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_INTEL
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Intel cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_MARVELL
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Marvell devices. If you say Y, you will be
  asked for your specific card in the following questions.

NET_VENDOR_MEDIATEK
  If you have a Mediatek SoC with ethernet, say Y.

NET_VENDOR_MELLANOX
  If you have a network (Ethernet or RDMA) device belonging to this
  class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Mellanox cards. If you say Y, you will be asked
  for your specific card in the following questions.

NET_VENDOR_MICREL
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Micrel devices. If you say Y, you will be asked
  for your specific card in the following questions.

NET_VENDOR_MICROCHIP
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Microchip cards. If you say Y, you will be asked
  for your specific card in the following questions.

NET_VENDOR_MICROSEMI
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Microsemi devices.

NET_VENDOR_MOXART
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about MOXA ART devices. If you say Y, you will be asked
  for your specific card in the following questions.

NET_VENDOR_MYRI
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Myricom cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_NATSEMI
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about National Semiconductor devices. If you say Y,
  you will be asked for your specific card in the following questions.

NET_VENDOR_NETERION
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Neterion/Exar cards. If you say Y, you will be
  asked for your specific card in the following questions.

NET_VENDOR_NETRONOME
  If you have a Netronome(R) network (Ethernet) card or device, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Netronome(R) cards. If you say Y, you will be
  asked for your specific card in the following questions.

NET_VENDOR_NI
  If you have a network (Ethernet) device belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about National Instruments devices.
  If you say Y, you will be asked for your specific device in the
  following questions.

NET_VENDOR_NVIDIA
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about NVIDIA cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_OKI
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about OKI Semiconductor cards. If you say Y, you will
  be asked for your specific card in the following questions.

NET_VENDOR_PACKET_ENGINES
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Packet Engines devices. If you say Y, you will
  be asked for your specific card in the following questions.

NET_VENDOR_PASEMI
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about PA Semi cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_PENSANDO
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Pensando cards. If you say Y, you will be asked
  for your specific card in the following questions.

NET_VENDOR_QLOGIC
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about QLogic cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_QUALCOMM
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Qualcomm cards. If you say Y, you will be asked
  for your specific card in the following questions.

NET_VENDOR_RDC
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about RDC cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_REALTEK
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Realtek devices. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_RENESAS
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Renesas devices. If you say Y, you will be asked
  for your specific device in the following questions.

NET_VENDOR_ROCKER
  If you have a network device belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Rocker devices. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_SAMSUNG
  If you have a network (Ethernet) chipset belonging to this class,
  say Y.
  
  Note that the answer to this question does not directly affect
  the kernel: saying N will just cause the configurator to skip all
  the questions about Samsung chipsets. If you say Y, you will be asked
  for your specific chipset/driver in the following questions.

NET_VENDOR_SEEQ
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about SEEQ devices. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_SGI
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about SGI devices. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_SILAN
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Silan devices. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_SIS
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about SiS devices. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_SMSC
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about SMC/Western Digital cards. If you say Y, you will
  be asked for your specific card in the following questions.

NET_VENDOR_SOCIONEXT
  Option to select ethernet drivers for Socionext platforms.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Socionext devices. If you say Y, you will be asked
  for your specific card in the following questions.

NET_VENDOR_SOLARFLARE
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Solarflare devices. If you say Y, you will be asked
  for your specific card in the following questions.

NET_VENDOR_STMICRO
  If you have a network (Ethernet) card based on Synopsys Ethernet IP
  Cores, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about STMicroelectronics cards. If you say Y, you will
  be asked for your specific card in the following questions.

NET_VENDOR_SUN
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Sun network interfaces. If you say Y, you will be
  asked for your specific card in the following questions.

NET_VENDOR_SYNOPSYS
  If you have a network (Ethernet) device belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Synopsys devices. If you say Y, you will be asked
  for your specific device in the following questions.

NET_VENDOR_TEHUTI
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Tehuti cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_TI
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about TI devices. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_TOSHIBA
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Toshiba cards. If you say Y, you will be asked
  for your specific card in the following questions.

NET_VENDOR_TUNDRA
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Tundra cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_VIA
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about VIA devices. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_WIZNET
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about WIZnet devices. If you say Y, you will be asked
  for your specific card in the following questions.

NET_VENDOR_XILINX
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Xilinx devices. If you say Y, you will be asked
  for your specific card in the following questions.

NET_VENDOR_XIRCOM
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Xircom cards. If you say Y, you will be asked for
  your specific card in the following questions.

NET_VENDOR_XSCALE
  If you have a network (Ethernet) card belonging to this class, say Y.
  
  Note that the answer to this question does not directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about XScale IXP devices. If you say Y, you will be
  asked for your specific card in the following questions.

NET_VRF
  This option enables the support for mapping interfaces into VRF's. The
  support enables VRF devices.

NET_XGENE
  This is the Ethernet driver for the on-chip ethernet interface on the
  APM X-Gene SoC.
  
  To compile this driver as a module, choose M here. This module will
  be called xgene_enet.

NET_XGENE_V2
  This is the Ethernet driver for the on-chip ethernet interface
  which uses a linked list of DMA descriptor architecture (v2) for
  APM X-Gene SoCs.
  
  To compile this driver as a module, choose M here. This module will
  be called xgene-enet-v2.

NEW_LEDS
  Say Y to enable Linux LED support.  This allows control of supported
  LEDs from both userspace and optionally, by kernel events (triggers).

NFC
  Say Y here if you want to build support for NFC (Near field
  communication) devices.
  
  To compile this support as a module, choose M here: the module will
  be called nfc.

NFC_DIGITAL
  Say Y if you want to build NFC digital protocol stack support.
  This is needed by NFC chipsets whose firmware only implement
  the NFC analog layer.
  
  To compile this support as a module, choose M here: the module will
  be called nfc_digital.

NFC_FDP
  Intel Fields Peak NFC controller core driver.
  This is a driver based on the NCI NFC kernel layers.
  
  To compile this driver as a module, choose m here. The module will
  be called fdp.
  Say N if unsure.

NFC_FDP_I2C
  This module adds support for the Intel Fields Peak NFC controller
  i2c interface.
  Select this if your platform is using the i2c bus.
  
  If you choose to build a module, it'll be called fdp_i2c.
  Say N if unsure.

NFC_HCI
  Say Y here if you want to build support for a kernel NFC HCI
  implementation. This is mostly needed for devices that only process
  HCI frames, like for example the NXP pn544.

NFC_MEI_PHY
  This adds support to use an mei bus nfc device. Select this if you
  will use an HCI NFC driver for an NFC chip connected behind an
  Intel's Management Engine chip.
  
  If unsure, say N.

NFC_MICROREAD
  This module contains the main code for Inside Secure microread
  NFC chipsets. It implements the chipset HCI logic and hooks into
  the NFC kernel APIs. Physical layers will register against it.

NFC_MICROREAD_I2C
  This module adds support for the i2c interface of adapters using
  Inside microread chipsets.  Select this if your platform is using
  the i2c bus.
  
  If you choose to build a module, it'll be called microread_i2c.
  Say N if unsure.

NFC_MICROREAD_MEI
  This module adds support for the mei interface of adapters using
  Inside microread chipsets.  Select this if your microread chipset
  is handled by Intel's Management Engine Interface on your platform.
  
  If you choose to build a module, it'll be called microread_mei.
  Say N if unsure.

NFC_MRVL
  The core driver to support Marvell NFC devices.
  
  This driver is required if you want to support
  Marvell NFC device 8897.

NFC_MRVL_I2C
  Marvell NFC-over-I2C driver.
  
  This driver provides support for Marvell NFC-over-I2C devices.
  
  Say Y here to compile support for Marvell NFC-over-I2C driver
  into the kernel or say M to compile it as module.

NFC_MRVL_SPI
  Marvell NFC-over-SPI driver.
  
  This driver provides support for Marvell NFC-over-SPI devices.
  
  Say Y here to compile support for Marvell NFC-over-SPI driver
  into the kernel or say M to compile it as module.

NFC_MRVL_UART
  Marvell NFC-over-UART driver.
  
  This driver provides support for Marvell NFC-over-UART devices
  
  Say Y here to compile support for Marvell NFC-over-UART driver
  into the kernel or say M to compile it as module.

NFC_MRVL_USB
  Marvell NFC-over-USB driver.
  
  This driver provides support for Marvell NFC-over-USB devices:
  8897.
  
  Say Y here to compile support for Marvell NFC-over-USB driver
  into the kernel or say M to compile it as module.

NFC_NCI
  NCI (NFC Controller Interface) is a communication protocol between
  an NFC Controller (NFCC) and a Device Host (DH).
  
  Say Y here to compile NCI support into the kernel or say M to
  compile it as module (nci).

NFC_NCI_SPI
  NCI (NFC Controller Interface) is a communication protocol between
  an NFC Controller (NFCC) and a Device Host (DH).
  
  Say yes if you use an NCI driver that requires SPI link layer.

NFC_NCI_UART
  Say yes if you use an NCI driver that requires UART link layer.

NFC_NXP_NCI
  Generic core driver for NXP NCI chips such as the NPC100 (PN547),
  NPC300 (PN548) or PN7150 families.
  This is a driver based on the NCI NFC kernel layers and
  will thus not work with NXP libnfc library.
  
  To compile this driver as a module, choose m here. The module will
  be called nxp_nci.
  Say N if unsure.

NFC_NXP_NCI_I2C
  This module adds support for an I2C interface to the NXP NCI
  chips.
  Select this if your platform is using the I2C bus.
  
  To compile this driver as a module, choose m here. The module will
  be called nxp_nci_i2c.
  Say N if unsure.

NFC_PN532_UART
  This module adds support for the NXP pn532 UART interface.
  Select this if your platform is using the UART bus.
  
  If you choose to build a module, it'll be called pn532_uart.
  Say N if unsure.

NFC_PN533
  NXP PN533 core driver.
  This driver provides core functionality for NXP PN533 NFC devices.

NFC_PN533_I2C
  This module adds support for the NXP pn533 I2C interface.
  Select this if your platform is using the I2C bus.
  
  If you choose to build a module, it'll be called pn533_i2c.
  Say N if unsure.

NFC_PN533_USB
  This module adds support for the NXP pn533 USB interface.
  Select this if your platform is using the USB bus.
  
  If you choose to build a module, it'll be called pn533_usb.
  Say N if unsure.

NFC_PN544
  NXP PN544 core driver.
  This is a driver based on the HCI NFC kernel layers and
  will thus not work with NXP libnfc library.

NFC_PN544_I2C
  This module adds support for the NXP pn544 i2c interface.
  Select this if your platform is using the i2c bus.
  
  If you choose to build a module, it'll be called pn544_i2c.
  Say N if unsure.

NFC_PN544_MEI
  This module adds support for the mei interface of adapters using
  NXP pn544 chipsets.  Select this if your pn544 chipset
  is handled by Intel's Management Engine Interface on your platform.
  
  If you choose to build a module, it'll be called pn544_mei.
  Say N if unsure.

NFC_PORT100
  This adds support for Sony Port-100 chip based USB devices such as the
  RC-S380 dongle.
  
  If unsure, say N.

NFC_S3FWRN5
  Core driver for Samsung S3FWRN5 NFC chip. Contains core utilities
  of chip. It's intended to be used by PHYs to avoid duplicating lots
  of common code.

NFC_S3FWRN5_I2C
  This module adds support for an I2C interface to the S3FWRN5 chip.
  Select this if your platform is using the I2C bus.
  
  To compile this driver as a module, choose m here. The module will
  be called s3fwrn5_i2c.ko.
  Say N if unsure.

NFC_S3FWRN82_UART
  This module adds support for a UART interface to the S3FWRN82 chip.
  Select this if your platform is using the UART bus.
  
  To compile this driver as a module, choose m here. The module will
  be called s3fwrn82_uart.ko.
  Say N if unsure.

NFC_SHDLC
  Say yes if you use an NFC HCI driver that requires SHDLC link layer.
  If unsure, say N here.

NFC_SIM
  This driver declares two virtual NFC devices supporting NFC-DEP
  protocol. An LLCP connection can be established between them and
  all packets sent from one device is sent back to the other, acting as
  loopback devices.
  
  If unsure, say N.

NFC_ST21NFCA
  STMicroelectronics ST21NFCA core driver. It implements the chipset
  HCI logic and hooks into the NFC kernel APIs. Physical layers will
  register against it.

NFC_ST21NFCA_I2C
  This module adds support for the STMicroelectronics st21nfca i2c interface.
  Select this if your platform is using the i2c bus.
  
  If you choose to build a module, it'll be called st21nfca_i2c.
  Say N if unsure.

NFC_ST95HF
  This enables the ST NFC driver for ST95HF NFC transceiver.
  This makes use of SPI framework to communicate with transceiver
  and registered with NFC digital core to support Linux NFC framework.
  
  Say Y here to compile support for ST NFC transceiver ST95HF
  linux driver into the kernel or say M to compile it as module.

NFC_ST_NCI
  STMicroelectronics NFC NCI chips core driver. It implements the chipset
  NCI logic and hooks into the NFC kernel APIs. Physical layers will
  register against it.

NFC_ST_NCI_I2C
  This module adds support for an I2C interface to the
  STMicroelectronics NFC NCI chips family.
  Select this if your platform is using the i2c bus.
  
  If you choose to build a module, it'll be called st-nci_i2c.
  Say N if unsure.

NFC_ST_NCI_SPI
  This module adds support for an SPI interface to the
  STMicroelectronics NFC NCI chips family.
  Select this if your platform is using the spi bus.
  
  If you choose to build a module, it'll be called st-nci_spi.
  Say N if unsure.

NFC_TRF7970A
  This option enables the NFC driver for Texas Instruments' TRF7970a
  device. Such device supports 5 different protocols: ISO14443A,
  ISO14443B, FeLiCa, ISO15693 and ISO18000-3.
  
  Say Y here to compile support for TRF7970a into the kernel or
  say M  to compile it as a module. The module will be called
  trf7970a.ko.

NFIT_SECURITY_DEBUG
  Some NVDIMM devices and controllers support encryption and
  other security features. The payloads for the commands that
  enable those features may contain sensitive clear-text
  security material. Disable debug of those command payloads
  by default. If you are a kernel developer actively working
  on NVDIMM security enabling say Y, otherwise say N.

NFP
  This driver supports the Netronome(R) NFP4000/NFP6000 based
  cards working as a advanced Ethernet NIC.  It works with both
  SR-IOV physical and virtual functions.

NFP_APP_ABM_NIC
  Enable driver support for Advanced buffer management NIC on NFP.
  ABM NIC allows advanced configuration of queuing and scheduling
  of packets, including ECN marking. Say Y, if you are planning to
  use one of the NFP4000 and NFP6000 platforms which support this
  functionality.
  Code will be built into the nfp.ko driver.

NFP_APP_FLOWER
  Enable driver support for TC Flower offload on NFP4000 and NFP6000.
  Say Y, if you are planning to make use of TC Flower offload
  either directly, with Open vSwitch, or any other way.  Note that
  TC Flower offload requires specific FW to work.

NFP_DEBUG
  Enable extra sanity checks and debugfs support in
  Netronome(R) NFP4000/NFP6000 NIC drivers.
  Note: selecting this option may adversely impact
        performance.

NFSD
  Choose Y here if you want to allow other computers to access
  files residing on this system using Sun's Network File System
  protocol.  To compile the NFS server support as a module,
  choose M here: the module will be called nfsd.
  
  You may choose to use a user-space NFS server instead, in which
  case you can choose N here.
  
  To export local file systems using NFS, you also need to install
  user space programs which can be found in the Linux nfs-utils
  package, available from http://linux-nfs.org/.  More detail about
  the Linux NFS server implementation is available via the
  exports(5) man page.
  
  Below you can choose which versions of the NFS protocol are
  available to clients mounting the NFS server on this system.
  Support for NFS version 2 (RFC 1094) is always available when
  CONFIG_NFSD is selected.
  
  If unsure, say N.

NFSD_BLOCKLAYOUT
  This option enables support for the exporting pNFS block layouts
  in the kernel's NFS server. The pNFS block layout enables NFS
  clients to directly perform I/O to block devices accesible to both
  the server and the clients.  See RFC 5663 for more details.
  
  If unsure, say N.

NFSD_FLEXFILELAYOUT
  This option enables support for the exporting pNFS Flex File
  layouts in the kernel's NFS server. The pNFS Flex File  layout
  enables NFS clients to directly perform I/O to NFSv3 devices
  accesible to both the server and the clients.  See
  draft-ietf-nfsv4-flex-files for more details.
  
  Warning, this server implements the bare minimum functionality
  to be a flex file server - it is for testing the client,
  not for use in production.
  
  If unsure, say N.

NFSD_PNFS
  No help

NFSD_SCSILAYOUT
  This option enables support for the exporting pNFS SCSI layouts
  in the kernel's NFS server. The pNFS SCSI layout enables NFS
  clients to directly perform I/O to SCSI devices accesible to both
  the server and the clients.  See draft-ietf-nfsv4-scsi-layout for
  more details.
  
  If unsure, say N.

NFSD_V2_ACL
  No help

NFSD_V3
  This option enables support in your system's NFS server for
  version 3 of the NFS protocol (RFC 1813).
  
  If unsure, say Y.

NFSD_V3_ACL
  Solaris NFS servers support an auxiliary NFSv3 ACL protocol that
  never became an official part of the NFS version 3 protocol.
  This protocol extension allows applications on NFS clients to
  manipulate POSIX Access Control Lists on files residing on NFS
  servers.  NFS servers enforce POSIX ACLs on local files whether
  this protocol is available or not.
  
  This option enables support in your system's NFS server for the
  NFSv3 ACL protocol extension allowing NFS clients to manipulate
  POSIX ACLs on files exported by your system's NFS server.  NFS
  clients which support the Solaris NFSv3 ACL protocol can then
  access and modify ACLs on your NFS server.
  
  To store ACLs on your NFS server, you also need to enable ACL-
  related CONFIG options for your local file systems of choice.
  
  If unsure, say N.

NFSD_V4
  This option enables support in your system's NFS server for
  version 4 of the NFS protocol (RFC 3530).
  
  To export files using NFSv4, you need to install additional user
  space programs which can be found in the Linux nfs-utils package,
  available from http://linux-nfs.org/.
  
  If unsure, say N.

NFSD_V4_2_INTER_SSC
  This option enables support for NFSv4.2 inter server to
  server copy where the destination server calls the NFSv4.2
  client to read the data to copy from the source server.
  
  If unsure, say N.

NFSD_V4_SECURITY_LABEL
  Say Y here if you want enable fine-grained security label attribute
  support for NFS version 4.  Security labels allow security modules like
  SELinux and Smack to label files to facilitate enforcement of their policies.
  Without this an NFSv4 mount will have the same label on each file.
  
  If you do not wish to enable fine-grained security labels SELinux or
  Smack policies on NFSv4 files, say N.

NFS_ACL_SUPPORT
  No help

NFS_COMMON
  No help

NFS_DEBUG
  No help

NFS_DISABLE_UDP_SUPPORT
  Choose Y here to disable the use of NFS over UDP. NFS over UDP
  on modern networks (1Gb+) can lead to data corruption caused by
  fragmentation during high loads.

NFS_FS
  Choose Y here if you want to access files residing on other
  computers using Sun's Network File System protocol.  To compile
  this file system support as a module, choose M here: the module
  will be called nfs.
  
  To mount file systems exported by NFS servers, you also need to
  install the user space mount.nfs command which can be found in
  the Linux nfs-utils package, available from http://linux-nfs.org/.
  Information about using the mount command is available in the
  mount(8) man page.  More detail about the Linux NFS client
  implementation is available via the nfs(5) man page.
  
  Below you can choose which versions of the NFS protocol are
  available in the kernel to mount NFS servers.  Support for NFS
  version 2 (RFC 1094) is always available when NFS_FS is selected.
  
  To configure a system which mounts its root file system via NFS
  at boot time, say Y here, select "Kernel level IP
  autoconfiguration" in the NETWORK menu, and select "Root file
  system on NFS" below.  You cannot compile this file system as a
  module in this case.
  
  If unsure, say N.

NFS_FSCACHE
  Say Y here if you want NFS data to be cached locally on disc through
  the general filesystem cache manager

NFS_SWAP
  This option enables swapon to work on files located on NFS mounts.

NFS_USE_KERNEL_DNS
  No help

NFS_USE_LEGACY_DNS
  The kernel now provides a method for translating a host name into an
  IP address.  Select Y here if you would rather use your own DNS
  resolver script.
  
  If unsure, say N

NFS_V2
  This option enables support for version 2 of the NFS protocol
  (RFC 1094) in the kernel's NFS client.
  
  If unsure, say Y.

NFS_V3
  This option enables support for version 3 of the NFS protocol
  (RFC 1813) in the kernel's NFS client.
  
  If unsure, say Y.

NFS_V3_ACL
  Some NFS servers support an auxiliary NFSv3 ACL protocol that
  Sun added to Solaris but never became an official part of the
  NFS version 3 protocol.  This protocol extension allows
  applications on NFS clients to manipulate POSIX Access Control
  Lists on files residing on NFS servers.  NFS servers enforce
  ACLs on local files whether this protocol is available or not.
  
  Choose Y here if your NFS server supports the Solaris NFSv3 ACL
  protocol extension and you want your NFS client to allow
  applications to access and modify ACLs on files on the server.
  
  Most NFS servers don't support the Solaris NFSv3 ACL protocol
  extension.  You can choose N here or specify the "noacl" mount
  option to prevent your NFS client from trying to use the NFSv3
  ACL protocol.
  
  If unsure, say N.

NFS_V4
  This option enables support for version 4 of the NFS protocol
  (RFC 3530) in the kernel's NFS client.
  
  To mount NFS servers using NFSv4, you also need to install user
  space programs which can be found in the Linux nfs-utils package,
  available from http://linux-nfs.org/.
  
  If unsure, say Y.

NFS_V4_1
  This option enables support for minor version 1 of the NFSv4 protocol
  (RFC 5661) in the kernel's NFS client.
  
  If unsure, say N.

NFS_V4_1_IMPLEMENTATION_ID_DOMAIN
  This option defines the domain portion of the implementation ID that
  may be sent in the NFS exchange_id operation.  The value must be in
  the format of a DNS domain name and should be set to the DNS domain
  name of the distribution.
  If the NFS client is unchanged from the upstream kernel, this
  option should be set to the default "kernel.org".

NFS_V4_1_MIGRATION
  This option makes the NFS client advertise to NFSv4.1 servers that
  it can support NFSv4 migration.
  
  The NFSv4.1 pieces of the Linux NFSv4 migration implementation are
  still experimental.  If you are not an NFSv4 developer, say N here.

NFS_V4_2
  This option enables support for minor version 2 of the NFSv4 protocol
  in the kernel's NFS client.
  
  If unsure, say N.

NFS_V4_2_READ_PLUS
  This is intended for developers only. The READ_PLUS operation has
  been shown to have issues under specific conditions and should not
  be used in production.

NFS_V4_SECURITY_LABEL
  No help

NFTL
  This provides support for the NAND Flash Translation Layer which is
  used on M-Systems' DiskOnChip devices. It uses a kind of pseudo-
  file system on a flash device to emulate a block device with
  512-byte sectors, on top of which you put a 'normal' file system.
  
  You may find that the algorithms used in this code are patented
  unless you live in the Free World where software patents aren't
  legal - in the USA you are only permitted to use this on DiskOnChip
  hardware, although under the terms of the GPL you're obviously
  permitted to copy, modify and distribute the code as you wish. Just
  not use it.

NFTL_RW
  Support for writing to the NAND Flash Translation Layer, as used
  on the DiskOnChip.

NFT_BRIDGE_META
  Add support for bridge dedicated meta key.

NFT_BRIDGE_REJECT
  Add support to reject packets.

NFT_COMPAT
  This is required if you intend to use any of existing
  x_tables match/target extensions over the nf_tables
  framework.

NFT_CONNLIMIT
  This option adds the "connlimit" expression that you can use to
  ratelimit rule matchings per connections.

NFT_COUNTER
  This option adds the "counter" expression that you can use to
  include packet and byte counters in a rule.

NFT_CT
  This option adds the "ct" expression that you can use to match
  connection tracking information such as the flow state.

NFT_DUP_IPV4
  This module enables IPv4 packet duplication support for nf_tables.

NFT_DUP_IPV6
  This module enables IPv6 packet duplication support for nf_tables.

NFT_DUP_NETDEV
  This option enables packet duplication for the "netdev" family.

NFT_FIB
  No help

NFT_FIB_INET
  This option allows using the FIB expression from the inet table.
  The lookup will be delegated to the IPv4 or IPv6 FIB depending
  on the protocol of the packet.

NFT_FIB_IPV4
  This module enables IPv4 FIB lookups, e.g. for reverse path filtering.
  It also allows query of the FIB for the route type, e.g. local, unicast,
  multicast or blackhole.

NFT_FIB_IPV6
  This module enables IPv6 FIB lookups, e.g. for reverse path filtering.
  It also allows query of the FIB for the route type, e.g. local, unicast,
  multicast or blackhole.

NFT_FIB_NETDEV
  This option allows using the FIB expression from the netdev table.
  The lookup will be delegated to the IPv4 or IPv6 FIB depending
  on the protocol of the packet.

NFT_FLOW_OFFLOAD
  This option adds the "flow_offload" expression that you can use to
  choose what flows are placed into the hardware.

NFT_FWD_NETDEV
  This option enables packet forwarding for the "netdev" family.

NFT_HASH
  This option adds the "hash" expression that you can use to perform
  a hash operation on registers.

NFT_LIMIT
  This option adds the "limit" expression that you can use to
  ratelimit rule matchings.

NFT_LOG
  This option adds the "log" expression that you can use to log
  packets matching some criteria.

NFT_MASQ
  This option adds the "masquerade" expression that you can use
  to perform NAT in the masquerade flavour.

NFT_NAT
  This option adds the "nat" expression that you can use to perform
  typical Network Address Translation (NAT) packet transformations.

NFT_NUMGEN
  This option adds the number generator expression used to perform
  incremental counting and random numbers bound to a upper limit.

NFT_OBJREF
  This option adds the "objref" expression that allows you to refer to
  stateful objects, such as counters and quotas.

NFT_OSF
  This option allows matching packets from an specific OS.

NFT_QUEUE
  This is required if you intend to use the userspace queueing
  infrastructure (also known as NFQUEUE) from nftables.

NFT_QUOTA
  This option adds the "quota" expression that you can use to match
  enforce bytes quotas.

NFT_REDIR
  This options adds the "redirect" expression that you can use
  to perform NAT in the redirect flavour.

NFT_REJECT
  This option adds the "reject" expression that you can use to
  explicitly deny and notify via TCP reset/ICMP informational errors
  unallowed traffic.

NFT_REJECT_INET
  No help

NFT_REJECT_IPV4
  No help

NFT_REJECT_IPV6
  No help

NFT_REJECT_NETDEV
  This option enables the REJECT support from the netdev table.
  The return packet generation will be delegated to the IPv4
  or IPv6 ICMP or TCP RST implementation depending on the
  protocol of the packet.

NFT_SOCKET
  This option allows matching for the presence or absence of a
  corresponding socket and its attributes.

NFT_SYNPROXY
  The SYNPROXY expression allows you to intercept TCP connections and
  establish them using syncookies before they are passed on to the
  server. This allows to avoid conntrack and server resource usage
  during SYN-flood attacks.

NFT_TPROXY
  This makes transparent proxy support available in nftables.

NFT_TUNNEL
  This option adds the "tunnel" expression that you can use to set
  tunneling policies.

NFT_XFRM
  This option adds an expression that you can use to extract properties
  of a packets security association.

NF_CONNTRACK
  Connection tracking keeps a record of what packets have passed
  through your machine, in order to figure out how they are related
  into connections.
  
  This is required to do Masquerading or other kinds of Network
  Address Translation.  It can also be used to enhance packet
  filtering (see `Connection state match support' below).
  
  To compile it as a module, choose M here.  If unsure, say N.

NF_CONNTRACK_AMANDA
  If you are running the Amanda backup package <http://www.amanda.org/>
  on this machine or machines that will be MASQUERADED through this
  machine, then you may want to enable this feature.  This allows the
  connection tracking and natting code to allow the sub-channels that
  Amanda requires for communication of the backup data, messages and
  index.
  
  To compile it as a module, choose M here.  If unsure, say N.

NF_CONNTRACK_BRIDGE
  Connection tracking keeps a record of what packets have passed
  through your machine, in order to figure out how they are related
  into connections. This is used to enhance packet filtering via
  stateful policies. Enable this if you want native tracking from
  the bridge. This provides a replacement for the `br_netfilter'
  infrastructure.
  
  To compile it as a module, choose M here.  If unsure, say N.

NF_CONNTRACK_BROADCAST
  No help

NF_CONNTRACK_EVENTS
  If this option is enabled, the connection tracking code will
  provide a notifier chain that can be used by other kernel code
  to get notified about changes in the connection tracking state.
  
  If unsure, say `N'.

NF_CONNTRACK_FTP
  Tracking FTP connections is problematic: special helpers are
  required for tracking them, and doing masquerading and other forms
  of Network Address Translation on them.
  
  This is FTP support on Layer 3 independent connection tracking.
  
  To compile it as a module, choose M here.  If unsure, say N.

NF_CONNTRACK_H323
  H.323 is a VoIP signalling protocol from ITU-T. As one of the most
  important VoIP protocols, it is widely used by voice hardware and
  software including voice gateways, IP phones, Netmeeting, OpenPhone,
  Gnomemeeting, etc.
  
  With this module you can support H.323 on a connection tracking/NAT
  firewall.
  
  This module supports RAS, Fast Start, H.245 Tunnelling, Call
  Forwarding, RTP/RTCP and T.120 based audio, video, fax, chat,
  whiteboard, file transfer, etc. For more information, please
  visit http://nath323.sourceforge.net/.
  
  To compile it as a module, choose M here.  If unsure, say N.

NF_CONNTRACK_IRC
  There is a commonly-used extension to IRC called
  Direct Client-to-Client Protocol (DCC).  This enables users to send
  files to each other, and also chat to each other without the need
  of a server.  DCC Sending is used anywhere you send files over IRC,
  and DCC Chat is most commonly used by Eggdrop bots.  If you are
  using NAT, this extension will enable you to send files and initiate
  chats.  Note that you do NOT need this extension to get files or
  have others initiate chats, or everything else in IRC.
  
  To compile it as a module, choose M here.  If unsure, say N.

NF_CONNTRACK_LABELS
  This option enables support for assigning user-defined flag bits
  to connection tracking entries.  It can be used with xtables connlabel
  match and the nftables ct expression.

NF_CONNTRACK_MARK
  This option enables support for connection marks, used by the
  `CONNMARK' target and `connmark' match. Similar to the mark value
  of packets, but this mark value is kept in the conntrack session
  instead of the individual packets.

NF_CONNTRACK_NETBIOS_NS
  NetBIOS name service requests are sent as broadcast messages from an
  unprivileged port and responded to with unicast messages to the
  same port. This make them hard to firewall properly because connection
  tracking doesn't deal with broadcasts. This helper tracks locally
  originating NetBIOS name service requests and the corresponding
  responses. It relies on correct IP address configuration, specifically
  netmask and broadcast address. When properly configured, the output
  of "ip address show" should look similar to this:
  
  $ ip -4 address show eth0
  4: eth0: <BROADCAST,MULTICAST,UP> mtu 1500 qdisc pfifo_fast qlen 1000
      inet 172.16.2.252/24 brd 172.16.2.255 scope global eth0
  
  To compile it as a module, choose M here.  If unsure, say N.

NF_CONNTRACK_PPTP
  This module adds support for PPTP (Point to Point Tunnelling
  Protocol, RFC2637) connection tracking and NAT.
  
  If you are running PPTP sessions over a stateful firewall or NAT
  box, you may want to enable this feature.
  
  Please note that not all PPTP modes of operation are supported yet.
  Specifically these limitations exist:
    - Blindly assumes that control connections are always established
      in PNS->PAC direction. This is a violation of RFC2637.
    - Only supports a single call within each session
  
  To compile it as a module, choose M here.  If unsure, say N.

NF_CONNTRACK_PROCFS
  This option enables for the list of known conntrack entries
  to be shown in procfs under net/netfilter/nf_conntrack. This
  is considered obsolete in favor of using the conntrack(8)
  tool which uses Netlink.

NF_CONNTRACK_SANE
  SANE is a protocol for remote access to scanners as implemented
  by the 'saned' daemon. Like FTP, it uses separate control and
  data connections.
  
  With this module you can support SANE on a connection tracking
  firewall.
  
  To compile it as a module, choose M here.  If unsure, say N.

NF_CONNTRACK_SECMARK
  This option enables security markings to be applied to
  connections.  Typically they are copied to connections from
  packets using the CONNSECMARK target and copied back from
  connections to packets with the same target, with the packets
  being originally labeled via SECMARK.
  
  If unsure, say 'N'.

NF_CONNTRACK_SIP
  SIP is an application-layer control protocol that can establish,
  modify, and terminate multimedia sessions (conferences) such as
  Internet telephony calls. With the nf_conntrack_sip and
  the nf_nat_sip modules you can support the protocol on a connection
  tracking/NATing firewall.
  
  To compile it as a module, choose M here.  If unsure, say N.

NF_CONNTRACK_SNMP
  SNMP service requests are sent as broadcast messages from an
  unprivileged port and responded to with unicast messages to the
  same port. This make them hard to firewall properly because connection
  tracking doesn't deal with broadcasts. This helper tracks locally
  originating SNMP service requests and the corresponding
  responses. It relies on correct IP address configuration, specifically
  netmask and broadcast address.
  
  To compile it as a module, choose M here.  If unsure, say N.

NF_CONNTRACK_TFTP
  TFTP connection tracking helper, this is required depending
  on how restrictive your ruleset is.
  If you are using a tftp client behind -j SNAT or -j MASQUERADING
  you will need this.
  
  To compile it as a module, choose M here.  If unsure, say N.

NF_CONNTRACK_TIMEOUT
  This option enables support for connection tracking timeout
  extension. This allows you to attach timeout policies to flow
  via the CT target.
  
  If unsure, say `N'.

NF_CONNTRACK_TIMESTAMP
  This option enables support for connection tracking timestamping.
  This allows you to store the flow start-time and to obtain
  the flow-stop time (once it has been destroyed) via Connection
  tracking events.
  
  If unsure, say `N'.

NF_CONNTRACK_ZONES
  This option enables support for connection tracking zones.
  Normally, each connection needs to have a unique system wide
  identity. Connection tracking zones allow to have multiple
  connections using the same identity, as long as they are
  contained in different zones.
  
  If unsure, say `N'.

NF_CT_NETLINK
  This option enables support for a netlink-based userspace interface

NF_CT_NETLINK_HELPER
  This option enables the user-space connection tracking helpers
  infrastructure.
  
  If unsure, say `N'.

NF_CT_NETLINK_TIMEOUT
  This option enables support for connection tracking timeout
  fine-grain tuning. This allows you to attach specific timeout
  policies to flows, instead of using the global timeout policy.
  
  If unsure, say `N'.

NF_CT_PROTO_DCCP
  With this option enabled, the layer 3 independent connection
  tracking code will be able to do state tracking on DCCP connections.
  
  If unsure, say Y.

NF_CT_PROTO_GRE
  No help

NF_CT_PROTO_SCTP
  With this option enabled, the layer 3 independent connection
  tracking code will be able to do state tracking on SCTP connections.
  
  If unsure, say Y.

NF_CT_PROTO_UDPLITE
  With this option enabled, the layer 3 independent connection
  tracking code will be able to do state tracking on UDP-Lite
  connections.
  
  If unsure, say Y.

NF_DEFRAG_IPV4
  No help

NF_DEFRAG_IPV6
  No help

NF_DUP_IPV4
  This option enables the nf_dup_ipv4 core, which duplicates an IPv4
  packet to be rerouted to another destination.

NF_DUP_IPV6
  This option enables the nf_dup_ipv6 core, which duplicates an IPv6
  packet to be rerouted to another destination.

NF_DUP_NETDEV
  This option enables the generic packet duplication infrastructure
  for Netfilter.

NF_FLOW_TABLE
  This option adds the flow table core infrastructure.
  
  To compile it as a module, choose M here.

NF_FLOW_TABLE_INET
  This option adds the flow table mixed IPv4/IPv6 support.
  
  To compile it as a module, choose M here.

NF_FLOW_TABLE_IPV4
  This option adds the flow table IPv4 support.
  
  To compile it as a module, choose M here.

NF_FLOW_TABLE_IPV6
  This option adds the flow table IPv6 support.
  
  To compile it as a module, choose M here.

NF_LOG_ARP
  No help

NF_LOG_BRIDGE
  No help

NF_LOG_COMMON
  No help

NF_LOG_IPV4
  No help

NF_LOG_IPV6
  No help

NF_LOG_NETDEV
  No help

NF_NAT
  The NAT option allows masquerading, port forwarding and other
  forms of full Network Address Port Translation. This can be
  controlled by iptables, ip6tables or nft.

NF_NAT_AMANDA
  No help

NF_NAT_FTP
  No help

NF_NAT_H323
  No help

NF_NAT_IRC
  No help

NF_NAT_MASQUERADE
  No help

NF_NAT_PPTP
  No help

NF_NAT_REDIRECT
  No help

NF_NAT_SIP
  No help

NF_NAT_SNMP_BASIC
  This module implements an Application Layer Gateway (ALG) for
  SNMP payloads.  In conjunction with NAT, it allows a network
  management system to access multiple private networks with
  conflicting addresses.  It works by modifying IP addresses
  inside SNMP payloads to match IP-layer NAT mapping.
  
  This is the "basic" form of SNMP-ALG, as described in RFC 2962
  
  To compile it as a module, choose M here.  If unsure, say N.

NF_NAT_TFTP
  No help

NF_REJECT_IPV4
  No help

NF_REJECT_IPV6
  No help

NF_SOCKET_IPV4
  This option enables the IPv4 socket lookup infrastructure. This is
  is required by the {ip,nf}tables socket match.

NF_SOCKET_IPV6
  This option enables the IPv6 socket lookup infrastructure. This
  is used by the {ip6,nf}tables socket match.

NF_TABLES
  nftables is the new packet classification framework that intends to
  replace the existing {ip,ip6,arp,eb}_tables infrastructure. It
  provides a pseudo-state machine with an extensible instruction-set
  (also known as expressions) that the userspace 'nft' utility
  (https://www.netfilter.org/projects/nftables) uses to build the
  rule-set. It also comes with the generic set infrastructure that
  allows you to construct mappings between matchings and actions
  for performance lookups.
  
  To compile it as a module, choose M here.

NF_TABLES_ARP
  This option enables the ARP support for nf_tables.

NF_TABLES_BRIDGE
  No help

NF_TABLES_INET
  This option enables support for a mixed IPv4/IPv6 "inet" table.

NF_TABLES_IPV4
  This option enables the IPv4 support for nf_tables.

NF_TABLES_IPV6
  This option enables the IPv6 support for nf_tables.

NF_TABLES_NETDEV
  This option enables support for the "netdev" table.

NF_TPROXY_IPV4
  No help

NF_TPROXY_IPV6
  No help

NI65
  If you have a network (Ethernet) card of this type, say Y here.
  
  To compile this driver as a module, choose M here. The module
  will be called ni65.

NI903X_WDT
  This is the driver for the watchdog timer on the National Instruments
  903x/913x real-time controllers.
  
  To compile this driver as a module, choose M here: the module will be
  called ni903x_wdt.

NIC7018_WDT
  Support for National Instruments NIC7018 Watchdog.
  
  To compile this driver as a module, choose M here: the module will be
  called nic7018_wdt.

NILFS2_FS
  NILFS2 is a log-structured file system (LFS) supporting continuous
  snapshotting.  In addition to versioning capability of the entire
  file system, users can even restore files mistakenly overwritten or
  destroyed just a few seconds ago.  Since this file system can keep
  consistency like conventional LFS, it achieves quick recovery after
  system crashes.
  
  NILFS2 creates a number of checkpoints every few seconds or per
  synchronous write basis (unless there is no change).  Users can
  select significant versions among continuously created checkpoints,
  and can change them into snapshots which will be preserved for long
  periods until they are changed back to checkpoints.  Each
  snapshot is mountable as a read-only file system concurrently with
  its writable mount, and this feature is convenient for online backup.
  
  Some features including atime, extended attributes, and POSIX ACLs,
  are not supported yet.
  
  To compile this file system support as a module, choose M here: the
  module will be called nilfs2.  If unsure, say N.

NITRO_ENCLAVES
  This driver consists of support for enclave lifetime management
  for Nitro Enclaves (NE).
  
  To compile this driver as a module, choose M here.
  The module will be called nitro_enclaves.

NIU
  This enables support for cards based upon Sun's
  Neptune chipset.

NI_XGE_MANAGEMENT_ENET
  Simple LAN device for debug or management purposes. Can
  support either 10G or 1G PHYs via SFP+ ports.

NL80211_TESTMODE
  The nl80211 testmode command helps implementing things like
  factory calibration or validation tools for wireless chips.
  
  Select this option ONLY for kernels that are specifically
  built for such purposes.
  
  Debugging tools that are supposed to end up in the hands of
  users should better be implemented with debugfs.
  
  Say N.

NLATTR
  No help

NLMON
  This option enables a monitoring net device for netlink skbs. The
  purpose of this is to analyze netlink messages with packet sockets.
  Thus applications like tcpdump will be able to see local netlink
  messages if they tap into the netlink device, record pcaps for further
  diagnostics, etc. This is mostly intended for developers or support
  to debug netlink issues. If unsure, say N.

NLS
  The base Native Language Support. A number of filesystems
  depend on it (e.g. FAT, JOLIET, NT, BEOS filesystems), as well
  as the ability of some filesystems to use native languages
  (NCP, SMB).
  
  If unsure, say Y.
  
  To compile this code as a module, choose M here: the module
  will be called nls_base.

NLS_ASCII
  An ASCII NLS module is needed if you want to override the
  DEFAULT NLS with this very basic charset and don't want any
  non-ASCII characters to be translated.

NLS_CODEPAGE_1250
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Windows CP-1250
  character set, which works for most Latin-written Slavic and Central
  European languages: Czech, German, Hungarian, Polish, Rumanian, Croatian,
  Slovak, Slovene.

NLS_CODEPAGE_1251
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Russian and
  Bulgarian and Belarusian.

NLS_CODEPAGE_437
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored
  in so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage that is used in
  the United States and parts of Canada. This is recommended.

NLS_CODEPAGE_737
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored
  in so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage that is used for
  Greek. If unsure, say N.

NLS_CODEPAGE_775
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored
  in so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage that is used
  for the Baltic Rim Languages (Latvian and Lithuanian). If unsure,
  say N.

NLS_CODEPAGE_850
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage that is used for
  much of Europe -- United Kingdom, Germany, Spain, Italy, and [add
  more countries here]. It has some characters useful to many European
  languages that are not part of the US codepage 437.
  
  If unsure, say Y.

NLS_CODEPAGE_852
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the Latin 2 codepage used by DOS
  for much of Central and Eastern Europe. It has all the required
  characters for these languages: Albanian, Croatian, Czech, English,
  Finnish, Hungarian, Irish, German, Polish, Romanian, Serbian (Latin
  transcription), Slovak, Slovenian, and Sorbian.

NLS_CODEPAGE_855
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Cyrillic.

NLS_CODEPAGE_857
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Turkish.

NLS_CODEPAGE_860
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Portuguese.

NLS_CODEPAGE_861
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Icelandic.

NLS_CODEPAGE_862
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Hebrew.

NLS_CODEPAGE_863
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Canadian
  French.

NLS_CODEPAGE_864
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Arabic.

NLS_CODEPAGE_865
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for the Nordic
  European countries.

NLS_CODEPAGE_866
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for
  Cyrillic/Russian.

NLS_CODEPAGE_869
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Greek.

NLS_CODEPAGE_874
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Thai.

NLS_CODEPAGE_932
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Shift-JIS
  or EUC-JP. To use EUC-JP, you can use 'euc-jp' as mount option or
  NLS Default value during kernel configuration, instead of 'cp932'.

NLS_CODEPAGE_936
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Simplified
  Chinese(GBK).

NLS_CODEPAGE_949
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for UHC.

NLS_CODEPAGE_950
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Traditional
  Chinese(Big5).

NLS_DEFAULT
  The default NLS used when mounting file system. Note, that this is
  the NLS used by your console, not the NLS used by a specific file
  system (if different) to store data (filenames) on a disk.
  Currently, the valid values are:
  big5, cp437, cp737, cp775, cp850, cp852, cp855, cp857, cp860, cp861,
  cp862, cp863, cp864, cp865, cp866, cp869, cp874, cp932, cp936,
  cp949, cp950, cp1251, cp1255, euc-jp, euc-kr, gb2312, iso8859-1,
  iso8859-2, iso8859-3, iso8859-4, iso8859-5, iso8859-6, iso8859-7,
  iso8859-8, iso8859-9, iso8859-13, iso8859-14, iso8859-15,
  koi8-r, koi8-ru, koi8-u, sjis, tis-620, macroman, utf8.
  If you specify a wrong value, it will use the built-in NLS;
  compatible with iso8859-1.
  
  If unsure, specify it as "iso8859-1".

NLS_ISO8859_1
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CD-ROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 1 character
  set, which covers most West European languages such as Albanian,
  Catalan, Danish, Dutch, English, Faeroese, Finnish, French, German,
  Galician, Irish, Icelandic, Italian, Norwegian, Portuguese, Spanish,
  and Swedish. It is also the default for the US. If unsure, say Y.

NLS_ISO8859_13
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CD-ROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 7 character
  set, which supports modern Baltic languages including Latvian
  and Lithuanian.

NLS_ISO8859_14
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CD-ROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 8 character
  set, which adds the last accented vowels for Welsh (aka Cymraeg)
  (and Manx Gaelic) that were missing in Latin 1.
  <http://linux.speech.cymru.org/> has further information.

NLS_ISO8859_15
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CD-ROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 9 character
  set, which covers most West European languages such as Albanian,
  Catalan, Danish, Dutch, English, Estonian, Faeroese, Finnish,
  French, German, Galician, Irish, Icelandic, Italian, Norwegian,
  Portuguese, Spanish, and Swedish. Latin 9 is an update to
  Latin 1 (ISO 8859-1) that removes a handful of rarely used
  characters and instead adds support for Estonian, corrects the
  support for French and Finnish, and adds the new Euro character.
  If unsure, say Y.

NLS_ISO8859_2
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CD-ROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 2 character
  set, which works for most Latin-written Slavic and Central European
  languages: Czech, German, Hungarian, Polish, Rumanian, Croatian,
  Slovak, Slovene.

NLS_ISO8859_3
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CD-ROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 3 character
  set, which is popular with authors of Esperanto, Galician, Maltese,
  and Turkish.

NLS_ISO8859_4
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CD-ROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 4 character
  set which introduces letters for Estonian, Latvian, and
  Lithuanian. It is an incomplete predecessor of Latin 7.

NLS_ISO8859_5
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CD-ROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for ISO8859-5, a Cyrillic
  character set with which you can type Bulgarian, Belarusian,
  Macedonian, Russian, Serbian, and Ukrainian. Note that the charset
  KOI8-R is preferred in Russia.

NLS_ISO8859_6
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CD-ROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for ISO8859-6, the Arabic
  character set.

NLS_ISO8859_7
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CD-ROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for ISO8859-7, the Modern
  Greek character set.

NLS_ISO8859_8
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CD-ROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for ISO8859-8, the Hebrew
  character set.

NLS_ISO8859_9
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CD-ROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 5 character
  set, and it replaces the rarely needed Icelandic letters in Latin 1
  with the Turkish ones. Useful in Turkey.

NLS_KOI8_R
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CD-ROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the preferred Russian
  character set.

NLS_KOI8_U
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CD-ROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the preferred Ukrainian
  (koi8-u) and Belarusian (koi8-ru) character sets.

NLS_MAC_CELTIC
  The Apple HFS file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called MAC codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  Mac partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the Mac codepage that is used for
  Celtic.
  
  If unsure, say Y.

NLS_MAC_CENTEURO
  The Apple HFS file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called MAC codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  Mac partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the Mac codepage that is used for
  Central Europe.
  
  If unsure, say Y.

NLS_MAC_CROATIAN
  The Apple HFS file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called MAC codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  Mac partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the Mac codepage that is used for
  Croatian.
  
  If unsure, say Y.

NLS_MAC_CYRILLIC
  The Apple HFS file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called MAC codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  Mac partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the Mac codepage that is used for
  Cyrillic.
  
  If unsure, say Y.

NLS_MAC_GAELIC
  The Apple HFS file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called MAC codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  Mac partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the Mac codepage that is used for
  Gaelic.
  
  If unsure, say Y.

NLS_MAC_GREEK
  The Apple HFS file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called MAC codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  Mac partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the Mac codepage that is used for
  Greek.
  
  If unsure, say Y.

NLS_MAC_ICELAND
  The Apple HFS file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called MAC codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  Mac partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the Mac codepage that is used for
  Iceland.
  
  If unsure, say Y.

NLS_MAC_INUIT
  The Apple HFS file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called MAC codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  Mac partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the Mac codepage that is used for
  Inuit.
  
  If unsure, say Y.

NLS_MAC_ROMAN
  The Apple HFS file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called MAC codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  Mac partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the Mac codepage that is used for
  much of Europe -- United Kingdom, Germany, Spain, Italy, and [add
  more countries here].
  
  If unsure, say Y.

NLS_MAC_ROMANIAN
  The Apple HFS file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called MAC codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  Mac partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the Mac codepage that is used for
  Romanian.
  
  If unsure, say Y.

NLS_MAC_TURKISH
  The Apple HFS file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called MAC codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  Mac partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the Mac codepage that is used for
  Turkish.
  
  If unsure, say Y.

NLS_UTF8
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CD-ROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the UTF-8 encoding of
  the Unicode/ISO9646 universal character set.

NOA1305
  Say Y here if you want to build support for the ON Semiconductor
  NOA1305 ambient light sensor.
  
  To compile this driver as a module, choose M here:
  The module will be called noa1305.

NODES_SHIFT
  Specify the maximum number of NUMA Nodes available on the target
  system.  Increases memory reserved to accommodate various tables.

NOHIGHMEM
  Linux can use up to 64 Gigabytes of physical memory on x86 systems.
  However, the address space of 32-bit x86 processors is only 4
  Gigabytes large. That means that, if you have a large amount of
  physical memory, not all of it can be "permanently mapped" by the
  kernel. The physical memory that's not permanently mapped is called
  "high memory".
  
  If you are compiling a kernel which will never run on a machine with
  more than 1 Gigabyte total physical RAM, answer "off" here (default
  choice and suitable for most users). This will result in a "3GB/1GB"
  split: 3GB are mapped so that each process sees a 3GB virtual memory
  space and the remaining part of the 4GB virtual memory space is used
  by the kernel to permanently map as much physical memory as
  possible.
  
  If the machine has between 1 and 4 Gigabytes physical RAM, then
  answer "4GB" here.
  
  If more than 4 Gigabytes is used then answer "64GB" here. This
  selection turns Intel PAE (Physical Address Extension) mode on.
  PAE implements 3-level paging on IA32 processors. PAE is fully
  supported by Linux, PAE mode is implemented on all recent Intel
  processors (Pentium Pro and better). NOTE: If you say "64GB" here,
  then the kernel will not boot on CPUs that don't support PAE!
  
  The actual amount of total physical memory will either be
  auto detected or can be forced by using a kernel command line option
  such as "mem=256M". (Try "man bootparam" or see the documentation of
  your boot loader (lilo or loadlin) about how to pass options to the
  kernel at boot time.)
  
  If unsure, say "off".

NOKIA_MODEM
  Say Y here if you want to add support for the modem on Nokia
  N900 (Nokia RX-51) hardware.
  
  If unsure, say N.

NOMMU_INITIAL_TRIM_EXCESS
  The NOMMU mmap() frequently needs to allocate large contiguous chunks
  of memory on which to store mappings, but it can only ask the system
  allocator for chunks in 2^N*PAGE_SIZE amounts - which is frequently
  more than it requires.  To deal with this, mmap() is able to trim off
  the excess and return it to the allocator.
  
  If trimming is enabled, the excess is trimmed off and returned to the
  system allocator, which can cause extra fragmentation, particularly
  if there are a lot of transient processes.
  
  If trimming is disabled, the excess is kept, but not used, which for
  long-term mappings means that the space is wasted.
  
  Trimming can be dynamically controlled through a sysctl option
  (/proc/sys/vm/nr_trim_pages) which specifies the minimum number of
  excess pages there must be before trimming should occur, or zero if
  no trimming is to occur.
  
  This option specifies the initial value of this option.  The default
  of 1 says that all excess pages should be trimmed.
  
  See Documentation/admin-guide/mm/nommu-mmap.rst for more information.

NOP_TRACER
  No help

NOP_USB_XCEIV
  This driver is to be used by all the usb transceiver which are either
  built-in with usb ip or which are autonomous and doesn't require any
  phy programming such as ISP1x04 etc.

NORTEL_HERMES
  Enable support for PCMCIA cards supported by the "Hermes" (aka
  orinoco) driver when used in Nortel emobility PCI adaptors.  These
  adaptors are not full PCMCIA controllers, but act as a more limited
  PCI <-> PCMCIA bridge.

NOTIFIER_ERROR_INJECTION
  This option provides the ability to inject artificial errors to
  specified notifier chain callbacks. It is useful to test the error
  handling of notifier call chain failures.
  
  Say N if unsure.

NOUVEAU_DEBUG
  Selects the maximum debug level to compile support for.
  
  0 - fatal
  1 - error
  2 - warning
  3 - info
  4 - debug
  5 - trace (recommended)
  6 - paranoia
  7 - spam
  
  The paranoia and spam levels will add a lot of extra checks which
  may potentially slow down driver operation.

NOUVEAU_DEBUG_DEFAULT
  Selects the default debug level

NOUVEAU_DEBUG_MMU
  Say Y here if you want to enable verbose MMU debug output.

NOUVEAU_DEBUG_PUSH
  Say Y here if you want to enable verbose push buffer debug output
  and sanity checks.

NOUVEAU_LEGACY_CTX_SUPPORT
  There was a version of the nouveau DDX that relied on legacy
  ctx ioctls not erroring out. But that was back in time a long
  ways, so offer a way to disable it now. For uapi compat with
  old nouveau ddx this should be on by default, but modern distros
  should consider turning it off.

NOUVEAU_PLATFORM_DRIVER
  Support for Nouveau platform driver, used for SoC GPUs as found
  on NVIDIA Tegra K1.

NOZOMI
  If you have a HSDPA driver Broadband Wireless Data Card -
  Globe Trotter PCMCIA card, say Y here.
  
  To compile this driver as a module, choose M here, the module
  will be called nozomi.

NO_DMA
  No help

NO_GENERIC_PCI_IOPORT_MAP
  No help

NO_HZ
  This is the old config entry that enables dynticks idle.
  We keep it around for a little while to enforce backward
  compatibility with older config files.

NO_HZ_COMMON
  No help

NO_HZ_FULL
  Adaptively try to shutdown the tick whenever possible, even when
  the CPU is running tasks. Typically this requires running a single
  task on the CPU. Chances for running tickless are maximized when
  the task mostly runs in userspace and has few kernel activity.
  
  You need to fill up the nohz_full boot parameter with the
  desired range of dynticks CPUs.
  
  This is implemented at the expense of some overhead in user <-> kernel
  transitions: syscalls, exceptions and interrupts. Even when it's
  dynamically off.
  
  Say N.

NO_HZ_IDLE
  This option enables a tickless idle system: timer interrupts
  will only trigger on an as-needed basis when the system is idle.
  This is usually interesting for energy saving.
  
  Most of the time you want to say Y here.

NPCM7XX_KCS_IPMI_BMC
  Provides a driver for the KCS (Keyboard Controller Style) IPMI
  interface found on Nuvoton NPCM7xx SOCs.
  
  The driver implements the BMC side of the KCS contorller, it
  provides the access of KCS IO space for BMC side.
  
  This support is also available as a module.  If so, the module
  will be called kcs_bmc_npcm7xx.

NPCM7XX_TIMER
  Enable 24-bit TIMER0 and TIMER1 counters in the NPCM7xx architecture,
  where TIMER0 serves as clockevent and TIMER1 serves as clocksource.

NPCM7XX_WATCHDOG
  Say Y here to include Watchdog timer support for the
  watchdog embedded into the NPCM7xx.
  This watchdog is used to reset the system and thus cannot be
  compiled as a module.

NPCM_ADC
  Say yes here to build support for Nuvoton NPCM ADC.
  
  This driver can also be built as a module. If so, the module
  will be called npcm_adc.

NR_CPUS
  This allows you to specify the maximum number of CPUs which this
  kernel will support.  If CPUMASK_OFFSTACK is enabled, the maximum
  supported value is 8192, otherwise the maximum value is 512.  The
  minimum value which makes sense is 2.
  
  This is purely to save memory: each supported CPU adds about 8KB
  to the kernel image.

NR_CPUS_DEFAULT
  No help

NR_CPUS_RANGE_BEGIN
  No help

NR_CPUS_RANGE_END
  No help

NS83820
  This is a driver for the National Semiconductor DP83820 series
  of gigabit ethernet MACs.  Cards using this chipset include
  the D-Link DGE-500T, PureData's PDP8023Z-TG, SMC's SMC9462TX,
  SOHO-GA2000T, SOHO-GA2500T.  The driver supports the use of
  zero copy.

NSC_GPIO
  Common support used (and needed) by scx200_gpio and
  pc8736x_gpio drivers.  If those drivers are built as
  modules, this one will be too, named nsc_gpio

NSPIRE_TIMER
  Enables support for the Nspire timer.

NTB
  The PCI-E Non-transparent bridge hardware is a point-to-point PCI-E bus
  connecting 2 systems.  When configured, writes to the device's PCI
  mapped memory will be mirrored to a buffer on the remote system.  The
  ntb Linux driver uses this point-to-point communication as a method to
  transfer data from one system to the other.
  
  If unsure, say N.

NTB_AMD
  This driver supports AMD NTB on capable Zeppelin hardware.
  
  If unsure, say N.

NTB_IDT
  This driver supports NTB of capable IDT PCIe-switches.
  
  Some of the pre-initializations must be made before IDT PCIe-switch
  exposes its NT-functions correctly. It should be done by either proper
  initialization of EEPROM connected to master SMbus of the switch or
  by BIOS using slave-SMBus interface changing corresponding registers
  value. Evidently it must be done before PCI bus enumeration is
  finished in Linux kernel.
  
  First of all partitions must be activated and properly assigned to all
  the ports with NT-functions intended to be activated (see SWPARTxCTL
  and SWPORTxCTL registers). Then all NT-function BARs must be enabled
  with chosen valid aperture. For memory windows related BARs the
  aperture settings shall determine the maximum size of memory windows
  accepted by a BAR. Note that BAR0 must map PCI configuration space
  registers.
  
  It's worth to note, that since a part of this driver relies on the
  BAR settings of peer NT-functions, the BAR setups can't be done over
  kernel PCI fixups. That's why the alternative pre-initialization
  techniques like BIOS using SMBus interface or EEPROM should be
  utilized.
  
  If unsure, say N.
  

NTB_INTEL
  This driver supports Intel NTB on capable Xeon and Atom hardware.
  
  If unsure, say N.

NTB_MSI
  Support using MSI interrupt forwarding instead of (or in addition to)
  hardware doorbells. MSI interrupts typically offer lower latency
  than doorbells and more MSI interrupts can be made available to
  clients. However this requires an extra memory window and support
  in the hardware driver for creating the MSI interrupts.
  
  If unsure, say N.

NTB_MSI_TEST
  This tool demonstrates the use of the NTB MSI library to
  send MSI interrupts between peers.
  
  If unsure, say N.

NTB_NETDEV
  No help

NTB_PERF
  This is a tool to measure raw NTB performance by transferring data
  to and from the window without additional software interaction.
  
  If unsure, say N.

NTB_PINGPONG
  This is a simple ping pong driver that exercises the scratchpads and
  doorbells of the ntb hardware.  This driver may be used to test that
  your ntb hardware and drivers are functioning at a basic level.
  
  If unsure, say N.

NTB_SWITCHTEC
  Enables NTB support for Switchtec PCI switches. This also
  selects the Switchtec management driver as they share the same
  hardware interface.
  
  If unsure, say N.

NTB_TOOL
  This is a simple debugging driver that enables the doorbell and
  scratchpad registers to be read and written from the debugfs.  This
  enables more complicated debugging to be scripted from user space.
  This driver may be used to test that your ntb hardware and drivers are
  functioning at a basic level.
  
  If unsure, say N.

NTB_TRANSPORT
  This is a transport driver that enables connected systems to exchange
  messages over the ntb hardware.  The transport exposes a queue pair api
  to client drivers.
  
  If unsure, say N.

NTFS_DEBUG
  If you are experiencing any problems with the NTFS file system, say
  Y here.  This will result in additional consistency checks to be
  performed by the driver as well as additional debugging messages to
  be written to the system log.  Note that debugging messages are
  disabled by default.  To enable them, supply the option debug_msgs=1
  at the kernel command line when booting the kernel or as an option
  to insmod when loading the ntfs module.  Once the driver is active,
  you can enable debugging messages by doing (as root):
  echo 1 > /proc/sys/fs/ntfs-debug
  Replacing the "1" with "0" would disable debug messages.
  
  If you leave debugging messages disabled, this results in little
  overhead, but enabling debug messages results in very significant
  slowdown of the system.
  
  When reporting bugs, please try to have available a full dump of
  debugging messages while the misbehaviour was occurring.

NTFS_FS
  NTFS is the file system of Microsoft Windows NT, 2000, XP and 2003.
  
  Saying Y or M here enables read support.  There is partial, but
  safe, write support available.  For write support you must also
  say Y to "NTFS write support" below.
  
  There are also a number of user-space tools available, called
  ntfsprogs.  These include ntfsundelete and ntfsresize, that work
  without NTFS support enabled in the kernel.
  
  This is a rewrite from scratch of Linux NTFS support and replaced
  the old NTFS code starting with Linux 2.5.11.  A backport to
  the Linux 2.4 kernel series is separately available as a patch
  from the project web site.
  
  For more information see <file:Documentation/filesystems/ntfs.rst>
  and <http://www.linux-ntfs.org/>.
  
  To compile this file system support as a module, choose M here: the
  module will be called ntfs.
  
  If you are not using Windows NT, 2000, XP or 2003 in addition to
  Linux on your computer it is safe to say N.

NTFS_RW
  This enables the partial, but safe, write support in the NTFS driver.
  
  The only supported operation is overwriting existing files, without
  changing the file length.  No file or directory creation, deletion or
  renaming is possible.  Note only non-resident files can be written to
  so you may find that some very small files (<500 bytes or so) cannot
  be written to.
  
  While we cannot guarantee that it will not damage any data, we have
  so far not received a single report where the driver would have
  damaged someones data so we assume it is perfectly safe to use.
  
  Note:  While write support is safe in this version (a rewrite from
  scratch of the NTFS support), it should be noted that the old NTFS
  write support, included in Linux 2.5.10 and before (since 1997),
  is not safe.
  
  This is currently useful with TopologiLinux.  TopologiLinux is run
  on top of any DOS/Microsoft Windows system without partitioning your
  hard disk.  Unlike other Linux distributions TopologiLinux does not
  need its own partition.  For more information see
  <http://topologi-linux.sourceforge.net/>
  
  It is perfectly safe to say N here.

NTP_PPS
  This option adds support for direct in-kernel time
  synchronization using an external PPS signal.
  
  It doesn't work on tickless systems at the moment.

NULL_TTY
  Say Y here if you want a NULL TTY which simply discards messages.
  
  This is useful to allow userspace applications which expect a console
  device to work without modifications even when no console is
  available or desired.
  
  In order to use this driver, you should redirect the console to this
  TTY, or boot the kernel with console=ttynull.
  
  If unsure, say N.

NUMA
  Enable NUMA (Non-Uniform Memory Access) support.
  
  The kernel will try to allocate memory used by a CPU on the
  local memory controller of the CPU and add some more
  NUMA awareness to the kernel.
  
  For 64-bit this is recommended if the system is Intel Core i7
  (or later), AMD Opteron, or EM64T NUMA.
  
  For 32-bit this is only needed if you boot a 32-bit
  kernel on a 64-bit NUMA platform.
  
  Otherwise, you should say N.

NUMA_BALANCING
  This option adds support for automatic NUMA aware memory/task placement.
  The mechanism is quite primitive and is based on migrating memory when
  it has references to the node the task is running on.
  
  This system will be inactive on UMA systems.

NUMA_BALANCING_DEFAULT_ENABLED
  If set, automatic NUMA balancing will be enabled if running on a NUMA
  machine.

NUMA_EMU
  Enable NUMA emulation. A flat machine will be split
  into virtual nodes when booted with "numa=fake=N", where N is the
  number of nodes. This is only useful for debugging.

NUMA_KEEP_MEMINFO
  No help

NVDIMM_DAX
  Support raw device dax access to a persistent memory
  namespace.  For environments that want to hard partition
  persistent memory, this capability provides a mechanism to
  sub-divide a namespace into character devices that can only be
  accessed via DAX (mmap(2)).
  
  Select Y if unsure

NVDIMM_KEYS
  No help

NVDIMM_PFN
  Map persistent memory, i.e. advertise it to the memory
  management sub-system.  By default persistent memory does
  not support direct I/O, RDMA, or any other usage that
  requires a 'struct page' to mediate an I/O request.  This
  driver allocates and initializes the infrastructure needed
  to support those use cases.
  
  Select Y if unsure

NVDIMM_TEST_BUILD
  Build the core of the unit test infrastructure. The result of
  this build is non-functional for unit test execution, but it
  otherwise helps catch build errors induced by changes to the
  core devm_memremap_pages() implementation and other
  infrastructure.

NVEC_PAZ00
  Say Y to enable control of the yellow side leds on Compal PAZ00 based
  devices, e.g. Toshbia AC100 and Dynabooks AZ netbooks.
  
  To compile this driver as a module, say M here: the module will be
  called nvec-paz00
  

NVEC_POWER
  Say Y to enable support for battery and charger interface for
  nVidia compliant embedded controllers.
  
  To compile this driver as a module, say M here: the module will be
  called nvec-power

NVM
  Say Y here to get to enable Open-channel SSDs.
  
  Open-Channel SSDs implement a set of extension to SSDs, that
  exposes direct access to the underlying non-volatile memory.
  
  If you say N, all options in this submenu will be skipped and disabled
  only do this if you know what you are doing.

NVMEM
  Support for NVMEM(Non Volatile Memory) devices like EEPROM, EFUSES...
  
  This framework is designed to provide a generic interface to NVMEM
  from both the Linux Kernel and the userspace.
  
  If unsure, say no.

NVMEM_BCM_OCOTP
  Say y here to enable read/write access to the Broadcom OTP
  controller.
  
  This driver can also be built as a module. If so, the module
  will be called nvmem-bcm-ocotp.

NVMEM_IMX_IIM
  This is a driver for the IC Identification Module (IIM) available on
  i.MX SoCs, providing access to 4 Kbits of programmable
  eFuses.
  
  This driver can also be built as a module. If so, the module
  will be called nvmem-imx-iim.

NVMEM_IMX_OCOTP
  This is a driver for the On-Chip OTP Controller (OCOTP) available on
  i.MX6 SoCs, providing access to 4 Kbits of one-time programmable
  eFuses.
  
  This driver can also be built as a module. If so, the module
  will be called nvmem-imx-ocotp.

NVMEM_IMX_OCOTP_SCU
  This is a driver for the SCU On-Chip OTP Controller (OCOTP)
  available on i.MX8 SoCs.

NVMEM_LPC18XX_EEPROM
  Say Y here to include support for NXP LPC18xx EEPROM memory found in
  NXP LPC185x/3x and LPC435x/3x/2x/1x devices.
  To compile this driver as a module, choose M here: the module
  will be called nvmem_lpc18xx_eeprom.

NVMEM_LPC18XX_OTP
  Say Y here to include support for NXP LPC18xx OTP memory found on
  all LPC18xx and LPC43xx devices.
  To compile this driver as a module, choose M here: the module
  will be called nvmem_lpc18xx_otp.

NVMEM_MXS_OCOTP
  If you say Y here, you will get readonly access to the
  One Time Programmable memory pages that are stored
  on the Freescale i.MX23/i.MX28 processor.
  
  This driver can also be built as a module. If so, the module
  will be called nvmem-mxs-ocotp.

NVMEM_REBOOT_MODE
  Say y here will enable reboot mode driver. This will
  get reboot mode arguments and store it in a NVMEM cell,
  then the bootloader can read it and take different
  action according to the mode.

NVMEM_SNVS_LPGPR
  This is a driver for Low Power General Purpose Register (LPGPR) available on
  i.MX6 and i.MX7 SoCs in Secure Non-Volatile Storage (SNVS) of this chip.
  
  This driver can also be built as a module. If so, the module
  will be called nvmem-snvs-lpgpr.

NVMEM_SPMI_SDAM
  This driver supports the Shared Direct Access Memory Module on
  Qualcomm Technologies, Inc. PMICs. It provides the clients
  an interface to read/write to the SDAM module's shared memory.

NVMEM_STM32_ROMEM
  Say y here to enable read-only access for STMicroelectronics STM32
  factory-programmed memory area.
  
  This driver can also be built as a module. If so, the module
  will be called nvmem-stm32-romem.

NVMEM_SUNXI_SID
  This is a driver for the 'security ID' available on various Allwinner
  devices.
  
  This driver can also be built as a module. If so, the module
  will be called nvmem_sunxi_sid.

NVMEM_SYSFS
  Say Y here to add a sysfs interface for NVMEM.
  
  This interface is mostly used by userspace applications to
  read/write directly into nvmem.

NVMEM_VF610_OCOTP
  This is a driver for the 'OCOTP' peripheral available on Vybrid
  devices like VF5xx and VF6xx.
  
  This driver can also be build as a module. If so, the module will
  be called nvmem-vf610-ocotp.

NVMEM_ZYNQMP
  This is a driver to access hardware related data like
  soc revision, IDCODE... etc by using the firmware
  interface.
  
  If sure, say yes. If unsure, say no.

NVME_CORE
  No help

NVME_FABRICS
  No help

NVME_FC
  This provides support for the NVMe over Fabrics protocol using
  the FC transport.  This allows you to use remote block devices
  exported using the NVMe protocol set.
  
  To configure a NVMe over Fabrics controller use the nvme-cli tool
  from https://github.com/linux-nvme/nvme-cli.
  
  If unsure, say N.

NVME_HWMON
  This provides support for NVMe hardware monitoring. If enabled,
  a hardware monitoring device will be created for each NVMe drive
  in the system.

NVME_MULTIPATH
  This option enables support for multipath access to NVMe
  subsystems.  If this option is enabled only a single
  /dev/nvmeXnY device will show up for each NVMe namespaces,
  even if it is accessible through multiple controllers.

NVME_RDMA
  This provides support for the NVMe over Fabrics protocol using
  the RDMA (Infiniband, RoCE, iWarp) transport.  This allows you
  to use remote block devices exported using the NVMe protocol set.
  
  To configure a NVMe over Fabrics controller use the nvme-cli tool
  from https://github.com/linux-nvme/nvme-cli.
  
  If unsure, say N.

NVME_TARGET
  This enabled target side support for the NVMe protocol, that is
  it allows the Linux kernel to implement NVMe subsystems and
  controllers and export Linux block devices as NVMe namespaces.
  You need to select at least one of the transports below to make this
  functionality useful.
  
  To configure the NVMe target you probably want to use the nvmetcli
  tool from http://git.infradead.org/users/hch/nvmetcli.git.

NVME_TARGET_FC
  This enables the NVMe FC target support, which allows exporting NVMe
  devices over FC.
  
  If unsure, say N.

NVME_TARGET_FCLOOP
  This enables the NVMe FC loopback test support, which can be useful
  to test NVMe-FC transport interfaces.
  
  If unsure, say N.

NVME_TARGET_LOOP
  This enables the NVMe loopback device support, which can be useful
  to test NVMe host and target side features.
  
  If unsure, say N.

NVME_TARGET_PASSTHRU
  This enables target side NVMe passthru controller support for the
  NVMe Over Fabrics protocol. It allows for hosts to manage and
  directly access an actual NVMe controller residing on the target
  side, including executing Vendor Unique Commands.
  
  If unsure, say N.

NVME_TARGET_RDMA
  This enables the NVMe RDMA target support, which allows exporting NVMe
  devices over RDMA.
  
  If unsure, say N.

NVME_TARGET_TCP
  This enables the NVMe TCP target support, which allows exporting NVMe
  devices over TCP.
  
  If unsure, say N.

NVME_TCP
  This provides support for the NVMe over Fabrics protocol using
  the TCP transport.  This allows you to use remote block devices
  exported using the NVMe protocol set.
  
  To configure a NVMe over Fabrics controller use the nvme-cli tool
  from https://github.com/linux-nvme/nvme-cli.
  
  If unsure, say N.

NVM_PBLK
  Allows an open-channel SSD to be exposed as a block device to the
  host. The target assumes the device exposes raw flash and must be
  explicitly managed by the host.
  
  Please note the disk format is considered EXPERIMENTAL for now.

NVM_PBLK_DEBUG
  Enables debug support for pblk. This includes extra checks, more
  vocal error messages, and extra tracking fields in the pblk sysfs
  entries.

NVRAM
  If you say Y here and create a character special file /dev/nvram
  with major number 10 and minor number 144 using mknod ("man mknod"),
  you get read and write access to the non-volatile memory.
  
  /dev/nvram may be used to view settings in NVRAM or to change them
  (with some utility). It could also be used to frequently
  save a few bits of very important data that may not be lost over
  power-off and for which writing to disk is too insecure. Note
  however that most NVRAM space in a PC belongs to the BIOS and you
  should NEVER idly tamper with it. See Ralf Brown's interrupt list
  for a guide to the use of CMOS bytes by your BIOS.
  
  This memory is conventionally called "NVRAM" on PowerPC machines,
  "CMOS RAM" on PCs, "NVRAM" on Ataris and "PRAM" on Macintoshes.
  
  To compile this driver as a module, choose M here: the
  module will be called nvram.

NV_TCO
  Hardware driver for the TCO timer built into the nVidia Hub family
  (such as the MCP51).  The TCO (Total Cost of Ownership) timer is a
  watchdog timer that will reboot the machine after its second
  expiration. The expiration time can be configured with the
  "heartbeat" parameter.
  
  On some motherboards the driver may fail to reset the chipset's
  NO_REBOOT flag which prevents the watchdog from rebooting the
  machine. If this is the case you will get a kernel message like
  "failed to reset NO_REBOOT flag, reboot disabled by hardware".
  
  To compile this driver as a module, choose M here: the
  module will be called nv_tco.

NWBUTTON
  If you say Y here and create a character device node /dev/nwbutton
  with major and minor numbers 10 and 158 ("man mknod"), then every
  time the orange button is pressed a number of times, the number of
  times the button was pressed will be written to that device.
  
  This is most useful for applications, as yet unwritten, which
  perform actions based on how many times the button is pressed in a
  row.
  
  Do not hold the button down for too long, as the driver does not
  alter the behaviour of the hardware reset circuitry attached to the
  button; it will still execute a hard reset if the button is held
  down for longer than approximately five seconds.
  
  To compile this driver as a module, choose M here: the
  module will be called nwbutton.
  
  Most people will answer Y to this question and "Reboot Using Button"
  below to be able to initiate a system shutdown from the button.

NWBUTTON_REBOOT
  If you say Y here, then you will be able to initiate a system
  shutdown and reboot by pressing the orange button a number of times.
  The number of presses to initiate the shutdown is two by default,
  but this can be altered by modifying the value of NUM_PRESSES_REBOOT
  in nwbutton.h and recompiling the driver or, if you compile the
  driver as a module, you can specify the number of presses at load
  time with "insmod button reboot_count=<something>".

NWFLASH
  If you say Y here and create a character device /dev/flash with
  major 10 and minor 160 you can manipulate the flash ROM containing
  the NetWinder firmware. Be careful as accidentally overwriting the
  flash contents can render your computer unbootable. On no account
  allow random users access to this device. :-)
  
  To compile this driver as a module, choose M here: the
  module will be called nwflash.
  
  If you're not sure, say N.

NXP_TJA11XX_PHY
  Currently supports the NXP TJA1100 and TJA1101 PHY.

N_GSM
  This line discipline provides support for the GSM MUX protocol and
  presents the mux as a set of 61 individual tty devices.

N_HDLC
  Allows synchronous HDLC communications with tty device drivers that
  support synchronous HDLC such as the Microgate SyncLink adapter.
  
  This driver can be built as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called n_hdlc. If you want to do that, say M
  here.

OBJAGG
  No help

OCFS2_DEBUG_FS
  This option will enable expensive consistency checks. Enable
  this option for debugging only as it is likely to decrease
  performance of the filesystem.

OCFS2_DEBUG_MASKLOG
  The ocfs2 filesystem has an extensive logging system.  The system
  allows selection of events to log via files in /sys/o2cb/logmask/.
  This option will enlarge your kernel, but it allows debugging of
  ocfs2 filesystem issues.

OCFS2_FS
  OCFS2 is a general purpose extent based shared disk cluster file
  system with many similarities to ext3. It supports 64 bit inode
  numbers, and has automatically extending metadata groups which may
  also make it attractive for non-clustered use.
  
  You'll want to install the ocfs2-tools package in order to at least
  get "mount.ocfs2".
  
  Project web page:    https://oss.oracle.com/projects/ocfs2
  Tools web page:      https://oss.oracle.com/projects/ocfs2-tools
  OCFS2 mailing lists: https://oss.oracle.com/projects/ocfs2/mailman/
  
  For more information on OCFS2, see the file
  <file:Documentation/filesystems/ocfs2.rst>.

OCFS2_FS_O2CB
  OCFS2 includes a simple kernelspace clustering package, the OCFS2
  Cluster Base.  It only requires a very small userspace component
  to configure it. This comes with the standard ocfs2-tools package.
  O2CB is limited to maintaining a cluster for OCFS2 file systems.
  It cannot manage any other cluster applications.
  
  It is always safe to say Y here, as the clustering method is
  run-time selectable.

OCFS2_FS_STATS
  This option allows some fs statistics to be captured. Enabling
  this option may increase the memory consumption.

OCFS2_FS_USERSPACE_CLUSTER
  This option will allow OCFS2 to use userspace clustering services
  in conjunction with the DLM in fs/dlm.  If you are using a
  userspace cluster manager, say Y here.
  
  It is safe to say Y, as the clustering method is run-time
  selectable.

OCTEONTX2_AF
  This driver supports Marvell's OcteonTX2 Resource Virtualization
  Unit's admin function manager which manages all RVU HW resources
  and provides a medium to other PF/VFs to configure HW. Should be
  enabled for other RVU device drivers to work.

OCTEONTX2_MBOX
  No help

OCTEONTX2_PF
  This driver supports Marvell's OcteonTX2 NIC physical function.

OCTEONTX2_VF
  This driver supports Marvell's OcteonTX2 NIC virtual function.

OCTEON_ETHERNET
  This driver supports the builtin ethernet ports on Cavium
  Networks' products in the Octeon family. This driver supports the
  CN3XXX and CN5XXX Octeon processors.
  
  To compile this driver as a module, choose M here.  The module
  will be called octeon-ethernet.
  

OCTEON_MGMT_ETHERNET
  Enable the ethernet driver for the management
  port on Cavium Networks' Octeon CN57XX, CN56XX, CN55XX,
  CN54XX, CN52XX, and CN6XXX chips.

OCTEON_USB
  This driver supports USB host controller on some Cavium
  Networks' products in the Octeon family.
  
  To compile this driver as a module, choose M here. The module
  will be called octeon-hcd.
  

OCTEON_WDT
  Hardware driver for OCTEON's on chip watchdog timer.
  Enables the watchdog for all cores running Linux. It
  installs a NMI handler and pokes the watchdog based on an
  interrupt.  On first expiration of the watchdog, the
  interrupt handler pokes it.  The second expiration causes an
  NMI that prints a message. The third expiration causes a
  global soft reset.
  
  When userspace has /dev/watchdog open, no poking is done
  from the first interrupt, it is then only poked when the
  device is written.

OCXL
  Select this option to enable the ocxl driver for Open
  Coherent Accelerator Processor Interface (OpenCAPI) devices.
  
  OpenCAPI allows FPGA and ASIC accelerators to be coherently
  attached to a CPU over an OpenCAPI link.
  
  The ocxl driver enables userspace programs to access these
  accelerators through devices in /dev/ocxl/.
  
  For more information, see https://opencapi.org.
  
  This is not to be confused with the support for IBM CAPI
  accelerators (CONFIG_CXL), which are PCI-based instead of a
  dedicated OpenCAPI link, and don't follow the same protocol.
  
  If unsure, say N.

OCXL_BASE
  No help

ODD_RT_SIGACTION
  Architecture has unusual rt_sigaction(2) arguments

OF
  This option enables the device tree infrastructure.
  It is automatically selected by platforms that need it or can
  be enabled manually for unittests, overlays or
  compile-coverage.

OF_ADDRESS
  No help

OF_ALL_DTBS
  This option builds all possible Device Tree Blobs (DTBs) for the
  current architecture.
  
  If unsure, say N here, but this option is safe to enable.

OF_DMA_DEFAULT_COHERENT
  No help

OF_DYNAMIC
  On some platforms, the device tree can be manipulated at runtime.
  While this option is selected automatically on such platforms, you
  can enable it manually to improve device tree unit test coverage.

OF_EARLY_FLATTREE
  No help

OF_FLATTREE
  No help

OF_FPGA_REGION
  Support for loading FPGA images by applying a Device Tree
  overlay.

OF_GPIO
  No help

OF_IOMMU
  No help

OF_IRQ
  No help

OF_KOBJ
  No help

OF_MDIO
  OpenFirmware MDIO bus (Ethernet PHY) accessors

OF_NET
  No help

OF_NUMA
  No help

OF_OVERLAY
  Overlays are a method to dynamically modify part of the kernel's
  device tree with dynamically loaded data.
  While this option is selected automatically when needed, you can
  enable it manually to improve device tree unit test coverage.

OF_PMEM
  Allows regions of persistent memory to be described in the
  device-tree.
  
  Select Y if unsure.

OF_PROMTREE
  No help

OF_RECONFIG_NOTIFIER_ERROR_INJECT
  This option provides the ability to inject artificial errors to
  OF reconfig notifier chain callbacks.  It is controlled
  through debugfs interface under
  /sys/kernel/debug/notifier-error-inject/OF-reconfig/
  
  If the notifier call chain should be failed with some events
  notified, write the error code to "actions/<notifier event>/error".
  
  To compile this code as a module, choose M here: the module will
  be called of-reconfig-notifier-error-inject.
  
  If unsure, say N.

OF_RESERVED_MEM
  No help

OF_RESOLVE
  No help

OF_UNITTEST
  This option builds in test cases for the device tree infrastructure
  that are executed once at boot time, and the results dumped to the
  console.
  
  If unsure, say N here, but this option is safe to enable.

OID_REGISTRY
  Enable fast lookup object identifier registry.

OLD_SIGACTION
  Architecture has old sigaction(2) syscall.  Nope, not the same
  as OLD_SIGSUSPEND | OLD_SIGSUSPEND3 - alpha has sigsuspend(2),
  but fairly different variant of sigaction(2), thanks to OSF/1
  compatibility...

OLD_SIGSUSPEND
  Architecture has old sigsuspend(2) syscall, of one-argument variety

OLD_SIGSUSPEND3
  Even weirder antique ABI - three-argument sigsuspend(2)

OLPC
  Add support for detecting the unique features of the OLPC
  XO hardware.

OLPC_EC
  No help

OLPC_XO15_SCI
  Add support for SCI-based features of the OLPC XO-1.5 laptop:
   - EC-driven system wakeups
   - AC adapter status updates
   - Battery status updates

OLPC_XO175
  Say Y here to get to see options for the ARM-based OLPC platform.
  This option alone does not add any kernel code.
  
  Unless you have an OLPC XO laptop, you will want to say N.

OLPC_XO175_EC
  Include support for the OLPC XO Embedded Controller (EC). The EC
  provides various platform services, including support for the power,
  button, restart, shutdown and battery charging status.
  
  Unless you have an OLPC XO laptop, you will want to say N.

OLPC_XO1_PM
  Add support for poweroff and suspend of the OLPC XO-1 laptop.

OLPC_XO1_RTC
  Add support for the XO-1 real time clock, which can be used as a
  programmable wakeup source.

OLPC_XO1_SCI
  Add support for SCI-based features of the OLPC XO-1 laptop:
   - EC-driven system wakeups
   - Power button
   - Ebook switch
   - Lid switch
   - AC adapter status updates
   - Battery status updates

OMAP2PLUS_MBOX
  Mailbox implementation for OMAP family chips with hardware for
  interprocessor communication involving DSP, IVA1.0 and IVA2 in
  OMAP2/3; or IPU, IVA HD and DSP in OMAP4/5. Say Y here if you
  want to use OMAP2+ Mailbox framework support.

OMAP2_DSS
  OMAP2+ Display Subsystem support.

OMAP2_DSS_COLLECT_IRQ_STATS
  Collect DSS IRQ statistics, printable via debugfs.
  
  The statistics can be found from
  <debugfs>/omapdss/dispc_irq for DISPC interrupts, and
  <debugfs>/omapdss/dsi_irq for DSI interrupts.

OMAP2_DSS_DEBUG
  This enables printing of debug messages. Alternatively, debug messages
  can also be enabled by setting CONFIG_DYNAMIC_DEBUG and then setting
  appropriate flags in <debugfs>/dynamic_debug/control.

OMAP2_DSS_DEBUGFS
  This enables debugfs for OMAPDSS at <debugfs>/omapdss. This enables
  querying about clock configuration and register configuration of dss,
  dispc, dsi, hdmi and rfbi.

OMAP2_DSS_DPI
  DPI Interface. This is the Parallel Display Interface.

OMAP2_DSS_DSI
  MIPI DSI (Display Serial Interface) support.
  
  DSI is a high speed half-duplex serial interface between the host
  processor and a peripheral, such as a display or a framebuffer chip.
  
  See https://www.mipi.org/ for DSI specifications.

OMAP2_DSS_HDMI_COMMON
  No help

OMAP2_DSS_INIT
  No help

OMAP2_DSS_MIN_FCK_PER_PCK
  This can be used to adjust the minimum FCK/PCK ratio.
  
  With this you can make sure that DISPC FCK is at least
  n x PCK. Video plane scaling requires higher FCK than
  normally.
  
  If this is set to 0, there's no extra constraint on the
  DISPC FCK. However, the FCK will at minimum be
  2xPCK (if active matrix) or 3xPCK (if passive matrix).
  
  Max FCK is 173MHz, so this doesn't work if your PCK
  is very high.

OMAP2_DSS_SDI
  SDI (Serial Display Interface) support.
  
  SDI is a high speed one-way display serial bus between the host
  processor and a display.

OMAP2_DSS_SLEEP_AFTER_VENC_RESET
  There is a 20ms sleep after VENC reset which seemed to fix the
  reset. The reason for the bug is unclear, and it's also unclear
  on what platforms this happens.
  
  This option enables the sleep, and is enabled by default. You can
  disable the sleep if it doesn't cause problems on your platform.

OMAP2_DSS_VENC
  OMAP Video Encoder support for S-Video and composite TV-out.

OMAP2_VRFB
  No help

OMAP3_THERMAL
  If you say yes here you get thermal support for the Texas Instruments
  OMAP3 SoC family. The current chips supported are:
   - OMAP3430
  
  OMAP3 chips normally don't need thermal management, and sensors in
  this generation are not accurate, nor they are very close to
  the important hotspots.
  
  Say 'N' here.

OMAP4_DSS_HDMI
  HDMI support for OMAP4 based SoCs.

OMAP4_DSS_HDMI_CEC
  When selected the HDMI transmitter will support the CEC feature.

OMAP4_THERMAL
  If you say yes here you get thermal support for the Texas Instruments
  OMAP4 SoC family. The current chip supported are:
   - OMAP4430
   - OMAP4460
   - OMAP4470
  
  This includes alert interrupts generation and also the TSHUT
  support.

OMAP5_DSS_HDMI
  HDMI Interface for OMAP5 and similar cores. This adds the High
  Definition Multimedia Interface. See https://www.hdmi.org/ for HDMI
  specification.

OMAP5_THERMAL
  If you say yes here you get thermal support for the Texas Instruments
  OMAP5 SoC family. The current chip supported are:
   - OMAP5430
  
  This includes alert interrupts generation and also the TSHUT
  support.

OMAP_CF
  Say Y here to support the CompactFlash controller on OMAP.
  Note that this doesn't support "True IDE" mode.

OMAP_CONTROL_PHY
  Enable this to add support for the PHY part present in the control
  module. This driver has API to power on the USB2 PHY and to write to
  the mailbox. The mailbox is present only in omap4 and the register to
  power on the USB2 PHY is present in OMAP4 and OMAP5. OMAP5 has an
  additional register to power on USB3 PHY/SATA PHY/PCIE PHY
  (PIPE3 PHY).

OMAP_DM_TIMER
  No help

OMAP_DSS_BASE
  No help

OMAP_GPMC
  This driver is for the General Purpose Memory Controller (GPMC)
  present on Texas Instruments SoCs (e.g. OMAP2+). GPMC allows
  interfacing to a variety of asynchronous as well as synchronous
  memory drives like NOR, NAND, OneNAND, SRAM.

OMAP_GPMC_DEBUG
  Enables verbose debugging mostly to decode the bootloader provided
  timings. To preserve the bootloader provided timings, the reset
  of GPMC is skipped during init. Enable this during development to
  configure devices connected to the GPMC bus.
  
  NOTE: In addition to matching the register setup with the bootloader
  you also need to match the GPMC FCLK frequency used by the
  bootloader or else the GPMC timings won't be identical with the
  bootloader timings.

OMAP_INTERCONNECT
  Driver to enable OMAP interconnect error handling driver.

OMAP_IOMMU
  The OMAP3 media platform drivers depend on iommu support,
  if you need them say Y here.

OMAP_IOMMU_DEBUG
  Select this to see extensive information about
  the internal state of OMAP IOMMU in debugfs.
  
  Say N unless you know you need this.

OMAP_IRQCHIP
  No help

OMAP_MBOX_KFIFO_SIZE
  Specify the default size of mailbox's kfifo buffers (bytes).
  This can also be changed at runtime (via the mbox_kfifo_size
  module parameter).

OMAP_OCP2SCP
  Driver to enable ocp2scp module which transforms ocp interface
  protocol to scp protocol. In OMAP4, USB PHY is connected via
  OCP2SCP and in OMAP5, both USB PHY and SATA PHY is connected via
  OCP2SCP.

OMAP_OTG
  Enable this to support some transceivers on OMAP1 platforms. OTG
  controller is needed to switch between host and peripheral modes.
  
  This driver can also be built as a module. If so, the module
  will be called phy-omap-otg.

OMAP_REMOTEPROC
  Say y here to support OMAP's remote processors (dual M3
  and DSP on OMAP4) via the remote processor framework.
  
  Currently only supported on OMAP4.
  
  Usually you want to say Y here, in order to enable multimedia
  use-cases to run on your platform (multimedia codecs are
  offloaded to remote DSP processors using this framework).
  
  It's safe to say N here if you're not interested in multimedia
  offloading or just want a bare minimum kernel.

OMAP_REMOTEPROC_WATCHDOG
  Say Y here to enable watchdog timer for remote processors.
  
  This option controls the watchdog functionality for the remote
  processors in OMAP. Dedicated OMAP DMTimers are used by the remote
  processors and triggers the timer interrupt upon a watchdog
  detection.

OMAP_SSI
  SSI is a legacy version of HSI. It is usually used to connect
  an application engine with a cellular modem.
  If you say Y here, you will enable the OMAP SSI hardware driver.
  
  If unsure, say N.

OMAP_USB2
  Enable this to support the transceiver that is part of SOC. This
  driver takes care of all the PHY functionality apart from comparator.
  The USB OTG controller communicates with the comparator using this
  driver.

OMAP_WATCHDOG
  Support for TI OMAP1610/OMAP1710/OMAP2420/OMAP3430/OMAP4430 watchdog.  Say 'Y'
  here to enable the OMAP1610/OMAP1710/OMAP2420/OMAP3430/OMAP4430 watchdog timer.

OMFS_FS
  This is the proprietary file system used by the Rio Karma music
  player and ReplayTV DVR.  Despite the name, this filesystem is not
  more efficient than a standard FS for MPEG files, in fact likely
  the opposite is true.  Say Y if you have either of these devices
  and wish to mount its disk.
  
  To compile this file system support as a module, choose M here: the
  module will be called omfs.  If unsure, say N.

OMPIC
  No help

OPENVSWITCH
  Open vSwitch is a multilayer Ethernet switch targeted at virtualized
  environments.  In addition to supporting a variety of features
  expected in a traditional hardware switch, it enables fine-grained
  programmatic extension and flow-based control of the network.  This
  control is useful in a wide variety of applications but is
  particularly important in multi-server virtualization deployments,
  which are often characterized by highly dynamic endpoints and the
  need to maintain logical abstractions for multiple tenants.
  
  The Open vSwitch datapath provides an in-kernel fast path for packet
  forwarding.  It is complemented by a userspace daemon, ovs-vswitchd,
  which is able to accept configuration from a variety of sources and
  translate it into packet processing rules.
  
  See http://openvswitch.org for more information and userspace
  utilities.
  
  To compile this code as a module, choose M here: the module will be
  called openvswitch.
  
  If unsure, say N.

OPENVSWITCH_GENEVE
  If you say Y here, then the Open vSwitch will be able create geneve vport.
  
  Say N to exclude this support and reduce the binary size.

OPENVSWITCH_GRE
  If you say Y here, then the Open vSwitch will be able create GRE
  vport.
  
  Say N to exclude this support and reduce the binary size.
  
  If unsure, say Y.

OPENVSWITCH_VXLAN
  If you say Y here, then the Open vSwitch will be able create vxlan vport.
  
  Say N to exclude this support and reduce the binary size.
  
  If unsure, say Y.

OPROFILE
  OProfile is a profiling system capable of profiling the
  whole system, include the kernel, kernel modules, libraries,
  and applications.
  
  If unsure, say N.

OPROFILE_EVENT_MULTIPLEX
  The number of hardware counters is limited. The multiplexing
  feature enables OProfile to gather more events than counters
  are provided by the hardware. This is realized by switching
  between events at a user specified time interval.
  
  If unsure, say N.

OPROFILE_NMI_TIMER
  No help

OPT3001
  If you say Y or M here, you get support for Texas Instruments
  OPT3001 Ambient Light Sensor.
  
  If built as a dynamically linked module, it will be called
  opt3001.

OPTEE
  This implements the OP-TEE Trusted Execution Environment (TEE)
  driver.

OPTEE_SHM_NUM_PRIV_PAGES
  This sets the number of private shared memory pages to be
  used by OP-TEE TEE driver.

OPTPROBES
  No help

OR1K_PIC
  No help

ORANGEFS_FS
  Orange is a parallel file system designed for use on high end
  computing (HEC) systems.

ORINOCO_USB
  This driver is for USB versions of the Agere Orinoco card.

ORION_CLK
  No help

ORION_IRQCHIP
  No help

ORION_TIMER
  Enables the support for the Orion timer driver

ORION_WATCHDOG
  Say Y here if to include support for the watchdog timer
  in the Marvell Orion5x and Kirkwood ARM SoCs.
  To compile this driver as a module, choose M here: the
  module will be called orion_wdt.

OSF4_COMPAT
  Say Y if you are using OSF/1 binaries (like Netscape and Acrobat)
  with v4 shared libraries freely available from Compaq. If you're
  going to use shared libraries from Tru64 version 5.0 or later, say N.

OSF_PARTITION
  Say Y here if you would like to use hard disks under Linux which
  were partitioned on an Alpha machine.

OUTPUT_FORMAT
  No help

OVERLAY_FS
  An overlay filesystem combines two filesystems - an 'upper' filesystem
  and a 'lower' filesystem.  When a name exists in both filesystems, the
  object in the 'upper' filesystem is visible while the object in the
  'lower' filesystem is either hidden or, in the case of directories,
  merged with the 'upper' object.
  
  For more information see Documentation/filesystems/overlayfs.rst

OVERLAY_FS_INDEX
  If this config option is enabled then overlay filesystems will use
  the index directory to map lower inodes to upper inodes by default.
  In this case it is still possible to turn off index globally with the
  "index=off" module option or on a filesystem instance basis with the
  "index=off" mount option.
  
  The inodes index feature prevents breaking of lower hardlinks on copy
  up.
  
  Note, that the inodes index feature is not backward compatible.
  That is, mounting an overlay which has an inodes index on a kernel
  that doesn't support this feature will have unexpected results.
  
  If unsure, say N.

OVERLAY_FS_METACOPY
  If this config option is enabled then overlay filesystems will
  copy up only metadata where appropriate and data copy up will
  happen when a file is opened for WRITE operation. It is still
  possible to turn off this feature globally with the "metacopy=off"
  module option or on a filesystem instance basis with the
  "metacopy=off" mount option.
  
  Note, that this feature is not backward compatible.  That is,
  mounting an overlay which has metacopy only inodes on a kernel
  that doesn't support this feature will have unexpected results.
  
  If unsure, say N.

OVERLAY_FS_NFS_EXPORT
  If this config option is enabled then overlay filesystems will use
  the index directory to decode overlay NFS file handles by default.
  In this case, it is still possible to turn off NFS export support
  globally with the "nfs_export=off" module option or on a filesystem
  instance basis with the "nfs_export=off" mount option.
  
  The NFS export feature creates an index on copy up of every file and
  directory.  This full index is used to detect overlay filesystems
  inconsistencies on lookup, like redirect from multiple upper dirs to
  the same lower dir.  The full index may incur some overhead on mount
  time, especially when verifying that directory file handles are not
  stale.
  
  Note, that the NFS export feature is not backward compatible.
  That is, mounting an overlay which has a full index on a kernel
  that doesn't support this feature will have unexpected results.
  
  Most users should say N here and enable this feature on a case-by-
  case basis with the "nfs_export=on" mount option.
  
  Say N unless you fully understand the consequences.

OVERLAY_FS_REDIRECT_ALWAYS_FOLLOW
  Disable this to get a possibly more secure configuration, but that
  might not be backward compatible with previous kernels.
  
  If backward compatibility is not an issue, then it is safe and
  recommended to say N here.
  
  For more information, see Documentation/filesystems/overlayfs.rst
  
  If unsure, say Y.

OVERLAY_FS_REDIRECT_DIR
  If this config option is enabled then overlay filesystems will use
  redirects when renaming directories by default.  In this case it is
  still possible to turn off redirects globally with the
  "redirect_dir=off" module option or on a filesystem instance basis
  with the "redirect_dir=off" mount option.
  
  Note, that redirects are not backward compatible.  That is, mounting
  an overlay which has redirects on a kernel that doesn't support this
  feature will have unexpected results.
  
  If unsure, say N.

OVERLAY_FS_XINO_AUTO
  If this config option is enabled then overlay filesystems will use
  unused high bits in undelying filesystem inode numbers to map all
  inodes to a unified address space.  The mapped 64bit inode numbers
  might not be compatible with applications that expect 32bit inodes.
  
  If compatibility with applications that expect 32bit inodes is not an
  issue, then it is safe and recommended to say Y here.
  
  For more information, see Documentation/filesystems/overlayfs.rst
  
  If unsure, say N.

OWL_DMA
  Enable support for the Actions Semi Owl SoCs DMA controller.

OWL_PM_DOMAINS
  Say 'y' here to enable support for Smart Power System (SPS)
  power-gating on Actions Semiconductor S500, S700 and S900 SoCs.
  If unsure, say 'n'.

OWL_PM_DOMAINS_HELPER
  No help

OWL_TIMER
  Enables the support for the Actions Semi Owl timer driver.

OXNAS_RPS_TIMER
  This enables support for the Oxford Semiconductor OXNAS RPS timers.

P54_COMMON
  This is common code for isl38xx/stlc45xx based modules.
  This module does nothing by itself - the USB/PCI/SPI front-ends
  also need to be enabled in order to support any devices.
  
  These devices require softmac firmware which can be found at
  <http://wireless.wiki.kernel.org/en/users/Drivers/p54>
  
  If you choose to build a module, it'll be called p54common.

P54_LEDS
  No help

P54_PCI
  This driver is for PCI isl38xx based wireless cards.
  This driver supports most devices that are supported by the
  fullmac prism54 driver plus many devices which are not
  supported by the fullmac driver/firmware.
  
  This driver requires softmac firmware which can be found at
  <http://wireless.wiki.kernel.org/en/users/Drivers/p54>
  
  If you choose to build a module, it'll be called p54pci.

P54_SPI
  This driver is for stlc4550 or stlc4560 based wireless chips
  such as Nokia's N800/N810 Portable Internet Tablet.
  
  If you choose to build a module, it'll be called p54spi.

P54_SPI_DEFAULT_EEPROM
  Unlike the PCI or USB devices, the SPI variants don't have
  a dedicated EEPROM chip to store all device specific values
  for calibration, country and interface settings.
  
  The driver will try to load the image "3826.eeprom", if the
  file is put at the right place. (usually /lib/firmware.)
  
  Only if this request fails, this option will provide a
  backup set of generic values to get the device working.
  
  Enabling this option adds about 4k to p54spi.

P54_USB
  This driver is for USB isl38xx based wireless cards.
  
  These devices require softmac firmware which can be found at
  <http://wireless.wiki.kernel.org/en/users/Drivers/p54>
  
  If you choose to build a module, it'll be called p54usb.

PA12203001
  If you say yes here you get support for the TXC PA12203001
  ambient light and proximity sensor.
  
  This driver can also be built as a module.  If so, the module
  will be called pa12203001.

PACKET
  The Packet protocol is used by applications which communicate
  directly with network devices without an intermediate network
  protocol implemented in the kernel, e.g. tcpdump.  If you want them
  to work, choose Y.
  
  To compile this driver as a module, choose M here: the module will
  be called af_packet.
  
  If unsure, say Y.

PACKET_DIAG
  Support for PF_PACKET sockets monitoring interface used by the ss tool.
  If unsure, say Y.

PACKING
  This option provides the packing() helper function, which permits
  converting bitfields between a CPU-usable representation and a
  memory representation that can have any combination of these quirks:
    - Is little endian (bytes are reversed within a 32-bit group)
    - The least-significant 32-bit word comes first (within a 64-bit
      group)
    - The most significant bit of a byte is at its right (bit 0 of a
      register description is numerically 2^7).
  Drivers may use these helpers to match the bit indices as described
  in the data sheets of the peripherals they are in control of.
  
  When in doubt, say N.

PADATA
  No help

PAGE_COUNTER
  No help

PAGE_EXTENSION
  Extend memmap on extra space for more information on page. This
  could be used for debugging features that need to insert extra
  field for every page. This extension enables us to save memory
  by not allocating this extra memory according to boottime
  configuration.

PAGE_OFFSET
  No help

PAGE_OWNER
  This keeps track of what call chain is the owner of a page, may
  help to find bare alloc_page(s) leaks. Even if you include this
  feature on your build, it is disabled in default. You should pass
  "page_owner=on" to boot parameter in order to enable it. Eats
  a fair amount of memory if enabled. See tools/vm/page_owner_sort.c
  for user-space helper.
  
  If unsure, say N.

PAGE_POISONING
  Fill the pages with poison patterns after free_pages() and verify
  the patterns before alloc_pages. The filling of the memory helps
  reduce the risk of information leaks from freed data. This does
  have a potential performance impact if enabled with the
  "page_poison=1" kernel boot option.
  
  Note that "poison" here is not the same thing as the "HWPoison"
  for CONFIG_MEMORY_FAILURE. This is software poisoning only.
  
  If you are only interested in sanitization of freed pages without
  checking the poison pattern on alloc, you can boot the kernel with
  "init_on_free=1" instead of enabling this.
  
  If unsure, say N

PAGE_POOL
  No help

PAGE_REPORTING
  Free page reporting allows for the incremental acquisition of
  free pages from the buddy allocator for the purpose of reporting
  those pages to another entity, such as a hypervisor, so that the
  memory can be freed within the host for other uses.

PAGE_TABLE_ISOLATION
  This feature reduces the number of hardware side channels by
  ensuring that the majority of kernel addresses are not mapped
  into userspace.
  
  See Documentation/x86/pti.rst for more details.

PAHOLE_HAS_SPLIT_BTF
  No help

PALMAS_GPADC
  Palmas series pmic chip by Texas Instruments (twl6035/6037)
  is used in smartphones and tablets and supports a 16 channel
  general purpose ADC.

PANASONIC_LAPTOP
  This driver adds support for access to backlight control and hotkeys
  on Panasonic Let's Note laptops.
  
  If you have a Panasonic Let's note laptop (such as the R1(N variant),
  R2, R3, R5, T2, W2 and Y2 series), say Y.

PANEL
  No help

PANEL_BOOT_MESSAGE
  This allows you to replace the boot message indicating the kernel version
  and the driver version with a custom message. This is useful on appliances
  where a simple 'Starting system' message can be enough to stop a customer
  from worrying.
  
  An empty message will only clear the display at driver init time. Any other
  printf()-formatted message is valid with newline and escape codes.

PANEL_CHANGE_MESSAGE
  This allows you to replace the boot message indicating the kernel version
  and the driver version with a custom message. This is useful on appliances
  where a simple 'Starting system' message can be enough to stop a customer
  from worrying.
  
  If you say 'Y' here, you'll be able to choose a message yourself. Otherwise,
  say 'N' and keep the default message with the version.

PANEL_KEYPAD
  This enables and configures a keypad connected to the parallel port.
  The keys will be read from character device 10,185. Valid values are :
  
    0 : do not enable this driver
    1 : old 6 keys keypad
    2 : new 6 keys keypad, as used on the server at www.ant-computing.com
    3 : Nexcom NSA1045's 4 keys keypad
  
  New profiles can be described in the driver source. The driver also
  supports simultaneous keys pressed when the keypad supports them.

PANEL_LCD
  This enables and configures an LCD connected to the parallel port.
  The driver includes an interpreter for escape codes starting with
  '\e[L' which are specific to the LCD, and a few ANSI codes. The
  driver will be registered as character device 10,156, usually
  under the name '/dev/lcd'. There are a total of 6 supported types :
  
    0 : do not enable the driver
    1 : custom configuration and wiring (see further)
    2 : 2x16 & 2x40 parallel LCD (old wiring)
    3 : 2x16 serial LCD (KS-0074 based)
    4 : 2x16 parallel LCD (Hantronix wiring)
    5 : 2x16 parallel LCD (Nexcom wiring)
  
  When type '1' is specified, other options will appear to configure
  more precise aspects (wiring, dimensions, protocol, ...). Please note
  that those values changed from the 2.4 driver for better consistency.

PANEL_LCD_BWIDTH
  Most LCDs use a standard controller which supports hardware lines of 40
  characters, although sometimes only 16, 20 or 24 of them are really wired
  to the terminal. This results in some non-visible but addressable characters,
  and is the case for most parallel LCDs. Other LCDs, and some serial ones,
  however, use the same line width internally as what is visible. The KS0074
  for example, uses 16 characters per line for 16 visible characters per line.
  
  This option lets you configure the value used by your LCD in 'custom' profile.
  If you don't know, put '40' here.

PANEL_LCD_CHARSET
  Some controllers such as the KS0074 use a somewhat strange character set
  where many symbols are at unusual places. The driver knows how to map
  'standard' ASCII characters to the character sets used by these controllers.
  Valid values are :
  
     0 : normal (untranslated) character set
     1 : KS0074 character set
  
  If you don't know, use the normal one (0).

PANEL_LCD_HEIGHT
  This is the number of visible character lines on the LCD in custom profile.
  It can either be 1 or 2.

PANEL_LCD_HWIDTH
  Most LCDs use a single address bit to differentiate line 0 and line 1. Since
  some of them need to be able to address 40 chars with the lower bits, they
  often use the immediately superior power of 2, which is 64, to address the
  next line.
  
  If you don't know what your LCD uses, in doubt let 16 here for a 2x16, and
  64 here for a 2x40.

PANEL_LCD_PIN_BL
  This describes the number of the parallel port pin to which the LCD 'BL' signal
  has been connected. It can be :
  
          0 : no connection (eg: connected to ground)
      1..17 : directly connected to any of these pins on the DB25 plug
    -1..-17 : connected to the same pin through an inverter (eg: transistor).
  
  Default for the 'BL' pin in custom profile is '0' (uncontrolled).

PANEL_LCD_PIN_E
  This describes the number of the parallel port pin to which the LCD 'E'
  signal has been connected. It can be :
  
          0 : no connection (eg: connected to ground)
      1..17 : directly connected to any of these pins on the DB25 plug
    -1..-17 : connected to the same pin through an inverter (eg: transistor).
  
  Default for the 'E' pin in custom profile is '14' (AUTOFEED).

PANEL_LCD_PIN_RS
  This describes the number of the parallel port pin to which the LCD 'RS'
  signal has been connected. It can be :
  
          0 : no connection (eg: connected to ground)
      1..17 : directly connected to any of these pins on the DB25 plug
    -1..-17 : connected to the same pin through an inverter (eg: transistor).
  
  Default for the 'RS' pin in custom profile is '17' (SELECT IN).

PANEL_LCD_PIN_RW
  This describes the number of the parallel port pin to which the LCD 'RW'
  signal has been connected. It can be :
  
          0 : no connection (eg: connected to ground)
      1..17 : directly connected to any of these pins on the DB25 plug
    -1..-17 : connected to the same pin through an inverter (eg: transistor).
  
  Default for the 'RW' pin in custom profile is '16' (INIT).

PANEL_LCD_PIN_SCL
  This describes the number of the parallel port pin to which the serial
  LCD 'SCL' signal has been connected. It can be :
  
          0 : no connection (eg: connected to ground)
      1..17 : directly connected to any of these pins on the DB25 plug
    -1..-17 : connected to the same pin through an inverter (eg: transistor).
  
  Default for the 'SCL' pin in custom profile is '1' (STROBE).

PANEL_LCD_PIN_SDA
  This describes the number of the parallel port pin to which the serial
  LCD 'SDA' signal has been connected. It can be :
  
          0 : no connection (eg: connected to ground)
      1..17 : directly connected to any of these pins on the DB25 plug
    -1..-17 : connected to the same pin through an inverter (eg: transistor).
  
  Default for the 'SDA' pin in custom profile is '2' (D0).

PANEL_LCD_PROTO
  This driver now supports any serial or parallel LCD wired to a parallel
  port. But before assigning signals, the driver needs to know if it will
  be driving a serial LCD or a parallel one. Serial LCDs only use 2 wires
  (SDA/SCL), while parallel ones use 2 or 3 wires for the control signals
  (E, RS, sometimes RW), and 4 or 8 for the data. Use 0 here for a 8 bits
  parallel LCD, and 1 for a serial LCD.

PANEL_LCD_WIDTH
  This is the number of characters per line on the LCD in custom profile.
  Common values are 16,20,24,40.

PANEL_PARPORT
  This is the index of the parallel port the panel is connected to. One
  driver instance only supports one parallel port, so if your keypad
  and LCD are connected to two separate ports, you have to start two
  modules with different arguments. Numbering starts with '0' for LPT1,
  and so on.

PANEL_PROFILE
  To ease configuration, the driver supports different configuration
  profiles for past and recent wirings. These profiles can also be
  used to define an approximative configuration, completed by a few
  other options. Here are the profiles :
  
    0 = custom (see further)
    1 = 2x16 parallel LCD, old keypad
    2 = 2x16 serial LCD (KS-0074), new keypad
    3 = 2x16 parallel LCD (Hantronix), no keypad
    4 = 2x16 parallel LCD (Nexcom NSA1045) with Nexcom's keypad
    5 = 2x40 parallel LCD (old one), with old keypad
  
  Custom configurations allow you to define how your display is
  wired to the parallel port, and how it works. This is only intended
  for experts.

PANIC_ON_OOPS
  Say Y here to enable the kernel to panic when it oopses. This
  has the same effect as setting oops=panic on the kernel command
  line.
  
  This feature is useful to ensure that the kernel does not do
  anything erroneous after an oops which could result in data
  corruption or other issues.
  
  Say N if unsure.

PANIC_ON_OOPS_VALUE
  No help

PANIC_TIMEOUT
  Set the timeout value (in seconds) until a reboot occurs when
  the kernel panics. If n = 0, then we wait forever. A timeout
  value n > 0 will wait n seconds before rebooting, while a timeout
  value n < 0 will reboot immediately.

PANTHERLORD_FF
  Say Y here if you have a PantherLord/GreenAsia based game controller
  or adapter and want to enable force feedback support for it.

PARAVIRT
  This changes the kernel so it can modify itself when it is run
  under a hypervisor, potentially improving performance significantly
  over full virtualization.  However, when run without a hypervisor
  the kernel is theoretically slower and slightly larger.

PARAVIRT_CLOCK
  No help

PARAVIRT_DEBUG
  Enable to debug paravirt_ops internals.  Specifically, BUG if
  a paravirt_op is missing when it is called.

PARAVIRT_SPINLOCKS
  Paravirtualized spinlocks allow a pvops backend to replace the
  spinlock implementation with something virtualization-friendly
  (for example, block the virtual CPU rather than spinning).
  
  It has a minimal impact on native kernels and gives a nice performance
  benefit on paravirtualized KVM / Xen kernels.
  
  If you are unsure how to answer this question, answer Y.

PARAVIRT_TIME_ACCOUNTING
  Select this option to enable fine granularity task steal time
  accounting. Time spent executing other tasks in parallel with
  the current vCPU is discounted from the vCPU power. To account for
  that, there can be a small performance impact.
  
  If in doubt, say N here.

PARAVIRT_XXL
  No help

PARIDE
  There are many external CD-ROM and disk devices that connect through
  your computer's parallel port. Most of them are actually IDE devices
  using a parallel port IDE adapter. This option enables the PARIDE
  subsystem which contains drivers for many of these external drives.
  Read <file:Documentation/admin-guide/blockdev/paride.rst> for more information.
  
  If you have said Y to the "Parallel-port support" configuration
  option, you may share a single port between your printer and other
  parallel port devices. Answer Y to build PARIDE support into your
  kernel, or M if you would like to build it as a loadable module. If
  your parallel port support is in a loadable module, you must build
  PARIDE as a module. If you built PARIDE support into your kernel,
  you may still build the individual protocol modules and high-level
  drivers as loadable modules. If you build this support as a module,
  it will be called paride.
  
  To use the PARIDE support, you must say Y or M here and also to at
  least one high-level driver (e.g. "Parallel port IDE disks",
  "Parallel port ATAPI CD-ROMs", "Parallel port ATAPI disks" etc.) and
  to at least one protocol driver (e.g. "ATEN EH-100 protocol",
  "MicroSolutions backpack protocol", "DataStor Commuter protocol"
  etc.).

PARIDE_ATEN
  This option enables support for the ATEN EH-100 parallel port IDE
  protocol. This protocol is used in some inexpensive low performance
  parallel port kits made in Hong Kong. If you chose to build PARIDE
  support into your kernel, you may answer Y here to build in the
  protocol driver, otherwise you should answer M to build it as a
  loadable module. The module will be called aten. You must also
  have a high-level driver for the type of device that you want to
  support.

PARIDE_BPCK
  This option enables support for the Micro Solutions BACKPACK
  parallel port Series 5 IDE protocol.  (Most BACKPACK drives made
  before 1999 were Series 5) Series 5 drives will NOT always have the
  Series noted on the bottom of the drive. Series 6 drivers will.
  
  In other words, if your BACKPACK drive doesn't say "Series 6" on the
  bottom, enable this option.
  
  If you chose to build PARIDE support into your kernel, you may
  answer Y here to build in the protocol driver, otherwise you should
  answer M to build it as a loadable module.  The module will be
  called bpck.  You must also have a high-level driver for the type
  of device that you want to support.

PARIDE_BPCK6
  This option enables support for the Micro Solutions BACKPACK
  parallel port Series 6 IDE protocol.  (Most BACKPACK drives made
  after 1999 were Series 6) Series 6 drives will have the Series noted
  on the bottom of the drive.  Series 5 drivers don't always have it
  noted.
  
  In other words, if your BACKPACK drive says "Series 6" on the
  bottom, enable this option.
  
  If you chose to build PARIDE support into your kernel, you may
  answer Y here to build in the protocol driver, otherwise you should
  answer M to build it as a loadable module.  The module will be
  called bpck6.  You must also have a high-level driver for the type
  of device that you want to support.

PARIDE_COMM
  This option enables support for the Commuter parallel port IDE
  protocol from DataStor. If you chose to build PARIDE support
  into your kernel, you may answer Y here to build in the protocol
  driver, otherwise you should answer M to build it as a loadable
  module. The module will be called comm. You must also have
  a high-level driver for the type of device that you want to support.

PARIDE_DSTR
  This option enables support for the EP-2000 parallel port IDE
  protocol from DataStor. If you chose to build PARIDE support
  into your kernel, you may answer Y here to build in the protocol
  driver, otherwise you should answer M to build it as a loadable
  module. The module will be called dstr. You must also have
  a high-level driver for the type of device that you want to support.

PARIDE_EPAT
  This option enables support for the EPAT parallel port IDE protocol.
  EPAT is a parallel port IDE adapter manufactured by Shuttle
  Technology and widely used in devices from major vendors such as
  Hewlett-Packard, SyQuest, Imation and Avatar. If you chose to build
  PARIDE support into your kernel, you may answer Y here to build in
  the protocol driver, otherwise you should answer M to build it as a
  loadable module. The module will be called epat. You must also
  have a high-level driver for the type of device that you want to
  support.

PARIDE_EPATC8
  This option enables support for the newer Shuttle EP1284 (aka c7 and
  c8) chip. You need this if you are using any recent Imation SuperDisk
  (LS-120) drive.

PARIDE_EPIA
  This option enables support for the (obsolete) EPIA parallel port
  IDE protocol from Shuttle Technology. This adapter can still be
  found in some no-name kits. If you chose to build PARIDE support
  into your kernel, you may answer Y here to build in the protocol
  driver, otherwise you should answer M to build it as a loadable
  module. The module will be called epia. You must also have a
  high-level driver for the type of device that you want to support.

PARIDE_FIT2
  This option enables support for the TD-2000 parallel port IDE
  protocol from Fidelity International Technology. This is a simple
  (low speed) adapter that is used in some portable hard drives. If
  you chose to build PARIDE support into your kernel, you may answer Y
  here to build in the protocol driver, otherwise you should answer M
  to build it as a loadable module. The module will be called ktti.
  You must also have a high-level driver for the type of device that
  you want to support.

PARIDE_FIT3
  This option enables support for the TD-3000 parallel port IDE
  protocol from Fidelity International Technology. This protocol is
  used in newer models of their portable disk, CD-ROM and PD/CD
  devices. If you chose to build PARIDE support into your kernel, you
  may answer Y here to build in the protocol driver, otherwise you
  should answer M to build it as a loadable module. The module will be
  called fit3. You must also have a high-level driver for the type
  of device that you want to support.

PARIDE_FRIQ
  This option enables support for version 2 of the Freecom IQ parallel
  port IDE adapter.  This adapter is used by the Maxell Superdisk
  drive.  If you chose to build PARIDE support into your kernel, you
  may answer Y here to build in the protocol driver, otherwise you
  should answer M to build it as a loadable module. The module will be
  called friq. You must also have a high-level driver for the type
  of device that you want to support.

PARIDE_FRPW
  This option enables support for the Freecom power parallel port IDE
  protocol. If you chose to build PARIDE support into your kernel, you
  may answer Y here to build in the protocol driver, otherwise you
  should answer M to build it as a loadable module. The module will be
  called frpw. You must also have a high-level driver for the type
  of device that you want to support.

PARIDE_KBIC
  This option enables support for the KBIC-951A and KBIC-971A parallel
  port IDE protocols from KingByte Information Corp. KingByte's
  adapters appear in many no-name portable disk and CD-ROM products,
  especially in Europe. If you chose to build PARIDE support into your
  kernel, you may answer Y here to build in the protocol driver,
  otherwise you should answer M to build it as a loadable module. The
  module will be called kbic. You must also have a high-level driver
  for the type of device that you want to support.

PARIDE_KTTI
  This option enables support for the "PHd" parallel port IDE protocol
  from KT Technology. This is a simple (low speed) adapter that is
  used in some 2.5" portable hard drives. If you chose to build PARIDE
  support into your kernel, you may answer Y here to build in the
  protocol driver, otherwise you should answer M to build it as a
  loadable module. The module will be called ktti. You must also
  have a high-level driver for the type of device that you want to
  support.

PARIDE_ON20
  This option enables support for the (obsolete) 90c20 parallel port
  IDE protocol from OnSpec (often marketed under the ValuStore brand
  name). If you chose to build PARIDE support into your kernel, you
  may answer Y here to build in the protocol driver, otherwise you
  should answer M to build it as a loadable module. The module will
  be called on20. You must also have a high-level driver for the
  type of device that you want to support.

PARIDE_ON26
  This option enables support for the 90c26 parallel port IDE protocol
  from OnSpec Electronics (often marketed under the ValuStore brand
  name). If you chose to build PARIDE support into your kernel, you
  may answer Y here to build in the protocol driver, otherwise you
  should answer M to build it as a loadable module. The module will be
  called on26. You must also have a high-level driver for the type
  of device that you want to support.

PARIDE_PCD
  This option enables the high-level driver for ATAPI CD-ROM devices
  connected through a parallel port. If you chose to build PARIDE
  support into your kernel, you may answer Y here to build in the
  parallel port ATAPI CD-ROM driver, otherwise you should answer M to
  build it as a loadable module. The module will be called pcd. You
  must also have at least one parallel port protocol driver in your
  system. Among the devices supported by this driver are the
  MicroSolutions backpack CD-ROM drives and the Freecom Power CD. If
  you have such a CD-ROM drive, you should also say Y or M to "ISO
  9660 CD-ROM file system support" below, because that's the file
  system used on CD-ROMs.

PARIDE_PD
  This option enables the high-level driver for IDE-type disk devices
  connected through a parallel port. If you chose to build PARIDE
  support into your kernel, you may answer Y here to build in the
  parallel port IDE driver, otherwise you should answer M to build
  it as a loadable module. The module will be called pd. You
  must also have at least one parallel port protocol driver in your
  system. Among the devices supported by this driver are the SyQuest
  EZ-135, EZ-230 and SparQ drives, the Avatar Shark and the backpack
  hard drives from MicroSolutions.

PARIDE_PF
  This option enables the high-level driver for ATAPI disk devices
  connected through a parallel port. If you chose to build PARIDE
  support into your kernel, you may answer Y here to build in the
  parallel port ATAPI disk driver, otherwise you should answer M
  to build it as a loadable module. The module will be called pf.
  You must also have at least one parallel port protocol driver in
  your system. Among the devices supported by this driver are the
  MicroSolutions backpack PD/CD drive and the Imation Superdisk
  LS-120 drive.

PARIDE_PG
  This option enables a special high-level driver for generic ATAPI
  devices connected through a parallel port. The driver allows user
  programs, such as cdrtools, to send ATAPI commands directly to a
  device.
  
  If you chose to build PARIDE support into your kernel, you may
  answer Y here to build in the parallel port generic ATAPI driver,
  otherwise you should answer M to build it as a loadable module. The
  module will be called pg.
  
  You must also have at least one parallel port protocol driver in
  your system.
  
  This driver implements an API loosely related to the generic SCSI
  driver. See <file:include/linux/pg.h>. for details.
  
  You can obtain the most recent version of cdrtools from
  <ftp://ftp.berlios.de/pub/cdrecord/>. Versions 1.6.1a3 and
  later fully support this driver.

PARIDE_PT
  This option enables the high-level driver for ATAPI tape devices
  connected through a parallel port. If you chose to build PARIDE
  support into your kernel, you may answer Y here to build in the
  parallel port ATAPI disk driver, otherwise you should answer M
  to build it as a loadable module. The module will be called pt.
  You must also have at least one parallel port protocol driver in
  your system. Among the devices supported by this driver is the
  parallel port version of the HP 5GB drive.

PARMAN
  No help

PARPORT
  If you want to use devices connected to your machine's parallel port
  (the connector at the computer with 25 holes), e.g. printer, ZIP
  drive, PLIP link (Parallel Line Internet Protocol is mainly used to
  create a mini network by connecting the parallel ports of two local
  machines) etc., then you need to say Y here; please read
  <file:Documentation/admin-guide/parport.rst> and
  <file:drivers/parport/BUGS-parport>.
  
  For extensive information about drivers for many devices attaching
  to the parallel port see <http://www.torque.net/linux-pp.html> on
  the WWW.
  
  It is possible to share a single parallel port among several devices
  and it is safe to compile all the corresponding drivers into the
  kernel. To compile parallel port support as a module, choose M here:
  the module will be called parport.
  If you have more than one parallel port and want to specify which
  port and IRQ to be used by this driver at module load time, take a
  look at <file:Documentation/admin-guide/parport.rst>.
  
  If unsure, say Y.

PARPORT_1284
  If you have a printer that supports status readback or device ID, or
  want to use a device that uses enhanced parallel port transfer modes
  such as EPP and ECP, say Y here to enable advanced IEEE 1284
  transfer modes. Also say Y if you want device ID information to
  appear in /proc/sys/dev/parport/*/autoprobe*. It is safe to say N.

PARPORT_AMIGA
  Say Y here if you need support for the parallel port hardware on
  Amiga machines. This code is also available as a module (say M),
  called parport_amiga. If in doubt, saying N is the safe plan.

PARPORT_ATARI
  Say Y here if you need support for the parallel port hardware on
  Atari machines. This code is also available as a module (say M),
  called parport_atari. If in doubt, saying N is the safe plan.

PARPORT_AX88796
  Say Y here if you need support for the parallel port hardware on
  the AX88796 network controller chip. This code is also available
  as a module (say M), called parport_ax88796.
  
  The driver is not dependent on the AX88796 network driver, and
  should not interfere with the networking functions of the chip.

PARPORT_GSC
  No help

PARPORT_IP32
  Say Y here if you need support for the parallel port on
  SGI O2 machines. This code is also available as a module (say M),
  called parport_ip32.  If in doubt, saying N is the safe plan.

PARPORT_MFC3
  Say Y here if you need parallel port support for the MFC3 card.
  This code is also available as a module (say M), called
  parport_mfc3. If in doubt, saying N is the safe plan.

PARPORT_NOT_PC
  No help

PARPORT_PANEL
  Say Y here if you have an HD44780 or KS-0074 LCD connected to your
  parallel port. This driver also features 4 and 6-key keypads. The LCD
  is accessible through the /dev/lcd char device (10, 156), and the
  keypad through /dev/keypad (10, 185). This code can either be
  compiled as a module, or linked into the kernel and started at boot.
  If you don't understand what all this is about, say N.

PARPORT_PC
  You should say Y here if you have a PC-style parallel port. All
  IBM PC compatible computers and some Alphas have PC-style
  parallel ports.  PA-RISC owners should only say Y here if they
  have a SuperIO parallel port.
  
  To compile this driver as a module, choose M here: the
  module will be called parport_pc.
  
  If unsure, say Y.

PARPORT_PC_FIFO
  Many parallel port chipsets provide hardware that can speed up
  printing. Say Y here if you want to take advantage of that.
  
  As well as actually having a FIFO, or DMA capability, the kernel
  will need to know which IRQ the parallel port has.  By default,
  parallel port interrupts will not be used, and so neither will the
  FIFO.  See <file:Documentation/admin-guide/parport.rst> to find out how to
  specify which IRQ/DMA to use.

PARPORT_PC_PCMCIA
  Say Y here if you need PCMCIA support for your PC-style parallel
  ports. If unsure, say N.

PARPORT_PC_SUPERIO
  Saying Y here enables some probes for Super-IO chipsets in order to
  find out things like base addresses, IRQ lines and DMA channels.  It
  is safe to say N.

PARPORT_SERIAL
  This adds support for multi-IO PCI cards that have parallel and
  serial ports.  You should say Y or M here.  If you say M, the module
  will be called parport_serial.

PARPORT_SUNBPP
  This driver provides support for the bidirectional parallel port
  found on many Sun machines. Note that many of the newer Ultras
  actually have pc style hardware instead.

PARTITION_ADVANCED
  Say Y here if you would like to use hard disks under Linux which
  were partitioned under an operating system running on a different
  architecture than your Linux system.
  
  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about foreign partitioning schemes.
  
  If unsure, say N.

PARTITION_PERCPU
  No help

PASEMI_MAC
  This driver supports the on-chip 1/10Gbit Ethernet controller on
  PA Semi's PWRficient line of chips.

PATA_ACPI
  This option enables an ACPI method driver which drives
  motherboard PATA controller interfaces through the ACPI
  firmware in the BIOS. This driver can sometimes handle
  otherwise unsupported hardware.

PATA_ALI
  This option enables support for the ALi ATA interfaces
  found on the many ALi chipsets.
  
  If unsure, say N.

PATA_AMD
  This option enables support for the AMD and NVidia PATA
  interfaces found on the chipsets for Athlon/Athlon64.
  
  If unsure, say N.

PATA_ARASAN_CF
  Say Y here to support the ARASAN CompactFlash PATA controller

PATA_ARTOP
  This option enables support for ARTOP PATA controllers.
  
  If unsure, say N.

PATA_ATIIXP
  This option enables support for the ATI ATA interfaces
  found on the many ATI chipsets.
  
  If unsure, say N.

PATA_ATP867X
  This option enables support for ARTOP/Acard ATP867X PATA
  controllers.
  
  If unsure, say N.

PATA_BK3710
  This option enables support for the integrated IDE controller on
  the TI DaVinci SoC.
  
  If unsure, say N.

PATA_BUDDHA
  This option enables support for the IDE interfaces
  on the Buddha, Catweasel and X-Surf expansion boards
  on the Zorro expansion bus. It supports up to two
  interfaces on the Buddha, three on the Catweasel and
  two on the X-Surf.
  
  If unsure, say N.

PATA_CMD640_PCI
  This option enables support for the CMD640 PCI IDE
  interface chip. Only the primary channel is currently
  supported.
  
  If unsure, say N.

PATA_CMD64X
  This option enables support for the CMD64x series chips
  except for the CMD640.
  
  If unsure, say N.

PATA_CS5520
  This option enables support for the Cyrix 5510/5520
  companion chip used with the MediaGX/Geode processor family.
  
  If unsure, say N.

PATA_CS5530
  This option enables support for the Cyrix/NatSemi/AMD CS5530
  companion chip used with the MediaGX/Geode processor family.
  
  If unsure, say N.

PATA_CS5535
  This option enables support for the NatSemi/AMD CS5535
  companion chip used with the Geode processor family.
  
  If unsure, say N.

PATA_CS5536
  This option enables support for the AMD CS5536
  companion chip used with the Geode LX processor family.
  
  If unsure, say N.

PATA_CYPRESS
  This option enables support for the Cypress/Contaq CY82C693
  chipset found in some Alpha systems
  
  If unsure, say N.

PATA_EFAR
  This option enables support for the EFAR SLC90E66
  IDE controller found on some older machines.
  
  If unsure, say N.

PATA_EP93XX
  This option enables support for the PATA controller in
  the Cirrus Logic EP9312 and EP9315 ARM CPU.
  
  If unsure, say N.

PATA_FALCON
  This option enables support for the on-board IDE
  interface on the Atari Falcon.
  
  If unsure, say N.

PATA_FTIDE010
  This option enables support for the Faraday FTIDE010
  PATA controller found in the Cortina Gemini SoCs.
  
  If unsure, say N.

PATA_GAYLE
  This option enables support for the on-board IDE
  interfaces on some Amiga models (A600, A1200,
  A4000 and A4000T) and also for IDE interfaces on
  the Zorro expansion bus (M-Tech E-Matrix 530
  expansion card).
  
  If unsure, say N.

PATA_HPT366
  This option enables support for the HPT 366 and 368
  PATA controllers via the new ATA layer.
  
  If unsure, say N.

PATA_HPT37X
  This option enables support for the majority of the later HPT
  PATA controllers via the new ATA layer.
  
  If unsure, say N.

PATA_HPT3X2N
  This option enables support for the N variant HPT PATA
  controllers via the new ATA layer.
  
  If unsure, say N.

PATA_HPT3X3
  This option enables support for the HPT 343/363
  PATA controllers via the new ATA layer
  
  If unsure, say N.

PATA_HPT3X3_DMA
  This option enables DMA support for the HPT343/363
  controllers. Enable with care as there are still some
  problems with DMA on this chipset.

PATA_ICSIDE
  On Acorn systems, say Y here if you wish to use the ICS PATA
  interface card.  This is not required for ICS partition support.
  If you are unsure, say N to this.

PATA_IMX
  This option enables support for the PATA host available on Freescale
  iMX SoCs.
  
  If unsure, say N.

PATA_ISAPNP
  This option enables support for ISA plug & play ATA
  controllers such as those found on old soundcards.
  
  If unsure, say N.

PATA_IT8213
  This option enables support for the ITE 821 PATA
  controllers via the new ATA layer.
  
  If unsure, say N.

PATA_IT821X
  This option enables support for the ITE 8211 and 8212
  PATA controllers via the new ATA layer, including RAID
  mode.
  
  If unsure, say N.

PATA_IXP4XX_CF
  This option enables support for a Compact Flash connected on
  the ixp4xx expansion bus. This driver had been written for
  Loft/Avila boards in mind but can work with others.
  
  If unsure, say N.

PATA_JMICRON
  Enable support for the JMicron IDE controller, via the new
  ATA layer.
  
  If unsure, say N.

PATA_LEGACY
  This option enables support for ISA/VLB/PCI bus legacy PATA
  ports and allows them to be accessed via the new ATA layer.
  
  If unsure, say N.

PATA_MACIO
  Most IDE capable PowerMacs have IDE busses driven by a variant
  of this controller which is part of the Apple chipset used on
  most PowerMac models. Some models have multiple busses using
  different chipsets, though generally, MacIO is one of them.

PATA_MARVELL
  This option enables limited support for the Marvell 88SE61xx ATA
  controllers. If you wish to use only the SATA ports then select
  the AHCI driver alone. If you wish to the use the PATA port or
  both SATA and PATA include this driver.
  
  If unsure, say N.

PATA_MPC52xx
  This option enables support for integrated IDE controller
  of the Freescale MPC52xx SoC.
  
  If unsure, say N.

PATA_MPIIX
  This option enables support for MPIIX PATA support.
  
  If unsure, say N.

PATA_NETCELL
  This option enables support for the Netcell Revolution RAID
  PATA controller.
  
  If unsure, say N.

PATA_NINJA32
  This option enables support for the Ninja32, Delkin and
  possibly other brands of Cardbus ATA adapter
  
  If unsure, say N.

PATA_NS87410
  This option enables support for the National Semiconductor
  NS87410 PCI-IDE controller.
  
  If unsure, say N.

PATA_NS87415
  This option enables support for the National Semiconductor
  NS87415 PCI-IDE controller.
  
  If unsure, say N.

PATA_OCTEON_CF
  This option enables a polled compact flash driver for use with
  compact flash cards attached to the OCTEON boot bus.
  
  If unsure, say N.

PATA_OF_PLATFORM
  This option enables support for generic directly connected ATA
  devices commonly found on embedded systems with OpenFirmware
  bindings.
  
  If unsure, say N.

PATA_OLDPIIX
  This option enables support for early PIIX PATA support.
  
  If unsure, say N.

PATA_OPTI
  This option enables full PIO support for the early Opti ATA
  controllers found on some old motherboards.
  
  If unsure, say N.

PATA_OPTIDMA
  This option enables DMA/PIO support for the later OPTi
  controllers found on some old motherboards and in some
  laptops.
  
  If unsure, say N.

PATA_PALMLD
  This option enables support for Palm LifeDrive's internal ATA
  port via the new ATA layer.
  
  If unsure, say N.

PATA_PCMCIA
  This option enables support for PCMCIA ATA interfaces, including
  compact flash card adapters via the new ATA layer.
  
  If unsure, say N.

PATA_PDC2027X
  This option enables support for Promise PATA pdc20268 to pdc20277 host adapters.
  
  If unsure, say N.

PATA_PDC_OLD
  This option enables support for the Promise 20246, 20262, 20263,
  20265 and 20267 adapters.
  
  If unsure, say N.

PATA_PLATFORM
  This option enables support for generic directly connected ATA
  devices commonly found on embedded systems.
  
  If unsure, say N.

PATA_PXA
  This option enables support for harddrive attached to PXA CPU's bus.
  
  NOTE: This driver utilizes PXA DMA controller, in case your hardware
        is not capable of doing MWDMA, use pata_platform instead.
  
  If unsure, say N.

PATA_QDI
  Support for QDI 6500 and 6580 PATA controllers on VESA local bus.

PATA_RADISYS
  This option enables support for the RADISYS 82600
  PATA controllers via the new ATA layer
  
  If unsure, say N.

PATA_RB532
  This option enables support for the RouterBoard 532
  PATA CompactFlash controller.
  
  If unsure, say N.

PATA_RDC
  This option enables basic support for the later RDC PATA controllers
  controllers via the new ATA layer. For the RDC 1010, you need to
  enable the IT821X driver instead.
  
  If unsure, say N.

PATA_RZ1000
  This option enables basic support for the PC Tech RZ1000/1
  PATA controllers via the new ATA layer
  
  If unsure, say N.

PATA_SAMSUNG_CF
  This option enables basic support for Samsung's S3C/S5P board
  PATA controllers via the new ATA layer
  
  If unsure, say N.

PATA_SC1200
  This option enables support for the NatSemi/AMD SC1200 SoC
  companion chip used with the Geode processor family.
  
  If unsure, say N.

PATA_SCH
  This option enables support for Intel SCH PATA on the Intel
  SCH (US15W, US15L, UL11L) series host controllers.
  
  If unsure, say N.

PATA_SERVERWORKS
  This option enables support for the Serverworks OSB4/CSB5/CSB6 and
  HT1000 PATA controllers, via the new ATA layer.
  
  If unsure, say N.

PATA_SIL680
  This option enables support for CMD / Silicon Image 680 PATA.
  
  If unsure, say N.

PATA_SIS
  This option enables support for SiS PATA controllers
  
  If unsure, say N.

PATA_TIMINGS
  No help

PATA_TOSHIBA
  Support for the Toshiba Piccolo controllers. Currently only the
  primary channel is supported by this driver.
  
  If unsure, say N.

PATA_TRIFLEX
  Enable support for the Compaq 'Triflex' IDE controller as found
  on many Compaq Pentium-Pro systems, via the new ATA layer.
  
  If unsure, say N.

PATA_VIA
  This option enables support for the VIA PATA interfaces
  found on the many VIA chipsets.
  
  If unsure, say N.

PATA_WINBOND
  This option enables support for SL82C105 PATA devices found in the
  Netwinder and some other systems
  
  If unsure, say N.

PATA_WINBOND_VLB
  Support for the Winbond W83759A controller on Vesa Local Bus
  systems.

PC104
  Expose PC/104 form factor device drivers and options available for
  selection and configuration. Enable this option if your target
  machine has a PC/104 bus.

PC300TOO
  Alternative driver for PC300 RSV/X21 PCI cards made by
  Cyclades, Inc. If you have such a card, say Y here and see
  <http://www.kernel.org/pub/linux/utils/net/hdlc/>.
  
  To compile this as a module, choose M here: the module
  will be called pc300too.
  
  If unsure, say N here.

PC8736x_GPIO
  Give userspace access to the GPIO pins on the National
  Semiconductor PC-8736x (x=[03456]) SuperIO chip.  The chip
  has multiple functional units, inc several managed by
  hwmon/pc87360 driver.  Tested with PC-87366
  
  If compiled as a module, it will be called pc8736x_gpio.

PC87413_WDT
  This is the driver for the hardware watchdog on the PC87413 chipset
  This watchdog simply watches your kernel to make sure it doesn't
  freeze, and if it does, it reboots your computer after a certain
  amount of time.
  
  To compile this driver as a module, choose M here: the
  module will be called pc87413_wdt.
  
  Most people will say N.

PCC
  ACPI 5.0+ spec defines a generic mode of communication
  between the OS and a platform such as the BMC. This medium
  (PCC) is typically used by CPPC (ACPI CPU Performance management),
  RAS (ACPI reliability protocol) and MPST (ACPI Memory power
  states). Select this driver if your platform implements the
  PCC clients mentioned above.

PCCARD
  Say Y here if you want to attach PCMCIA- or PC-cards to your Linux
  computer.  These are credit-card size devices such as network cards,
  modems or hard drives often used with laptops computers.  There are
  actually two varieties of these cards: 16 bit PCMCIA and 32 bit
  CardBus cards.
  
  To compile this driver as modules, choose M here: the
  module will be called pcmcia_core.

PCCARD_IODYN
  No help

PCCARD_NONSTATIC
  No help

PCENGINES_APU2
  This driver provides support for the front button and LEDs on
  PC Engines APUv2/APUv3 board.
  
  To compile this driver as a module, choose M here: the module
  will be called pcengines-apuv2.

PCF50633_ADC
  Say yes here if you want to include support for ADC in the
  NXP PCF50633 chip.

PCF50633_GPIO
  Say yes here if you want to include support GPIO for pins on
  the PCF50633 chip.

PCH_CAN
  This driver is for PCH CAN of Topcliff (Intel EG20T PCH) which
  is an IOH for x86 embedded processor (Intel Atom E6xx series).
  This driver can access CAN bus.

PCH_DMA
  Enable support for Intel EG20T PCH DMA engine.
  
  This driver also can be used for LAPIS Semiconductor IOH(Input/
  Output Hub), ML7213, ML7223 and ML7831.
  ML7213 IOH is for IVI(In-Vehicle Infotainment) use, ML7223 IOH is
  for MP(Media Phone) use and ML7831 IOH is for general purpose use.
  ML7213/ML7223/ML7831 is companion chip for Intel Atom E6xx series.
  ML7213/ML7223/ML7831 is completely compatible for Intel EG20T PCH.

PCH_GBE
  This is a gigabit ethernet driver for EG20T PCH.
  EG20T PCH is the platform controller hub that is used in Intel's
  general embedded platform.  EG20T PCH has Gigabit Ethernet interface.
  Using this interface, it is able to access system devices connected
  to Gigabit Ethernet.  This driver enables Gigabit Ethernet function.
  
  This driver also can be used for OKI SEMICONDUCTOR IOH(Input/
  Output Hub), ML7223/ML7831.
  ML7223 IOH is for MP(Media Phone) use. ML7831 IOH is for general
  purpose use.
  ML7223/ML7831 is companion chip for Intel Atom E6xx series.
  ML7223/ML7831 is completely compatible for Intel EG20T PCH.

PCH_PHUB
  This driver is for PCH(Platform controller Hub) PHUB(Packet Hub) of
  Intel Topcliff which is an IOH(Input/Output Hub) for x86 embedded
  processor. The Topcliff has MAC address and Option ROM data in SROM.
  This driver can access MAC address and Option ROM data in SROM.
  
  This driver also can be used for LAPIS Semiconductor's IOH,
  ML7213/ML7223/ML7831.
  ML7213 which is for IVI(In-Vehicle Infotainment) use.
  ML7223 IOH is for MP(Media Phone) use.
  ML7831 IOH is for general purpose use.
  ML7213/ML7223/ML7831 is companion chip for Intel Atom E6xx series.
  ML7213/ML7223/ML7831 is completely compatible for Intel EG20T PCH.
  
  To compile this driver as a module, choose M here: the module will
  be called pch_phub.

PCI
  This option enables support for the PCI local bus, including
  support for PCI-X and the foundations for PCI Express support.
  Say 'Y' here unless you know what you are doing.

PCI200SYN
  Driver for PCI200SYN cards by Goramo sp. j.
  
  If you have such a card, say Y here and see
  <http://www.kernel.org/pub/linux/utils/net/hdlc/>.
  
  To compile this as a module, choose M here: the
  module will be called pci200syn.
  
  If unsure, say N.

PCIEAER
  This enables PCI Express Root Port Advanced Error Reporting
  (AER) driver support. Error reporting messages sent to Root
  Port will be handled by PCI Express AER driver.

PCIEAER_INJECT
  This enables PCI Express Root Port Advanced Error Reporting
  (AER) software error injector.
  
  Debugging AER code is quite difficult because it is hard
  to trigger various real hardware errors. Software-based
  error injection can fake almost all kinds of errors with the
  help of a user space helper tool aer-inject, which can be
  gotten from:
     https://www.kernel.org/pub/linux/utils/pci/aer-inject/

PCIEASPM
  This enables OS control over PCI Express ASPM (Active State
  Power Management) and Clock Power Management. ASPM supports
  state L0/L0s/L1.
  
  ASPM is initially set up by the firmware. With this option enabled,
  Linux can modify this state in order to disable ASPM on known-bad
  hardware or configurations and enable it when known-safe.
  
  ASPM can be disabled or enabled at runtime via
  /sys/module/pcie_aspm/parameters/policy
  
  When in doubt, say Y.

PCIEASPM_DEFAULT
  Use the BIOS defaults for PCI Express ASPM.

PCIEASPM_PERFORMANCE
  Disable PCI Express ASPM L0s and L1, even if the BIOS enabled them.

PCIEASPM_POWERSAVE
  Enable PCI Express ASPM L0s and L1 where possible, even if the
  BIOS did not.

PCIEASPM_POWER_SUPERSAVE
  Same as PCIEASPM_POWERSAVE, except it also enables L1 substates where
  possible. This would result in higher power savings while staying in L1
  where the components support it.

PCIEPORTBUS
  This enables PCI Express Port Bus support. Users can then enable
  support for Native Hot-Plug, Advanced Error Reporting, Power
  Management Events, and Downstream Port Containment.

PCIE_AL
  Say Y here to enable support of the Amazon's Annapurna Labs PCIe
  controller IP on Amazon SoCs. The PCIe controller uses the DesignWare
  core plus Annapurna Labs proprietary hardware wrappers. This is
  required only for DT-based platforms. ACPI platforms with the
  Annapurna Labs PCIe controller don't need to enable this.

PCIE_ALTERA
  Say Y here if you want to enable PCIe controller support on Altera
  FPGA.

PCIE_ALTERA_MSI
  Say Y here if you want PCIe MSI support for the Altera FPGA.
  This MSI driver supports Altera MSI to GIC controller IP.

PCIE_ARMADA_8K
  Say Y here if you want to enable PCIe controller support on
  Armada-8K SoCs. The PCIe controller on Armada-8K is based on
  DesignWare hardware and therefore the driver re-uses the
  DesignWare core functions to implement the driver.

PCIE_ARTPEC6
  No help

PCIE_ARTPEC6_EP
  Enables support for the PCIe controller in the ARTPEC-6 SoC to work in
  endpoint mode. This uses the DesignWare core.

PCIE_ARTPEC6_HOST
  Enables support for the PCIe controller in the ARTPEC-6 SoC to work in
  host mode. This uses the DesignWare core.

PCIE_BRCMSTB
  Say Y here to enable PCIe host controller support for
  Broadcom STB based SoCs, like the Raspberry Pi 4.

PCIE_BUS_DEFAULT
  Default choice; ensure that the MPS matches upstream bridge.

PCIE_BUS_PEER2PEER
  Set MPS = 128 for all devices.  MPS configuration effected by the
  other options could cause the MPS on one root port to be
  different than that of the MPS on another, which may cause
  hot-added devices or peer-to-peer DMA to fail.  Set MPS to the
  smallest possible value (128B) system-wide to avoid these issues.
  This is the same as booting with 'pci=pcie_bus_peer2peer'.

PCIE_BUS_PERFORMANCE
  Use MPS and MRRS for best performance.  Ensure that a given
  device's MPS is no larger than its parent MPS, which allows us to
  keep all switches/bridges to the max MPS supported by their
  parent.  This is the same as booting with 'pci=pcie_bus_perf'.

PCIE_BUS_SAFE
  Use largest MPS that boot-time devices support.  If you have a
  closed system with no possibility of adding new devices, this
  will use the largest MPS that's supported by all devices.  This
  is the same as booting with 'pci=pcie_bus_safe'.

PCIE_BUS_TUNE_OFF
  Use the BIOS defaults; don't touch MPS at all.  This is the same
  as booting with 'pci=pcie_bus_tune_off'.

PCIE_BW
  This enables PCI Express Bandwidth Change Notification.  If
  you know link width or rate changes occur only to correct
  unreliable links, you may answer Y.

PCIE_CADENCE
  No help

PCIE_CADENCE_EP
  No help

PCIE_CADENCE_HOST
  No help

PCIE_CADENCE_PLAT
  No help

PCIE_CADENCE_PLAT_EP
  Say Y here if you want to support the Cadence PCIe  platform controller in
  endpoint mode. This PCIe controller may be embedded into many
  different vendors SoCs.

PCIE_CADENCE_PLAT_HOST
  Say Y here if you want to support the Cadence PCIe platform controller in
  host mode. This PCIe controller may be embedded into many different
  vendors SoCs.

PCIE_DPC
  This enables PCI Express Downstream Port Containment (DPC)
  driver support.  DPC events from Root and Downstream ports
  will be handled by the DPC driver.  If your system doesn't
  have this capability or you do not want to use this feature,
  it is safe to answer N.

PCIE_DW
  No help

PCIE_DW_EP
  No help

PCIE_DW_HOST
  No help

PCIE_DW_PLAT
  No help

PCIE_DW_PLAT_EP
  Enables support for the PCIe controller in the Designware IP to
  work in endpoint mode. There are two instances of PCIe controller
  in Designware IP.
  This controller can work either as EP or RC. In order to enable
  host-specific features PCIE_DW_PLAT_HOST must be selected and in
  order to enable device-specific features PCI_DW_PLAT_EP must be
  selected.

PCIE_DW_PLAT_HOST
  Enables support for the PCIe controller in the Designware IP to
  work in host mode. There are two instances of PCIe controller in
  Designware IP.
  This controller can work either as EP or RC. In order to enable
  host-specific features PCIE_DW_PLAT_HOST must be selected and in
  order to enable device-specific features PCI_DW_PLAT_EP must be
  selected.

PCIE_ECRC
  Used to override firmware/bios settings for PCI Express ECRC
  (transaction layer end-to-end CRC checking).
  
  When in doubt, say N.

PCIE_EDR
  This option adds Error Disconnect Recover support as specified
  in the Downstream Port Containment Related Enhancements ECN to
  the PCI Firmware Specification r3.2.  Enable this if you want to
  support hybrid DPC model which uses both firmware and OS to
  implement DPC.

PCIE_HISI_ERR
  Say Y here if you want error handling support
  for the PCIe controller's errors on HiSilicon HIP SoCs

PCIE_HISI_STB
  Say Y here if you want PCIe controller support on HiSilicon STB SoCs

PCIE_INTEL_GW
  Say 'Y' here to enable PCIe Host controller support on Intel
  Gateway SoCs.
  The PCIe controller uses the DesignWare core plus Intel-specific
  hardware wrappers.

PCIE_IPROC
  This enables the iProc PCIe core controller support for Broadcom's
  iProc family of SoCs. An appropriate bus interface driver needs
  to be enabled to select this.

PCIE_IPROC_BCMA
  Say Y here if you want to use the Broadcom iProc PCIe controller
  through the BCMA bus interface

PCIE_IPROC_MSI
  Say Y here if you want to enable MSI support for Broadcom's iProc
  PCIe controller

PCIE_IPROC_PLATFORM
  Say Y here if you want to use the Broadcom iProc PCIe controller
  through the generic platform bus interface

PCIE_KIRIN
  Say Y here if you want PCIe controller support
  on HiSilicon Kirin series SoCs.

PCIE_LAYERSCAPE_GEN4
  Say Y here if you want PCIe Gen4 controller support on
  Layerscape SoCs.

PCIE_MEDIATEK
  Say Y here if you want to enable PCIe controller support on
  MediaTek SoCs.

PCIE_MOBIVEIL
  No help

PCIE_MOBIVEIL_HOST
  No help

PCIE_MOBIVEIL_PLAT
  Say Y here if you want to enable support for the Mobiveil AXI PCIe
  Soft IP. It has up to 8 outbound and inbound windows
  for address translation and it is a PCIe Gen4 IP.

PCIE_PME
  No help

PCIE_PTM
  This enables PCI Express Precision Time Measurement (PTM)
  support.
  
  This is only useful if you have devices that support PTM, but it
  is safe to enable even if you don't.

PCIE_QCOM
  Say Y here to enable PCIe controller support on Qualcomm SoCs. The
  PCIe controller uses the DesignWare core plus Qualcomm-specific
  hardware wrappers.

PCIE_RCAR
  Say Y here if you want PCIe controller support on R-Car SoCs.
  This option will be removed after arm64 defconfig is updated.

PCIE_RCAR_EP
  Say Y here if you want PCIe controller support on R-Car SoCs in
  endpoint mode.

PCIE_RCAR_HOST
  Say Y here if you want PCIe controller support on R-Car SoCs in host
  mode.

PCIE_ROCKCHIP
  No help

PCIE_ROCKCHIP_EP
  Say Y here if you want to support Rockchip PCIe controller in
  endpoint mode on Rockchip SoC. There is 1 internal PCIe port
  available to support GEN2 with 4 slots.

PCIE_ROCKCHIP_HOST
  Say Y here if you want internal PCI support on Rockchip SoC.
  There is 1 internal PCIe port available to support GEN2 with
  4 slots.

PCIE_SPEAR13XX
  Say Y here if you want PCIe support on SPEAr13XX SoCs.

PCIE_TANGO_SMP8759
  Say Y here to enable PCIe controller support for Sigma Designs
  Tango SMP8759-based systems.
  
  Note: The SMP8759 controller multiplexes PCI config and MMIO
  accesses, and Linux doesn't provide a way to serialize them.
  This can lead to data corruption if drivers perform concurrent
  config and MMIO accesses.

PCIE_TEGRA194
  No help

PCIE_TEGRA194_EP
  Enables support for the PCIe controller in the NVIDIA Tegra194 SoC to
  work in host mode. There are two instances of PCIe controllers in
  Tegra194. This controller can work either as EP or RC. In order to
  enable host-specific features PCIE_TEGRA194_HOST must be selected and
  in order to enable device-specific features PCIE_TEGRA194_EP must be
  selected. This uses the DesignWare core.

PCIE_TEGRA194_HOST
  Enables support for the PCIe controller in the NVIDIA Tegra194 SoC to
  work in host mode. There are two instances of PCIe controllers in
  Tegra194. This controller can work either as EP or RC. In order to
  enable host-specific features PCIE_TEGRA194_HOST must be selected and
  in order to enable device-specific features PCIE_TEGRA194_EP must be
  selected. This uses the DesignWare core.

PCIE_UNIPHIER
  Say Y here if you want PCIe host controller support on UniPhier SoCs.
  This driver supports LD20 and PXs3 SoCs.

PCIE_UNIPHIER_EP
  Say Y here if you want PCIe endpoint controller support on
  UniPhier SoCs. This driver supports Pro5 SoC.

PCIE_XILINX
  Say 'Y' here if you want kernel to support the Xilinx AXI PCIe
  Host Bridge driver.

PCIE_XILINX_CPM
  Say 'Y' here if you want kernel support for the
  Xilinx Versal CPM host bridge.

PCIE_XILINX_NWL
  Say 'Y' here if you want kernel support for Xilinx
  NWL PCIe controller. The controller can act as Root Port
  or End Point. The current option selection will only
  support root port enabling.

PCIPCWATCHDOG
  This is the driver for the Berkshire Products PCI-PC Watchdog card.
  This card simply watches your kernel to make sure it doesn't freeze,
  and if it does, it reboots your computer after a certain amount of
  time. The card can also monitor the internal temperature of the PC.
  More info is available at <http://www.berkprod.com/pci_pc_watchdog.htm>.
  
  To compile this driver as a module, choose M here: the
  module will be called pcwd_pci.
  
  Most people will say N.

PCI_AARDVARK
  Add support for Aardvark 64bit PCIe Host Controller. This
  controller is part of the South Bridge of the Marvel Armada
  3700 SoC.

PCI_ATMEL
  Enable support for PCI and mini-PCI cards containing the
  Atmel at76c506 chip.

PCI_ATS
  No help

PCI_BIOS
  No help

PCI_BRIDGE_EMUL
  No help

PCI_CNB20LE_QUIRK
  Read the PCI windows out of the CNB20LE host bridge. This allows
  PCI hotplug to work on systems with the CNB20LE chipset which do
  not have ACPI.
  
  There's no public spec for this chipset, and this functionality
  is known to be incomplete.
  
  You should say N unless you know you need this.

PCI_DEBUG
  Say Y here if you want the PCI core to produce a bunch of debug
  messages to the system log.  Select this if you are having a
  problem with PCI support and want to see more of what is going on.
  
  When in doubt, say N.

PCI_DIRECT
  No help

PCI_DOMAINS
  No help

PCI_DOMAINS_GENERIC
  No help

PCI_DRA7XX
  No help

PCI_DRA7XX_EP
  Enables support for the PCIe controller in the DRA7xx SoC to work in
  endpoint mode. There are two instances of PCIe controller in DRA7xx.
  This controller can work either as EP or RC. In order to enable
  host-specific features PCI_DRA7XX_HOST must be selected and in order
  to enable device-specific features PCI_DRA7XX_EP must be selected.
  This uses the DesignWare core.

PCI_DRA7XX_HOST
  Enables support for the PCIe controller in the DRA7xx SoC to work in
  host mode. There are two instances of PCIe controller in DRA7xx.
  This controller can work either as EP or RC. In order to enable
  host-specific features PCI_DRA7XX_HOST must be selected and in order
  to enable device-specific features PCI_DRA7XX_EP must be selected.
  This uses the DesignWare core.

PCI_ECAM
  No help

PCI_ENDPOINT
  Enable this configuration option to support configurable PCI
  endpoint. This should be enabled if the platform has a PCI
  controller that can operate in endpoint mode.
  
  Enabling this option will build the endpoint library, which
  includes endpoint controller library and endpoint function
  library.
  
  If in doubt, say "N" to disable Endpoint support.

PCI_ENDPOINT_CONFIGFS
  This will enable the configfs entry that can be used to
  configure the endpoint function and used to bind the
  function with a endpoint controller.

PCI_ENDPOINT_TEST
  Enable this configuration option to enable the host side test driver
  for PCI Endpoint.

PCI_EPF_TEST
  Enable this configuration option to enable the test driver
  for PCI Endpoint.
  
  If in doubt, say "N" to disable Endpoint test driver.

PCI_EXYNOS
  Enables support for the PCIe controller in the Samsung Exynos SoCs
  to work in host mode. The PCI controller is based on the DesignWare
  hardware and therefore the driver re-uses the DesignWare core
  functions to implement the driver.

PCI_FTPCI100
  No help

PCI_GOANY
  No help

PCI_GOBIOS
  No help

PCI_GODIRECT
  No help

PCI_GOMMCONFIG
  No help

PCI_GOOLPC
  No help

PCI_HERMES
  Enable support for PCI and mini-PCI 802.11b wireless NICs based on
  the Prism 2.5 chipset.  These are true PCI cards, not the 802.11b
  PCMCIA cards bundled with PCI<->PCMCIA adaptors which are also
  common.  Some of the built-in wireless adaptors in laptops are of
  this variety.

PCI_HISI
  Say Y here if you want PCIe controller support on HiSilicon
  Hip05 and Hip06 SoCs

PCI_HOST_COMMON
  No help

PCI_HOST_GENERIC
  Say Y here if you want to support a simple generic PCI host
  controller, such as the one emulated by kvmtool.

PCI_HOST_THUNDER_ECAM
  Say Y here if you want ECAM support for CN88XX-Pass-1.x Cavium Thunder SoCs.

PCI_HOST_THUNDER_PEM
  Say Y here if you want PCIe support for CN88XX Cavium Thunder SoCs.

PCI_HYPERV
  The PCI device frontend driver allows the kernel to import arbitrary
  PCI devices from a PCI backend to support PCI driver domains.

PCI_HYPERV_INTERFACE
  The Hyper-V PCI Interface is a helper driver allows other drivers to
  have a common interface with the Hyper-V PCI frontend driver.

PCI_IMX6
  No help

PCI_IOV
  I/O Virtualization is a PCI feature supported by some devices
  which allows them to create virtual devices which share their
  physical resources.
  
  If unsure, say N.

PCI_J721E
  No help

PCI_J721E_EP
  Say Y here if you want to support the TI J721E PCIe platform
  controller in endpoint mode. TI J721E PCIe controller uses Cadence PCIe
  core.

PCI_J721E_HOST
  Say Y here if you want to support the TI J721E PCIe platform
  controller in host mode. TI J721E PCIe controller uses Cadence PCIe
  core.

PCI_KEYSTONE
  No help

PCI_KEYSTONE_EP
  Enables support for the PCIe controller in the Keystone SoC to
  work in endpoint mode. The PCI controller on Keystone is based
  on DesignWare hardware and therefore the driver re-uses the
  DesignWare core functions to implement the driver.

PCI_KEYSTONE_HOST
  Enables support for the PCIe controller in the Keystone SoC to
  work in host mode. The PCI controller on Keystone is based on
  DesignWare hardware and therefore the driver re-uses the
  DesignWare core functions to implement the driver.

PCI_LABEL
  No help

PCI_LAYERSCAPE
  Say Y here if you want to enable PCIe controller support on Layerscape
  SoCs to work in Host mode.
  This controller can work either as EP or RC. The RCW[HOST_AGT_PEX]
  determines which PCIe controller works in EP mode and which PCIe
  controller works in RC mode.

PCI_LAYERSCAPE_EP
  Say Y here if you want to enable PCIe controller support on Layerscape
  SoCs to work in Endpoint mode.
  This controller can work either as EP or RC. The RCW[HOST_AGT_PEX]
  determines which PCIe controller works in EP mode and which PCIe
  controller works in RC mode.

PCI_LOCKLESS_CONFIG
  No help

PCI_LOONGSON
  Say Y here if you want to enable PCI controller support on
  Loongson systems.

PCI_MESON
  Say Y here if you want to enable PCI controller support on Amlogic
  SoCs. The PCI controller on Amlogic is based on DesignWare hardware
  and therefore the driver re-uses the DesignWare core functions to
  implement the driver.

PCI_MMCONFIG
  No help

PCI_MSI
  This allows device drivers to enable MSI (Message Signaled
  Interrupts).  Message Signaled Interrupts enable a device to
  generate an interrupt using an inbound Memory Write on its
  PCI bus instead of asserting a device IRQ pin.
  
  Use of PCI MSI interrupts can be disabled at kernel boot time
  by using the 'pci=nomsi' option.  This disables MSI for the
  entire system.
  
  If you don't know what to do here, say Y.

PCI_MSI_ARCH_FALLBACKS
  No help

PCI_MSI_IRQ_DOMAIN
  No help

PCI_MT7621
  This selects a driver for the MediaTek MT7621 PCI Controller.
  

PCI_MVEBU
  No help

PCI_OLPC
  No help

PCI_P2PDMA
  Enableѕ drivers to do PCI peer-to-peer transactions to and from
  BARs that are exposed in other devices that are the part of
  the hierarchy where peer-to-peer DMA is guaranteed by the PCI
  specification to work (ie. anything below a single PCI bridge).
  
  Many PCIe root complexes do not support P2P transactions and
  it's hard to tell which support it at all, so at this time,
  P2P DMA transactions must be between devices behind the same root
  port.
  
  If unsure, say N.

PCI_PASID
  Process Address Space Identifiers (PASIDs) can be used by PCI devices
  to access more than one IO address space at the same time. To make
  use of this feature an IOMMU is required which also supports PASIDs.
  Select this option if you have such an IOMMU and want to compile the
  driver for it into your kernel.
  
  If unsure, say N.

PCI_PF_STUB
  Say Y or M here if you want to enable support for devices that
  require SR-IOV support, while at the same time the PF (Physical
  Function) itself is not providing any actual services on the
  host itself such as storage or networking.
  
  When in doubt, say N.

PCI_PRI
  PRI is the PCI Page Request Interface. It allows PCI devices that are
  behind an IOMMU to recover from page faults.
  
  If unsure, say N.

PCI_QUIRKS
  This enables workarounds for various PCI chipset bugs/quirks.
  Disable this only if your target machine is unaffected by PCI
  quirks.

PCI_RCAR_GEN2
  Say Y here if you want internal PCI support on R-Car Gen2 SoC.
  There are 3 internal PCI controllers available with a single
  built-in EHCI/OHCI host controller present on each one.

PCI_REALLOC_ENABLE_AUTO
  Say Y here if you want the PCI core to detect if PCI resource
  re-allocation needs to be enabled. You can always use pci=realloc=on
  or pci=realloc=off to override it.  It will automatically
  re-allocate PCI resources if SR-IOV BARs have not been allocated by
  the BIOS.
  
  When in doubt, say N.

PCI_STUB
  Say Y or M here if you want be able to reserve a PCI device
  when it is going to be assigned to a guest operating system.
  
  When in doubt, say N.

PCI_SW_SWITCHTEC
  Enables support for the management interface for the MicroSemi
  Switchtec series of PCIe switches. Supports userspace access
  to submit MRPC commands to the switch via /dev/switchtecX
  devices. See <file:Documentation/driver-api/switchtec.rst> for more
  information.

PCI_SYSCALL
  No help

PCI_TEGRA
  Say Y here if you want support for the PCIe host controller found
  on NVIDIA Tegra SoCs.

PCI_V3_SEMI
  No help

PCI_VERSATILE
  No help

PCI_XEN
  No help

PCI_XGENE
  Say Y here if you want internal PCI support on APM X-Gene SoC.
  There are 5 internal PCIe ports available. Each port is GEN3 capable
  and have varied lanes from x1 to x8.

PCI_XGENE_MSI
  Say Y here if you want PCIe MSI support for the APM X-Gene v1 SoC.
  This MSI driver supports 5 PCIe ports on the APM X-Gene v1 SoC.

PCMCIA
  This option enables support for 16-bit PCMCIA cards. Most older
  PC-cards are such 16-bit PCMCIA cards, so unless you know you're
  only using 32-bit CardBus cards, say Y or M here.
  
  To use 16-bit PCMCIA cards, you will need supporting software in
  most cases. (see the file <file:Documentation/Changes> for
  location and details).
  
  To compile this driver as modules, choose M here: the
  module will be called pcmcia.
  
  If unsure, say Y.

PCMCIA_3C574
  Say Y here if you intend to attach a 3Com 3c574 or compatible PCMCIA
  (PC-card) Fast Ethernet card to your computer.
  
  To compile this driver as a module, choose M here: the module will be
  called 3c574_cs.  If unsure, say N.

PCMCIA_3C589
  Say Y here if you intend to attach a 3Com 3c589 or compatible PCMCIA
  (PC-card) Ethernet card to your computer.
  
  To compile this driver as a module, choose M here: the module will be
  called 3c589_cs.  If unsure, say N.

PCMCIA_AHA152X
  Say Y here if you intend to attach this type of PCMCIA SCSI host
  adapter to your computer.
  
  To compile this driver as a module, choose M here: the
  module will be called aha152x_cs.

PCMCIA_ALCHEMY_DEVBOARD
  Enable this driver of you want PCMCIA support on your Alchemy
  Db1000, Db/Pb1100, Db/Pb1500, Db/Pb1550, Db/Pb1200, DB1300
  board.  NOT suitable for the PB1000!
  
  This driver is also available as a module called db1xxx_ss.ko

PCMCIA_ATMEL
  Enable support for PCMCIA cards containing the
  Atmel at76c502 and at76c504 chips.

PCMCIA_AXNET
  Say Y here if you intend to attach an Asix AX88190-based PCMCIA
  (PC-card) Fast Ethernet card to your computer.  These cards are
  nearly NE2000 compatible but need a separate driver due to a few
  misfeatures.
  
  To compile this driver as a module, choose M here: the module will be
  called axnet_cs.  If unsure, say N.

PCMCIA_BCM63XX
  No help

PCMCIA_DEBUG
  Say Y here to enable debugging for the SoC PCMCIA layer.
  You will need to choose the debugging level either via the
  kernel command line, or module options depending whether
  you build the drivers as modules.
  
  The kernel command line options are:
    sa11xx_core.pc_debug=N
    pxa2xx_core.pc_debug=N
  
  The module option is called pc_debug=N
  
  In all the above examples, N is the debugging verbosity
  level.

PCMCIA_FDOMAIN
  Say Y here if you intend to attach this type of PCMCIA SCSI host
  adapter to your computer.
  
  To compile this driver as a module, choose M here: the
  module will be called fdomain_cs.

PCMCIA_FMVJ18X
  Say Y here if you intend to attach a Fujitsu FMV-J18x or compatible
  PCMCIA (PC-card) Ethernet card to your computer.
  
  To compile this driver as a module, choose M here: the module will be
  called fmvj18x_cs.  If unsure, say N.

PCMCIA_HERMES
  A driver for "Hermes" chipset based PCMCIA wireless adaptors, such
  as the Lucent WavelanIEEE/Orinoco cards and their OEM (Cabletron/
  EnteraSys RoamAbout 802.11, ELSA Airlancer, Melco Buffalo and
  others).  It should also be usable on various Prism II based cards
  such as the Linksys, D-Link and Farallon Skyline.  It should also
  work on Symbol cards such as the 3Com AirConnect and Ericsson WLAN.
  
  You will very likely need the Wireless Tools in order to
  configure your card and that /etc/pcmcia/wireless.opts works:
  <https://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/Tools.html>.

PCMCIA_LOAD_CIS
  Some PCMCIA cards require an updated Card Information Structure (CIS)
  to be loaded from userspace to work correctly. If you say Y here,
  and your userspace is arranged correctly, this will be loaded
  automatically using the in-kernel firmware loader and the hotplug
  subsystem, instead of relying on cardmgr from pcmcia-cs to do so.
  
  If unsure, say Y.

PCMCIA_MAX1600
  No help

PCMCIA_NINJA_SCSI
  If you intend to attach this type of PCMCIA SCSI host adapter to
  your computer, say Y here and read
  <file:Documentation/scsi/NinjaSCSI.rst>.
  
  Supported cards:
  
  NinjaSCSI-3: (version string: "WBT","NinjaSCSI-3","R1.0")
    IO-DATA     PCSC-FP
    ALPHA DATA  AD-PCS201
    CyQ've      SFC-201
    LOGITECH    LPM-SCSI2E
    Pioneer PCR-PR24's card
    I-O DATA CDPS-PX24's card (PCSC-F)
    Panasonic KXL-RW10AN CD-RW's card
    etc.
  
  NinjaSCSI-32Bit (in 16bit mode):
    [Workbit (version string: "WORKBIT","UltraNinja-16","1")]
    Jazz SCP050
    [I-O DATA (OEM) (version string: "IO DATA","CBSC16       ","1")]
    I-O DATA CBSC-II
    [Kyusyu Matsushita Kotobuki (OEM)
       (version string: "KME    ","SCSI-CARD-001","1")]
    KME KXL-820AN's card
    HP M820e CDRW's card
    etc.
  
  To compile this driver as a module, choose M here: the
  module will be called nsp_cs.

PCMCIA_NMCLAN
  Say Y here if you intend to attach a New Media Ethernet or LiveWire
  PCMCIA (PC-card) Ethernet card to your computer.
  
  To compile this driver as a module, choose M here: the module will be
  called nmclan_cs.  If unsure, say N.

PCMCIA_PCNET
  Say Y here if you intend to attach an NE2000 compatible PCMCIA
  (PC-card) Ethernet or Fast Ethernet card to your computer.
  
  To compile this driver as a module, choose M here: the module will be
  called pcnet_cs.  If unsure, say N.

PCMCIA_PROBE
  No help

PCMCIA_PXA2XX
  Say Y here to include support for the PXA2xx PCMCIA controller

PCMCIA_QLOGIC
  Say Y here if you intend to attach this type of PCMCIA SCSI host
  adapter to your computer.
  
  To compile this driver as a module, choose M here: the
  module will be called qlogic_cs.

PCMCIA_RAYCS
  Say Y here if you intend to attach an Aviator/Raytheon PCMCIA
  (PC-card) wireless Ethernet networking card to your computer.
  Please read the file
  <file:Documentation/networking/device_drivers/wifi/ray_cs.rst> for
  details.
  
  To compile this driver as a module, choose M here: the module will be
  called ray_cs.  If unsure, say N.

PCMCIA_SA1100
  Say Y here to include support for SA11x0-based PCMCIA or CF
  sockets, found on HP iPAQs, Yopy, and other StrongARM(R)/
  Xscale(R) embedded machines.
  
  This driver is also available as a module called sa1100_cs.

PCMCIA_SA1111
  Say Y  here to include support for SA1111-based PCMCIA or CF
  sockets, found on the Jornada 720, Graphicsmaster and other
  StrongARM(R)/Xscale(R) embedded machines.
  
  This driver is also available as a module called sa1111_cs.

PCMCIA_SA11XX_BASE
  No help

PCMCIA_SMC91C92
  Say Y here if you intend to attach an SMC 91Cxx compatible PCMCIA
  (PC-card) Ethernet or Fast Ethernet card to your computer.
  
  To compile this driver as a module, choose M here: the module will be
  called smc91c92_cs.  If unsure, say N.

PCMCIA_SOC_COMMON
  No help

PCMCIA_SPECTRUM
  This is a driver for 802.11b cards using RAM-loadable Symbol
  firmware, such as Symbol Wireless Networker LA4100, CompactFlash
  cards by Socket Communications and Intel PRO/Wireless 2011B.
  
  This driver requires firmware download on startup.  Utilities
  for downloading Symbol firmware are available at
  <http://sourceforge.net/projects/orinoco/>

PCMCIA_SYM53C500
  Say Y here if you have a New Media Bus Toaster or other PCMCIA
  SCSI adapter based on the Symbios 53c500 controller.
  
  To compile this driver as a module, choose M here: the
  module will be called sym53c500_cs.

PCMCIA_VRC4171
  No help

PCMCIA_WL3501
  A driver for WL3501 PCMCIA 802.11 wireless cards made by Planet.
  It has basic support for Linux wireless extensions and initial
  micro support for ethtool.

PCMCIA_XIRC2PS
  Say Y here if you intend to attach a Xircom 16-bit PCMCIA (PC-card)
  Ethernet or Fast Ethernet card to your computer.
  
  To compile this driver as a module, choose M here: the module will be
  called xirc2ps_cs.  If unsure, say N.

PCMCIA_XIRCOM
  This driver is for the Digital "Tulip" Ethernet CardBus adapters.
  It should work with most DEC 21*4*-based chips/ethercards, as well
  as with work-alike chips from Lite-On (PNIC) and Macronix (MXIC) and
  ASIX.
  
  To compile this driver as a module, choose M here. The module will
  be called xircom_cb.  If unsure, say N.

PCMCIA_XXS1500
  Support for the PCMCIA/CF socket interface on MyCable XXS1500
  systems.
  
  This driver is also available as a module called xxs1500_ss.ko

PCNET32
  If you have a PCnet32 or PCnetPCI based network (Ethernet) card,
  answer Y here.
  
  To compile this driver as a module, choose M here. The module
  will be called pcnet32.

PCSPKR_PLATFORM
  This option allows to disable the internal PC-Speaker
  support, saving some memory.

PCS_LYNX
  This module provides helpers to phylink for managing the Lynx PCS
  which is part of the Layerscape and QorIQ Ethernet SERDES.

PCS_XPCS
  This module provides helper functions for Synopsys DesignWare XPCS
  controllers.

PCWATCHDOG
  This is the driver for the Berkshire Products ISA-PC Watchdog card.
  This card simply watches your kernel to make sure it doesn't freeze,
  and if it does, it reboots your computer after a certain amount of
  time. This driver is like the WDT501 driver but for different
  hardware. Please read <file:Documentation/watchdog/pcwd-watchdog.rst>. The PC
  watchdog cards can be ordered from <http://www.berkprod.com/>.
  
  To compile this driver as a module, choose M here: the
  module will be called pcwd.
  
  Most people will say N.

PD6729
  This provides support for the Cirrus PD6729 PCI-to-PCMCIA bridge
  device, found in some older laptops and PCMCIA card readers.

PDA_POWER
  Say Y here to enable generic power driver for PDAs and phones with
  one or two external power supplies (AC/USB) connected to main and
  backup batteries, and optional builtin charger.

PDC_ADMA
  This option enables support for Pacific Digital ADMA controllers
  
  If unsure, say N.

PDC_CONSOLE
  Saying Y here will enable the software based PDC console to be
  used as the system console.  This is useful for machines in
  which the hardware based console has not been written yet.  The
  following steps must be completed to use the PDC console:
  
    1. create the device entry (mknod /dev/ttyB0 c 11 0)
    2. Edit the /etc/inittab to start a getty listening on /dev/ttyB0
    3. Add device ttyB0 to /etc/securetty (if you want to log on as
         root on this console.)
    4. Change the kernel command console parameter to: console=ttyB0

PEAQ_WMI
  Say Y here if you want to support WMI-based hotkeys on PEAQ 2-in-1s.

PERCPU_STATS
  This feature collects and exposes statistics via debugfs. The
  information includes global and per chunk statistics, which can
  be used to help understand percpu memory usage.

PERCPU_TEST
  Enable this option to build test module which validates per-cpu
  operations.
  
  If unsure, say N.

PERF_EVENTS
  Enable kernel support for various performance events provided
  by software and hardware.
  
  Software events are supported either built-in or via the
  use of generic tracepoints.
  
  Most modern CPUs support performance events via performance
  counter registers. These registers count the number of certain
  types of hw events: such as instructions executed, cachemisses
  suffered, or branches mis-predicted - without slowing down the
  kernel or applications. These registers can also trigger interrupts
  when a threshold number of events have passed - and can thus be
  used to profile the code that runs on that CPU.
  
  The Linux Performance Event subsystem provides an abstraction of
  these software and hardware event capabilities, available via a
  system call and used by the "perf" utility in tools/perf/. It
  provides per task and per CPU counters, and it provides event
  capabilities on top of those.
  
  Say Y if unsure.

PERF_EVENTS_AMD_POWER
  Provide power reporting mechanism support for AMD processors.
  Currently, it leverages X86_FEATURE_ACC_POWER
  (CPUID Fn8000_0007_EDX[12]) interface to calculate the
  average power consumption on Family 15h processors.

PERF_EVENTS_INTEL_CSTATE
  Include support for Intel cstate performance events for power
  monitoring on modern processors.

PERF_EVENTS_INTEL_RAPL
  Include support for Intel and AMD rapl performance events for power
  monitoring on modern processors.

PERF_EVENTS_INTEL_UNCORE
  Include support for Intel uncore performance events. These are
  available on NehalemEX and more modern processors.

PERF_USE_VMALLOC
  See tools/perf/design.txt for details

PERSISTENT_KEYRINGS
  This option provides a register of persistent per-UID keyrings,
  primarily aimed at Kerberos key storage.  The keyrings are persistent
  in the sense that they stay around after all processes of that UID
  have exited, not that they survive the machine being rebooted.
  
  A particular keyring may be accessed by either the user whose keyring
  it is or by a process with administrative privileges.  The active
  LSMs gets to rule on which admin-level processes get to access the
  cache.
  
  Keyrings are created and added into the register upon demand and get
  removed if they expire (a default timeout is set upon creation).

PGTABLE_LEVELS
  No help

PHANTOM
  Say Y here if you want to build a driver for Sensable PHANToM device.
  
  This driver is only for PCI PHANToMs.
  
  If you choose to build module, its name will be phantom. If unsure,
  say N here.

PHONET
  The Phone Network protocol (PhoNet) is a packet-oriented
  communication protocol developed by Nokia for use with its modems.
  
  This is required for Maemo to use cellular data connectivity (if
  supported). It can also be used to control Nokia phones
  from a Linux computer, although AT commands may be easier to use.
  
  To compile this driver as a module, choose M here: the module
  will be called phonet. If unsure, say N.

PHYLIB
  Ethernet controllers are usually attached to PHY
  devices.  This option provides infrastructure for
  managing PHY devices.

PHYLINK
  PHYlink models the link between the PHY and MAC, allowing fixed
  configuration links, PHYs, and Serdes links with MAC level
  autonegotiation modes.

PHYSICAL_ALIGN
  This value puts the alignment restrictions on physical address
  where kernel is loaded and run from. Kernel is compiled for an
  address which meets above alignment restriction.
  
  If bootloader loads the kernel at a non-aligned address and
  CONFIG_RELOCATABLE is set, kernel will move itself to nearest
  address aligned to above value and run from there.
  
  If bootloader loads the kernel at a non-aligned address and
  CONFIG_RELOCATABLE is not set, kernel will ignore the run time
  load address and decompress itself to the address it has been
  compiled for and run from there. The address for which kernel is
  compiled already meets above alignment restrictions. Hence the
  end result is that kernel runs from a physical address meeting
  above alignment restrictions.
  
  On 32-bit this value must be a multiple of 0x2000. On 64-bit
  this value must be a multiple of 0x200000.
  
  Don't change this unless you know what you are doing.

PHYSICAL_START
  This gives the physical address where the kernel is loaded.
  
  If kernel is a not relocatable (CONFIG_RELOCATABLE=n) then
  bzImage will decompress itself to above physical address and
  run from there. Otherwise, bzImage will run from the address where
  it has been loaded by the boot loader and will ignore above physical
  address.
  
  In normal kdump cases one does not have to set/change this option
  as now bzImage can be compiled as a completely relocatable image
  (CONFIG_RELOCATABLE=y) and be used to load and run from a different
  address. This option is mainly useful for the folks who don't want
  to use a bzImage for capturing the crash dump and want to use a
  vmlinux instead. vmlinux is not relocatable hence a kernel needs
  to be specifically compiled to run from a specific memory area
  (normally a reserved region) and this option comes handy.
  
  So if you are using bzImage for capturing the crash dump,
  leave the value here unchanged to 0x1000000 and set
  CONFIG_RELOCATABLE=y.  Otherwise if you plan to use vmlinux
  for capturing the crash dump change this value to start of
  the reserved region.  In other words, it can be set based on
  the "X" value as specified in the "crashkernel=YM@XM"
  command line boot parameter passed to the panic-ed
  kernel. Please take a look at Documentation/admin-guide/kdump/kdump.rst
  for more details about crash dumps.
  
  Usage of bzImage for capturing the crash dump is recommended as
  one does not have to build two kernels. Same kernel can be used
  as production kernel and capture kernel. Above option should have
  gone away after relocatable bzImage support is introduced. But it
  is present because there are users out there who continue to use
  vmlinux for dump capture. This option should go away down the
  line.
  
  Don't change this unless you know what you are doing.

PHYS_ADDR_T_64BIT
  No help

PHY_AM654_SERDES
  This option enables support for TI AM654 SerDes PHY used for
  PCIe.

PHY_ATH79_USB
  Enable this to support the USB PHY on Atheros AR71XX/9XXX SoCs.

PHY_BCM63XX_USBH
  Enable this to support the BCM63xx USBH PHY driver.
  If unsure, say N.

PHY_BCM_NS_USB2
  Enable this to support Broadcom USB 2.0 PHY connected to the USB
  controller on Northstar family.

PHY_BCM_NS_USB3
  Enable this to support Broadcom USB 3.0 PHY connected to the USB
  controller on Northstar family.

PHY_BCM_SR_PCIE
  Enable this to support the Broadcom Stingray PCIe PHY
  If unsure, say N.

PHY_BCM_SR_USB
  Enable this to support the Broadcom Stingray USB PHY
  driver. It supports all versions of Superspeed and
  Highspeed PHYs.
  If unsure, say N.

PHY_BERLIN_SATA
  Enable this to support the SATA PHY on Marvell Berlin SoCs.

PHY_BERLIN_USB
  Enable this to support the USB PHY on Marvell Berlin SoCs.

PHY_BRCM_SATA
  Enable this to support the Broadcom SATA PHY.
  If unsure, say N.

PHY_BRCM_USB
  Enable this to support the Broadcom STB USB PHY.
  This driver is required by the USB XHCI, EHCI and OHCI
  drivers.
  If unsure, say N.

PHY_CADENCE_DPHY
  Choose this option if you have a Cadence D-PHY in your
  system. If M is selected, the module will be called
  cdns-dphy.

PHY_CADENCE_SALVO
  Enable this to support the Cadence SALVO PHY driver,
  this PHY is a legacy PHY, and only are used for USB3
  and USB2.

PHY_CADENCE_SIERRA
  Enable this to support the Cadence Sierra PHY driver

PHY_CADENCE_TORRENT
  Support for Cadence Torrent PHY.

PHY_CPCAP_USB
  Enable this for USB to work on Motorola phones and tablets
  such as Droid 4.

PHY_CYGNUS_PCIE
  Enable this to support the Broadcom Cygnus PCIe PHY.
  If unsure, say N.

PHY_DA8XX_USB
  Enable this to support the USB PHY on DA8xx SoCs.
  
  This driver controls both the USB 1.1 PHY and the USB 2.0 PHY.

PHY_DM816X_USB
  Enable this for dm816x USB to work.

PHY_EXYNOS4210_USB2
  No help

PHY_EXYNOS4X12_USB2
  No help

PHY_EXYNOS5250_SATA
  Enable this to support SATA SerDes/Phy found on Samsung's
  Exynos5250 based SoCs.This SerDes/Phy supports SATA 1.5 Gb/s,
  SATA 3.0 Gb/s, SATA 6.0 Gb/s speeds. It supports one SATA host
  port to accept one SATA device.

PHY_EXYNOS5250_USB2
  No help

PHY_EXYNOS5_USBDRD
  Enable USB DRD PHY support for Exynos 5 SoC series.
  This driver provides PHY interface for USB 3.0 DRD controller
  present on Exynos5 SoC series.

PHY_EXYNOS_DP_VIDEO
  Support for Display Port PHY found on Samsung Exynos SoCs.

PHY_EXYNOS_MIPI_VIDEO
  Support for MIPI CSI-2 and MIPI DSI DPHY found on Samsung S5P
  and Exynos SoCs.

PHY_EXYNOS_PCIE
  Enable PCIe PHY support for Exynos SoC series.
  This driver provides PHY interface for Exynos PCIe controller.

PHY_FSL_IMX8MQ_USB
  No help

PHY_HI3660_USB
  Enable this to support the HISILICON HI3660 USB PHY.
  
  To compile this driver as a module, choose M here.

PHY_HI3670_USB
  Enable this to support the HISILICON HI3670 USB PHY.
  
  To compile this driver as a module, choose M here.

PHY_HI6220_USB
  Enable this to support the HISILICON HI6220 USB PHY.
  
  To compile this driver as a module, choose M here.

PHY_HISI_INNO_USB2
  Support for INNO USB2 PHY on HiSilicon SoCs. This Phy supports
  USB 1.5Mb/s, USB 12Mb/s, USB 480Mb/s speeds. It supports one
  USB host port to accept one USB device.

PHY_HISTB_COMBPHY
  Enable this to support the HISILICON STB SoCs COMBPHY.
  If unsure, say N.

PHY_HIX5HD2_SATA
  Support for SATA PHY on Hisilicon hix5hd2 Soc.

PHY_INGENIC_USB
  This driver provides USB PHY support for the USB controller found
  on the JZ-series and X-series SoCs from Ingenic.

PHY_INTEL_KEEMBAY_EMMC
  Choose this option if you have an Intel Keem Bay SoC.
  
  To compile this driver as a module, choose M here: the module
  will be called phy-keembay-emmc.ko.

PHY_INTEL_KEEMBAY_USB
  Choose this option if you have an Intel Keem Bay SoC.
  
  To compile this driver as a module, choose M here: the module
  will be called phy-keembay-usb.ko.

PHY_INTEL_LGM_COMBO
  Enable this to support Intel ComboPhy.
  
  This driver configures ComboPhy subsystem on Intel gateway
  chipsets which provides PHYs for various controllers, EMAC,
  SATA and PCIe.

PHY_INTEL_LGM_EMMC
  Enable this to support the Intel EMMC PHY

PHY_J721E_WIZ
  This option enables support for WIZ module present in TI's J721E
  SoC. WIZ is a serdes wrapper used to configure some of the input
  signals to the SERDES (Sierra/Torrent). This driver configures
  three clock selects (pll0, pll1, dig) and resets for each of the
  lanes.

PHY_LANTIQ_RCU_USB2
  Support for the USB PHY(s) on the Lantiq / Intel XWAY family SoCs.

PHY_LANTIQ_VRX200_PCIE
  Support for the PCIe PHY(s) on the Lantiq / Intel VRX200 and ARX300
  family SoCs.
  If unsure, say N.

PHY_LPC18XX_USB_OTG
  Enable this to support NXP LPC18xx/43xx internal USB OTG PHY.
  
  This driver is need for USB0 support on LPC18xx/43xx and takes
  care of enabling and clock setup.

PHY_MAPPHONE_MDM6600
  Enable this for MDM6600 USB modem to work on Motorola phones
  and tablets such as Droid 4.

PHY_MESON8B_USB2
  Enable this to support the Meson USB2 PHYs found in Meson8,
  Meson8b and GXBB SoCs.
  If unsure, say N.

PHY_MESON_AXG_MIPI_DPHY
  Enable this to support the Meson MIPI DPHY found in Meson AXG
  SoCs.
  If unsure, say N.

PHY_MESON_AXG_MIPI_PCIE_ANALOG
  Enable this to support the Meson MIPI + PCIE analog PHY
  found in Meson AXG SoCs.
  If unsure, say N.

PHY_MESON_AXG_PCIE
  Enable this to support the Meson MIPI + PCIE PHY found
  in Meson AXG SoCs.
  If unsure, say N.

PHY_MESON_G12A_USB2
  Enable this to support the Meson USB2 PHYs found in Meson
  G12A SoCs.
  If unsure, say N.

PHY_MESON_G12A_USB3_PCIE
  Enable this to support the Meson USB3 + PCIE Combo PHY found
  in Meson G12A SoCs.
  If unsure, say N.

PHY_MESON_GXL_USB2
  Enable this to support the Meson USB2 PHYs found in Meson
  GXL and GXM SoCs.
  If unsure, say N.

PHY_MIPHY28LP
  Enable this to support the miphy transceiver (for SATA/PCIE/USB3)
  that is part of STMicroelectronics STiH407 SoC.

PHY_MIXEL_MIPI_DPHY
  Enable this to add support for the Mixel DSI PHY as found
  on NXP's i.MX8 family of SOCs.

PHY_MMP3_HSIC
  Enable this to support Marvell MMP3 USB HSIC PHY driver for
  Marvell MMP3 SoC. This driver will be used my the Marvell EHCI
  driver to initialize the interface to internal USB HSIC
  components on MMP3-based boards.
  
  To compile this driver as a module, choose M here.

PHY_MMP3_USB
  Enable this to support Marvell MMP3 USB PHY driver for Marvell
  SoC. This driver will do the PHY initialization and shutdown.
  The PHY driver will be used by Marvell udc/ehci/otg driver.
  
  To compile this driver as a module, choose M here.

PHY_MT7621_PCI
  Say 'Y' here to add support for MediaTek MT7621 PCI PHY driver,

PHY_MTK_HDMI
  Support HDMI PHY for Mediatek SoCs.

PHY_MTK_MIPI_DSI
  Support MIPI DSI for Mediatek SoCs.

PHY_MTK_TPHY
  Say 'Y' here to add support for MediaTek T-PHY driver,
  it supports multiple usb2.0, usb3.0 ports, PCIe and
  SATA, and meanwhile supports two version T-PHY which have
  different banks layout, the T-PHY with shared banks between
  multi-ports is first version, otherwise is second version,
  so you can easily distinguish them by banks layout.

PHY_MTK_UFS
  Support for UFS M-PHY on MediaTek chipsets.
  Enable this to provide vendor-specific probing,
  initialization, power on and power off flow of
  specified M-PHYs.

PHY_MTK_XSPHY
  Enable this to support the SuperSpeedPlus XS-PHY transceiver for
  USB3.1 GEN2 controllers on MediaTek chips. The driver supports
  multiple USB2.0, USB3.1 GEN2 ports.

PHY_MVEBU_A3700_COMPHY
  This driver allows to control the comphy, a hardware block providing
  shared serdes PHYs on Marvell Armada 3700. Its serdes lanes can be
  used by various controllers: Ethernet, SATA, USB3, PCIe.

PHY_MVEBU_A3700_UTMI
  Enable this to support Marvell A3700 UTMI PHY driver.

PHY_MVEBU_A38X_COMPHY
  This driver allows to control the comphy, an hardware block providing
  shared serdes PHYs on Marvell Armada 38x. Its serdes lanes can be
  used by various controllers (Ethernet, sata, usb, PCIe...).

PHY_MVEBU_CP110_COMPHY
  This driver allows to control the comphy, an hardware block providing
  shared serdes PHYs on Marvell Armada 7k/8k (in the CP110). Its serdes
  lanes can be used by various controllers (Ethernet, sata, usb,
  PCIe...).

PHY_MVEBU_SATA
  No help

PHY_NS2_PCIE
  Enable this to support the Broadcom Northstar2 PCIe PHY.
  If unsure, say N.

PHY_NS2_USB_DRD
  Enable this to support the Broadcom Northstar2 USB DRD PHY.
  This driver initializes the PHY in either HOST or DEVICE mode.
  The host or device configuration is read from device tree.
  
  If unsure, say N.

PHY_OCELOT_SERDES
  Enable this for supporting SerDes muxing with Microsemi Ocelot.

PHY_PISTACHIO_USB
  Enable this to support the USB2.0 PHY on the IMG Pistachio SoC.

PHY_PXA_28NM_HSIC
  Enable this to support Marvell USB HSIC PHY driver for Marvell
  SoC. This driver will do the PHY initialization and shutdown.
  The PHY driver will be used by Marvell ehci driver.
  
  To compile this driver as a module, choose M here.

PHY_PXA_28NM_USB2
  Enable this to support Marvell USB 2.0 PHY driver for Marvell
  SoC. This driver will do the PHY initialization and shutdown.
  The PHY driver will be used by Marvell udc/ehci/otg driver.
  
  To compile this driver as a module, choose M here.

PHY_PXA_USB
  Enable this to support Marvell PXA USB PHY driver for Marvell
  SoC. This driver will do the PHY initialization and shutdown.
  The PHY driver will be used by Marvell udc/ehci/otg driver.
  
  To compile this driver as a module, choose M here.

PHY_QCOM_APQ8064_SATA
  No help

PHY_QCOM_IPQ4019_USB
  Support for the USB PHY-s on Qualcomm IPQ40xx SoC-s.

PHY_QCOM_IPQ806X_SATA
  No help

PHY_QCOM_IPQ806X_USB
  This option enables support for the Synopsis PHYs present inside the
  Qualcomm USB3.0 DWC3 controller on ipq806x SoC. This driver supports
  both HS and SS PHY controllers.

PHY_QCOM_PCIE2
  Enable this to support the Qualcomm PCIe PHY, used with the Synopsys
  based PCIe controller.

PHY_QCOM_QMP
  Enable this to support the QMP PHY transceiver that is used
  with controllers such as PCIe, UFS, and USB on Qualcomm chips.

PHY_QCOM_QUSB2
  Enable this to support the HighSpeed QUSB2 PHY transceiver for USB
  controllers on Qualcomm chips. This driver supports the high-speed
  PHY which is usually paired with either the ChipIdea or Synopsys DWC3
  USB IPs on MSM SOCs.

PHY_QCOM_USB_HS
  Support for the USB high-speed ULPI compliant phy on Qualcomm
  chipsets.

PHY_QCOM_USB_HSIC
  Support for the USB HSIC ULPI compliant PHY on QCOM chipsets.

PHY_QCOM_USB_HS_28NM
  Enable this to support the Qualcomm Synopsys DesignWare Core 28nm
  High-Speed PHY driver. This driver supports the Hi-Speed PHY which
  is usually paired with either the ChipIdea or Synopsys DWC3 USB
  IPs on MSM SOCs.

PHY_QCOM_USB_SNPS_FEMTO_V2
  Enable support for the USB high-speed SNPS Femto phy on Qualcomm
  chipsets.  This PHY has differences in the register map compared
  to the V1 variants.  The PHY is paired with a Synopsys DWC3 USB
  controller on Qualcomm SOCs.

PHY_QCOM_USB_SS
  Enable this to support the Super-Speed USB transceiver on various
  Qualcomm chipsets.

PHY_RALINK_USB
  This option enables support for the Ralink USB PHY found inside
  RT3352, MT7620, MT7628 and MT7688.

PHY_RCAR_GEN2
  Support for USB PHY found on Renesas R-Car generation 2 SoCs.

PHY_RCAR_GEN3_PCIE
  Support for the PCIe PHY found on Renesas R-Car generation 3 SoCs.

PHY_RCAR_GEN3_USB2
  Support for USB 2.0 PHY found on Renesas R-Car generation 3 SoCs.

PHY_RCAR_GEN3_USB3
  Support for USB 3.0 PHY found on Renesas R-Car generation 3 SoCs.

PHY_ROCKCHIP_DP
  Enable this to support the Rockchip Display Port PHY.

PHY_ROCKCHIP_DPHY_RX0
  Enable this to support the Rockchip MIPI Synopsys DPHY RX0
  associated to the Rockchip ISP module present in RK3399 SoCs.
  
  To compile this driver as a module, choose M here: the module
  will be called phy-rockchip-dphy-rx0.

PHY_ROCKCHIP_EMMC
  Enable this to support the Rockchip EMMC PHY.

PHY_ROCKCHIP_INNO_DSIDPHY
  Enable this to support the Rockchip MIPI/LVDS/TTL PHY with
  Innosilicon IP block.

PHY_ROCKCHIP_INNO_HDMI
  Enable this to support the Rockchip Innosilicon HDMI PHY.

PHY_ROCKCHIP_INNO_USB2
  Support for Rockchip USB2.0 PHY with Innosilicon IP block.

PHY_ROCKCHIP_PCIE
  Enable this to support the Rockchip PCIe PHY.

PHY_ROCKCHIP_TYPEC
  Enable this to support the Rockchip USB TYPEC PHY.

PHY_ROCKCHIP_USB
  Enable this to support the Rockchip USB 2.0 PHY.

PHY_S5PV210_USB2
  Enable USB PHY support for S5PV210. This option requires that Samsung
  USB 2.0 PHY driver is enabled and means that support for this
  particular SoC is compiled in the driver. In case of S5PV210 two phys
  are available - device and host.

PHY_SAMSUNG_UFS
  Enable this to support the Samsung UFS PHY driver for
  Samsung SoCs. This driver provides the interface for UFS
  host controller to do PHY related programming.

PHY_SAMSUNG_USB2
  Enable this to support the Samsung USB 2.0 PHY driver for Samsung
  SoCs. This driver provides the interface for USB 2.0 PHY. Support
  for particular PHYs will be enabled based on the SoC type in addition
  to this driver.

PHY_STIH407_USB
  Enable this support to enable the picoPHY device used by USB2
  and USB3 controllers on STMicroelectronics STiH407 SoC families.

PHY_STM32_USBPHYC
  Enable this to support the High-Speed USB transceivers that are part
  of some STMicroelectronics STM32 SoCs.
  
  This driver controls the entire USB PHY block: the USB PHY controller
  (USBPHYC) and the two 8-bit wide UTMI+ interfaces. First interface is
  used by an HS USB Host controller, and the second one is shared
  between an HS USB OTG controller and an HS USB Host controller,
  selected by a USB switch.

PHY_ST_SPEAR1310_MIPHY
  Support for ST SPEAr1310 MIPHY which can be used for PCIe and SATA.

PHY_ST_SPEAR1340_MIPHY
  Support for ST SPEAr1340 MIPHY which can be used for PCIe and SATA.

PHY_SUN4I_USB
  Enable this to support the transceiver that is part of Allwinner
  sunxi SoCs.
  
  This driver controls the entire USB PHY block, both the USB OTG
  parts, as well as the 2 regular USB 2 host PHYs.

PHY_SUN50I_USB3
  Enable this to support the USB3.0-capable transceiver that is
  part of Allwinner H6 SoC.
  
  This driver controls each individual USB 2+3 host PHY combo.

PHY_SUN6I_MIPI_DPHY
  Choose this option if you have an Allwinner SoC with
  MIPI-DSI support. If M is selected, the module will be
  called sun6i_mipi_dphy.

PHY_SUN9I_USB
  Enable this to support the transceiver that is part of Allwinner
  sun9i SoCs.
  
  This driver controls each individual USB 2 host PHY.

PHY_TEGRA194_P2U
  Enable this to support the P2U (PIPE to UPHY) that is part of Tegra 19x SOCs.

PHY_TEGRA_XUSB
  Choose this option if you have an NVIDIA Tegra SoC.
  
  To compile this driver as a module, choose M here: the module will
  be called phy-tegra-xusb.

PHY_TI_GMII_SEL
  This driver supports configuring of the TI CPSW Port mode depending on
  the Ethernet PHY connected to the CPSW Port.

PHY_TUSB1210
  Support for TI TUSB1210 USB ULPI PHY.

PHY_UNIPHIER_AHCI
  Enable this to support PHY implemented in AHCI controller
  on UniPhier SoCs. This driver supports PXs2 and PXs3 SoCs.

PHY_UNIPHIER_PCIE
  Enable this to support PHY implemented in PCIe controller
  on UniPhier SoCs. This driver supports LD20 and PXs3 SoCs.

PHY_UNIPHIER_USB2
  Enable this to support USB PHY implemented on USB2 controller
  on UniPhier SoCs. This driver provides interface to interact
  with USB 2.0 PHY that is part of the UniPhier SoC.
  In case of Pro4, it is necessary to specify this USB2 PHY instead
  of USB3 HS-PHY.

PHY_UNIPHIER_USB3
  Enable this to support USB PHY implemented in USB3 controller
  on UniPhier SoCs. This controller supports USB3.0 and lower speed.

PHY_XGENE
  This option enables support for APM X-Gene SoC multi-purpose PHY.

PHY_XILINX_ZYNQMP
  Enable this to support ZynqMP High Speed Gigabit Transceiver
  that is part of ZynqMP SoC.

PI433
  This option allows you to enable support for the radio module Pi433.
  
  Pi433 is a shield that fits onto the GPIO header of a Raspberry Pi
  or compatible. It extends the Raspberry Pi with the option, to
  send and receive data in the 433MHz ISM band - for example to
  communicate between two systems without using ethernet or bluetooth
  or for control or read sockets, actors, sensors, widely available
  for low price.
  
  For details or the option to buy, please visit https://pi433.de/en.html
  
  If in doubt, say N here, but saying yes most probably won't hurt

PIC32_DMT
  Watchdog driver for PIC32 instruction fetch counting timer. This specific
  timer is typically be used in misson critical and safety critical
  applications, where any single failure of the software functionality
  and sequencing must be detected.
  
  To compile this driver as a loadable module, choose M here.
  The module will be called pic32-dmt.

PIC32_EVIC
  No help

PIC32_WDT
  Watchdog driver for the built in watchdog hardware in a PIC32.
  
  Configuration bits must be set appropriately for the watchdog to be
  controlled by this driver.
  
  To compile this driver as a loadable module, choose M here.
  The module will be called pic32-wdt.

PID_NS
  Support process id namespaces.  This allows having multiple
  processes with the same pid as long as they are in different
  pid namespaces.  This is a building block of containers.

PIKA_WDT
  This enables the watchdog in the PIKA FPGA. Currently used on
  the Warp platform.

PINCONF
  No help

PINCTRL
  No help

PINCTRL_AB8500
  No help

PINCTRL_AB8505
  No help

PINCTRL_ABX500
  Select this to enable the ABx500 family IC GPIO driver

PINCTRL_ALDERLAKE
  This pinctrl driver provides an interface that allows configuring
  of Intel Alder Lake PCH pins and using them as GPIOs.

PINCTRL_AMD
  driver for memory mapped GPIO functionality on AMD platforms
  (x86 or arm).Most pins are usually muxed to some other
  functionality by firmware,so only a small amount is available
  for gpio use.
  
  Requires ACPI/FDT device enumeration code to set up a platform
  device.

PINCTRL_APQ8064
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm TLMM block found in the Qualcomm APQ8064 platform.

PINCTRL_APQ8084
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm TLMM block found in the Qualcomm APQ8084 platform.

PINCTRL_ARMADA_370
  No help

PINCTRL_ARMADA_375
  No help

PINCTRL_ARMADA_37XX
  No help

PINCTRL_ARMADA_38X
  No help

PINCTRL_ARMADA_39X
  No help

PINCTRL_ARMADA_AP806
  No help

PINCTRL_ARMADA_CP110
  No help

PINCTRL_ARMADA_XP
  No help

PINCTRL_ARTPEC6
  This is the driver for the Axis ARTPEC-6 pin controller. This driver
  supports pin function multiplexing as well as pin bias and drive
  strength configuration. Device tree integration instructions can be
  found in Documentation/devicetree/bindings/pinctrl/axis,artpec6-pinctrl.txt

PINCTRL_AS370
  No help

PINCTRL_AS3722
  AS3722 device supports the configuration of GPIO pins for different
  functionality. This driver supports the pinmux, push-pull and
  open drain configuration for the GPIO pins of AS3722 devices. It also
  supports the GPIO functionality through gpiolib.

PINCTRL_ASPEED
  No help

PINCTRL_ASPEED_G4
  Say Y here to enable pin controller support for Aspeed's 4th
  generation SoCs. GPIO is provided by a separate GPIO driver.

PINCTRL_ASPEED_G5
  Say Y here to enable pin controller support for Aspeed's 5th
  generation SoCs. GPIO is provided by a separate GPIO driver.

PINCTRL_ASPEED_G6
  Say Y here to enable pin controller support for Aspeed's 6th
  generation SoCs. GPIO is provided by a separate GPIO driver.

PINCTRL_AT91
  Say Y here to enable the at91 pinctrl driver

PINCTRL_AT91PIO4
  Say Y here to enable the at91 pinctrl/gpio driver for Atmel PIO4
  controller available on sama5d2 SoC.

PINCTRL_AXP209
  AXP PMICs provides multiple GPIOs that can be muxed for different
  functions. This driver bundles a pinctrl driver to select the function
  muxing and a GPIO driver to handle the GPIO when the GPIO function is
  selected.
  Say yes to enable pinctrl and GPIO support for the AXP209 PMIC

PINCTRL_BAYTRAIL
  driver for memory mapped GPIO functionality on Intel Baytrail
  platforms. Supports 3 banks with 102, 28 and 44 gpios.
  Most pins are usually muxed to some other functionality by firmware,
  so only a small amount is available for gpio use.
  
  Requires ACPI device enumeration code to set up a platform device.

PINCTRL_BCM281XX
  Say Y here to support Broadcom BCM281xx pinctrl driver, which is used
  for the BCM281xx SoC family, including BCM11130, BCM11140, BCM11351,
  BCM28145, and BCM28155 SoCs.  This driver requires the pinctrl
  framework.  GPIO is provided by a separate GPIO driver.

PINCTRL_BCM2835
  Say Y here to enable the Broadcom BCM2835 GPIO driver.

PINCTRL_BERLIN
  No help

PINCTRL_BERLIN_BG2
  No help

PINCTRL_BERLIN_BG2CD
  No help

PINCTRL_BERLIN_BG2Q
  No help

PINCTRL_BERLIN_BG4CT
  No help

PINCTRL_BM1880
  Pinctrl driver for Bitmain BM1880 SoC.

PINCTRL_BROXTON
  Broxton pinctrl driver provides an interface that allows
  configuring of SoC pins and using them as GPIOs.

PINCTRL_CANNONLAKE
  This pinctrl driver provides an interface that allows configuring
  of Intel Cannon Lake PCH pins and using them as GPIOs.

PINCTRL_CEDARFORK
  This pinctrl driver provides an interface that allows configuring
  of Intel Cedar Fork PCH pins and using them as GPIOs.

PINCTRL_CHERRYVIEW
  Cherryview/Braswell pinctrl driver provides an interface that
  allows configuring of SoC pins and using them as GPIOs.

PINCTRL_COH901
  Say yes here to support GPIO interface on ST-Ericsson U300.
  The names of the two IP block variants supported are
  COH 901 335 and COH 901 571/3. They contain 3, 5 or 7
  ports of 8 GPIO pins each.

PINCTRL_CS47L15
  No help

PINCTRL_CS47L35
  No help

PINCTRL_CS47L85
  No help

PINCTRL_CS47L90
  No help

PINCTRL_CS47L92
  No help

PINCTRL_CYGNUS_MUX
  Say yes here to enable the Broadcom Cygnus IOMUX driver.
  
  The Broadcom Cygnus IOMUX driver supports group based IOMUX
  configuration, with the exception that certain individual pins
  can be overridden to GPIO function

PINCTRL_DA850_PUPD
  Driver for TI DA850/OMAP-L138/AM18XX pinconf. Used to control
  pullup/pulldown pin groups.

PINCTRL_DA9062
  The Dialog DA9062 PMIC provides multiple GPIOs that can be muxed for
  different functions. This driver bundles a pinctrl driver to select the
  function muxing and a GPIO driver to handle the GPIO when the GPIO
  function is selected.
  
  Say yes to enable pinctrl and GPIO support for the DA9062 PMIC.

PINCTRL_DB8500
  No help

PINCTRL_DENVERTON
  This pinctrl driver provides an interface that allows configuring
  of Intel Denverton SoC pins and using them as GPIOs.

PINCTRL_DIGICOLOR
  No help

PINCTRL_DOVE
  No help

PINCTRL_ELKHARTLAKE
  This pinctrl driver provides an interface that allows configuring
  of Intel Elkhart Lake SoC pins and using them as GPIOs.

PINCTRL_EMMITSBURG
  This pinctrl driver provides an interface that allows configuring
  of Intel Emmitsburg pins and using them as GPIOs.

PINCTRL_EQUILIBRIUM
  Equilibrium pinctrl driver is a pinctrl & GPIO driver for Intel Lightning
  Mountain network processor SoC that supports both the linux GPIO and pin
  control frameworks. It provides interfaces to setup pinmux, assign desired
  pin functions, configure GPIO attributes for LGM SoC pins. Pinmux and
  pinconf settings are retrieved from device tree.

PINCTRL_EXYNOS
  No help

PINCTRL_EXYNOS_ARM
  No help

PINCTRL_EXYNOS_ARM64
  No help

PINCTRL_FALCON
  No help

PINCTRL_GEMINI
  No help

PINCTRL_GEMINILAKE
  This pinctrl driver provides an interface that allows configuring
  of Intel Gemini Lake SoC pins and using them as GPIOs.

PINCTRL_ICELAKE
  This pinctrl driver provides an interface that allows configuring
  of Intel Ice Lake PCH pins and using them as GPIOs.

PINCTRL_IMX
  No help

PINCTRL_IMX1
  Say Y here to enable the imx1 pinctrl driver

PINCTRL_IMX1_CORE
  No help

PINCTRL_IMX23
  No help

PINCTRL_IMX25
  Say Y here to enable the imx25 pinctrl driver

PINCTRL_IMX27
  Say Y here to enable the imx27 pinctrl driver

PINCTRL_IMX28
  No help

PINCTRL_IMX35
  Say Y here to enable the imx35 pinctrl driver

PINCTRL_IMX50
  Say Y here to enable the imx50 pinctrl driver

PINCTRL_IMX51
  Say Y here to enable the imx51 pinctrl driver

PINCTRL_IMX53
  Say Y here to enable the imx53 pinctrl driver

PINCTRL_IMX6Q
  Say Y here to enable the imx6q/dl pinctrl driver

PINCTRL_IMX6SL
  Say Y here to enable the imx6sl pinctrl driver

PINCTRL_IMX6SLL
  Say Y here to enable the imx6sll pinctrl driver

PINCTRL_IMX6SX
  Say Y here to enable the imx6sx pinctrl driver

PINCTRL_IMX6UL
  Say Y here to enable the imx6ul pinctrl driver

PINCTRL_IMX7D
  Say Y here to enable the imx7d pinctrl driver

PINCTRL_IMX7ULP
  Say Y here to enable the imx7ulp pinctrl driver

PINCTRL_IMX8DXL
  Say Y here to enable the imx8dxl pinctrl driver

PINCTRL_IMX8MM
  Say Y here to enable the imx8mm pinctrl driver

PINCTRL_IMX8MN
  Say Y here to enable the imx8mn pinctrl driver

PINCTRL_IMX8MP
  Say Y here to enable the imx8mp pinctrl driver

PINCTRL_IMX8MQ
  Say Y here to enable the imx8mq pinctrl driver

PINCTRL_IMX8QM
  Say Y here to enable the imx8qm pinctrl driver

PINCTRL_IMX8QXP
  Say Y here to enable the imx8qxp pinctrl driver

PINCTRL_IMX_SCU
  No help

PINCTRL_INGENIC
  No help

PINCTRL_INTEL
  No help

PINCTRL_IPQ4019
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm TLMM block found in the Qualcomm IPQ4019 platform.

PINCTRL_IPQ6018
  This is the pinctrl, pinmux, pinconf and gpiolib driver for
  the Qualcomm Technologies Inc. TLMM block found on the
  Qualcomm Technologies Inc. IPQ6018 platform. Select this for
  IPQ6018.

PINCTRL_IPQ8064
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm TLMM block found in the Qualcomm IPQ8064 platform.

PINCTRL_IPQ8074
  This is the pinctrl, pinmux, pinconf and gpiolib driver for
  the Qualcomm Technologies Inc. TLMM block found on the
  Qualcomm Technologies Inc. IPQ8074 platform. Select this for
  IPQ8074.

PINCTRL_IPROC_GPIO
  Say yes here to enable the Broadcom iProc GPIO driver.
  
  The Broadcom iProc based SoCs- Cygnus, NS2, NSP and Stingray, use
  same GPIO Controller IP hence this driver could be used for all.
  
  The Broadcom Cygnus SoC has 3 GPIO controllers including the ASIU
  GPIO controller (ASIU), the chipCommonG GPIO controller (CCM), and
  the always-ON GPIO controller (CRMU/AON). All 3 GPIO controllers are
  supported by this driver.
  
  The Broadcom NSP has two GPIO controllers including the ChipcommonA
  GPIO, the ChipcommonB GPIO. Later controller is supported by this
  driver.
  
  The Broadcom NS2 has two GPIO controller including the CRMU GPIO,
  the ChipcommonG GPIO. Both controllers are supported by this driver.
  
  The Broadcom Stingray GPIO controllers are supported by this driver.
  
  All above SoCs GPIO controllers support basic PINCONF functions such
  as bias pull up, pull down, and drive strength configurations, when
  these pins are muxed to GPIO.
  
  It provides the framework where pins from the individual GPIO can be
  individually muxed to GPIO function, through interaction with the
  SoCs IOMUX controller. This features could be used only on SoCs which
  support individual pin muxing.

PINCTRL_JASPERLAKE
  This pinctrl driver provides an interface that allows configuring
  of Intel Jasper Lake PCH pins and using them as GPIOs.

PINCTRL_KIRKWOOD
  No help

PINCTRL_LAKEFIELD
  This pinctrl driver provides an interface that allows configuring
  of Intel Lakefield SoC pins and using them as GPIOs.

PINCTRL_LANTIQ
  No help

PINCTRL_LEWISBURG
  This pinctrl driver provides an interface that allows configuring
  of Intel Lewisburg pins and using them as GPIOs.

PINCTRL_LOCHNAGAR
  This driver supports configuring the GPIO and other pin configuration
  of the Cirrus Logic Lochnagar audio development board.

PINCTRL_LPASS_LPI
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm Technologies Inc LPASS (Low Power Audio SubSystem) LPI
  (Low Power Island) found on the Qualcomm Technologies Inc SoCs.

PINCTRL_LPC18XX
  Pinctrl driver for NXP LPC18xx/43xx System Control Unit (SCU).

PINCTRL_LYNXPOINT
  Lynxpoint is the PCH of Intel Haswell. This pinctrl driver
  provides an interface that allows configuring of PCH pins and
  using them as GPIOs.

PINCTRL_MADERA
  No help

PINCTRL_MAX77620
  Say Yes here to enable Pin control support for Maxim PMIC MAX77620.
  This PMIC has 8 GPIO pins that work as GPIO as well as special
  function in alternate mode. This driver also configure push-pull,
  open drain, FPS slots etc.

PINCTRL_MCP23S08
  SPI/I2C driver for Microchip MCP23S08 / MCP23S17 / MCP23S18 /
  MCP23008 / MCP23017 / MCP23018 I/O expanders.
  This provides a GPIO interface supporting inputs and outputs and a
  corresponding interrupt-controller.

PINCTRL_MCP23S08_I2C
  No help

PINCTRL_MCP23S08_SPI
  No help

PINCTRL_MDM9615
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm TLMM block found in the Qualcomm 9615 platform.

PINCTRL_MERRIFIELD
  Merrifield Family-Level Interface Shim (FLIS) driver provides an
  interface that allows configuring of SoC pins and using them as
  GPIOs.

PINCTRL_MESON
  No help

PINCTRL_MESON8
  No help

PINCTRL_MESON8B
  No help

PINCTRL_MESON8_PMX
  No help

PINCTRL_MESON_A1
  No help

PINCTRL_MESON_AXG
  No help

PINCTRL_MESON_AXG_PMX
  No help

PINCTRL_MESON_G12A
  No help

PINCTRL_MESON_GXBB
  No help

PINCTRL_MESON_GXL
  No help

PINCTRL_MICROCHIP_SGPIO
  Support for the serial GPIO interface used on Microsemi and
  Microchip SoC's. By using a serial interface, the SIO
  controller significantly extends the number of available
  GPIOs with a minimum number of additional pins on the
  device. The primary purpose of the SIO controller is to
  connect control signals from SFP modules and to act as an
  LED controller.

PINCTRL_MSM
  No help

PINCTRL_MSM8226
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm Technologies Inc TLMM block found on the Qualcomm
  Technologies Inc MSM8226 platform.

PINCTRL_MSM8660
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm TLMM block found in the Qualcomm 8660 platform.

PINCTRL_MSM8916
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm TLMM block found on the Qualcomm 8916 platform.

PINCTRL_MSM8953
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm TLMM block found on the Qualcomm MSM8953 platform.
  The Qualcomm APQ8053, SDM450, SDM632 platforms are also
  supported by this driver.

PINCTRL_MSM8960
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm TLMM block found in the Qualcomm 8960 platform.

PINCTRL_MSM8976
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm TLMM block found on the Qualcomm MSM8976 platform.
  The Qualcomm MSM8956, APQ8056, APQ8076 platforms are also
  supported by this driver.

PINCTRL_MSM8994
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm TLMM block found in the Qualcomm 8994 platform. The
  Qualcomm 8992 platform is also supported by this driver.

PINCTRL_MSM8996
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm TLMM block found in the Qualcomm MSM8996 platform.

PINCTRL_MSM8998
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm TLMM block found in the Qualcomm MSM8998 platform.

PINCTRL_MSM8X74
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm TLMM block found in the Qualcomm 8974 platform.

PINCTRL_MT2701
  No help

PINCTRL_MT2712
  No help

PINCTRL_MT6397
  No help

PINCTRL_MT6765
  No help

PINCTRL_MT6779
  Say yes here to support pin controller and gpio driver
  on Mediatek MT6779 SoC.
  In MTK platform, we support virtual gpio and use it to
  map specific eint which doesn't have real gpio pin.

PINCTRL_MT6797
  No help

PINCTRL_MT7622
  No help

PINCTRL_MT7623
  No help

PINCTRL_MT7629
  No help

PINCTRL_MT8127
  No help

PINCTRL_MT8135
  No help

PINCTRL_MT8167
  No help

PINCTRL_MT8173
  No help

PINCTRL_MT8183
  No help

PINCTRL_MT8192
  No help

PINCTRL_MT8516
  No help

PINCTRL_MTK
  No help

PINCTRL_MTK_MOORE
  No help

PINCTRL_MTK_PARIS
  No help

PINCTRL_MTK_V2
  No help

PINCTRL_MVEBU
  No help

PINCTRL_MXS
  No help

PINCTRL_NOMADIK
  No help

PINCTRL_NPCM7XX
  Say Y here to enable pin controller and GPIO support
  for Nuvoton NPCM750/730/715/705 SoCs.

PINCTRL_NS
  Say yes here to enable the Broadcom NS SoC pins driver.
  
  The Broadcom Northstar pins driver supports muxing multi-purpose pins
  that can be used for various functions (e.g. SPI, I2C, UART) as well
  as GPIOs.

PINCTRL_NS2_MUX
  Say yes here to enable the Broadcom NS2 MUX driver.
  
  The Broadcom Northstar2 IOMUX driver supports group based IOMUX
  configuration.

PINCTRL_NSP_GPIO
  Say yes here to enable the Broadcom NSP GPIO driver.
  
  The Broadcom Northstar Plus SoC ChipcommonA GPIO controller is
  supported by this driver.
  
  The ChipcommonA GPIO controller support basic PINCONF functions such
  as bias pull up, pull down, and drive strength configurations, when
  these pins are muxed to GPIO.

PINCTRL_NSP_MUX
  Say yes here to enable the Broadcom NSP SOC IOMUX driver.
  
  The Broadcom Northstar Plus IOMUX driver supports pin based IOMUX
  configuration, with certain individual pins can be overridden
  to GPIO function.

PINCTRL_OCELOT
  No help

PINCTRL_ORION
  No help

PINCTRL_OWL
  Say Y here to enable Actions Semi OWL pinctrl driver

PINCTRL_OXNAS
  No help

PINCTRL_PALMAS
  Palmas device supports the configuration of pins for different
  functionality. This driver supports the pinmux, push-pull and
  open drain configuration for the Palmas series devices like
  TPS65913, TPS80036 etc.

PINCTRL_PFC_EMEV2
  No help

PINCTRL_PFC_R8A73A4
  No help

PINCTRL_PFC_R8A7740
  No help

PINCTRL_PFC_R8A7742
  No help

PINCTRL_PFC_R8A7743
  No help

PINCTRL_PFC_R8A7744
  No help

PINCTRL_PFC_R8A7745
  No help

PINCTRL_PFC_R8A77470
  No help

PINCTRL_PFC_R8A774A1
  No help

PINCTRL_PFC_R8A774B1
  No help

PINCTRL_PFC_R8A774C0
  No help

PINCTRL_PFC_R8A774E1
  No help

PINCTRL_PFC_R8A7778
  No help

PINCTRL_PFC_R8A7779
  No help

PINCTRL_PFC_R8A7790
  No help

PINCTRL_PFC_R8A7791
  No help

PINCTRL_PFC_R8A7792
  No help

PINCTRL_PFC_R8A7793
  No help

PINCTRL_PFC_R8A7794
  No help

PINCTRL_PFC_R8A77950
  No help

PINCTRL_PFC_R8A77951
  No help

PINCTRL_PFC_R8A77960
  No help

PINCTRL_PFC_R8A77961
  No help

PINCTRL_PFC_R8A77965
  No help

PINCTRL_PFC_R8A77970
  No help

PINCTRL_PFC_R8A77980
  No help

PINCTRL_PFC_R8A77990
  No help

PINCTRL_PFC_R8A77995
  No help

PINCTRL_PFC_SH7203
  No help

PINCTRL_PFC_SH7264
  No help

PINCTRL_PFC_SH7269
  No help

PINCTRL_PFC_SH73A0
  No help

PINCTRL_PFC_SH7720
  No help

PINCTRL_PFC_SH7722
  No help

PINCTRL_PFC_SH7723
  No help

PINCTRL_PFC_SH7724
  No help

PINCTRL_PFC_SH7734
  No help

PINCTRL_PFC_SH7757
  No help

PINCTRL_PFC_SH7785
  No help

PINCTRL_PFC_SH7786
  No help

PINCTRL_PFC_SHX3
  No help

PINCTRL_PIC32
  This is the pin controller and gpio driver for Microchip PIC32
  microcontrollers. This option is selected automatically when specific
  machine and arch are selected to build.

PINCTRL_PIC32MZDA
  No help

PINCTRL_PISTACHIO
  No help

PINCTRL_PXA
  No help

PINCTRL_PXA25X
  This is the pinctrl, pinmux, pinconf driver for the Marvell
  PXA2xx block found in the pxa25x platforms.

PINCTRL_PXA27X
  This is the pinctrl, pinmux, pinconf driver for the Marvell
  PXA2xx block found in the pxa27x platforms.

PINCTRL_QCOM_SPMI_PMIC
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm GPIO and MPP blocks found in the Qualcomm PMIC's chips,
  which are using SPMI for communication with SoC. Example PMIC's
  devices are pm8841, pm8941 and pma8084.

PINCTRL_QCOM_SSBI_PMIC
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm GPIO and MPP blocks found in the Qualcomm PMIC's chips,
  which are using SSBI for communication with SoC. Example PMIC's
  devices are pm8058 and pm8921.

PINCTRL_QCS404
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  TLMM block found in the Qualcomm QCS404 platform.

PINCTRL_QDF2XXX
  This is the GPIO driver for the TLMM block found on the
  Qualcomm Technologies QDF2xxx SOCs.

PINCTRL_RALINK
  No help

PINCTRL_RENESAS
  This enables pin control drivers for Renesas SuperH and ARM platforms

PINCTRL_RK805
  This selects the pinctrl driver for RK805.

PINCTRL_ROCKCHIP
  No help

PINCTRL_RT2880
  No help

PINCTRL_RZA1
  This selects pinctrl driver for Renesas RZ/A1 platforms.

PINCTRL_RZA2
  This selects GPIO and pinctrl driver for Renesas RZ/A2 platforms.

PINCTRL_RZN1
  This selects pinctrl driver for Renesas RZ/N1 devices.

PINCTRL_S3C24XX
  No help

PINCTRL_S3C64XX
  No help

PINCTRL_S500
  Say Y here to enable Actions Semi S500 pinctrl driver

PINCTRL_S700
  Say Y here to enable Actions Semi S700 pinctrl driver

PINCTRL_S900
  Say Y here to enable Actions Semi S900 pinctrl driver

PINCTRL_SAMSUNG
  No help

PINCTRL_SC7180
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm Technologies Inc TLMM block found on the Qualcomm
  Technologies Inc SC7180 platform.

PINCTRL_SC7280
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm Technologies Inc TLMM block found on the Qualcomm
  Technologies Inc SC7280 platform.

PINCTRL_SDM660
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm Technologies Inc TLMM block found on the Qualcomm
  Technologies Inc SDM660 platform.

PINCTRL_SDM845
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm Technologies Inc TLMM block found on the Qualcomm
  Technologies Inc SDM845 platform.

PINCTRL_SDX55
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm Technologies Inc TLMM block found on the Qualcomm
  Technologies Inc SDX55 platform.

PINCTRL_SH_FUNC_GPIO
  This enables legacy function GPIOs for SH platforms

PINCTRL_SH_PFC
  This enables common pin control functionality for EMMA Mobile, R-Car,
  R-Mobile, RZ/G, SH, and SH-Mobile platforms.

PINCTRL_SH_PFC_GPIO
  This enables pin control and GPIO drivers for SH/SH Mobile platforms

PINCTRL_SINGLE
  This selects the device tree based generic pinctrl driver.

PINCTRL_SIRF
  No help

PINCTRL_SM8150
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm Technologies Inc TLMM block found on the Qualcomm
  Technologies Inc SM8150 platform.

PINCTRL_SM8250
  This is the pinctrl, pinmux, pinconf and gpiolib driver for the
  Qualcomm Technologies Inc TLMM block found on the Qualcomm
  Technologies Inc SM8250 platform.

PINCTRL_SPEAR
  This enables pin control drivers for SPEAr Platform

PINCTRL_SPEAR1310
  No help

PINCTRL_SPEAR1340
  No help

PINCTRL_SPEAR300
  No help

PINCTRL_SPEAR310
  No help

PINCTRL_SPEAR320
  No help

PINCTRL_SPEAR3XX
  No help

PINCTRL_SPEAR_PLGPIO
  Say yes here to support PLGPIO controller on ST Microelectronics SPEAr
  SoCs.

PINCTRL_SPRD
  Say Y here to enable Spreadtrum pinctrl driver

PINCTRL_SPRD_SC9860
  Say Y here to enable Spreadtrum SC9860 pinctrl driver

PINCTRL_ST
  No help

PINCTRL_STM32
  No help

PINCTRL_STM32F429
  No help

PINCTRL_STM32F469
  No help

PINCTRL_STM32F746
  No help

PINCTRL_STM32F769
  No help

PINCTRL_STM32H743
  No help

PINCTRL_STM32MP157
  No help

PINCTRL_STMFX
  Driver for STMicroelectronics Multi-Function eXpander (STMFX)
  GPIO expander.
  This provides a GPIO interface supporting inputs and outputs,
  and configuring push-pull, open-drain, and can also be used as
  interrupt-controller.

PINCTRL_STN8815
  No help

PINCTRL_SUN4I_A10
  No help

PINCTRL_SUN50I_A100
  No help

PINCTRL_SUN50I_A100_R
  No help

PINCTRL_SUN50I_A64
  No help

PINCTRL_SUN50I_A64_R
  No help

PINCTRL_SUN50I_H5
  No help

PINCTRL_SUN50I_H6
  No help

PINCTRL_SUN50I_H6_R
  No help

PINCTRL_SUN5I
  No help

PINCTRL_SUN6I_A31
  No help

PINCTRL_SUN6I_A31_R
  No help

PINCTRL_SUN8I_A23
  No help

PINCTRL_SUN8I_A23_R
  No help

PINCTRL_SUN8I_A33
  No help

PINCTRL_SUN8I_A83T
  No help

PINCTRL_SUN8I_A83T_R
  No help

PINCTRL_SUN8I_H3
  No help

PINCTRL_SUN8I_H3_R
  No help

PINCTRL_SUN8I_V3S
  No help

PINCTRL_SUN9I_A80
  No help

PINCTRL_SUN9I_A80_R
  No help

PINCTRL_SUNIV_F1C100S
  No help

PINCTRL_SUNRISEPOINT
  Sunrisepoint is the PCH of Intel Skylake. This pinctrl driver
  provides an interface that allows configuring of PCH pins and
  using them as GPIOs.

PINCTRL_SUNXI
  No help

PINCTRL_SX150X
  Say yes here to provide support for Semtech SX150x-series I2C
  GPIO expanders as pinctrl module.
  Compatible models include:
  - 8 bits:  sx1508q, sx1502q
  - 16 bits: sx1509q, sx1506q

PINCTRL_TB10X
  No help

PINCTRL_TEGRA
  No help

PINCTRL_TEGRA114
  No help

PINCTRL_TEGRA124
  No help

PINCTRL_TEGRA194
  No help

PINCTRL_TEGRA20
  No help

PINCTRL_TEGRA210
  No help

PINCTRL_TEGRA30
  No help

PINCTRL_TEGRA_XUSB
  No help

PINCTRL_TIGERLAKE
  This pinctrl driver provides an interface that allows configuring
  of Intel Tiger Lake PCH pins and using them as GPIOs.

PINCTRL_TI_IODELAY
  Say Y here to support Texas Instruments' IO delay pinconf driver.
  IO delay module is used for the DRA7 SoC family.

PINCTRL_TMPV7700
  No help

PINCTRL_U300
  No help

PINCTRL_UNIPHIER
  No help

PINCTRL_UNIPHIER_LD11
  No help

PINCTRL_UNIPHIER_LD20
  No help

PINCTRL_UNIPHIER_LD4
  No help

PINCTRL_UNIPHIER_LD6B
  No help

PINCTRL_UNIPHIER_PRO4
  No help

PINCTRL_UNIPHIER_PRO5
  No help

PINCTRL_UNIPHIER_PXS2
  No help

PINCTRL_UNIPHIER_PXS3
  No help

PINCTRL_UNIPHIER_SLD8
  No help

PINCTRL_VF610
  Say Y here to enable the Freescale Vybrid VF610 pinctrl driver

PINCTRL_VISCONTI
  No help

PINCTRL_VT8500
  Say yes here to support the gpio/pin control module on
  VIA VT8500 SoCs.

PINCTRL_WM8505
  Say yes here to support the gpio/pin control module on
  Wondermedia WM8505 SoCs.

PINCTRL_WM8650
  Say yes here to support the gpio/pin control module on
  Wondermedia WM8650 SoCs.

PINCTRL_WM8750
  Say yes here to support the gpio/pin control module on
  Wondermedia WM8750 SoCs.

PINCTRL_WM8850
  Say yes here to support the gpio/pin control module on
  Wondermedia WM8850 SoCs.

PINCTRL_WMT
  No help

PINCTRL_XWAY
  No help

PINCTRL_ZX
  No help

PINCTRL_ZX296718
  Say Y here to enable the ZX296718 pinctrl driver

PINCTRL_ZYNQ
  This selects the pinctrl driver for Xilinx Zynq.

PING
  Say Y here to build a driver for GPIO bitbanged ranger sensors
  with just one GPIO for the trigger and echo. This driver can be
  used to measure the distance of objects.
  
  Actually supported are:
  - Parallax PING))) (ultrasonic)
  - Parallax LaserPING (time-of-flight)
  
  To compile this driver as a module, choose M here: the
  module will be called ping.

PINMUX
  No help

PKCS7_MESSAGE_PARSER
  This option provides support for parsing PKCS#7 format messages for
  signature data and provides the ability to verify the signature.

PKCS7_TEST_KEY
  This option provides a type of key that can be loaded up from a
  PKCS#7 message - provided the message is signed by a trusted key.  If
  it is, the PKCS#7 wrapper is discarded and reading the key returns
  just the payload.  If it isn't, adding the key will fail with an
  error.
  
  This is intended for testing the PKCS#7 parser.

PKCS8_PRIVATE_KEY_PARSER
  This option provides support for parsing PKCS#8 format blobs for
  private key data and provides the ability to instantiate a crypto key
  from that data.

PKEY
  With this option enabled the pkey kernel module provides an API
  for creation and handling of protected keys. Other parts of the
  kernel or userspace applications may use these functions.
  
  Select this option if you want to enable the kernel and userspace
  API for proteced key handling.
  
  Please note that creation of protected keys from secure keys
  requires to have at least one CEX card in coprocessor mode
  available at runtime.

PL320_MBOX
  An implementation of the ARM PL320 Interprocessor Communication
  Mailbox (IPCM), tailored for the Calxeda Highbank. It is used to
  send short messages between Highbank's A9 cores and the EnergyCore
  Management Engine, primarily for cpufreq. Say Y here if you want
  to use the PL320 IPCM support.

PL330_DMA
  Select if your platform has one or more PL330 DMACs.
  You need to provide platform specific settings via
  platform_data for a dma-pl330 device.

PL353_SMC
  This driver is for the ARM PL351/PL353 Static Memory
  Controller(SMC) module.

PLATFORM_MHU
  Say Y here if you want to build a platform specific variant MHU
  controller driver.
  The controller has a maximum of 3 mailbox channels, the last of
  which can be used in Secure mode only.

PLATFORM_SI4713
  This is a driver for I2C devices with the Silicon Labs SI4713
  chip.
  
  Say Y here if you want to connect this type of radio to your
  computer's I2C port.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-platform-si4713.

PLDMFW
  No help

PLIP
  PLIP (Parallel Line Internet Protocol) is used to create a
  reasonably fast mini network consisting of two (or, rarely, more)
  local machines.  A PLIP link from a Linux box is a popular means to
  install a Linux distribution on a machine which doesn't have a
  CD-ROM drive (a minimal system has to be transferred with floppies
  first). The kernels on both machines need to have this PLIP option
  enabled for this to work.
  
  The PLIP driver has two modes, mode 0 and mode 1.  The parallel
  ports (the connectors at the computers with 25 holes) are connected
  with "null printer" or "Turbo Laplink" cables which can transmit 4
  bits at a time (mode 0) or with special PLIP cables, to be used on
  bidirectional parallel ports only, which can transmit 8 bits at a
  time (mode 1); you can find the wiring of these cables in
  <file:Documentation/networking/plip.rst>.  The cables can be up to
  15m long.  Mode 0 works also if one of the machines runs DOS/Windows
  and has some PLIP software installed, e.g. the Crynwr PLIP packet
  driver (<http://oak.oakland.edu/simtel.net/msdos/pktdrvr-pre.html>)
  and winsock or NCSA's telnet.
  
  If you want to use PLIP, say Y and read the PLIP mini-HOWTO as well
  as the NET-3-HOWTO, both available from
  <http://www.tldp.org/docs.html#howto>.  Note that the PLIP
  protocol has been changed and this PLIP driver won't work together
  with the PLIP support in Linux versions 1.0.x.  This option enlarges
  your kernel by about 8 KB.
  
  To compile this driver as a module, choose M here. The module
  will be called plip. If unsure, say Y or M, in case you buy
  a laptop later.

PLX_DMA
  Some PLX ExpressLane PCI Switches support additional DMA engines.
  These are exposed via extra functions on the switch's
  upstream port. Each function exposes one DMA channel.

PLX_HERMES
  Enable support for PCMCIA cards supported by the "Hermes" (aka
  orinoco) driver when used in PLX9052 based PCI adaptors.  These
  adaptors are not a full PCMCIA controller but act as a more limited
  PCI <-> PCMCIA bridge.  Several vendors sell such adaptors so that
  802.11b PCMCIA cards can be used in desktop machines.  The Netgear
  MA301 is such an adaptor.

PM
  Enable functionality allowing I/O devices to be put into energy-saving
  (low power) states, for example after a specified period of inactivity
  (autosuspended), and woken up in response to a hardware-generated
  wake-up event or a driver's request.
  
  Hardware support is generally required for this functionality to work
  and the bus type drivers of the buses the devices are on are
  responsible for the actual handling of device suspend requests and
  wake-up events.

PM8916_WATCHDOG
  Say Y here to include support watchdog timer embedded into the
  pm8916 module.

PMAC_APM_EMU
  No help

PMAC_BACKLIGHT
  Say Y here to enable Macintosh specific extensions of the generic
  backlight code. With this enabled, the brightness keys on older
  PowerBooks will be enabled so you can change the screen brightness.
  Newer models should use a userspace daemon like pbbuttonsd.

PMAC_BACKLIGHT_LEGACY
  Say Y if you want to enable legacy ioctl's on /dev/pmu. This is for
  programs which use this old interface. New and updated programs
  should use the backlight classes in sysfs.

PMAC_MEDIABAY
  This option adds support for older PowerBook's hotswap media bay
  that can contains batteries, floppy drives, or IDE devices. PCI
  devices are not fully supported in the bay as I never had one to
  try with

PMAC_RACKMETER
  This driver provides some support to control the front panel
  blue LEDs "vu-meter" of the XServer macs.

PMAC_SMU
  This option adds support for the newer G5 iMacs and PowerMacs based
  on the "SMU" system control chip which replaces the old PMU.
  If you don't know, say Y.

PMBUS
  Say yes here if you want to enable PMBus support.
  
  This driver can also be built as a module. If so, the module will
  be called pmbus_core.

PMC_ATOM
  No help

PMIC_ADP5520
  Say yes here to add support for Analog Devices AD5520 and ADP5501,
  Multifunction Power Management IC. This includes
  the I2C driver and the core APIs _only_, you have to select
  individual components like LCD backlight, LEDs, GPIOs and Kepad
  under the corresponding menus.

PMIC_DA903X
  Say yes here to add support for Dialog Semiconductor DA9030 (a.k.a
  ARAVA) and DA9034 (a.k.a MICCO), these are Power Management IC
  usually found on PXA processors-based platforms. This includes
  the I2C driver and the core APIs _only_, you have to select
  individual components like LCD backlight, voltage regulators,
  LEDs and battery-charger under the corresponding menus.

PMIC_DA9052
  No help

PMIC_OPREGION
  Select this option to enable support for ACPI operation
  region of the PMIC chip. The operation region can be used
  to control power rails and sensor reading/writing on the
  PMIC chip.

PMS7003
  Say Y here to build support for the Plantower PMS7003 particulate
  matter sensor.
  
  To compile this driver as a module, choose M here: the module will
  be called pms7003.

PM_ADVANCED_DEBUG
  Add extra sysfs attributes allowing one to access some Power Management
  fields of device objects from user space.  If you are not a kernel
  developer interested in debugging/testing Power Management, say "no".

PM_AUTOSLEEP
  Allow the kernel to trigger a system transition into a global sleep
  state automatically whenever there are no active wakeup sources.

PM_CLK
  No help

PM_DEBUG
  This option enables various debugging support in the Power Management
  code. This is helpful when debugging and reporting PM bugs, like
  suspend support.

PM_DEVFREQ
  A device may have a list of frequencies and voltages available.
  devfreq, a generic DVFS framework can be registered for a device
  in order to let the governor provided to devfreq choose an
  operating frequency based on the device driver's policy.
  
  Each device may have its own governor and policy. Devfreq can
  reevaluate the device state periodically and/or based on the
  notification to "nb", a notifier block, of devfreq.
  
  Like some CPUs with CPUfreq, a device may have multiple clocks.
  However, because the clock frequencies of a single device are
  determined by the single device's state, an instance of devfreq
  is attached to a single device and returns a "representative"
  clock frequency of the device, which is also attached
  to a device by 1-to-1. The device registering devfreq takes the
  responsibility to "interpret" the representative frequency and
  to set its every clock accordingly with the "target" callback
  given to devfreq.
  
  When OPP is used with the devfreq device, it is recommended to
  register devfreq's nb to the OPP's notifier head.  If OPP is
  used with the devfreq device, you may use OPP helper
  functions defined in devfreq.h.

PM_DEVFREQ_EVENT
  The devfreq-event device provide the raw data and events which
  indicate the current state of devfreq-event device. The provided
  data from devfreq-event device is used to monitor the state of
  device and determine the suitable size of resource to reduce the
  wasted resource.
  
  The devfreq-event device can support the various type of events
  (e.g., raw data, utilization, latency, bandwidth). The events
  may be used by devfreq governor and other subsystem.

PM_GENERIC_DOMAINS
  No help

PM_GENERIC_DOMAINS_OF
  No help

PM_GENERIC_DOMAINS_SLEEP
  No help

PM_NOTIFIER_ERROR_INJECT
  This option provides the ability to inject artificial errors to
  PM notifier chain callbacks.  It is controlled through debugfs
  interface /sys/kernel/debug/notifier-error-inject/pm
  
  If the notifier call chain should be failed with some events
  notified, write the error code to "actions/<notifier event>/error".
  
  Example: Inject PM suspend error (-12 = -ENOMEM)
  
  # cd /sys/kernel/debug/notifier-error-inject/pm/
  # echo -12 > actions/PM_SUSPEND_PREPARE/error
  # echo mem > /sys/power/state
  bash: echo: write error: Cannot allocate memory
  
  To compile this code as a module, choose M here: the module will
  be called pm-notifier-error-inject.
  
  If unsure, say N.

PM_OPP
  SOCs have a standard set of tuples consisting of frequency and
  voltage pairs that the device will support per voltage domain. This
  is called Operating Performance Point or OPP. The actual definitions
  of OPP varies over silicon within the same family of devices.
  
  OPP layer organizes the data internally using device pointers
  representing individual voltage domains and provides SOC
  implementations a ready to use framework to manage OPPs.
  For more information, read <file:Documentation/power/opp.rst>

PM_QOS_KUNIT_TEST
  No help

PM_SLEEP
  No help

PM_SLEEP_DEBUG
  No help

PM_SLEEP_SMP
  No help

PM_SLEEP_SMP_NONZERO_CPU
  If an arch can suspend (for suspend, hibernate, kexec, etc) on a
  non-zero numbered CPU, it may define ARCH_SUSPEND_NONZERO_CPU. This
  will allow nohz_full mask to include CPU0.

PM_STD_PARTITION
  The default resume partition is the partition that the suspend-
  to-disk implementation will look for a suspended disk image.
  
  The partition specified here will be different for almost every user.
  It should be a valid swap partition (at least for now) that is turned
  on before suspending.
  
  The partition specified can be overridden by specifying:
  
        resume=/dev/<other device>
  
  which will set the resume partition to the device specified.
  
  Note there is currently not a way to specify which device to save the
  suspended image to. It will simply pick the first available swap
  device.

PM_TEST_SUSPEND
  This option will let you suspend your machine during bootup, and
  make it wake up a few seconds later using an RTC wakeup alarm.
  Enable this with a kernel parameter like "test_suspend=mem".
  
  You probably want to have your system's RTC driver statically
  linked, ensuring that it's available when this test runs.

PM_TRACE
  This enables code to save the last PM event point across
  reboot. The architecture needs to support this, x86 for
  example does by saving things in the RTC, see below.
  
  The architecture specific code must provide the extern
  functions from <linux/resume-trace.h> as well as the
  <asm/resume-trace.h> header with a TRACE_RESUME() macro.
  
  The way the information is presented is architecture-
  dependent, x86 will print the information during a
  late_initcall.

PM_TRACE_RTC
  This enables some cheesy code to save the last PM event point in the
  RTC across reboots, so that you can debug a machine that just hangs
  during suspend (or more commonly, during resume).
  
  To use this debugging feature you should attempt to suspend the
  machine, reboot it and then run
  
          dmesg -s 1000000 | grep 'hash matches'
  
  CAUTION: this option will cause your machine's real-time clock to be
  set to an invalid time after a resume.

PM_WAKELOCKS
  Allow user space to create, activate and deactivate wakeup source
  objects with the help of a sysfs-based interface.

PM_WAKELOCKS_GC
  No help

PM_WAKELOCKS_LIMIT
  No help

PNFS_BLOCK
  No help

PNFS_FILE_LAYOUT
  No help

PNFS_FLEXFILE_LAYOUT
  No help

PNP
  Plug and Play (PnP) is a standard for peripherals which allows those
  peripherals to be configured by software, e.g. assign IRQ's or other
  parameters. No jumpers on the cards are needed, instead the values
  are provided to the cards from the BIOS, from the operating system,
  or using a user-space utility.
  
  Say Y here if you would like Linux to configure your Plug and Play
  devices. You should then also say Y to all of the protocols below.
  Alternatively, you can say N here and configure your PnP devices
  using user space utilities such as the isapnptools package.
  
  If unsure, say Y.

PNPACPI
  No help

PNPBIOS
  Linux uses the PNPBIOS as defined in "Plug and Play BIOS
  Specification Version 1.0A May 5, 1994" to autodetect built-in
  mainboard resources (e.g. parallel port resources).
  
  Some features (e.g. event notification, docking station information,
  ISAPNP services) are not currently implemented.
  
  If you would like the kernel to detect and allocate resources to
  your mainboard devices (on some systems they are disabled by the
  BIOS) say Y here.  Also the PNPBIOS can help prevent resource
  conflicts between mainboard devices and other bus devices.
  
  Note: ACPI is expected to supersede PNPBIOS some day, currently it
  co-exists nicely.  If you have a non-ISA system that supports ACPI,
  you probably don't need PNPBIOS support.

PNPBIOS_PROC_FS
  If you say Y here and to "/proc file system support", you will be
  able to directly access the PNPBIOS.  This includes resource
  allocation, ESCD, and other PNPBIOS services.  Using this
  interface is potentially dangerous because the PNPBIOS driver will
  not be notified of any resource changes made by writing directly.
  Also some buggy systems will fault when accessing certain features
  in the PNPBIOS /proc interface (e.g. "boot" configs).
  
  See the latest pcmcia-cs (stand-alone package) for a nice set of
  PNPBIOS /proc interface tools (lspnp and setpnp).
  
  Unless you are debugging or have other specific reasons, it is
  recommended that you say N here.
  

PNP_DEBUG_MESSAGES
  Say Y here if you want the PNP layer to be able to produce debugging
  messages if needed.  The messages can be enabled at boot-time with
  the pnp.debug kernel parameter.
  
  This option allows you to save a bit of space if you do not want
  the messages to even be built into the kernel.
  
  If you have any doubts about this, say Y here.

PNX4008_WATCHDOG
  Say Y here if to include support for the watchdog timer
  in the LPC32XX processor.
  This driver can be built as a module by choosing M. The module
  will be called pnx4008_wdt.
  
  Say N if you are unsure.

POSIX_CPU_TIMERS_TASK_WORK
  No help

POSIX_MQUEUE
  POSIX variant of message queues is a part of IPC. In POSIX message
  queues every message has a priority which decides about succession
  of receiving it by a process. If you want to compile and run
  programs written e.g. for Solaris with use of its POSIX message
  queues (functions mq_*) say Y here.
  
  POSIX message queues are visible as a filesystem called 'mqueue'
  and can be mounted somewhere if you want to do filesystem
  operations on message queues.
  
  If unsure, say Y.

POSIX_MQUEUE_SYSCTL
  No help

POSIX_TIMERS
  This includes native support for POSIX timers to the kernel.
  Some embedded systems have no use for them and therefore they
  can be configured out to reduce the size of the kernel image.
  
  When this option is disabled, the following syscalls won't be
  available: timer_create, timer_gettime: timer_getoverrun,
  timer_settime, timer_delete, clock_adjtime, getitimer,
  setitimer, alarm. Furthermore, the clock_settime, clock_gettime,
  clock_getres and clock_nanosleep syscalls will be limited to
  CLOCK_REALTIME, CLOCK_MONOTONIC and CLOCK_BOOTTIME only.
  
  If unsure say y.

POWERCAP
  The power capping sysfs interface allows kernel subsystems to expose power
  capping settings to user space in a consistent way.  Usually, it consists
  of multiple control types that determine which settings may be exposed and
  power zones representing parts of the system that can be subject to power
  capping.
  
  If you want this code to be compiled in, say Y here.

POWERNV_CPUFREQ
  This adds support for CPU frequency switching on IBM POWERNV
  platform

POWERNV_CPUIDLE
  Select this option to enable processor idle state management
  through cpuidle subsystem.

POWERNV_OP_PANEL
  If you say Y here, a special character device node, /dev/op_panel,
  will be created which exposes the operator panel display on IBM
  Power Systems machines with FSPs.
  
  If you don't require access to the operator panel display from user
  space, say N.
  
  If unsure, say M here to build it as a module called powernv-op-panel.

POWER_RESET
  Provides a number of drivers which either reset a complete board
  or shut it down, by manipulating the main power supply on the board.
  
  Say Y here to enable board reset and power off

POWER_RESET_AS3722
  This driver supports turning off board via a ams AS3722 power-off.

POWER_RESET_AT91_POWEROFF
  This driver supports poweroff for Atmel AT91SAM9 and SAMA5
  SoCs

POWER_RESET_AT91_RESET
  This driver supports restart for Atmel AT91SAM9 and SAMA5
  SoCs

POWER_RESET_AT91_SAMA5D2_SHDWC
  This driver supports the alternate shutdown controller for some Atmel
  SAMA5 SoCs. It is present for example on SAMA5D2 SoC.

POWER_RESET_AXXIA
  This driver supports restart for Axxia SoC.
  
  Say Y if you have an Axxia family SoC.

POWER_RESET_BRCMKONA
  This driver provides restart support for Broadcom Kona chips.
  
  Say Y here if you have a Broadcom Kona-based board and you wish
  to have restart support.

POWER_RESET_BRCMSTB
  This driver provides restart support for Broadcom STB boards.
  
  Say Y here if you have a Broadcom STB board and you wish
  to have restart support.

POWER_RESET_GEMINI_POWEROFF
  This driver supports turning off the Cortina Gemini SoC.
  Select this if you're building a kernel with Gemini SoC support.

POWER_RESET_GPIO
  This driver supports turning off your board via a GPIO line.
  If your board needs a GPIO high/low to power down, say Y and
  create a binding in your devicetree.

POWER_RESET_GPIO_RESTART
  This driver supports restarting your board via a GPIO line.
  If your board needs a GPIO high/low to restart, say Y and
  create a binding in your devicetree.

POWER_RESET_HISI
  Reboot support for Hisilicon boards.

POWER_RESET_KEYSTONE
  Reboot support for the KEYSTONE SoCs.

POWER_RESET_LINKSTATION
  This driver supports turning off some Buffalo LinkStations by
  setting an output pin at the ethernet PHY to the correct state.
  It also makes the device compatible with the WoL function.
  
  Say Y here if you have a Buffalo LinkStation LS421D/E.

POWER_RESET_LTC2952
  This driver supports an external powerdown trigger and board power
  down via the LTC2952. Bindings are made in the device tree.

POWER_RESET_MSM
  Power off and restart support for Qualcomm boards.

POWER_RESET_MT6323
  The power-off driver is responsible for externally shutdown down
  the power of a remote MediaTek SoC MT6323 is connected to through
  controlling a tiny circuit BBPU inside MT6323 RTC.
  
  Say Y if you have a board where MT6323 could be found.

POWER_RESET_OCELOT_RESET
  This driver supports restart for Microsemi Ocelot SoC and similar.

POWER_RESET_OXNAS
  Restart support for OXNAS/PLXTECH OX820 SoC.

POWER_RESET_PIIX4_POWEROFF
  This driver supports powering off a system using the Intel PIIX4
  southbridge, for example the MIPS Malta development board. The
  southbridge SOff state is entered in response to a request to
  power off the system.

POWER_RESET_QCOM_PON
  Power On support for Qualcomm boards.
  If you have a Qualcomm platform and need support for
  power-on and reboot reason, Say Y.
  If unsure, Say N.

POWER_RESET_QNAP
  This driver supports turning off QNAP NAS devices by sending
  commands to the microcontroller which controls the main power.
  
  Say Y if you have a QNAP NAS.

POWER_RESET_REGULATOR
  This driver supports turning off your board by disabling a
  power regulator defined in the devicetree.

POWER_RESET_RESTART
  Some boards don't actually have the ability to power off.
  Instead they restart, and u-boot holds the SoC until the
  user presses a key. u-boot then boots into Linux.

POWER_RESET_RMOBILE
  Reboot support for Renesas R-Mobile and SH-Mobile SoCs.

POWER_RESET_SC27XX
  This driver supports powering off a system through
  Spreadtrum SC27xx series PMICs. The SC27xx series
  PMICs includes the SC2720, SC2721, SC2723, SC2730
  and SC2731 chips.

POWER_RESET_ST
  Reset support for STMicroelectronics boards.

POWER_RESET_SYSCON
  Reboot support for generic SYSCON mapped register reset.

POWER_RESET_SYSCON_POWEROFF
  Poweroff support for generic SYSCON mapped register poweroff.

POWER_RESET_VERSATILE
  Power off and restart support for ARM Versatile family of
  reference boards.

POWER_RESET_VEXPRESS
  Power off and reset support for the ARM Ltd. Versatile
  Express boards.

POWER_RESET_XGENE
  Reboot support for the APM SoC X-Gene Eval boards.

POWER_RESET_ZX
  Reboot support for ZTE SoCs.

POWER_SUPPLY
  Say Y here to enable power supply class support. This allows
  power supply (batteries, AC, USB) monitoring by userspace
  via sysfs and uevent (if available) and/or APM kernel interface
  (if selected below).

POWER_SUPPLY_DEBUG
  Say Y here to enable debugging messages for power supply class
  and drivers.

POWER_SUPPLY_HWMON
  This options enables API that allows sensors found on a
  power supply device (current, voltage, temperature) to be
  exposed as a hwmon device.
  
  Say 'Y' here if you want power supplies to
  have hwmon sysfs interface too.

PPC_BESTCOMM
  BestComm is the name of the communication coprocessor found
  on the Freescale MPC5200 family of processor.  Its usage is
  optional for some drivers (like ATA), but required for
  others (like FEC).
  
  If you want to use drivers that require DMA operations,
  answer Y or M. Otherwise say N.

PPC_BESTCOMM_ATA
  This option enables the support for the ATA task.

PPC_BESTCOMM_FEC
  This option enables the support for the FEC tasks.

PPC_BESTCOMM_GEN_BD
  This option enables the support for the GenBD tasks.
  

PPC_EARLY_DEBUG_EHV_BC
  Select this option to enable early console (a.k.a. "udbg") support
  via an ePAPR byte channel.  You also need to choose the byte channel
  handle below.

PPC_EARLY_DEBUG_EHV_BC_HANDLE
  If you want early console (udbg) output through a byte channel,
  specify the handle of the byte channel to use.
  
  For this to work, the byte channel driver must be compiled
  in-kernel, not as a module.
  
  Note that only one early console driver can be enabled, so don't
  enable any others if you enable this one.
  
  If the number you specify is not a valid byte channel handle, then
  there simply will be no early console output.  This is true also
  if you don't boot under a hypervisor at all.

PPC_EPAPR_HV_BYTECHAN
  This driver creates /dev entries for each ePAPR hypervisor byte
  channel, thereby allowing applications to communicate with byte
  channels as if they were serial ports.

PPC_PASEMI_CPUFREQ
  This adds the support for frequency switching on PA Semi
  PWRficient processors.

PPDEV
  Saying Y to this adds support for /dev/parport device nodes.  This
  is needed for programs that want portable access to the parallel
  port, for instance deviceid (which displays Plug-and-Play device
  IDs).
  
  This is the parallel port equivalent of SCSI generic support (sg).
  It is safe to say N to this -- it is not needed for normal printing
  or parallel port CD-ROM/disk support.
  
  To compile this driver as a module, choose M here: the
  module will be called ppdev.
  
  If unsure, say N.

PPP
  PPP (Point to Point Protocol) is a newer and better SLIP.  It serves
  the same purpose: sending Internet traffic over telephone (and other
  serial) lines.  Ask your access provider if they support it, because
  otherwise you can't use it; most Internet access providers these
  days support PPP rather than SLIP.
  
  To use PPP, you need an additional program called pppd as described
  in the PPP-HOWTO, available at
  <http://www.tldp.org/docs.html#howto>.  Make sure that you have
  the version of pppd recommended in <file:Documentation/Changes>.
  The PPP option enlarges your kernel by about 16 KB.
  
  There are actually two versions of PPP: the traditional PPP for
  asynchronous lines, such as regular analog phone lines, and
  synchronous PPP which can be used over digital ISDN lines for
  example.  If you want to use PPP over phone lines or other
  asynchronous serial lines, you need to say Y (or M) here and also to
  the next option, "PPP support for async serial ports".  For PPP over
  synchronous lines, you should say Y (or M) here and to "Support
  synchronous PPP", below.
  
  If you said Y to "Version information on all symbols" above, then
  you cannot compile the PPP driver into the kernel; you can then only
  compile it as a module. To compile this driver as a module, choose M
  here. The module will be called ppp_generic.

PPPOATM
  Support PPP (Point to Point Protocol) encapsulated in ATM frames.
  This implementation does not yet comply with section 8 of RFC2364,
  which can lead to bad results if the ATM peer loses state and
  changes its encapsulation unilaterally.

PPPOE
  Support for PPP over Ethernet.
  
  This driver requires the latest version of pppd from the CVS
  repository at cvs.samba.org.  Alternatively, see the
  RoaringPenguin package (<http://www.roaringpenguin.com/pppoe>)
  which contains instruction on how to use this driver (under
  the heading "Kernel mode PPPoE").

PPPOL2TP
  Support for PPP-over-L2TP socket family. L2TP is a protocol
  used by ISPs and enterprises to tunnel PPP traffic over UDP
  tunnels. L2TP is replacing PPTP for VPN uses.

PPP_ASYNC
  Say Y (or M) here if you want to be able to use PPP over standard
  asynchronous serial ports, such as COM1 or COM2 on a PC.  If you use
  a modem (not a synchronous or ISDN modem) to contact your ISP, you
  need this option.
  
  To compile this driver as a module, choose M here.
  
  If unsure, say Y.

PPP_BSDCOMP
  Support for the BSD-Compress compression method for PPP, which uses
  the LZW compression method to compress each PPP packet before it is
  sent over the wire. The machine at the other end of the PPP link
  (usually your ISP) has to support the BSD-Compress compression
  method as well for this to be useful. Even if they don't support it,
  it is safe to say Y here.
  
  The PPP Deflate compression method ("PPP Deflate compression",
  above) is preferable to BSD-Compress, because it compresses better
  and is patent-free.
  
  Note that the BSD compression code will always be compiled as a
  module; it is called bsd_comp and will show up in the directory
  modules once you have said "make modules". If unsure, say N.

PPP_DEFLATE
  Support for the Deflate compression method for PPP, which uses the
  Deflate algorithm (the same algorithm that gzip uses) to compress
  each PPP packet before it is sent over the wire.  The machine at the
  other end of the PPP link (usually your ISP) has to support the
  Deflate compression method as well for this to be useful.  Even if
  they don't support it, it is safe to say Y here.
  
  To compile this driver as a module, choose M here.

PPP_FILTER
  Say Y here if you want to be able to filter the packets passing over
  PPP interfaces.  This allows you to control which packets count as
  activity (i.e. which packets will reset the idle timer or bring up
  a demand-dialed link) and which packets are to be dropped entirely.
  You need to say Y here if you wish to use the pass-filter and
  active-filter options to pppd.
  
  If unsure, say N.

PPP_MPPE
  Support for the MPPE Encryption protocol, as employed by the
  Microsoft Point-to-Point Tunneling Protocol.
  
  See http://pptpclient.sourceforge.net/ for information on
  configuring PPTP clients and servers to utilize this method.

PPP_MULTILINK
  PPP multilink is a protocol (defined in RFC 1990) which allows you
  to combine several (logical or physical) lines into one logical PPP
  connection, so that you can utilize your full bandwidth.
  
  This has to be supported at the other end as well and you need a
  version of the pppd daemon which understands the multilink protocol.
  
  If unsure, say N.

PPP_SYNC_TTY
  Say Y (or M) here if you want to be able to use PPP over synchronous
  (HDLC) tty devices, such as the SyncLink adapter. These devices
  are often used for high-speed leased lines like T1/E1.
  
  To compile this driver as a module, choose M here.

PPS
  PPS (Pulse Per Second) is a special pulse provided by some GPS
  antennae. Userland can use it to get a high-precision time
  reference.
  
  Some antennae's PPS signals are connected with the CD (Carrier
  Detect) pin of the serial line they use to communicate with the
  host. In this case use the SERIAL_LINE client support.
  
  Some antennae's PPS signals are connected with some special host
  inputs so you have to enable the corresponding client support.
  
  To compile this driver as a module, choose M here: the module
  will be called pps_core.ko.

PPS_CLIENT_GPIO
  If you say yes here you get support for a PPS source using
  GPIO. To be useful you must also register a platform device
  specifying the GPIO pin and other options, usually in your board
  setup.

PPS_CLIENT_KTIMER
  If you say yes here you get support for a PPS debugging client
  which uses a kernel timer to generate the PPS signal.
  
  This driver can also be built as a module.  If so, the module
  will be called pps-ktimer.

PPS_CLIENT_LDISC
  If you say yes here you get support for a PPS source connected
  with the CD (Carrier Detect) pin of your serial port.

PPS_CLIENT_PARPORT
  If you say yes here you get support for a PPS source connected
  with the interrupt pin of your parallel port.

PPS_DEBUG
  Say Y here if you want the PPS support to produce a bunch of debug
  messages to the system log.  Select this if you are having a
  problem with PPS support and want to see more of what is going on.

PPS_GENERATOR_PARPORT
  If you say yes here you get support for a PPS signal generator which
  utilizes STROBE pin of a parallel port to send PPS signals. It uses
  parport abstraction layer and hrtimers to precisely control the signal.

PPTP
  Support for PPP over IPv4.(Point-to-Point Tunneling Protocol)
  
  This driver requires pppd plugin to work in client mode or
  modified pptpd (poptop) to work in server mode.
  See http://accel-pptp.sourceforge.net/ for information how to
  utilize this module.

PREEMPT
  This option reduces the latency of the kernel by making
  all kernel code (that is not executing in a critical section)
  preemptible.  This allows reaction to interactive events by
  permitting a low priority process to be preempted involuntarily
  even if it is in kernel mode executing a system call and would
  otherwise not be about to reach a natural preemption point.
  This allows applications to run more 'smoothly' even when the
  system is under load, at the cost of slightly lower throughput
  and a slight runtime overhead to kernel code.
  
  Select this if you are building a kernel for a desktop or
  embedded system with latency requirements in the milliseconds
  range.

PREEMPTION
  No help

PREEMPTIRQ_DELAY_TEST
  Select this option to build a test module that can help test latency
  tracers by executing a preempt or irq disable section with a user
  configurable delay. The module busy waits for the duration of the
  critical section.
  
  For example, the following invocation generates a burst of three
  irq-disabled critical sections for 500us:
  modprobe preemptirq_delay_test test_mode=irq delay=500 burst_size=3
  
  If unsure, say N

PREEMPTIRQ_TRACEPOINTS
  Create preempt/irq toggle tracepoints if needed, so that other parts
  of the kernel can use them to generate or add hooks to them.

PREEMPT_COUNT
  No help

PREEMPT_NONE
  This is the traditional Linux preemption model, geared towards
  throughput. It will still provide good latencies most of the
  time, but there are no guarantees and occasional longer delays
  are possible.
  
  Select this option if you are building a kernel for a server or
  scientific/computation system, or if you want to maximize the
  raw processing power of the kernel, irrespective of scheduling
  latencies.

PREEMPT_NOTIFIERS
  No help

PREEMPT_RCU
  This option selects the RCU implementation that is
  designed for very large SMP systems with hundreds or
  thousands of CPUs, but for which real-time response
  is also required.  It also scales down nicely to
  smaller systems.
  
  Select this option if you are unsure.

PREEMPT_RT
  This option turns the kernel into a real-time kernel by replacing
  various locking primitives (spinlocks, rwlocks, etc.) with
  preemptible priority-inheritance aware variants, enforcing
  interrupt threading and introducing mechanisms to break up long
  non-preemptible sections. This makes the kernel, except for very
  low level and critical code paths (entry code, scheduler, low
  level interrupt handling) fully preemptible and brings most
  execution contexts under scheduler control.
  
  Select this if you are building a kernel for systems which
  require real-time guarantees.

PREEMPT_TRACER
  This option measures the time spent in preemption-off critical
  sections, with microsecond accuracy.
  
  The default measurement method is a maximum search, which is
  disabled by default and can be runtime (re-)started
  via:
  
      echo 0 > /sys/kernel/debug/tracing/tracing_max_latency
  
  (Note that kernel size and overhead increase with this option
  enabled. This option and the irqs-off timing option can be
  used together or separately.)

PREEMPT_VOLUNTARY
  This option reduces the latency of the kernel by adding more
  "explicit preemption points" to the kernel code. These new
  preemption points have been selected to reduce the maximum
  latency of rescheduling, providing faster application reactions,
  at the cost of slightly lower throughput.
  
  This allows reaction to interactive events by allowing a
  low priority process to voluntarily preempt itself even if it
  is in kernel mode executing a system call. This allows
  applications to run more 'smoothly' even when the system is
  under load.
  
  Select this if you are building a kernel for a desktop system.

PRESTERA
  This driver supports Marvell Prestera Switch ASICs family.
  
  To compile this driver as a module, choose M here: the
  module will be called prestera.

PRESTERA_PCI
  This is implementation of PCI interface support for Marvell Prestera
  Switch ASICs family.
  
  To compile this driver as a module, choose M here: the
  module will be called prestera_pci.

PREVENT_FIRMWARE_BUILD
  Say yes to disable driver features which enable building a custom
  driver firmware at kernel build time. These drivers do not use the
  kernel firmware API to load firmware (CONFIG_FW_LOADER), instead they
  use their own custom loading mechanism. The required firmware is
  usually shipped with the driver, building the driver firmware
  should only be needed if you have an updated firmware source.
  
  Firmware should not be being built as part of kernel, these days
  you should always prevent this and say Y here. There are only two
  old drivers which enable building of its firmware at kernel build
  time:
  
    o CONFIG_WANXL through CONFIG_WANXL_BUILD_FIRMWARE
    o CONFIG_SCSI_AIC79XX through CONFIG_AIC79XX_BUILD_FIRMWARE

PRIMA2_TIMER
  Enables support for the Prima2 timer.

PRIME_NUMBERS
  This option provides a simple prime number generator for test
  modules.
  
  If unsure, say N.

PRINTER
  If you intend to attach a printer to the parallel port of your Linux
  box (as opposed to using a serial printer; if the connector at the
  printer has 9 or 25 holes ["female"], then it's serial), say Y.
  Also read the Printing-HOWTO, available from
  <https://www.tldp.org/docs.html#howto>.
  
  It is possible to share one parallel port among several devices
  (e.g. printer and ZIP drive) and it is safe to compile the
  corresponding drivers into the kernel.
  
  To compile this driver as a module, choose M here and read
  <file:Documentation/admin-guide/parport.rst>.  The module will be called lp.
  
  If you have several parallel ports, you can specify which ports to
  use with the "lp" kernel command line option.  (Try "man bootparam"
  or see the documentation of your boot loader (lilo or loadlin) about
  how to pass options to the kernel at boot time.)  The syntax of the
  "lp" command line option can be found in <file:drivers/char/lp.c>.
  
  If you have more than 8 printers, you need to increase the LP_NO
  macro in lp.c and the PARPORT_MAX macro in parport.h.

PRINTK
  This option enables normal printk support. Removing it
  eliminates most of the message strings from the kernel image
  and makes the kernel more or less silent. As this makes it
  very difficult to diagnose system problems, saying N here is
  strongly discouraged.

PRINTK_CALLER
  Selecting this option causes printk() to add a caller "thread id" (if
  in task context) or a caller "processor id" (if not in task context)
  to every message.
  
  This option is intended for environments where multiple threads
  concurrently call printk() for many times, for it is difficult to
  interpret without knowing where these lines (or sometimes individual
  line which was divided into multiple lines due to race) came from.
  
  Since toggling after boot makes the code racy, currently there is
  no option to enable/disable at the kernel command line parameter or
  sysfs interface.

PRINTK_NMI
  No help

PRINTK_SAFE_LOG_BUF_SHIFT
  Select the size of an alternate printk per-CPU buffer where messages
  printed from usafe contexts are temporary stored. One example would
  be NMI messages, another one - printk recursion. The messages are
  copied to the main log buffer in a safe context to avoid a deadlock.
  The value defines the size as a power of 2.
  
  Those messages are rare and limited. The largest one is when
  a backtrace is printed. It usually fits into 4KB. Select
  8KB if you want to be on the safe side.
  
  Examples:
             17 => 128 KB for each CPU
             16 =>  64 KB for each CPU
             15 =>  32 KB for each CPU
             14 =>  16 KB for each CPU
             13 =>   8 KB for each CPU
             12 =>   4 KB for each CPU

PRINTK_TIME
  Selecting this option causes time stamps of the printk()
  messages to be added to the output of the syslog() system
  call and at the console.
  
  The timestamp is always recorded internally, and exported
  to /dev/kmsg. This flag just specifies if the timestamp should
  be included, not that the timestamp is recorded.
  
  The behavior is also controlled by the kernel command line
  parameter printk.time=1. See Documentation/admin-guide/kernel-parameters.rst

PRINT_QUOTA_WARNING
  If you say Y here, quota warnings (about exceeding softlimit, reaching
  hardlimit, etc.) will be printed to the process' controlling terminal.
  Note that this behavior is currently deprecated and may go away in
  future. Please use notification via netlink socket instead.

PRISM2_USB
  This is the wlan-ng prism 2.5/3 USB driver for a wide range of
  old USB wireless devices.
  
  To compile this driver as a module, choose M here: the module
  will be called prism2_usb.

PRISM54
  This enables support for FullMAC PCI/Cardbus prism54 devices. This
  driver is now deprecated in favor for the SoftMAC driver, p54pci.
  p54pci supports FullMAC PCI/Cardbus devices as well.
  
  For more information refer to the p54 wiki:
  
  http://wireless.wiki.kernel.org/en/users/Drivers/p54
  
  Note: You need a motherboard with DMA support to use any of these cards
  
  When built as module you get the module prism54

PROBE_EVENTS
  No help

PROCESSOR_SELECT
  This lets you choose what x86 vendor support code your kernel
  will include.

PROC_CHILDREN
  Provides a fast way to retrieve first level children pids of a task. See
  <file:Documentation/filesystems/proc.rst> for more information.
  
  Say Y if you are running any user-space software which takes benefit from
  this interface. For example, rkt is such a piece of software.

PROC_CPU_RESCTRL
  No help

PROC_EVENTS
  Provide a connector that reports process events to userspace. Send
  events such as fork, exec, id change (uid, gid, suid, etc), and exit.

PROC_FS
  This is a virtual file system providing information about the status
  of the system. "Virtual" means that it doesn't take up any space on
  your hard disk: the files are created on the fly by the kernel when
  you try to access them. Also, you cannot read the files with older
  version of the program less: you need to use more or cat.
  
  It's totally cool; for example, "cat /proc/interrupts" gives
  information about what the different IRQs are used for at the moment
  (there is a small number of Interrupt ReQuest lines in your computer
  that are used by the attached devices to gain the CPU's attention --
  often a source of trouble if two devices are mistakenly configured
  to use the same IRQ). The program procinfo to display some
  information about your system gathered from the /proc file system.
  
  Before you can use the /proc file system, it has to be mounted,
  meaning it has to be given a location in the directory hierarchy.
  That location should be /proc. A command such as "mount -t proc proc
  /proc" or the equivalent line in /etc/fstab does the job.
  
  The /proc file system is explained in the file
  <file:Documentation/filesystems/proc.rst> and on the proc(5) manpage
  ("man 5 proc").
  
  This option will enlarge your kernel by about 67 KB. Several
  programs depend on this, so everyone should say Y here.

PROC_KCORE
  Provides a virtual ELF core file of the live kernel.  This can
  be read with gdb and other ELF tools.  No modifications can be
  made using this mechanism.

PROC_PAGE_MONITOR
  Various /proc files exist to monitor process memory utilization:
  /proc/pid/smaps, /proc/pid/clear_refs, /proc/pid/pagemap,
  /proc/kpagecount, and /proc/kpageflags. Disabling these
  interfaces will reduce the size of the kernel by approximately 4kb.

PROC_PID_ARCH_STATUS
  No help

PROC_PID_CPUSET
  No help

PROC_SYSCTL
  The sysctl interface provides a means of dynamically changing
  certain kernel parameters and variables on the fly without requiring
  a recompile of the kernel or reboot of the system.  The primary
  interface is through /proc/sys.  If you say Y here a tree of
  modifiable sysctl entries will be generated beneath the
  /proc/sys directory. They are explained in the files
  in <file:Documentation/admin-guide/sysctl/>.  Note that enabling this
  option will enlarge the kernel by at least 8 KB.
  
  As it is generally a good thing, you should say Y here unless
  building a kernel for install/rescue disks or your system is very
  limited in memory.

PROC_THERMAL_MMIO_RAPL
  No help

PROC_VMCORE
  Exports the dump image of crashed kernel in ELF format.

PROC_VMCORE_DEVICE_DUMP
  After kernel panic, device drivers can collect the device
  specific snapshot of their hardware or firmware before the
  underlying devices are initialized in crash recovery kernel.
  Note that the device driver must be present in the crash
  recovery kernel's initramfs to collect its underlying device
  snapshot.
  
  If you say Y here, the collected device dumps will be added
  as ELF notes to /proc/vmcore. You can still disable device
  dump using the kernel command line option 'novmcoredd'.

PROFILE_ALL_BRANCHES
  This tracer profiles all branch conditions. Every if ()
  taken in the kernel is recorded whether it hit or miss.
  The results will be displayed in:
  
  /sys/kernel/debug/tracing/trace_stat/branch_all
  
  This option also enables the likely/unlikely profiler.
  
  This configuration, when enabled, will impose a great overhead
  on the system. This should only be enabled when the system
  is to be analyzed in much detail.

PROFILE_ANNOTATED_BRANCHES
  This tracer profiles all likely and unlikely macros
  in the kernel. It will display the results in:
  
  /sys/kernel/debug/tracing/trace_stat/branch_annotated
  
  Note: this will add a significant overhead; only turn this
  on if you need to profile the system's use of these macros.

PROFILING
  Say Y here to enable the extended profiling support mechanisms used
  by profilers such as OProfile.

PROVE_LOCKING
  This feature enables the kernel to prove that all locking
  that occurs in the kernel runtime is mathematically
  correct: that under no circumstance could an arbitrary (and
  not yet triggered) combination of observed locking
  sequences (on an arbitrary number of CPUs, running an
  arbitrary number of tasks and interrupt contexts) cause a
  deadlock.
  
  In short, this feature enables the kernel to report locking
  related deadlocks before they actually occur.
  
  The proof does not depend on how hard and complex a
  deadlock scenario would be to trigger: how many
  participant CPUs, tasks and irq-contexts would be needed
  for it to trigger. The proof also does not depend on
  timing: if a race and a resulting deadlock is possible
  theoretically (no matter how unlikely the race scenario
  is), it will be proven so and will immediately be
  reported by the kernel (once the event is observed that
  makes the deadlock theoretically possible).
  
  If a deadlock is impossible (i.e. the locking rules, as
  observed by the kernel, are mathematically correct), the
  kernel reports nothing.
  
  NOTE: this feature can also be enabled for rwlocks, mutexes
  and rwsems - in which case all dependencies between these
  different locking variants are observed and mapped too, and
  the proof of observed correctness is also maintained for an
  arbitrary combination of these separate locking variants.
  
  For more details, see Documentation/locking/lockdep-design.rst.

PROVE_RAW_LOCK_NESTING
  Enable the raw_spinlock vs. spinlock nesting checks which ensure
  that the lock nesting rules for PREEMPT_RT enabled kernels are
  not violated.
  
  NOTE: There are known nesting problems. So if you enable this
  option expect lockdep splats until these problems have been fully
  addressed which is work in progress. This config switch allows to
  identify and analyze these problems. It will be removed and the
  check permanentely enabled once the main issues have been fixed.
  
  If unsure, select N.

PROVE_RCU
  No help

PROVE_RCU_LIST
  Enable RCU lockdep checking for list usages. By default it is
  turned off since there are several list RCU users that still
  need to be converted to pass a lockdep expression. To prevent
  false-positive splats, we keep it default disabled but once all
  users are converted, we can remove this config option.

PROVIDE_OHCI1394_DMA_INIT
  If you want to debug problems which hang or crash the kernel early
  on boot and the crashing machine has a FireWire port, you can use
  this feature to remotely access the memory of the crashed machine
  over FireWire. This employs remote DMA as part of the OHCI1394
  specification which is now the standard for FireWire controllers.
  
  With remote DMA, you can monitor the printk buffer remotely using
  firescope and access all memory below 4GB using fireproxy from gdb.
  Even controlling a kernel debugger is possible using remote DMA.
  
  Usage:
  
  If ohci1394_dma=early is used as boot parameter, it will initialize
  all OHCI1394 controllers which are found in the PCI config space.
  
  As all changes to the FireWire bus such as enabling and disabling
  devices cause a bus reset and thereby disable remote DMA for all
  devices, be sure to have the cable plugged and FireWire enabled on
  the debugging host before booting the debug target for debugging.
  
  This code (~1k) is freed after boot. By then, the firewire stack
  in charge of the OHCI-1394 controllers should be used instead.
  
  See Documentation/core-api/debugging-via-ohci1394.rst for more information.

PRU_REMOTEPROC
  Support for TI PRU remote processors present within a PRU-ICSS
  subsystem via the remote processor framework.
  
  Say Y or M here to support the Programmable Realtime Unit (PRU)
  processors on various TI SoCs. It's safe to say N here if you're
  not interested in the PRU or if you are unsure.

PSAMPLE
  Say Y here to add support for packet-sampling netlink channel
  This netlink channel allows transferring packets alongside some
  metadata to userspace.
  
  To compile this support as a module, choose M here: the module will
  be called psample.

PSERIES_CPUIDLE
  Select this option to enable processor idle state management
  through cpuidle subsystem.

PSI
  Collect metrics that indicate how overcommitted the CPU, memory,
  and IO capacity are in the system.
  
  If you say Y here, the kernel will create /proc/pressure/ with the
  pressure statistics files cpu, memory, and io. These will indicate
  the share of walltime in which some or all tasks in the system are
  delayed due to contention of the respective resource.
  
  In kernels with cgroup support, cgroups (cgroup2 only) will
  have cpu.pressure, memory.pressure, and io.pressure files,
  which aggregate pressure stalls for the grouped tasks only.
  
  For more details see Documentation/accounting/psi.rst.
  
  Say N if unsure.

PSI_DEFAULT_DISABLED
  If set, pressure stall information tracking will be disabled
  per default but can be enabled through passing psi=1 on the
  kernel commandline during boot.
  
  This feature adds some code to the task wakeup and sleep
  paths of the scheduler. The overhead is too low to affect
  common scheduling-intense workloads in practice (such as
  webservers, memcache), but it does show up in artificial
  scheduler stress tests, such as hackbench.
  
  If you are paranoid and not sure what the kernel will be
  used for, say Y.
  
  Say N if unsure.

PSTORE
  This option enables generic access to platform level
  persistent storage via "pstore" filesystem that can
  be mounted as /dev/pstore.  Only useful if you have
  a platform level driver that registers with pstore to
  provide the data, so you probably should just go say "Y"
  (or "M") to a platform specific persistent store driver
  (e.g. ACPI_APEI on X86) which will select this for you.
  If you don't have a platform persistent store driver,
  say N.

PSTORE_842_COMPRESS
  This option enables 842 compression algorithm support.

PSTORE_842_COMPRESS_DEFAULT
  No help

PSTORE_BLK
  This enables panic and oops message to be logged to a block dev
  where it can be read back at some later point.
  
  For more information, see Documentation/admin-guide/pstore-blk.rst
  
  If unsure, say N.

PSTORE_BLK_BLKDEV
  Which block device should be used for pstore/blk.
  
  It accepts the following variants:
  1) <hex_major><hex_minor> device number in hexadecimal representation,
     with no leading 0x, for example b302.
  2) /dev/<disk_name> represents the device name of disk
  3) /dev/<disk_name><decimal> represents the device name and number
     of partition - device number of disk plus the partition number
  4) /dev/<disk_name>p<decimal> - same as the above, this form is
     used when disk name of partitioned disk ends with a digit.
  5) PARTUUID=00112233-4455-6677-8899-AABBCCDDEEFF representing the
     unique id of a partition if the partition table provides it.
     The UUID may be either an EFI/GPT UUID, or refer to an MSDOS
     partition using the format SSSSSSSS-PP, where SSSSSSSS is a zero-
     filled hex representation of the 32-bit "NT disk signature", and PP
     is a zero-filled hex representation of the 1-based partition number.
  6) PARTUUID=<UUID>/PARTNROFF=<int> to select a partition in relation
     to a partition with a known unique id.
  7) <major>:<minor> major and minor number of the device separated by
     a colon.
  
  NOTE that, both Kconfig and module parameters can configure
  pstore/blk, but module parameters have priority over Kconfig.

PSTORE_BLK_CONSOLE_SIZE
  This just sets size of console log (console_size) to store via
  pstore/blk. The size is in KB and must be a multiple of 4.
  
  NOTE that, both Kconfig and module parameters can configure
  pstore/blk, but module parameters have priority over Kconfig.

PSTORE_BLK_FTRACE_SIZE
  This just sets size of ftrace log (ftrace_size) for pstore/blk. The
  size is in KB and must be a multiple of 4.
  
  NOTE that, both Kconfig and module parameters can configure
  pstore/blk, but module parameters have priority over Kconfig.

PSTORE_BLK_KMSG_SIZE
  This just sets size of kmsg dump (oops, panic, etc) log for
  pstore/blk. The size is in KB and must be a multiple of 4.
  
  NOTE that, both Kconfig and module parameters can configure
  pstore/blk, but module parameters have priority over Kconfig.

PSTORE_BLK_MAX_REASON
  The maximum reason for kmsg dumps to store. The default is
  2 (KMSG_DUMP_OOPS), see include/linux/kmsg_dump.h's
  enum kmsg_dump_reason for more details.
  
  NOTE that, both Kconfig and module parameters can configure
  pstore/blk, but module parameters have priority over Kconfig.

PSTORE_BLK_PMSG_SIZE
  This just sets size of pmsg (pmsg_size) for pstore/blk. The size is
  in KB and must be a multiple of 4.
  
  NOTE that, both Kconfig and module parameters can configure
  pstore/blk, but module parameters have priority over Kconfig.

PSTORE_COMPRESS
  No help

PSTORE_COMPRESS_DEFAULT
  No help

PSTORE_CONSOLE
  When the option is enabled, pstore will log all kernel
  messages, even if no oops or panic happened.

PSTORE_DEFAULT_KMSG_BYTES
  Defines default size of pstore kernel log storage.
  Can be enlarged if needed, not recommended to shrink it.

PSTORE_DEFLATE_COMPRESS
  This option enables DEFLATE (also known as ZLIB) compression
  algorithm support.

PSTORE_DEFLATE_COMPRESS_DEFAULT
  No help

PSTORE_FTRACE
  With this option kernel traces function calls into a persistent
  ram buffer that can be decoded and dumped after reboot through
  pstore filesystem. It can be used to determine what function
  was last called before a reset or panic.
  
  If unsure, say N.

PSTORE_LZ4HC_COMPRESS
  This option enables LZ4HC (high compression) mode algorithm.

PSTORE_LZ4HC_COMPRESS_DEFAULT
  No help

PSTORE_LZ4_COMPRESS
  This option enables LZ4 compression algorithm support.

PSTORE_LZ4_COMPRESS_DEFAULT
  No help

PSTORE_LZO_COMPRESS
  This option enables LZO compression algorithm support.

PSTORE_LZO_COMPRESS_DEFAULT
  No help

PSTORE_PMSG
  When the option is enabled, pstore will export a character
  interface /dev/pmsg0 to log user space messages. On reboot
  data can be retrieved from /sys/fs/pstore/pmsg-ramoops-[ID].
  
  If unsure, say N.

PSTORE_RAM
  This enables panic and oops messages to be logged to a circular
  buffer in RAM where it can be read back at some later point.
  
  Note that for historical reasons, the module will be named
  "ramoops.ko".
  
  For more information, see Documentation/admin-guide/ramoops.rst.

PSTORE_ZONE
  The common layer for pstore/blk (and pstore/ram in the future)
  to manage storage in zones.

PSTORE_ZSTD_COMPRESS
  This option enables zstd compression algorithm support.

PSTORE_ZSTD_COMPRESS_DEFAULT
  No help

PTDUMP_CORE
  No help

PTDUMP_DEBUGFS
  Say Y here if you want to show the kernel pagetable layout in a
  debugfs file. This information is only useful for kernel developers
  who are working in architecture specific areas of the kernel.
  It is probably not a good idea to enable this feature in a production
  kernel.
  
  If in doubt, say N.

PTP_1588_CLOCK
  The IEEE 1588 standard defines a method to precisely
  synchronize distributed clocks over Ethernet networks. The
  standard defines a Precision Time Protocol (PTP), which can
  be used to achieve synchronization within a few dozen
  microseconds. In addition, with the help of special hardware
  time stamping units, it can be possible to achieve
  synchronization to within a few hundred nanoseconds.
  
  This driver adds support for PTP clocks as character
  devices. If you want to use a PTP clock, then you should
  also enable at least one clock driver as well.
  
  To compile this driver as a module, choose M here: the module
  will be called ptp.

PTP_1588_CLOCK_DTE
  This driver adds support for using the Digital timing engine
  (DTE) in the Broadcom SoC's as a PTP clock.
  
  The clock can be used in both wired and wireless networks
  for PTP purposes.
  
  To compile this driver as a module, choose M here: the module
  will be called ptp_dte.

PTP_1588_CLOCK_IDT82P33
  This driver adds support for using the IDT 82P33xxx as a PTP
  clock. This clock is only useful if your time stamping MAC
  is connected to the IDT chip.
  
  To compile this driver as a module, choose M here: the module
  will be called ptp_idt82p33.

PTP_1588_CLOCK_IDTCM
  This driver adds support for using IDT CLOCKMATRIX(TM) as a PTP
  clock. This clock is only useful if your time stamping MAC
  is connected to the IDT chip.
  
  To compile this driver as a module, choose M here: the module
  will be called ptp_clockmatrix.

PTP_1588_CLOCK_INES
  This driver adds support for using the ZHAW InES 1588 IP
  core.  This clock is only useful if the MII bus of your MAC
  is wired up to the core.

PTP_1588_CLOCK_IXP46X
  This driver adds support for using the IXP46X as a PTP
  clock. This clock is only useful if your PTP programs are
  getting hardware time stamps on the PTP Ethernet packets
  using the SO_TIMESTAMPING API.
  
  To compile this driver as a module, choose M here: the module
  will be called ptp_ixp46x.

PTP_1588_CLOCK_KVM
  This driver adds support for using kvm infrastructure as a PTP
  clock. This clock is only useful if you are using KVM guests.
  
  To compile this driver as a module, choose M here: the module
  will be called ptp_kvm.

PTP_1588_CLOCK_OCP
  This driver adds support for an OpenCompute time card.
  
  The OpenCompute time card is an atomic clock along with
  a GPS receiver that provides a Grandmaster clock source
  for a PTP enabled network.
  
  More information is available at http://www.timingcard.com/

PTP_1588_CLOCK_PCH
  This driver adds support for using the PCH EG20T as a PTP
  clock. The hardware supports time stamping of PTP packets
  when using the end-to-end delay (E2E) mechanism. The peer
  delay mechanism (P2P) is not supported.
  
  This clock is only useful if your PTP programs are getting
  hardware time stamps on the PTP Ethernet packets using the
  SO_TIMESTAMPING API.
  
  To compile this driver as a module, choose M here: the module
  will be called ptp_pch.

PTP_1588_CLOCK_QORIQ
  This driver adds support for using the Freescale QorIQ 1588
  timer as a PTP clock. This clock is only useful if your PTP
  programs are getting hardware time stamps on the PTP Ethernet
  packets using the SO_TIMESTAMPING API.
  
  To compile this driver as a module, choose M here: the module
  will be called ptp-qoriq.

PTP_1588_CLOCK_VMW
  This driver adds support for using VMware virtual precision
  clock device as a PTP clock. This is only useful in virtual
  machines running on VMware virtual infrastructure.
  
  To compile this driver as a module, choose M here: the module
  will be called ptp_vmw.

PUNIT_ATOM_DEBUG
  This is a debug driver, which gets the power states
  of all Punit North Complex devices. The power states of
  each device is exposed as part of the debugfs interface.
  The current power state can be read from
  /sys/kernel/debug/punit_atom/dev_power_state

PVH
  This option enables the PVH entry point for guest virtual machines
  as specified in the x86/HVM direct boot ABI.

PVPANIC
  This driver provides support for the pvpanic device.  pvpanic is
  a paravirtualized device provided by QEMU; it lets a virtual machine
  (guest) communicate panic events to the host.

PWM
  Generic Pulse-Width Modulation (PWM) support.
  
  In Pulse-Width Modulation, a variation of the width of pulses
  in a rectangular pulse signal is used as a means to alter the
  average power of the signal. Applications include efficient
  power delivery and voltage regulation. In computer systems,
  PWMs are commonly used to control fans or the brightness of
  display backlights.
  
  This framework provides a generic interface to PWM devices
  within the Linux kernel. On the driver side it provides an API
  to register and unregister a PWM chip, an abstraction of a PWM
  controller, that supports one or more PWM devices. Client
  drivers can request PWM devices and use the generic framework
  to configure as well as enable and disable them.
  
  This generic framework replaces the legacy PWM framework which
  allows only a single driver implementing the required API. Not
  all legacy implementations have been ported to the framework
  yet. The framework provides an API that is backward compatible
  with the legacy framework so that existing client drivers
  continue to work as expected.
  
  If unsure, say no.

PWM_AB8500
  Generic PWM framework driver for Analog Baseband AB8500.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-ab8500.

PWM_ATMEL
  Generic PWM framework driver for Atmel SoC.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-atmel.

PWM_ATMEL_HLCDC_PWM
  Generic PWM framework driver for the PWM output of the HLCDC
  (Atmel High-end LCD Controller). This PWM output is mainly used
  to control the LCD backlight.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-atmel-hlcdc.

PWM_ATMEL_TCB
  Generic PWM framework driver for Atmel Timer Counter Block.
  
  A Timer Counter Block provides 6 PWM devices grouped by 2.
  Devices in a given group must have the same period.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-atmel-tcb.

PWM_BCM2835
  PWM framework driver for BCM2835 controller (Raspberry Pi)
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-bcm2835.

PWM_BCM_IPROC
  Generic PWM framework driver for Broadcom iProc PWM block. This
  block is used in Broadcom iProc SoC's.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-bcm-iproc.

PWM_BCM_KONA
  Generic PWM framework driver for Broadcom Kona PWM block.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-bcm-kona.

PWM_BERLIN
  PWM framework driver for Marvell Berlin SoCs.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-berlin.

PWM_BRCMSTB
  Generic PWM framework driver for the Broadcom Set-top-Box
  SoCs (BCM7xxx).
  
  To compile this driver as a module, choose M Here: the module
  will be called pwm-brcmstb.c.

PWM_CLPS711X
  Generic PWM framework driver for Cirrus Logic CLPS711X.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-clps711x.

PWM_CRC
  Generic PWM framework driver for Crystalcove (CRC) PMIC based PWM
  control.

PWM_CROS_EC
  PWM driver for exposing a PWM attached to the ChromeOS Embedded
  Controller.

PWM_DEBUG
  This option enables some additional checks to help lowlevel driver
  authors to get their callbacks implemented correctly.
  It is expected to introduce some runtime overhead and diagnostic
  output to the kernel log, so only enable while working on a driver.

PWM_DWC
  PWM driver for Synopsys DWC PWM Controller attached to a PCI bus.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-dwc.

PWM_EP93XX
  Generic PWM framework driver for Cirrus Logic EP93xx.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-ep93xx.

PWM_FSL_FTM
  Generic FTM PWM framework driver for Freescale VF610 and
  Layerscape LS-1 SoCs.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-fsl-ftm.

PWM_HIBVT
  Generic PWM framework driver for HiSilicon BVT SoCs.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-hibvt.

PWM_IMG
  Generic PWM framework driver for Imagination Technologies
  PWM block which supports 4 channels.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-img

PWM_IMX1
  Generic PWM framework driver for i.MX1 and i.MX21
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-imx1.

PWM_IMX27
  Generic PWM framework driver for i.MX27 and later i.MX SoCs.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-imx27.

PWM_IMX_TPM
  Generic PWM framework driver for i.MX7ULP TPM module, TPM's full
  name is Low Power Timer/Pulse Width Modulation Module.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-imx-tpm.

PWM_INTEL_LGM
  Generic PWM fan controller driver for LGM SoC.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-intel-lgm.

PWM_IQS620A
  Generic PWM framework driver for the Azoteq IQS620A multi-function
  sensor.
  
  To compile this driver as a module, choose M here: the module will
  be called pwm-iqs620a.

PWM_JZ4740
  Generic PWM framework driver for Ingenic JZ47xx based
  machines.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-jz4740.

PWM_KEEMBAY
  The platform driver for Intel Keem Bay PWM controller.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-keembay.

PWM_LP3943
  Generic PWM framework driver for LP3943 which supports two PWM
  channels.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-lp3943.

PWM_LPC18XX_SCT
  Generic PWM framework driver for NXP LPC18xx PWM/SCT which
  supports 16 channels.
  A maximum of 15 channels can be requested simultaneously and
  must have the same period.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-lpc18xx-sct.

PWM_LPC32XX
  Generic PWM framework driver for LPC32XX. The LPC32XX SOC has two
  PWM controllers.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-lpc32xx.

PWM_LPSS
  No help

PWM_LPSS_PCI
  The PCI driver for Intel Low Power Subsystem PWM controller.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-lpss-pci.

PWM_LPSS_PLATFORM
  The platform driver for Intel Low Power Subsystem PWM controller.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-lpss-platform.

PWM_MEDIATEK
  Generic PWM framework driver for Mediatek ARM SoC.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-mediatek.

PWM_MESON
  The platform driver for Amlogic Meson PWM controller.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-meson.

PWM_MTK_DISP
  Generic PWM framework driver for MediaTek disp-pwm device.
  The PWM is used to control the backlight brightness for display.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-mtk-disp.

PWM_MXS
  Generic PWM framework driver for Freescale MXS.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-mxs.

PWM_OMAP_DMTIMER
  Generic PWM framework driver for OMAP Dual-Mode Timer PWM output
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-omap-dmtimer

PWM_PCA9685
  Generic PWM framework driver for NXP PCA9685 LED controller.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-pca9685.

PWM_PXA
  Generic PWM framework driver for PXA.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-pxa.

PWM_RCAR
  This driver exposes the PWM Timer controller found in Renesas
  R-Car chips through the PWM API.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-rcar.

PWM_RENESAS_TPU
  This driver exposes the Timer Pulse Unit (TPU) PWM controller found
  in Renesas chips through the PWM API.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-renesas-tpu.

PWM_ROCKCHIP
  Generic PWM framework driver for the PWM controller found on
  Rockchip SoCs.

PWM_SAMSUNG
  Generic PWM framework driver for Samsung.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-samsung.

PWM_SIFIVE
  Generic PWM framework driver for SiFive SoCs.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-sifive.

PWM_SL28CPLD
  Generic PWM framework driver for board management controller
  found on the Kontron sl28 CPLD.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-sl28cpld.

PWM_SPEAR
  Generic PWM framework driver for the PWM controller on ST
  SPEAr SoCs.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-spear.

PWM_SPRD
  Generic PWM framework driver for the PWM controller on
  Spreadtrum SoCs.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-sprd.

PWM_STI
  Generic PWM framework driver for STiH4xx SoCs.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-sti.

PWM_STM32
  Generic PWM framework driver for STM32 SoCs.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-stm32.

PWM_STM32_LP
  Generic PWM framework driver for STMicroelectronics STM32 SoCs
  with Low-Power Timer (LPTIM).
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-stm32-lp.

PWM_STMPE
  This enables support for the PWMs found in the STMPE I/O
  expanders.

PWM_SUN4I
  Generic PWM framework driver for Allwinner SoCs.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-sun4i.

PWM_SYSFS
  No help

PWM_TEGRA
  Generic PWM framework driver for the PWFM controller found on NVIDIA
  Tegra SoCs.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-tegra.

PWM_TIECAP
  PWM driver support for the ECAP APWM controller found on TI SOCs
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-tiecap.

PWM_TIEHRPWM
  PWM driver support for the EHRPWM controller found on TI SOCs
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-tiehrpwm.

PWM_TWL
  Generic PWM framework driver for TWL4030/6030.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-twl.

PWM_TWL_LED
  Generic PWM framework driver for TWL4030/6030 LED terminals.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-twl-led.

PWM_VT8500
  Generic PWM framework driver for vt8500.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-vt8500.

PWM_ZX
  Generic PWM framework driver for ZTE ZX family SoCs.
  
  To compile this driver as a module, choose M here: the module
  will be called pwm-zx.

PWRSEQ_EMMC
  This selects Hardware reset support aka pwrseq-emmc for eMMC
  devices. By default this option is set to y.
  
  This driver can also be built as a module. If so, the module
  will be called pwrseq_emmc.

PWRSEQ_SD8787
  This selects hardware reset support for the SD8787 BT + Wifi
  module. By default this option is set to n.
  
  This driver can also be built as a module. If so, the module
  will be called pwrseq_sd8787.

PWRSEQ_SIMPLE
  This selects simple hardware reset support aka pwrseq-simple for MMC
  devices. By default this option is set to y.
  
  This driver can also be built as a module. If so, the module
  will be called pwrseq_simple.

PXA168_ETH
  This driver supports the pxa168 Ethernet ports.
  
  To compile this driver as a module, choose M here. The module
  will be called pxa168_eth.

PXA3XX_GCU
  Kernelspace driver for the 2D graphics controller unit (GCU)
  found on PXA3xx processors. There is a counterpart driver in the
  DirectFB suite, see http://www.directfb.org/
  
  If you compile this as a module, it will be called pxa3xx_gcu.

PXA_DMA
  Support the DMA engine for PXA. It is also compatible with MMP PDMA
  platform. The internal DMA IP of all PXA variants is supported, with
  16 to 32 channels for peripheral to memory or memory to memory
  transfers.

QCA7000
  This enables support for the Qualcomm Atheros QCA7000.

QCA7000_SPI
  This SPI protocol driver supports the Qualcomm Atheros QCA7000.
  
  To compile this driver as a module, choose M here. The module
  will be called qcaspi.

QCA7000_UART
  This UART protocol driver supports the Qualcomm Atheros QCA7000.
  
  Currently the driver assumes these device UART settings:
    Data bits: 8
    Parity: None
    Stop bits: 1
    Flow control: None
  
  To compile this driver as a module, choose M here. The module
  will be called qcauart.

QCOM_A53PLL
  Support for the A53 PLL on MSM8916 devices. It provides
  the CPU with frequencies above 1GHz.
  Say Y if you want to support higher CPU frequencies on MSM8916
  devices.

QCOM_ADM
  Enable support for the Qualcomm Application Data Mover (ADM) DMA
  controller, as present on MSM8x60, APQ8064, and IPQ8064 devices.
  This controller provides DMA capabilities for both general purpose
  and on-chip peripheral devices.

QCOM_AOSS_QMP
  This driver provides the means of communicating with and controlling
  the low-power state for resources related to the remoteproc
  subsystems as well as controlling the debug clocks exposed by the Always On
  Subsystem (AOSS) using Qualcomm Messaging Protocol (QMP).

QCOM_APCS_IPC
  Say y here to enable support for the APCS IPC mailbox driver,
  providing an interface for invoking the inter-process communication
  signals from the application processor to other masters.

QCOM_APR
  Enable APR IPC protocol support between
  application processor and QDSP6. APR is
  used by audio driver to configure QDSP6
  ASM, ADM and AFE modules.

QCOM_BAM_DMA
  Enable support for the QCOM BAM DMA controller.  This controller
  provides DMA capabilities for a variety of on-chip devices.

QCOM_CLK_APCC_MSM8996
  Support for the CPU clock controller on msm8996 devices.
  Say Y if you want to support CPU clock scaling using CPUfreq
  drivers for dynamic power management.

QCOM_CLK_APCS_MSM8916
  Support for the APCS Clock Controller on msm8916 devices. The
  APCS is managing the mux and divider which feeds the CPUs.
  Say Y if you want to support CPU frequency scaling on devices
  such as msm8916.

QCOM_CLK_RPM
  The RPM (Resource Power Manager) is a dedicated hardware engine for
  managing the shared SoC resources in order to keep the lowest power
  profile. It communicates with other hardware subsystems via shared
  memory and accepts clock requests, aggregates the requests and turns
  the clocks on/off or scales them on demand.
  Say Y if you want to support the clocks exposed by the RPM on
  platforms such as apq8064, msm8660, msm8960 etc.

QCOM_CLK_RPMH
  RPMh manages shared resources on some Qualcomm Technologies, Inc.
  SoCs. It accepts requests from other hardware subsystems via RSC.
  Say Y if you want to support the clocks exposed by RPMh on
  platforms such as SDM845.

QCOM_CLK_SMD_RPM
  The RPM (Resource Power Manager) is a dedicated hardware engine for
  managing the shared SoC resources in order to keep the lowest power
  profile. It communicates with other hardware subsystems via shared
  memory and accepts clock requests, aggregates the requests and turns
  the clocks on/off or scales them on demand.
  Say Y if you want to support the clocks exposed by the RPM on
  platforms such as apq8016, apq8084, msm8974 etc.

QCOM_COINCELL
  This driver supports the coincell block found inside of
  Qualcomm PMICs.  The coincell charger provides a means to
  charge a coincell battery or backup capacitor which is used
  to maintain PMIC register and RTC state in the absence of
  external power.

QCOM_COMMAND_DB
  Command DB queries shared memory by key string for shared system
  resources. Platform drivers that require to set state of a shared
  resource on a RPM-hardened platform must use this database to get
  SoC specific identifier and information for the shared resources.

QCOM_CPR
  Say Y here to enable support for the CPR hardware found on Qualcomm
  SoCs like QCS404.
  
  This driver populates CPU OPPs tables and makes adjustments to the
  tables based on feedback from the CPR hardware. If you want to do
  CPUfrequency scaling say Y here.
  
  To compile this driver as a module, choose M here: the module will
  be called qcom-cpr

QCOM_EBI2
  Say y here to enable support for the Qualcomm External Bus
  Interface 2, which can be used to connect things like NAND Flash,
  SRAM, ethernet adapters, FPGAs and LCD displays.

QCOM_EMAC
  This driver supports the Qualcomm Technologies, Inc. Gigabit
  Ethernet Media Access Controller (EMAC). The controller
  supports IEEE 802.3-2002, half-duplex mode at 10/100 Mb/s,
  full-duplex mode at 10/100/1000Mb/s, Wake On LAN (WOL) for
  low power, Receive-Side Scaling (RSS), and IEEE 1588-2008
  Precision Clock Synchronization Protocol.

QCOM_FASTRPC
  Provides a communication mechanism that allows for clients to
  make remote method invocations across processor boundary to
  applications DSP processor. Say M if you want to enable this
  module.

QCOM_GDSC
  No help

QCOM_GENI_SE
  This driver is used to manage Generic Interface (GENI) firmware based
  Qualcomm Technologies, Inc. Universal Peripheral (QUP) Wrapper. This
  driver is also used to manage the common aspects of multiple Serial
  Engines present in the QUP.

QCOM_GPI_DMA
  Enable support for the QCOM GPI DMA controller. This controller
  provides DMA capabilities for a variety of peripheral buses such
  as I2C, UART, and SPI. By using GPI dmaengine driver, bus drivers
  can use a standardize interface that is protocol independent to
  transfer data between DDR and peripheral.

QCOM_GSBI
  Say y here to enable GSBI support.  The GSBI provides control
  functions for connecting the underlying serial UART, SPI, and I2C
  devices to the output pins.

QCOM_HFPLL
  Support for the high-frequency PLLs present on Qualcomm devices.
  Say Y if you want to support CPU frequency scaling on devices
  such as MSM8974, APQ8084, etc.

QCOM_HIDMA
  Enable support for the Qualcomm Technologies HIDMA controller.
  The HIDMA controller supports optimized buffer copies
  (user to kernel, kernel to kernel, etc.).  It only supports
  memcpy interface. The core is not intended for general
  purpose slave DMA.

QCOM_HIDMA_MGMT
  Enable support for the Qualcomm Technologies HIDMA Management.
  Each DMA device requires one management interface driver
  for basic initialization before QCOM_HIDMA channel driver can
  start managing the channels. In a virtualized environment,
  the guest OS would run QCOM_HIDMA channel driver and the
  host would run the QCOM_HIDMA_MGMT management driver.

QCOM_IOMMU
  Support for IOMMU on certain Qualcomm SoCs.

QCOM_IPA
  Choose Y or M here to include support for the Qualcomm
  IP Accelerator (IPA), a hardware block present in some
  Qualcomm SoCs.  The IPA is a programmable protocol processor
  that is capable of generic hardware handling of IP packets,
  including routing, filtering, and NAT.  Currently the IPA
  driver supports only basic transport of network traffic
  between the AP and modem, on the Qualcomm SDM845 SoC.
  
  Note that if selected, the selection type must match that
  of QCOM_Q6V5_COMMON (Y or M).
  
  If unsure, say N.

QCOM_IPCC
  Qualcomm Technologies, Inc. Inter-Processor Communication Controller
  (IPCC) driver for MSM devices. The driver provides mailbox support for
  sending interrupts to the clients. On the other hand, the driver also
  acts as an interrupt controller for receiving interrupts from clients.
  Say Y here if you want to build this driver.

QCOM_IRQ_COMBINER
  Say yes here to add support for the IRQ combiner devices embedded
  in Qualcomm Technologies chips.

QCOM_KRYO_L2_ACCESSORS
  No help

QCOM_L2_PMU
  Provides support for the L2 cache performance monitor unit (PMU)
  in Qualcomm Technologies processors.
  Adds the L2 cache PMU into the perf events subsystem for
  monitoring L2 cache events.

QCOM_L3_PMU
  Provides support for the L3 cache performance monitor unit (PMU)
  in Qualcomm Technologies processors.
  Adds the L3 cache PMU into the perf events subsystem for
  monitoring L3 cache events.

QCOM_LLCC
  Qualcomm Technologies, Inc. platform specific
  Last Level Cache Controller(LLCC) driver for platforms such as,
  SDM845. This provides interfaces to clients that use the LLCC.
  Say yes here to enable LLCC slice driver.

QCOM_MDT_LOADER
  No help

QCOM_OCMEM
  The On Chip Memory (OCMEM) allocator allows various clients to
  allocate memory from OCMEM based on performance, latency and power
  requirements. This is typically used by the GPU, camera/video, and
  audio components on some Snapdragon SoCs.

QCOM_PDC
  Power Domain Controller driver to manage and configure wakeup
  IRQs for Qualcomm Technologies Inc (QTI) mobile chips.

QCOM_PDR_HELPERS
  No help

QCOM_PIL_INFO
  No help

QCOM_PM8XXX_XOADC
  ADC driver for the XOADC portions of the Qualcomm PM8xxx PMICs
  using SSBI transport: PM8018, PM8038, PM8058, PM8921.
  
  To compile this driver as a module, choose M here: the module
  will be called qcom-pm8xxx-xoadc.

QCOM_Q6V5_ADSP
  Say y here to support the Peripheral Image Loader
  for the Qualcomm Technology Inc. ADSP remote processors.

QCOM_Q6V5_COMMON
  No help

QCOM_Q6V5_MSS
  Say y here to support the Qualcomm self-authenticating modem
  subsystem based on Hexagon V5.

QCOM_Q6V5_PAS
  Say y here to support the TrustZone based Peripheral Image Loader
  for the Qualcomm Hexagon v5 based remote processors. This is commonly
  used to control subsystems such as ADSP, Compute and Sensor.

QCOM_Q6V5_WCSS
  Say y here to support the Qualcomm Peripheral Image Loader for the
  Hexagon V5 based WCSS remote processors.

QCOM_QFPROM
  Say y here to enable QFPROM support. The QFPROM provides access
  functions for QFPROM data to rest of the drivers via nvmem interface.
  
  This driver can also be built as a module. If so, the module
  will be called nvmem_qfprom.

QCOM_QMI_HELPERS
  No help

QCOM_RMTFS_MEM
  The Qualcomm remote filesystem memory driver is used for allocating
  and exposing regions of shared memory with remote processors for the
  purpose of exchanging sector-data between the remote filesystem
  service and its clients.
  
  Say y here if you intend to boot the modem remoteproc.

QCOM_RPMCC
  No help

QCOM_RPMH
  Support for communication with the hardened-RPM blocks in
  Qualcomm Technologies Inc (QTI) SoCs. RPMH communication uses an
  internal bus to transmit state requests for shared resources. A set
  of hardware components aggregate requests for these resources and
  help apply the aggregated state on the resource.

QCOM_RPMHPD
  QCOM RPMh Power domain driver to support power-domains with
  performance states. The driver communicates a performance state
  value to RPMh which then translates it into corresponding voltage
  for the voltage rail.

QCOM_RPMPD
  QCOM RPM Power domain driver to support power-domains with
  performance states. The driver communicates a performance state
  value to RPM which then translates it into corresponding voltage
  for the voltage rail.

QCOM_RPROC_COMMON
  No help

QCOM_SCM
  No help

QCOM_SCM_DOWNLOAD_MODE_DEFAULT
  A device with "download mode" enabled will upon an unexpected
  warm-restart enter a special debug mode that allows the user to
  "download" memory content over USB for offline postmortem analysis.
  The feature can be enabled/disabled on the kernel command line.
  
  Say Y here to enable "download mode" by default.

QCOM_SMD_RPM
  If you say yes to this option, support will be included for the
  Resource Power Manager system found in the Qualcomm 8974 based
  devices.
  
  This is required to access many regulators, clocks and bus
  frequencies controlled by the RPM on these devices.
  
  Say M here if you want to include support for the Qualcomm RPM as a
  module. This will build a module called "qcom-smd-rpm".

QCOM_SMEM
  Say y here to enable support for the Qualcomm Shared Memory Manager.
  The driver provides an interface to items in a heap shared among all
  processors in a Qualcomm platform.

QCOM_SMEM_STATE
  No help

QCOM_SMP2P
  Say yes here to support the Qualcomm Shared Memory Point to Point
  protocol.

QCOM_SMSM
  Say yes here to support the Qualcomm Shared Memory State Machine.
  The state machine is represented by bits in shared memory.

QCOM_SOCINFO
  Say yes here to support the Qualcomm socinfo driver, providing
  information about the SoC to user space.

QCOM_SPMI_ADC5
  This is the IIO Voltage PMIC5 ADC driver for Qualcomm Technologies Inc.
  
  The driver supports multiple channels read. The ADC is a 16-bit
  sigma-delta ADC. The hardware supports calibrated results for
  conversion requests and clients include reading voltage phone
  power, on board system thermistors connected to the PMIC ADC,
  PMIC die temperature, charger temperature, battery current, USB voltage
  input, voltage signals connected to supported PMIC GPIO inputs. The
  hardware supports internal pull-up for thermistors and can choose between
  a 100k, 30k and 400k pull up using the ADC channels.
  
  To compile this driver as a module, choose M here: the module will
  be called qcom-spmi-adc5.

QCOM_SPMI_IADC
  This is the IIO Current ADC driver for Qualcomm QPNP IADC Chip.
  
  The driver supports single mode operation to read from one of two
  channels (external or internal). Hardware have additional
  channels internally used for gain and offset calibration.
  
  To compile this driver as a module, choose M here: the module will
  be called qcom-spmi-iadc.

QCOM_SPMI_TEMP_ALARM
  This enables a thermal sysfs driver for Qualcomm plug-and-play (QPNP)
  PMIC devices. It shows up in sysfs as a thermal sensor with multiple
  trip points. The temperature reported by the thermal sensor reflects the
  real time die temperature if an ADC is present or an estimate of the
  temperature based upon the over temperature stage value.

QCOM_SPMI_VADC
  This is the IIO Voltage ADC driver for Qualcomm QPNP VADC Chip.
  
  The driver supports multiple channels read. The VADC is a 15-bit
  sigma-delta ADC. Some of the channels are internally used for
  calibration.
  
  To compile this driver as a module, choose M here: the module will
  be called qcom-spmi-vadc.

QCOM_SYSMON
  The sysmon driver implements a sysmon QMI client and a handler for
  the sys_mon SMD and GLINK channel, which are used for graceful
  shutdown, retrieving failure information and propagating information
  about other subsystems being shut down.
  
  Say y here if your system runs firmware on any other subsystems, e.g.
  modem or DSP.

QCOM_TSENS
  This enables the thermal sysfs driver for the TSENS device. It shows
  up in Sysfs as a thermal zone with multiple trip points. Disabling the
  thermal zone device via the mode file results in disabling the sensor.
  Also able to set threshold temperature for both hot and cold and update
  when a threshold is reached.

QCOM_VADC_COMMON
  No help

QCOM_WCNSS_CTRL
  Client driver for the WCNSS_CTRL SMD channel, used to download nv
  firmware to a newly booted WCNSS chip.

QCOM_WCNSS_PIL
  Say y here to support the Peripheral Image Loader for the Qualcomm
  Wireless Connectivity Subsystem.

QCOM_WDT
  Say Y here to include Watchdog timer support for the watchdog found
  on QCOM chipsets.  Currently supported targets are the MSM8960,
  APQ8064, and IPQ8064.
  
  To compile this driver as a module, choose M here: the
  module will be called qcom_wdt.

QCS_GCC_404
  Support for the global clock controller on QCS404 devices.
  Say Y if you want to use multimedia devices or peripheral
  devices such as UART, SPI, I2C, USB, SD/eMMC, PCIe etc.

QCS_Q6SSTOP_404
  Support for the Q6SSTOP clock controller on QCS404 devices.
  Say Y if you want to use the Q6SSTOP branch clocks of the WCSS clock
  controller to reset the Q6SSTOP subsystem.

QCS_TURING_404
  Support for the Turing Clock Controller on QCS404, provides clocks
  and resets for the Turing subsystem.

QED
  This enables the support for Marvell FastLinQ adapters family.

QEDE
  This enables the support for Marvell FastLinQ adapters family,
  ethernet driver.

QEDF
  This driver supports FCoE offload for the QLogic FastLinQ
  41000 Series Converged Network Adapters.

QEDI
  This driver supports iSCSI offload for the QLogic FastLinQ
  41000 Series Converged Network Adapters.

QED_FCOE
  No help

QED_ISCSI
  No help

QED_LL2
  No help

QED_OOO
  No help

QED_RDMA
  No help

QED_SRIOV
  This configuration parameter enables Single Root Input Output
  Virtualization support for QED devices.
  This allows for virtual function acceleration in virtualized
  environments.

QETH
  This driver supports IBM's OSA Express network adapters in QDIO mode,
  HiperSockets interfaces and z/VM virtual NICs for Guest LAN and
  VSWITCH.
  
  To compile this driver as a module, choose M.
  The module name is qeth.

QETH_L2
  Select this option to be able to run qeth devices in layer 2 mode.
  To compile as a module, choose M. The module name is qeth_l2.
  If unsure, choose y.

QETH_L3
  Select this option to be able to run qeth devices in layer 3 mode.
  To compile as a module choose M. The module name is qeth_l3.
  If unsure, choose Y.

QETH_OSN
  This enables the qeth driver to support devices in OSN mode.
  This feature will be removed in 2021.
  If unsure, choose N.

QETH_OSX
  This enables the qeth driver to support devices in OSX mode.
  If unsure, choose N.

QE_TDM
  No help

QE_USB
  QE USB Controller support

QFMT_V1
  This quota format was (is) used by kernels earlier than 2.4.22. If
  you have quota working and you don't want to convert to new quota
  format say Y here.

QFMT_V2
  This config option enables kernel support for vfsv0 and vfsv1 quota
  formats. Both these formats support 32-bit UIDs/GIDs and vfsv1 format
  also supports 64-bit inode and block quota limits. If you need this
  functionality say Y here.

QLA3XXX
  This driver supports QLogic ISP3XXX gigabit Ethernet cards.
  
  To compile this driver as a module, choose M here: the module
  will be called qla3xxx.

QLCNIC
  This driver supports QLogic QLE8240 and QLE8242 Converged Ethernet
  devices.

QLCNIC_DCB
  This configuration parameter enables DCB support in QLE83XX
  and QLE82XX Converged Ethernet devices. This allows for DCB
  get operations support through rtNetlink interface. Only CEE
  mode of DCB is supported. PG and PFC values are related only
  to Tx.

QLCNIC_HWMON
  This configuration parameter can be used to read the
  board temperature in Converged Ethernet devices
  supported by qlcnic.
  
  This data is available via the hwmon sysfs interface.

QLCNIC_SRIOV
  This configuration parameter enables Single Root Input Output
  Virtualization support for QLE83XX Converged Ethernet devices.
  This allows for virtual function acceleration in virtualized
  environments.

QLGE
  This driver supports QLogic ISP8XXX 10Gb Ethernet cards.
  
  To compile this driver as a module, choose M here. The module will be
  called qlge.

QNX4FS_FS
  This is the file system used by the real-time operating systems
  QNX 4 and QNX 6 (the latter is also called QNX RTP).
  Further information is available at <http://www.qnx.com/>.
  Say Y if you intend to mount QNX hard disks or floppies.
  
  To compile this file system support as a module, choose M here: the
  module will be called qnx4.
  
  If you don't know whether you need it, then you don't need it:
  answer N.

QNX6FS_DEBUG
  Turns on extended debugging output.
  
  If you are not a developer working on the QNX6FS, you probably don't
  want this:
  answer N.

QNX6FS_FS
  This is the file system used by the real-time operating systems
  QNX 6 (also called QNX RTP).
  Further information is available at <http://www.qnx.com/>.
  Say Y if you intend to mount QNX hard disks or floppies formatted
  with a mkqnx6fs.
  However, keep in mind that this currently is a readonly driver!
  
  To compile this file system support as a module, choose M here: the
  module will be called qnx6.
  
  If you don't know whether you need it, then you don't need it:
  answer N.

QORIQ_CPUFREQ
  This adds the CPUFreq driver support for Freescale QorIQ SoCs
  which are capable of changing the CPU's frequency dynamically.

QORIQ_THERMAL
  Support for Thermal Monitoring Unit (TMU) found on QorIQ platforms.
  It supports one critical trip point and one passive trip point. The
  cpufreq is used as the cooling device to throttle CPUs when the
  passive trip is crossed.

QRTR
  Say Y if you intend to use Qualcomm IPC router protocol.  The
  protocol is used to communicate with services provided by other
  hardware blocks in the system.
  
  In order to do service lookups, a userspace daemon is required to
  maintain a service listing.

QRTR_MHI
  Say Y here to support MHI based ipcrouter channels. MHI is the
  transport used for communicating to external modems.

QRTR_SMD
  Say Y here to support SMD based ipcrouter channels.  SMD is the
  most common transport for IPC Router.

QRTR_TUN
  Say Y here to expose a character device that allows user space to
  implement endpoints of QRTR, for purpose of tunneling data to other
  hosts or testing purposes.

QSEMI_PHY
  Currently supports the qs6612

QTNFMAC
  No help

QTNFMAC_PCIE
  This option adds support for wireless adapters based on Quantenna
  802.11ac QSR10g (aka Pearl) and QSR1000/QSR2000 (aka Topaz)
  FullMAC chipsets running over PCIe.
  
  If you choose to build it as a module, two modules will be built:
  qtnfmac.ko and qtnfmac_pcie.ko.

QUEUED_RWLOCKS
  No help

QUEUED_SPINLOCKS
  No help

QUICC_ENGINE
  The QUICC Engine (QE) is a new generation of communications
  coprocessors on Freescale embedded CPUs (akin to CPM in older chips).
  Selecting this option means that you wish to build a kernel
  for a machine with a QE coprocessor.

QUOTA
  If you say Y here, you will be able to set per user limits for disk
  usage (also called disk quotas). Currently, it works for the
  ext2, ext3, ext4, jfs, ocfs2 and reiserfs file systems.
  Note that gfs2 and xfs use their own quota system.
  Ext3, ext4 and reiserfs also support journaled quotas for which
  you don't need to run quotacheck(8) after an unclean shutdown.
  For further details, read the Quota mini-HOWTO, available from
  <https://www.tldp.org/docs.html#howto>, or the documentation provided
  with the quota tools. Probably the quota support is only useful for
  multi user systems. If unsure, say N.

QUOTACTL
  No help

QUOTA_DEBUG
  If you say Y here, quota subsystem will perform some additional
  sanity checks of quota internal structures. If unsure, say N.

QUOTA_NETLINK_INTERFACE
  If you say Y here, quota warnings (about exceeding softlimit, reaching
  hardlimit, etc.) will be reported through netlink interface. If unsure,
  say Y.

QUOTA_TREE
  No help

R3964
  This driver allows synchronous communication with devices using the
  Siemens R3964 packet protocol. Unless you are dealing with special
  hardware like PLCs, you are unlikely to need this.
  
  To compile this driver as a module, choose M here: the
  module will be called n_r3964.
  
  If unsure, say N.

R6040
  This is a driver for the R6040 Fast Ethernet MACs found in the
  the RDC R-321x System-on-chips.
  
  To compile this driver as a module, choose M here: the module
  will be called r6040. This is recommended.

R8169
  Say Y here if you have a Realtek Ethernet adapter belonging to
  the following families:
  RTL8169 Gigabit Ethernet
  RTL8168 Gigabit Ethernet
  RTL8101 Fast Ethernet
  RTL8125 2.5GBit Ethernet
  
  To compile this driver as a module, choose M here: the module
  will be called r8169.  This is recommended.

R8188EU
  This option adds the Realtek RTL8188EU USB device such as TP-Link TL-WN725N.
  If built as a module, it will be called r8188eu.

R8712U
  This option adds the Realtek RTL8712 USB device such as the
  D-Link DWA-130.
  
  If built as a module, it will be called r8712u.

R8712_TX_AGGR
  This option provides transmit aggregation for the Realtek
  RTL8712 USB device.
  
  

RADIO_ADAPTERS
  Say Y here to enable selecting AM/FM radio adapters.

RADIO_AZTECH
  Choose Y here if you have one of these FM radio cards, and then fill
  in the port address below.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-aztech.

RADIO_AZTECH_PORT
  Enter either 0x350 or 0x358 here.  The card default is 0x350, if you
  haven't changed the setting of jumper JP3 on the card.  Removing the
  jumper sets the card to 0x358.

RADIO_CADET
  Choose Y here if you have one of these AM/FM radio cards, and then
  fill in the port address below.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-cadet.

RADIO_GEMTEK
  Choose Y here if you have this FM radio card, and then fill in the
  I/O port address and settings below. The following cards either have
  GemTek Radio tuner or are rebranded GemTek Radio cards:
  
  - Sound Vision 16 Gold with FM Radio
  - Typhoon Radio card (some models)
  - Hama Radio card
  
  To compile this driver as a module, choose M here: the
  module will be called radio-gemtek.

RADIO_GEMTEK_PORT
  Enter either 0x20c, 0x30c, 0x24c, 0x34c, 0x248 or 0x28c here. The
  card default is 0x34c, if you haven't changed the jumper setting
  on the card.
  
  On Sound Vision 16 Gold PnP with FM Radio (ESS1869+FM Gemtek), the I/O
  port is 0x20c, 0x248 or 0x28c.
  
  If automatic I/O port probing is enabled this port will be used only
  in case of automatic probing failure, ie. as a fallback.

RADIO_GEMTEK_PROBE
  Say Y here to enable automatic probing for GemTek Radio card. The
  following ports will be probed: 0x20c, 0x30c, 0x24c, 0x34c, 0x248 and
  0x28c.

RADIO_ISA
  No help

RADIO_MAXIRADIO
  Choose Y here if you have this radio card.  This card may also be
  found as Gemtek PCI FM.
  
  In order to control your radio card, you will need to use programs
  that are compatible with the Video For Linux API.  Information on
  this API and pointers to "v4l" programs may be found at
  <file:Documentation/userspace-api/media/index.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-maxiradio.

RADIO_MIROPCM20
  Choose Y here if you have this FM radio card. You also need to enable
  the ALSA sound system. This choice automatically selects the ALSA
  sound card driver "Miro miroSOUND PCM1pro/PCM12/PCM20radio" as this
  is required for the radio-miropcm20.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-miropcm20.

RADIO_RTRACK
  Choose Y here if you have one of these FM radio cards, and then fill
  in the port address below.
  
  Note that newer AIMSlab RadioTrack cards have a different chipset
  and are not supported by this driver.  For these cards, use the
  RadioTrack II driver below.
  
  If you have a GemTeks combined (PnP) sound- and radio card you must
  use this driver as a module and setup the card with isapnptools.
  You must also pass the module a suitable io parameter, 0x248 has
  been reported to be used by these cards.
  
  More information is contained in the file
  <file:Documentation/driver-api/media/drivers/radiotrack.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-aimslab.

RADIO_RTRACK2
  Choose Y here if you have this FM radio card, and then fill in the
  port address below.
  
  Note: this driver hasn't been tested since a long time due to lack
  of hardware. If you have this hardware, then please contact the
  linux-media mailinglist.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-rtrack2.

RADIO_RTRACK2_PORT
  Enter either 0x30c or 0x20c here.  The card default is 0x30c, if you
  haven't changed the jumper setting on the card.

RADIO_RTRACK_PORT
  Enter either 0x30f or 0x20f here.  The card default is 0x30f, if you
  haven't changed the jumper setting on the card.

RADIO_SAA7706H
  Say Y here if you want to use the SAA7706H Car radio Digital
  Signal Processor, found for instance on the Russellville development
  board. On the russellville the device is connected to internal
  timberdale I2C bus.
  
  To compile this driver as a module, choose M here: the
  module will be called SAA7706H.

RADIO_SF16FMI
  Choose Y here if you have one of these FM radio cards.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-sf16fmi.

RADIO_SF16FMR2
  Choose Y here if you have one of these FM radio cards.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-sf16fmr2.

RADIO_SHARK
  Choose Y here if you have this radio receiver.
  
  There are 2 versions of this device, this driver is for version 1,
  which is white.
  
  In order to control your radio card, you will need to use programs
  that are compatible with the Video For Linux API.  Information on
  this API and pointers to "v4l" programs may be found at
  <file:Documentation/userspace-api/media/index.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-shark.

RADIO_SHARK2
  Choose Y here if you have this radio receiver.
  
  There are 2 versions of this device, this driver is for version 2,
  which is black.
  
  In order to control your radio card, you will need to use programs
  that are compatible with the Video For Linux API.  Information on
  this API and pointers to "v4l" programs may be found at
  <file:Documentation/userspace-api/media/index.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-shark2.

RADIO_SI470X
  This is a driver for devices with the Silicon Labs SI470x
  chip (either via USB or I2C buses).
  
  Say Y here if you want to connect this type of radio to your
  computer's USB port or if it is used by some other driver
  via I2C bus.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-si470x-common.

RADIO_SI4713
  No help

RADIO_SI476X
  Choose Y here if you have this FM radio chip.
  
  In order to control your radio card, you will need to use programs
  that are compatible with the Video For Linux 2 API.  Information on
  this API and pointers to "v4l2" programs may be found at
  <file:Documentation/userspace-api/media/index.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-si476x.

RADIO_TEA575X
  No help

RADIO_TEA5764
  Say Y here if you want to use the TEA5764 FM chip found in
  EZX phones. This FM chip is present in EZX phones from Motorola,
  connected to internal pxa I2C bus.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-tea5764.

RADIO_TEA5764_XTAL
  Say Y here if TEA5764 have a 32768 Hz crystal in circuit, say N
  here if TEA5764 reference frequency is connected in FREQIN.

RADIO_TEF6862
  Say Y here if you want to use the TEF6862 Car Radio Enhanced
  Selectivity Tuner, found for instance on the Russellville development
  board. On the russellville the device is connected to internal
  timberdale I2C bus.
  
  To compile this driver as a module, choose M here: the
  module will be called TEF6862.

RADIO_TERRATEC
  Choose Y here if you have this FM radio card.
  
  Note: this driver hasn't been tested since a long time due to lack
  of hardware. If you have this hardware, then please contact the
  linux-media mailinglist.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-terratec.

RADIO_TIMBERDALE
  This is a kind of umbrella driver for the Radio Tuner and DSP
  found behind the Timberdale FPGA on the Russellville board.
  Enabling this driver will automatically select the DSP and tuner.

RADIO_TRUST
  This is a driver for the Trust FM radio cards. Say Y if you have
  such a card and want to use it under Linux.
  
  Note: this driver hasn't been tested since a long time due to lack
  of hardware. If you have this hardware, then please contact the
  linux-media mailinglist.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-trust.

RADIO_TRUST_PORT
  Enter the I/O port of your Trust FM radio card. If unsure, try the
  values "0x350" or "0x358".

RADIO_TYPHOON
  Choose Y here if you have one of these FM radio cards, and then fill
  in the port address and the frequency used for muting below.
  
  Note: this driver hasn't been tested since a long time due to lack
  of hardware. If you have this hardware, then please contact the
  linux-media mailinglist.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-typhoon.

RADIO_TYPHOON_MUTEFREQ
  Enter the frequency used for muting the radio. The device is never
  completely silent. If the volume is just turned down, you can still
  hear silent voices and music. For that reason, the frequency of the
  radio device is set to the frequency you can enter here whenever
  the device is muted. There should be no local radio station at that
  frequency.

RADIO_TYPHOON_PORT
  Enter the I/O port of your Typhoon or EcoRadio radio card.

RADIO_WL1273
  Choose Y here if you have this FM radio chip.
  
  In order to control your radio card, you will need to use programs
  that are compatible with the Video For Linux 2 API.  Information on
  this API and pointers to "v4l2" programs may be found at
  <file:Documentation/userspace-api/media/index.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-wl1273.

RADIO_WL128X
  Choose Y here if you have this FM radio chip.
  
  In order to control your radio card, you will need to use programs
  that are compatible with the Video For Linux 2 API.  Information on
  this API and pointers to "v4l2" programs may be found at
  <file:Documentation/userspace-api/media/index.rst>.

RADIO_ZOLTRIX
  Choose Y here if you have one of these FM radio cards, and then fill
  in the port address below.
  
  Note: this driver hasn't been tested since a long time due to lack
  of hardware. If you have this hardware, then please contact the
  linux-media mailinglist.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-zoltrix.

RADIO_ZOLTRIX_PORT
  Enter the I/O port of your Zoltrix radio card.

RAID6_PQ
  No help

RAID6_PQ_BENCHMARK
  Benchmark all available RAID6 PQ functions on init and choose the
  fastest one.

RAID_ATTRS
  Provides RAID

RALINK_WDT
  Hardware driver for the Ralink SoC Watchdog Timer.

RANDOM32_SELFTEST
  This option enables the 32 bit PRNG library functions to perform a
  self test on initialization.

RANDOMIZE_BASE
  In support of Kernel Address Space Layout Randomization (KASLR),
  this randomizes the physical address at which the kernel image
  is decompressed and the virtual address where the kernel
  image is mapped, as a security feature that deters exploit
  attempts relying on knowledge of the location of kernel
  code internals.
  
  On 64-bit, the kernel physical and virtual addresses are
  randomized separately. The physical address will be anywhere
  between 16MB and the top of physical memory (up to 64TB). The
  virtual address will be randomized from 16MB up to 1GB (9 bits
  of entropy). Note that this also reduces the memory space
  available to kernel modules from 1.5GB to 1GB.
  
  On 32-bit, the kernel physical and virtual addresses are
  randomized together. They will be randomized from 16MB up to
  512MB (8 bits of entropy).
  
  Entropy is generated using the RDRAND instruction if it is
  supported. If RDTSC is supported, its value is mixed into
  the entropy pool as well. If neither RDRAND nor RDTSC are
  supported, then entropy is read from the i8254 timer. The
  usable entropy is limited by the kernel being built using
  2GB addressing, and that PHYSICAL_ALIGN must be at a
  minimum of 2MB. As a result, only 10 bits of entropy are
  theoretically possible, but the implementations are further
  limited due to memory layouts.
  
  If unsure, say Y.

RANDOMIZE_MEMORY
  Randomizes the base virtual address of kernel memory sections
  (physical memory mapping, vmalloc & vmemmap). This security feature
  makes exploits relying on predictable memory locations less reliable.
  
  The order of allocations remains unchanged. Entropy is generated in
  the same way as RANDOMIZE_BASE. Current implementation in the optimal
  configuration have in average 30,000 different possible virtual
  addresses for each memory section.
  
  If unsure, say Y.

RANDOMIZE_MEMORY_PHYSICAL_PADDING
  Define the padding in terabytes added to the existing physical
  memory size during kernel memory randomization. It is useful
  for memory hotplug support but reduces the entropy available for
  address randomization.
  
  If unsure, leave at the default value.

RANDOM_TRUST_BOOTLOADER
  Some bootloaders can provide entropy to increase the kernel's initial
  device randomness. Say Y here to assume the entropy provided by the
  booloader is trustworthy so it will be added to the kernel's entropy
  pool. Otherwise, say N here so it will be regarded as device input that
  only mixes the entropy pool.

RANDOM_TRUST_CPU
  Assume that CPU manufacturer (e.g., Intel or AMD for RDSEED or
  RDRAND, IBM for the S390 and Power PC architectures) is trustworthy
  for the purposes of initializing Linux's CRNG.  Since this is not
  something that can be independently audited, this amounts to trusting
  that CPU manufacturer (perhaps with the insistence or mandate
  of a Nation State's intelligence or law enforcement agencies)
  has not installed a hidden back door to compromise the CPU's
  random number generation facilities. This can also be configured
  at boot with "random.trust_cpu=on/off".

RAPIDIO
  If you say Y here, the kernel will include drivers and
  infrastructure code to support RapidIO interconnect devices.

RAPIDIO_CHMAN
  This option includes RapidIO channelized messaging driver which
  provides socket-like interface to allow sharing of single RapidIO
  messaging mailbox between multiple user-space applications.
  See "Documentation/driver-api/rapidio/rio_cm.rst" for driver description.

RAPIDIO_CPS_GEN2
  Includes support for ITD CPS Gen.2 serial RapidIO switches.

RAPIDIO_CPS_XX
  Includes support for IDT CPS-16/12/10/8 serial RapidIO switches.

RAPIDIO_DEBUG
  Say Y here if you want the RapidIO subsystem to produce a bunch of
  debug messages to the system log. Select this if you are having a
  problem with the RapidIO subsystem and want to see more of what is
  going on.
  
  If you are unsure about this, say N here.

RAPIDIO_DISC_TIMEOUT
  Amount of time a discovery node waits for a host to complete
  enumeration before giving up.

RAPIDIO_DMA_ENGINE
  Say Y here if you want to use DMA Engine frameork for RapidIO data
  transfers to/from target RIO devices. RapidIO uses NREAD and
  NWRITE (NWRITE_R, SWRITE) requests to transfer data between local
  memory and memory on remote target device. You need a DMA controller
  capable to perform data transfers to/from RapidIO.
  
  If you are unsure about this, say Y here.

RAPIDIO_ENABLE_RX_TX_PORTS
  The RapidIO specification describes a Output port transmit
  enable and a Input port receive enable. The recommended state
  for Input ports and Output ports should be disabled. When
  this switch is set the RapidIO subsystem will enable all
  ports for Input/Output direction to allow other traffic
  than Maintenance transfers.

RAPIDIO_ENUM_BASIC
  This option includes basic RapidIO fabric enumeration and discovery
  mechanism similar to one described in RapidIO specification Annex 1.

RAPIDIO_MPORT_CDEV
  This option includes generic RapidIO mport device driver which
  allows to user space applications to perform RapidIO-specific
  operations through selected RapidIO mport.

RAPIDIO_RXS_GEN3
  Includes support for ITD RXS Gen.3 serial RapidIO switches.

RAPIDIO_TSI568
  Includes support for IDT Tsi568 serial RapidIO switch.

RAPIDIO_TSI57X
  Includes support for IDT Tsi57x family of serial RapidIO switches.

RAPIDIO_TSI721
  Include support for IDT Tsi721 PCI Express Serial RapidIO controller.

RAS
  Reliability, availability and serviceability (RAS) is a computer
  hardware engineering term. Computers designed with higher levels
  of RAS have a multitude of features that protect data integrity
  and help them stay available for long periods of time without
  failure.
  
  Reliability can be defined as the probability that the system will
  produce correct outputs up to some given time. Reliability is
  enhanced by features that help to avoid, detect and repair hardware
  faults.
  
  Availability is the probability a system is operational at a given
  time, i.e. the amount of time a device is actually operating as the
  percentage of total time it should be operating.
  
  Serviceability or maintainability is the simplicity and speed with
  which a system can be repaired or maintained; if the time to repair
  a failed system increases, then availability will decrease.
  
  Note that Reliability and Availability are distinct concepts:
  Reliability is a measure of the ability of a system to function
  correctly, including avoiding data corruption, whereas Availability
  measures how often it is available for use, even though it may not
  be functioning correctly. For example, a server may run forever and
  so have ideal availability, but may be unreliable, with frequent
  data corruption.

RASPBERRYPI_FIRMWARE
  This option enables support for communicating with the firmware on the
  Raspberry Pi.

RASPBERRYPI_POWER
  This enables support for the RPi power domains which can be enabled
  or disabled via the RPi firmware.

RAS_CEC
  This is a small cache which collects correctable memory errors per 4K
  page PFN and counts their repeated occurrence. Once the counter for a
  PFN overflows, we try to soft-offline that page as we take it to mean
  that it has reached a relatively high error count and would probably
  be best if we don't use it anymore.
  
  Bear in mind that this is absolutely useless if your platform doesn't
  have ECC DIMMs and doesn't have DRAM ECC checking enabled in the BIOS.

RAS_CEC_DEBUG
  Add extra files to (debugfs)/ras/cec to test the correctable error
  collector feature. "pfn" is a writable file that allows user to
  simulate an error in a particular page frame. "array" is a read-only
  file that dumps out the current state of all pages logged so far.

RATIONAL
  No help

RAVB
  Renesas Ethernet AVB device driver.
  This driver supports the following SoCs:
        - R8A779x.

RAVE_SP_CORE
  Select this to get support for the Supervisory Processor
  device found on several devices in RAVE line of hardware.

RAVE_SP_EEPROM
  Say y here to enable Rave SP EEPROM support.

RAVE_SP_WATCHDOG
  Support for the watchdog on RAVE SP device.

RAW_DRIVER
  The raw driver permits block devices to be bound to /dev/raw/rawN.
  Once bound, I/O against /dev/raw/rawN uses efficient zero-copy I/O.
  See the raw(8) manpage for more details.
  
  Applications should preferably open the device (eg /dev/hda1)
  with the O_DIRECT flag.

RBTREE_TEST
  A benchmark measuring the performance of the rbtree library.
  Also includes rbtree invariant checks.

RC32434_WDT
  Hardware driver for the IDT RC32434 SoC built-in
  watchdog timer.
  
  To compile this driver as a module, choose M here: the
  module will be called rc32434_wdt.

RCAR_DMAC
  This driver supports the general purpose DMA controller found in the
  Renesas R-Car Gen{2,3} and RZ/G{1,2} SoCs.

RCAR_GEN3_THERMAL
  Enable this to plug the R-Car Gen3 or RZ/G2 thermal sensor driver into
  the Linux thermal framework.

RCAR_GYRO_ADC
  Say yes here to build support for the GyroADC found in Renesas
  R-Car Gen2 SoCs. This block is a simple SPI offload engine for
  reading data out of attached compatible ADCs in a round-robin
  fashion. Up to 4 or 8 ADC channels are supported by this block,
  depending on which ADCs are attached.
  
  To compile this driver as a module, choose M here: the
  module will be called rcar-gyroadc.

RCAR_THERMAL
  Enable this to plug the R-Car thermal sensor driver into the Linux
  thermal framework.

RCU_BOOST
  This option boosts the priority of preempted RCU readers that
  block the current preemptible RCU grace period for too long.
  This option also prevents heavy loads from blocking RCU
  callback invocation.
  
  Say Y here if you are working with real-time apps or heavy loads
  Say N here if you are unsure.

RCU_BOOST_DELAY
  This option specifies the time to wait after the beginning of
  a given grace period before priority-boosting preempted RCU
  readers blocking that grace period.  Note that any RCU reader
  blocking an expedited RCU grace period is boosted immediately.
  
  Accept the default if unsure.

RCU_CPU_STALL_TIMEOUT
  If a given RCU grace period extends more than the specified
  number of seconds, a CPU stall warning is printed.  If the
  RCU grace period persists, additional CPU stall warnings are
  printed at more widely spaced intervals.

RCU_EQS_DEBUG
  This option provides consistency checks in RCU's handling of
  NO_HZ.  These checks have proven quite helpful in detecting
  bugs in arch-specific NO_HZ code.
  
  Say N here if you need ultimate kernel/user switch latencies
  Say Y if you are unsure

RCU_EXPERT
  This option needs to be enabled if you wish to make
  expert-level adjustments to RCU configuration.  By default,
  no such adjustments can be made, which has the often-beneficial
  side-effect of preventing "make oldconfig" from asking you all
  sorts of detailed questions about how you would like numerous
  obscure RCU options to be set up.
  
  Say Y if you need to make expert-level adjustments to RCU.
  
  Say N if you are unsure.

RCU_FANOUT
  This option controls the fanout of hierarchical implementations
  of RCU, allowing RCU to work efficiently on machines with
  large numbers of CPUs.  This value must be at least the fourth
  root of NR_CPUS, which allows NR_CPUS to be insanely large.
  The default value of RCU_FANOUT should be used for production
  systems, but if you are stress-testing the RCU implementation
  itself, small RCU_FANOUT values allow you to test large-system
  code paths on small(er) systems.
  
  Select a specific number if testing RCU itself.
  Take the default if unsure.

RCU_FANOUT_LEAF
  This option controls the leaf-level fanout of hierarchical
  implementations of RCU, and allows trading off cache misses
  against lock contention.  Systems that synchronize their
  scheduling-clock interrupts for energy-efficiency reasons will
  want the default because the smaller leaf-level fanout keeps
  lock contention levels acceptably low.  Very large systems
  (hundreds or thousands of CPUs) will instead want to set this
  value to the maximum value possible in order to reduce the
  number of cache misses incurred during RCU's grace-period
  initialization.  These systems tend to run CPU-bound, and thus
  are not helped by synchronized interrupts, and thus tend to
  skew them, which reduces lock contention enough that large
  leaf-level fanouts work well.  That said, setting leaf-level
  fanout to a large number will likely cause problematic
  lock contention on the leaf-level rcu_node structures unless
  you boot with the skew_tick kernel parameter.
  
  Select a specific number if testing RCU itself.
  
  Select the maximum permissible value for large systems, but
  please understand that you may also need to set the skew_tick
  kernel boot parameter to avoid contention on the rcu_node
  structure's locks.
  
  Take the default if unsure.

RCU_FAST_NO_HZ
  This option permits CPUs to enter dynticks-idle state even if
  they have RCU callbacks queued, and prevents RCU from waking
  these CPUs up more than roughly once every four jiffies (by
  default, you can adjust this using the rcutree.rcu_idle_gp_delay
  parameter), thus improving energy efficiency.  On the other
  hand, this option increases the duration of RCU grace periods,
  for example, slowing down synchronize_rcu().
  
  Say Y if energy efficiency is critically important, and you
          don't care about increased grace-period durations.
  
  Say N if you are unsure.

RCU_NEED_SEGCBLIST
  No help

RCU_NOCB_CPU
  Use this option to reduce OS jitter for aggressive HPC or
  real-time workloads.        It can also be used to offload RCU
  callback invocation to energy-efficient CPUs in battery-powered
  asymmetric multiprocessors.  The price of this reduced jitter
  is that the overhead of call_rcu() increases and that some
  workloads will incur significant increases in context-switch
  rates.
  
  This option offloads callback invocation from the set of CPUs
  specified at boot time by the rcu_nocbs parameter.  For each
  such CPU, a kthread ("rcuox/N") will be created to invoke
  callbacks, where the "N" is the CPU being offloaded, and where
  the "x" is "p" for RCU-preempt (PREEMPTION kernels) and "s" for
  RCU-sched (!PREEMPTION kernels).  Nothing prevents this kthread
  from running on the specified CPUs, but (1) the kthreads may be
  preempted between each callback, and (2) affinity or cgroups can
  be used to force the kthreads to run on whatever set of CPUs is
  desired.
  
  Say Y here if you need reduced OS jitter, despite added overhead.
  Say N here if you are unsure.

RCU_REF_SCALE_TEST
  This option provides a kernel module that runs performance tests
  useful comparing RCU with various read-side synchronization mechanisms.
  The kernel module may be built after the fact on the running kernel to be
  tested, if desired.
  
  Say Y here if you want these performance tests built into the kernel.
  Say M if you want to build it as a module instead.
  Say N if you are unsure.

RCU_SCALE_TEST
  This option provides a kernel module that runs performance
  tests on the RCU infrastructure.  The kernel module may be built
  after the fact on the running kernel to be tested, if desired.
  
  Say Y here if you want RCU performance tests to be built into
  the kernel.
  Say M if you want the RCU performance tests to build as a module.
  Say N if you are unsure.

RCU_STALL_COMMON
  This option enables RCU CPU stall code that is common between
  the TINY and TREE variants of RCU.  The purpose is to allow
  the tiny variants to disable RCU CPU stall warnings, while
  making these warnings mandatory for the tree variants.

RCU_STRICT_GRACE_PERIOD
  Select this option to build an RCU variant that is strict about
  grace periods, making them as short as it can.  This limits
  scalability, destroys real-time response, degrades battery
  lifetime and kills performance.  Don't try this on large
  machines, as in systems with more than about 10 or 20 CPUs.
  But in conjunction with tools like KASAN, it can be helpful
  when looking for certain types of RCU usage bugs, for example,
  too-short RCU read-side critical sections.

RCU_TORTURE_TEST
  This option provides a kernel module that runs torture tests
  on the RCU infrastructure.  The kernel module may be built
  after the fact on the running kernel to be tested, if desired.
  
  Say Y here if you want RCU torture tests to be built into
  the kernel.
  Say M if you want the RCU torture tests to build as a module.
  Say N if you are unsure.

RCU_TRACE
  This option enables additional tracepoints for ftrace-style
  event tracing.
  
  Say Y here if you want to enable RCU tracing
  Say N if you are unsure.

RC_ATI_REMOTE
  Say Y here if you want to use an X10 based USB remote control.
  These are RF remotes with USB receivers.
  
  Such devices include the ATI remote that comes with many of ATI's
  All-In-Wonder video cards, the X10 "Lola" remote, NVIDIA RF remote,
  Medion RF remote, and SnapStream FireFly remote.
  
  This driver provides mouse pointer, left and right mouse buttons,
  and maps all the other remote buttons to keypress events.
  
  To compile this driver as a module, choose M here: the module will be
  called ati_remote.

RC_CORE
  Enable support for Remote Controllers on Linux. This is
  needed in order to support several video capture adapters,
  standalone IR receivers/transmitters, and RF receivers.
  
  Enable this option if you have a video capture board even
  if you don't need IR, as otherwise, you may not be able to
  compile the driver for your adapter.
  
  Say Y when you have a TV or an IR device.

RC_DECODERS
  No help

RC_DEVICES
  No help

RC_LOOPBACK
  Say Y here if you want support for the remote control loopback
  driver which allows TX data to be sent back as RX data.
  This is mostly useful for debugging purposes.
  
  If you're not sure, select N here.
  
  To compile this driver as a module, choose M here: the module will
  be called rc_loopback.

RC_MAP
  This option enables the compilation of lots of Remote
  Controller tables. They are short tables, but if you
  don't use a remote controller, or prefer to load the
  tables on userspace, you should disable it.
  
  The ir-keytable program, available at v4l-utils package
  provide the tool and the same RC maps for load from
  userspace. Its available at
       http://git.linuxtv.org/cgit.cgi/v4l-utils.git/

RC_ST
  Say Y here if you want support for ST remote control driver
  which allows both IR and UHF RX.
  The driver passes raw pulse and space information to the LIRC decoder.
  
  If you're not sure, select N here.

RC_XBOX_DVD
  Say Y here if you want to use the Xbox DVD Movie Playback Kit.
  These are IR remotes with USB receivers for the Original Xbox (2001).
  
  To compile this driver as a module, choose M here: the module will be
  called xbox_remote.

RDA_INTC
  No help

RDA_TIMER
  Enables the support for the RDA Micro timer driver.

RDC321X_WDT
  This is the driver for the built in hardware watchdog
  in the RDC R-321x SoC.
  
  To compile this driver as a module, choose M here: the
  module will be called rdc321x_wdt.

RDMA_RXE
  This driver implements the InfiniBand RDMA transport over
  the Linux network stack. It enables a system with a
  standard Ethernet adapter to interoperate with a RoCE
  adapter or with another system running the RXE driver.
  Documentation on InfiniBand and RoCE can be downloaded at
  www.infinibandta.org and www.openfabrics.org. (See also
  siw which is a similar software driver for iWARP.)
  
  The driver is split into two layers, one interfaces with the
  Linux RDMA stack and implements a kernel or user space
  verbs API. The user space verbs API requires a support
  library named librxe which is loaded by the generic user
  space verbs API, libibverbs. The other layer interfaces
  with the Linux network stack at layer 3.
  
  To configure and work with soft-RoCE driver please use the
  following wiki page under "configure Soft-RoCE (RXE)" section:
  
  https://github.com/linux-rdma/rdma-core/blob/master/Documentation/rxe.md

RDMA_SIW
  This driver implements the iWARP RDMA transport over
  the Linux TCP/IP network stack. It enables a system with a
  standard Ethernet adapter to interoperate with a iWARP
  adapter or with another system running the SIW driver.
  (See also RXE which is a similar software driver for RoCE.)
  
  The driver interfaces with the Linux RDMA stack and
  implements both a kernel and user space RDMA verbs API.
  The user space verbs API requires a support
  library named libsiw which is loaded by the generic user
  space verbs API, libibverbs. To implement RDMA over
  TCP/IP, the driver further interfaces with the Linux
  in-kernel TCP socket layer.

RDS
  The RDS (Reliable Datagram Sockets) protocol provides reliable,
  sequenced delivery of datagrams over Infiniband or TCP.

RDS_DEBUG
  No help

RDS_RDMA
  Allow RDS to use Infiniband as a transport.
  This transport supports RDMA operations.

RDS_TCP
  Allow RDS to use TCP as a transport.
  This transport does not support RDMA operations.

RD_BZIP2
  Support loading of a bzip2 encoded initial ramdisk or cpio buffer
  If unsure, say N.

RD_GZIP
  Support loading of a gzip encoded initial ramdisk or cpio buffer.
  If unsure, say Y.

RD_LZ4
  Support loading of a LZ4 encoded initial ramdisk or cpio buffer
  If unsure, say N.

RD_LZMA
  Support loading of a LZMA encoded initial ramdisk or cpio buffer
  If unsure, say N.

RD_LZO
  Support loading of a LZO encoded initial ramdisk or cpio buffer
  If unsure, say N.

RD_XZ
  Support loading of a XZ encoded initial ramdisk or cpio buffer.
  If unsure, say N.

RD_ZSTD
  Support loading of a ZSTD encoded initial ramdisk or cpio buffer.
  If unsure, say N.

READABLE_ASM
  Disable some compiler optimizations that tend to generate human unreadable
  assembler output. This may make the kernel slightly slower, but it helps
  to keep kernel developers who have to stare a lot at assembler listings
  sane.

READ_ONLY_THP_FOR_FS
  Allow khugepaged to put read-only file-backed pages in THP.
  
  This is marked experimental because it is a new feature. Write
  support of file THPs will be developed in the next few release
  cycles.

REALTEK_AUTOPM
  No help

REALTEK_PHY
  Supports the Realtek 821x PHY.

REBOOT_MODE
  No help

REED_SOLOMON
  No help

REED_SOLOMON_DEC16
  No help

REED_SOLOMON_DEC8
  No help

REED_SOLOMON_ENC16
  No help

REED_SOLOMON_ENC8
  No help

REED_SOLOMON_TEST
  This option enables the self-test function of rslib at boot,
  or at module load time.
  
  If unsure, say N.

REGCACHE_COMPRESSED
  No help

REGMAP
  No help

REGMAP_AC97
  No help

REGMAP_I2C
  No help

REGMAP_I3C
  No help

REGMAP_IRQ
  No help

REGMAP_MMIO
  No help

REGMAP_SCCB
  No help

REGMAP_SLIMBUS
  No help

REGMAP_SOUNDWIRE
  No help

REGMAP_SOUNDWIRE_MBQ
  No help

REGMAP_SPI
  No help

REGMAP_SPI_AVMM
  No help

REGMAP_SPMI
  No help

REGMAP_W1
  No help

REGULATOR
  Generic Voltage and Current Regulator support.
  
  This framework is designed to provide a generic interface to voltage
  and current regulators within the Linux kernel. It's intended to
  provide voltage and current control to client or consumer drivers and
  also provide status information to user space applications through a
  sysfs interface.
  
  The intention is to allow systems to dynamically control regulator
  output in order to save power and prolong battery life. This applies
  to both voltage regulators (where voltage output is controllable) and
  current sinks (where current output is controllable).
  
  This framework safely compiles out if not selected so that client
  drivers can still be used in systems with no software controllable
  regulators.
  
  If unsure, say no.

REGULATOR_88PG86X
  This driver supports Marvell 88PG867 and 88PG868 voltage regulators.
  They provide two I2C-controlled DC/DC step-down converters with
  sleep mode and separate enable pins.

REGULATOR_88PM800
  This driver supports Marvell 88PM800 voltage regulator chips.
  It delivers digitally programmable output,
  the voltage is programmed via I2C interface.
  It's suitable to support PXA988 chips to control VCC_MAIN and
  various voltages.

REGULATOR_88PM8607
  This driver supports 88PM8607 voltage regulator chips.

REGULATOR_AAT2870
  If you have a AnalogicTech AAT2870 say Y to enable the
  regulator driver.

REGULATOR_AB3100
  These regulators correspond to functionality in the
  AB3100 analog baseband dealing with power regulators
  for the system.

REGULATOR_AB8500
  This driver supports the regulators found on the ST-Ericsson mixed
  signal AB8500 PMIC

REGULATOR_ACT8865
  This driver controls a active-semi act8865 voltage output
  regulator via I2C bus.

REGULATOR_ACT8945A
  This driver controls a active-semi ACT8945A voltage regulator
  via I2C bus. The ACT8945A features three step-down DC/DC converters
  and four low-dropout linear regulators, along with a ActivePath
  battery charger.

REGULATOR_AD5398
  This driver supports AD5398 and AD5821 current regulator chips.
  If building into module, its name is ad5398.ko.

REGULATOR_ANATOP
  Say y here to support Freescale i.MX on-chip ANATOP LDOs
  regulators. It is recommended that this option be
  enabled on i.MX6 platform.

REGULATOR_ARIZONA_LDO1
  Support for the LDO1 regulators found on Cirrus Logic Madera codecs
  and Wolfson Microelectronic Arizona codecs.

REGULATOR_ARIZONA_MICSUPP
  Support for the MICSUPP regulators found on Cirrus Logic Madera codecs
  and Wolfson Microelectronic Arizona codecs
  devices.

REGULATOR_ARM_SCMI
  This adds the regulator driver support for ARM platforms using SCMI
  protocol for device voltage management.
  This driver uses SCMI Message Protocol driver to interact with the
  firmware providing the device Voltage functionality.

REGULATOR_AS3711
  This driver provides support for the voltage regulators on the
  AS3711 PMIC

REGULATOR_AS3722
  This driver provides support for the voltage regulators on the
  AS3722 PMIC. This will enable support for all the software
  controllable DCDC/LDO regulators.

REGULATOR_AXP20X
  This driver provides support for the voltage regulators on the
  AXP20X PMIC.

REGULATOR_BCM590XX
  This driver provides support for the voltage regulators on the
  BCM590xx PMUs. This will enable support for the software
  controllable LDO/Switching regulators.

REGULATOR_BD70528
  This driver supports voltage regulators on ROHM BD70528 PMIC.
  This will enable support for the software controllable buck
  and LDO regulators.
  
  This driver can also be built as a module. If so, the module
  will be called bd70528-regulator.

REGULATOR_BD71828
  This driver supports voltage regulators on ROHM BD71828 PMIC.
  This will enable support for the software controllable buck
  and LDO regulators.
  
  This driver can also be built as a module. If so, the module
  will be called bd71828-regulator.

REGULATOR_BD718XX
  This driver supports voltage regulators on ROHM BD71837 PMIC.
  This will enable support for the software controllable buck
  and LDO regulators.
  
  This driver can also be built as a module. If so, the module
  will be called bd718x7-regulator.

REGULATOR_BD9571MWV
  This driver provides support for the voltage regulators on the
  ROHM BD9571MWV PMIC. This will enable support for the software
  controllable regulator and voltage sampling units.
  
  This driver can also be built as a module. If so, the module
  will be called bd9571mwv-regulator.

REGULATOR_BD957XMUF
  This driver supports voltage regulators on ROHM BD9576MUF and
  BD9573MUF PMICs.
  
  This driver can also be built as a module. If so, the module
  will be called bd9576-regulator.

REGULATOR_CPCAP
  Say y here for CPCAP regulator found on some Motorola phones
  and tablets such as Droid 4.

REGULATOR_CROS_EC
  This driver supports voltage regulators that is connected to ChromeOS
  EC and controlled through EC host commands.
  
  This driver can also be built as a module. If so, the module
  will be called cros-ec-regulator.

REGULATOR_DA903X
  Say y here to support the BUCKs and LDOs regulators found on
  Dialog Semiconductor DA9030/DA9034 PMIC.

REGULATOR_DA9052
  This driver supports the voltage regulators of DA9052-BC and
  DA9053-AA/Bx PMIC.

REGULATOR_DA9055
  Say y here to support the BUCKs and LDOs regulators found on
  Dialog Semiconductor DA9055 PMIC.
  
  This driver can also be built as a module. If so, the module
  will be called da9055-regulator.

REGULATOR_DA9062
  Say y here to support the BUCKs and LDOs regulators found on
  DA9061 and DA9062 PMICs.
  
  This driver can also be built as a module. If so, the module
  will be called da9062-regulator.

REGULATOR_DA9063
  Say y here to support the BUCKs and LDOs regulators found on
  DA9063 PMICs.
  
  This driver can also be built as a module. If so, the module
  will be called da9063-regulator.

REGULATOR_DA9121
  Say y here to support for the Dialog Semiconductor DA9121.  The
  DA9121 is a single channel dual-phase buck converter controlled
  through an I2C interface.
  
  DA9121 Single-channel dual-phase 10A buck converter
  DA9130 Single-channel dual-phase 10A buck converter (Automotive)
  DA9217 Single-channel dual-phase  6A buck converter
  DA9122 Dual-channel single-phase  5A buck converter
  DA9131 Dual-channel single-phase  5A buck converter (Automotive)
  DA9220 Dual-channel single-phase  3A buck converter
  DA9132 Dual-channel single-phase  3A buck converter (Automotive)
  
  This driver can also be built as a module. If so, the module
  will be called da9121-regulator.

REGULATOR_DA9210
  Say y here to support for the Dialog Semiconductor DA9210.
  The DA9210 is a multi-phase synchronous step down
  converter 12A DC-DC Buck controlled through an I2C
  interface.

REGULATOR_DA9211
  Say y here to support for the Dialog Semiconductor DA9211/DA9212
  /DA9213/DA9214/DA9215.
  The DA9211/DA9212/DA9213/DA9214/DA9215 is a multi-phase synchronous
  step down converter 12A or 16A DC-DC Buck controlled through an I2C
  interface.

REGULATOR_DB8500_PRCMU
  This driver supports the voltage domain regulators controlled by the
  DB8500 PRCMU

REGULATOR_DBX500_PRCMU
  No help

REGULATOR_DEBUG
  Say yes here to enable debugging support.

REGULATOR_FAN53555
  This driver supports Fairchild FAN53555 Digitally Programmable
  TinyBuck Regulator. The FAN53555 is a step-down switching voltage
  regulator that delivers a digitally programmable output from an
  input voltage supply of 2.5V to 5.5V. The output voltage is
  programmed through an I2C interface.

REGULATOR_FAN53880
  This driver supports Fairchild (ON Semiconductor) FAN53880
  regulator. The regulator is a programmable power management IC
  (PMIC), it is controlled by I2C and provides one BUCK, one BOOST
  and four LDO outputs.

REGULATOR_FIXED_VOLTAGE
  This driver provides support for fixed voltage regulators,
  useful for systems which use a combination of software
  managed regulators and simple non-configurable regulators.

REGULATOR_GPIO
  This driver provides support for regulators that can be
  controlled via gpios.
  It is capable of supporting current and voltage regulators
  and the platform has to provide a mapping of GPIO-states
  to target volts/amps.

REGULATOR_HI6421
  This driver provides support for the voltage regulators on the
  HiSilicon Hi6421 PMU / Codec IC.
  Hi6421 is a multi-function device which, on regulator part, provides
  21 general purpose LDOs, 3 dedicated LDOs, and 5 BUCKs. All
  of them come with support to either ECO (idle) or sleep mode.

REGULATOR_HI6421V530
  This driver provides support for the voltage regulators on
  HiSilicon Hi6421v530 PMU / Codec IC.
  Hi6421v530 is a multi-function device which, on regulator part,
  provides 5 general purpose LDOs, and all of them come with support
  to either ECO (idle) or sleep mode.

REGULATOR_HI6421V600
  This driver provides support for the voltage regulators on
  HiSilicon Hi6421v600 PMU / Codec IC.
  This is used on Kirin 3670 boards, like HiKey 970.

REGULATOR_HI655X
  This driver provides support for the voltage regulators of the
  Hisilicon Hi655x PMIC device.

REGULATOR_ISL6271A
  This driver supports ISL6271A voltage regulator chip.

REGULATOR_ISL9305
  This driver supports ISL9305 voltage regulator chip.

REGULATOR_LM363X
  This driver supports LM3631, LM3632 and LM36274 voltage regulators for
  the LCD bias.
  One boost output voltage is configurable and always on.
  Other LDOs are used for the display module.

REGULATOR_LOCHNAGAR
  This enables regulator support on the Cirrus Logic Lochnagar audio
  development board.

REGULATOR_LP3971
  Say Y here to support the voltage regulators and convertors
  on National Semiconductors LP3971 PMIC

REGULATOR_LP3972
  Say Y here to support the voltage regulators and convertors
  on National Semiconductors LP3972 PMIC

REGULATOR_LP872X
  This driver supports LP8720/LP8725 PMIC

REGULATOR_LP873X
  This driver supports LP873X voltage regulator chips. LP873X
  provides two step-down converters and two general-purpose LDO
  voltage regulators. It supports software based voltage control
  for different voltage domains

REGULATOR_LP8755
  This driver supports LP8755 High Performance PMU driver. This
  chip contains six step-down DC/DC converters which can support
  9 mode multiphase configuration.

REGULATOR_LP87565
  This driver supports LP87565 voltage regulator chips. LP87565
  provides four step-down converters. It supports software based
  voltage control for different voltage domains

REGULATOR_LP8788
  This driver supports LP8788 voltage regulator chip.

REGULATOR_LTC3589
  This enables support for the LTC3589, LTC3589-1, and LTC3589-2
  8-output regulators controlled via I2C.

REGULATOR_LTC3676
  This enables support for the LTC3676
  8-output regulators controlled via I2C.

REGULATOR_MAX14577
  This driver controls a Maxim MAX14577/77836 regulator via I2C bus.
  The MAX14577 regulators include safeout LDO and charger current
  regulator. The MAX77836 has two additional LDOs.

REGULATOR_MAX1586
  This driver controls a Maxim 1586 or 1587 voltage output
  regulator via I2C bus. The provided regulator is suitable
  for PXA27x chips to control VCC_CORE and VCC_USIM voltages.

REGULATOR_MAX77620
  This driver controls Maxim MAX77620 voltage output regulator
  via I2C bus. The provided regulator is suitable for Tegra
  chip to control Step-Down DC-DC and LDOs. Say Y here to
  enable the regulator driver.

REGULATOR_MAX77650
  Regulator driver for MAX77650/77651 PMIC from Maxim
  Semiconductor. This device has a SIMO with three independent
  power rails and an LDO.

REGULATOR_MAX77686
  This driver controls a Maxim 77686 regulator
  via I2C bus. The provided regulator is suitable for
  Exynos-4 chips to control VARM and VINT voltages.

REGULATOR_MAX77693
  This driver controls a Maxim 77693/77843 regulators via I2C bus.
  The regulators include two LDOs, 'SAFEOUT1', 'SAFEOUT2'
  and one current regulator 'CHARGER'. This is suitable for
  Exynos-4x12 (MAX77693) or Exynos5433 (MAX77843) SoC chips.

REGULATOR_MAX77802
  This driver controls a Maxim 77802 regulator
  via I2C bus. The provided regulator is suitable for
  Exynos5420/Exynos5800 SoCs to control various voltages.
  It includes support for control of voltage and ramp speed.

REGULATOR_MAX77826
  This driver controls a Maxim 77826 regulator via I2C bus.
  The regulator include 15 LDOs, BUCK and BUCK BOOST regulator.
  It includes support for control of output voltage. This
  regulator is found on the Samsung Galaxy S5 (klte) smartphone.

REGULATOR_MAX8649
  This driver controls a Maxim 8649 voltage output regulator via
  I2C bus.

REGULATOR_MAX8660
  This driver controls a Maxim 8660/8661 voltage output
  regulator via I2C bus.

REGULATOR_MAX8907
  This driver controls a Maxim 8907 voltage output regulator
  via I2C bus. The provided regulator is suitable for Tegra
  chip to control Step-Down DC-DC and LDOs.

REGULATOR_MAX8925
  Say y here to support the voltage regulator of Maxim MAX8925 PMIC.

REGULATOR_MAX8952
  This driver controls a Maxim 8952 voltage output regulator
  via I2C bus. Maxim 8952 has one voltage output and supports 4 DVS
  modes ranging from 0.77V to 1.40V by 0.01V steps.

REGULATOR_MAX8973
  The MAXIM MAX8973 high-efficiency. three phase, DC-DC step-down
  switching regulator delivers up to 9A of output current. Each
  phase operates at a 2MHz fixed frequency with a 120 deg shift
  from the adjacent phase, allowing the use of small magnetic component.

REGULATOR_MAX8997
  This driver controls a Maxim 8997/8966 regulator
  via I2C bus. The provided regulator is suitable for S5PC110,
  S5PV210, and Exynos-4 chips to control VCC_CORE and
  VCC_USIM voltages.

REGULATOR_MAX8998
  This driver controls a Maxim 8998 voltage output regulator
  via I2C bus. The provided regulator is suitable for S3C6410
  and S5PC1XX chips to control VCC_CORE and VCC_USIM voltages.

REGULATOR_MC13783
  Say y here to support the regulators found on the Freescale MC13783
  PMIC.

REGULATOR_MC13892
  Say y here to support the regulators found on the Freescale MC13892
  PMIC.

REGULATOR_MC13XXX_CORE
  No help

REGULATOR_MCP16502
  Say y here to support the MCP16502 PMIC. This driver supports
  basic operations (get/set voltage, get/set operating mode)
  through the regulator interface. In addition it enables
  suspend-to-ram/standby transition.

REGULATOR_MP5416
  Say y here to support the MP5416 PMIC. This will enable supports
  the software controllable 4 buck and 4 LDO regulators.
  Say M here if you want to include support for the regulator as a
  module.

REGULATOR_MP8859
  Say y here to support the MP8859 voltage regulator. This driver
  supports basic operations (get/set voltage) through the regulator
  interface.
  Say M here if you want to include support for the regulator as a
  module. The module will be named "mp8859".

REGULATOR_MP886X
  This driver supports the MP8869 voltage regulator.

REGULATOR_MPQ7920
  Say y here to support the MPQ7920 PMIC. This will enable supports
  the software controllable 4 buck and 5 LDO regulators.
  This driver supports the control of different power rails of device
  through regulator interface.

REGULATOR_MT6311
  Say y here to select this option to enable the power regulator of
  MediaTek MT6311 PMIC.
  This driver supports the control of different power rails of device
  through regulator interface.

REGULATOR_MT6323
  Say y here to select this option to enable the power regulator of
  MediaTek MT6323 PMIC.
  This driver supports the control of different power rails of device
  through regulator interface.

REGULATOR_MT6358
  Say y here to select this option to enable the power regulator of
  MediaTek MT6358 PMIC.
  This driver supports the control of different power rails of device
  through regulator interface.

REGULATOR_MT6360
  Say Y here to enable MT6360 regulator support.
  This is support MT6360 PMIC/LDO part include
  2-channel buck with Thermal Shutdown and Overload Protection
  6-channel High PSRR and Low Dropout LDO.

REGULATOR_MT6380
  Say y here to select this option to enable the power regulator of
  MediaTek MT6380 PMIC.
  This driver supports the control of different power rails of device
  through regulator interface.

REGULATOR_MT6397
  Say y here to select this option to enable the power regulator of
  MediaTek MT6397 PMIC.
  This driver supports the control of different power rails of device
  through regulator interface.

REGULATOR_PALMAS
  If you wish to control the regulators on the Palmas series of
  chips say Y here. This will enable support for all the software
  controllable SMPS/LDO regulators.
  
  The regulators available on Palmas series chips vary depending
  on the muxing. This is handled automatically in the driver by
  reading the mux info from OTP.

REGULATOR_PBIAS
  Say y here to support pbias regulator for mmc1:SD card i/o
  on OMAP SoCs.
  This driver provides support for OMAP pbias modelled
  regulators.

REGULATOR_PCA9450
  Say y here to support the NXP PCA9450A/PCA9450B/PCA9450C PMIC
  regulator driver.

REGULATOR_PCAP
  This driver provides support for the voltage regulators of the
  PCAP2 PMIC.

REGULATOR_PCF50633
  Say Y here to support the voltage regulators and converters
  on PCF50633

REGULATOR_PF8X00
  Say y here to support the regulators found on the NXP
  PF8100/PF8121A/PF8200 PMIC.

REGULATOR_PFUZE100
  Say y here to support the regulators found on the Freescale
  PFUZE100/200/3000/3001 PMIC.

REGULATOR_PV88060
  Say y here to support the voltage regulators and convertors
  PV88060

REGULATOR_PV88080
  Say y here to support the buck convertors on PV88080

REGULATOR_PV88090
  Say y here to support the voltage regulators and convertors
  on PV88090

REGULATOR_PWM
  This driver supports PWM controlled voltage regulators. PWM
  duty cycle can increase or decrease the voltage.

REGULATOR_QCOM_LABIBB
  This driver supports Qualcomm's LAB/IBB regulators present on the
  Qualcomm's PMIC chip pmi8998. QCOM LAB and IBB are SPMI
  based PMIC implementations. LAB can be used as positive
  boost regulator and IBB can be used as a negative boost regulator
  for LCD display panel.

REGULATOR_QCOM_RPM
  If you say yes to this option, support will be included for the
  regulators exposed by the Resource Power Manager found in Qualcomm
  8660, 8960 and 8064 based devices.
  
  Say M here if you want to include support for the regulators on the
  Qualcomm RPM as a module. The module will be named
  "qcom_rpm-regulator".

REGULATOR_QCOM_RPMH
  This driver supports control of PMIC regulators via the RPMh hardware
  block found on Qualcomm Technologies Inc. SoCs.  RPMh regulator
  control allows for voting on regulator state between multiple
  processors within the SoC.

REGULATOR_QCOM_SMD_RPM
  If you say yes to this option, support will be included for the
  regulators exposed by the Resource Power Manager found in Qualcomm
  8974 based devices.
  
  Say M here if you want to include support for the regulators on the
  Qualcomm RPM as a module. The module will be named
  "qcom_smd-regulator".

REGULATOR_QCOM_SPMI
  If you say yes to this option, support will be included for the
  regulators found in Qualcomm SPMI PMICs.
  
  Say M here if you want to include support for the regulators on the
  Qualcomm SPMI PMICs as a module. The module will be named
  "qcom_spmi-regulator".

REGULATOR_QCOM_USB_VBUS
  If you say yes to this option, support will be included for the
  regulator used to enable the VBUS output.
  
  Say M here if you want to include support for enabling the VBUS output
  as a module. The module will be named "qcom_usb_vbus_regulator".

REGULATOR_RASPBERRYPI_TOUCHSCREEN_ATTINY
  This driver supports ATTINY regulator on the Raspberry Pi 7-inch
  touchscreen unit. The regulator is used to enable power to the
  TC358762, display and to control backlight.

REGULATOR_RC5T583
  Select this option to enable the power regulator of RICOH
  PMIC RC5T583.
  This driver supports the control of different power rails of device
  through regulator interface. The device supports multiple DCDC/LDO
  outputs which can be controlled by i2c communication.

REGULATOR_RK808
  Select this option to enable the power regulator of ROCKCHIP
  PMIC RK805,RK809&RK817,RK808 and RK818.
  This driver supports the control of different power rails of device
  through regulator interface. The device supports multiple DCDC/LDO
  outputs which can be controlled by i2c communication.

REGULATOR_RN5T618
  Say y here to support the regulators found on Ricoh RN5T567,
  RN5T618 or RC5T619 PMIC.

REGULATOR_ROHM
  No help

REGULATOR_RT4801
  This adds support for voltage regulators in Richtek RT4801 Display Bias IC.
  The device supports two regulators (DSVP/DSVN).

REGULATOR_RT5033
  This adds support for voltage and current regulators in Richtek
  RT5033 PMIC. The device supports multiple regulators like
  current source, LDO and Buck.

REGULATOR_RTMV20
  This driver adds support for the load switch current regulator on
  the Richtek RTMV20. It can support the load current up to 6A and
  integrate strobe/vsync/fsin signal to synchronize the IR camera.

REGULATOR_S2MPA01
  This driver controls Samsung S2MPA01 voltage output regulator
  via I2C bus. S2MPA01 has 10 Bucks and 26 LDO outputs.

REGULATOR_S2MPS11
  This driver supports a Samsung S2MPS11/13/14/15/S2MPU02 voltage
  output regulator via I2C bus. The chip is comprised of high efficient
  Buck converters including Dual-Phase Buck converter, Buck-Boost
  converter, various LDOs.

REGULATOR_S5M8767
  This driver supports a Samsung S5M8767A voltage output regulator
  via I2C bus. S5M8767A have 9 Bucks and 28 LDOs output and
  supports DVS mode with 8bits of output voltage control.

REGULATOR_SC2731
  This driver provides support for the voltage regulators on the
  SC2731 PMIC.

REGULATOR_SKY81452
  This driver supports Skyworks SKY81452 voltage output regulator
  via I2C bus. SKY81452 has one voltage linear regulator can be
  programmed from 4.5V to 20V.
  
  This driver can also be built as a module. If so, the module
  will be called sky81452-regulator.

REGULATOR_SLG51000
  Say y here to support for the Dialog Semiconductor SLG51000.
  The SLG51000 is seven compact and customizable low dropout
  regulators.

REGULATOR_STM32_BOOSTER
  This driver supports internal booster (3V3) embedded in some
  STMicroelectronics STM32 chips. It can be used to supply ADC analog
  input switches when vdda supply is below 2.7V.
  
  This driver can also be built as a module. If so, the module
  will be called stm32-booster.

REGULATOR_STM32_PWR
  This driver supports internal regulators (1V1, 1V8, 3V3) in the
  STMicroelectronics STM32 chips.

REGULATOR_STM32_VREFBUF
  This driver supports STMicroelectronics STM32 VREFBUF (voltage
  reference buffer) which can be used as voltage reference for
  internal ADCs, DACs and also for external components through
  dedicated Vref+ pin.
  
  This driver can also be built as a module. If so, the module
  will be called stm32-vrefbuf.

REGULATOR_STPMIC1
  This driver supports STMicroelectronics STPMIC1 PMIC voltage
  regulators and switches. The STPMIC1 regulators supply power to
  an application processor as well as to external system
  peripherals such as DDR, Flash memories and system devices.
  
  To compile this driver as a module, choose M here: the
  module will be called stpmic1_regulator.

REGULATOR_STW481X_VMMC
  This driver supports the internal VMMC regulator in the STw481x
  PMIC chips.

REGULATOR_SY8106A
  This driver supports SY8106A single output regulator.

REGULATOR_SY8824X
  This driver supports SY8824C single output regulator.

REGULATOR_SY8827N
  This driver supports SY8827N single output regulator.

REGULATOR_TI_ABB
  Select this option to support Texas Instruments' on-chip Adaptive Body
  Bias (ABB) LDO regulators. It is recommended that this option be
  enabled on required TI SoC. Certain Operating Performance Points
  on TI SoCs may be unstable without enabling this as it provides
  device specific optimized bias to allow/optimize functionality.

REGULATOR_TPS51632
  This driver supports TPS51632 voltage regulator chip.
  The TPS51632 is 3-2-1 Phase D-Cap+ Step Down Driverless Controller
  with Serial VID control and DVFS.
  The voltage output can be configure through I2C interface or PWM
  interface.

REGULATOR_TPS6105X
  This driver supports TPS61050/TPS61052 voltage regulator chips.
  It is a single boost converter primarily for white LEDs and
  audio amplifiers.

REGULATOR_TPS62360
  This driver supports TPS6236x voltage regulator chip. This
  regulator is meant for processor core supply. This chip is
  high-frequency synchronous step down dc-dc converter optimized
  for battery-powered portable applications.

REGULATOR_TPS65023
  This driver supports TPS65023 voltage regulator chips. TPS65023 provides
  three step-down converters and two general-purpose LDO voltage regulators.
  It supports TI's software based Class-2 SmartReflex implementation.

REGULATOR_TPS6507X
  This driver supports TPS6507X voltage regulator chips. TPS6507X provides
  three step-down converters and two general-purpose LDO voltage regulators.
  It supports TI's software based Class-2 SmartReflex implementation.

REGULATOR_TPS65086
  This driver provides support for the voltage regulators on
  TI TPS65086 PMICs.

REGULATOR_TPS65090
  This driver provides support for the voltage regulators on the
  TI TPS65090 PMIC.

REGULATOR_TPS65132
  This driver supports TPS65132 single inductor - dual output
  power supply specifically designed for display panels.

REGULATOR_TPS65217
  This driver supports TPS65217 voltage regulator chips. TPS65217
  provides three step-down converters and four general-purpose LDO
  voltage regulators. It supports software based voltage control
  for different voltage domains

REGULATOR_TPS65218
  This driver supports TPS65218 voltage regulator chips. TPS65218
  provides six step-down converters and one general-purpose LDO
  voltage regulators. It supports software based voltage control
  for different voltage domains

REGULATOR_TPS6524X
  This driver supports TPS6524X voltage regulator chips. TPS6524X
  provides three step-down converters and two general-purpose LDO
  voltage regulators.  This device is interfaced using a customized
  serial interface currently supported on the sequencer serial
  port controller.

REGULATOR_TPS6586X
  This driver supports TPS6586X voltage regulator chips.

REGULATOR_TPS65910
  This driver supports TPS65910/TPS65911 voltage regulator chips.

REGULATOR_TPS65912
  This driver supports TPS65912 voltage regulator chip.

REGULATOR_TPS80031
  TPS80031/ TPS80032 Fully Integrated Power Management with Power
  Path and Battery Charger. It has 5 configurable step-down
  converters, 11 general purpose LDOs, VBUS generator and digital
  output to control regulators.

REGULATOR_TWL4030
  This driver supports the voltage regulators provided by
  this family of companion chips.

REGULATOR_UNIPHIER
  Support for regulators implemented on Socionext UniPhier SoCs.

REGULATOR_USERSPACE_CONSUMER
  There are some classes of devices that are controlled entirely
  from user space. Userspace consumer driver provides ability to
  control power supplies for such devices.
  
  If unsure, say no.

REGULATOR_VCTRL
  This driver provides support for voltage regulators whose output
  voltage is controlled by the voltage of another regulator.

REGULATOR_VEXPRESS
  This driver provides support for voltage regulators available
  on the ARM Ltd's Versatile Express platform.

REGULATOR_VIRTUAL_CONSUMER
  This driver provides a virtual consumer for the voltage and
  current regulator API which provides sysfs controls for
  configuring the supplies requested.  This is mainly useful
  for test purposes.
  
  If unsure, say no.

REGULATOR_VQMMC_IPQ4019
  This driver provides support for the VQMMC LDO I/0
  voltage regulator of the IPQ4019 SD/EMMC controller.

REGULATOR_WM831X
  Support the voltage and current regulators of the WM831x series
  of PMIC devices.

REGULATOR_WM8350
  This driver provides support for the voltage and current regulators
  of the WM8350 AudioPlus PMIC.

REGULATOR_WM8400
  This driver provides support for the voltage regulators of the
  WM8400 AudioPlus PMIC.

REGULATOR_WM8994
  This driver provides support for the voltage regulators on the
  WM8994 CODEC.

REISERFS_CHECK
  If you set this to Y, then ReiserFS will perform every check it can
  possibly imagine of its internal consistency throughout its
  operation.  It will also go substantially slower.  More than once we
  have forgotten that this was on, and then gone despondent over the
  latest benchmarks.:-) Use of this option allows our team to go all
  out in checking for consistency when debugging without fear of its
  effect on end users.  If you are on the verge of sending in a bug
  report, say Y and you might get a useful error message.  Almost
  everyone should say N.

REISERFS_FS
  Stores not just filenames but the files themselves in a balanced
  tree.  Uses journalling.
  
  Balanced trees are more efficient than traditional file system
  architectural foundations.
  
  In general, ReiserFS is as fast as ext2, but is very efficient with
  large directories and small files.  Additional patches are needed
  for NFS and quotas, please see
  <https://reiser4.wiki.kernel.org/index.php/Main_Page> for links.
  
  It is more easily extended to have features currently found in
  database and keyword search systems than block allocation based file
  systems are.  The next version will be so extended, and will support
  plugins consistent with our motto ``It takes more than a license to
  make source code open.''
  
  Read <https://reiser4.wiki.kernel.org/index.php/Main_Page>
  to learn more about reiserfs.
  
  Sponsored by Threshold Networks, Emusic.com, and Bigstorage.com.
  
  If you like it, you can pay us to add new features to it that you
  need, buy a support contract, or pay us to port it to another OS.

REISERFS_FS_POSIX_ACL
  Posix Access Control Lists (ACLs) support permissions for users and
  groups beyond the owner/group/world scheme.
  
  If you don't know what Access Control Lists are, say N

REISERFS_FS_SECURITY
  Security labels support alternative access control models
  implemented by security modules like SELinux.  This option
  enables an extended attribute handler for file security
  labels in the ReiserFS filesystem.
  
  If you are not using a security module that requires using
  extended attributes for file security labels, say N.

REISERFS_FS_XATTR
  Extended attributes are name:value pairs associated with inodes by
  the kernel or by users (see the attr(5) manual page for details).
  
  If unsure, say N.

REISERFS_PROC_INFO
  Create under /proc/fs/reiserfs a hierarchy of files, displaying
  various ReiserFS statistics and internal data at the expense of
  making your kernel or module slightly larger (+8 KB). This also
  increases the amount of kernel memory required for each mount.
  Almost everyone but ReiserFS developers and people fine-tuning
  reiserfs or tracing problems should say N.

RELAY
  This option enables support for relay interface support in
  certain file systems (such as debugfs).
  It is designed to provide an efficient mechanism for tools and
  facilities to relay large amounts of data from kernel space to
  user space.
  
  If unsure, say N.

RELOCATABLE
  This builds a kernel image that retains relocation information
  so it can be loaded someplace besides the default 1MB.
  The relocations tend to make the kernel binary about 10% larger,
  but are discarded at runtime.
  
  One use is for the kexec on panic case where the recovery kernel
  must live at a different physical address than the primary
  kernel.
  
  Note: If CONFIG_RELOCATABLE=y, then the kernel runs from the address
  it has been loaded at and the compile time physical address
  (CONFIG_PHYSICAL_START) is used as the minimum location.

RELR
  Store the kernel's dynamic relocations in the RELR relocation packing
  format. Requires a compatible linker (LLD supports this feature), as
  well as compatible NM and OBJCOPY utilities (llvm-nm and llvm-objcopy
  are compatible).

REMOTEPROC
  Support for remote processors (such as DSP coprocessors). These
  are mainly used on embedded systems.

REMOTEPROC_CDEV
  Say y here to have a character device interface for the remoteproc
  framework. Userspace can boot/shutdown remote processors through
  this interface.
  
  It's safe to say N if you don't want to use this interface.

RENESAS_DMA
  No help

RENESAS_H8300H_INTC
  No help

RENESAS_H8S_INTC
  Enable support for the Renesas H8/300 Interrupt Controller, as found
  on Renesas H8S SoCs.

RENESAS_INTC_IRQPIN
  Enable support for the Renesas Interrupt Controller for external
  interrupt pins, as found on SH/R-Mobile and R-Car Gen1 SoCs.

RENESAS_IRQC
  Enable support for the Renesas Interrupt Controller for external
  devices, as found on R-Mobile APE6, R-Car Gen{2,3} and RZ/G{1,2} SoCs.

RENESAS_OSTM
  Enables the support for the Renesas OSTM.

RENESAS_PHY
  Supports the Renesas PHYs uPD60620 and uPD60620A.

RENESAS_RPCIF
  This supports Renesas R-Car Gen3 RPC-IF which provides either SPI
  host or HyperFlash. You'll have to select individual components
  under the corresponding menu.

RENESAS_RZA1_IRQC
  Enable support for the Renesas RZ/A1 Interrupt Controller, to use up
  to 8 external interrupts with configurable sense select.

RENESAS_RZAWDT
  This driver adds watchdog support for the integrated watchdogs in the
  Renesas RZ/A SoCs. These watchdogs can be used to reset a system.

RENESAS_USB_DMAC
  This driver supports the USB-DMA controller found in the Renesas
  SoCs.

RENESAS_WDT
  This driver adds watchdog support for the integrated watchdogs in the
  Renesas R-Car and other SH-Mobile SoCs (usually named RWDT or SWDT).

RESET_A10SR
  This option enables support for the external reset functions for
  peripheral PHYs on the Altera Arria10 System Resource Chip.

RESET_ATH79
  This enables the ATH79 reset controller driver that supports the
  AR71xx SoC reset controller.

RESET_ATTACK_MITIGATION
  Request that the firmware clear the contents of RAM after a reboot
  using the TCG Platform Reset Attack Mitigation specification. This
  protects against an attacker forcibly rebooting the system while it
  still contains secrets in RAM, booting another OS and extracting the
  secrets. This should only be enabled when userland is configured to
  clear the MemoryOverwriteRequest flag on clean shutdown after secrets
  have been evicted, since otherwise it will trigger even on clean
  reboots.

RESET_AXS10X
  This enables the reset controller driver for AXS10x.

RESET_BCM6345
  This enables the reset controller driver for BCM6345 SoCs.

RESET_BERLIN
  This enables the reset controller driver for Marvell Berlin SoCs.

RESET_BRCMSTB
  This enables the reset controller driver for Broadcom STB SoCs using
  a SUN_TOP_CTRL_SW_INIT style controller.

RESET_BRCMSTB_RESCAL
  This enables the RESCAL reset controller for SATA, PCIe0, or PCIe1 on
  BCM7216.

RESET_CONTROLLER
  Generic Reset Controller support.
  
  This framework is designed to abstract reset handling of devices
  via GPIOs or SoC-internal reset controller modules.
  
  If unsure, say no.

RESET_HISI
  Build reset controller driver for HiSilicon device chipsets.

RESET_HSDK
  This enables the reset controller driver for HSDK board.

RESET_IMX7
  This enables the reset controller driver for i.MX7 SoCs.

RESET_INTEL_GW
  This enables the reset controller driver for Intel Gateway SoCs.
  Say Y to control the reset signals provided by reset controller.
  Otherwise, say N.

RESET_LANTIQ
  This enables the reset controller driver for Lantiq / Intel XWAY SoCs.

RESET_LPC18XX
  This enables the reset controller driver for NXP LPC18xx/43xx SoCs.

RESET_MESON
  This enables the reset driver for Amlogic Meson SoCs.

RESET_MESON_AUDIO_ARB
  This enables the reset driver for Audio Memory Arbiter of
  Amlogic's A113 based SoCs

RESET_NPCM
  This enables the reset controller driver for Nuvoton NPCM
  BMC SoCs.

RESET_OXNAS
  No help

RESET_PISTACHIO
  This enables the reset driver for ImgTec Pistachio SoCs.

RESET_QCOM_AOSS
  This enables the AOSS (always on subsystem) reset driver
  for Qualcomm SDM845 SoCs. Say Y if you want to control
  reset signals provided by AOSS for Modem, Venus, ADSP,
  GPU, Camera, Wireless, Display subsystem. Otherwise, say N.

RESET_QCOM_PDC
  This enables the PDC (Power Domain Controller) reset driver
  for Qualcomm Technologies Inc SDM845 SoCs. Say Y if you want
  to control reset signals provided by PDC for Modem, Compute,
  Display, GPU, Debug, AOP, Sensors, Audio, SP and APPS.

RESET_RASPBERRYPI
  Raspberry Pi 4's co-processor controls some of the board's HW
  initialization process, but it's up to Linux to trigger it when
  relevant. This driver provides a reset controller capable of
  interfacing with RPi4's co-processor and model these firmware
  initialization routines as reset lines.

RESET_SCMI
  This driver provides support for reset signal/domains that are
  controlled by firmware that implements the SCMI interface.
  
  This driver uses SCMI Message Protocol to interact with the
  firmware controlling all the reset signals.

RESET_SIMPLE
  This enables a simple reset controller driver for reset lines that
  that can be asserted and deasserted by toggling bits in a contiguous,
  exclusive register space.
  
  Currently this driver supports:
   - Altera SoCFPGAs
   - ASPEED BMC SoCs
   - Bitmain BM1880 SoC
   - Realtek SoCs
   - RCC reset controller in STM32 MCUs
   - Allwinner SoCs
   - ZTE's zx2967 family

RESET_SOCFPGA
  This enables the reset driver for the SoCFPGA ARMv7 platforms. This
  driver gets initialized early during platform init calls.

RESET_STM32MP157
  This enables the RCC reset controller driver for STM32 MPUs.

RESET_SUNXI
  This enables the reset driver for Allwinner SoCs.

RESET_TEGRA_BPMP
  No help

RESET_TI_SCI
  This enables the reset driver support over TI System Control Interface
  available on some new TI's SoCs. If you wish to use reset resources
  managed by the TI System Controller, say Y here. Otherwise, say N.

RESET_TI_SYSCON
  This enables the reset driver support for TI devices with
  memory-mapped reset registers as part of a syscon device node. If
  you wish to use the reset framework for such memory-mapped devices,
  say Y here. Otherwise, say N.

RESET_UNIPHIER
  Support for reset controllers on UniPhier SoCs.
  Say Y if you want to control reset signals provided by System Control
  block, Media I/O block, Peripheral Block.

RESET_UNIPHIER_GLUE
  Support for peripheral core reset included in its own glue layer
  on UniPhier SoCs. Say Y if you want to control reset signals
  provided by the glue layer.

RESET_ZYNQ
  This enables the reset controller driver for Xilinx Zynq SoCs.

RESOURCE_KUNIT_TEST
  This builds the resource API unit test.
  Tests the logic of API provided by resource.c and ioport.h.
  For more information on KUnit and unit tests in general please refer
  to the KUnit documentation in Documentation/dev-tools/kunit/.
  
  If unsure, say N.

RETPOLINE
  Compile kernel with the retpoline compiler options to guard against
  kernel-to-user data leaks by avoiding speculative indirect
  branches. Requires a compiler with -mindirect-branch=thunk-extern
  support for full protection. The kernel may run slower.

RETU_WATCHDOG
  Retu watchdog driver for Nokia Internet Tablets (770, N800,
  N810). At least on N800 the watchdog cannot be disabled, so
  this driver is essential and you should enable it.
  
  To compile this driver as a module, choose M here: the
  module will be called retu_wdt.

RFD77402
  Say Y to build a driver for the RFD77402 Time-of-Flight (distance)
  sensor module with I2C interface.
  
  To compile this driver as a module, choose M here: the
  module will be called rfd77402.

RFD_FTL
  This provides support for the flash translation layer known
  as the Resident Flash Disk (RFD), as used by the Embedded BIOS
  of General Software. There is a blurb at:
  
        http://www.gensw.com/pages/prod/bios/rfd.htm

RFKILL
  Say Y here if you want to have control over RF switches
  found on many WiFi and Bluetooth cards.
  
  To compile this driver as a module, choose M here: the
  module will be called rfkill.

RFKILL_GPIO
  If you say yes here you get support of a generic gpio RFKILL
  driver.

RFKILL_INPUT
  No help

RFKILL_LEDS
  No help

RFS_ACCEL
  No help

RING_BUFFER
  No help

RING_BUFFER_ALLOW_SWAP
  Allow the use of ring_buffer_swap_cpu.
  Adds a very slight overhead to tracing when enabled.

RING_BUFFER_BENCHMARK
  This option creates a test to stress the ring buffer and benchmark it.
  It creates its own ring buffer such that it will not interfere with
  any other users of the ring buffer (such as ftrace). It then creates
  a producer and consumer that will run for 10 seconds and sleep for
  10 seconds. Each interval it will print out the number of events
  it recorded and give a rough estimate of how long each iteration took.
  
  It does not disable interrupts or raise its priority, so it may be
  affected by processes that are running.
  
  If unsure, say N.

RING_BUFFER_RECORD_RECURSION
  The ring buffer has its own internal recursion. Although when
  recursion happens it wont cause harm because of the protection,
  but it does cause an unwanted overhead. Enabling this option will
  place where recursion was detected into the ftrace "recursed_functions"
  file.
  
  This will add more overhead to cases that have recursion.

RING_BUFFER_STARTUP_TEST
  Run a simple self test on the ring buffer on boot up. Late in the
  kernel boot sequence, the test will start that kicks off
  a thread per cpu. Each thread will write various size events
  into the ring buffer. Another thread is created to send IPIs
  to each of the threads, where the IPI handler will also write
  to the ring buffer, to test/stress the nesting ability.
  If any anomalies are discovered, a warning will be displayed
  and all ring buffers will be disabled.
  
  The test runs for 10 seconds. This will slow your boot time
  by at least 10 more seconds.
  
  At the end of the test, statics and more checks are done.
  It will output the stats of each per cpu buffer. What
  was written, the sizes, what was read, what was lost, and
  other similar details.
  
  If unsure, say N

RING_BUFFER_VALIDATE_TIME_DELTAS
  This will audit the time stamps on the ring buffer sub
  buffer to make sure that all the time deltas for the
  events on a sub buffer matches the current time stamp.
  This audit is performed for every event that is not
  interrupted, or interrupting another event. A check
  is also made when traversing sub buffers to make sure
  that all the deltas on the previous sub buffer do not
  add up to be greater than the current time stamp.
  
  NOTE: This adds significant overhead to recording of events,
  and should only be used to test the logic of the ring buffer.
  Do not use it on production systems.
  
  Only say Y if you understand what this does, and you
  still want it enabled. Otherwise say N

RIONET
  No help

RIONET_RX_SIZE
  No help

RIONET_TX_SIZE
  No help

RISCV_INTC
  This enables support for the per-HART local interrupt controller
  found in standard RISC-V systems.  The per-HART local interrupt
  controller handles timer interrupts, software interrupts, and
  hardware interrupts. Without a per-HART local interrupt controller,
  a RISC-V system will be unable to handle any interrupts.
  
  If you don't know what to do here, say Y.

RISCV_TIMER
  This enables the per-hart timer built into all RISC-V systems, which
  is accessed via both the SBI and the rdcycle instruction.  This is
  required for all RISC-V systems.

RMI4_2D_SENSOR
  No help

RMI4_CORE
  Say Y here if you want to support the Synaptics RMI4 bus.  This is
  required for all RMI4 device support.
  
  If unsure, say Y.

RMI4_F03
  Say Y here if you want to add support for RMI4 function 03.
  
  Function 03 provides PS2 guest support for RMI4 devices. This
  includes support for TrackPoints on TouchPads.

RMI4_F03_SERIO
  No help

RMI4_F11
  Say Y here if you want to add support for RMI4 function 11.
  
  Function 11 provides 2D multifinger pointing for touchscreens and
  touchpads. For sensors that support relative pointing, F11 also
  provides mouse input.

RMI4_F12
  Say Y here if you want to add support for RMI4 function 12.
  
  Function 12 provides 2D multifinger pointing for touchscreens and
  touchpads. For sensors that support relative pointing, F12 also
  provides mouse input.

RMI4_F30
  Say Y here if you want to add support for RMI4 function 30.
  
  Function 30 provides GPIO and LED support for RMI4 devices. This
  includes support for buttons on TouchPads and ClickPads.

RMI4_F34
  Say Y here if you want to add support for RMI4 function 34.
  
  Function 34 provides support for upgrading the firmware on the RMI4
  device via the firmware loader interface. This is triggered using a
  sysfs attribute.

RMI4_F3A
  Say Y here if you want to add support for RMI4 function 3A.
  
  Function 3A provides GPIO support for RMI4 devices. This includes
  support for buttons on TouchPads and ClickPads.

RMI4_F54
  Say Y here if you want to add support for RMI4 function 54
  
  Function 54 provides access to various diagnostic features in certain
  RMI4 touch sensors.

RMI4_F55
  Say Y here if you want to add support for RMI4 function 55
  
  Function 55 provides access to the RMI4 touch sensor tuning
  mechanism.

RMI4_I2C
  Say Y here if you want to support RMI4 devices connected to an I2C
  bus.
  
  If unsure, say Y.

RMI4_SMB
  Say Y here if you want to support RMI4 devices connected to an SMB
  bus.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the module will be
  called rmi_smbus.

RMI4_SPI
  Say Y here if you want to support RMI4 devices connected to a SPI
  bus.
  
  If unsure, say N.

RMNET
  If you select this, you will enable the RMNET module which is used
  for handling data in the multiplexing and aggregation protocol (MAP)
  format in the embedded data path. RMNET devices can be attached to
  any IP mode physical device.

RN5T618_ADC
  Say yes here to build support for the integrated ADC inside the
  RN5T618/619 series PMICs:
  
  This driver can also be built as a module. If so, the module
  will be called rn5t618-adc.

RN5T618_POWER
  Say Y here to have support for RN5T618 PMIC family fuel gauge and charger.
  This driver can also be built as a module. If so, the module will be
  called rn5t618_power.

RN5T618_WATCHDOG
  If you say yes here you get support for watchdog on the Ricoh
  RN5T618 PMIC.
  
  This driver can also be built as a module.  If so, the module
  will be called rn5t618_wdt.

ROADRUNNER
  Say Y here if this is your PCI HIPPI network card.
  
  To compile this driver as a module, choose M here: the module
  will be called rrunner.  If unsure, say N.

ROADRUNNER_LARGE_RINGS
  If you say Y here, the RoadRunner driver will preallocate up to 2 MB
  of additional memory to allow for fastest operation, both for
  transmitting and receiving. This memory cannot be used by any other
  kernel code or by user space programs. Say Y here only if you have
  the memory.

ROCKCHIP_ANALOGIX_DP
  This selects support for Rockchip SoC specific extensions
  for the Analogix Core DP driver. If you want to enable DP
  on RK3288 or RK3399 based SoC, you should select this option.

ROCKCHIP_CDN_DP
  This selects support for Rockchip SoC specific extensions
  for the cdn DP driver. If you want to enable Dp on
  RK3399 based SoC, you should select this
  option.

ROCKCHIP_DW_HDMI
  This selects support for Rockchip SoC specific extensions
  for the Synopsys DesignWare HDMI driver. If you want to
  enable HDMI on RK3288 or RK3399 based SoC, you should select
  this option.

ROCKCHIP_DW_MIPI_DSI
  This selects support for Rockchip SoC specific extensions
  for the Synopsys DesignWare HDMI driver. If you want to
  enable MIPI DSI on RK3288 or RK3399 based SoC, you should
  select this option.

ROCKCHIP_EFUSE
  This is a simple drive to dump specified values of Rockchip SoC
  from eFuse, such as cpu-leakage.
  
  This driver can also be built as a module. If so, the module
  will be called nvmem_rockchip_efuse.

ROCKCHIP_GRF
  The General Register Files are a central component providing
  special additional settings registers for a lot of soc-components.
  In a lot of cases there also need to be default settings initialized
  to make some of them conform to expectations of the kernel.

ROCKCHIP_INNO_HDMI
  This selects support for Rockchip SoC specific extensions
  for the Innosilicon HDMI driver. If you want to enable
  HDMI on RK3036 based SoC, you should select this option.

ROCKCHIP_IODOMAIN
  Say y here to enable support io domains on Rockchip SoCs. It is
  necessary for the io domain setting of the SoC to match the
  voltage supplied by the regulators.

ROCKCHIP_IOMMU
  Support for IOMMUs found on Rockchip rk32xx SOCs.
  These IOMMUs allow virtualization of the address space used by most
  cores within the multimedia subsystem.
  Say Y here if you are using a Rockchip SoC that includes an IOMMU
  device.

ROCKCHIP_LVDS
  Choose this option to enable support for Rockchip LVDS controllers.
  Rockchip rk3288 SoC has LVDS TX Controller can be used, and it
  support LVDS, rgb, dual LVDS output mode. say Y to enable its
  driver.

ROCKCHIP_MBOX
  This driver provides support for inter-processor communication
  between CPU cores and MCU processor on Some Rockchip SOCs.
  Please check it that the Soc you use have Mailbox hardware.
  Say Y here if you want to use the Rockchip Mailbox support.

ROCKCHIP_OTP
  This is a simple drive to dump specified values of Rockchip SoC
  from otp, such as cpu-leakage.
  
  This driver can also be built as a module. If so, the module
  will be called nvmem_rockchip_otp.

ROCKCHIP_PHY
  Currently supports the integrated Ethernet PHY.

ROCKCHIP_PM_DOMAINS
  Say y here to enable power domain support.
  In order to meet high performance and low power requirements, a power
  management unit is designed or saving power when RK3288 in low power
  mode. The RK3288 PMU is dedicated for managing the power of the whole chip.
  
  If unsure, say N.

ROCKCHIP_RGB
  Choose this option to enable support for Rockchip RGB output.
  Some Rockchip CRTCs, like rv1108, can directly output parallel
  and serial RGB format to panel or connect to a conversion chip.
  say Y to enable its driver.

ROCKCHIP_RK3066_HDMI
  This selects support for Rockchip SoC specific extensions
  for the RK3066 HDMI driver. If you want to enable
  HDMI on RK3066 based SoC, you should select this option.

ROCKCHIP_SARADC
  Say yes here to build support for the SARADC found in SoCs from
  Rockchip.
  
  To compile this driver as a module, choose M here: the
  module will be called rockchip_saradc.

ROCKCHIP_THERMAL
  Rockchip thermal driver provides support for Temperature sensor
  ADC (TS-ADC) found on Rockchip SoCs. It supports one critical
  trip point. Cpufreq is used as the cooling device and will throttle
  CPUs when the Temperature crosses the passive trip point.

ROCKCHIP_TIMER
  Enables the support for the Rockchip timer driver.

ROCKER
  This driver supports Rocker switch device.
  
  To compile this driver as a module, choose M here: the
  module will be called rocker.

ROCKETPORT
  This driver supports Comtrol RocketPort and RocketModem PCI boards.
  These boards provide 2, 4, 8, 16, or 32 high-speed serial ports or
  modems.  For information about the RocketPort/RocketModem  boards
  and this driver read <file:Documentation/driver-api/serial/rocket.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called rocket.
  
  If you want to compile this driver into the kernel, say Y here.  If
  you don't have a Comtrol RocketPort/RocketModem card installed, say N.

ROMFS_BACKED_BY_BLOCK
  This permits ROMFS to use block devices buffered through the page
  cache as the medium from which to retrieve data.  It does not allow
  direct mapping of the medium.
  
  If unsure, answer Y.

ROMFS_BACKED_BY_BOTH
  No help

ROMFS_BACKED_BY_MTD
  This permits ROMFS to use MTD based devices directly, without the
  intercession of the block layer (which may have been disabled).  It
  also allows direct mapping of MTD devices through romfs files under
  NOMMU conditions if the underlying device is directly addressable by
  the CPU.
  
  If unsure, answer Y.

ROMFS_FS
  This is a very small read-only file system mainly intended for
  initial ram disks of installation disks, but it could be used for
  other read-only media as well.  Read
  <file:Documentation/filesystems/romfs.rst> for details.
  
  To compile this file system support as a module, choose M here: the
  module will be called romfs.  Note that the file system of your
  root partition (the one containing the directory /) cannot be a
  module.
  
  If you don't know whether you need it, then you don't need it:
  answer N.

ROMFS_ON_BLOCK
  No help

ROMFS_ON_MTD
  No help

ROOT_NFS
  If you want your system to mount its root file system via NFS,
  choose Y here.  This is common practice for managing systems
  without local permanent storage.  For details, read
  <file:Documentation/admin-guide/nfs/nfsroot.rst>.
  
  Most people say N here.

ROSE
  The Packet Layer Protocol (PLP) is a way to route packets over X.25
  connections in general and amateur radio AX.25 connections in
  particular, essentially an alternative to NET/ROM.
  
  A comprehensive listing of all the software for Linux amateur radio
  users as well as information about how to configure an AX.25 port is
  contained in the Linux Ham Wiki, available from
  <http://www.linux-ax25.org>.  You also might want to check out the
  file <file:Documentation/networking/ax25.rst>. More information about
  digital amateur radio in general is on the WWW at
  <https://www.tapr.org/>.
  
  To compile this driver as a module, choose M here: the
  module will be called rose.

RPCIF_HYPERBUS
  This option includes Renesas RPC-IF HyperBus support.

RPCSEC_GSS_KRB5
  Choose Y here to enable Secure RPC using the Kerberos version 5
  GSS-API mechanism (RFC 1964).
  
  Secure RPC calls with Kerberos require an auxiliary user-space
  daemon which may be found in the Linux nfs-utils package
  available from http://linux-nfs.org/.  In addition, user-space
  Kerberos support should be installed.
  
  If unsure, say Y.

RPMSG
  No help

RPMSG_CHAR
  Say Y here to export rpmsg endpoints as device files, usually found
  in /dev. They make it possible for user-space programs to send and
  receive rpmsg packets.

RPMSG_MTK_SCP
  Say y here to enable support providing communication channels to
  remote processors in MediaTek platforms.
  This use IPI and IPC to communicate with remote processors.

RPMSG_NS
  Say Y here to enable the support of the name service announcement
  channel that probes the associated RPMsg device on remote endpoint
  service announcement.

RPMSG_QCOM_GLINK
  No help

RPMSG_QCOM_GLINK_RPM
  Say y here to enable support for the GLINK RPM communication driver,
  which serves as a channel for communication with the RPM in GLINK
  enabled systems.

RPMSG_QCOM_GLINK_SMEM
  Say y here to enable support for the GLINK SMEM communication driver,
  which provides support for using the GLINK communication protocol
  over SMEM.

RPMSG_QCOM_SMD
  Say y here to enable support for the Qualcomm Shared Memory Driver
  providing communication channels to remote processors in Qualcomm
  platforms.

RPMSG_VIRTIO
  No help

RPR0521
  Say Y here if you want to build support for ROHM's RPR0521
  ambient light and proximity sensor device.
  
  To compile this driver as a module, choose M here:
  the module will be called rpr0521.

RPS
  No help

RS780E_ACPI
  Loongson RS780E PCH ACPI Controller driver.

RSEQ
  Enable the restartable sequences system call. It provides a
  user-space cache for the current CPU number value, which
  speeds up getting the current CPU number from user-space,
  as well as an ABI to speed up user-space operations on
  per-CPU data.
  
  If unsure, say Y.

RSI_91X
  This option enabes support for RSI 1x1 devices.
  Select M (recommended), if you have a RSI 1x1 wireless module.

RSI_COEX
  This option enables the WLAN BT coex support in rsi drivers.
  Select M (recommended), if you have want to use this feature
  and you have RS9113 module.

RSI_DEBUGFS
  Say Y, if you would like to enable debug support. This option
  creates debugfs entries

RSI_SDIO
  This option enables the SDIO bus support in rsi drivers.
  Select M (recommended), if you have a RSI 1x1 wireless module.

RSI_USB
  This option enables the USB bus support in rsi drivers.
  Select M (recommended), if you have a RSI 1x1 wireless module.

RST_RCAR
  No help

RT2400PCI
  This adds support for rt2400 wireless chipset family.
  Supported chips: RT2460.
  
  When compiled as a module, this driver will be called rt2400pci.

RT2500PCI
  This adds support for rt2500 wireless chipset family.
  Supported chips: RT2560.
  
  When compiled as a module, this driver will be called rt2500pci.

RT2500USB
  This adds support for rt2500 wireless chipset family.
  Supported chips: RT2571 & RT2572.
  
  When compiled as a module, this driver will be called rt2500usb.

RT2800PCI
  This adds support for rt27xx/rt28xx/rt30xx wireless chipset family.
  Supported chips: RT2760, RT2790, RT2860, RT2880, RT2890, RT3052,
                   RT3090, RT3091 & RT3092
  
  When compiled as a module, this driver will be called "rt2800pci.ko".

RT2800PCI_RT3290
  This adds support for rt3290 wireless chipset family to the
  rt2800pci driver.
  Supported chips: RT3290

RT2800PCI_RT33XX
  This adds support for rt33xx wireless chipset family to the
  rt2800pci driver.
  Supported chips: RT3390

RT2800PCI_RT35XX
  This adds support for rt35xx wireless chipset family to the
  rt2800pci driver.
  Supported chips: RT3060, RT3062, RT3562, RT3592

RT2800PCI_RT53XX
  This adds support for rt53xx wireless chipset family to the
  rt2800pci driver.
  Supported chips: RT5390

RT2800SOC
  This adds support for Ralink WiSoC devices.
  Supported chips: RT2880, RT3050, RT3052, RT3350, RT3352.
  
  When compiled as a module, this driver will be called rt2800soc.

RT2800USB
  This adds support for rt27xx/rt28xx/rt30xx wireless chipset family.
  Supported chips: RT2770, RT2870 & RT3070, RT3071 & RT3072
  
  When compiled as a module, this driver will be called "rt2800usb.ko".

RT2800USB_RT33XX
  This adds support for rt33xx wireless chipset family to the
  rt2800usb driver.
  Supported chips: RT3370

RT2800USB_RT3573
  This enables support for RT3573 chipset based wireless USB devices
  in the rt2800usb driver.

RT2800USB_RT35XX
  This adds support for rt35xx wireless chipset family to the
  rt2800usb driver.
  Supported chips: RT3572

RT2800USB_RT53XX
  This adds support for rt53xx wireless chipset family to the
  rt2800usb driver.
  Supported chips: RT5370

RT2800USB_RT55XX
  This adds support for rt55xx wireless chipset family to the
  rt2800usb driver.
  Supported chips: RT5572

RT2800USB_UNKNOWN
  This adds support for rt2800usb devices that are known to
  have a rt28xx family compatible chipset, but for which the exact
  chipset is unknown.
  
  Support status for these devices is unknown, and enabling these
  devices may or may not work.

RT2800_LIB
  No help

RT2800_LIB_MMIO
  No help

RT2X00
  This will enable the support for the Ralink drivers,
  developed in the rt2x00 project <http://rt2x00.serialmonkey.com>.
  
  These drivers make use of the mac80211 stack.
  
  When building one of the individual drivers, the rt2x00 library
  will also be created. That library (when the driver is built as
  a module) will be called rt2x00lib.
  
  Additionally PCI and USB libraries will also be build depending
  on the types of drivers being selected, these libraries will be
  called rt2x00pci and rt2x00usb.

RT2X00_DEBUG
  Enable debugging output for all rt2x00 modules

RT2X00_LIB
  No help

RT2X00_LIB_CRYPTO
  No help

RT2X00_LIB_DEBUGFS
  Enable creation of debugfs files for the rt2x00 drivers.
  These debugfs files support both reading and writing of the
  most important register types of the rt2x00 hardware.

RT2X00_LIB_FIRMWARE
  No help

RT2X00_LIB_LEDS
  No help

RT2X00_LIB_MMIO
  No help

RT2X00_LIB_PCI
  No help

RT2X00_LIB_SOC
  No help

RT2X00_LIB_USB
  No help

RT61PCI
  This adds support for rt2501 wireless chipset family.
  Supported chips: RT2561, RT2561S & RT2661.
  
  When compiled as a module, this driver will be called rt61pci.

RT73USB
  This adds support for rt2501 wireless chipset family.
  Supported chips: RT2571W, RT2573 & RT2671.
  
  When compiled as a module, this driver will be called rt73usb.

RTC_CLASS
  Generic RTC class support. If you say yes here, you will
  be allowed to plug one or more RTCs to your system. You will
  probably want to enable one or more of the interfaces below.

RTC_DEBUG
  Say yes here to enable debugging support in the RTC framework
  and individual RTC drivers.

RTC_DRV_88PM80X
  If you say yes here you get support for RTC function in Marvell
  88PM80x chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-88pm80x.

RTC_DRV_88PM860X
  If you say yes here you get support for RTC function in Marvell
  88PM860x chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-88pm860x.

RTC_DRV_AB3100
  Select this to enable the ST-Ericsson AB3100 Mixed Signal IC RTC
  support. This chip contains a battery- and capacitor-backed RTC.

RTC_DRV_AB8500
  Select this to enable the ST-Ericsson AB8500 power management IC RTC
  support. This chip contains a battery- and capacitor-backed RTC.

RTC_DRV_ABB5ZES3
  If you say yes here you get support for the Abracon
  AB-RTCMC-32.768kHz-B5ZE-S3 I2C RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ab-b5ze-s3.

RTC_DRV_ABEOZ9
  If you say yes here you get support for the Abracon
  AB-RTCMC-32.768kHz-EOA9 I2C RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ab-e0z9.

RTC_DRV_ABX80X
  If you say yes here you get support for Abracon AB080X and AB180X
  families of ultra-low-power  battery- and capacitor-backed real-time
  clock chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-abx80x.

RTC_DRV_AC100
  If you say yes here you get support for the real-time clock found
  in X-Powers AC100 family peripheral ICs.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ac100.

RTC_DRV_ALPHA
  Direct support for the real-time clock found on every Alpha
  system, specifically MC146818 compatibles.  If in doubt, say Y.

RTC_DRV_ARMADA38X
  If you say yes here you will get support for the in-chip RTC
  that can be found in the Armada 38x Marvell's SoC device
  
  This driver can also be built as a module. If so, the module
  will be called armada38x-rtc.

RTC_DRV_AS3722
  If you say yes here you get support for the RTC of ams AS3722 PMIC
  chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-as3722.

RTC_DRV_ASM9260
  If you say yes here you get support for the RTC on the
  Alphascale asm9260 SoC.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-asm9260.

RTC_DRV_ASPEED
  If you say yes here you get support for the ASPEED BMC SoC real time
  clocks.
  
  This driver can also be built as a module, if so, the module
  will be called "rtc-aspeed".

RTC_DRV_AT91RM9200
  Driver for the internal RTC (Realtime Clock) module found on
  Atmel AT91RM9200's and some  AT91SAM9 chips. On AT91SAM9 chips
  this is powered by the backup power supply.

RTC_DRV_AT91SAM9
  Some AT91SAM9 SoCs provide an RTT (Real Time Timer) block which
  can be used as an RTC thanks to the backup power supply (e.g. a
  small coin cell battery) which keeps this block and the GPBR
  (General Purpose Backup Registers) block powered when the device
  is shutdown.
  Some AT91SAM9 SoCs provide a real RTC block, on those ones you'd
  probably want to use the real RTC block instead of the "RTT as an
  RTC" driver.

RTC_DRV_AU1XXX
  This is a driver for the Au1xxx on-chip Counter0 (Time-Of-Year
  counter) to be used as a RTC.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-au1xxx.

RTC_DRV_BD70528
  If you say Y here you will get support for the RTC
  block on ROHM BD70528 and BD71828 Power Management IC.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-bd70528.

RTC_DRV_BQ32K
  If you say Y here you will get support for the TI
  BQ32000 I2C RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-bq32k.

RTC_DRV_BQ4802
  If you say Y here you will get support for the TI
  BQ4802 RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-bq4802.

RTC_DRV_BRCMSTB
  If you say yes here you get support for the wake-timer found on
  Broadcom STB SoCs (BCM7xxx).
  
  This driver can also be built as a module. If so, the module will
  be called rtc-brcmstb-waketimer.

RTC_DRV_CADENCE
  If you say Y here you will get access to Cadence RTC IP
  found on certain SOCs.
  
  To compile this driver as a module, choose M here: the
  module will be called rtc-cadence.

RTC_DRV_CMOS
  Say "yes" here to get direct support for the real time clock
  found in every PC or ACPI-based system, and some other boards.
  Specifically the original MC146818, compatibles like those in
  PC south bridges, the DS12887 or M48T86, some multifunction
  or LPC bus chips, and so on.
  
  Your system will need to define the platform device used by
  this driver, otherwise it won't be accessible. This means
  you can safely enable this driver if you don't know whether
  or not your board has this kind of hardware.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-cmos.

RTC_DRV_COH901331
  If you say Y here you will get access to ST-Ericsson
  COH 901 331 RTC clock found in some ST-Ericsson Mobile
  Platforms.
  
  This driver can also be built as a module. If so, the module
  will be called "rtc-coh901331".

RTC_DRV_CPCAP
  Say y here for CPCAP rtc found on some Motorola phones
  and tablets such as Droid 4.

RTC_DRV_CROS_EC
  If you say yes here you will get support for the
  Chrome OS Embedded Controller's RTC.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-cros-ec.

RTC_DRV_DA9052
  Say y here to support the RTC driver for Dialog Semiconductor
  DA9052-BC and DA9053-AA/Bx PMICs.

RTC_DRV_DA9055
  If you say yes here you will get support for the
  RTC of the Dialog DA9055 PMIC.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-da9055

RTC_DRV_DA9063
  If you say yes here you will get support for the RTC subsystem
  for the Dialog Semiconductor PMIC chips DA9063 and DA9062.
  
  This driver can also be built as a module. If so, the module
  will be called "rtc-da9063".

RTC_DRV_DAVINCI
  If you say yes here you get support for the RTC on the
  DaVinci platforms (DM365).
  
  This driver can also be built as a module. If so, the module
  will be called rtc-davinci.

RTC_DRV_DIGICOLOR
  If you say yes here you get support for the RTC on Conexant
  Digicolor platforms. This currently includes the CX92755 SoC.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-digicolor.

RTC_DRV_DM355EVM
  Supports the RTC firmware in the MSP430 on the DM355 EVM.

RTC_DRV_DS1216
  If you say yes here you get support for the Dallas DS1216 RTC chips.

RTC_DRV_DS1286
  If you say yes here you get support for the Dallas DS1286 RTC chips.

RTC_DRV_DS1302
  If you say yes here you get support for the Dallas DS1302 RTC chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ds1302.

RTC_DRV_DS1305
  Select this driver to get support for the Dallas/Maxim DS1305
  and DS1306 real time clock chips. These support a trickle
  charger, alarms, and NVRAM in addition to the clock.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ds1305.

RTC_DRV_DS1307
  If you say yes here you get support for various compatible RTC
  chips (often with battery backup) connected with I2C. This driver
  should handle DS1307, DS1337, DS1338, DS1339, DS1340, DS1341,
  ST M41T00, EPSON RX-8025, Intersil ISL12057 and probably other chips.
  In some cases the RTC must already have been initialized (by
  manufacturing or a bootloader).
  
  The first seven registers on these chips hold an RTC, and other
  registers may add features such as NVRAM, a trickle charger for
  the RTC/NVRAM backup power, and alarms. NVRAM is visible in
  sysfs, but other chip features may not be available.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ds1307.

RTC_DRV_DS1307_CENTURY
  The DS1307 driver suffered from a bug where it was enabling the
  century bit inconditionnally but never used it when reading the time.
  It made the driver unable to support dates beyond 2099.
  Setting this option will add proper support for the century bit but if
  the time was previously set using a kernel predating this option,
  reading the date will return a date in the next century.
  To solve that, you could boot a kernel without this option set, set
  the RTC date and then boot a kernel with this option set.

RTC_DRV_DS1343
  If you say yes here you get support for the
  Dallas/Maxim DS1343 and DS1344 real time clock chips.
  Support for trickle charger, alarm is provided.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ds1343.

RTC_DRV_DS1347
  If you say yes here you get support for the
  Dallas/Maxim DS1347 chips.
  
  This driver only supports the RTC feature, and not other chip
  features such as alarms.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ds1347.

RTC_DRV_DS1374
  If you say yes here you get support for Dallas Semiconductor
  DS1374 real-time clock chips. If an interrupt is associated
  with the device, the alarm functionality is supported.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ds1374.

RTC_DRV_DS1374_WDT
  If you say Y here you will get support for the
  watchdog timer in the Dallas Semiconductor DS1374
  real-time clock chips.

RTC_DRV_DS1390
  If you say yes here you get support for the
  Dallas/Maxim DS1390/93/94 chips.
  
  This driver supports the RTC feature and trickle charging but not
  other chip features such as alarms.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ds1390.

RTC_DRV_DS1511
  If you say yes here you get support for the
  Dallas DS1511 timekeeping/watchdog chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ds1511.

RTC_DRV_DS1553
  If you say yes here you get support for the
  Maxim/Dallas DS1553 timekeeping chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ds1553.

RTC_DRV_DS1672
  If you say yes here you get support for the
  Dallas/Maxim DS1672 timekeeping chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ds1672.

RTC_DRV_DS1685
  This enables support for the Dallas/Maxim DS1685/DS1687 real time
  clock chip.
  
  This chip is commonly found in SGI O2 (IP32) and SGI Octane (IP30)
  systems, as well as EPPC-405-UC modules by electronic system design
  GmbH.

RTC_DRV_DS1685_FAMILY
  If you say yes here you get support for the Dallas/Maxim DS1685
  family of real time chips.  This family includes the DS1685/DS1687,
  DS1689/DS1693, DS17285/DS17287, DS17485/DS17487, and
  DS17885/DS17887 chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ds1685.

RTC_DRV_DS1689
  This enables support for the Dallas/Maxim DS1689/DS1693 real time
  clock chip.
  
  This is an older RTC chip, supplanted by the DS1685/DS1687 above,
  which supports a few minor features such as Vcc, Vbat, and Power
  Cycle counters, plus a customer-specific, 8-byte ROM/Serial number.
  
  It also works for the even older DS1688/DS1691 RTC chips, which are
  virtually the same and carry the same model number.  Both chips
  have 114 bytes of user NVRAM.

RTC_DRV_DS17285
  This enables support for the Dallas/Maxim DS17285/DS17287 real time
  clock chip.
  
  This chip features 2kb of extended NV-SRAM.  It may possibly be
  found in some SGI O2 systems (rare).

RTC_DRV_DS1742
  If you say yes here you get support for the
  Maxim/Dallas DS1742/1743 timekeeping chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ds1742.

RTC_DRV_DS17485
  This enables support for the Dallas/Maxim DS17485/DS17487 real time
  clock chip.
  
  This chip features 4kb of extended NV-SRAM.

RTC_DRV_DS17885
  This enables support for the Dallas/Maxim DS17885/DS17887 real time
  clock chip.
  
  This chip features 8kb of extended NV-SRAM.

RTC_DRV_DS2404
  If you say yes here you get support for the
  Dallas DS2404 RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ds2404.

RTC_DRV_DS3232
  If you say yes here you get support for Dallas Semiconductor
  DS3232 and DS3234 real-time clock chips. If an interrupt is associated
  with the device, the alarm functionality is supported.
  
  This driver can also be built as a module.  If so, the module
  will be called rtc-ds3232.

RTC_DRV_DS3232_HWMON
  Say Y here if you want to expose temperature sensor data on
  rtc-ds3232

RTC_DRV_EFI
  If you say yes here you will get support for the EFI
  Real Time Clock.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-efi.

RTC_DRV_EM3027
  If you say yes here you get support for the EM
  Microelectronic EM3027 RTC chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-em3027.

RTC_DRV_EP93XX
  If you say yes here you get support for the
  RTC embedded in the Cirrus Logic EP93XX processors.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ep93xx.

RTC_DRV_FM3130
  If you say Y here you will get support for the
  Ramtron FM3130 RTC chips.
  Ramtron FM3130 is a chip with two separate devices inside,
  RTC clock and FRAM. This driver provides only RTC functionality.
  
  This driver can also be built as a module. If so the module
  will be called rtc-fm3130.

RTC_DRV_FSL_FTM_ALARM
  For the FlexTimer in LS1012A, LS1021A, LS1028A, LS1043A, LS1046A,
  LS1088A, LS208xA, we can use FTM as the wakeup source.
  
  Say y here to enable FTM alarm support. The FTM alarm provides
  alarm functions for wakeup system from deep sleep.
  
  This driver can also be built as a module, if so, the module
  will be called "rtc-fsl-ftm-alarm".

RTC_DRV_FTRTC010
  If you say Y here you will get support for the
  Faraday Technolog FTRTC010 found on e.g. Gemini SoC's.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ftrtc010.

RTC_DRV_GENERIC
  Say Y or M here to enable RTC support on systems using the generic
  RTC abstraction. If you do not know what you are doing, you should
  just say Y.

RTC_DRV_GOLDFISH
  Say yes to enable RTC driver for the Goldfish based virtual platform.
  
  Goldfish is a code name for the virtual platform developed by Google
  for Android emulation.

RTC_DRV_HID_SENSOR_TIME
  Say yes here to build support for the HID Sensors of type Time.
  This drivers makes such sensors available as RTCs.
  
  If this driver is compiled as a module, it will be named
  rtc-hid-sensor-time.

RTC_DRV_HYM8563
  Say Y to enable support for the HYM8563 I2C RTC chip. Apart
  from the usual rtc functions it provides a clock output of
  up to 32kHz.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-hym8563.

RTC_DRV_IMXDI
  Support for Freescale IMX DryIce RTC
  
  This driver can also be built as a module, if so, the module
  will be called "rtc-imxdi".

RTC_DRV_IMX_SC
  If you say yes here you get support for the NXP i.MX System
  Controller RTC module.

RTC_DRV_ISL12022
  If you say yes here you get support for the
  Intersil ISL12022 RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-isl12022.

RTC_DRV_ISL12026
  If you say yes here you get support for the
  Intersil ISL12026 RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-isl12026.

RTC_DRV_ISL1208
  If you say yes here you get support for the
  Intersil ISL1208 RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-isl1208.

RTC_DRV_JZ4740
  If you say yes here you get support for the Ingenic JZ47xx SoCs RTC
  controllers.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-jz4740.

RTC_DRV_LOONGSON1
  This is a driver for the loongson1 on-chip Counter0 (Time-Of-Year
  counter) to be used as a RTC.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ls1x.

RTC_DRV_LP8788
  Say Y to enable support for the LP8788 RTC/ALARM driver.

RTC_DRV_LPC24XX
  This enables support for the NXP RTC found which can be found on
  NXP LPC178x/18xx/408x/43xx devices.
  
  If you have one of the devices above enable this driver to use
  the hardware RTC. This driver can also be built as a module. If
  so, the module will be called rtc-lpc24xx.

RTC_DRV_LPC32XX
  This enables support for the NXP RTC in the LPC32XX
  
  This driver can also be built as a module. If so, the module
  will be called rtc-lpc32xx.

RTC_DRV_M41T80
  If you say Y here you will get support for the ST M41T60
  and M41T80 RTC chips series. Currently, the following chips are
  supported: M41T62, M41T65, M41T80, M41T81, M41T82, M41T83, M41ST84,
  M41ST85, M41ST87, and MicroCrystal RV4162.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-m41t80.

RTC_DRV_M41T80_WDT
  If you say Y here you will get support for the
  watchdog timer in the ST M41T60 and M41T80 RTC chips series.

RTC_DRV_M41T93
  If you say yes here you will get support for the
  ST M41T93 SPI RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-m41t93.

RTC_DRV_M41T94
  If you say yes here you will get support for the
  ST M41T94 SPI RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-m41t94.

RTC_DRV_M48T35
  If you say Y here you will get support for the
  ST M48T35 RTC chip.
  
  This driver can also be built as a module, if so, the module
  will be called "rtc-m48t35".

RTC_DRV_M48T59
  If you say Y here you will get support for the
  ST M48T59 RTC chip and compatible ST M48T08 and M48T02.
  
  These chips are usually found in Sun SPARC and UltraSPARC
  workstations.
  
  This driver can also be built as a module, if so, the module
  will be called "rtc-m48t59".

RTC_DRV_M48T86
  If you say Y here you will get support for the
  ST M48T86 and Dallas DS12887 RTC chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-m48t86.

RTC_DRV_MAX6900
  If you say yes here you will get support for the
  Maxim MAX6900 I2C RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-max6900.

RTC_DRV_MAX6902
  If you say yes here you will get support for the
  Maxim MAX6902 SPI RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-max6902.

RTC_DRV_MAX6916
  If you say yes here you will get support for the
  Maxim MAX6916 SPI RTC chip.
  
  This driver only supports the RTC feature, and not other chip
  features such as alarms.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-max6916.

RTC_DRV_MAX77686
  If you say yes here you will get support for the
  RTC of Maxim MAX77686/MAX77620/MAX77802 PMIC.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-max77686.

RTC_DRV_MAX8907
  If you say yes here you will get support for the
  RTC of Maxim MAX8907 PMIC.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-max8907.

RTC_DRV_MAX8925
  If you say yes here you will get support for the
  RTC of Maxim MAX8925 PMIC.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-max8925.

RTC_DRV_MAX8997
  If you say yes here you will get support for the
  RTC of Maxim MAX8997 PMIC.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-max8997.

RTC_DRV_MAX8998
  If you say yes here you will get support for the
  RTC of Maxim MAX8998 PMIC.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-max8998.

RTC_DRV_MC13XXX
  This enables support for the RTCs found on Freescale's PMICs
  MC13783 and MC13892.

RTC_DRV_MCP795
  If you say yes here you will get support for the Microchip MCP795.
  
  This driver can also be built as a module. If so the module
  will be called rtc-mcp795.

RTC_DRV_MESON
  Support for the RTC block on the Amlogic Meson6, Meson8, Meson8b
  and Meson8m2 SoCs.
  
  This driver can also be built as a module, if so, the module
  will be called "rtc-meson".

RTC_DRV_MESON_VRTC
  If you say yes here you will get support for the
  Virtual RTC of Amlogic SoCs.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-meson-vrtc.

RTC_DRV_MOXART
  If you say yes here you get support for the MOXA ART
  RTC module.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-moxart

RTC_DRV_MPC5121
  If you say yes here you will get support for the
  built-in RTC on MPC5121 or on MPC5200.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-mpc5121.

RTC_DRV_MSM6242
  If you say yes here you get support for the Oki MSM6242
  timekeeping chip. It is used in some Amiga models (e.g. A2000).
  
  This driver can also be built as a module. If so, the module
  will be called rtc-msm6242.

RTC_DRV_MT2712
  This enables support for the real time clock built in the MediaTek
  SoCs for MT2712.
  
  This drive can also be built as a module. If so, the module
  will be called rtc-mt2712.

RTC_DRV_MT6397
  This selects the MediaTek(R) RTC driver. RTC is part of MediaTek
  MT6397 PMIC. You should enable MT6397 PMIC MFD before select
  MediaTek(R) RTC driver.
  
  If you want to use MediaTek(R) RTC interface, select Y or M here.

RTC_DRV_MT7622
  This enables support for the real time clock built in the MediaTek
  SoCs.
  
  This drive can also be built as a module. If so, the module
  will be called rtc-mt7622.

RTC_DRV_MV
  If you say yes here you will get support for the in-chip RTC
  that can be found in some of Marvell's SoC devices, such as
  the Kirkwood 88F6281 and 88F6192.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-mv.

RTC_DRV_MXC
  If you say yes here you get support for the Freescale MXC
  RTC module.
  
  This driver can also be built as a module, if so, the module
  will be called "rtc-mxc".

RTC_DRV_MXC_V2
  If you say yes here you get support for the Freescale MXC
  SRTC module in i.MX53 processor.
  
  This driver can also be built as a module, if so, the module
  will be called "rtc-mxc_v2".

RTC_DRV_OMAP
  Say "yes" here to support the on chip real time clock
  present on TI OMAP1, AM33xx, DA8xx/OMAP-L13x, AM43xx and DRA7xx.
  
  This driver can also be built as a module, if so, module
  will be called rtc-omap.

RTC_DRV_OPAL
  If you say yes here you get support for the PowerNV platform RTC
  driver based on OPAL interfaces.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-opal.

RTC_DRV_PALMAS
  If you say yes here you get support for the RTC of TI PALMA series PMIC
  chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-palma.

RTC_DRV_PCAP
  If you say Y here you will get support for the RTC found on
  the PCAP2 ASIC used on some Motorola phones.

RTC_DRV_PCF2123
  If you say yes here you get support for the NXP PCF2123
  RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-pcf2123.

RTC_DRV_PCF2127
  If you say yes here you get support for the NXP PCF2127/29 RTC
  chips with integrated quartz crystal for industrial applications.
  Both chips also have watchdog timer and tamper switch detection
  features.
  
  PCF2127 has an additional feature of 512 bytes battery backed
  memory that's accessible using nvmem interface.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-pcf2127.

RTC_DRV_PCF50633
  If you say yes here you get support for the RTC subsystem of the
  NXP PCF50633 used in embedded systems.

RTC_DRV_PCF85063
  If you say yes here you get support for the PCF85063 RTC chip
  
  This driver can also be built as a module. If so, the module
  will be called rtc-pcf85063.

RTC_DRV_PCF8523
  If you say yes here you get support for the NXP PCF8523 RTC
  chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-pcf8523.

RTC_DRV_PCF85363
  If you say yes here you get support for the PCF85363 RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-pcf85363.
  
  The nvmem interface will be named pcf85363-#, where # is the
  zero-based instance number.

RTC_DRV_PCF8563
  If you say yes here you get support for the
  Philips PCF8563 RTC chip. The Epson RTC8564
  should work as well.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-pcf8563.

RTC_DRV_PCF8583
  If you say yes here you get support for the Philips PCF8583
  RTC chip found on Acorn RiscPCs. This driver supports the
  platform specific method of retrieving the current year from
  the RTC's SRAM. It will work on other platforms with the same
  chip, but the year will probably have to be tweaked.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-pcf8583.

RTC_DRV_PIC32
  If you say yes here you get support for the PIC32 RTC module.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-pic32

RTC_DRV_PL030
  If you say Y here you will get access to ARM AMBA
  PrimeCell PL030 RTC found on certain ARM SOCs.
  
  To compile this driver as a module, choose M here: the
  module will be called rtc-pl030.

RTC_DRV_PL031
  If you say Y here you will get access to ARM AMBA
  PrimeCell PL031 RTC found on certain ARM SOCs.
  
  To compile this driver as a module, choose M here: the
  module will be called rtc-pl031.

RTC_DRV_PM8XXX
  If you say yes here you get support for the
  Qualcomm PMIC8XXX RTC.
  
  To compile this driver as a module, choose M here: the
  module will be called rtc-pm8xxx.

RTC_DRV_PS3
  If you say yes here you will get support for the RTC on PS3.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-ps3.

RTC_DRV_PXA
  If you say Y here you will get access to the real time clock
  built into your PXA27x or PXA3xx CPU. This RTC is actually 2 RTCs
  consisting of an SA1100 compatible RTC and the extended PXA RTC.
  
  This RTC driver uses PXA RTC registers available since pxa27x
  series (RDxR, RYxR) instead of legacy RCNR, RTAR.

RTC_DRV_R7301
  If you say yes here you get support for the EPSON TOYOCOM
  RTC-7301SF/DG chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-r7301.

RTC_DRV_R9701
  If you say yes here you will get support for the
  Epson RTC-9701JE SPI RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-r9701.

RTC_DRV_RC5T583
  If you say yes here you get support for the RTC on the
  RICOH 5T583 chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-rc5t583.

RTC_DRV_RC5T619
  If you say yes here you get support for the RTC on the
  RICOH RC5T619 chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-rc5t619.

RTC_DRV_RK808
  If you say yes here you will get support for the
  RTC of RK805, RK809 and RK817, RK808 and RK818 PMIC.
  
  This driver can also be built as a module. If so, the module
  will be called rk808-rtc.

RTC_DRV_RP5C01
  If you say yes here you get support for the Ricoh RP5C01
  timekeeping chip. It is used in some Amiga models (e.g. A3000
  and A4000).
  
  This driver can also be built as a module. If so, the module
  will be called rtc-rp5c01.

RTC_DRV_RS5C313
  If you say yes here you get support for the Ricoh RS5C313 RTC chips.

RTC_DRV_RS5C348
  If you say yes here you get support for the
  Ricoh RS5C348A and RS5C348B RTC chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-rs5c348.

RTC_DRV_RS5C372
  If you say yes here you get support for the
  Ricoh R2025S/D, RS5C372A, RS5C372B, RV5C386, and RV5C387A RTC chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-rs5c372.

RTC_DRV_RTD119X
  If you say yes here, you get support for the RTD1295 SoC
  Real Time Clock.

RTC_DRV_RV3028
  If you say yes here you get support for the Micro Crystal
  RV3028.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-rv3028.

RTC_DRV_RV3029C2
  If you say yes here you get support for the Micro Crystal
  RV3029 and RV3049 RTC chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-rv3029c2.

RTC_DRV_RV3029_HWMON
  Say Y here if you want to expose temperature sensor data on
  rtc-rv3029.

RTC_DRV_RV3032
  If you say yes here you get support for the Micro Crystal
  RV3032.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-rv3032.

RTC_DRV_RV8803
  If you say yes here you get support for the Micro Crystal RV8803 and
  Epson RX8900 RTC chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-rv8803.

RTC_DRV_RX4581
  If you say yes here you will get support for the Epson RX-4581.
  
  This driver can also be built as a module. If so the module
  will be called rtc-rx4581.

RTC_DRV_RX6110
  If you say yes here you will get support for the Epson RX-6110.
  
  This driver can also be built as a module. If so the module
  will be called rtc-rx6110.

RTC_DRV_RX8010
  If you say yes here you get support for the Epson RX8010SJ RTC
  chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-rx8010.

RTC_DRV_RX8025
  If you say yes here you get support for the Epson
  RX-8025SA/NB RTC chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-rx8025.

RTC_DRV_RX8581
  If you say yes here you will get support for the Epson RX-8571/
  RX-8581.
  
  This driver can also be built as a module. If so the module
  will be called rtc-rx8581.

RTC_DRV_S35390A
  If you say yes here you will get support for the Seiko
  Instruments S-35390A.
  
  This driver can also be built as a module. If so the module
  will be called rtc-s35390a.

RTC_DRV_S3C
  RTC (Realtime Clock) driver for the clock inbuilt into the
  Samsung S3C24XX series of SoCs. This can provide periodic
  interrupt rates from 1Hz to 64Hz for user programs, and
  wakeup from Alarm.
  
  The driver currently supports the common features on all the
  S3C24XX range, such as the S3C2410, S3C2412, S3C2413, S3C2440
  and S3C2442.
  
  This driver can also be build as a module. If so, the module
  will be called rtc-s3c.

RTC_DRV_S5M
  If you say yes here you will get support for the
  RTC of Samsung S2MPS14 and S5M PMIC series.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-s5m.

RTC_DRV_SA1100
  If you say Y here you will get access to the real time clock
  built into your SA11x0 or PXA2xx CPU.
  
  To compile this driver as a module, choose M here: the
  module will be called rtc-sa1100.

RTC_DRV_SC27XX
  If you say Y here you will get support for the RTC subsystem
  of the Spreadtrum SC27xx series PMICs. The SC27xx series PMICs
  includes the SC2720, SC2721, SC2723, SC2730 and SC2731 chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-sc27xx.

RTC_DRV_SD3078
  If you say yes here you get support for the ZXW Shenzhen whwave
  SD3078 RTC chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-sd3078

RTC_DRV_SH
  Say Y here to enable support for the on-chip RTC found in
  most SuperH processors. This RTC is also found in RZ/A SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called rtc-sh.

RTC_DRV_SIRFSOC
  Say "yes" here to support the real time clock on SiRF SOC chips.
  This driver can also be built as a module called rtc-sirfsoc.

RTC_DRV_SNVS
  If you say yes here you get support for the Freescale SNVS
  Low Power (LP) RTC module.
  
  This driver can also be built as a module, if so, the module
  will be called "rtc-snvs".

RTC_DRV_SPEAR
  If you say Y here you will get support for the RTC found on
  spear

RTC_DRV_STARFIRE
  If you say Y here you will get support for the RTC found on
  Starfire systems.

RTC_DRV_STK17TA8
  If you say yes here you get support for the
  Simtek STK17TA8 timekeeping chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-stk17ta8.

RTC_DRV_STM32
  If you say yes here you get support for the STM32 On-Chip
  Real Time Clock.
  
  This driver can also be built as a module, if so, the module
  will be called "rtc-stm32".

RTC_DRV_STMP
  If you say yes here you will get support for the onboard
  STMP3xxx/i.MX23/i.MX28 RTC.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-stmp3xxx.

RTC_DRV_ST_LPC
  Say Y here to include STMicroelectronics Low Power Controller
  (LPC) based RTC support.
  
  To compile this driver as a module, choose M here: the
  module will be called rtc-st-lpc.

RTC_DRV_SUN4V
  If you say Y here you will get support for the Hypervisor
  based RTC on SUN4V systems.

RTC_DRV_SUN6I
  If you say Y here you will get support for the RTC found in
  some Allwinner SoCs like the A31 or the A64.

RTC_DRV_SUNXI
  If you say Y here you will get support for the RTC found on
  Allwinner A10/A20.

RTC_DRV_TEGRA
  If you say yes here you get support for the
  Tegra 200 series internal RTC module.
  
  This drive can also be built as a module. If so, the module
  will be called rtc-tegra.

RTC_DRV_TEST
  If you say yes here you get support for the
  RTC test driver. It's a software RTC which can be
  used to test the RTC subsystem APIs. It gets
  the time from the system clock.
  You want this driver only if you are doing development
  on the RTC subsystem. Please read the source code
  for further details.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-test.

RTC_DRV_TPS6586X
  TI Power Management IC TPS6586X supports RTC functionality
  along with alarm. This driver supports the RTC driver for
  the TPS6586X RTC module.

RTC_DRV_TPS65910
  If you say yes here you get support for the RTC on the
  TPS65910 chips.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-tps65910.

RTC_DRV_TPS80031
  TI Power Management IC TPS80031 supports RTC functionality
  along with alarm. This driver supports the RTC driver for
  the TPS80031 RTC module.

RTC_DRV_TWL4030
  If you say yes here you get support for the RTC on the
  TWL4030/TWL5030/TWL6030 family chips, used mostly with OMAP3 platforms.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-twl.

RTC_DRV_TWL92330
  If you say yes here you get support for the RTC on the
  TWL92330 "Menelaus" power management chip, used with OMAP2
  platforms. The support is integrated with the rest of
  the Menelaus driver; it's not separate module.

RTC_DRV_TX4939
  Driver for the internal RTC (Realtime Clock) module found on
  Toshiba TX4939 SoC.

RTC_DRV_V3020
  If you say yes here you will get support for the
  EM Microelectronic v3020 RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-v3020.

RTC_DRV_VR41XX
  If you say Y here you will get access to the real time clock
  built into your NEC VR41XX CPU.
  
  To compile this driver as a module, choose M here: the
  module will be called rtc-vr41xx.

RTC_DRV_VRTC
  Say "yes" here to get direct support for the real time clock
  found on Moorestown platforms. The VRTC is a emulated RTC that
  derives its clock source from a real RTC in the PMIC. The MC146818
  style programming interface is mostly conserved, but any
  updates are done via IPC calls to the system controller FW.

RTC_DRV_VT8500
  If you say Y here you will get access to the real time clock
  built into your VIA VT8500 SoC or its relatives.

RTC_DRV_WILCO_EC
  If you say yes here, you get read/write support for the Real Time
  Clock on the Wilco Embedded Controller (Wilco is a kind of Chromebook)
  
  This can also be built as a module. If so, the module will
  be named "rtc_wilco_ec".

RTC_DRV_WM831X
  If you say yes here you will get support for the RTC subsystem
  of the Wolfson Microelectronics WM831X series PMICs.
  
  This driver can also be built as a module. If so, the module
  will be called "rtc-wm831x".

RTC_DRV_WM8350
  If you say yes here you will get support for the RTC subsystem
  of the Wolfson Microelectronics WM8350.
  
  This driver can also be built as a module. If so, the module
  will be called "rtc-wm8350".

RTC_DRV_X1205
  If you say yes here you get support for the
  Xicor/Intersil X1205 RTC chip.
  
  This driver can also be built as a module. If so, the module
  will be called rtc-x1205.

RTC_DRV_XGENE
  If you say yes here you get support for the APM X-Gene SoC real time
  clock.
  
  This driver can also be built as a module, if so, the module
  will be called "rtc-xgene".

RTC_DRV_ZYNQMP
  If you say yes here you get support for the RTC controller found on
  Xilinx Zynq Ultrascale+ MPSoC.

RTC_HCTOSYS
  If you say yes here, the system time (wall clock) will be set using
  the value read from a specified RTC device. This is useful to avoid
  unnecessary fsck runs at boot time, and to network better.

RTC_HCTOSYS_DEVICE
  The RTC device that will be used to (re)initialize the system
  clock, usually rtc0. Initialization is done when the system
  starts up, and when it resumes from a low power state. This
  device should record time in UTC, since the kernel won't do
  timezone correction.
  
  This clock should be battery-backed, so that it reads the correct
  time when the system boots from a power-off state. Otherwise, your
  system will need an external clock source (like an NTP server).
  
  If the clock you specify here is not battery backed, it may still
  be useful to reinitialize system time when resuming from system
  sleep states. Do not specify an RTC here unless it stays powered
  during all this system's supported sleep states.

RTC_I2C_AND_SPI
  No help

RTC_INTF_DEV
  Say yes here if you want to use your RTCs using the /dev
  interfaces, which "udev" sets up as /dev/rtc0 through
  /dev/rtcN.
  
  You may want to set up a symbolic link so one of these
  can be accessed as /dev/rtc, which is a name
  expected by "hwclock" and some other programs. Recent
  versions of "udev" are known to set up the symlink for you.
  
  If unsure, say Y.

RTC_INTF_DEV_UIE_EMUL
  Provides an emulation for RTC_UIE if the underlying rtc chip
  driver does not expose RTC_UIE ioctls. Those requests generate
  once-per-second update interrupts, used for synchronization.
  
  The emulation code will read the time from the hardware
  clock several times per second, please enable this option
  only if you know that you really need it.

RTC_INTF_PROC
  Say yes here if you want to use your system clock RTC through
  the proc interface, /proc/driver/rtc.
  Other RTCs will not be available through that API.
  If there is no RTC for the system clock, then the first RTC(rtc0)
  is used by default.
  
  If unsure, say Y.

RTC_INTF_SYSFS
  Say yes here if you want to use your RTCs using sysfs interfaces,
  /sys/class/rtc/rtc0 through /sys/.../rtcN.
  
  If unsure, say Y.

RTC_LIB
  No help

RTC_MC146818_LIB
  No help

RTC_NVMEM
  Say yes here to add support for the non volatile (often battery
  backed) storage present on RTCs.

RTC_SYSTOHC
  If you say yes here, the system time (wall clock) will be stored
  in the RTC specified by RTC_HCTOSYS_DEVICE approximately every 11
  minutes if userspace reports synchronized NTP status.

RTC_SYSTOHC_DEVICE
  The RTC device used for NTP synchronization. The main difference
  between RTC_HCTOSYS_DEVICE and RTC_SYSTOHC_DEVICE is that this
  one can sleep when setting time, because it runs in the workqueue
  context.

RTD119X_WATCHDOG
  Say Y here to include support for the watchdog timer in
  Realtek RTD1295 SoCs.

RTL8180
  This is a driver for RTL8180, RTL8185 and RTL8187SE based cards.
  These are PCI based chips found in cards such as:
  
  (RTL8185 802.11g)
  A-Link WL54PC
  
  (RTL8180 802.11b)
  Belkin F5D6020 v3
  Belkin F5D6020 v3
  Dlink DWL-610
  Dlink DWL-510
  Netgear MA521
  Level-One WPC-0101
  Acer Aspire 1357 LMi
  VCTnet PC-11B1
  Ovislink AirLive WL-1120PCM
  Mentor WL-PCI
  Linksys WPC11 v4
  TrendNET TEW-288PI
  D-Link DWL-520 Rev D
  Repotec RP-WP7126
  TP-Link TL-WN250/251
  Zonet ZEW1000
  Longshine LCS-8031-R
  HomeLine HLW-PCC200
  GigaFast WF721-AEX
  Planet WL-3553
  Encore ENLWI-PCI1-NT
  TrendNET TEW-266PC
  Gigabyte GN-WLMR101
  Siemens-fujitsu Amilo D1840W
  Edimax EW-7126
  PheeNet WL-11PCIR
  Tonze PC-2100T
  Planet WL-8303
  Dlink DWL-650 v M1
  Edimax EW-7106
  Q-Tec 770WC
  Topcom Skyr@cer 4011b
  Roper FreeLan 802.11b (edition 2004)
  Wistron Neweb Corp CB-200B
  Pentagram HorNET
  QTec 775WC
  TwinMOS Booming B Series
  Micronet SP906BB
  Sweex LC700010
  Surecom EP-9428
  Safecom SWLCR-1100
  
  Thanks to Realtek for their support!

RTL8187
  This is a driver for RTL8187 and RTL8187B based cards.
  These are USB based chips found in devices such as:
  
  Netgear WG111v2
  Level 1 WNC-0301USB
  Micronet SP907GK V5
  Encore ENUWI-G2
  Trendnet TEW-424UB
  ASUS P5B Deluxe/P5K Premium motherboards
  Toshiba Satellite Pro series of laptops
  Asus Wireless Link
  Linksys WUSB54GC-EU v2
    (v1 = rt73usb; v3 is rt2070-based,
     use staging/rt3070 or try rt2800usb)
  
  Thanks to Realtek for their support!

RTL8187_LEDS
  No help

RTL8188EE
  This is the driver for Realtek RTL8188EE 802.11n PCIe
  wireless network adapters.
  
  If you choose to build it as a module, it will be called rtl8188ee

RTL8192CE
  This is the driver for Realtek RTL8192CE/RTL8188CE 802.11n PCIe
  wireless network adapters.
  
  If you choose to build it as a module, it will be called rtl8192ce

RTL8192CU
  This is the driver for Realtek RTL8192CU/RTL8188CU 802.11n USB
  wireless network adapters.
  
  If you choose to build it as a module, it will be called rtl8192cu

RTL8192C_COMMON
  No help

RTL8192DE
  This is the driver for Realtek RTL8192DE/RTL8188DE 802.11n PCIe
  wireless network adapters.
  
  If you choose to build it as a module, it will be called rtl8192de

RTL8192E
  No help

RTL8192EE
  This is the driver for Realtek RTL8192EE 802.11n PCIe
  wireless network adapters.
  
  If you choose to build it as a module, it will be called rtl8192ee

RTL8192SE
  This is the driver for Realtek RTL8192SE/RTL8191SE 802.11n PCIe
  wireless network adapters.
  
  If you choose to build it as a module, it will be called rtl8192se

RTL8192U
  No help

RTL8723AE
  This is the driver for Realtek RTL8723AE 802.11n PCIe
  wireless network adapters.
  
  If you choose to build it as a module, it will be called rtl8723ae

RTL8723BE
  This is the driver for Realtek RTL8723BE 802.11n PCIe
  wireless network adapters.
  
  If you choose to build it as a module, it will be called rtl8723be

RTL8723BS
  This option enables support for RTL8723BS SDIO drivers, such as
  the wifi found on the 1st gen Intel Compute Stick, the CHIP
  and many other Intel Atom and ARM based devices.
  If built as a module, it will be called r8723bs.

RTL8723_COMMON
  No help

RTL8821AE
  This is the driver for Realtek RTL8821AE/RTL8812AE 802.11ac PCIe
  wireless network adapters.
  
  If you choose to build it as a module, it will be called rtl8821ae

RTL8XXXU
  This is an alternative driver for various Realtek RTL8XXX
  parts written to utilize the Linux mac80211 stack.
  The driver is known to work with a number of RTL8723AU,
  RL8188CU, RTL8188RU, RTL8191CU, and RTL8192CU devices
  
  This driver is under development and has a limited feature
  set. In particular it does not yet support 40MHz channels
  and power management. However it should have a smaller
  memory footprint than the vendor drivers and benefits
  from the in kernel mac80211 stack.
  
  It can coexist with drivers from drivers/staging/rtl8723au,
  drivers/staging/rtl8192u, and drivers/net/wireless/rtlwifi,
  but you will need to control which module you wish to load.
  
  To compile this driver as a module, choose M here: the module will
  be called r8xxxu.  If unsure, say N.

RTL8XXXU_UNTESTED
  This option enables detection of Realtek 8723/8188/8191/8192 WiFi
  USB devices which have not been tested directly by the driver
  author or reported to be working by third parties.
  
  Please report your results!

RTLBTCOEXIST
  No help

RTLLIB
  If you have a wireless card that uses rtllib, say
  Y. Currently the only card is the rtl8192e.
  
  If unsure, say N.

RTLLIB_CRYPTO_CCMP
  CCMP crypto driver for rtllib.
  
  If you enabled RTLLIB, you want this.

RTLLIB_CRYPTO_TKIP
  TKIP crypto driver for rtllib.
  
  If you enabled RTLLIB, you want this.

RTLLIB_CRYPTO_WEP
  TKIP crypto driver for rtllib.
  
  If you enabled RTLLIB, you want this.

RTLWIFI
  No help

RTLWIFI_DEBUG
  To use the module option that sets the dynamic-debugging level for,
  the front-end driver, this parameter must be "Y". For memory-limited
  systems, choose "N". If in doubt, choose "Y".

RTLWIFI_PCI
  No help

RTLWIFI_USB
  No help

RTL_CARDS
  This option will enable support for the Realtek mac80211-based
  wireless drivers. Drivers rtl8192ce, rtl8192cu, rtl8192se, rtl8192de,
  rtl8723ae, rtl8723be, rtl8188ee, rtl8192ee, and rtl8821ae share
  some common code.

RTS5208
  Say Y here to include driver code to support the Realtek
  PCI-E card reader rts5208/rts5288.
  
  If this driver is compiled as a module, it will be named rts5208.

RTW88
  This module adds support for mac80211-based wireless drivers that
  enables Realtek IEEE 802.11ac wireless chipsets.
  
  If you choose to build a module, it'll be called rtw88.

RTW88_8723D
  No help

RTW88_8723DE
  Select this option will enable support for 8723DE chipset
  
  802.11n PCIe wireless network adapter

RTW88_8821C
  No help

RTW88_8821CE
  Select this option will enable support for 8821CE chipset
  
  802.11ac PCIe wireless network adapter

RTW88_8822B
  No help

RTW88_8822BE
  Select this option will enable support for 8822BE chipset
  
  802.11ac PCIe wireless network adapter

RTW88_8822C
  No help

RTW88_8822CE
  Select this option will enable support for 8822CE chipset
  
  802.11ac PCIe wireless network adapter

RTW88_CORE
  No help

RTW88_DEBUG
  Enable debug support
  
  If unsure, say Y to simplify debug problems

RTW88_DEBUGFS
  Enable debug support
  
  If unsure, say Y to simplify debug problems

RTW88_PCI
  No help

RT_GROUP_SCHED
  This feature lets you explicitly allocate real CPU bandwidth
  to task groups. If enabled, it will also make it impossible to
  schedule realtime tasks for non-root users until you allocate
  realtime bandwidth for them.
  See Documentation/scheduler/sched-rt-group.rst for more information.

RT_MUTEXES
  No help

RUNTIME_TESTING_MENU
  No help

RWSEM_SPIN_ON_OWNER
  No help

RXKAD
  Provide kerberos 4 and AFS kaserver security handling for AF_RXRPC
  through the use of the key retention service.
  
  See Documentation/networking/rxrpc.rst.

S2IO
  This driver supports Exar Corp's Xframe Series 10Gb Ethernet Adapters.
  These were originally released from S2IO, which renamed itself
  Neterion.  So, the adapters might be labeled as either one, depending
  on its age.
  
  More specific information on configuring the driver is in
  <file:Documentation/networking/device_drivers/ethernet/neterion/s2io.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called s2io.

S390_AP_IOMMU
  Enables bits of IOMMU API required by VFIO. The iommu_ops
  is not implemented as it is not necessary for VFIO.

S390_CCW_IOMMU
  Enables bits of IOMMU API required by VFIO. The iommu_ops
  is not implemented as it is not necessary for VFIO.

S390_IOMMU
  Support for the IOMMU API for s390 PCI devices.

S390_PRNG
  Select this option if you want to use the s390 pseudo random number
  generator. The PRNG is part of the cryptographic processor functions
  and uses triple-DES to generate secure random numbers like the
  ANSI X9.17 standard. User-space programs access the
  pseudo-random-number device through the char device /dev/prandom.
  
  It is available as of z9.

S390_TAPE
  Select this option if you want to access channel-attached tape
  devices on IBM S/390 or zSeries.
  If you select this option you will also want to select at
  least one of the tape interface options and one of the tape
  hardware options in order to access a tape device.
  This option is also available as a module. The module will be
  called tape390 and include all selected interfaces and
  hardware drivers.

S390_TAPE_34XX
  Select this option if you want to access IBM 3480/3490 magnetic
  tape subsystems and 100% compatibles.
  It is safe to say "Y" here.

S390_TAPE_3590
  Select this option if you want to access IBM 3590 magnetic
  tape subsystems and 100% compatibles.
  It is safe to say "Y" here.

S390_VMUR
  Character device driver for z/VM reader, puncher and printer.

S3C2410_COMMON_CLK
  Build the s3c2410 clock driver based on the common clock framework.

S3C2410_COMMON_DCLK
  Temporary symbol to build the dclk driver based on the common clock
  framework.

S3C2410_WATCHDOG
  Watchdog timer block in the Samsung SoCs. This will reboot
  the system when the timer expires with the watchdog enabled.
  
  The driver is limited by the speed of the system's PCLK
  signal, so with reasonably fast systems (PCLK around 50-66MHz)
  then watchdog intervals of over approximately 20seconds are
  unavailable.
  
  The driver can be built as a module by choosing M, and will
  be called s3c2410_wdt

S3C2412_COMMON_CLK
  No help

S3C2443_COMMON_CLK
  No help

S3C24XX_DMAC
  Support for the Samsung S3C24XX DMA controller driver. The
  DMA controller is having multiple DMA channels which can be
  configured for different peripherals like audio, UART, SPI.
  The DMA controller can transfer data from memory to peripheral,
  periphal to memory, periphal to periphal and memory to memory.

S3C64XX_COMMON_CLK
  Support for the clock controller present on the Samsung S3C64xx SoCs.
  Choose Y here only if you build for this SoC.

S3C_PM_DEBUG_LED_SMDK
  Say Y here to enable the use of the SMDK LEDs on the baseboard
  for debugging of the state of the suspend and resume process.
  
  Note, this currently only works for S3C64XX based SMDK boards.

S5PV210_COMMON_CLK
  Support for the clock controller present on the Samsung S5Pv210 SoCs.
  Choose Y here only if you build for this SoC.

SA1100_WATCHDOG
  Watchdog timer embedded into SA11x0 and PXA2xx chips. This will
  reboot your system when timeout is reached.
  
  NOTE: once enabled, this timer cannot be disabled.
  
  To compile this driver as a module, choose M here: the
  module will be called sa1100_wdt.

SAMA5D4_WATCHDOG
  Atmel SAMA5D4 watchdog timer is embedded into SAMA5D4 chips.
  Its Watchdog Timer Mode Register can be written more than once.
  This will reboot your system when the timeout is reached.

SAMPLES
  You can build and test sample kernel code here.

SAMPLE_ANDROID_BINDERFS
  Builds a sample program to illustrate the use of the Android binderfs
  filesystem.

SAMPLE_AUXDISPLAY
  No help

SAMPLE_CONFIGFS
  Builds a sample configfs interface.

SAMPLE_CONNECTOR
  When enabled, this builds both a sample kernel module for
  the connector interface and a user space tool to communicate
  with it.
  See also Documentation/driver-api/connector.rst

SAMPLE_FTRACE_DIRECT
  This builds an ftrace direct function example
  that hooks to wake_up_process and prints the parameters.

SAMPLE_HIDRAW
  No help

SAMPLE_HW_BREAKPOINT
  This builds kernel hardware breakpoint example modules.

SAMPLE_INTEL_MEI
  Build a sample program to work with mei device.

SAMPLE_KDB
  Build an example of how to dynamically add the hello
  command to the kdb shell.

SAMPLE_KFIFO
  This config option will allow you to build a number of
  different kfifo sample modules showing how to use the
  generic kfifo API.
  
  If in doubt, say "N" here.

SAMPLE_KOBJECT
  This config option will allow you to build a number of
  different kobject sample modules showing how to use kobjects,
  ksets, and ktypes properly.
  
  If in doubt, say "N" here.

SAMPLE_KPROBES
  This build several kprobes example modules.

SAMPLE_KRETPROBES
  No help

SAMPLE_LIVEPATCH
  Build sample live patch demonstrations.

SAMPLE_PIDFD
  No help

SAMPLE_QMI_CLIENT
  Build an QMI client sample driver, which demonstrates how to
  communicate with a remote QRTR service, using QMI encoded messages.

SAMPLE_RPMSG_CLIENT
  Build an rpmsg client sample driver, which demonstrates how
  to communicate with an AMP-configured remote processor over
  the rpmsg bus.

SAMPLE_SECCOMP
  Build samples of seccomp filters using various methods of
  BPF filter construction.

SAMPLE_TIMER
  No help

SAMPLE_TRACE_ARRAY
  This builds a module that demonstrates the use of various APIs to
  access Ftrace instances from within the kernel.

SAMPLE_TRACE_EVENTS
  This build trace event example modules.

SAMPLE_TRACE_PRINTK
  This builds a module that calls trace_printk() and can be used to
  test various trace_printk() calls from a module.

SAMPLE_UHID
  Build UHID sample program.

SAMPLE_VFIO_MDEV_MBOCHS
  Build a virtual display sample driver for use as a VFIO
  mediated device.  It supports the region display interface
  (VFIO_GFX_PLANE_TYPE_DMABUF).
  Emulate enough of qemu stdvga to make bochs-drm.ko happy.
  That is basically the vram memory bar and the bochs dispi
  interface vbe registers in the mmio register bar.
  Specifically it does *not* include any legacy vga stuff.
  Device looks a lot like "qemu -device secondary-vga".

SAMPLE_VFIO_MDEV_MDPY
  Build a virtual display sample driver for use as a VFIO
  mediated device.  It is a simple framebuffer and supports
  the region display interface (VFIO_GFX_PLANE_TYPE_REGION).

SAMPLE_VFIO_MDEV_MDPY_FB
  Guest fbdev driver for the virtual display sample driver.

SAMPLE_VFIO_MDEV_MTTY
  Build a virtual tty sample driver for use as a VFIO
  mediated device

SAMPLE_VFS
  Build example userspace programs that use new VFS system calls such
  as mount API and statx().  Note that this is restricted to the x86
  arch whilst it accesses system calls that aren't yet in all arches.

SAMPLE_WATCHDOG
  No help

SAMPLE_WATCH_QUEUE
  Build example userspace program to use the new mount_notify(),
  sb_notify() syscalls and the KEYCTL_WATCH_KEY keyctl() function.

SAMSUNG_LAPTOP
  This module implements a driver for a wide range of different
  Samsung laptops.  It offers control over the different
  function keys, wireless LED, LCD backlight level.
  
  It may also provide some sysfs files described in
  <file:Documentation/ABI/testing/sysfs-driver-samsung-laptop>
  
  To compile this driver as a module, choose M here: the module
  will be called samsung-laptop.

SAMSUNG_MC
  Support for the Memory Controller (MC) devices found on
  Samsung Exynos SoCs.

SAMSUNG_PM_CHECK
  Enable the PM code's memory area checksum over sleep. This option
  will generate CRCs of all blocks of memory, and store them before
  going to sleep. The blocks are then checked on resume for any
  errors.
  
  Note, this can take several seconds depending on memory size
  and CPU speed.
  
  See <file:Documentation/arm/samsung-s3c24xx/suspend.rst>

SAMSUNG_PM_CHECK_CHUNKSIZE
  Set the chunksize in Kilobytes of the CRC for checking memory
  corruption over suspend and resume. A smaller value will mean that
  the CRC data block will take more memory, but will identify any
  faults with better precision.
  
  See <file:Documentation/arm/samsung-s3c24xx/suspend.rst>

SAMSUNG_PM_DEBUG
  Say Y here if you want verbose debugging from the PM Suspend and
  Resume code. See <file:Documentation/arm/samsung-s3c24xx/suspend.rst>
  for more information.

SAMSUNG_Q10
  This driver provides support for backlight control on Samsung Q10
  and related laptops, including Dell Latitude X200.

SATA_ACARD_AHCI
  This option enables support for Acard.
  
  If unsure, say N.

SATA_AHCI
  This option enables support for AHCI Serial ATA.
  
  If unsure, say N.

SATA_AHCI_PLATFORM
  This option enables support for Platform AHCI Serial ATA
  controllers.
  
  If unsure, say N.

SATA_AHCI_SEATTLE
  This option enables support for AMD Seattle SATA host controller.
  
  If unsure, say N

SATA_DWC
  This option enables support for the on-chip SATA controller of the
  AppliedMicro processor 460EX.
  
  If unsure, say N.

SATA_DWC_DEBUG
  This option enables debugging output in the driver.

SATA_DWC_OLD_DMA
  This option enables support for old device trees without the
  "dmas" property.

SATA_DWC_VDEBUG
  This option enables the taskfile dumping and NCQ debugging.

SATA_FSL
  This option enables support for Freescale 3.0Gbps SATA controller.
  It can be found on MPC837x and MPC8315.
  
  If unsure, say N.

SATA_GEMINI
  This enabled support for the FTIDE010 to SATA bridge
  found in Cortina Systems Gemini platform.
  
  If unsure, say N.

SATA_HIGHBANK
  This option enables support for the Calxeda Highbank SoC's
  onboard SATA.
  
  If unsure, say N.

SATA_HOST
  No help

SATA_INIC162X
  This option enables support for Initio 162x Serial ATA.

SATA_MOBILE_LPM_POLICY
  Select the Default SATA Link Power Management (LPM) policy to use
  for mobile / laptop variants of chipsets / "South Bridges".
  
  The value set has the following meanings:
        0 => Keep firmware settings
        1 => Maximum performance
        2 => Medium power
        3 => Medium power with Device Initiated PM enabled
        4 => Minimum power
  
  Note "Minimum power" is known to cause issues, including disk
  corruption, with some disks and should not be used.

SATA_MV
  This option enables support for the Marvell Serial ATA family.
  Currently supports 88SX[56]0[48][01] PCI(-X) chips,
  as well as the newer [67]042 PCI-X/PCIe and SOC devices.
  
  If unsure, say N.

SATA_NV
  This option enables support for NVIDIA Serial ATA.
  
  If unsure, say N.

SATA_PMP
  This option adds support for SATA Port Multipliers
  (the SATA version of an ethernet hub, or SAS expander).

SATA_PROMISE
  This option enables support for Promise Serial ATA TX2/TX4.
  
  If unsure, say N.

SATA_QSTOR
  This option enables support for Pacific Digital Serial ATA QStor.
  
  If unsure, say N.

SATA_RCAR
  This option enables support for Renesas R-Car Serial ATA.
  
  If unsure, say N.

SATA_SIL
  This option enables support for Silicon Image Serial ATA.
  
  If unsure, say N.

SATA_SIL24
  This option enables support for Silicon Image 3124/3132 Serial ATA.
  
  If unsure, say N.

SATA_SIS
  This option enables support for SiS Serial ATA on
  SiS 964/965/966/180 and Parallel ATA on SiS 180.
  The PATA support for SiS 180 requires additionally to
  enable the PATA_SIS driver in the config.
  If unsure, say N.

SATA_SVW
  This option enables support for Broadcom/Serverworks/Apple K2
  SATA support.
  
  If unsure, say N.

SATA_SX4
  This option enables support for Promise Serial ATA SX4.
  
  If unsure, say N.

SATA_ULI
  This option enables support for ULi Electronics SATA.
  
  If unsure, say N.

SATA_VIA
  This option enables support for VIA Serial ATA.
  
  If unsure, say N.

SATA_VITESSE
  This option enables support for Vitesse VSC7174 and Intel 31244 Serial ATA.
  
  If unsure, say N.

SATA_ZPODD
  This option adds support for SATA Zero Power Optical Disc
  Drive (ZPODD). It requires both the ODD and the platform
  support, and if enabled, will automatically power on/off the
  ODD when certain condition is satisfied. This does not impact
  end user's experience of the ODD, only power is saved when
  the ODD is not in use (i.e. no disc inside).
  
  If unsure, say N.

SB1250_MAC
  This driver supports Gigabit Ethernet interfaces based on the
  Broadcom SiByte family of System-On-a-Chip parts.  They include
  the BCM1120, BCM1125, BCM1125H, BCM1250, BCM1255, BCM1280, BCM1455
  and BCM1480 chips.
  
  To compile this driver as a module, choose M here: the module
  will be called sb1250-mac.

SBC7240_WDT
  This is the driver for the hardware watchdog found on the IEI
  single board computers EPIC Nano 7240 (and likely others). This
  watchdog simply watches your kernel to make sure it doesn't freeze,
  and if it does, it reboots your computer after a certain amount of
  time.
  
  To compile this driver as a module, choose M here: the
  module will be called sbc7240_wdt.

SBC8360_WDT
  This is the driver for the hardware watchdog on the SBC8360 Single
  Board Computer produced by Axiomtek Co., Ltd. (www.axiomtek.com).
  
  To compile this driver as a module, choose M here: the
  module will be called sbc8360.
  
  Most people will say N.

SBC_EPX_C3_WATCHDOG
  This is the driver for the built-in watchdog timer on the EPX-C3
  Single-board computer made by Winsystems, Inc.
  
  *Note*: This hardware watchdog is not probeable and thus there
  is no way to know if writing to its IO address will corrupt
  your system or have any real effect.  The only way to be sure
  that this driver does what you want is to make sure you
  are running it on an EPX-C3 from Winsystems with the watchdog
  timer at IO address 0x1ee and 0x1ef.  It will write to both those
  IO ports.  Basically, the assumption is made that if you compile
  this driver into your kernel and/or load it as a module, that you
  know what you are doing and that you are in fact running on an
  EPX-C3 board!
  
  To compile this driver as a module, choose M here: the
  module will be called sbc_epx_c3.

SBC_FITPC2_WATCHDOG
  This is the driver for the built-in watchdog timer on the fit-PC2,
  fit-PC2i, CM-iAM single-board computers made by Compulab.
  
  It`s possible to enable watchdog timer either from BIOS (F2) or from booted Linux.
  When "Watchdog Timer Value" enabled one can set 31-255 s operational range.
  
  Entering BIOS setup temporary disables watchdog operation regardless to current state,
  so system will not be restarted while user in BIOS setup.
  
  Once watchdog was enabled the system will be restarted every
  "Watchdog Timer Value" period, so to prevent it user can restart or
  disable the watchdog.
  
  To compile this driver as a module, choose M here: the
  module will be called sbc_fitpc2_wdt.
  
  Most people will say N.

SBITMAP
  No help

SBNI
  Driver for ISA SBNI12-xx cards which are low cost alternatives to
  leased line modems.
  
  You can find more information and last versions of drivers and
  utilities at <http://www.granch.ru/>. If you have any question you
  can send email to <sbni@granch.ru>.
  
  To compile this driver as a module, choose M here: the
  module will be called sbni.
  
  If unsure, say N.

SBNI_MULTILINE
  Schedule traffic for some parallel lines, via SBNI12 adapters.
  
  If you have two computers connected with two parallel lines it's
  possible to increase transfer rate nearly twice. You should have
  a program named 'sbniconfig' to configure adapters.
  
  If unsure, say N.

SBP_TARGET
  Say Y or M here to enable SCSI target functionality over FireWire.
  This enables you to expose SCSI devices to other nodes on the FireWire
  bus, for example hard disks. Similar to FireWire Target Disk mode on
  many Apple computers.
  
  To compile this driver as a module, say M here: The module will be
  called sbp-target.

SBUS
  No help

SC1200_WDT
  This is a driver for National Semiconductor PC87307/PC97307 hardware
  watchdog cards as found on the SC1200. This watchdog is mainly used
  for power management purposes and can be used to power down the device
  during inactivity periods (includes interrupt activity monitoring).
  
  To compile this driver as a module, choose M here: the
  module will be called sc1200wdt.
  
  Most people will say N.

SC27XX_ADC
  Say yes here to build support for the integrated ADC inside the
  Spreadtrum SC27xx series PMICs.
  
  This driver can also be built as a module. If so, the module
  will be called sc27xx_adc.

SC27XX_EFUSE
  This is a simple driver to dump specified values of Spreadtrum
  SC27XX PMICs from eFuse.
  
  This driver can also be built as a module. If so, the module
  will be called nvmem-sc27xx-efuse.

SC520_CPUFREQ
  This adds the CPUFreq driver for AMD Elan SC520 processor.
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  If in doubt, say N.

SC520_WDT
  This is the driver for the hardware watchdog built in to the
  AMD "Elan" SC520 microcomputer commonly used in embedded systems.
  This watchdog simply watches your kernel to make sure it doesn't
  freeze, and if it does, it reboots your computer after a certain
  amount of time.
  
  You can compile this driver directly into the kernel, or use
  it as a module.  The module will be called sc520_wdt.

SC92031
  This is a driver for the Fast Ethernet PCI network cards based on
  the Silan SC92031 chip (sometimes also called Rsltek 8139D). If you
  have one of these, say Y here.
  
  To compile this driver as a module, choose M here: the module
  will be called sc92031.  This is recommended.

SCA3000
  Say Y here to build support for the VTI SCA3000 series of SPI
  accelerometers. These devices use a hardware ring buffer.
  
  To compile this driver as a module, say M here: the module will be
  called sca3000.

SCC
  These cards are used to connect your Linux box to an amateur radio
  in order to communicate with other computers. If you want to use
  this, read
  <file:Documentation/networking/device_drivers/hamradio/z8530drv.rst>
  and the AX25-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>. Also make sure to say Y
  to "Amateur Radio AX.25 Level 2" support.
  
  To compile this driver as a module, choose M here: the module
  will be called scc.

SCC_DELAY
  Say Y here if you experience problems with the SCC driver not
  working properly; please read
  <file:Documentation/networking/device_drivers/hamradio/z8530drv.rst>
  for details.
  
  If unsure, say N.

SCC_TRXECHO
  Some transmitters feed the transmitted signal back to the receive
  line.  Say Y here to foil this by explicitly disabling the receiver
  during data transmission.
  
  If in doubt, say Y.

SCD30_CORE
  Say Y here to build support for the Sensirion SCD30 sensor with carbon
  dioxide, relative humidity and temperature sensing capabilities.
  
  To compile this driver as a module, choose M here: the module will
  be called scd30_core.

SCD30_I2C
  Say Y here to build support for the Sensirion SCD30 I2C interface
  driver.
  
  To compile this driver as a module, choose M here: the module will
  be called scd30_i2c.

SCD30_SERIAL
  Say Y here to build support for the Sensirion SCD30 serial interface
  driver.
  
  To compile this driver as a module, choose M here: the module will
  be called scd30_serial.

SCF_TORTURE_TEST
  This option provides a kernel module that runs torture tests
  on the smp_call_function() family of primitives.  The kernel
  module may be built after the fact on the running kernel to
  be tested, if desired.

SCHEDSTATS
  If you say Y here, additional code will be inserted into the
  scheduler and related routines to collect statistics about
  scheduler behavior and provide them in /proc/schedstat.  These
  stats may be useful for both tuning and debugging the scheduler
  If you aren't debugging the scheduler or trying to tune a specific
  application, you can say N to avoid the very slight overhead
  this adds.

SCHED_AUTOGROUP
  This option optimizes the scheduler for common desktop workloads by
  automatically creating and populating task groups.  This separation
  of workloads isolates aggressive CPU burners (like build jobs) from
  desktop applications.  Task group autogeneration is currently based
  upon task session.

SCHED_DEBUG
  If you say Y here, the /proc/sched_debug file will be provided
  that can help debug the scheduler. The runtime overhead of this
  option is minimal.

SCHED_HRTICK
  No help

SCHED_INFO
  No help

SCHED_MC
  Multi-core scheduler support improves the CPU scheduler's decision
  making when dealing with multi-core CPU chips at a cost of slightly
  increased overhead in some places. If unsure say N here.

SCHED_MC_PRIO
  Intel Turbo Boost Max Technology 3.0 enabled CPUs have a
  core ordering determined at manufacturing time, which allows
  certain cores to reach higher turbo frequencies (when running
  single threaded workloads) than others.
  
  Enabling this kernel feature teaches the scheduler about
  the TBM3 (aka ITMT) priority order of the CPU cores and adjusts the
  scheduler's CPU selection logic accordingly, so that higher
  overall system performance can be achieved.
  
  This feature will have no effect on CPUs without this feature.
  
  If unsure say Y here.

SCHED_OMIT_FRAME_POINTER
  Calculate simpler /proc/<PID>/wchan values. If this option
  is disabled then wchan values will recurse back to the
  caller function. This provides more accurate wchan values,
  at the expense of slightly more scheduling overhead.
  
  If in doubt, say "Y".

SCHED_SMT
  No help

SCHED_STACK_END_CHECK
  This option checks for a stack overrun on calls to schedule().
  If the stack end location is found to be over written always panic as
  the content of the corrupted region can no longer be trusted.
  This is to ensure no erroneous behaviour occurs which could result in
  data corruption or a sporadic crash at a later stage once the region
  is examined. The runtime overhead introduced is minimal.

SCHED_THERMAL_PRESSURE
  Select this option to enable thermal pressure accounting in the
  scheduler. Thermal pressure is the value conveyed to the scheduler
  that reflects the reduction in CPU compute capacity resulted from
  thermal throttling. Thermal throttling occurs when the performance of
  a CPU is capped due to high operating temperatures.
  
  If selected, the scheduler will be able to balance tasks accordingly,
  i.e. put less load on throttled CPUs than on non/less throttled ones.
  
  This requires the architecture to implement
  arch_set_thermal_pressure() and arch_get_thermal_pressure().

SCHED_TRACER
  This tracer tracks the latency of the highest priority task
  to be scheduled in, starting from the point it has woken up.

SCLP_CONSOLE
  Include support for using an IBM HWC line-mode terminal as the Linux
  system console.

SCLP_OFB
  This option enables the Open-for-Business interface to the s390
  Service Element.

SCLP_TTY
  Include support for IBM SCLP line-mode terminals.

SCLP_VT220_CONSOLE
  Include support for using an IBM SCLP VT220-compatible terminal as a
  Linux system console.

SCLP_VT220_TTY
  Include support for an IBM SCLP VT220-compatible terminal.

SCM_BLOCK
  Block device driver for Storage Class Memory (SCM). This driver
  provides a block device interface for each available SCM increment.
  
  To compile this driver as a module, choose M here: the
  module will be called scm_block.

SCR24X
  Enable support for the SCR24x PCMCIA Chip Card Interface.
  
  To compile this driver as a module, choose M here.
  The module will be called scr24x_cs..
  
  If unsure say N.

SCSI
  If you want to use a SCSI hard disk, SCSI tape drive, SCSI CD-ROM or
  any other SCSI device under Linux, say Y and make sure that you know
  the name of your SCSI host adapter (the card inside your computer
  that "speaks" the SCSI protocol, also called SCSI controller),
  because you will be asked for it.
  
  You also need to say Y here if you have a device which speaks
  the SCSI protocol.  Examples of this include the parallel port
  version of the IOMEGA ZIP drive, USB storage devices, Fibre
  Channel, and FireWire storage.
  
  To compile this driver as a module, choose M here and read
  <file:Documentation/scsi/scsi.rst>.
  The module will be called scsi_mod.
  
  However, do not compile this as a module if your root file system
  (the one containing the directory /) is located on a SCSI device.

SCSI_3W_9XXX
  This driver supports the 9000 series 3ware SATA-RAID cards.
  
  <http://www.amcc.com>
  
  Please read the comments at the top of
  <file:drivers/scsi/3w-9xxx.c>.

SCSI_3W_SAS
  This driver supports the LSI 3ware 9750 6Gb/s SAS/SATA-RAID cards.
  
  <http://www.lsi.com>
  
  Please read the comments at the top of
  <file:drivers/scsi/3w-sas.c>.

SCSI_A4000T
  If you have an Amiga 4000T and have SCSI devices connected to the
  built-in SCSI controller, say Y. Otherwise, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called a4000t.

SCSI_AACRAID
  This driver supports a variety of Dell, HP, Adaptec, IBM and
  ICP storage products. For a list of supported products, refer
  to <file:Documentation/scsi/aacraid.rst>.
  
  To compile this driver as a module, choose M here: the module
  will be called aacraid.

SCSI_ACARD
  This driver supports the ACARD SCSI host adapter.
  Support Chip <ATP870 ATP876 ATP880 ATP885>
  To compile this driver as a module, choose M here: the
  module will be called atp870u.

SCSI_ACORNSCSI_3
  This enables support for the Acorn SCSI card (aka30). If you have an
  Acorn system with one of these, say Y. If unsure, say N.

SCSI_ACORNSCSI_SYNC
  Say Y here to enable synchronous transfer negotiation with all
  targets on the Acorn SCSI card.
  
  In general, this improves performance; however some SCSI devices
  don't implement it properly, so the safe answer is N.

SCSI_ACORNSCSI_TAGGED_QUEUE
  Say Y here to enable tagged queuing support on the Acorn SCSI card.
  
  This is a feature of SCSI-2 which improves performance: the host
  adapter can send several SCSI commands to a device's queue even if
  previous commands haven't finished yet. Some SCSI devices don't
  implement this properly, so the safe answer is N.

SCSI_ADVANSYS
  This is a driver for all SCSI host adapters manufactured by
  AdvanSys. It is documented in the kernel source in
  <file:drivers/scsi/advansys.c>.
  
  To compile this driver as a module, choose M here: the
  module will be called advansys.

SCSI_AHA152X
  This is a driver for the AHA-1510, AHA-1520, AHA-1522, and AHA-2825
  SCSI host adapters. It also works for the AVA-1505, but the IRQ etc.
  must be manually specified in this case.
  
  It is explained in section 3.3 of the SCSI-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>. You might also want to
  read the file <file:Documentation/scsi/aha152x.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called aha152x.

SCSI_AHA1542
  This is support for a SCSI host adapter.  It is explained in section
  3.4 of the SCSI-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>.  Note that Trantor was
  purchased by Adaptec, and some former Trantor products are being
  sold under the Adaptec name.  If it doesn't work out of the box, you
  may have to change some settings in <file:drivers/scsi/aha1542.h>.
  
  To compile this driver as a module, choose M here: the
  module will be called aha1542.

SCSI_AHA1740
  This is support for a SCSI host adapter.  It is explained in section
  3.5 of the SCSI-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>.  If it doesn't work out
  of the box, you may have to change some settings in
  <file:drivers/scsi/aha1740.h>.
  
  To compile this driver as a module, choose M here: the
  module will be called aha1740.

SCSI_AIC79XX
  This driver supports all of Adaptec's Ultra 320 PCI-X
  based SCSI controllers.

SCSI_AIC7XXX
  This driver supports all of Adaptec's Fast through Ultra 160 PCI
  based SCSI controllers as well as the aic7770 based EISA and VLB
  SCSI controllers (the 274x and 284x series).  For AAA and ARO based
  configurations, only SCSI functionality is provided.
  
  To compile this driver as a module, choose M here: the
  module will be called aic7xxx.

SCSI_AIC94XX
  This driver supports Adaptec's SAS/SATA 3Gb/s 64 bit PCI-X
  AIC94xx chip based host adapters.

SCSI_AM53C974
  This driver supports PCI SCSI host adapters based on the Am53C974A
  chip, e.g. Tekram DC390(T), DawiControl 2974 and some onboard
  PCscsi/PCnet (Am53/79C974) solutions.
  This is a new implementation base on the generic esp_scsi driver.
  
  Note that this driver does NOT support Tekram DC390W/U/F, which are
  based on NCR/Symbios chips. Use "NCR53C8XX SCSI support" for those.
  
  To compile this driver as a module, choose M here: the
  module will be called am53c974.

SCSI_ARCMSR
  This driver supports all of ARECA's SATA/SAS RAID controller cards.
  This is an ARECA-maintained driver by Erich Chen.
  If you have any problems, please mail to: <erich@areca.com.tw>.
  Areca supports Linux RAID config tools.
  Please link <http://www.areca.com.tw>
  
  To compile this driver as a module, choose M here: the
  module will be called arcmsr (modprobe arcmsr).

SCSI_ARXESCSI
  Around 1991, Arxe Systems Limited released a high density floppy
  disc interface for the Acorn Archimedes range, to allow the use of
  HD discs from the then new A5000 on earlier models. This interface
  was either sold on its own or with an integral SCSI controller.
  Technical details on this NCR53c94-based device are available at
  <http://www.cryton.demon.co.uk/acornbits/scsi_arxe.html>
  Say Y here to compile in support for the SCSI controller.

SCSI_BFA_FC
  This bfa driver supports all Brocade PCIe FC/FCOE host adapters.
  
  To compile this driver as a module, choose M here. The module will
  be called bfa.

SCSI_BNX2X_FCOE
  This driver supports FCoE offload for the QLogic devices.

SCSI_BNX2_ISCSI
  This driver supports iSCSI offload for the QLogic NetXtreme II
  devices.

SCSI_BUSLOGIC
  This is support for BusLogic MultiMaster and FlashPoint SCSI Host
  Adapters. Consult the SCSI-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>, and the files
  <file:Documentation/scsi/BusLogic.rst> and
  <file:Documentation/scsi/FlashPoint.rst> for more information.
  Note that support for FlashPoint is only available for 32-bit
  x86 configurations.
  
  To compile this driver as a module, choose M here: the
  module will be called BusLogic.

SCSI_CHELSIO_FCOE
  This driver supports FCoE Offload functionality over
  Chelsio T4-based 10Gb Converged Network Adapters.
  
  For general information about Chelsio and our products, visit
  our website at <http://www.chelsio.com>.
  
  For customer support, please visit our customer support page at
  <http://www.chelsio.com/support.html>.
  
  Please send feedback to <linux-bugs@chelsio.com>.
  
  To compile this driver as a module choose M here; the module
  will be called csiostor.

SCSI_CONSTANTS
  The error messages regarding your SCSI hardware will be easier to
  understand if you say Y here; it will enlarge your kernel by about
  36 KB. If in doubt, say Y.

SCSI_CUMANA_1
  This enables support for the Cumana SCSI I card. If you have an
  Acorn system with one of these, say Y. If unsure, say N.

SCSI_CUMANA_2
  This enables support for the Cumana SCSI II card. If you have an
  Acorn system with one of these, say Y. If unsure, say N.

SCSI_CXGB3_ISCSI
  This driver supports iSCSI offload for the Chelsio T3 devices.

SCSI_CXGB4_ISCSI
  This driver supports iSCSI offload for the Chelsio T4 devices.

SCSI_DC395x
  This driver supports PCI SCSI host adapters based on the ASIC
  TRM-S1040 chip, e.g Tekram DC395(U/UW/F) and DC315(U) variants.
  
  This driver works, but is still in experimental status. So better
  have a bootable disk and a backup in case of emergency.
  
  Documentation can be found in <file:Documentation/scsi/dc395x.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called dc395x.

SCSI_DEBUG
  This pseudo driver simulates one or more hosts (SCSI initiators),
  each with one or more targets, each with one or more logical units.
  Defaults to one of each, creating a small RAM disk device. Many
  parameters found in the /sys/bus/pseudo/drivers/scsi_debug
  directory can be tweaked at run time.
  See <http://sg.danny.cz/sg/sdebug26.html> for more information.
  Mainly used for testing and best as a module. If unsure, say N.

SCSI_DH
  SCSI Device Handlers provide device specific support for
  devices utilized in multipath configurations. Say Y here to
  select support for specific hardware.

SCSI_DH_ALUA
  SCSI Device handler for generic SPC-3 Asymmetric Logical Unit
  Access (ALUA).
  

SCSI_DH_EMC
  If you have a EMC CLARiiON select y. Otherwise, say N.

SCSI_DH_HP_SW
  If you have a HP/COMPAQ MSA device that requires START_STOP to
  be sent to start it and cannot upgrade the firmware then select y.
  Otherwise, say N.

SCSI_DH_RDAC
  If you have a LSI RDAC select y. Otherwise, say N.

SCSI_DMA
  No help

SCSI_DMX3191D
  This is support for Domex DMX3191D SCSI Host Adapters.
  
  To compile this driver as a module, choose M here: the
  module will be called dmx3191d.

SCSI_DPT_I2O
  This driver supports all of Adaptec's I2O based RAID controllers as
  well as the DPT SmartRaid V cards.  This is an Adaptec maintained
  driver by Deanna Bonds.  See <file:Documentation/scsi/dpti.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called dpt_i2o.

SCSI_EESOXSCSI
  This enables support for the EESOX SCSI card. If you have an Acorn
  system with one of these, say Y, otherwise say N.

SCSI_ENCLOSURE
  Enclosures are devices sitting on or in SCSI backplanes that
  manage devices.  If you have a disk cage, the chances are that
  it has an enclosure device.  Selecting this option will just allow
  certain enclosure conditions to be reported and is not required.

SCSI_ESAS2R
  This driver supports the ATTO ExpressSAS R6xx SAS/SATA RAID controllers.

SCSI_ESP_PIO
  No help

SCSI_FC_ATTRS
  If you wish to export transport-specific information about
  each attached FiberChannel device to sysfs, say Y.
  Otherwise, say N.

SCSI_FDOMAIN
  No help

SCSI_FDOMAIN_ISA
  This is support for Future Domain's 16-bit SCSI host adapters
  (TMC-1660/1680, TMC-1650/1670, TMC-1610M/MER/MEX) and other adapters
  with ISA bus based on the Future Domain chipsets (Quantum ISA-200S,
  ISA-250MG; and at least one IBM board).
  
  To compile this driver as a module, choose M here: the
  module will be called fdomain_isa.

SCSI_FDOMAIN_PCI
  This is support for Future Domain's PCI SCSI host adapters (TMC-3260)
  and other adapters with PCI bus based on the Future Domain chipsets
  (Adaptec AHA-2920A).
  
  NOTE: Newer Adaptec AHA-2920C boards use the Adaptec AIC-7850 chip
  and should use the aic7xxx driver ("Adaptec AIC7xxx chipset SCSI
  controller support"). This Future Domain driver works with the older
  Adaptec AHA-2920A boards with a Future Domain chip on them.
  
  To compile this driver as a module, choose M here: the
  module will be called fdomain_pci.

SCSI_FLASHPOINT
  This option allows you to add FlashPoint support to the
  BusLogic SCSI driver. The FlashPoint SCCB Manager code is
  substantial, so users of MultiMaster Host Adapters may not
  wish to include it.

SCSI_GDTH
  Formerly called GDT SCSI Disk Array Controller Support.
  
  This is a driver for RAID/SCSI Disk Array Controllers (EISA/ISA/PCI)
  manufactured by Intel Corporation/ICP vortex GmbH. It is documented
  in the kernel source in <file:drivers/scsi/gdth.c> and
  <file:drivers/scsi/gdth.h>.
  
  To compile this driver as a module, choose M here: the
  module will be called gdth.

SCSI_GENERIC_NCR5380
  This is a driver for old ISA card SCSI controllers based on a
  NCR 5380, 53C80, 53C400, 53C400A, or DTC 436 device.
  Most boards such as the Trantor T130 fit this category, as do
  various 8-bit and 16-bit ISA cards bundled with SCSI scanners.
  
  To compile this driver as a module, choose M here: the
  module will be called g_NCR5380.

SCSI_HISI_SAS
  This driver supports HiSilicon's SAS HBA, including support based
  on platform device

SCSI_HISI_SAS_PCI
  This driver supports HiSilicon's SAS HBA based on PCI device

SCSI_HPSA
  This driver supports HP Smart Array Controllers (circa 2009).
  It is a SCSI alternative to the cciss driver, which is a block
  driver.  Anyone wishing to use HP Smart Array controllers who
  would prefer the devices be presented to linux as SCSI devices,
  rather than as generic block devices should say Y here.

SCSI_HPTIOP
  This option enables support for HighPoint RocketRAID 3xxx/4xxx
  controllers.
  
  To compile this driver as a module, choose M here; the module
  will be called hptiop. If unsure, say N.

SCSI_IBMVFC
  This is the IBM POWER Virtual FC Client
  
  To compile this driver as a module, choose M here: the
  module will be called ibmvfc.

SCSI_IBMVFC_TRACE
  If you say Y here, the driver will trace all commands issued
  to the adapter. Performance impact is minimal. Trace can be
  dumped using /sys/class/scsi_host/hostXX/trace.

SCSI_IBMVSCSI
  This is the IBM POWER Virtual SCSI Client
  
  To compile this driver as a module, choose M here: the
  module will be called ibmvscsi.

SCSI_IBMVSCSIS
  This is the IBM POWER Virtual SCSI Target Server
  This driver uses the SRP protocol for communication between servers
  guest and/or the host that run on the same server.
  More information on VSCSI protocol can be found at www.power.org
  
  The userspace configuration needed to initialize the driver can be
  be found here:
  
  https://github.com/powervm/ibmvscsis/wiki/Configuration
  
  To compile this driver as a module, choose M here: the
  module will be called ibmvscsis.

SCSI_IMM
  This driver supports newer versions of IOMEGA's parallel port ZIP
  drive (a 100 MB removable media device).
  
  Note that you can say N here if you have the SCSI version of the ZIP
  drive: it will be supported automatically if you said Y to the
  generic "SCSI disk support", above.
  
  If you have the ZIP Plus drive or a more recent parallel port ZIP
  drive (if the supplied cable with the drive is labeled "AutoDetect")
  then you should say Y here; if you have an older ZIP drive, say N
  here and Y to "IOMEGA Parallel Port (ppa - older drives)", above.
  
  For more information about this driver and how to use it you should
  read the file <file:Documentation/scsi/ppa.rst>.  You should also read
  the SCSI-HOWTO, which is available from
  <http://www.tldp.org/docs.html#howto>.  If you use this driver,
  you will still be able to use the parallel port for other tasks,
  such as a printer; it is safe to compile both drivers into the
  kernel.
  
  To compile this driver as a module, choose M here: the
  module will be called imm.

SCSI_INIA100
  This is support for the Initio INI-A100U2W SCSI host adapter.
  Please read the SCSI-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>.
  
  To compile this driver as a module, choose M here: the
  module will be called a100u2w.

SCSI_INITIO
  This is support for the Initio 91XXU(W) SCSI host adapter.  Please
  read the SCSI-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>.
  
  To compile this driver as a module, choose M here: the
  module will be called initio.

SCSI_IPR
  This driver supports the IBM Power Linux family RAID adapters.
  This includes IBM pSeries 5712, 5703, 5709, and 570A, as well
  as IBM iSeries 5702, 5703, 5709, and 570A.

SCSI_IPR_DUMP
  If you say Y here, the driver will support adapter crash dump.
  If you enable this support, the iprdump daemon can be used
  to capture adapter failure analysis information.

SCSI_IPR_TRACE
  If you say Y here, the driver will trace all commands issued
  to the adapter. Performance impact is minimal. Trace can be
  dumped using /sys/bus/class/scsi_host/hostXX/trace.

SCSI_IPS
  This is support for the IBM ServeRAID hardware RAID controllers.
  See <http://www.developer.ibm.com/welcome/netfinity/serveraid.html>
  and <http://www-947.ibm.com/support/entry/portal/docdisplay?brand=5000008&lndocid=SERV-RAID>
  for more information.  If this driver does not work correctly
  without modification please contact the author by email at
  <ipslinux@adaptec.com>.
  
  To compile this driver as a module, choose M here: the
  module will be called ips.

SCSI_ISCI
  This driver supports the 6Gb/s SAS capabilities of the storage
  control unit found in the Intel(R) C600 series chipset.

SCSI_ISCSI_ATTRS
  If you wish to export transport-specific information about
  each attached iSCSI device to sysfs, say Y.
  Otherwise, say N.

SCSI_IZIP_EPP16
  EPP (Enhanced Parallel Port) is a standard for parallel ports which
  allows them to act as expansion buses that can handle up to 64
  peripheral devices.
  
  Some parallel port chipsets are slower than their motherboard, and
  so we have to control the state of the chipset's FIFO queue every
  now and then to avoid data loss. This will be done if you say Y
  here.
  
  Generally, saying Y is the safe option and slows things down a bit.

SCSI_IZIP_SLOW_CTR
  Some parallel ports are known to have excessive delays between
  changing the parallel port control register and good data being
  available on the parallel port data/status register. This option
  forces a small delay (1.0 usec to be exact) after changing the
  control register to let things settle out. Enabling this option may
  result in a big drop in performance but some very old parallel ports
  (found in 386 vintage machines) will not work properly.
  
  Generally, saying N is fine.

SCSI_LASI700
  This is a driver for the SCSI controller in the Lasi chip found in
  many PA-RISC workstations & servers.  If you do not know whether you
  have a Lasi chip, it is safe to say "Y" here.

SCSI_LOGGING
  This turns on a logging facility that can be used to debug a number
  of SCSI related problems.
  
  If you say Y here, no logging output will appear by default, but you
  can enable logging by saying Y to "/proc file system support" and
  "Sysctl support" below and executing the command
  
  echo <bitmask> > /proc/sys/dev/scsi/logging_level
  
  where <bitmask> is a four byte value representing the logging type
  and logging level for each type of logging selected.
  
  There are a number of logging types and you can find them in the
  source at <file:drivers/scsi/scsi_logging.h>. The logging levels
  are also described in that file and they determine the verbosity of
  the logging for each logging type.
  
  If you say N here, it may be harder to track down some types of SCSI
  problems. If you say Y here your kernel will be somewhat larger, but
  there should be no noticeable performance impact as long as you have
  logging turned off.

SCSI_LOWLEVEL
  No help

SCSI_LOWLEVEL_PCMCIA
  No help

SCSI_LPFC
  This lpfc driver supports the Emulex LightPulse
  Family of Fibre Channel PCI host adapters.

SCSI_LPFC_DEBUG_FS
  This makes debugging information from the lpfc driver
  available via the debugfs filesystem.

SCSI_MAC53C94
  On Power Macintoshes (and clones) with two SCSI buses, the external
  SCSI bus is usually controlled by a 53C94 SCSI bus adaptor. Older
  machines which only have one SCSI bus, such as the 7200, also use
  the 53C94. Say Y to include support for the 53C94.
  
  To compile this driver as a module, choose M here: the
  module will be called mac53c94.

SCSI_MAC_ESP
  This is the NCR 53c9x SCSI controller found on most of the 68040
  based Macintoshes.
  
  To compile this driver as a module, choose M here: the module
  will be called mac_esp.

SCSI_MESH
  Many Power Macintoshes and clones have a MESH (Macintosh Enhanced
  SCSI Hardware) SCSI bus adaptor (the 7200 doesn't, but all of the
  other Power Macintoshes do). Say Y to include support for this SCSI
  adaptor.
  
  To compile this driver as a module, choose M here: the
  module will be called mesh.

SCSI_MESH_RESET_DELAY_MS
  No help

SCSI_MESH_SYNC_RATE
  On Power Macintoshes (and clones) where the MESH SCSI bus adaptor
  drives a bus which is entirely internal to the machine (such as the
  7500, 7600, 8500, etc.), the MESH is capable of synchronous
  operation at up to 10 MB/s. On machines where the SCSI bus
  controlled by the MESH can have external devices connected, it is
  usually rated at 5 MB/s. 5 is a safe value here unless you know the
  MESH SCSI bus is internal only; in that case you can say 10. Say 0
  to disable synchronous operation.

SCSI_MOD
  No help

SCSI_MPT2SAS
  Dummy config option for backwards compatibility: configure the MPT3SAS
  driver instead.

SCSI_MPT2SAS_MAX_SGE
  This option allows you to specify the maximum number of scatter-
  gather entries per I/O. The driver default is 128, which matches
  MAX_PHYS_SEGMENTS in most kernels.  However in SuSE kernels this
  can be 256. However, it may decreased down to 16.  Decreasing this
  parameter will reduce memory requirements on a per controller instance.

SCSI_MPT3SAS
  This driver supports PCI-Express SAS 12Gb/s Host Adapters.

SCSI_MPT3SAS_MAX_SGE
  This option allows you to specify the maximum number of scatter-
  gather entries per I/O. The driver default is 128, which matches
  MAX_PHYS_SEGMENTS in most kernels.  However in SuSE kernels this
  can be 256. However, it may decreased down to 16.  Decreasing this
  parameter will reduce memory requirements on a per controller instance.

SCSI_MVSAS
  This driver supports Marvell's SAS/SATA 3Gb/s PCI-E 88SE64XX and 6Gb/s
  PCI-E 88SE94XX chip based host adapters.

SCSI_MVSAS_DEBUG
  Compiles the 88SE64XX/88SE94XX driver in debug mode.  In debug mode,
  the driver prints some messages to the console.

SCSI_MVSAS_TASKLET
  Compiles the 88SE64xx/88SE94xx driver in interrupt tasklet mode.In this mode,
  the interrupt will schedule a tasklet.

SCSI_MVUMI
  Module for Marvell Universal Message Interface(UMI) driver
  
  To compile this driver as a module, choose M here: the
  module will be called mvumi.

SCSI_MYRB
  This driver adds support for the Mylex DAC960, AcceleRAID, and
  eXtremeRAID PCI RAID controllers. This driver supports the
  older, block based interface.
  This driver is a reimplementation of the original DAC960
  driver. If you have used the DAC960 driver you should enable
  this module.
  
  To compile this driver as a module, choose M here: the
  module will be called myrb.

SCSI_MYRS
  This driver adds support for the Mylex DAC960, AcceleRAID, and
  eXtremeRAID PCI RAID controllers.  This driver supports the
  newer, SCSI-based interface only.
  This driver is a reimplementation of the original DAC960
  driver. If you have used the DAC960 driver you should enable
  this module.
  
  To compile this driver as a module, choose M here: the
  module will be called myrs.

SCSI_NCR53C8XX_DEFAULT_TAGS
  "Tagged command queuing" is a feature of SCSI-2 which improves
  performance: the host adapter can send several SCSI commands to a
  device's queue even if previous commands haven't finished yet.
  Because the device is intelligent, it can optimize its operations
  (like head positioning) based on its own request queue. Some SCSI
  devices don't implement this properly; if you want to disable this
  feature, enter 0 or 1 here (it doesn't matter which).
  
  The default value is 8 and should be supported by most hard disks.
  This value can be overridden from the boot command line using the
  'tags' option as follows (example):
  'ncr53c8xx=tags:4/t2t3q16/t0u2q10' will set default queue depth to
  4, set queue depth to 16 for target 2 and target 3 on controller 0
  and set queue depth to 10 for target 0 / lun 2 on controller 1.
  
  The normal answer therefore is to go with the default 8 and to use
  a boot command line option for devices that need to use a different
  command queue depth.
  
  There is no safe option other than using good SCSI devices.

SCSI_NCR53C8XX_MAX_TAGS
  This option allows you to specify the maximum number of commands
  that can be queued to any device, when tagged command queuing is
  possible. The default value is 32. Minimum is 2, maximum is 64.
  Modern hard disks are able to support 64 tags and even more, but
  do not seem to be faster when more than 32 tags are being used.
  
  So, the normal answer here is to go with the default value 32 unless
  you are using very large hard disks with large cache (>= 1 MB) that
  are able to take advantage of more than 32 tagged commands.
  
  There is no safe option and the default answer is recommended.

SCSI_NCR53C8XX_NO_DISCONNECT
  This option is only provided for safety if you suspect some SCSI
  device of yours to not support properly the target-disconnect
  feature. In that case, you would say Y here. In general however, to
  not allow targets to disconnect is not reasonable if there is more
  than 1 device on a SCSI bus. The normal answer therefore is N.

SCSI_NCR53C8XX_SYNC
  The SCSI Parallel Interface-2 Standard defines 5 classes of transfer
  rates: FAST-5, FAST-10, FAST-20, FAST-40 and FAST-80.  The numbers
  are respectively the maximum data transfer rates in mega-transfers
  per second for each class.  For example, a FAST-20 Wide 16 device is
  able to transfer data at 20 million 16 bit packets per second for a
  total rate of 40 MB/s.
  
  You may specify 0 if you want to only use asynchronous data
  transfers. This is the safest and slowest option. Otherwise, specify
  a value between 5 and 80, depending on the capability of your SCSI
  controller.  The higher the number, the faster the data transfer.
  Note that 80 should normally be ok since the driver decreases the
  value automatically according to the controller's capabilities.
  
  Your answer to this question is ignored for controllers with NVRAM,
  since the driver will get this information from the user set-up.  It
  also can be overridden using a boot setup option, as follows
  (example): 'ncr53c8xx=sync:12' will allow the driver to negotiate
  for FAST-20 synchronous data transfer (20 mega-transfers per
  second).
  
  The normal answer therefore is not to go with the default but to
  select the maximum value 80 allowing the driver to use the maximum
  value supported by each controller. If this causes problems with
  your SCSI devices, you should come back and decrease the value.
  
  There is no safe option other than using good cabling, right
  terminations and SCSI conformant devices.

SCSI_NETLINK
  No help

SCSI_NSP32
  This is support for the Workbit NinjaSCSI-32Bi/UDE PCI/Cardbus
  SCSI host adapter. Please read the SCSI-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>.
  
  To compile this driver as a module, choose M here: the
  module will be called nsp32.

SCSI_OAK1
  This enables support for the Oak SCSI card. If you have an Acorn
  system with one of these, say Y. If unsure, say N.
  

SCSI_PM8001
  This driver supports PMC-Sierra PCIE SAS/SATA 8x6G SPC 8001 chip
  based host adapters.

SCSI_PMCRAID
  This driver supports the PMC SIERRA MaxRAID adapters.

SCSI_POWERTECSCSI
  This enables support for the Powertec SCSI card on Acorn systems. If
  you have one of these, say Y. If unsure, say N.

SCSI_PPA
  This driver supports older versions of IOMEGA's parallel port ZIP
  drive (a 100 MB removable media device).
  
  Note that you can say N here if you have the SCSI version of the ZIP
  drive: it will be supported automatically if you said Y to the
  generic "SCSI disk support", above.
  
  If you have the ZIP Plus drive or a more recent parallel port ZIP
  drive (if the supplied cable with the drive is labeled "AutoDetect")
  then you should say N here and Y to "IOMEGA parallel port (imm -
  newer drives)", below.
  
  For more information about this driver and how to use it you should
  read the file <file:Documentation/scsi/ppa.rst>.  You should also read
  the SCSI-HOWTO, which is available from
  <http://www.tldp.org/docs.html#howto>.  If you use this driver,
  you will still be able to use the parallel port for other tasks,
  such as a printer; it is safe to compile both drivers into the
  kernel.
  
  To compile this driver as a module, choose M here: the
  module will be called ppa.

SCSI_PROC_FS
  This option enables support for the various files in
  /proc/scsi.  In Linux 2.6 this has been superseded by
  files in sysfs but many legacy applications rely on this.
  
  If unsure say Y.

SCSI_QLA_FC
  This qla2xxx driver supports all QLogic Fibre Channel
  PCI and PCIe host adapters.
  
  By default, firmware for the ISP parts will be loaded
  via the Firmware Loader interface.
  
  ISP               Firmware Filename
  ----------        -----------------
  21xx              ql2100_fw.bin
  22xx              ql2200_fw.bin
  2300, 2312, 6312  ql2300_fw.bin
  2322, 6322        ql2322_fw.bin
  24xx, 54xx        ql2400_fw.bin
  25xx              ql2500_fw.bin
  
  Upon request, the driver caches the firmware image until
  the driver is unloaded.
  
  Firmware images can be retrieved from:
  
          http://ldriver.qlogic.com/firmware/
  
  They are also included in the linux-firmware tree as well.

SCSI_QLA_ISCSI
  This driver supports the QLogic 40xx (ISP4XXX), 8022 (ISP82XX)
  and 8032 (ISP83XX) iSCSI host adapter family.

SCSI_QLOGICPTI
  This driver supports SBUS SCSI controllers from PTI or QLogic. These
  controllers are known under Solaris as qpti and in the openprom as
  PTI,ptisp or QLGC,isp. Note that PCI QLogic SCSI controllers are
  driven by a different driver.
  
  To compile this driver as a module, choose M here: the
  module will be called qlogicpti.

SCSI_QLOGIC_1280
  Say Y if you have a QLogic ISP1240/1x80/1x160 SCSI host adapter.
  
  To compile this driver as a module, choose M here: the
  module will be called qla1280.

SCSI_QLOGIC_FAS
  This is a driver for the ISA, VLB, and PCMCIA versions of the Qlogic
  FastSCSI! cards as well as any other card based on the FASXX chip
  (including the Control Concepts SCSI/IDE/SIO/PIO/FDC cards).
  
  This driver does NOT support the PCI versions of these cards. The
  PCI versions are supported by the Qlogic ISP driver ("Qlogic ISP
  SCSI support"), below.
  
  Information about this driver is contained in
  <file:Documentation/scsi/qlogicfas.rst>.  You should also read the
  SCSI-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>.
  
  To compile this driver as a module, choose M here: the
  module will be called qlogicfas.

SCSI_SAS_ATA
  Builds in ATA support into libsas.  Will necessitate
  the loading of libata along with libsas.

SCSI_SAS_ATTRS
  If you wish to export transport-specific information about
  each attached SAS device to sysfs, say Y.

SCSI_SAS_HOST_SMP
  Allows sas hosts to receive SMP frames.  Selecting this
  option builds an SMP interpreter into libsas.  Say
  N here if you want to save the few kb this consumes.

SCSI_SAS_LIBSAS
  This provides transport specific helpers for SAS drivers which
  use the domain device construct (like the aic94xxx).

SCSI_SCAN_ASYNC
  The SCSI subsystem can probe for devices while the rest of the
  system continues booting, and even probe devices on different
  busses in parallel, leading to a significant speed-up.
  
  You can override this choice by specifying "scsi_mod.scan=sync"
  or async on the kernel's command line.
  
  Note that this setting also affects whether resuming from
  system suspend will be performed asynchronously.

SCSI_SIM710
  This driver is for NCR53c710 based SCSI host adapters.
  
  It currently supports Compaq EISA cards.

SCSI_SMARTPQI
  This driver supports Microsemi PQI controllers.
  
  <http://www.microsemi.com>
  
  To compile this driver as a module, choose M here: the
  module will be called smartpqi.
  
  Note: the aacraid driver will not manage a smartpqi
        controller. You need to enable smartpqi for smartpqi
        controllers. For more information, please see
        Documentation/scsi/smartpqi.rst

SCSI_SNIC
  This is support for the Cisco PCI-Express SCSI HBA.
  
  To compile this driver as a module, choose M here and read
  <file:Documentation/scsi/scsi.rst>.
  The module will be called snic.

SCSI_SNIC_DEBUG_FS
  This enables to list debugging information from SNIC Driver
  available via debugfs file system

SCSI_SNI_53C710
  This is a driver for the onboard SCSI controller found in older
  SNI RM workstations & servers.

SCSI_SPI_ATTRS
  If you wish to export transport-specific information about
  each attached SCSI device to sysfs, say Y.  Otherwise, say N.

SCSI_SRP_ATTRS
  If you wish to export transport-specific information about
  each attached SRP device to sysfs, say Y.

SCSI_STEX
  This driver supports Promise SuperTrak EX series storage controllers.
  
  Promise provides Linux RAID configuration utility for these
  controllers. Please visit <http://www.promise.com> to download.
  
  To compile this driver as a module, choose M here: the
  module will be called stex.

SCSI_SUNESP
  This is the driver for the Sun ESP SCSI host adapter. The ESP
  chipset is present in most SPARC SBUS-based computers and
  supports the Emulex family of ESP SCSI chips (esp100, esp100A,
  esp236, fas101, fas236) as well as the Qlogic fas366 SCSI chip.
  
  To compile this driver as a module, choose M here: the
  module will be called sun_esp.

SCSI_SYM53C8XX_2
  This driver supports the whole NCR53C8XX/SYM53C8XX family of
  PCI-SCSI controllers.  It also supports the subset of LSI53C10XX
  Ultra-160 controllers that are based on the SYM53C8XX SCRIPTS
  language.  It does not support LSI53C10XX Ultra-320 PCI-X SCSI
  controllers; you need to use the Fusion MPT driver for that.
  
  Please read <file:Documentation/scsi/sym53c8xx_2.rst> for more
  information.

SCSI_SYM53C8XX_DEFAULT_TAGS
  This is the default value of the command queue depth the
  driver will announce to the generic SCSI layer for devices
  that support tagged command queueing. This value can be changed
  from the boot command line.  This is a soft limit that cannot
  exceed CONFIG_SCSI_SYM53C8XX_MAX_TAGS.

SCSI_SYM53C8XX_DMA_ADDRESSING_MODE
  This option only applies to PCI-SCSI chips that are PCI DAC
  capable (875A, 895A, 896, 1010-33, 1010-66, 1000).
  
  When set to 0, the driver will program the chip to only perform
  32-bit DMA.  When set to 1, the chip will be able to perform DMA
  to addresses up to 1TB.  When set to 2, the driver supports the
  full 64-bit DMA address range, but can only address 16 segments
  of 4 GB each.  This limits the total addressable range to 64 GB.
  
  Most machines with less than 4GB of memory should use a setting
  of 0 for best performance.  If your machine has 4GB of memory
  or more, you should set this option to 1 (the default).
  
  The still experimental value 2 (64 bit DMA addressing with 16
  x 4GB segments limitation) can be used on systems that require
  PCI address bits past bit 39 to be set for the addressing of
  memory using PCI DAC cycles.

SCSI_SYM53C8XX_MAX_TAGS
  This option allows you to specify the maximum number of commands
  that can be queued to any device, when tagged command queuing is
  possible. The driver supports up to 256 queued commands per device.
  This value is used as a compiled-in hard limit.

SCSI_SYM53C8XX_MMIO
  Memory mapped IO is faster than Port IO.  Most people should
  answer Y here, but some machines may have problems.  If you have
  to answer N here, please report the problem to the maintainer.

SCSI_UFSHCD
  This selects the support for UFS devices in Linux, say Y and make
    sure that you know the name of your UFS host adapter (the card
    inside your computer that "speaks" the UFS protocol, also
    called UFS Host Controller), because you will be asked for it.
    The module will be called ufshcd.
  
    To compile this driver as a module, choose M here and read
    <file:Documentation/scsi/ufs.rst>.
    However, do not compile this as a module if your root file system
    (the one containing the directory /) is located on a UFS device.

SCSI_UFSHCD_PCI
  This selects the PCI UFS Host Controller Interface. Select this if
  you have UFS Host Controller with PCI Interface.
  
    If you have a controller with this interface, say Y or M here.
  
    If unsure, say N.

SCSI_UFSHCD_PLATFORM
  This selects the UFS host controller support. Select this if
  you have an UFS controller on Platform bus.
  
  If you have a controller with this interface, say Y or M here.
  
    If unsure, say N.

SCSI_UFS_BSG
  Universal Flash Storage (UFS) is SCSI transport specification for
  accessing flash storage on digital cameras, mobile phones and
  consumer electronic devices.
  A UFS controller communicates with a UFS device by exchanging
  UFS Protocol Information Units (UPIUs).
  UPIUs can not only be used as a transport layer for the SCSI protocol
  but are also used by the UFS native command set.
  This transport driver supports exchanging UFS protocol information units
  with a UFS device. See also the ufshcd driver, which is a SCSI driver
  that supports UFS devices.
  
  Select this if you need a bsg device node for your UFS controller.
  If unsure, say N.

SCSI_UFS_CDNS_PLATFORM
  This selects the Cadence-specific additions to UFSHCD platform driver.
  
    If unsure, say N.

SCSI_UFS_CRYPTO
  Enable Crypto Engine Support in UFS.
  Enabling this makes it possible for the kernel to use the crypto
  capabilities of the UFS device (if present) to perform crypto
  operations on data being transferred to/from the device.

SCSI_UFS_DWC_TC_PCI
  Synopsys Test Chip is a PHY for prototyping purposes.
  
  If unsure, say N.

SCSI_UFS_DWC_TC_PLATFORM
  Synopsys Test Chip is a PHY for prototyping purposes.
  
  If unsure, say N.

SCSI_UFS_EXYNOS
  This selects the EXYNOS specific additions to UFSHCD platform driver.
  UFS host on EXYNOS includes HCI and UNIPRO layer, and associates with
  UFS-PHY driver.
  
  Select this if you have UFS host controller on EXYNOS chipset.
  If unsure, say N.

SCSI_UFS_HISI
  This selects the Hisilicon specific additions to UFSHCD platform driver.
  
  Select this if you have UFS controller on Hisilicon chipset.
  If unsure, say N.

SCSI_UFS_MEDIATEK
  This selects the Mediatek specific additions to UFSHCD platform driver.
  UFS host on Mediatek needs some vendor specific configuration before
  accessing the hardware which includes PHY configuration and vendor
  specific registers.
  
  Select this if you have UFS controller on Mediatek chipset.
  
  If unsure, say N.

SCSI_UFS_QCOM
  This selects the QCOM specific additions to UFSHCD platform driver.
  UFS host on QCOM needs some vendor specific configuration before
  accessing the hardware which includes PHY configuration and vendor
  specific registers.
  
  Select this if you have UFS controller on QCOM chipset.
  If unsure, say N.

SCSI_UFS_TI_J721E
  This selects driver for TI glue layer for Cadence UFS Host
  Controller IP.
  
  Selects this if you have TI platform with UFS controller.
  If unsure, say N.

SCSI_VIRTIO
  This is the virtual HBA driver for virtio.  If the kernel will
  be used in a virtual machine, say Y or M.

SCSI_WD719X
  This is a driver for Western Digital WD7193, WD7197 and WD7296 PCI
  SCSI controllers (based on WD33C296A chip).

SCSI_ZALON
  The Zalon is a GSC/HSC bus interface chip that sits between the
  PA-RISC processor and the NCR 53c720 SCSI controller on C100,
  C110, J200, J210 and some D, K & R-class machines.  It's also
  used on the add-in Bluefish, Barracuda & Shrike SCSI cards.
  Say Y here if you have one of these machines or cards.

SCSI_ZORRO7XX
  Support for various NCR53c710-based SCSI controllers on Zorro
  expansion boards for the Amiga.
  This includes:
    - the Amiga 4091 Zorro III SCSI-2 controller,
    - the MacroSystem Development's WarpEngine Amiga SCSI-2 controller
      (info at
      <http://www.lysator.liu.se/amiga/ar/guide/ar310.guide?FEATURE5>),
    - the SCSI controller on the Phase5 Blizzard PowerUP 603e+
      accelerator card for the Amiga 1200,
    - the SCSI controller on the GVP Turbo 040/060 accelerator.

SCSI_ZORRO_ESP
  Support for various NCR53C9x (ESP) based SCSI controllers on Zorro
  expansion boards for the Amiga.
  This includes:
    - the Phase5 Blizzard 1230 II and IV SCSI controllers,
    - the Phase5 Blizzard 2060 SCSI controller,
    - the Phase5 Blizzard Cyberstorm and Cyberstorm II SCSI
      controllers,
    - the Fastlane Zorro III SCSI controller.

SCTP_COOKIE_HMAC_MD5
  Enable optional MD5 hmac based SCTP cookie generation

SCTP_COOKIE_HMAC_SHA1
  Enable optional SHA1 hmac based SCTP cookie generation

SCTP_DBG_OBJCNT
  If you say Y, this will enable debugging support for counting the
  type of objects that are currently allocated.  This is useful for
  identifying memory leaks. This debug information can be viewed by
  'cat /proc/net/sctp/sctp_dbg_objcnt'
  
  If unsure, say N

SCTP_DEFAULT_COOKIE_HMAC_MD5
  Enable optional MD5 hmac based SCTP cookie generation

SCTP_DEFAULT_COOKIE_HMAC_NONE
  Use no hmac algorithm in SCTP cookie generation

SCTP_DEFAULT_COOKIE_HMAC_SHA1
  Enable optional SHA1 hmac based SCTP cookie generation

SC_CAMCC_7180
  Support for the camera clock controller on Qualcomm Technologies, Inc
  SC7180 devices.
  Say Y if you want to support camera devices and functionality such as
  capturing pictures.

SC_DISPCC_7180
  Support for the display clock controller on Qualcomm Technologies, Inc
  SC7180 devices.
  Say Y if you want to support display devices and functionality such as
  splash screen.

SC_GCC_7180
  Support for the global clock controller on SC7180 devices.
  Say Y if you want to use peripheral devices such as UART, SPI,
  I2C, USB, UFS, SDCC, etc.

SC_GPUCC_7180
  Support for the graphics clock controller on SC7180 devices.
  Say Y if you want to support graphics controller devices and
  functionality such as 3D graphics.

SC_LPASS_CORECC_7180
  Support for the LPASS(Low Power Audio Subsystem) core clock controller
  on SC7180 devices.
  Say Y if you want to use LPASS clocks and power domains of the LPASS
  core clock controller.

SC_MSS_7180
  Support for the Modem Subsystem clock controller on Qualcomm
  Technologies, Inc on SC7180 devices.
  Say Y if you want to use the Modem branch clocks of the Modem
  subsystem clock controller to reset the MSS subsystem.

SC_VIDEOCC_7180
  Support for the video clock controller on SC7180 devices.
  Say Y if you want to support video devices and functionality such as
  video encode and decode.

SCx200
  This provides basic support for National Semiconductor's
  (now AMD's) Geode processors.  The driver probes for the
  PCI-IDs of several on-chip devices, so its a good dependency
  for other scx200_* drivers.
  
  If compiled as a module, the driver is named scx200.

SCx200HR_TIMER
  This driver provides a clocksource built upon the on-chip
  27MHz high-resolution timer.  Its also a workaround for
  NSC Geode SC-1100's buggy TSC, which loses time when the
  processor goes idle (as is done by the scheduler).  The
  other workaround is idle=poll boot option.

SCx200_ACB
  Enable the use of the ACCESS.bus controllers on the Geode SCx200 and
  SC1100 processors and the CS5535 and CS5536 Geode companion devices.
  
  If you don't know what to do here, say N.
  
  This support is also available as a module.  If so, the module
  will be called scx200_acb.

SCx200_GPIO
  Give userspace access to the GPIO pins on the National
  Semiconductor SCx200 processors.
  
  If compiled as a module, it will be called scx200_gpio.

SCx200_WDT
  Enable the built-in watchdog timer support on the National
  Semiconductor SCx200 processors.
  
  If compiled as a module, it will be called scx200_wdt.

SDIO_UART
  SDIO function driver for SDIO cards that implements the UART
  class, as well as the GPS class which appears like a UART.

SDMA_VERBOSITY
  This is a configuration flag to enable verbose
  SDMA debug

SDM_CAMCC_845
  Support for the camera clock controller on SDM845 devices.
  Say Y if you want to support camera devices and camera functionality.

SDM_DISPCC_845
  Support for the display clock controller on Qualcomm Technologies, Inc
  SDM845 devices.
  Say Y if you want to support display devices and functionality such as
  splash screen.

SDM_GCC_660
  Support for the global clock controller on SDM660 devices.
  Say Y if you want to use peripheral devices such as UART, SPI,
  i2C, USB, UFS, SDDC, PCIe, etc.

SDM_GCC_845
  Support for the global clock controller on SDM845 devices.
  Say Y if you want to use peripheral devices such as UART, SPI,
  i2C, USB, UFS, SDDC, PCIe, etc.

SDM_GPUCC_845
  Support for the graphics clock controller on SDM845 devices.
  Say Y if you want to support graphics controller devices and
  functionality such as 3D graphics.

SDM_LPASSCC_845
  Support for the LPASS clock controller on SDM845 devices.
  Say Y if you want to use the LPASS branch clocks of the LPASS clock
  controller to reset the LPASS subsystem.

SDM_VIDEOCC_845
  Support for the video clock controller on SDM845 devices.
  Say Y if you want to support video devices and functionality such as
  video encode and decode.

SDR_MAX2175
  Support for Maxim 2175 tuner. It is an advanced analog/digital
  radio receiver with RF-to-Bits front-end designed for SDR solutions.
  
  To compile this driver as a module, choose M here; the
  module will be called max2175.

SDR_PLATFORM_DRIVERS
  Say Y here to enable support for platform-specific SDR Drivers.

SDX_GCC_55
  Support for the global clock controller on SDX55 devices.
  Say Y if you want to use peripheral devices such as UART,
  SPI, I2C, USB, SD/UFS, PCIe etc.

SD_ADC_MODULATOR
  Select this option to enables sigma delta modulator. This driver can
  support generic sigma delta modulators.
  
  This driver can also be built as a module.  If so, the module
  will be called sd_adc_modulator.

SEALEVEL_4021
  This is a driver for the Sealevel Systems ACB 56 serial I/O adapter.
  
  The driver will be compiled as a module: the
  module will be called sealevel.

SECCOMP
  This kernel feature is useful for number crunching applications
  that may need to handle untrusted bytecode during their
  execution. By using pipes or other transports made available
  to the process as file descriptors supporting the read/write
  syscalls, it's possible to isolate those applications in their
  own address space using seccomp. Once seccomp is enabled via
  prctl(PR_SET_SECCOMP) or the seccomp() syscall, it cannot be
  disabled and the task is only allowed to execute a few safe
  syscalls defined by each seccomp mode.
  
  If unsure, say Y.

SECCOMP_CACHE_DEBUG
  This enables the /proc/pid/seccomp_cache interface to monitor
  seccomp cache data. The file format is subject to change. Reading
  the file requires CAP_SYS_ADMIN.
  
  This option is for debugging only. Enabling presents the risk that
  an adversary may be able to infer the seccomp filter logic.
  
  If unsure, say N.

SECCOMP_FILTER
  Enable tasks to build secure computing environments defined
  in terms of Berkeley Packet Filter programs which implement
  task-defined system call filtering polices.
  
  See Documentation/userspace-api/seccomp_filter.rst for details.

SECONDARY_TRUSTED_KEYRING
  If set, provide a keyring to which extra keys may be added, provided
  those keys are not blacklisted and are vouched for by a key built
  into the kernel or already in the secondary trusted keyring.

SECTION_MISMATCH_WARN_ONLY
  If you say N here, the build process will fail if there are any
  section mismatch, instead of just throwing warnings.
  
  If unsure, say Y.

SECURITY
  This allows you to choose different security modules to be
  configured into your kernel.
  
  If this option is not selected, the default Linux security
  model will be used.
  
  If you are unsure how to answer this question, answer N.

SECURITYFS
  This will build the securityfs filesystem.  It is currently used by
  various security modules (AppArmor, IMA, SafeSetID, TOMOYO, TPM).
  
  If you are unsure how to answer this question, answer N.

SECURITY_APPARMOR
  This enables the AppArmor security module.
  Required userspace tools (if they are not included in your
  distribution) and further information may be found at
  http://apparmor.wiki.kernel.org
  
  If you are unsure how to answer this question, answer N.

SECURITY_APPARMOR_DEBUG
  Build apparmor with debugging logic in apparmor. Not all
  debugging logic will necessarily be enabled. A submenu will
  provide fine grained control of the debug options that are
  available.

SECURITY_APPARMOR_DEBUG_ASSERTS
  Enable code assertions made with AA_BUG. These are primarily
  function entry preconditions but also exist at other key
  points. If the assert is triggered it will trigger a WARN
  message.

SECURITY_APPARMOR_DEBUG_MESSAGES
  Set the default value of the apparmor.debug kernel parameter.
  When enabled, various debug messages will be logged to
  the kernel message buffer.

SECURITY_APPARMOR_HASH
  This option selects whether introspection of loaded policy
  is available to userspace via the apparmor filesystem.

SECURITY_APPARMOR_HASH_DEFAULT
  This option selects whether sha1 hashing of loaded policy
  is enabled by default. The generation of sha1 hashes for
  loaded policy provide system administrators a quick way
  to verify that policy in the kernel matches what is expected,
  however it can slow down policy load on some devices. In
  these cases policy hashing can be disabled by default and
  enabled only if needed.

SECURITY_APPARMOR_KUNIT_TEST
  This builds the AppArmor KUnit tests.
  
  KUnit tests run during boot and output the results to the debug log
  in TAP format (https://testanything.org/). Only useful for kernel devs
  running KUnit test harness and are not for inclusion into a
  production build.
  
  For more information on KUnit and unit tests in general please refer
  to the KUnit documentation in Documentation/dev-tools/kunit/.
  
  If unsure, say N.

SECURITY_DMESG_RESTRICT
  This enforces restrictions on unprivileged users reading the kernel
  syslog via dmesg(8).
  
  If this option is not selected, no restrictions will be enforced
  unless the dmesg_restrict sysctl is explicitly set to (1).
  
  If you are unsure how to answer this question, answer N.

SECURITY_INFINIBAND
  This enables the Infiniband security hooks.
  If enabled, a security module can use these hooks to
  implement Infiniband access controls.
  If you are unsure how to answer this question, answer N.

SECURITY_LOADPIN
  Any files read through the kernel file reading interface
  (kernel modules, firmware, kexec images, security policy)
  can be pinned to the first filesystem used for loading. When
  enabled, any files that come from other filesystems will be
  rejected. This is best used on systems without an initrd that
  have a root filesystem backed by a read-only device such as
  dm-verity or a CDROM.

SECURITY_LOADPIN_ENFORCE
  If selected, LoadPin will enforce pinning at boot. If not
  selected, it can be enabled at boot with the kernel parameter
  "loadpin.enforce=1".

SECURITY_LOCKDOWN_LSM
  Build support for an LSM that enforces a coarse kernel lockdown
  behaviour.

SECURITY_LOCKDOWN_LSM_EARLY
  Enable the lockdown LSM early in boot. This is necessary in order
  to ensure that lockdown enforcement can be carried out on kernel
  boot parameters that are otherwise parsed before the security
  subsystem is fully initialised. If enabled, lockdown will
  unconditionally be called before any other LSMs.

SECURITY_NETWORK
  This enables the socket and networking security hooks.
  If enabled, a security module can use these hooks to
  implement socket and networking access controls.
  If you are unsure how to answer this question, answer N.

SECURITY_NETWORK_XFRM
  This enables the XFRM (IPSec) networking security hooks.
  If enabled, a security module can use these hooks to
  implement per-packet access controls based on labels
  derived from IPSec policy.  Non-IPSec communications are
  designated as unlabelled, and only sockets authorized
  to communicate unlabelled data can send without using
  IPSec.
  If you are unsure how to answer this question, answer N.

SECURITY_PATH
  This enables the security hooks for pathname based access control.
  If enabled, a security module can use these hooks to
  implement pathname based access controls.
  If you are unsure how to answer this question, answer N.

SECURITY_SAFESETID
  SafeSetID is an LSM module that gates the setid family of syscalls to
  restrict UID/GID transitions from a given UID/GID to only those
  approved by a system-wide whitelist. These restrictions also prohibit
  the given UIDs/GIDs from obtaining auxiliary privileges associated
  with CAP_SET{U/G}ID, such as allowing a user to set up user namespace
  UID mappings.
  
  If you are unsure how to answer this question, answer N.

SECURITY_SELINUX
  This selects NSA Security-Enhanced Linux (SELinux).
  You will also need a policy configuration and a labeled filesystem.
  If you are unsure how to answer this question, answer N.

SECURITY_SELINUX_AVC_STATS
  This option collects access vector cache statistics to
  /sys/fs/selinux/avc/cache_stats, which may be monitored via
  tools such as avcstat.

SECURITY_SELINUX_BOOTPARAM
  This option adds a kernel parameter 'selinux', which allows SELinux
  to be disabled at boot.  If this option is selected, SELinux
  functionality can be disabled with selinux=0 on the kernel
  command line.  The purpose of this option is to allow a single
  kernel image to be distributed with SELinux built in, but not
  necessarily enabled.
  
  If you are unsure how to answer this question, answer N.

SECURITY_SELINUX_CHECKREQPROT_VALUE
  This option sets the default value for the 'checkreqprot' flag
  that determines whether SELinux checks the protection requested
  by the application or the protection that will be applied by the
  kernel (including any implied execute for read-implies-exec) for
  mmap and mprotect calls.  If this option is set to 0 (zero),
  SELinux will default to checking the protection that will be applied
  by the kernel.  If this option is set to 1 (one), SELinux will
  default to checking the protection requested by the application.
  The checkreqprot flag may be changed from the default via the
  'checkreqprot=' boot parameter.  It may also be changed at runtime
  via /sys/fs/selinux/checkreqprot if authorized by policy.
  
  WARNING: this option is deprecated and will be removed in a future
  kernel release.
  
  If you are unsure how to answer this question, answer 0.

SECURITY_SELINUX_DEVELOP
  This enables the development support option of NSA SELinux,
  which is useful for experimenting with SELinux and developing
  policies.  If unsure, say Y.  With this option enabled, the
  kernel will start in permissive mode (log everything, deny nothing)
  unless you specify enforcing=1 on the kernel command line.  You
  can interactively toggle the kernel between enforcing mode and
  permissive mode (if permitted by the policy) via
  /sys/fs/selinux/enforce.

SECURITY_SELINUX_DISABLE
  This option enables writing to a selinuxfs node 'disable', which
  allows SELinux to be disabled at runtime prior to the policy load.
  SELinux will then remain disabled until the next boot.
  This option is similar to the selinux=0 boot parameter, but is to
  support runtime disabling of SELinux, e.g. from /sbin/init, for
  portability across platforms where boot parameters are difficult
  to employ.
  
  NOTE: selecting this option will disable the '__ro_after_init'
  kernel hardening feature for security hooks.   Please consider
  using the selinux=0 boot parameter instead of enabling this
  option.
  
  WARNING: this option is deprecated and will be removed in a future
  kernel release.
  
  If you are unsure how to answer this question, answer N.

SECURITY_SELINUX_SID2STR_CACHE_SIZE
  This option defines the size of the internal SID -> context string
  cache, which improves the performance of context to string
  conversion.  Setting this option to 0 disables the cache completely.
  
  If unsure, keep the default value.

SECURITY_SELINUX_SIDTAB_HASH_BITS
  This option sets the number of buckets used in the sidtab hashtable
  to 2^SECURITY_SELINUX_SIDTAB_HASH_BITS buckets. The number of hash
  collisions may be viewed at /sys/fs/selinux/ss/sidtab_hash_stats. If
  chain lengths are high (e.g. > 20) then selecting a higher value here
  will ensure that lookups times are short and stable.

SECURITY_SMACK
  This selects the Simplified Mandatory Access Control Kernel.
  Smack is useful for sensitivity, integrity, and a variety
  of other mandatory security schemes.
  If you are unsure how to answer this question, answer N.

SECURITY_SMACK_APPEND_SIGNALS
  Sending a signal has been treated as a write operation to the
  receiving process. If this option is selected, the delivery
  will be an append operation instead. This makes it possible
  to differentiate between delivering a network packet and
  delivering a signal in the Smack rules.
  If you are unsure how to answer this question, answer N.

SECURITY_SMACK_BRINGUP
  Enable the bring-up ("b") access mode in Smack rules.
  When access is granted by a rule with the "b" mode a
  message about the access requested is generated. The
  intention is that a process can be granted a wide set
  of access initially with the bringup mode set on the
  rules. The developer can use the information to
  identify which rules are necessary and what accesses
  may be inappropriate. The developer can reduce the
  access rule set once the behavior is well understood.
  This is a superior mechanism to the oft abused
  "permissive" mode of other systems.
  If you are unsure how to answer this question, answer N.

SECURITY_SMACK_NETFILTER
  This enables security marking of network packets using
  Smack labels.
  If you are unsure how to answer this question, answer N.

SECURITY_TOMOYO
  This selects TOMOYO Linux, pathname-based access control.
  Required userspace tools and further information may be
  found at <http://tomoyo.sourceforge.jp/>.
  If you are unsure how to answer this question, answer N.

SECURITY_TOMOYO_ACTIVATION_TRIGGER
  This is the default pathname of activation trigger.
  You can override this setting via TOMOYO_trigger= kernel command line
  option. For example, if you pass init=/bin/systemd option, you may
  want to also pass TOMOYO_trigger=/bin/systemd option.

SECURITY_TOMOYO_INSECURE_BUILTIN_SETTING
  Enabling this option forces minimal built-in policy and disables
  domain/program checks for run-time policy modifications. Please enable
  this option only if this kernel is built for doing fuzzing tests.

SECURITY_TOMOYO_MAX_ACCEPT_ENTRY
  This is the default value for maximal ACL entries
  that are automatically appended into policy at "learning mode".
  Some programs access thousands of objects, so running
  such programs in "learning mode" dulls the system response
  and consumes much memory.
  This is the safeguard for such programs.

SECURITY_TOMOYO_MAX_AUDIT_LOG
  This is the default value for maximal entries for
  audit logs that the kernel can hold on memory.
  You can read the log via /sys/kernel/security/tomoyo/audit.
  If you don't need audit logs, you may set this value to 0.

SECURITY_TOMOYO_OMIT_USERSPACE_LOADER
  Say Y here if you want to activate access control as soon as built-in
  policy was loaded. This option will be useful for systems where
  operations which can lead to the hijacking of the boot sequence are
  needed before loading the policy. For example, you can activate
  immediately after loading the fixed part of policy which will allow
  only operations needed for mounting a partition which contains the
  variant part of policy and verifying (e.g. running GPG check) and
  loading the variant part of policy. Since you can start using
  enforcing mode from the beginning, you can reduce the possibility of
  hijacking the boot sequence.

SECURITY_TOMOYO_POLICY_LOADER
  This is the default pathname of policy loader which is called before
  activation. You can override this setting via TOMOYO_loader= kernel
  command line option.

SECURITY_WRITABLE_HOOKS
  No help

SECURITY_YAMA
  This selects Yama, which extends DAC support with additional
  system-wide security settings beyond regular Linux discretionary
  access controls. Currently available is ptrace scope restriction.
  Like capabilities, this security module stacks with other LSMs.
  Further information can be found in
  Documentation/admin-guide/LSM/Yama.rst.
  
  If you are unsure how to answer this question, answer N.

SELECT_MEMORY_MODEL
  No help

SENSIRION_SGP30
  Say Y here to build I2C interface support for the following
  Sensirion SGP gas sensors:
    * SGP30 gas sensor
    * SGPC3 low power gas sensor
  
  To compile this driver as module, choose M here: the
  module will be called sgp30.

SENSORS_AB8500
  If you say yes here you get support for the thermal sensor part
  of the AB8500 chip. The driver includes thermal management for
  AB8500 die and two GPADC channels. The GPADC channel are preferably
  used to access sensors outside the AB8500 chip.
  
  This driver can also be built as a module. If so, the module
  will be called abx500-temp.

SENSORS_ABITUGURU
  If you say yes here you get support for the sensor part of the first
  and second revision of the Abit uGuru chip. The voltage and frequency
  control parts of the Abit uGuru are not supported. The Abit uGuru
  chip can be found on Abit uGuru featuring motherboards (most modern
  Abit motherboards from before end 2005). For more info and a list
  of which motherboards have which revision see
  Documentation/hwmon/abituguru.rst
  
  This driver can also be built as a module. If so, the module
  will be called abituguru.

SENSORS_ABITUGURU3
  If you say yes here you get support for the sensor part of the
  third revision of the Abit uGuru chip. Only reading the sensors
  and their settings is supported. The third revision of the Abit
  uGuru chip can be found on recent Abit motherboards (since end
  2005). For more info and a list of which motherboards have which
  revision see Documentation/hwmon/abituguru3.rst
  
  This driver can also be built as a module. If so, the module
  will be called abituguru3.

SENSORS_ACPI_POWER
  This driver exposes ACPI 4.0 power meters as hardware monitoring
  devices.  Say Y (or M) if you have a computer with ACPI 4.0 firmware
  and a power meter.
  
  To compile this driver as a module, choose M here:
  the module will be called acpi_power_meter.

SENSORS_AD7314
  If you say yes here you get support for the Analog Devices
  AD7314, ADT7301 and ADT7302 temperature sensors.
  
  This driver can also be built as a module. If so, the module
  will be called ad7314.

SENSORS_AD7414
  If you say yes here you get support for the Analog Devices
  AD7414 temperature monitoring chip.
  
  This driver can also be built as a module. If so, the module
  will be called ad7414.

SENSORS_AD7418
  If you say yes here you get support for the Analog Devices
  AD7416, AD7417 and AD7418 temperature monitoring chips.
  
  This driver can also be built as a module. If so, the module
  will be called ad7418.

SENSORS_ADC128D818
  If you say yes here you get support for the Texas Instruments
  ADC128D818 System Monitor with Temperature Sensor chip.
  
  This driver can also be built as a module. If so, the module
  will be called adc128d818.

SENSORS_ADCXX
  If you say yes here you get support for the National Semiconductor
  ADC<bb><c>S<sss> chip family, where
  * bb  is the resolution in number of bits (8, 10, 12)
  * c   is the number of channels (1, 2, 4, 8)
  * sss is the maximum conversion speed (021 for 200 kSPS, 051 for 500
    kSPS and 101 for 1 MSPS)
  
  Examples : ADC081S101, ADC124S501, ...
  
  This driver can also be built as a module. If so, the module
  will be called adcxx.

SENSORS_ADM1021
  If you say yes here you get support for Analog Devices ADM1021
  and ADM1023 sensor chips and clones: Maxim MAX1617 and MAX1617A,
  Genesys Logic GL523SM, National Semiconductor LM84 and TI THMC10.
  
  This driver can also be built as a module. If so, the module
  will be called adm1021.

SENSORS_ADM1025
  If you say yes here you get support for Analog Devices ADM1025
  and Philips NE1619 sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called adm1025.

SENSORS_ADM1026
  If you say yes here you get support for Analog Devices ADM1026
  sensor chip.
  
  This driver can also be built as a module. If so, the module
  will be called adm1026.

SENSORS_ADM1029
  If you say yes here you get support for Analog Devices ADM1029
  sensor chip.
  Very rare chip, please let us know you use it.
  
  This driver can also be built as a module. If so, the module
  will be called adm1029.

SENSORS_ADM1031
  If you say yes here you get support for Analog Devices ADM1031
  and ADM1030 sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called adm1031.

SENSORS_ADM1177
  If you say yes here you get support for Analog Devices ADM1177
  sensor chips.
  
  This driver can also be built as a module.  If so, the module
  will be called adm1177.

SENSORS_ADM1266
  If you say yes here you get hardware monitoring support for Analog
  Devices ADM1266 Cascadable Super Sequencer.
  
  This driver can also be built as a module. If so, the module will
  be called adm1266.

SENSORS_ADM1275
  If you say yes here you get hardware monitoring support for Analog
  Devices ADM1075, ADM1272, ADM1275, ADM1276, ADM1278, ADM1293,
  and ADM1294 Hot-Swap Controller and Digital Power Monitors.
  
  This driver can also be built as a module. If so, the module will
  be called adm1275.

SENSORS_ADM9240
  If you say yes here you get support for Analog Devices ADM9240,
  Dallas DS1780, National Semiconductor LM81 sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called adm9240.

SENSORS_ADS7828
  If you say yes here you get support for Texas Instruments ADS7828 and
  ADS7830 8-channel A/D converters. ADS7828 resolution is 12-bit, while
  it is 8-bit on ADS7830.
  
  This driver can also be built as a module. If so, the module
  will be called ads7828.

SENSORS_ADS7871
  If you say yes here you get support for TI ADS7871 & ADS7870
  
  This driver can also be built as a module. If so, the module
  will be called ads7871.

SENSORS_ADT7310
  If you say yes here you get support for the Analog Devices
  ADT7310 and ADT7320 temperature monitoring chips.
  
  This driver can also be built as a module. If so, the module
  will be called adt7310.

SENSORS_ADT7410
  If you say yes here you get support for the Analog Devices
  ADT7410 and ADT7420 temperature monitoring chips.
  
  This driver can also be built as a module. If so, the module
  will be called adt7410.

SENSORS_ADT7411
  If you say yes here you get support for the Analog Devices
  ADT7411 voltage and temperature monitoring chip.
  
  This driver can also be built as a module. If so, the module
  will be called adt7411.

SENSORS_ADT7462
  If you say yes here you get support for the Analog Devices
  ADT7462 temperature monitoring chips.
  
  This driver can also be built as a module. If so, the module
  will be called adt7462.

SENSORS_ADT7470
  If you say yes here you get support for the Analog Devices
  ADT7470 temperature monitoring chips.
  
  This driver can also be built as a module. If so, the module
  will be called adt7470.

SENSORS_ADT7475
  If you say yes here you get support for the Analog Devices
  ADT7473, ADT7475, ADT7476 and ADT7490 hardware monitoring
  chips.
  
  This driver can also be built as a module. If so, the module
  will be called adt7475.

SENSORS_ADT7X10
  This module contains common code shared by the ADT7310/ADT7320 and
  ADT7410/ADT7420 temperature monitoring chip drivers.
  
  If built as a module, the module will be called adt7x10.

SENSORS_AMC6821
  If you say yes here you get support for the Texas Instruments
  AMC6821 hardware monitoring chips.
  
  This driver can also be built as a module. If so, the module
  will be called amc6821.

SENSORS_AMD_ENERGY
  If you say yes here you get support for core and package energy
  sensors, based on RAPL MSR for AMD family 17h and above CPUs.
  
  This driver can also be built as a module. If so, the module
  will be called as amd_energy.

SENSORS_AMS
  Support for the motion sensor included in PowerBooks. Includes
  implementations for PMU and I2C.
  
  This driver can also be built as a module. If so, the module
  will be called ams.

SENSORS_AMS_I2C
  I2C variant of motion sensor, found in early 2005 PowerBooks and
  iBooks.

SENSORS_AMS_PMU
  PMU variant of motion sensor, found in late 2005 PowerBooks.

SENSORS_APDS990X
  Say Y here if you want to build a driver for Avago APDS990x
  combined ambient light and proximity sensor chip.
  
  To compile this driver as a module, choose M here: the
  module will be called apds990x. If unsure, say N here.

SENSORS_APPLESMC
  This driver provides support for the Apple System Management
  Controller, which provides an accelerometer (Apple Sudden Motion
  Sensor), light sensors, temperature sensors, keyboard backlight
  control and fan control.
  
  Only Intel-based Apple's computers are supported (MacBook Pro,
  MacBook, MacMini).
  
  Data from the different sensors, keyboard backlight control and fan
  control are accessible via sysfs.
  
  This driver also provides an absolute input class device, allowing
  the laptop to act as a pinball machine-esque joystick.
  
  Say Y here if you have an applicable laptop and want to experience
  the awesome power of applesmc.

SENSORS_ARM_SCMI
  This driver provides support for temperature, voltage, current
  and power sensors available on SCMI based platforms. The actual
  number and type of sensors exported depend on the platform.
  
  This driver can also be built as a module. If so, the module
  will be called scmi-hwmon.

SENSORS_ARM_SCPI
  This driver provides support for temperature, voltage, current
  and power sensors available on ARM Ltd's SCP based platforms. The
  actual number and type of sensors exported depend on the platform.

SENSORS_AS370
  If you say yes here you get support for the PVT sensors of
  the Synaptics AS370 SoC
  
  This driver can also be built as a module. If so, the module
  will be called as370-hwmon.

SENSORS_ASB100
  If you say yes here you get support for the ASB100 Bach sensor
  chip found on some Asus mainboards.
  
  This driver can also be built as a module. If so, the module
  will be called asb100.

SENSORS_ASC7621
  If you say yes here you get support for the aSC7621
  family of SMBus sensors chip found on most Intel X38, X48, X58,
  945, 965 and 975 desktop boards.  Currently supported chips:
  aSC7621
  aSC7621a
  
  This driver can also be built as a module. If so, the module
  will be called asc7621.

SENSORS_ASPEED
  This driver provides support for ASPEED AST2400/AST2500 PWM
  and Fan Tacho controllers.
  
  This driver can also be built as a module. If so, the module
  will be called aspeed_pwm_tacho.

SENSORS_ATK0110
  If you say yes here you get support for the ACPI hardware
  monitoring interface found in many ASUS motherboards. This
  driver will provide readings of fans, voltages and temperatures
  through the system firmware.
  
  This driver can also be built as a module. If so, the module
  will be called asus_atk0110.

SENSORS_ATXP1
  If you say yes here you get support for the Attansic ATXP1 VID
  controller.
  
  If your board have such a chip, you are able to control your CPU
  core and other voltages.
  
  This driver can also be built as a module. If so, the module
  will be called atxp1.

SENSORS_AXI_FAN_CONTROL
  If you say yes here you get support for the Analog Devices
  AXI HDL FAN monitoring core.
  
  This driver can also be built as a module. If so, the module
  will be called axi-fan-control

SENSORS_BEL_PFE
  If you say yes here you get hardware monitoring support for BEL
  PFE1100 and PFE3000 Power Supplies.
  
  This driver can also be built as a module. If so, the module will
  be called bel-pfe.

SENSORS_BH1770
  Say Y here if you want to build a driver for BH1770GLC (ROHM) or
  SFH7770 (Osram) combined ambient light and proximity sensor chip.
  
  To compile this driver as a module, choose M here: the
  module will be called bh1770glc. If unsure, say N here.

SENSORS_BT1_PVT
  If you say yes here you get support for Baikal-T1 PVT sensor
  embedded into the SoC.
  
  This driver can also be built as a module. If so, the module will be
  called bt1-pvt.

SENSORS_BT1_PVT_ALARMS
  Baikal-T1 PVT IP-block provides threshold registers for each
  supported sensor. But the corresponding interrupts might be
  generated by the thresholds comparator only in synchronization with
  a data conversion. Additionally there is only one sensor data can
  be converted at a time. All of these makes the interface impossible
  to be used for the hwmon alarms implementation without periodic
  switch between the PVT sensors. By default the data conversion is
  performed on demand from the user-space. If this config is enabled
  the data conversion will be periodically performed and the data will be
  saved in the internal driver cache.

SENSORS_CORETEMP
  If you say yes here you get support for the temperature
  sensor inside your CPU. Most of the family 6 CPUs
  are supported. Check Documentation/hwmon/coretemp.rst for details.

SENSORS_CORSAIR_CPRO
  If you say yes here you get support for the Corsair Commander Pro
  controller.
  
  This driver can also be built as a module. If so, the module
  will be called corsair-cpro.

SENSORS_CORSAIR_PSU
  If you say yes here you get support for Corsair PSUs with a HID
  interface.
  Currently this driver supports the (RM/HX)550i, (RM/HX)650i,
  (RM/HX)750i, (RM/HX)850i, (RM/HX)1000i and HX1200i power supplies
  by Corsair.
  
  This driver can also be built as a module. If so, the module
  will be called corsair-psu.

SENSORS_DA9052_ADC
  Say y here to support the ADC found on Dialog Semiconductor
  DA9052-BC and DA9053-AA/Bx PMICs.
  
  This driver can also be built as module. If so, the module
  will be called da9052-hwmon.

SENSORS_DA9055
  If you say yes here you get support for ADC on the Dialog
  Semiconductor DA9055 PMIC.
  
  This driver can also be built as a module. If so, the module
  will be called da9055-hwmon.

SENSORS_DELL_SMM
  This hwmon driver adds support for reporting temperature of different
  sensors and controls the fans on Dell laptops via System Management
  Mode provided by Dell BIOS.
  
  When option I8K is also enabled this driver provides legacy /proc/i8k
  userspace interface for i8kutils package.

SENSORS_DME1737
  If you say yes here you get support for the hardware monitoring
  and fan control features of the SMSC DME1737, SCH311x, SCH5027, and
  Asus A8000 Super-I/O chips.
  
  This driver can also be built as a module. If so, the module
  will be called dme1737.

SENSORS_DRIVETEMP
  If you say yes you get support for the temperature sensor on
  hard disk drives.
  
  This driver can also be built as a module. If so, the module
  will be called drivetemp.

SENSORS_DS1621
  If you say yes here you get support for Dallas Semiconductor/Maxim
  Integrated DS1621 sensor chips and compatible models including:
  
  - Dallas Semiconductor DS1625
  - Maxim Integrated DS1631
  - Maxim Integrated DS1721
  - Maxim Integrated DS1731
  
  This driver can also be built as a module. If so, the module
  will be called ds1621.

SENSORS_DS620
  If you say yes here you get support for Dallas Semiconductor
  DS620 sensor chip.
  
  This driver can also be built as a module. If so, the module
  will be called ds620.

SENSORS_EMC1403
  If you say yes here you get support for the SMSC EMC1403/23
  temperature monitoring chip.
  
  Threshold values can be configured using sysfs.
  Data from the different diodes are accessible via sysfs.

SENSORS_EMC2103
  If you say yes here you get support for the temperature
  and fan sensors of the SMSC EMC2103 chips.
  
  This driver can also be built as a module. If so, the module
  will be called emc2103.

SENSORS_EMC6W201
  If you say yes here you get support for the SMSC EMC6W201
  hardware monitoring chip.
  
  This driver can also be built as a module. If so, the module
  will be called emc6w201.

SENSORS_F71805F
  If you say yes here you get support for hardware monitoring
  features of the Fintek F71805F/FG, F71806F/FG and F71872F/FG
  Super-I/O chips.
  
  This driver can also be built as a module. If so, the module
  will be called f71805f.

SENSORS_F71882FG
  If you say yes here you get support for hardware monitoring
  features of many Fintek Super-I/O (LPC) chips. The currently
  supported chips are:
    F71808E/A
    F71858FG
    F71862FG
    F71863FG
    F71869F/E/A
    F71882FG
    F71883FG
    F71889FG/ED/A
    F8000
    F81801U
    F81865F
  
  This driver can also be built as a module. If so, the module
  will be called f71882fg.

SENSORS_F75375S
  If you say yes here you get support for hardware monitoring
  features of the Fintek F75375S/SP, F75373 and F75387
  
  This driver can also be built as a module. If so, the module
  will be called f75375s.

SENSORS_FAM15H_POWER
  If you say yes here you get support for processor power
  information of your AMD family 15h CPU.
  
  This driver can also be built as a module. If so, the module
  will be called fam15h_power.

SENSORS_FSCHMD
  If you say yes here you get support for the following Fujitsu
  Siemens Computers (FSC) sensor chips: Poseidon, Scylla, Hermes,
  Heimdall, Heracles, Hades and Syleus including support for the
  integrated watchdog.
  
  This is a merged driver for FSC sensor chips replacing the fscpos,
  fscscy and fscher drivers and adding support for several other FSC
  sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called fschmd.

SENSORS_FTSTEUTATES
  If you say yes here you get support for the Fujitsu Technology
  Solutions (FTS) sensor chip "Teutates" including support for
  the integrated watchdog.
  
  This driver can also be built as a module. If so, the module
  will be called ftsteutates.

SENSORS_G760A
  If you say yes here you get support for Global Mixed-mode
  Technology Inc G760A fan speed PWM controller chips.
  
  This driver can also be built as a module. If so, the module
  will be called g760a.

SENSORS_G762
  If you say yes here you get support for Global Mixed-mode
  Technology Inc G762 and G763 fan speed PWM controller chips.
  
  This driver can also be built as a module. If so, the module
  will be called g762.

SENSORS_GL518SM
  If you say yes here you get support for Genesys Logic GL518SM
  sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called gl518sm.

SENSORS_GL520SM
  If you say yes here you get support for Genesys Logic GL520SM
  sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called gl520sm.

SENSORS_GPIO_FAN
  If you say yes here you get support for fans connected to GPIO lines.
  
  This driver can also be built as a module. If so, the module
  will be called gpio-fan.

SENSORS_GSC
  Support for the Gateworks System Controller A/D converters.
  
  To compile this driver as a module, choose M here:
  the module will be called gsc-hwmon.

SENSORS_HDAPS
  This driver provides support for the IBM Hard Drive Active Protection
  System (hdaps), which provides an accelerometer and other misc. data.
  ThinkPads starting with the R50, T41, and X40 are supported.  The
  accelerometer data is readable via sysfs.
  
  This driver also provides an absolute input class device, allowing
  the laptop to act as a pinball machine-esque joystick.
  
  If your ThinkPad is not recognized by the driver, please update to latest
  BIOS. This is especially the case for some R52 ThinkPads.
  
  Say Y here if you have an applicable laptop and want to experience
  the awesome power of hdaps.

SENSORS_HIH6130
  If you say yes here you get support for Honeywell Humidicon
  HIH-6130 and HIH-6131 Humidicon humidity sensors.
  
  This driver can also be built as a module. If so, the module
  will be called hih6130.

SENSORS_HMC5843
  No help

SENSORS_HMC5843_I2C
  Say Y here to add support for the Honeywell HMC5843, HMC5883 and
  HMC5883L 3-Axis Magnetometer (digital compass).
  
  This driver can also be compiled as a set of modules.
  If so, these modules will be created:
  - hmc5843_core (core functions)
  - hmc5843_i2c (support for HMC5843, HMC5883, HMC5883L and HMC5983)

SENSORS_HMC5843_SPI
  Say Y here to add support for the Honeywell HMC5983 3-Axis Magnetometer
  (digital compass).
  
  This driver can also be compiled as a set of modules.
  If so, these modules will be created:
  - hmc5843_core (core functions)
  - hmc5843_spi (support for HMC5983)

SENSORS_I5500
  If you say yes here you get support for the temperature
  sensor inside the Intel 5500, 5520 and X58 chipsets.
  
  This driver can also be built as a module. If so, the module
  will be called i5500_temp.

SENSORS_I5K_AMB
  If you say yes here you get support for FB-DIMM AMB temperature
  monitoring chips on systems with the Intel 5000 series chipset.
  
  This driver can also be built as a module. If so, the module
  will be called i5k_amb.

SENSORS_IBMAEM
  If you say yes here you get support for the temperature and
  power sensors and capping hardware in various IBM System X
  servers that support Active Energy Manager.  This includes
  the x3350, x3550, x3650, x3655, x3755, x3850 M2, x3950 M2,
  and certain HC10/HS2x/LS2x/QS2x blades.
  
  This driver can also be built as a module. If so, the module
  will be called ibmaem.

SENSORS_IBMPEX
  If you say yes here you get support for the temperature and
  power sensors in various IBM System X servers that support
  PowerExecutive.  So far this includes the x3350, x3550, x3650,
  x3655, and x3755; the x3800, x3850, and x3950 models that have
  PCI Express; and some of the HS2x, LS2x, and QS2x blades.
  
  This driver can also be built as a module. If so, the module
  will be called ibmpex.

SENSORS_IBMPOWERNV
  If you say yes here you get support for the temperature/fan/power
  sensors on your PowerNV platform.
  
  This driver can also be built as a module. If so, the module
  will be called ibmpowernv.

SENSORS_IBM_CFFPS
  If you say yes here you get hardware monitoring support for the IBM
  Common Form Factor power supply.
  
  This driver can also be built as a module. If so, the module will
  be called ibm-cffps.

SENSORS_IIO_HWMON
  This is a platform driver that in combination with a suitable
  map allows IIO devices to provide basic hwmon functionality
  for those channels specified in the map.  This map can be provided
  either via platform data or the device tree bindings.

SENSORS_INA209
  If you say yes here you get support for the TI / Burr Brown INA209
  voltage / current / power monitor I2C interface.
  
  This driver can also be built as a module. If so, the module will
  be called ina209.

SENSORS_INA2XX
  If you say yes here you get support for INA219, INA220, INA226,
  INA230, and INA231 power monitor chips.
  
  The INA2xx driver is configured for the default configuration of
  the part as described in the datasheet.
  Default value for Rshunt is 10 mOhms.
  This driver can also be built as a module. If so, the module
  will be called ina2xx.

SENSORS_INA3221
  If you say yes here you get support for  the TI INA3221 Triple Power
  Monitor.
  
  This driver can also be built as a module. If so, the module
  will be called ina3221.

SENSORS_INSPUR_IPSPS
  If you say yes here you get hardware monitoring support for the INSPUR
  Power System power supply.
  
  This driver can also be built as a module. If so, the module will
  be called inspur-ipsps.

SENSORS_INTEL_M10_BMC_HWMON
  This driver provides support for the hardware monitoring functionality
  on Intel MAX10 BMC chip.
  
  This BMC Chip is used on Intel FPGA PCIe Acceleration Cards (PAC). Its
  sensors monitor various telemetry data of different components on the
  card, e.g. board temperature, FPGA core temperature/voltage/current.

SENSORS_IR35221
  If you say yes here you get hardware monitoring support for the
  Infineon IR35221 controller.
  
  This driver can also be built as a module. If so, the module will
  be called ir35221.

SENSORS_IR38064
  If you say yes here you get hardware monitoring support for Infineon
  IR38064.
  
  This driver can also be built as a module. If so, the module will
  be called ir38064.

SENSORS_IRPS5401
  If you say yes here you get hardware monitoring support for the
  Infineon IRPS5401 controller.
  
  This driver can also be built as a module. If so, the module will
  be called irps5401.

SENSORS_ISL29018
  If you say yes here you get support for ambient light sensing and
  proximity infrared sensing from Intersil ISL29018.
  This driver will provide the measurements of ambient light intensity
  in lux, proximity infrared sensing and normal infrared sensing.
  Data from sensor is accessible via sysfs.

SENSORS_ISL29028
  Provides driver for the Intersil's ISL29028 device.
  This driver supports the sysfs interface to get the ALS, IR intensity,
  Proximity value via iio. The ISL29028 provides the concurrent sensing
  of ambient light and proximity.

SENSORS_ISL68137
  If you say yes here you get hardware monitoring support for Renesas
  digital multiphase voltage regulators.
  
  This driver can also be built as a module. If so, the module will
  be called isl68137.

SENSORS_IT87
  If you say yes here you get support for ITE IT8705F, IT8712F, IT8716F,
  IT8718F, IT8720F, IT8721F, IT8726F, IT8728F, IT8732F, IT8758E,
  IT8771E, IT8772E, IT8781F, IT8782F, IT8783E/F, IT8786E, IT8790E,
  IT8603E, IT8620E, IT8623E, and IT8628E sensor chips, and the SiS950
  clone.
  
  This driver can also be built as a module. If so, the module
  will be called it87.

SENSORS_JC42
  If you say yes here, you get support for JEDEC JC42.4 compliant
  temperature sensors, which are used on many DDR3 memory modules for
  mobile devices and servers.  Support will include, but not be limited
  to, ADT7408, AT30TS00, CAT34TS02, CAT6095, MAX6604, MCP9804, MCP9805,
  MCP9808, MCP98242, MCP98243, MCP98244, MCP9843, SE97, SE98,
  STTS424(E), STTS2002, STTS3000, TSE2002, TSE2004, TS3000, and TS3001.
  
  This driver can also be built as a module. If so, the module
  will be called jc42.

SENSORS_K10TEMP
  If you say yes here you get support for the temperature
  sensor(s) inside your CPU. Supported are later revisions of
  the AMD Family 10h and all revisions of the AMD Family 11h,
  12h (Llano), 14h (Brazos), 15h (Bulldozer/Trinity/Kaveri/Carrizo)
  and 16h (Kabini/Mullins) microarchitectures.
  
  This driver can also be built as a module. If so, the module
  will be called k10temp.

SENSORS_K8TEMP
  If you say yes here you get support for the temperature
  sensor(s) inside your CPU. Supported is whole AMD K8
  microarchitecture. Please note that you will need at least
  lm-sensors 2.10.1 for proper userspace support.
  
  This driver can also be built as a module. If so, the module
  will be called k8temp.

SENSORS_LINEAGE
  If you say yes here you get support for the Lineage Compact Power Line
  series of DC/DC and AC/DC converters such as CP1800, CP2000AC,
  CP2000DC, CP2725, and others.
  
  This driver can also be built as a module. If so, the module
  will be called lineage-pem.

SENSORS_LIS3LV02D
  No help

SENSORS_LIS3_I2C
  This driver provides support for the LIS3LV02Dx accelerometer connected
  via I2C. The accelerometer data is readable via
  /sys/devices/platform/lis3lv02d.
  
  This driver also provides an absolute input class device, allowing
  the device to act as a pinball machine-esque joystick.
  
  This driver can also be built as modules.  If so, the core module
  will be called lis3lv02d and a specific module for the I2C transport
  is called lis3lv02d_i2c.

SENSORS_LIS3_SPI
  This driver provides support for the LIS3LV02Dx accelerometer connected
  via SPI. The accelerometer data is readable via
  /sys/devices/platform/lis3lv02d.
  
  This driver also provides an absolute input class device, allowing
  the laptop to act as a pinball machine-esque joystick.
  
  This driver can also be built as modules.  If so, the core module
  will be called lis3lv02d and a specific module for the SPI transport
  is called lis3lv02d_spi.

SENSORS_LM25066
  If you say yes here you get hardware monitoring support for National
  Semiconductor LM25056, LM25066, LM5064, and LM5066.
  
  This driver can also be built as a module. If so, the module will
  be called lm25066.

SENSORS_LM3533
  If you say yes here you get support for the ambient light sensor
  interface on National Semiconductor / TI LM3533 Lighting Power
  chips.
  
  The sensor interface can be used to control the LEDs and backlights
  of the chip through defining five light zones and three sets of
  corresponding output-current values.
  
  The driver provides raw and mean adc readings along with the current
  light zone through sysfs. A threshold event can be generated on zone
  changes. The ALS-control output values can be set per zone for the
  three current output channels.

SENSORS_LM63
  If you say yes here you get support for the National
  Semiconductor LM63, LM64, and LM96163 remote diode digital temperature
  sensors with integrated fan control.  Such chips are found
  on the Tyan S4882 (Thunder K8QS Pro) motherboard, among
  others.
  
  This driver can also be built as a module. If so, the module
  will be called lm63.

SENSORS_LM70
  If you say yes here you get support for the National Semiconductor
  LM70, LM71, LM74 and Texas Instruments TMP121/TMP123 digital tempera-
  ture sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called lm70.

SENSORS_LM73
  If you say yes here you get support for National Semiconductor LM73
  sensor chips.
  This driver can also be built as a module. If so, the module
  will be called lm73.

SENSORS_LM75
  If you say yes here you get support for one common type of
  temperature sensor chip, with models including:
  
        - Analog Devices ADT75
        - Dallas Semiconductor DS75, DS1775 and DS7505
        - Global Mixed-mode Technology (GMT) G751
        - Maxim MAX6625 and MAX6626
        - Microchip MCP980x
        - National Semiconductor LM75, LM75A
        - NXP's LM75A
        - ST Microelectronics STDS75
        - ST Microelectronics STLM75
        - TelCom (now Microchip) TCN75
        - Texas Instruments TMP100, TMP101, TMP105, TMP112, TMP75,
          TMP175, TMP275
  
  This driver supports driver model based binding through board
  specific I2C device tables.
  
  It also supports the "legacy" style of driver binding.  To use
  that with some chips which don't replicate LM75 quirks exactly,
  you may need the "force" module parameter.
  
  This driver can also be built as a module. If so, the module
  will be called lm75.

SENSORS_LM77
  If you say yes here you get support for National Semiconductor LM77
  sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called lm77.

SENSORS_LM78
  If you say yes here you get support for National Semiconductor LM78,
  LM78-J and LM79.
  
  This driver can also be built as a module. If so, the module
  will be called lm78.

SENSORS_LM80
  If you say yes here you get support for National Semiconductor
  LM80 and LM96080 sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called lm80.

SENSORS_LM83
  If you say yes here you get support for National Semiconductor
  LM82 and LM83 sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called lm83.

SENSORS_LM85
  If you say yes here you get support for National Semiconductor LM85
  sensor chips and clones: ADM1027, ADT7463, ADT7468, EMC6D100,
  EMC6D101, EMC6D102, and EMC6D103.
  
  This driver can also be built as a module. If so, the module
  will be called lm85.

SENSORS_LM87
  If you say yes here you get support for National Semiconductor LM87
  and Analog Devices ADM1024 sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called lm87.

SENSORS_LM90
  If you say yes here you get support for National Semiconductor LM90,
  LM86, LM89 and LM99, Analog Devices ADM1032, ADT7461, and ADT7461A,
  Maxim MAX6646, MAX6647, MAX6648, MAX6649, MAX6654, MAX6657, MAX6658,
  MAX6659, MAX6680, MAX6681, MAX6692, MAX6695, MAX6696,
  ON Semiconductor NCT1008, Winbond/Nuvoton W83L771W/G/AWG/ASG,
  Philips SA56004, GMT G781, and Texas Instruments TMP451
  sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called lm90.

SENSORS_LM92
  If you say yes here you get support for National Semiconductor LM92
  and Maxim MAX6635 sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called lm92.

SENSORS_LM93
  If you say yes here you get support for National Semiconductor LM93,
  LM94, and compatible sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called lm93.

SENSORS_LM95234
  If you say yes here you get support for the LM95233 and LM95234
  temperature sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called lm95234.

SENSORS_LM95241
  If you say yes here you get support for LM95231 and LM95241 sensor
  chips.
  
  This driver can also be built as a module. If so, the module
  will be called lm95241.

SENSORS_LM95245
  If you say yes here you get support for LM95235 and LM95245
  temperature sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called lm95245.

SENSORS_LOCHNAGAR
  If you say yes here you get support for Lochnagar 2 temperature,
  voltage and current sensors abilities.
  
  This driver can also be built as a module.  If so, the module
  will be called lochnagar-hwmon.

SENSORS_LTC2945
  If you say yes here you get support for Linear Technology LTC2945
  I2C System Monitor.
  
  This driver can also be built as a module. If so, the module will
  be called ltc2945.

SENSORS_LTC2947
  No help

SENSORS_LTC2947_I2C
  If you say yes here you get support for Linear Technology LTC2947
  I2C High Precision Power and Energy Monitor
  
  This driver can also be built as a module. If so, the module will
  be called ltc2947-i2c.

SENSORS_LTC2947_SPI
  If you say yes here you get support for Linear Technology LTC2947
  SPI High Precision Power and Energy Monitor
  
  This driver can also be built as a module. If so, the module will
  be called ltc2947-spi.

SENSORS_LTC2978
  If you say yes here you get hardware monitoring support for Linear
  Technology LTC2972, LTC2974, LTC2975, LTC2977, LTC2978, LTC2979,
  LTC2980, and LTM2987.
  
  This driver can also be built as a module. If so, the module will
  be called ltc2978.

SENSORS_LTC2978_REGULATOR
  If you say yes here you get regulator support for Linear Technology
  LTC3880, LTC3883, LTC3884, LTC3886, LTC3887, LTC3889, LTC7880,
  LTM4644, LTM4675, LTM4676, LTM4677, LTM4678, LTM4680, LTM4686,
  and LTM4700.

SENSORS_LTC2990
  If you say yes here you get support for Linear Technology LTC2990
  I2C System Monitor. The LTC2990 supports a combination of voltage,
  current and temperature monitoring.
  
  This driver can also be built as a module. If so, the module will
  be called ltc2990.

SENSORS_LTC2992
  If you say yes here you get support for Linear Technology LTC2992
  I2C System Monitor. The LTC2992 measures current, voltage, and
  power of two supplies.
  
  This driver can also be built as a module. If so, the module will
  be called ltc2992.

SENSORS_LTC3815
  If you say yes here you get hardware monitoring support for Linear
  Technology LTC3815.
  
  This driver can also be built as a module. If so, the module will
  be called ltc3815.

SENSORS_LTC4151
  If you say yes here you get support for Linear Technology LTC4151
  High Voltage I2C Current and Voltage Monitor interface.
  
  This driver can also be built as a module. If so, the module will
  be called ltc4151.

SENSORS_LTC4215
  If you say yes here you get support for Linear Technology LTC4215
  Hot Swap Controller I2C interface.
  
  This driver can also be built as a module. If so, the module will
  be called ltc4215.

SENSORS_LTC4222
  If you say yes here you get support for Linear Technology LTC4222
  Dual Hot Swap Controller I2C interface.
  
  This driver can also be built as a module. If so, the module will
  be called ltc4222.

SENSORS_LTC4245
  If you say yes here you get support for Linear Technology LTC4245
  Multiple Supply Hot Swap Controller I2C interface.
  
  This driver can also be built as a module. If so, the module will
  be called ltc4245.

SENSORS_LTC4260
  If you say yes here you get support for Linear Technology LTC4260
  Positive Voltage Hot Swap Controller I2C interface.
  
  This driver can also be built as a module. If so, the module will
  be called ltc4260.

SENSORS_LTC4261
  If you say yes here you get support for Linear Technology LTC4261
  Negative Voltage Hot Swap Controller I2C interface.
  
  This driver can also be built as a module. If so, the module will
  be called ltc4261.

SENSORS_LTQ_CPUTEMP
  If you say yes here you get support for the temperature
  sensor inside your CPU.

SENSORS_MAX1111
  Say y here to support Maxim's MAX1110, MAX1111, MAX1112, and MAX1113
  ADC chips.
  
  This driver can also be built as a module. If so, the module
  will be called max1111.

SENSORS_MAX127
  Say y here to support Maxim's MAX127 DAS chips.
  
  This driver can also be built as a module. If so, the module
  will be called max127.

SENSORS_MAX16064
  If you say yes here you get hardware monitoring support for Maxim
  MAX16064.
  
  This driver can also be built as a module. If so, the module will
  be called max16064.

SENSORS_MAX16065
  If you say yes here you get support for hardware monitoring
  capabilities of the following Maxim System Manager chips.
    MAX16065
    MAX16066
    MAX16067
    MAX16068
    MAX16070
    MAX16071
  
  This driver can also be built as a module. If so, the module
  will be called max16065.

SENSORS_MAX1619
  If you say yes here you get support for MAX1619 sensor chip.
  
  This driver can also be built as a module. If so, the module
  will be called max1619.

SENSORS_MAX16601
  If you say yes here you get hardware monitoring support for Maxim
  MAX16601.
  
  This driver can also be built as a module. If so, the module will
  be called max16601.

SENSORS_MAX1668
  If you say yes here you get support for MAX1668, MAX1989 and
  MAX1805 chips.
  
  This driver can also be built as a module. If so, the module
  will be called max1668.

SENSORS_MAX197
  Support for the Maxim MAX197 A/D converter.
  Support will include, but not be limited to, MAX197, and MAX199.
  
  This driver can also be built as a module. If so, the module
  will be called max197.

SENSORS_MAX20730
  If you say yes here you get hardware monitoring support for Maxim
  MAX20710, MAX20730, MAX20734, and MAX20743.
  
  This driver can also be built as a module. If so, the module will
  be called max20730.

SENSORS_MAX20751
  If you say yes here you get hardware monitoring support for Maxim
  MAX20751.
  
  This driver can also be built as a module. If so, the module will
  be called max20751.

SENSORS_MAX31722
  Support for the Maxim Integrated MAX31722/MAX31723 digital
  thermometers/thermostats operating over an SPI interface.
  
  This driver can also be built as a module. If so, the module
  will be called max31722.

SENSORS_MAX31730
  Support for the Maxim Integrated MAX31730 3-Channel Remote
  Temperature Sensor.
  
  This driver can also be built as a module. If so, the module
  will be called max31730.

SENSORS_MAX31785
  If you say yes here you get hardware monitoring support for Maxim
  MAX31785.
  
  This driver can also be built as a module. If so, the module will
  be called max31785.

SENSORS_MAX31790
  If you say yes here you get support for 6-Channel PWM-Output
  Fan RPM Controller.
  
  This driver can also be built as a module. If so, the module
  will be called max31790.

SENSORS_MAX34440
  If you say yes here you get hardware monitoring support for Maxim
  MAX34440, MAX34441, MAX34446, MAX34451, MAX34460, and MAX34461.
  
  This driver can also be built as a module. If so, the module will
  be called max34440.

SENSORS_MAX6621
  If you say yes here you get support for MAX6621 sensor chip.
  MAX6621 is a PECI-to-I2C translator provides an efficient,
  low-cost solution for PECI-to-SMBus/I2C protocol conversion.
  It allows reading the temperature from the PECI-compliant
  host directly from up to four PECI-enabled CPUs.
  
  This driver can also be built as a module. If so, the module
  will be called max6621.

SENSORS_MAX6639
  If you say yes here you get support for the MAX6639
  sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called max6639.

SENSORS_MAX6642
  If you say yes here you get support for MAX6642 sensor chip.
  MAX6642 is a SMBus-Compatible Remote/Local Temperature Sensor
  with Overtemperature Alarm from Maxim.
  
  This driver can also be built as a module. If so, the module
  will be called max6642.

SENSORS_MAX6650
  If you say yes here you get support for the MAX6650 / MAX6651
  sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called max6650.

SENSORS_MAX6697
  If you say yes here you get support for MAX6581, MAX6602, MAX6622,
  MAX6636, MAX6689, MAX6693, MAX6694, MAX6697, MAX6698, and MAX6699
  temperature sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called max6697.

SENSORS_MAX8688
  If you say yes here you get hardware monitoring support for Maxim
  MAX8688.
  
  This driver can also be built as a module. If so, the module will
  be called max8688.

SENSORS_MC13783_ADC
  Support for the A/D converter on MC13783 and MC13892 PMIC.

SENSORS_MCP3021
  If you say yes here you get support for MCP3021 and MCP3221.
  The MCP3021 is a A/D converter (ADC) with 10-bit and the MCP3221
  with 12-bit resolution.
  
  This driver can also be built as a module. If so, the module
  will be called mcp3021.

SENSORS_MENF21BMC_HWMON
  Say Y here to include support for the MEN 14F021P00 BMC
  hardware monitoring.
  
  This driver can also be built as a module. If so the module
  will be called menf21bmc_hwmon.

SENSORS_MLXREG_FAN
  This option enables support for the FAN control on the Mellanox
  Ethernet and InfiniBand switches. The driver can be activated by the
  platform device add call. Say Y to enable these. To compile this
  driver as a module, choose 'M' here: the module will be called
  mlxreg-fan.

SENSORS_MP2975
  If you say yes here you get hardware monitoring support for MPS
  MP2975 Dual Loop Digital Multi-Phase Controller.
  
  This driver can also be built as a module. If so, the module will
  be called mp2975.

SENSORS_MR75203
  If you say yes here you get support for Moortec MR75203
  PVT controller.
  
  This driver can also be built as a module. If so, the module
  will be called mr75203.

SENSORS_NCT6683
  If you say yes here you get support for the hardware monitoring
  functionality of the Nuvoton NCT6683D eSIO chip.
  
  This driver can also be built as a module. If so, the module
  will be called nct6683.

SENSORS_NCT6775
  If you say yes here you get support for the hardware monitoring
  functionality of the Nuvoton NCT6106D, NCT6775F, NCT6776F, NCT6779D,
  NCT6791D, NCT6792D, NCT6793D, NCT6795D, NCT6796D, and compatible
  Super-I/O chips. This driver replaces the w83627ehf driver for
  NCT6775F and NCT6776F.
  
  This driver can also be built as a module. If so, the module
  will be called nct6775.

SENSORS_NCT7802
  If you say yes here you get support for the Nuvoton NCT7802Y
  hardware monitoring chip.
  
  This driver can also be built as a module. If so, the module
  will be called nct7802.

SENSORS_NCT7904
  If you say yes here you get support for the Nuvoton NCT7904
  hardware monitoring chip, including manual fan speed control
  and support for the integrated watchdog.
  
  This driver can also be built as a module. If so, the module
  will be called nct7904.

SENSORS_NPCM7XX
  This driver provides support for Nuvoton NPCM750/730/715/705 PWM
  and Fan controllers.
  
  This driver can also be built as a module. If so, the module
  will be called npcm750-pwm-fan.

SENSORS_NSA320
  If you say yes here you get support for hardware monitoring
  for the ZyXEL NSA320 Media Server and other compatible devices
  (probably the NSA325 and some NSA310 variants).
  
  The sensor data is taken from a Holtek HT46R065 microcontroller
  connected to GPIO lines.
  
  This driver can also be built as a module. If so, the module
  will be called nsa320-hwmon.

SENSORS_NTC_THERMISTOR
  This driver supports NTC thermistors sensor reading and its
  interpretation. The driver can also monitor the temperature and
  send notifications about the temperature.
  
  Currently, this driver supports
  NCP15WB473, NCP18WB473, NCP21WB473, NCP03WB473, NCP15WL333,
  NCP03WF104 and NCP15XH103 from Murata and B57330V2103 and
  B57891S0103 from EPCOS.
  
  This driver can also be built as a module. If so, the module
  will be called ntc-thermistor.

SENSORS_OCC
  No help

SENSORS_OCC_P8_I2C
  This option enables support for monitoring sensors provided by the
  On-Chip Controller (OCC) on a POWER8 processor. However, this driver
  can only run on a baseboard management controller (BMC) connected to
  the P8, not the POWER processor itself. Communications with the OCC are
  established through I2C bus.
  
  This driver can also be built as a module. If so, the module will be
  called occ-p8-hwmon.

SENSORS_OCC_P9_SBE
  This option enables support for monitoring sensors provided by the
  On-Chip Controller (OCC) on a POWER9 processor. However, this driver
  can only run on a baseboard management controller (BMC) connected to
  the P9, not the POWER processor itself. Communications with the OCC are
  established through SBE fifo on an FSI bus.
  
  This driver can also be built as a module. If so, the module will be
  called occ-p9-hwmon.

SENSORS_PC87360
  If you say yes here you get access to the hardware monitoring
  functions of the National Semiconductor PC8736x Super-I/O chips.
  The PC87360, PC87363 and PC87364 only have fan monitoring and
  control.  The PC87365 and PC87366 additionally have voltage and
  temperature monitoring.
  
  This driver can also be built as a module. If so, the module
  will be called pc87360.

SENSORS_PC87427
  If you say yes here you get access to the hardware monitoring
  functions of the National Semiconductor PC87427 Super-I/O chip.
  The chip has two distinct logical devices, one for fan speed
  monitoring and control, and one for voltage and temperature
  monitoring. Fan speed monitoring and control are supported, as
  well as temperature monitoring. Voltages aren't supported yet.
  
  This driver can also be built as a module. If so, the module
  will be called pc87427.

SENSORS_PCF8591
  If you say yes here you get support for Philips PCF8591 4-channel
  ADC, 1-channel DAC chips.
  
  This driver can also be built as a module. If so, the module
  will be called pcf8591.
  
  These devices are hard to detect and rarely found on mainstream
  hardware. If unsure, say N.

SENSORS_PM6764TR
  If you say yes here you get hardware monitoring support for ST
  PM6764TR.
  
  This driver can also be built as a module. If so, the module will
  be called pm6764tr.

SENSORS_PMBUS
  If you say yes here you get hardware monitoring support for generic
  PMBus devices, including but not limited to ADP4000, BMR453, BMR454,
  MAX20796, MDT040, NCP4200, NCP4208, PDT003, PDT006, PDT012, TPS40400,
  TPS544B20, TPS544B25, TPS544C20, TPS544C25, and UDT020.
  
  This driver can also be built as a module. If so, the module will
  be called pmbus.

SENSORS_POWR1220
  If you say yes here you get access to the hardware monitoring
  functions of the Lattice POWR1220 isp Power Supply Monitoring,
  Sequencing and Margining Controller.
  
  This driver can also be built as a module. If so, the module
  will be called powr1220.

SENSORS_PWM_FAN
  If you say yes here you get support for fans connected to PWM lines.
  The driver uses the generic PWM interface, thus it will work on a
  variety of SoCs.
  
  This driver can also be built as a module. If so, the module
  will be called pwm-fan.

SENSORS_PXE1610
  If you say yes here you get hardware monitoring support for Infineon
  PXE1610.
  
  This driver can also be built as a module. If so, the module will
  be called pxe1610.

SENSORS_Q54SJ108A2
  If you say yes here you get hardware monitoring support for Delta
  Q54SJ108A2 series Power Supplies.
  
  This driver can also be built as a module. If so, the module will
  be called q54sj108a2.

SENSORS_RASPBERRYPI_HWMON
  If you say yes here you get support for voltage sensor on the
  Raspberry Pi.
  
  This driver can also be built as a module. If so, the module
  will be called raspberrypi-hwmon.

SENSORS_RM3100
  No help

SENSORS_RM3100_I2C
  Say Y here to add support for the PNI RM3100 3-Axis Magnetometer.
  
  This driver can also be compiled as a module.
  To compile this driver as a module, choose M here: the module
  will be called rm3100-i2c.

SENSORS_RM3100_SPI
  Say Y here to add support for the PNI RM3100 3-Axis Magnetometer.
  
  This driver can also be compiled as a module.
  To compile this driver as a module, choose M here: the module
  will be called rm3100-spi.

SENSORS_S3C
  If you say yes here you get support for the on-board ADCs of
  the Samsung S3C24XX, S3C64XX and other series of SoC
  
  This driver can also be built as a module. If so, the module
  will be called s3c-hwmon.

SENSORS_S3C_RAW
  Say Y here if you want to include raw copies of all the ADC
  channels in sysfs.

SENSORS_SBTSI
  If you say yes here you get support for emulated temperature
  sensors on AMD SoCs with SB-TSI interface connected to a BMC device.
  
  This driver can also be built as a module. If so, the module will
  be called sbtsi_temp.

SENSORS_SCH5627
  If you say yes here you get support for the hardware monitoring
  features of the SMSC SCH5627 Super-I/O chip including support for
  the integrated watchdog.
  
  This driver can also be built as a module. If so, the module
  will be called sch5627.

SENSORS_SCH5636
  SMSC SCH5636 Super I/O chips include an embedded microcontroller for
  hardware monitoring solutions, allowing motherboard manufacturers to
  create their own custom hwmon solution based upon the SCH5636.
  
  Currently this driver only supports the Fujitsu Theseus SCH5636 based
  hwmon solution. Say yes here if you want support for the Fujitsu
  Theseus' hardware monitoring features including support for the
  integrated watchdog.
  
  This driver can also be built as a module. If so, the module
  will be called sch5636.

SENSORS_SCH56XX_COMMON
  No help

SENSORS_SHT15
  If you say yes here you get support for the Sensiron SHT10, SHT11,
  SHT15, SHT71, SHT75 humidity and temperature sensors.
  
  This driver can also be built as a module. If so, the module
  will be called sht15.

SENSORS_SHT21
  If you say yes here you get support for the Sensiron SHT21, SHT25
  humidity and temperature sensors.
  
  This driver can also be built as a module. If so, the module
  will be called sht21.

SENSORS_SHT3x
  If you say yes here you get support for the Sensiron SHT30 and SHT31
  humidity and temperature sensors.
  
  This driver can also be built as a module. If so, the module
  will be called sht3x.

SENSORS_SHTC1
  If you say yes here you get support for the Sensiron SHTC1, SHTW1,
  and SHTC3 humidity and temperature sensors.
  
  This driver can also be built as a module. If so, the module
  will be called shtc1.

SENSORS_SIS5595
  If you say yes here you get support for the integrated sensors in
  SiS5595 South Bridges.
  
  This driver can also be built as a module. If so, the module
  will be called sis5595.

SENSORS_SL28CPLD
  If you say yes here you get support for the fan supervisor of the
  sl28cpld board management controller.
  
  This driver can also be built as a module.  If so, the module
  will be called sl28cpld-hwmon.

SENSORS_SMM665
  If you say yes here you get support for the hardware monitoring
  features of the Summit Microelectronics SMM665/SMM665B Six-Channel
  Active DC Output Controller / Monitor.
  
  Other supported chips are SMM465, SMM665C, SMM764, and SMM766.
  Support for those chips is untested.
  
  This driver can also be built as a module. If so, the module will
  be called smm665.

SENSORS_SMSC47B397
  If you say yes here you get support for the SMSC LPC47B397-NC
  sensor chip.
  
  This driver can also be built as a module. If so, the module
  will be called smsc47b397.

SENSORS_SMSC47M1
  If you say yes here you get support for the integrated fan
  monitoring and control capabilities of the SMSC LPC47B27x,
  LPC47M10x, LPC47M112, LPC47M13x, LPC47M14x, LPC47M15x,
  LPC47M192, LPC47M292 and LPC47M997 chips.
  
  The temperature and voltage sensor features of the LPC47M15x,
  LPC47M192, LPC47M292 and LPC47M997 are supported by another
  driver, select also "SMSC LPC47M192 and compatibles" below for
  those.
  
  This driver can also be built as a module. If so, the module
  will be called smsc47m1.

SENSORS_SMSC47M192
  If you say yes here you get support for the temperature and
  voltage sensors of the SMSC LPC47M192, LPC47M15x, LPC47M292
  and LPC47M997 chips.
  
  The fan monitoring and control capabilities of these chips
  are supported by another driver, select
  "SMSC LPC47M10x and compatibles" above. You need both drivers
  if you want fan control and voltage/temperature sensor support.
  
  This driver can also be built as a module. If so, the module
  will be called smsc47m192.

SENSORS_SPARX5
  If you say yes here you get support for temperature monitoring
  with the Microchip Sparx5 SoC.
  
  This driver can also be built as a module. If so, the module
  will be called sparx5-temp.

SENSORS_STTS751
  If you say yes here you get support for STTS751
  temperature sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called stts751.

SENSORS_TC654
  If you say yes here you get support for TC654 and TC655.
  The TC654 and TC655 are PWM mode fan speed controllers with
  FanSense technology for use with brushless DC fans.
  
  This driver can also be built as a module. If so, the module
  will be called tc654.

SENSORS_TC74
  If you say yes here you get support for Microchip TC74 single
  input temperature sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called tc74.

SENSORS_THMC50
  If you say yes here you get support for Texas Instruments THMC50
  sensor chips and clones: the Analog Devices ADM1022.
  
  This driver can also be built as a module. If so, the module
  will be called thmc50.

SENSORS_TMP102
  If you say yes here you get support for Texas Instruments TMP102
  sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called tmp102.

SENSORS_TMP103
  If you say yes here you get support for Texas Instruments TMP103
  sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called tmp103.

SENSORS_TMP108
  If you say yes here you get support for Texas Instruments TMP108
  sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called tmp108.

SENSORS_TMP401
  If you say yes here you get support for Texas Instruments TMP401,
  TMP411, TMP431, TMP432, TMP435, and TMP461 temperature sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called tmp401.

SENSORS_TMP421
  If you say yes here you get support for Texas Instruments TMP421,
  TMP422, TMP423, TMP441, and TMP442 temperature sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called tmp421.

SENSORS_TMP513
  If you say yes here you get support for Texas Instruments TMP512,
  and TMP513 temperature and power supply sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called tmp513.

SENSORS_TPS40422
  If you say yes here you get hardware monitoring support for TI
  TPS40422.
  
  This driver can also be built as a module. If so, the module will
  be called tps40422.

SENSORS_TPS53679
  If you say yes here you get hardware monitoring support for TI
  TPS53647, TPS53667, TPS53679, TPS53681, and TPS53688.
  
  This driver can also be built as a module. If so, the module will
  be called tps53679.

SENSORS_TSL2550
  If you say yes here you get support for the Taos TSL2550
  ambient light sensor.
  
  This driver can also be built as a module.  If so, the module
  will be called tsl2550.

SENSORS_TSL2563
  If you say yes here you get support for the Taos TSL2560,
  TSL2561, TSL2562 and TSL2563 ambient light sensors.
  
  This driver can also be built as a module.  If so, the module
  will be called tsl2563.

SENSORS_UCD9000
  If you say yes here you get hardware monitoring support for TI
  UCD90120, UCD90124, UCD90160, UCD90320, UCD9090, UCD90910, Sequencer
  and System Health Controllers.
  
  This driver can also be built as a module. If so, the module will
  be called ucd9000.

SENSORS_UCD9200
  If you say yes here you get hardware monitoring support for TI
  UCD9220, UCD9222, UCD9224, UCD9240, UCD9244, UCD9246, and UCD9248
  Digital PWM System Controllers.
  
  This driver can also be built as a module. If so, the module will
  be called ucd9200.

SENSORS_ULTRA45
  This driver provides support for the Ultra45 workstation environmental
  sensors.

SENSORS_VEXPRESS
  This driver provides support for hardware sensors available on
  the ARM Ltd's Versatile Express platform. It can provide wide
  range of information like temperature, power, energy.

SENSORS_VIA686A
  If you say yes here you get support for the integrated sensors in
  Via 686A/B South Bridges.
  
  This driver can also be built as a module. If so, the module
  will be called via686a.

SENSORS_VIA_CPUTEMP
  If you say yes here you get support for the temperature
  sensor inside your CPU. Supported are all known variants of
  the VIA C7 and Nano.

SENSORS_VT1211
  If you say yes here then you get support for hardware monitoring
  features of the VIA VT1211 Super-I/O chip.
  
  This driver can also be built as a module. If so, the module
  will be called vt1211.

SENSORS_VT8231
  If you say yes here then you get support for the integrated sensors
  in the VIA VT8231 device.
  
  This driver can also be built as a module. If so, the module
  will be called vt8231.

SENSORS_W83627EHF
  If you say yes here you get support for the hardware
  monitoring functionality of the Winbond W83627EHF Super-I/O chip.
  
  This driver also supports the W83627EHG, which is the lead-free
  version of the W83627EHF, and the W83627DHG, which is a similar
  chip suited for specific Intel processors that use PECI such as
  the Core 2 Duo. And also the W83627UHG, which is a stripped down
  version of the W83627DHG (as far as hardware monitoring goes.)
  
  This driver also supports Nuvoton W83667HG and W83667HG-B.
  
  This driver can also be built as a module. If so, the module
  will be called w83627ehf.

SENSORS_W83627HF
  If you say yes here you get support for the Winbond W836X7 series
  of sensor chips: the W83627HF, W83627THF, W83637HF, W83687THF and
  W83697HF.
  
  This driver can also be built as a module. If so, the module
  will be called w83627hf.

SENSORS_W83773G
  If you say yes here you get support for the Nuvoton W83773G hardware
  monitoring chip.
  
  This driver can also be built as a module. If so, the module
  will be called w83773g.

SENSORS_W83781D
  If you say yes here you get support for the Winbond W8378x series
  of sensor chips: the W83781D, W83782D and W83783S, and the similar
  Asus AS99127F.
  
  This driver can also be built as a module. If so, the module
  will be called w83781d.

SENSORS_W83791D
  If you say yes here you get support for the Winbond W83791D chip.
  
  This driver can also be built as a module. If so, the module
  will be called w83791d.

SENSORS_W83792D
  If you say yes here you get support for the Winbond W83792D chip.
  
  This driver can also be built as a module. If so, the module
  will be called w83792d.

SENSORS_W83793
  If you say yes here you get support for the Winbond W83793
  hardware monitoring chip, including support for the integrated
  watchdog.
  
  This driver can also be built as a module. If so, the module
  will be called w83793.

SENSORS_W83795
  If you say yes here you get support for the Winbond W83795G and
  W83795ADG hardware monitoring chip, including manual fan speed
  control.
  
  This driver can also be built as a module. If so, the module
  will be called w83795.

SENSORS_W83795_FANCTRL
  If you say yes here, support for automatic fan speed control
  will be included in the driver.
  
  Please also note that this option will create sysfs attribute
  files which may change in the future, so you shouldn't rely
  on them being stable.

SENSORS_W83L785TS
  If you say yes here you get support for the Winbond W83L785TS-S
  sensor chip, which is used on the Asus A7N8X, among other
  motherboards.
  
  This driver can also be built as a module. If so, the module
  will be called w83l785ts.

SENSORS_W83L786NG
  If you say yes here you get support for the Winbond W83L786NG
  and W83L786NR sensor chips.
  
  This driver can also be built as a module. If so, the module
  will be called w83l786ng.

SENSORS_WM831X
  If you say yes here you get support for the hardware
  monitoring functionality of the Wolfson Microelectronics
  WM831x series of PMICs.
  
  This driver can also be built as a module. If so, the module
  will be called wm831x-hwmon.

SENSORS_WM8350
  If you say yes here you get support for the hardware
  monitoring features of the WM835x series of PMICs.
  
  This driver can also be built as a module. If so, the module
  will be called wm8350-hwmon.

SENSORS_XDPE122
  If you say yes here you get hardware monitoring support for Infineon
  XDPE12254, XDPE12284, device.
  
  This driver can also be built as a module. If so, the module will
  be called xdpe12284.

SENSORS_XGENE
  If you say yes here you get support for the temperature
  and power sensors for APM X-Gene SoC.

SENSORS_ZL6100
  If you say yes here you get hardware monitoring support for Intersil
  ZL2004, ZL2005, ZL2006, ZL2008, ZL2105, ZL2106, ZL6100, ZL6105,
  ZL9101M, and ZL9117M Digital DC/DC Controllers, as well as for
  Ericsson BMR450, BMR451, BMR462, BMR463, and BMR464.
  
  This driver can also be built as a module. If so, the module will
  be called zl6100.

SERIAL_21285
  If you have a machine based on a 21285 (Footbridge) StrongARM(R)/
  PCI bridge you can enable its onboard serial port by enabling this
  option.

SERIAL_21285_CONSOLE
  If you have enabled the serial port on the 21285 footbridge you can
  make it the console by answering Y to this option.
  
  Even if you say Y here, the currently visible virtual console
  (/dev/tty0) will still be used as the system console by default, but
  you can alter that using a kernel command line option such as
  "console=ttyFB". (Try "man bootparam" or see the documentation of
  your boot loader (lilo or loadlin) about how to pass options to the
  kernel at boot time.)

SERIAL_8250
  This selects whether you want to include the driver for the standard
  serial ports.  The standard answer is Y.  People who might say N
  here are those that are setting up dedicated Ethernet WWW/FTP
  servers, or users that have one of the various bus mice instead of a
  serial mouse and don't intend to use their machine's standard serial
  port for anything.  (Note that the Cyclades multi serial port driver
  does not need this driver built in for it to work.)
  
  To compile this driver as a module, choose M here: the
  module will be called 8250.
  [WARNING: Do not compile this driver as a module if you are using
  non-standard serial ports, since the configuration information will
  be lost when the driver is unloaded.  This limitation may be lifted
  in the future.]
  
  BTW1: If you have a mouseman serial mouse which is not recognized by
  the X window system, try running gpm first.
  
  BTW2: If you intend to use a software modem (also called Winmodem)
  under Linux, forget it.  These modems are crippled and require
  proprietary drivers which are only available under Windows.
  
  Most people will say Y or M here, so that they can use serial mice,
  modems and similar devices connecting to the standard serial ports.

SERIAL_8250_16550A_VARIANTS
  The 8250 driver can probe for many variants of the venerable 16550A
  serial port. Doing so takes additional time at boot.
  
  On modern systems, especially those using serial only for a simple
  console, you can say N here.

SERIAL_8250_ACCENT
  Say Y here if you have an Accent Async serial board.
  
  To compile this driver as a module, choose M here: the module
  will be called 8250_accent.

SERIAL_8250_ACORN
  If you have an Atomwide Serial card or Serial Port card for an Acorn
  system, say Y to this option.  The driver can handle 1, 2, or 3 port
  cards.  If unsure, say N.

SERIAL_8250_ASPEED_VUART
  If you want to use the virtual UART (VUART) device on Aspeed
  BMC platforms, enable this option. This enables the 16550A-
  compatible device on the local LPC bus, giving a UART device
  with no physical RS232 connections.

SERIAL_8250_BCM2835AUX
  Support for the BCM2835 auxiliar mini UART.
  
  Features and limitations of the UART are
    Registers are similar to 16650 registers,
      set bits in the control registers that are unsupported
      are ignored and read back as 0
    7/8 bit operation with 1 start and 1 stop bit
    8 symbols deep fifo for rx and tx
    SW controlled RTS and SW readable CTS
    Clock rate derived from system clock
    Uses 8 times oversampling (compared to 16 times for 16650)
    Missing break detection (but break generation)
    Missing framing error detection
    Missing parity bit
    Missing receive time-out interrupt
    Missing DCD, DSR, DTR and RI signals
  
  If unsure, say N.

SERIAL_8250_BOCA
  Say Y here if you have a Boca serial board.  Please read the Boca
  mini-HOWTO, available from <https://www.tldp.org/docs.html#howto>
  
  To compile this driver as a module, choose M here: the module
  will be called 8250_boca.

SERIAL_8250_CONSOLE
  If you say Y here, it will be possible to use a serial port as the
  system console (the system console is the device which receives all
  kernel messages and warnings and which allows logins in single user
  mode). This could be useful if some terminal or printer is connected
  to that serial port.
  
  Even if you say Y here, the currently visible virtual console
  (/dev/tty0) will still be used as the system console by default, but
  you can alter that using a kernel command line option such as
  "console=ttyS1". (Try "man bootparam" or see the documentation of
  your boot loader (grub or lilo or loadlin) about how to pass options
  to the kernel at boot time.)
  
  If you don't have a VGA card installed and you say Y here, the
  kernel will automatically use the first serial line, /dev/ttyS0, as
  system console.
  
  You can set that using a kernel command line option such as
  "console=uart8250,io,0x3f8,9600n8"
  "console=uart8250,mmio,0xff5e0000,115200n8".
  and it will switch to normal serial console when the corresponding
  port is ready.
  "earlycon=uart8250,io,0x3f8,9600n8"
  "earlycon=uart8250,mmio,0xff5e0000,115200n8".
  it will not only setup early console.
  
  If unsure, say N.

SERIAL_8250_CS
  Say Y here to enable support for 16-bit PCMCIA serial devices,
  including serial port cards, modems, and the modem functions of
  multi-function Ethernet/modem cards. (PCMCIA- or PC-cards are
  credit-card size devices often used with laptops.)
  
  To compile this driver as a module, choose M here: the
  module will be called serial_cs.
  
  If unsure, say N.

SERIAL_8250_DEPRECATED_OPTIONS
  In 3.7 we renamed 8250 to 8250_core by mistake, so now we have to
  accept kernel parameters in both forms like 8250_core.nr_uarts=4 and
  8250.nr_uarts=4. We now renamed the module back to 8250, but if
  anybody noticed in 3.7 and changed their userspace we still have to
  keep the 8250_core.* options around until they revert the changes
  they already did.
  
  If 8250 is built as a module, this adds 8250_core alias instead.
  
  If you did not notice yet and/or you have userspace from pre-3.7, it
  is safe (and recommended) to say N here.

SERIAL_8250_DETECT_IRQ
  Say Y here if you want the kernel to try to guess which IRQ
  to use for your serial port.
  
  This is considered unsafe; it is far better to configure the IRQ in
  a boot script using the setserial command.
  
  If unsure, say N.

SERIAL_8250_DMA
  This builds DMA support that can be used with 8250/16650
  compatible UART controllers that support DMA signaling.

SERIAL_8250_DW
  Selecting this option will enable handling of the extra features
  present in the Synopsys DesignWare APB UART.

SERIAL_8250_DWLIB
  No help

SERIAL_8250_EM
  Selecting this option will add support for the integrated serial
  port hardware found on the Emma Mobile line of processors.
  If unsure, say N.

SERIAL_8250_EXAR
  This builds support for XR17C1xx, XR17V3xx and some Commtech
  422x PCIe serial cards that are not covered by the more generic
  SERIAL_8250_PCI option.

SERIAL_8250_EXAR_ST16C554
  The Uplogix Envoy TU301 uses this Exar Quad UART.  If you are
  tinkering with your Envoy TU301, or have a machine with this UART,
  say Y here.
  
  To compile this driver as a module, choose M here: the module
  will be called 8250_exar_st16c554.

SERIAL_8250_EXTENDED
  If you wish to use any non-standard features of the standard "dumb"
  driver, say Y here. This includes HUB6 support, shared serial
  interrupts, special multiport support, support for more than the
  four COM 1/2/3/4 boards, etc.
  
  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about serial driver options. If unsure, say N.

SERIAL_8250_FINTEK
  Selecting this option will add support for the RS485 capabilities
  of the Fintek F81216A LPC to 4 UART.
  
  If this option is not selected the device will be configured as a
  standard 16550A serial port.
  
  If unsure, say N.

SERIAL_8250_FOURPORT
  Say Y here if you have an AST FourPort serial board.
  
  To compile this driver as a module, choose M here: the module
  will be called 8250_fourport.

SERIAL_8250_FSL
  No help

SERIAL_8250_GSC
  No help

SERIAL_8250_HP300
  No help

SERIAL_8250_HUB6
  Say Y here if you have a HUB6 serial board.
  
  To compile this driver as a module, choose M here: the module
  will be called 8250_hub6.

SERIAL_8250_INGENIC
  If you have a system using an Ingenic SoC and wish to make use of
  its UARTs, say Y to this option. If unsure, say N.

SERIAL_8250_IOC3
  Enable this if you have a SGI Origin or Octane machine. This module
  provides basic serial support by directly driving the UART chip
  behind the IOC3 device on those systems.  Maximum baud speed is
  38400bps using this driver.

SERIAL_8250_LPC18XX
  If you have a LPC18xx/43xx based board and want to use the
  serial port, say Y to this option. If unsure, say Y.

SERIAL_8250_LPSS
  Selecting this option will enable handling of the extra features
  present on the UART found on various Intel platforms such as:
    - Intel Baytrail SoC
    - Intel Braswell SoC
    - Intel Quark X1000 SoC

SERIAL_8250_MANY_PORTS
  Say Y here if you have dumb serial boards other than the four
  standard COM 1/2/3/4 ports. This may happen if you have an AST
  FourPort, Accent Async, Boca (read the Boca mini-HOWTO, available
  from <https://www.tldp.org/docs.html#howto>), or other custom
  serial port hardware which acts similar to standard serial port
  hardware. If you only use the standard COM 1/2/3/4 ports, you can
  say N here to save some memory. You can also say Y if you have an
  "intelligent" multiport card such as Cyclades, Digiboards, etc.

SERIAL_8250_MEN_MCB
  This enables support for FPGA based UARTs found on many MEN
  boards. This driver enables support for the 16z025, 16z057
  and 16z125 UARTs.
  
  To compile this driver as a module, chose M here: the
  module will be called 8250_men_mcb.

SERIAL_8250_MID
  Selecting this option will enable handling of the extra features
  present on the UART found on Intel Medfield SOC and various other
  Intel platforms.

SERIAL_8250_MT6577
  If you have a Mediatek based board and want to use the
  serial port, say Y to this option. If unsure, say N.

SERIAL_8250_NR_UARTS
  Set this to the number of serial ports you want the driver
  to support.  This includes any ports discovered via ACPI or
  PCI enumeration and any ports that may be added at run-time
  via hot-plug, or any ISA multi-port serial cards.

SERIAL_8250_OMAP
  If you have a machine based on an Texas Instruments OMAP CPU you
  can enable its onboard serial ports by enabling this option.
  
  This driver uses ttyS instead of ttyO.

SERIAL_8250_OMAP_TTYO_FIXUP
  This option replaces the "console=ttyO" argument with the matching
  ttyS argument if the user did not specified it on the command line.
  This ensures that the user can see the kernel output during boot
  which he wouldn't see otherwise. The getty has still to be configured
  for ttyS instead of ttyO regardless of this option.
  This option is intended for people who "automatically" enable this
  driver without knowing that this driver requires a different console=
  argument. If you read this, please keep this option disabled and
  instead update your kernel command line. If you prepare a kernel for a
  distribution or other kind of larger user base then you probably want
  to keep this option enabled. Otherwise people might complain about a
  not booting kernel because the serial console remains silent in case
  they forgot to update the command line.

SERIAL_8250_PCI
  This builds standard PCI serial support. You may be able to
  disable this feature if you only need legacy serial support.
  Saves about 9K.
  Note that serial ports on NetMos 9835 Multi-I/O cards are handled
  by the parport_serial driver, enabled with CONFIG_PARPORT_SERIAL.

SERIAL_8250_PNP
  This builds standard PNP serial support. You may be able to
  disable this feature if you only need legacy serial support.

SERIAL_8250_PXA
  If you have a machine based on an Intel XScale PXA2xx CPU you can
  enable its onboard serial ports by enabling this option. The option is
  applicable to both devicetree and legacy boards, and early console is
  part of its support.

SERIAL_8250_RSA
  Say Y here if you have a IODATA RSA-DV II/S ISA card and
  would like to use its >115kbps speeds.
  You will need to provide module parameter "probe_rsa", or boot-time
  parameter 8250.probe_rsa with I/O addresses of this card then.
  
  If you don't have such card, or if unsure, say N.

SERIAL_8250_RT288X
  Selecting this option will add support for the alternate register
  layout used by Ralink RT288x/RT305x, Alchemy Au1xxx, and some others.
  If unsure, say N.

SERIAL_8250_RUNTIME_UARTS
  Set this to the maximum number of serial ports you want
  the kernel to register at boot time.  This can be overridden
  with the module parameter "nr_uarts", or boot-time parameter
  8250.nr_uarts

SERIAL_8250_SHARE_IRQ
  Some serial boards have hardware support which allows multiple dumb
  serial ports on the same board to share a single IRQ. To enable
  support for this in the serial driver, say Y here.

SERIAL_8250_TEGRA
  Select this option if you have machine with an NVIDIA Tegra SoC and
  wish to enable 8250 serial driver for the Tegra serial interfaces.

SERIAL_8250_UNIPHIER
  If you have a UniPhier based board and want to use the on-chip
  serial ports, say Y to this option. If unsure, say N.

SERIAL_ALTERA_JTAGUART
  This driver supports the Altera JTAG UART port.

SERIAL_ALTERA_JTAGUART_CONSOLE
  Enable a Altera JTAG UART port to be the system console.

SERIAL_ALTERA_JTAGUART_CONSOLE_BYPASS
  Bypass console output and keep going even if there is no
  JTAG terminal connection with the host.

SERIAL_ALTERA_UART
  This driver supports the Altera softcore UART port.

SERIAL_ALTERA_UART_BAUDRATE
  This setting lets you define what the default baudrate is for the
  Altera UART ports. The usual default varies from board to board,
  and this setting is a way of catering for that.

SERIAL_ALTERA_UART_CONSOLE
  Enable a Altera UART port to be the system console.

SERIAL_ALTERA_UART_MAXPORTS
  This setting lets you define the maximum number of the Altera
  UART ports. The usual default varies from board to board, and
  this setting is a way of catering for that.

SERIAL_AMBA_PL010
  This selects the ARM(R) AMBA(R) PrimeCell PL010 UART.  If you have
  an Integrator/AP or Integrator/PP2 platform, or if you have a
  Cirrus Logic EP93xx CPU, say Y or M here.
  
  If unsure, say N.

SERIAL_AMBA_PL010_CONSOLE
  Say Y here if you wish to use an AMBA PrimeCell UART as the system
  console (the system console is the device which receives all kernel
  messages and warnings and which allows logins in single user mode).
  
  Even if you say Y here, the currently visible framebuffer console
  (/dev/tty0) will still be used as the system console by default, but
  you can alter that using a kernel command line option such as
  "console=ttyAM0". (Try "man bootparam" or see the documentation of
  your boot loader (lilo or loadlin) about how to pass options to the
  kernel at boot time.)

SERIAL_AMBA_PL011
  This selects the ARM(R) AMBA(R) PrimeCell PL011 UART.  If you have
  an Integrator/PP2, Integrator/CP or Versatile platform, say Y or M
  here.
  
  If unsure, say N.

SERIAL_AMBA_PL011_CONSOLE
  Say Y here if you wish to use an AMBA PrimeCell UART as the system
  console (the system console is the device which receives all kernel
  messages and warnings and which allows logins in single user mode).
  
  Even if you say Y here, the currently visible framebuffer console
  (/dev/tty0) will still be used as the system console by default, but
  you can alter that using a kernel command line option such as
  "console=ttyAMA0". (Try "man bootparam" or see the documentation of
  your boot loader (lilo or loadlin) about how to pass options to the
  kernel at boot time.)

SERIAL_AR933X
  If you have an Atheros AR933X SOC based board and want to use the
  built-in UART of the SoC, say Y to this option.
  
  To compile this driver as a module, choose M here: the
  module will be called ar933x_uart.

SERIAL_AR933X_CONSOLE
  Enable a built-in UART port of the AR933X to be the system console.

SERIAL_AR933X_NR_UARTS
  Set this to the number of serial ports you want the driver
  to support.

SERIAL_ARC
  Driver for on-chip UART for ARC(Synopsys) for the legacy
  FPGA Boards (ML50x/ARCAngel4)

SERIAL_ARC_CONSOLE
  Enable system Console on ARC UART

SERIAL_ARC_NR_PORTS
  Set this to the number of serial ports you want the driver
  to support.

SERIAL_ATMEL
  This enables the driver for the on-chip UARTs of the Atmel
  AT91 processors.

SERIAL_ATMEL_CONSOLE
  Say Y here if you wish to use an on-chip UART on a Atmel
  AT91 processor as the system console (the system
  console is the device which receives all kernel messages and
  warnings and which allows logins in single user mode).

SERIAL_ATMEL_PDC
  Say Y here if you wish to use the PDC to do DMA transfers to
  and from the Atmel AT91 serial port. In order to
  actually use DMA transfers, make sure that the use_dma_tx
  and use_dma_rx members in the atmel_uart_data struct is set
  appropriately for each port.
  
  Note that break and error handling currently doesn't work
  properly when DMA is enabled. Make sure that ports where
  this matters don't use DMA.

SERIAL_ATMEL_TTYAT
  Say Y here if you wish to have the internal AT91 UARTs
  appear as /dev/ttyATn (major 204, minor starting at 154)
  instead of the normal /dev/ttySn (major 4, minor starting at
  64). This is necessary if you also want other UARTs, such as
  external 8250/16C550 compatible UARTs.
  The ttySn nodes are legally reserved for the 8250 serial driver
  but are often misused by other serial drivers.
  
  To use this, you should create suitable ttyATn device nodes in
  /dev/, and pass "console=ttyATn" to the kernel.
  
  Say Y if you have an external 8250/16C550 UART.  If unsure, say N.

SERIAL_BCM63XX
  This enables the driver for the onchip UART core found on
  the following chipsets:
  
    BCM33xx (cable modem)
    BCM63xx/BCM63xxx (DSL)
    BCM68xx (PON)
    BCM7xxx (STB) - DOCSIS console

SERIAL_BCM63XX_CONSOLE
  If you have enabled the serial port on the BCM63xx CPU
  you can make it the console by answering Y to this option.

SERIAL_CLPS711X
  This enables the driver for the on-chip UARTs of the Cirrus
  Logic EP711x/EP721x/EP731x processors.

SERIAL_CLPS711X_CONSOLE
  Even if you say Y here, the currently visible virtual console
  (/dev/tty0) will still be used as the system console by default, but
  you can alter that using a kernel command line option such as
  "console=ttyCL1".

SERIAL_CONEXANT_DIGICOLOR
  Support for the on-chip USART on Conexant Digicolor SoCs.

SERIAL_CONEXANT_DIGICOLOR_CONSOLE
  If you have enabled the USART serial port on Conexant Digicolor
  SoCs, you can make it the console by answering Y to this option.

SERIAL_CORE
  No help

SERIAL_CORE_CONSOLE
  No help

SERIAL_CPM
  This driver supports the SCC and SMC serial ports on Motorola
  embedded PowerPC that contain a CPM1 (8xx) or CPM2 (8xxx)

SERIAL_CPM_CONSOLE
  Say Y here if you wish to use a SCC or SMC CPM UART as the system
  console (the system console is the device which receives all kernel
  messages and warnings and which allows logins in single user mode).
  
  Even if you say Y here, the currently visible framebuffer console
  (/dev/tty0) will still be used as the system console by default, but
  you can alter that using a kernel command line option such as
  "console=ttyCPM0". (Try "man bootparam" or see the documentation of
  your boot loader (lilo or loadlin) about how to pass options to the
  kernel at boot time.)

SERIAL_DEV_BUS
  Core support for devices connected via a serial port.
  
  Note that you typically also want to enable TTY port controller support.

SERIAL_DEV_CTRL_TTYPORT
  Say Y here if you want to use the Serial device bus with common TTY
  drivers (e.g. serial drivers).
  
  If unsure, say Y.

SERIAL_DZ
  DZ11-family serial controllers for DECstations and VAXstations,
  including the DC7085, M7814, and M7819.

SERIAL_DZ_CONSOLE
  If you say Y here, it will be possible to use a serial port as the
  system console (the system console is the device which receives all
  kernel messages and warnings and which allows logins in single user
  mode).
  
  Note that the firmware uses ttyS3 as the serial console on
  DECstations that use this driver.
  
  If unsure, say Y.

SERIAL_EARLYCON
  Support for early consoles with the earlycon parameter. This enables
  the console before standard serial driver is probed. The console is
  enabled when early_param is processed.

SERIAL_EARLYCON_ARM_SEMIHOST
  Support for early debug console using ARM semihosting. This enables
  the console before standard serial driver is probed. This is enabled
  with "earlycon=smh" on the kernel command line. The console is
  enabled when early_param is processed.

SERIAL_EARLYCON_RISCV_SBI
  Support for early debug console using RISC-V SBI. This enables
  the console before standard serial driver is probed. This is enabled
  with "earlycon=sbi" on the kernel command line. The console is
  enabled when early_param is processed.

SERIAL_EFM32_UART
  This driver support the USART and UART ports on
  Energy Micro's efm32 SoCs.

SERIAL_EFM32_UART_CONSOLE
  No help

SERIAL_FSL_LINFLEXUART
  Support for the on-chip LINFlexD UART on some Freescale SOCs.

SERIAL_FSL_LINFLEXUART_CONSOLE
  If you have enabled the LINFlexD UART serial port on the Freescale
  SoCs, you can make it the console by answering Y to this option.

SERIAL_FSL_LPUART
  Support for the on-chip lpuart on some Freescale SOCs.

SERIAL_FSL_LPUART_CONSOLE
  If you have enabled the lpuart serial port on the Freescale SoCs,
  you can make it the console by answering Y to this option.

SERIAL_GRLIB_GAISLER_APBUART
  Add support for the GRLIB APBUART serial port.

SERIAL_GRLIB_GAISLER_APBUART_CONSOLE
  Support for running a console on the GRLIB APBUART

SERIAL_HS_LPC32XX
  Support for the LPC32XX high speed serial ports (up to 900kbps).
  Those are UARTs completely different from the Standard UARTs on the
  LPC32XX SoC.
  Choose M or Y here to build this driver.

SERIAL_HS_LPC32XX_CONSOLE
  If you would like to be able to use one of the high speed serial
  ports on the LPC32XX as the console, you can do so by answering
  Y to this option.

SERIAL_ICOM
  This driver is for a family of multiport serial adapters
  including 2 port RVX, 2 port internal modem, 4 port internal
  modem and a split 1 port RVX and 1 port internal modem.
  
  This driver can also be built as a module.  If so, the module
  will be called icom.

SERIAL_IFX6X60
  Support for the IFX6x60 modem devices on Intel MID platforms.

SERIAL_IMX
  If you have a machine based on a Motorola IMX CPU you
  can enable its onboard serial port by enabling this option.

SERIAL_IMX_CONSOLE
  If you have enabled the serial port on the Freescale IMX
  CPU you can make it the console by answering Y/M to this option.
  
  Even if you say Y/M here, the currently visible virtual console
  (/dev/tty0) will still be used as the system console by default, but
  you can alter that using a kernel command line option such as
  "console=ttymxc0". (Try "man bootparam" or see the documentation of
  your bootloader about how to pass options to the kernel at boot time.)

SERIAL_IMX_EARLYCON
  If you have enabled the earlycon on the Freescale IMX
  CPU you can make it the earlycon by answering Y to this option.

SERIAL_IP22_ZILOG
  This driver supports the Zilog8530 serial ports found on SGI
  systems.  Say Y or M if you want to be able to these serial ports.

SERIAL_IP22_ZILOG_CONSOLE
  No help

SERIAL_IPOCTAL
  This driver supports the IPOCTAL serial port device for the IndustryPack bus.

SERIAL_JSM
  This is a driver for Digi International's Neo and Classic series
  of cards which provide multiple serial ports. You would need
  something like this to connect more than two modems to your Linux
  box, for instance in order to become a dial-in server. This driver
  supports PCI boards only.
  
  If you have a card like this, say Y here, otherwise say N.
  
  To compile this driver as a module, choose M here: the
  module will be called jsm.

SERIAL_KGDB_NMI
  This special driver allows you to temporary use NMI debugger port
  as a normal console (assuming that the port is attached to KGDB).
  
  Unlike KDB's disable_nmi command, with this driver you are always
  able to go back to the debugger using KGDB escape sequence ($3#33).
  This is because this console driver processes the input in NMI
  context, and thus is able to intercept the magic sequence.
  
  Note that since the console interprets input and uses polling
  communication methods, for things like PPP you still must fully
  detach debugger port from the KGDB NMI (i.e. disable_nmi), and
  use raw console.
  
  If unsure, say N.

SERIAL_LANTIQ
  Support for UART on Lantiq and Intel SoCs.
  To compile this driver as a module, select M here. The
  module will be called lantiq.

SERIAL_LANTIQ_CONSOLE
  Select this option if you would like to use a Lantiq UART as the
  system console.

SERIAL_LITEUART
  This driver is for the FPGA-based LiteUART serial controller from LiteX
  SoC builder.
  
  Say 'Y' or 'M' here if you wish to use the LiteUART serial controller.
  Otherwise, say 'N'.

SERIAL_LITEUART_CONSOLE
  Say 'Y' or 'M' here if you wish to use the FPGA-based LiteUART serial
  controller from LiteX SoC builder as the system console
  (the system console is the device which receives all kernel messages
  and warnings and which allows logins in single user mode).
  Otherwise, say 'N'.

SERIAL_LITEUART_MAX_PORTS
  Set this to the maximum number of serial ports you want the driver
  to support.

SERIAL_MAX3100
  MAX3100 chip support

SERIAL_MAX310X
  This selects support for an advanced UART from Maxim (Dallas).
  Supported ICs are MAX3107, MAX3108, MAX3109, MAX14830.
  Each IC contains 128 words each of receive and transmit FIFO
  that can be controlled through I2C or high-speed SPI.
  
  Say Y here if you want to support this ICs.

SERIAL_MCF
  This serial driver supports the Freescale Coldfire serial ports.

SERIAL_MCF_BAUDRATE
  This setting lets you define what the default baudrate is for the
  ColdFire serial ports. The usual default varies from board to board,
  and this setting is a way of catering for that.

SERIAL_MCF_CONSOLE
  Enable a ColdFire internal serial port to be the system console.

SERIAL_MCTRL_GPIO
  No help

SERIAL_MEN_Z135
  Say yes here to enable support for the MEN 16z135 High Speed UART IP-Core
  on a MCB carrier.
  
  This driver can also be build as a module. If so, the module will be called
  men_z135_uart.ko

SERIAL_MESON
  This enables the driver for the on-chip UARTs of the Amlogic
  MesonX processors.

SERIAL_MESON_CONSOLE
  Say Y here if you wish to use a Amlogic MesonX UART as the
  system console (the system console is the device which
  receives all kernel messages and warnings and which allows
  logins in single user mode) as /dev/ttyAMLx.

SERIAL_MILBEAUT_USIO
  This selects the USIO/UART IP found in Socionext Milbeaut SoCs.

SERIAL_MILBEAUT_USIO_CONSOLE
  Say 'Y' here if you wish to use a USIO/UART of Socionext Milbeaut
  SoCs as the system console (the system console is the device which
  receives all kernel messages and warnings and which allows logins in
  single user mode).

SERIAL_MILBEAUT_USIO_PORTS
  No help

SERIAL_MPC52xx
  This driver supports MPC52xx and MPC512x PSC serial ports. If you would
  like to use them, you must answer Y or M to this option. Note that
  for use as console, it must be included in kernel and not as a
  module.

SERIAL_MPC52xx_CONSOLE
  Select this options if you'd like to use one of the PSC serial port
  of the Freescale MPC52xx family as a console.

SERIAL_MPC52xx_CONSOLE_BAUD
  Select the MPC52xx console baud rate.
  This value is only used if the bootloader doesn't pass in the
  console baudrate

SERIAL_MPS2_UART
  This driver support the UART ports on ARM MPS2.

SERIAL_MPS2_UART_CONSOLE
  No help

SERIAL_MSM
  No help

SERIAL_MSM_CONSOLE
  No help

SERIAL_MUX
  Saying Y here will enable the hardware MUX serial driver for
  the Nova, K class systems and D class with a 'remote control card'.
  The hardware MUX is not 8250/16550 compatible therefore the
  /dev/ttyB0 device is shared between the Serial MUX and the PDC
  software console. The following steps need to be completed to use
  the Serial MUX:
  
    1. create the device entry (mknod /dev/ttyB0 c 11 0)
    2. Edit the /etc/inittab to start a getty listening on /dev/ttyB0
    3. Add device ttyB0 to /etc/securetty (if you want to log on as
         root on this console.)
    4. Change the kernel command console parameter to: console=ttyB0

SERIAL_MUX_CONSOLE
  No help

SERIAL_MVEBU_CONSOLE
  Say 'Y' here if you wish to use Armada-3700 UART as the system console.
  (the system console is the device which receives all kernel messages
  and warnings and which allows logins in single user mode)
  Otherwise, say 'N'.

SERIAL_MVEBU_UART
  This driver is for Marvell EBU SoC's UART. If you have a machine
  based on the Armada-3700 SoC and wish to use the on-board serial
  port,
  say 'Y' here.
  Otherwise, say 'N'.

SERIAL_MXS_AUART
  This driver supports the MXS and Alphascale ASM9260 Application
  UART (AUART) port.

SERIAL_MXS_AUART_CONSOLE
  Enable a MXS AUART port to be the system console.

SERIAL_NONSTANDARD
  Say Y here if you have any non-standard serial boards -- boards
  which aren't supported using the standard "dumb" serial driver.
  This includes intelligent serial boards such as Cyclades,
  Digiboards, etc. These are usually used for systems that need many
  serial ports because they serve many terminals or dial-in
  connections.
  
  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about non-standard serial boards.
  
  Most people can say N here.

SERIAL_OF_PLATFORM
  This option is used for all 8250 compatible serial ports that
  are probed through devicetree, including Open Firmware based
  PowerPC systems and embedded systems on architectures using the
  flattened device tree format.

SERIAL_OMAP
  If you have a machine based on an Texas Instruments OMAP CPU you
  can enable its onboard serial ports by enabling this option.
  
  By enabling this option you take advantage of dma feature available
  with the omap-serial driver. DMA support can be enabled from platform
  data.

SERIAL_OMAP_CONSOLE
  Select this option if you would like to use omap serial port as
  console.
  
  Even if you say Y here, the currently visible virtual console
  (/dev/tty0) will still be used as the system console by default, but
  you can alter that using a kernel command line option such as
  "console=ttyOx". (Try "man bootparam" or see the documentation of
  your boot loader about how to pass options to the kernel at
  boot time.)

SERIAL_OWL
  This driver is for Actions Semiconductor S500/S900 SoC's UART.
  Say 'Y' here if you wish to use the on-board serial port.
  Otherwise, say 'N'.

SERIAL_OWL_CONSOLE
  Say 'Y' here if you wish to use Actions Semiconductor S500/S900 UART
  as the system console.

SERIAL_PCH_UART
  This driver is for PCH(Platform controller Hub) UART of Intel EG20T
  which is an IOH(Input/Output Hub) for x86 embedded processor.
  Enabling PCH_DMA, this PCH UART works as DMA mode.
  
  This driver also can be used for LAPIS Semiconductor IOH(Input/
  Output Hub), ML7213, ML7223 and ML7831.
  ML7213 IOH is for IVI(In-Vehicle Infotainment) use, ML7223 IOH is
  for MP(Media Phone) use and ML7831 IOH is for general purpose use.
  ML7213/ML7223/ML7831 is companion chip for Intel Atom E6xx series.
  ML7213/ML7223/ML7831 is completely compatible for Intel EG20T PCH.

SERIAL_PCH_UART_CONSOLE
  Say Y here if you wish to use the PCH UART as the system console
  (the system  console is the device which receives all kernel messages and
  warnings and which allows logins in single user mode).

SERIAL_PIC32
  If you have a PIC32, this driver supports the serial ports.
  
  Say Y or M to use PIC32 serial ports, otherwise say N. Note that
  to use a serial port as a console, this must be included in kernel and
  not as a module.

SERIAL_PIC32_CONSOLE
  If you have a PIC32, this driver supports the putting a console on one
  of the serial ports.
  
  Say Y to use the PIC32 console, otherwise say N.

SERIAL_PMACZILOG
  This driver supports the Zilog z85C30 serial ports found on
  (Power)Mac machines.
  Say Y or M if you want to be able to these serial ports.

SERIAL_PMACZILOG_CONSOLE
  If you would like to be able to use the z85c30 serial port
  on your (Power)Mac as the console, you can do so by answering
  Y to this option.

SERIAL_PMACZILOG_TTYS
  The pmac_zilog driver for the z85C30 chip on many powermacs
  historically used the device numbers for /dev/ttySn.  The
  8250 serial port driver also uses these numbers, which means
  the two drivers being unable to coexist; you could not use
  both z85C30 and 8250 type ports at the same time.
  
  If this option is not selected, the pmac_zilog driver will
  use the device numbers allocated for /dev/ttyPZn.  This allows
  the pmac_zilog and 8250 drivers to co-exist, but may cause
  existing userspace setups to break.  Programs that need to
  access the built-in serial ports on powermacs will need to
  be reconfigured to use /dev/ttyPZn instead of /dev/ttySn.
  
  If you enable this option, any z85c30 ports in the system will
  be registered as ttyS0 onwards as in the past, and you will be
  unable to use the 8250 module for PCMCIA or other 16C550-style
  UARTs.
  
  Say N unless you need the z85c30 ports on your (Power)Mac
  to appear as /dev/ttySn.

SERIAL_PXA
  If you have a machine based on an Intel XScale PXA2xx CPU you
  can enable its onboard serial ports by enabling this option.
  
  Unless you have a specific need, you should use SERIAL_8250_PXA
  instead of this.

SERIAL_PXA_CONSOLE
  If you have enabled the serial port on the Intel XScale PXA
  CPU you can make it the console by answering Y to this option.
  
  Even if you say Y here, the currently visible virtual console
  (/dev/tty0) will still be used as the system console by default, but
  you can alter that using a kernel command line option such as
  "console=ttySA0". (Try "man bootparam" or see the documentation of
  your boot loader (lilo or loadlin) about how to pass options to the
  kernel at boot time.)
  
  Unless you have a specific need, you should use SERIAL_8250_PXA
  and SERIAL_8250_CONSOLE instead of this.

SERIAL_PXA_NON8250
  No help

SERIAL_QCOM_GENI
  No help

SERIAL_QCOM_GENI_CONSOLE
  Serial console driver for Qualcomm Technologies Inc's GENI based
  QUP hardware.

SERIAL_QE
  This driver supports the QE serial ports on Freescale embedded
  PowerPC that contain a QUICC Engine.

SERIAL_RDA
  This driver is for RDA8810PL SoC's UART.
  Say 'Y' here if you wish to use the on-board serial port.
  Otherwise, say 'N'.

SERIAL_RDA_CONSOLE
  Say 'Y' here if you wish to use the RDA8810PL UART as the system
  console. Only earlycon is implemented currently.

SERIAL_RP2
  This driver supports the Comtrol RocketPort EXPRESS and
  RocketPort INFINITY families of PCI/PCIe multiport serial adapters.
  These adapters use a "RocketPort 2" ASIC that is not compatible
  with the original RocketPort driver (CONFIG_ROCKETPORT).
  
  To compile this driver as a module, choose M here: the
  module will be called rp2.
  
  If you want to compile this driver into the kernel, say Y here.  If
  you don't have a suitable RocketPort card installed, say N.

SERIAL_RP2_NR_UARTS
  If multiple cards are present, the default limit of 32 ports may
  need to be increased.

SERIAL_SA1100
  If you have a machine based on a SA1100/SA1110 StrongARM(R) CPU you
  can enable its onboard serial port by enabling this option.
  Please read <file:Documentation/arm/sa1100/serial_uart.rst> for further
  info.

SERIAL_SA1100_CONSOLE
  If you have enabled the serial port on the SA1100/SA1110 StrongARM
  CPU you can make it the console by answering Y to this option.
  
  Even if you say Y here, the currently visible virtual console
  (/dev/tty0) will still be used as the system console by default, but
  you can alter that using a kernel command line option such as
  "console=ttySA0". (Try "man bootparam" or see the documentation of
  your boot loader (lilo or loadlin) about how to pass options to the
  kernel at boot time.)

SERIAL_SAMSUNG
  Support for the on-chip UARTs on the Samsung S3C24XX series CPUs,
  providing /dev/ttySAC0, 1 and 2 (note, some machines may not
  provide all of these ports, depending on how the serial port
  pins are configured.

SERIAL_SAMSUNG_CONSOLE
  Allow selection of the S3C24XX on-board serial ports for use as
  an virtual console.
  
  Even if you say Y here, the currently visible virtual console
  (/dev/tty0) will still be used as the system console by default, but
  you can alter that using a kernel command line option such as
  "console=ttySACx". (Try "man bootparam" or see the documentation of
  your boot loader about how to pass options to the kernel at
  boot time.)

SERIAL_SAMSUNG_UARTS
  Select the number of available UART ports for the Samsung S3C
  serial driver

SERIAL_SAMSUNG_UARTS_4
  Internal node for the common case of 4 Samsung compatible UARTs

SERIAL_SB1250_DUART
  Support for the asynchronous serial interface (DUART) included in
  the BCM1250 and derived System-On-a-Chip (SOC) devices.  Note that
  the letter D in DUART stands for "dual", which is how the device
  is implemented.  Depending on the SOC configuration there may be
  one or more DUARTs available of which all are handled.
  
  If unsure, say Y.  To compile this driver as a module, choose M here:
  the module will be called sb1250-duart.

SERIAL_SB1250_DUART_CONSOLE
  If you say Y here, it will be possible to use a serial port as the
  system console (the system console is the device which receives all
  kernel messages and warnings and which allows logins in single user
  mode).
  
  If unsure, say Y.

SERIAL_SC16IS7XX
  This selects support for SC16IS7xx serial ports.
  Supported ICs are SC16IS740, SC16IS741, SC16IS750, SC16IS752,
  SC16IS760 and SC16IS762. Select supported buses using options below.

SERIAL_SC16IS7XX_CORE
  No help

SERIAL_SC16IS7XX_I2C
  Enable SC16IS7xx driver on I2C bus,
  If required say y, and say n to i2c if not required,
  Enabled by default to support oldconfig.
  You must select at least one bus for the driver to be built.

SERIAL_SC16IS7XX_SPI
  Enable SC16IS7xx driver on SPI bus,
  If required say y, and say n to spi if not required,
  This is additional support to existing driver.
  You must select at least one bus for the driver to be built.

SERIAL_SCCNXP
  This selects support for an advanced UART from NXP (Philips).
  Supported ICs are SCC2681, SCC2691, SCC2692, SC28L91, SC28L92,
  SC28L202, SCC68681 and SCC68692.

SERIAL_SCCNXP_CONSOLE
  Support for console on SCCNXP serial ports.

SERIAL_SH_SCI
  No help

SERIAL_SH_SCI_CONSOLE
  No help

SERIAL_SH_SCI_DMA
  No help

SERIAL_SH_SCI_EARLYCON
  No help

SERIAL_SH_SCI_NR_UARTS
  No help

SERIAL_SIFIVE
  Select this option if you are building a kernel for a device that
  contains a SiFive UART IP block.  This type of UART is present on
  SiFive FU540 SoCs, among others.

SERIAL_SIFIVE_CONSOLE
  Select this option if you would like to use a SiFive UART as the
  system console.
  
  Even if you say Y here, the currently visible virtual console
  (/dev/tty0) will still be used as the system console by default, but
  you can alter that using a kernel command line option such as
  "console=ttySIFx". (Try "man bootparam" or see the documentation of
  your boot loader about how to pass options to the kernel at
  boot time.)

SERIAL_SIRFSOC
  Support for the on-chip UART on the CSR SiRFprimaII series,
  providing /dev/ttySiRF0, 1 and 2 (note, some machines may not
  provide all of these ports, depending on how the serial port
  pins are configured).

SERIAL_SIRFSOC_CONSOLE
  Even if you say Y here, the currently visible virtual console
  (/dev/tty0) will still be used as the system console by default, but
  you can alter that using a kernel command line option such as
  "console=ttySiRFx". (Try "man bootparam" or see the documentation of
  your boot loader about how to pass options to the kernel at
  boot time.)

SERIAL_SPRD
  This enables the driver for the Spreadtrum's serial.

SERIAL_SPRD_CONSOLE
  Support for early debug console using Spreadtrum's serial. This enables
  the console before standard serial driver is probed. This is enabled
  with "earlycon" on the kernel command line. The console is
  enabled when early_param is processed.

SERIAL_STM32
  This driver is for the on-chip Serial Controller on
  STMicroelectronics STM32 MCUs.
  USART supports Rx & Tx functionality.
  It support all industry standard baud rates.
  
  If unsure, say N.

SERIAL_STM32_CONSOLE
  No help

SERIAL_ST_ASC
  This driver is for the on-chip Asychronous Serial Controller on
  STMicroelectronics STi SoCs.
  ASC is embedded in ST COMMS IP block. It supports Rx & Tx functionality.
  It support all industry standard baud rates.
  
  If unsure, say N.

SERIAL_ST_ASC_CONSOLE
  No help

SERIAL_SUNCORE
  No help

SERIAL_SUNHV
  This driver supports the console device found on SUN4V Sparc
  systems.  Say Y if you want to be able to use this device.

SERIAL_SUNSAB
  This driver supports the Siemens SAB82532 DUSCC serial ports on newer
  (PCI) UltraSPARC systems.  Say Y or M if you want to be able to these
  serial ports.

SERIAL_SUNSAB_CONSOLE
  If you would like to be able to use the SAB82532 serial port
  on your Sparc system as the console, you can do so by answering
  Y to this option.

SERIAL_SUNSU
  This driver supports the 8250 serial ports that run the keyboard and
  mouse on (PCI) UltraSPARC systems.  Say Y or M if you want to be able
  to these serial ports.

SERIAL_SUNSU_CONSOLE
  If you would like to be able to use the SU serial port
  on your Sparc system as the console, you can do so by answering
  Y to this option.

SERIAL_SUNZILOG
  This driver supports the Zilog8530 serial ports found on many Sparc
  systems.  Say Y or M if you want to be able to these serial ports.

SERIAL_SUNZILOG_CONSOLE
  If you would like to be able to use the Zilog8530 serial port
  on your Sparc system as the console, you can do so by answering
  Y to this option.

SERIAL_TEGRA
  Support for the on-chip UARTs on the NVIDIA Tegra series SOCs
  providing /dev/ttyTHS0, 1, 2, 3 and 4 (note, some machines may not
  provide all of these ports, depending on how the serial port
  are enabled). This driver uses the APB DMA to achieve higher baudrate
  and better performance.

SERIAL_TEGRA_TCU
  Support for the mailbox-based TCU (Tegra Combined UART) serial port.
  TCU is a virtual serial port that allows multiplexing multiple data
  streams into a single hardware serial port.

SERIAL_TEGRA_TCU_CONSOLE
  If you say Y here, it will be possible to use a the Tegra TCU as the
  system console (the system console is the device which receives all
  kernel messages and warnings and which allows logins in single user
  mode).
  
  If unsure, say Y.

SERIAL_TIMBERDALE
  Add support for UART controller on timberdale.

SERIAL_TXX9
  No help

SERIAL_TXX9_CONSOLE
  No help

SERIAL_TXX9_NR_UARTS
  No help

SERIAL_TXX9_STDSERIAL
  No help

SERIAL_UARTLITE
  Say Y here if you want to use the Xilinx uartlite serial controller.
  
  To compile this driver as a module, choose M here: the
  module will be called uartlite.

SERIAL_UARTLITE_CONSOLE
  Say Y here if you wish to use a Xilinx uartlite as the system
  console (the system console is the device which receives all kernel
  messages and warnings and which allows logins in single user mode).

SERIAL_UARTLITE_NR_UARTS
  Set this to the number of uartlites in your system, or the number
  you think you might implement.

SERIAL_VR41XX
  If you have a NEC VR4100 series processor and you want to use
  Serial Interface Unit(SIU) or Debug Serial Interface Unit(DSIU)
  (not include VR4111/VR4121 DSIU), say Y.  Otherwise, say N.

SERIAL_VR41XX_CONSOLE
  If you have a NEC VR4100 series processor and you want to use
  a console on a serial port, say Y.  Otherwise, say N.

SERIAL_VT8500
  No help

SERIAL_VT8500_CONSOLE
  No help

SERIAL_XILINX_PS_UART
  This driver supports the Cadence UART. It is found e.g. in Xilinx
  Zynq.

SERIAL_XILINX_PS_UART_CONSOLE
  Enable a Cadence UART port to be the system console.

SERIAL_ZS
  Support for the Zilog 85C350 serial communications controller used
  for serial ports in newer DECstation systems.  These include the
  DECsystem 5900 and all models of the DECstation and DECsystem 5000
  systems except from model 200.
  
  If unsure, say Y.  To compile this driver as a module, choose M here:
  the module will be called zs.

SERIAL_ZS_CONSOLE
  If you say Y here, it will be possible to use a serial port as the
  system console (the system console is the device which receives all
  kernel messages and warnings and which allows logins in single user
  mode).
  
  Note that the firmware uses ttyS1 as the serial console on the
  Maxine and ttyS3 on the others using this driver.
  
  If unsure, say Y.

SERIO
  Say Yes here if you have any input device that uses serial I/O to
  communicate with the system. This includes the
                  * standard AT keyboard and PS/2 mouse *
  as well as serial mice, Sun keyboards, some joysticks and 6dof
  devices and more.
  
  If unsure, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called serio.

SERIO_ALTERA_PS2
  Say Y here if you have Altera University Program PS/2 ports.
  
  To compile this driver as a module, choose M here: the
  module will be called altera_ps2.

SERIO_AMBAKMI
  No help

SERIO_AMS_DELTA
  Say Y here if you have an E3 and want to use its mailboard,
  or any standard AT keyboard connected to the mailboard port.
  
  When used for the E3 mailboard, a non-standard key table
  must be loaded from userspace, possibly using udev extras
  provided keymap helper utility.
  
  To compile this driver as a module, choose M here;
  the module will be called ams_delta_serio.

SERIO_APBPS2
  Say Y here if you want support for GRLIB APBPS2 peripherals used
  to connect to PS/2 keyboard and/or mouse.
  
  To compile this driver as a module, choose M here: the module will
  be called apbps2.

SERIO_ARC_PS2
  Say Y here if you have an ARC FPGA platform with a PS/2
  controller in it.
  
  To compile this driver as a module, choose M here; the module
  will be called arc_ps2.

SERIO_CT82C710
  Say Y here if you have a Texas Instruments TravelMate notebook
  equipped with the ct82c710 chip and want to use a mouse connected
  to the "QuickPort".
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called ct82c710.

SERIO_GPIO_PS2
  Say Y here if you want PS/2 bit banging support via GPIO.
  
  To compile this driver as a module, choose M here: the
  module will be called ps2-gpio.
  
  If you are unsure, say N.

SERIO_GSCPS2
  This driver provides support for the PS/2 ports on PA-RISC machines
  over which HP PS/2 keyboards and PS/2 mice may be connected.
  If you use these devices, you'll need to say Y here.
  
  It's safe to enable this driver, so if unsure, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called gscps2.

SERIO_I8042
  i8042 is the chip over which the standard AT keyboard and PS/2
  mouse are connected to the computer. If you use these devices,
  you'll need to say Y here.
  
  If unsure, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called i8042.

SERIO_LIBPS2
  Say Y here if you are using a driver for device connected
  to a PS/2 port, such as PS/2 mouse or standard AT keyboard.
  
  To compile this driver as a module, choose M here: the
  module will be called libps2.

SERIO_MACEPS2
  Say Y here if you have SGI O2 workstation and want to use its
  PS/2 ports.
  
  To compile this driver as a module, choose M here: the
  module will be called maceps2.

SERIO_NVEC_PS2
  Say Y here to enable support for a Touchpad / Mouse connected
  to a nVidia compliant embedded controller.
  
  To compile this driver as a module, say M here: the module will be
  called serio-nvec-ps2

SERIO_OLPC_APSP
  Say Y here if you want support for the keyboard and touchpad included
  in the OLPC XO-1.75 and XO-4 laptops.
  
  To compile this driver as a module, choose M here: the module will
  be called olpc_apsp.

SERIO_PARKBD
  Say Y here if you built a simple parallel port adapter to attach
  an additional AT keyboard, XT keyboard or PS/2 mouse.
  
  More information is available: <file:Documentation/input/input.rst>
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called parkbd.

SERIO_PCIPS2
  Say Y here if you have a Mobility Docking station with PS/2
  keyboard and mice ports.
  
  To compile this driver as a module, choose M here: the
  module will be called pcips2.

SERIO_PS2MULT
  Say Y here if you have the PS/2 line multiplexer like the one
  present on TQC boards.
  
  To compile this driver as a module, choose M here: the
  module will be called ps2mult.

SERIO_Q40KBD
  No help

SERIO_RAW
  Say Y here if you want to have raw access to serio ports, such as
  AUX ports on i8042 keyboard controller. Each serio port that is
  bound to this driver will be accessible via a char device with
  major 10 and dynamically allocated minor. The driver will try
  allocating minor 1 (that historically corresponds to /dev/psaux)
  first. To bind this driver to a serio port use sysfs interface:
  
      echo -n "serio_raw" > /sys/bus/serio/devices/serioX/drvctl
  
  To compile this driver as a module, choose M here: the
  module will be called serio_raw.

SERIO_RPCKBD
  Say Y here if you have the Acorn RiscPC and want to use an AT
  keyboard connected to its keyboard controller.
  
  To compile this driver as a module, choose M here: the
  module will be called rpckbd.

SERIO_SA1111
  No help

SERIO_SERPORT
  Say Y here if you plan to use an input device (mouse, joystick,
  tablet, 6dof) that communicates over the RS232 serial (COM) port.
  
  More information is available: <file:Documentation/input/input.rst>
  
  If unsure, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called serport.

SERIO_SGI_IOC3
  Say Y here if you have an SGI Onyx2, SGI Octane or IOC3 PCI card
  and you want to attach and use a keyboard, mouse, or both.
  
  To compile this driver as a module, choose M here: the
  module will be called ioc3kbd.

SERIO_SUN4I_PS2
  This selects support for the PS/2 Host Controller on
  Allwinner A10.
  
  To compile this driver as a module, choose M here: the
  module will be called sun4i-ps2.

SERIO_XILINX_XPS_PS2
  This driver supports XPS PS/2 IP from the Xilinx EDK on
  PowerPC platform.
  
  To compile this driver as a module, choose M here: the
  module will be called xilinx_ps2.

SET_FS
  No help

SFC
  This driver supports 10/40-gigabit Ethernet cards based on
  the Solarflare SFC9000-family and SFC9100-family controllers.
  
  It also supports 10/25/40/100-gigabit Ethernet cards based
  on the Solarflare EF100 networking IP in Xilinx FPGAs.
  
  To compile this driver as a module, choose M here.  The module
  will be called sfc.

SFC_FALCON
  This driver supports 10-gigabit Ethernet cards based on
  the Solarflare SFC4000 controller.
  
  To compile this driver as a module, choose M here.  The module
  will be called sfc-falcon.

SFC_FALCON_MTD
  This exposes the on-board flash and/or EEPROM as MTD devices
  (e.g. /dev/mtd1).  This is required to update the boot
  configuration under Linux.

SFC_MCDI_LOGGING
  This enables support for tracing of MCDI (Management-Controller-to-
  Driver-Interface) commands and responses, allowing debugging of
  driver/firmware interaction.  The tracing is actually enabled by
  a sysfs file 'mcdi_logging' under the PCI device.

SFC_MCDI_MON
  This exposes the on-board firmware-managed sensors as a
  hardware monitor device.

SFC_MTD
  This exposes the on-board flash and/or EEPROM as MTD devices
  (e.g. /dev/mtd1).  This is required to update the firmware or
  the boot configuration under Linux.

SFC_SRIOV
  This enables support for the SFC9000 I/O Virtualization
  features, allowing accelerated network performance in
  virtualized environments.

SFI
  The Simple Firmware Interface (SFI) provides a lightweight method
  for platform firmware to pass information to the operating system
  via static tables in memory.  Kernel SFI support is required to
  boot on SFI-only platforms.  Currently, all SFI-only platforms are
  based on the 2nd generation Intel Atom processor platform,
  code-named Moorestown.
  
  For more information, see http://simplefirmware.org
  
  Say 'Y' here to enable the kernel to boot on SFI-only platforms.

SFP
  No help

SF_PDMA
  Support the SiFive PDMA controller.

SGETMASK_SYSCALL
  sys_sgetmask and sys_ssetmask are obsolete system calls
  no longer supported in libc but still enabled by default in some
  architectures.
  
  If unsure, leave the default option here.

SGISEEQ
  Say Y here if you have an Seeq based Ethernet network card. This is
  used in many Silicon Graphics machines.

SGIWD93_SCSI
  If you have a Western Digital WD93 SCSI controller on
  an SGI MIPS system, say Y.  Otherwise, say N.

SGI_GRU
  The GRU is a hardware resource located in the system chipset. The GRU
  contains memory that can be mmapped into the user address space. This memory is
  used to communicate with the GRU to perform functions such as load/store,
  scatter/gather, bcopy, AMOs, etc.  The GRU is directly accessed by user
  instructions using user virtual addresses. GRU instructions (ex., bcopy) use
  user virtual addresses for operands.
  
  If you are not running on a SGI UV system, say N.

SGI_GRU_DEBUG
  This option enables additional debugging code for the SGI GRU driver.
  If you are unsure, say N.

SGI_IOC3_ETH
  If you have a network (Ethernet) card of this type, say Y here.

SGI_MFD_IOC3
  This option enables basic support for the SGI IOC3-based
  controller cards.  This option does not enable any specific
  functions on such a card, but provides necessary infrastructure
  for other drivers to utilize.
  
  If you have an SGI Origin, Octane, or a PCI IOC3 card,
  then say Y. Otherwise say N.

SGI_NEWPORT_CONSOLE
  Say Y here if you want the console on the Newport aka XL graphics
  card of your Indy.  Most people say Y here.

SGI_O2MACE_ETH
  No help

SGI_PARTITION
  Say Y here if you would like to be able to read the hard disk
  partition table format used by SGI machines.

SGI_XP
  An SGI machine can be divided into multiple Single System
  Images which act independently of each other and have
  hardware based memory protection from the others.  Enabling
  this feature will allow for direct communication between SSIs
  based on a network adapter and DMA messaging.

SGL_ALLOC
  No help

SG_POOL
  Provides a helper to allocate chained scatterlists. This should be
  selected by a driver or an API which whishes to allocate chained
  scatterlist.

SG_SPLIT
  Provides a helper to split scatterlists into chunks, each chunk being
  a scatterlist. This should be selected by a driver or an API which
  whishes to split a scatterlist amongst multiple DMA channels.

SHADOW_CALL_STACK
  This option enables Clang's Shadow Call Stack, which uses a
  shadow stack to protect function return addresses from being
  overwritten by an attacker. More information can be found in
  Clang's documentation:
  
    https://clang.llvm.org/docs/ShadowCallStack.html
  
  Note that security guarantees in the kernel differ from the
  ones documented for user space. The kernel must store addresses
  of shadow stacks in memory, which means an attacker capable of
  reading and writing arbitrary memory may be able to locate them
  and hijack control flow by modifying the stacks.

SHMEM
  The shmem is an internal filesystem used to manage shared memory.
  It is backed by swap and manages resource limits. It is also exported
  to userspace as tmpfs if TMPFS is enabled. Disabling this
  option replaces shmem and tmpfs with the much simpler ramfs code,
  which may be appropriate on small systems without swap.

SHUFFLE_PAGE_ALLOCATOR
  Randomization of the page allocator improves the average
  utilization of a direct-mapped memory-side-cache. See section
  5.2.27 Heterogeneous Memory Attribute Table (HMAT) in the ACPI
  6.2a specification for an example of how a platform advertises
  the presence of a memory-side-cache. There are also incidental
  security benefits as it reduces the predictability of page
  allocations to compliment SLAB_FREELIST_RANDOM, but the
  default granularity of shuffling on the "MAX_ORDER - 1" i.e,
  10th order of pages is selected based on cache utilization
  benefits on x86.
  
  While the randomization improves cache utilization it may
  negatively impact workloads on platforms without a cache. For
  this reason, by default, the randomization is enabled only
  after runtime detection of a direct-mapped memory-side-cache.
  Otherwise, the randomization may be force enabled with the
  'page_alloc.shuffle' kernel command line parameter.
  
  Say Y if unsure.

SH_CPU_FREQ
  This adds the cpufreq driver for SuperH. Any CPU that supports
  clock rate rounding through the clock framework can use this
  driver. While it will make the kernel slightly larger, this is
  harmless for CPUs that don't support rate rounding. The driver
  will also generate a notice in the boot log before disabling
  itself if the CPU in question is not capable of rate rounding.
  
  For details, take a look at <file:Documentation/cpu-freq>.
  
  If unsure, say N.

SH_DMAE
  Enable support for the Renesas SuperH DMA controllers.

SH_DMAE_BASE
  Enable support for the Renesas SuperH DMA controllers.

SH_ETH
  Renesas SuperH Ethernet device driver.
  This driver supporting CPUs are:
        - SH7619, SH7710, SH7712, SH7724, SH7734, SH7763, SH7757,
          R8A7740, R8A774x, R8A777x and R8A779x.

SH_TIMER_CMT
  This enables build of a clocksource and clockevent driver for
  the Compare Match Timer (CMT) hardware available in 16/32/48-bit
  variants on a wide range of Mobile and Automotive SoCs from Renesas.

SH_TIMER_MTU2
  This enables build of a clockevent driver for the Multi-Function
  Timer Pulse Unit 2 (MTU2) hardware available on SoCs from Renesas.
  This hardware comes with 16-bit timer registers.

SH_TIMER_TMU
  This enables build of a clocksource and clockevent driver for
  the 32-bit Timer Unit (TMU) hardware available on a wide range
  SoCs from Renesas.

SH_WDT
  This driver adds watchdog support for the integrated watchdog in the
  SuperH processors. If you have one of these processors and wish
  to have watchdog support enabled, say Y, otherwise say N.
  
  As a side note, saying Y here will automatically boost HZ to 1000
  so that the timer has a chance to clear the overflow counter. On
  slower systems (such as the SH-2 and SH-3) this will likely yield
  some performance issues. As such, the WDT should be avoided here
  unless it is absolutely necessary.
  
  To compile this driver as a module, choose M here: the
  module will be called shwdt.

SI1133
  Say Y here if you want to build a driver for the Silicon Labs SI1133
  UV Index Sensor and Ambient Light Sensor chip.
  
  To compile this driver as a module, choose M here: the module will be
  called si1133.

SI1145
  Say Y here if you want to build a driver for the Silicon Labs SI1132 or
  SI1141/2/3/5/6/7 combined ambient light, UV index and proximity sensor
  chips.
  
  To compile this driver as a module, choose M here: the module will be
  called si1145.

SI7005
  Say yes here to build support for the Silabs Si7005 relative
  humidity and temperature sensor.
  
  To compile this driver as a module, choose M here: the module
  will be called si7005. This driver also
  supports Hoperf TH02 Humidity and Temperature Sensor.

SI7020
  Say yes here to build support for the Silicon Labs Si7013/20/21
  Relative Humidity and Temperature Sensors. This driver also
  supports Hoperf TH06 Humidity and Temperature Sensor.
  
  To compile this driver as a module, choose M here: the module
  will be called si7020.

SIBYTE_WDOG
  Watchdog driver for the built in watchdog hardware in Sibyte
  SoC processors.  There are apparently two watchdog timers
  on such processors; this driver supports only the first one,
  because currently Linux only supports exporting one watchdog
  to userspace.
  
  To compile this driver as a loadable module, choose M here.
  The module will be called sb_wdog.

SIFIVE_L2
  Support for the L2 cache controller on SiFive platforms.

SIFIVE_PLIC
  This enables support for the PLIC chip found in SiFive (and
  potentially other) RISC-V systems.  The PLIC controls devices
  interrupts and connects them to each core's local interrupt
  controller.  Aside from timer and software interrupts, all other
  interrupt sources are subordinate to the PLIC.
  
  If you don't know what to do here, say Y.

SIGNALFD
  Enable the signalfd() system call that allows to receive signals
  on a file descriptor.
  
  If unsure, say Y.

SIGNATURE
  Digital signature verification. Currently only RSA is supported.
  Implementation is done using GnuPG MPI library

SIGNED_PE_FILE_VERIFICATION
  This option provides support for verifying the signature(s) on a
  signed PE binary.

SIMPLE_PM_BUS
  Driver for transparent busses that don't need a real driver, but
  where the bus controller is part of a PM domain, or under the control
  of a functional clock, and thus relies on runtime PM for managing
  this PM domain and/or clock.
  An example of such a bus controller is the Renesas Bus State
  Controller (BSC, sometimes called "LBSC within Bus Bridge", or
  "External Bus Interface") as found on several Renesas ARM SoCs.

SIOX
  SIOX stands for Serial Input Output eXtension and is a synchronous
  bus system invented by Eckelmann AG. It is used in their control and
  remote monitoring systems for commercial and industrial refrigeration
  to drive additional I/O units.
  
  Unless you know better, it is probably safe to say "no" here.

SIOX_BUS_GPIO
  SIOX bus driver that controls the four bus lines using GPIOs.

SIRFSOC_WATCHDOG
  Support for CSR SiRFprimaII and SiRFatlasVI watchdog. When
  the watchdog triggers the system will be reset.

SIRF_DMA
  Enable support for the CSR SiRFprimaII DMA engine.

SIS190
  Say Y here if you have a SiS 190 PCI Fast Ethernet adapter or
  a SiS 191 PCI Gigabit Ethernet adapter. Both are expected to
  appear in lan on motherboard designs which are based on SiS 965
  and SiS 966 south bridge.
  
  To compile this driver as a module, choose M here: the module
  will be called sis190.  This is recommended.

SIS900
  This is a driver for the Fast Ethernet PCI network cards based on
  the SiS 900 and SiS 7016 chips. The SiS 900 core is also embedded in
  SiS 630 and SiS 540 chipsets.
  
  This driver also supports AMD 79C901 HomePNA so that you can use
  your phone line as a network cable.
  
  To compile this driver as a module, choose M here: the module
  will be called sis900.  This is recommended.

SKB_EXTENSIONS
  No help

SKFP
  Say Y here if you have a SysKonnect FDDI PCI adapter.
  The following adapters are supported by this driver:
  - SK-5521 (SK-NET FDDI-UP)
  - SK-5522 (SK-NET FDDI-UP DAS)
  - SK-5541 (SK-NET FDDI-FP)
  - SK-5543 (SK-NET FDDI-LP)
  - SK-5544 (SK-NET FDDI-LP DAS)
  - SK-5821 (SK-NET FDDI-UP64)
  - SK-5822 (SK-NET FDDI-UP64 DAS)
  - SK-5841 (SK-NET FDDI-FP64)
  - SK-5843 (SK-NET FDDI-LP64)
  - SK-5844 (SK-NET FDDI-LP64 DAS)
  - Netelligent 100 FDDI DAS Fibre SC
  - Netelligent 100 FDDI SAS Fibre SC
  - Netelligent 100 FDDI DAS UTP
  - Netelligent 100 FDDI SAS UTP
  - Netelligent 100 FDDI SAS Fibre MIC
  
  Read <file:Documentation/networking/device_drivers/fddi/skfp.rst>
  for information about the driver.
  
  Questions concerning this driver can be addressed to:
  <linux@syskonnect.de>
  
  To compile this driver as a module, choose M here: the module
  will be called skfp.  This is recommended.

SKGE
  This driver support the Marvell Yukon or SysKonnect SK-98xx/SK-95xx
  and related Gigabit Ethernet adapters. It is a new smaller driver
  with better performance and more complete ethtool support.
  
  It does not support the link failover and network management
  features that "portable" vendor supplied sk98lin driver does.
  
  This driver supports adapters based on the original Yukon chipset:
  Marvell 88E8001, Belkin F5D5005, CNet GigaCard, DLink DGE-530T,
  Linksys EG1032/EG1064, 3Com 3C940/3C940B, SysKonnect SK-9871/9872.
  
  It does not support the newer Yukon2 chipset: a separate driver,
  sky2, is provided for these adapters.
  
  To compile this driver as a module, choose M here: the module
  will be called skge.  This is recommended.

SKGE_DEBUG
  This option adds the ability to dump driver state for debugging.
  The file /sys/kernel/debug/skge/ethX displays the state of the internal
  transmit and receive rings.
  
  If unsure, say N.

SKGE_GENESIS
  This enables support for the older and uncommon SysKonnect Genesis
  chips, which support MII via an external transceiver, instead of
  an internal one. Disabling this option will save some memory
  by making code smaller. If unsure say Y.

SKY2
  This driver supports Gigabit Ethernet adapters based on the
  Marvell Yukon 2 chipset:
  Marvell 88E8021/88E8022/88E8035/88E8036/88E8038/88E8050/88E8052/
  88E8053/88E8055/88E8061/88E8062, SysKonnect SK-9E21D/SK-9S21
  
  There is companion driver for the older Marvell Yukon and
  SysKonnect Genesis based adapters: skge.
  
  To compile this driver as a module, choose M here: the module
  will be called sky2.  This is recommended.

SKY2_DEBUG
  This option adds the ability to dump driver state for debugging.
  The file /sys/kernel/debug/sky2/ethX displays the state of the internal
  transmit and receive rings.
  
  If unsure, say N.

SL28CPLD_INTC
  Interrupt controller driver for the board management controller
  found on the Kontron sl28 CPLD.

SL28CPLD_WATCHDOG
  Say Y here to include support for the watchdog timer
  on the Kontron sl28 CPLD.
  
  To compile this driver as a module, choose M here: the
  module will be called sl28cpld_wdt.

SLAB
  The regular slab allocator that is established and known to work
  well in all environments. It organizes cache hot objects in
  per cpu and per node queues.

SLAB_FREELIST_HARDENED
  Many kernel heap attacks try to target slab cache metadata and
  other infrastructure. This options makes minor performance
  sacrifices to harden the kernel slab allocator against common
  freelist exploit methods. Some slab implementations have more
  sanity-checking than others. This option is most effective with
  CONFIG_SLUB.

SLAB_FREELIST_RANDOM
  Randomizes the freelist order used on creating new pages. This
  security feature reduces the predictability of the kernel slab
  allocator against heap overflows.

SLAB_MERGE_DEFAULT
  For reduced kernel memory fragmentation, slab caches can be
  merged when they share the same size and other characteristics.
  This carries a risk of kernel heap overflows being able to
  overwrite objects from merged caches (and more easily control
  cache layout), which makes such heap attacks easier to exploit
  by attackers. By keeping caches unmerged, these kinds of exploits
  can usually only damage objects in the same cache. To disable
  merging at runtime, "slab_nomerge" can be passed on the kernel
  command line.

SLHC
  This option enables Van Jacobsen serial line header compression
  routines.

SLICOSS
  This driver supports Gigabit Ethernet adapters based on the
  Session Layer Interface (SLIC) technology by Alacritech.
  
  Supported are Mojave (1 port) and Oasis (1, 2 and 4 port) cards,
  both copper and fiber.
  
  To compile this driver as a module, choose M here: the module
  will be called slicoss. This is recommended.

SLIC_DS26522
  This module initializes and configures the slic maxim card
  in T1 or E1 mode.
  
  To compile this driver as a module, choose M here: the
  module will be called slic_ds26522.

SLIMBUS
  SLIMbus is standard interface between System-on-Chip and audio codec,
  and other peripheral components in typical embedded systems.
  
  If unsure, choose N.

SLIM_QCOM_CTRL
  Select driver if Qualcomm's SLIMbus Manager Component is
  programmed using Linux kernel.

SLIM_QCOM_NGD_CTRL
  Select driver if Qualcomm's SLIMbus Satellite Non-Generic Device
  Component is programmed using Linux kernel.
  This is light-weight slimbus controller driver responsible for
  communicating with slave HW directly over the bus using messaging
  interface, and communicating with master component residing on ADSP
  for bandwidth and data-channel management.

SLIP
  Say Y if you intend to use SLIP or CSLIP (compressed SLIP) to
  connect to your Internet service provider or to connect to some
  other local Unix box or if you want to configure your Linux box as a
  Slip/CSlip server for other people to dial in. SLIP (Serial Line
  Internet Protocol) is a protocol used to send Internet traffic over
  serial connections such as telephone lines or null modem cables;
  nowadays, the protocol PPP is more commonly used for this same
  purpose.
  
  Normally, your access provider has to support SLIP in order for you
  to be able to use it, but there is now a SLIP emulator called SLiRP
  around (available from
  <ftp://ibiblio.org/pub/Linux/system/network/serial/>) which
  allows you to use SLIP over a regular dial up shell connection. If
  you plan to use SLiRP, make sure to say Y to CSLIP, below. The
  NET-3-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>, explains how to
  configure SLIP. Note that you don't need this option if you just
  want to run term (term is a program which gives you almost full
  Internet connectivity if you have a regular dial up shell account on
  some Internet connected Unix computer. Read
  <http://www.bart.nl/~patrickr/term-howto/Term-HOWTO.html>). SLIP
  support will enlarge your kernel by about 4 KB. If unsure, say N.
  
  To compile this driver as a module, choose M here. The module
  will be called slip.

SLIP_COMPRESSED
  This protocol is faster than SLIP because it uses compression on the
  TCP/IP headers (not on the data itself), but it has to be supported
  on both ends. Ask your access provider if you are not sure and
  answer Y, just in case. You will still be able to use plain SLIP. If
  you plan to use SLiRP, the SLIP emulator (available from
  <ftp://ibiblio.org/pub/Linux/system/network/serial/>) which
  allows you to use SLIP over a regular dial up shell connection, you
  definitely want to say Y here. The NET-3-HOWTO, available from
  <http://www.tldp.org/docs.html#howto>, explains how to configure
  CSLIP. This won't enlarge your kernel.

SLIP_MODE_SLIP6
  Just occasionally you may need to run IP over hostile serial
  networks that don't pass all control characters or are only seven
  bit. Saying Y here adds an extra mode you can use with SLIP:
  "slip6". In this mode, SLIP will only send normal ASCII symbols over
  the serial device. Naturally, this has to be supported at the other
  end of the link as well. It's good enough, for example, to run IP
  over the async ports of a Camtec JNT Pad. If unsure, say N.

SLIP_SMART
  Adds additional capabilities to the SLIP driver to support the
  RELCOM line fill and keepalive monitoring. Ideal on poor quality
  analogue lines.

SLOB
  SLOB replaces the stock allocator with a drastically simpler
  allocator. SLOB is generally more space efficient but
  does not perform as well on large systems.

SLUB
  SLUB is a slab allocator that minimizes cache line usage
  instead of managing queues of cached objects (SLAB approach).
  Per cpu caching is realized using slabs of objects instead
  of queues of objects. SLUB can use memory efficiently
  and has enhanced diagnostics. SLUB is the default choice for
  a slab allocator.

SLUB_CPU_PARTIAL
  Per cpu partial caches accelerate objects allocation and freeing
  that is local to a processor at the price of more indeterminism
  in the latency of the free. On overflow these caches will be cleared
  which requires the taking of locks that may cause latency spikes.
  Typically one would choose no for a realtime system.

SLUB_DEBUG
  SLUB has extensive debug support features. Disabling these can
  result in significant savings in code size. This also disables
  SLUB sysfs support. /sys/slab will not exist and there will be
  no support for cache validation etc.

SLUB_DEBUG_ON
  Boot with debugging on by default. SLUB boots by default with
  the runtime debug capabilities switched off. Enabling this is
  equivalent to specifying the "slub_debug" parameter on boot.
  There is no support for more fine grained debug control like
  possible with slub_debug=xxx. SLUB debugging may be switched
  off in a kernel built with CONFIG_SLUB_DEBUG_ON by specifying
  "slub_debug=-".

SLUB_MEMCG_SYSFS_ON
  SLUB creates a directory under /sys/kernel/slab for each
  allocation cache to host info and debug files. If memory
  cgroup is enabled, each cache can have per memory cgroup
  caches. SLUB can create the same sysfs directories for these
  caches under /sys/kernel/slab/CACHE/cgroup but it can lead
  to a very high number of debug files being created. This is
  controlled by slub_memcg_sysfs boot parameter and this
  config option determines the parameter's default value.

SLUB_STATS
  SLUB statistics are useful to debug SLUBs allocation behavior in
  order find ways to optimize the allocator. This should never be
  enabled for production use since keeping statistics slows down
  the allocator by a few percentage points. The slabinfo command
  supports the determination of the most active slabs to figure
  out which slabs are relevant to a particular load.
  Try running: slabinfo -DA

SMARTJOYPLUS_FF
  Say Y here if you have a SmartJoy PLUS PS2/USB adapter and want to
  enable force feedback support for it.

SMC
  SMC-R provides a "sockets over RDMA" solution making use of
  RDMA over Converged Ethernet (RoCE) technology to upgrade
  AF_INET TCP connections transparently.
  The Linux implementation of the SMC-R solution is designed as
  a separate socket family SMC.
  
  Select this option if you want to run SMC socket applications

SMC911X
  This is a driver for SMSC's LAN911x series of Ethernet chipsets
  including the new LAN9115, LAN9116, LAN9117, and LAN9118.
  Say Y here if you want it compiled into the kernel.
  
  This driver is also available as a module. The module will be
  called smc911x.  If you want to compile it as a module, say M
  here and read <file:Documentation/kbuild/modules.rst>

SMC9194
  This is support for the SMC9xxx based Ethernet cards. Choose this
  option if you have a DELL laptop with the docking station, or
  another SMC9192/9194 based chipset.  Say Y if you want it compiled
  into the kernel, and read the file
  <file:Documentation/networking/device_drivers/ethernet/smsc/smc9.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called smc9194.

SMC91X
  This is a driver for SMC's 91x series of Ethernet chipsets,
  including the SMC91C94 and the SMC91C111. Say Y if you want it
  compiled into the kernel, and read the file
  <file:Documentation/networking/device_drivers/ethernet/smsc/smc9.rst>.
  
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called smc91x.  If you want to compile it as a
  module, say M here and read <file:Documentation/kbuild/modules.rst>.

SMC_DIAG
  Support for SMC socket monitoring interface used by tools such as
  smcss.
  
  if unsure, say Y.

SMP
  This enables support for systems with more than one CPU. If you have
  a system with only one CPU, say N. If you have a system with more
  than one CPU, say Y.
  
  If you say N here, the kernel will run on uni- and multiprocessor
  machines, but will use only one CPU of a multiprocessor machine. If
  you say Y here, the kernel will run on many, but not all,
  uniprocessor machines. On a uniprocessor machine, the kernel
  will run faster if you say N here.
  
  Note that if you say Y here and choose architecture "586" or
  "Pentium" under "Processor family", the kernel will not work on 486
  architectures. Similarly, multiprocessor kernels for the "PPro"
  architecture may not work on all Pentium based boards.
  
  People using multiprocessor machines who say Y here should also say
  Y to "Enhanced Real Time Clock Support", below. The "Advanced Power
  Management" code will be disabled if you say Y here.
  
  See also <file:Documentation/x86/i386/IO-APIC.rst>,
  <file:Documentation/admin-guide/lockup-watchdogs.rst> and the SMP-HOWTO available at
  <http://www.tldp.org/docs.html#howto>.
  
  If you don't know what to do here, say N.

SMSC37B787_WDT
  This is the driver for the hardware watchdog component on the
  Winbond SMsC37B787 chipset as used on the NetRunner Mainboard
  from Vision Systems and maybe others.
  
  This watchdog simply watches your kernel to make sure it doesn't
  freeze, and if it does, it reboots your computer after a certain
  amount of time.
  
  Usually a userspace daemon will notify the kernel WDT driver that
  userspace is still alive, at regular intervals.
  
  To compile this driver as a module, choose M here: the
  module will be called smsc37b787_wdt.
  
  Most people will say N.

SMSC911X
  Say Y here if you want support for SMSC LAN911x and LAN921x families
  of ethernet controllers.
  
  To compile this driver as a module, choose M here. The module
  will be called smsc911x.

SMSC911X_ARCH_HOOKS
  If the arch enables this, it allows the arch to implement various
  hooks for more comprehensive interrupt control and also to override
  the source of the MAC address.

SMSC9420
  This is a driver for SMSC's LAN9420 PCI ethernet adapter.
  Say Y here if you want it compiled into the kernel.
  
  This driver is also available as a module. The module will be
  called smsc9420.  If you want to compile it as a module, say M
  here and read <file:Documentation/kbuild/modules.rst>

SMSC_PHY
  Currently supports the LAN83C185, LAN8187 and LAN8700 PHYs

SMSC_SCH311X_WDT
  This is the driver for the hardware watchdog timer on the
  SMSC SCH3112, SCH3114 and SCH3116 Super IO chipset
  (LPC IO with 8042 KBC, Reset Generation, HWM and multiple
  serial ports).
  
  To compile this driver as a module, choose M here: the
  module will be called sch311x_wdt.

SMSGIUCV
  Select this option if you want to be able to receive SMSG messages
  from other VM guest systems.

SMSGIUCV_EVENT
  Select this option to deliver CP special messages (SMSGs) as
  uevents.  The driver handles only those special messages that
  start with "APP".
  
  To compile as a module, choose M. The module name is "smsgiucv_app".

SMS_SDIO_DRV
  Choose if you would like to have Siano's support for SDIO interface

SMS_SIANO_DEBUGFS
  Choose Y to enable visualizing a dump of the frontend
  statistics response packets via debugfs. Currently, works
  only with Siano USB devices.
  
  Useful only for developers. In doubt, say N.

SMS_SIANO_MDTV
  No help

SMS_SIANO_RC
  Choose Y to select Remote Controller support for Siano driver.

SMS_USB_DRV
  Choose if you would like to have Siano's support for USB interface
  

SM_DISPCC_8250
  Support for the display clock controller on Qualcomm Technologies, Inc
  SM8150 and SM8250 devices.
  Say Y if you want to support display devices and functionality such as
  splash screen.

SM_FTL
  This enables EXPERIMENTAL R/W support for SmartMedia/xD
  FTL (Flash translation layer).
  Write support is only lightly tested, therefore this driver
  isn't recommended to use with valuable data (anyway if you have
  valuable data, do backups regardless of software/hardware you
  use, because you never know what will eat your data...)
  If you only need R/O access, you can use older R/O driver
  (CONFIG_SSFDC)

SM_GCC_8150
  Support for the global clock controller on SM8150 devices.
  Say Y if you want to use peripheral devices such as UART,
  SPI, I2C, USB, SD/UFS, PCIe etc.

SM_GCC_8250
  Support for the global clock controller on SM8250 devices.
  Say Y if you want to use peripheral devices such as UART,
  SPI, I2C, USB, SD/UFS, PCIe etc.

SM_GPUCC_8150
  Support for the graphics clock controller on SM8150 devices.
  Say Y if you want to support graphics controller devices and
  functionality such as 3D graphics.

SM_GPUCC_8250
  Support for the graphics clock controller on SM8250 devices.
  Say Y if you want to support graphics controller devices and
  functionality such as 3D graphics.

SM_VIDEOCC_8150
  Support for the video clock controller on SM8150 devices.
  Say Y if you want to support video devices and functionality such as
  video encode and decode.

SM_VIDEOCC_8250
  Support for the video clock controller on SM8250 devices.
  Say Y if you want to support video devices and functionality such as
  video encode and decode.

SND
  Say 'Y' or 'M' to enable ALSA (Advanced Linux Sound Architecture),
  the new base sound system.
  
  For more information, see <http://www.alsa-project.org/>

SND_AC97_CODEC
  No help

SND_AC97_POWER_SAVE
  Say Y here to enable the aggressive power-saving support of
  AC97 codecs.  In this mode, the power-mode is dynamically
  controlled at each open/close.
  
  The mode is activated by passing 'power_save=X' to the
  snd-ac97-codec driver module, where 'X' is the time-out
  value, a nonnegative integer that specifies how many
  seconds of idle time the driver must count before it may
  put the AC97 into power-save mode;  a value of 0 (zero)
  disables the use of this power-save mode.
  
  After the snd-ac97-codec driver module has been loaded,
  the 'power_save' parameter can be set via sysfs as follows:
  
    echo 10 > /sys/module/snd_ac97_codec/parameters/power_save
  
  In this case, the time-out is set to 10 seconds; setting
  the time-out to 1 second (the minimum activation value)
  isn't recommended because many applications try to reopen
  the device frequently.  A value of 10 seconds would be a
  good choice for normal operations.
  
  See Documentation/sound/designs/powersave.rst for more details.

SND_AC97_POWER_SAVE_DEFAULT
  The default time-out value in seconds for AC97 automatic
  power-save mode.  0 means to disable the power-save mode.
  
  See SND_AC97_POWER_SAVE for more details.

SND_AD1816A
  Say Y here to include support for Analog Devices SoundPort
  AD1816A or compatible sound chips.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-ad1816a.

SND_AD1848
  Say Y here to include support for AD1848 (Analog Devices) or
  CS4248 (Cirrus Logic - Crystal Semiconductors) chips.
  
  For newer chips from Cirrus Logic, use the CS4231 or CS4232+
  drivers.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-ad1848.

SND_AD1889
  Say Y here to include support for the integrated AC97 sound
  device found in particular on the Hewlett-Packard [BCJ]-xxx0
  class PA-RISC workstations, using the AD1819 codec.
  
  To compile this as a module, choose M here: the module
  will be called snd-ad1889.

SND_ADLIB
  Say Y here to include support for AdLib FM cards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-adlib.

SND_AICA
  ALSA Sound driver for the SEGA Dreamcast console.

SND_ALI5451
  Say Y here to include support for the integrated AC97 sound
  device on motherboards using the ALi M5451 Audio Controller
  (M1535/M1535D/M1535+/M1535D+ south bridges).  Newer chipsets
  use the "Intel/SiS/nVidia/AMD/ALi AC97 Controller" driver.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-ali5451.

SND_ALOOP
  Say 'Y' or 'M' to include support for the PCM loopback device.
  This module returns played samples back to the user space using
  the standard ALSA PCM device. The devices are routed 0->1 and
  1->0, where first number is the playback PCM device and second
  number is the capture device. Module creates two PCM devices and
  configured number of substreams (see the pcm_substreams module
  parameter).
  
  The loopback device allows time sychronization with an external
  timing source using the time shift universal control (+-20%
  of system time).
  
  To compile this driver as a module, choose M here: the module
  will be called snd-aloop.

SND_ALS100
  Say Y here to include support for soundcards based on the
  Diamond Technologies DT-019X or Avance Logic chips: ALS007,
  ALS100, ALS110, ALS120 and ALS200 chips.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-als100.

SND_ALS300
  Say 'Y' or 'M' to include support for Avance Logic ALS300/ALS300+
  
  To compile this driver as a module, choose M here: the module
  will be called snd-als300

SND_ALS4000
  Say Y here to include support for soundcards based on Avance Logic
  ALS4000 chips.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-als4000.

SND_AOA
  This option enables the new driver for the various
  Apple Onboard Audio components.

SND_AOA_FABRIC_LAYOUT
  This enables the layout-id fabric for the Apple Onboard
  Audio driver, the module holding it all together
  based on the device-tree's layout-id property.
  
  If you are unsure and have a later Apple machine,
  compile it as a module.

SND_AOA_ONYX
  This option enables support for the Onyx (pcm3052)
  codec chip found in the latest Apple machines
  (most of those with digital audio output).

SND_AOA_SOUNDBUS
  This option enables the generic driver for the soundbus
  support on Apple machines.
  
  It is required for the sound bus implementations.

SND_AOA_SOUNDBUS_I2S
  This option enables support for Apple I2S busses.

SND_AOA_TAS
  This option enables support for the tas chips
  found in a lot of Apple Machines, especially
  iBooks and PowerBooks without digital.

SND_AOA_TOONIE
  This option enables support for the toonie codec
  found in the Mac Mini. If you have a Mac Mini and
  want to hear sound, select this option.

SND_ARM
  Support for sound devices specific to ARM architectures.
  Drivers that are implemented on ASoC can be found in
  "ALSA for SoC audio support" section.

SND_ARMAACI
  No help

SND_ASIHPI
  Say Y here to include support for AudioScience ASI sound cards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-asihpi.

SND_AT73C213
  Say Y here if you want to use the Atmel AT73C213 external DAC. This
  DAC can be found on Atmel development boards.
  
  This driver requires the Atmel SSC driver for sound sink, a
  peripheral found on most AT91 and AVR32 microprocessors.
  
  To compile this driver as a module, choose M here: the module will be
  called snd-at73c213.

SND_AT73C213_TARGET_BITRATE
  Sets the target bitrate for the bitrate calculator in the driver.
  Limited by hardware to be between 8000 Hz and 50000 Hz.
  
  Set to 48000 Hz by default.

SND_AT91_SOC_SAM9G20_WM8731
  Say Y if you want to add support for SoC audio on WM8731-based
  AT91sam9g20 evaluation board.

SND_AT91_SOC_SAM9X5_WM8731
  Say Y if you want to add support for audio SoC on an
  at91sam9x5 based board that is using WM8731 codec.

SND_ATIIXP
  Say Y here to include support for the integrated AC97 sound
  device on motherboards with ATI chipsets (ATI IXP 150/200/250/
  300/400).
  
  To compile this driver as a module, choose M here: the module
  will be called snd-atiixp.

SND_ATIIXP_MODEM
  Say Y here to include support for the integrated MC97 modem on
  motherboards with ATI chipsets (ATI IXP 150/200/250).
  
  To compile this driver as a module, choose M here: the module
  will be called snd-atiixp-modem.

SND_ATMEL_AC97C
  ALSA sound driver for the Atmel AC97 controller.

SND_ATMEL_SOC
  Say Y or M if you want to add support for codecs attached to
  the ATMEL SSC interface. You will also need
  to select the audio interfaces to support below.

SND_ATMEL_SOC_CLASSD
  Say Y if you want to add support for Atmel ASoC driver for boards using
  CLASSD.

SND_ATMEL_SOC_DMA
  No help

SND_ATMEL_SOC_I2S
  Say Y or M if you want to add support for Atmel ASoc driver for boards
  using I2S.

SND_ATMEL_SOC_PDC
  No help

SND_ATMEL_SOC_PDMIC
  Say Y if you want to add support for Atmel ASoC driver for boards using
  PDMIC.

SND_ATMEL_SOC_SSC
  No help

SND_ATMEL_SOC_SSC_DMA
  Say Y or M if you want to add support for Atmel SSC interface
  in DMA mode configured using audio-graph-card in device-tree.

SND_ATMEL_SOC_SSC_PDC
  Say Y or M if you want to add support for Atmel SSC interface
  in PDC mode configured using audio-graph-card in device-tree.

SND_ATMEL_SOC_TSE850_PCM5142
  Say Y if you want to add support for the ASoC driver for the
  Axentia TSE-850 with a PCM5142 codec.

SND_ATMEL_SOC_WM8904
  Say Y if you want to add support for Atmel ASoC driver for boards using
  WM8904 codec.

SND_AU8810
  Say Y here to include support for Aureal Advantage soundcards.
  
  Supported features: Hardware Mixer, SRC, EQ and SPDIF output.
  3D support code is in place, but not yet useable. For more info,
  email the ALSA developer list, or <mjander@users.sourceforge.net>.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-au8810.

SND_AU8820
  Say Y here to include support for Aureal Vortex soundcards.
  
  Supported features: Hardware Mixer and SRC. For more info, email
  the ALSA developer list, or <mjander@users.sourceforge.net>.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-au8820.

SND_AU8830
  Say Y here to include support for Aureal Vortex 2 soundcards.
  
  Supported features: Hardware Mixer, SRC, EQ and SPDIF output.
  3D support code is in place, but not yet useable. For more info,
  email the ALSA developer list, or <mjander@users.sourceforge.net>.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-au8830.

SND_AUDIO_GRAPH_CARD
  This option enables generic simple sound card support
  with OF-graph DT bindings.
  It also support DPCM of multi CPU single Codec ststem.

SND_AW2
  Say Y here to include support for Emagic Audiowerk 2 soundcards.
  
  Supported features: Analog and SPDIF output. Analog or SPDIF input.
  Note: Switch between analog and digital input does not always work.
  It can produce continuous noise. The workaround is to switch again
  (and again) between digital and analog input until it works.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-aw2.

SND_AZT1605
  Say Y here to include support for Aztech Sound Galaxy cards
  based on the AZT1605 chipset.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-azt1605.

SND_AZT2316
  Say Y here to include support for Aztech Sound Galaxy cards
  based on the AZT2316 chipset.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-azt2316.

SND_AZT2320
  Say Y here to include support for soundcards based on the
  Aztech Systems AZT2320 chip.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-azt2320.

SND_AZT3328
  Say Y here to include support for Aztech AZF3328 (PCI168)
  soundcards.
  
  Supported features: AC97-"conformant" mixer, MPU401/OPL3, analog I/O
  (16bit/8bit, many sample rates [<= 66.2kHz], NO hardware mixing),
  Digital Enhanced Game Port, 1.024MHz multimedia sequencer timer,
  ext. codec (I2S port), onboard amp (4W/4Ohms/ch), suspend/resume.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-azt3328.

SND_BCD2000
  Say Y here to include MIDI support for the Behringer BCD2000 DJ
  controller.
  
  Audio support is still work-in-progress at
  https://github.com/anyc/snd-usb-bcd2000
  
  To compile this driver as a module, choose M here: the module
  will be called snd-bcd2000.

SND_BCM2835
  Say Y or M if you want to support BCM2835 built in audio
  

SND_BCM2835_SOC_I2S
  Say Y or M if you want to add support for codecs attached to
  the BCM2835 I2S interface. You will also need
  to select the audio interfaces to support below.

SND_BCM63XX_I2S_WHISTLER
  Say Y if you want to add support for ASoC audio on Broadcom
  DSL/PON chips (bcm63158, bcm63178)
  
  If you don't know what to do here, say N

SND_BEBOB
  Say Y here to include support for FireWire devices based
  on BridgeCo DM1000/DM1100/DM1500 with BeBoB firmware:
   * Edirol FA-66/FA-101
   * PreSonus FIREBOX/FIREPOD/FP10/Inspire1394
   * BridgeCo RDAudio1/Audio5
   * Mackie Onyx 1220/1620/1640 (FireWire I/O Card)
   * Mackie d.2 (FireWire Option)
   * Stanton FinalScratch 2 (ScratchAmp)
   * Tascam IF-FW/DM
   * Behringer XENIX UFX 1204/1604
   * Behringer Digital Mixer X32 series (X-UF Card)
   * Behringer FCA610/1616
   * Apogee Rosetta 200/400 (X-FireWire card)
   * Apogee DA/AD/DD-16X (X-FireWire card)
   * Apogee Ensemble
   * ESI QuataFire 610
   * AcousticReality eARMasterOne
   * CME MatrixKFW
   * Phonic Helix Board 12 MkII/18 MkII/24 MkII
   * Phonic Helix Board 12 Universal/18 Universal/24 Universal
   * Lynx Aurora 8/16 (LT-FW)
   * ICON FireXon
   * PrismSound Orpheus/ADA-8XR
   * TerraTec PHASE 24 FW/PHASE X24 FW/PHASE 88 Rack FW
   * TerraTec EWS MIC2/EWS MIC8
   * TerraTec Aureon 7.1 FireWire
   * Yamaha GO44/GO46
   * Focusrite Saffire/Saffire LE/SaffirePro10 IO/SaffirePro26 IO
   * M-Audio FireWire410/AudioPhile/Solo
   * M-Audio Ozonic/NRV10/ProfireLightBridge
   * M-Audio FireWire 1814/ProjectMix IO
   * Digidesign Mbox 2 Pro
  
   To compile this driver as a module, choose M here: the module
   will be called snd-bebob.

SND_BT87X
  If you want to record audio from TV cards based on
  Brooktree Bt878/Bt879 chips, say Y here and read
  <file:Documentation/sound/cards/bt87x.rst>.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-bt87x.

SND_BT87X_OVERCLOCK
  Say Y here if 448000 Hz isn't enough for you and you want to
  record from the analog input with up to 1792000 Hz.
  
  Higher sample rates won't hurt your hardware, but audio
  quality may suffer.

SND_CA0106
  Say Y here to include support for the Sound Blaster Audigy LS
  and Live 24bit.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-ca0106.

SND_CMI8328
  Say Y here to include support for soundcards based on the
  C-Media CMI8328 chip.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-cmi8328.

SND_CMI8330
  Say Y here to include support for soundcards based on the
  C-Media CMI8330 chip.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-cmi8330.

SND_CMIPCI
  If you want to use soundcards based on C-Media CMI8338, CMI8738,
  CMI8768 or CMI8770 chips, say Y here and read
  <file:Documentation/sound/cards/cmipci.rst>.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-cmipci.

SND_COMPRESS_OFFLOAD
  No help

SND_CS4231
  Say Y here to include support for CS4231 chips from Cirrus
  Logic - Crystal Semiconductors.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-cs4231.

SND_CS4236
  Say Y to include support for CS4232,CS4235,CS4236,CS4237B,
  CS4238B,CS4239 chips from Cirrus Logic - Crystal
  Semiconductors.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-cs4236.

SND_CS4281
  Say Y here to include support for Cirrus Logic CS4281 chips.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-cs4281.

SND_CS46XX
  Say Y here to include support for Cirrus Logic CS4610/CS4612/
  CS4614/CS4615/CS4622/CS4624/CS4630/CS4280 chips.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-cs46xx.

SND_CS46XX_NEW_DSP
  Say Y here to use a new DSP image for SPDIF and dual codecs.
  
  This works better than the old code, so say Y.

SND_CS5530
  Say Y here to include support for audio on Cyrix/NatSemi CS5530 chips.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-cs5530.

SND_CS5535AUDIO
  Say Y here to include support for audio on CS5535 chips. It is
  referred to as NS CS5535 IO or AMD CS5535 IO companion in
  various literature. This driver also supports the CS5536 audio
  device. However, for both chips, on certain boards, you may
  need to use ac97_quirk=hp_only if your board has physically
  mapped headphone out to master output. If that works for you,
  send lspci -vvv output to the mailing list so that your board
  can be identified in the quirks list.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-cs5535audio.

SND_CTL_VALIDATION
  Say Y to enable the additional validation of each control element
  access, including sanity-checks like whether the values returned
  from the driver are in the proper ranges or the check of the invalid
  access at out-of-array areas.

SND_CTXFI
  If you want to use soundcards based on Creative Sound Blastr X-Fi
  boards with 20k1 or 20k2 chips, say Y here.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-ctxfi.

SND_DARLA20
  Say 'Y' or 'M' to include support for Echoaudio Darla.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-darla20

SND_DARLA24
  Say 'Y' or 'M' to include support for Echoaudio Darla24.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-darla24

SND_DEBUG
  Say Y here to enable ALSA debug code.

SND_DEBUG_VERBOSE
  Say Y here to enable extra-verbose debugging messages.
  
  Let me repeat: it enables EXTRA-VERBOSE DEBUGGING messages.
  So, say Y only if you are ready to be annoyed.

SND_DESIGNWARE_I2S
  Say Y or M if you want to add support for I2S driver for
  Synopsys designware I2S device. The device supports up to
  a maximum of 8 channels each for play and record.

SND_DESIGNWARE_PCM
  Say Y or N if you want to add a custom ALSA extension that registers
  a PCM and uses PIO to transfer data.
  
  This functionality is specially suited for I2S devices that don't have
  DMA support.
  

SND_DICE
  Say Y here to include support for many DACs based on the DICE
  chip family (DICE-II/Jr/Mini) which TC Applied Technologies produces.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-dice.

SND_DMAENGINE_PCM
  No help

SND_DMA_SGBUF
  No help

SND_DRIVERS
  Support for generic sound devices.

SND_DUMMY
  Say Y here to include the dummy driver.  This driver does
  nothing, but emulates various mixer controls and PCM devices.
  
  You don't need this unless you're testing the hardware support
  of programs using the ALSA API.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-dummy.

SND_DYNAMIC_MINORS
  If you say Y here, the minor numbers of ALSA device files in
  /dev/snd/ are allocated dynamically.  This allows you to have
  more than 8 sound cards, but requires a dynamic device file
  system like udev.
  
  If you are unsure about this, say N here.

SND_ECHO3G
  Say 'Y' or 'M' to include support for Echoaudio Gina3G and Layla3G.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-echo3g

SND_EMU10K1
  Say Y to include support for Sound Blaster PCI 512, Live!,
  Audigy and E-mu APS (partially supported) soundcards.
  
  The confusing multitude of mixer controls is documented in
  <file:Documentation/sound/cards/sb-live-mixer.rst> and
  <file:Documentation/sound/cards/audigy-mixer.rst>.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-emu10k1.

SND_EMU10K1X
  Say Y here to include support for the Dell OEM version of the
  Sound Blaster Live!.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-emu10k1x.

SND_EMU10K1_SEQ
  No help

SND_ENS1370
  Say Y here to include support for Ensoniq AudioPCI ES1370 chips.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-ens1370.

SND_ENS1371
  Say Y here to include support for Ensoniq AudioPCI ES1371 chips and
  Sound Blaster PCI 64 or 128 soundcards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-ens1371.

SND_EP93XX_SOC
  Say Y or M if you want to add support for codecs attached to
  the EP93xx I2S or AC97 interfaces.

SND_EP93XX_SOC_AC97
  No help

SND_EP93XX_SOC_EDB93XX
  Say Y or M here if you want to add support for I2S audio on the
  Cirrus Logic EDB93xx boards.

SND_EP93XX_SOC_I2S
  No help

SND_EP93XX_SOC_I2S_WATCHDOG
  I2S controller on EP93xx seems to have undocumented HW issue.
  Underflow of internal I2S controller FIFO could confuse the
  state machine and the whole stream can be shifted by one byte
  until I2S is disabled. This option enables IRQ based watchdog
  which disables and re-enables I2S in case of underflow and
  fills FIFO with zeroes.
  
  If you are unsure how to answer this question, answer Y.

SND_EP93XX_SOC_SIMONE
  Say Y or M here if you want to add support for AC97 audio on the
  Simplemachines Sim.One board.

SND_EP93XX_SOC_SNAPPERCL15
  Say Y or M here if you want to add support for I2S audio on the
  Bluewater Systems Snapper CL15 module.

SND_ES1688
  Say Y here to include support for ESS AudioDrive ES688 or
  ES1688 chips. Also, this module support cards with ES968 PnP chip.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-es1688.

SND_ES18XX
  Say Y here to include support for ESS AudioDrive ES18xx chips.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-es18xx.

SND_ES1938
  Say Y here to include support for soundcards based on ESS Solo-1
  (ES1938, ES1946, ES1969) chips.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-es1938.

SND_ES1968
  Say Y here to include support for soundcards based on ESS Maestro
  1/2/2E chips.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-es1968.

SND_ES1968_INPUT
  If you say Y here, you will get an input device which reports
  keypresses for the volume buttons connected to the es1968 chip.
  If you say N the buttons will directly control the master volume.
  It is recommended to say Y.

SND_ES1968_RADIO
  Say Y here to include support for TEA5757 radio tuner integrated on
  some MediaForte cards (e.g. SF64-PCE2).

SND_FIREFACE
  Say Y here to include support for RME fireface series.
   * Fireface 400
   * Fireface 800
   * Fireface UFX
   * Fireface UCX
   * Fireface 802

SND_FIREWIRE
  Support for IEEE-1394/FireWire/iLink sound devices.

SND_FIREWIRE_DIGI00X
  Say Y here to include support for Digidesign Digi 002/003 family.
   * Digi 002 Console
   * Digi 002 Rack
   * Digi 003 Console
   * Digi 003 Rack
   * Digi 003 Rack+
  
  To compile this driver as a module, choose M here: the module
  will be called snd-firewire-digi00x.

SND_FIREWIRE_LIB
  No help

SND_FIREWIRE_MOTU
  Say Y here to enable support for FireWire devices which MOTU produced:
   * 828mk2
   * Traveler
   * Ultralite
   * 8pre
   * 828mk3 (FireWire only)
   * 828mk3 (Hybrid)
   * Audio Express
   * 4pre
  
  To compile this driver as a module, choose M here: the module
  will be called snd-firewire-motu.

SND_FIREWIRE_TASCAM
  Say Y here to include support for TASCAM.
   * FW-1884
   * FW-1082
   * FW-1804
  
  To compile this driver as a module, choose M here: the module
  will be called snd-firewire-tascam.

SND_FIREWORKS
  Say Y here to include support for FireWire devices based
  on Echo Digital Audio Fireworks board:
   * Mackie Onyx 400F/1200F
   * Echo AudioFire12/8(until 2009 July)
   * Echo AudioFire2/4/Pre8/8(since 2009 July)
   * Echo Fireworks 8/HDMI
   * Gibson Robot Interface Pack/GoldTop
  
  To compile this driver as a module, choose M here: the module
  will be called snd-fireworks.

SND_FM801
  Say Y here to include support for soundcards based on the ForteMedia
  FM801 chip.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-fm801.

SND_FM801_TEA575X_BOOL
  Say Y here to include support for soundcards based on the ForteMedia
  FM801 chip with a TEA5757 tuner (MediaForte SF256-PCS, SF256-PCP and
  SF64-PCR) into the snd-fm801 driver.

SND_GINA20
  Say 'Y' or 'M' to include support for Echoaudio Gina.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-gina20

SND_GINA24
  Say 'Y' or 'M' to include support for Echoaudio Gina24.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-gina24

SND_GSC
  Support for GSC sound devices on PA-RISC architectures.

SND_GUSCLASSIC
  Say Y here to include support for Gravis UltraSound Classic
  soundcards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-gusclassic.

SND_GUSEXTREME
  Say Y here to include support for Gravis UltraSound Extreme
  soundcards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-gusextreme.

SND_GUSMAX
  Say Y here to include support for Gravis UltraSound MAX
  soundcards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-gusmax.

SND_HARMONY
  Say 'Y' or 'M' to include support for the Harmony/Vivace sound
  chip found in most GSC-based PA-RISC workstations.  It's frequently
  provided as part of the Lasi multi-function IC.

SND_HDA
  No help

SND_HDA_ALIGNED_MMIO
  No help

SND_HDA_CODEC_ANALOG
  Say Y or M here to include Analog Devices HD-audio codec support in
  snd-hda-intel driver, such as AD1986A.

SND_HDA_CODEC_CA0110
  Say Y or M here to include Creative CA0110-IBG codec support in
  snd-hda-intel driver, found on some Creative X-Fi cards.

SND_HDA_CODEC_CA0132
  Say Y or M here to include Creative CA0132 codec support in
  snd-hda-intel driver.

SND_HDA_CODEC_CA0132_DSP
  Say Y here to enable the DSP for Creative CA0132 for extended
  features like equalizer or echo cancellation.
  
  Note that this option requires the external firmware file
  (ctefx.bin).

SND_HDA_CODEC_CIRRUS
  Say Y or M here to include Cirrus Logic codec support in
  snd-hda-intel driver, such as CS4206.

SND_HDA_CODEC_CMEDIA
  Say Y or M here to include C-Media HD-audio codec support in
  snd-hda-intel driver, such as CMI9880.

SND_HDA_CODEC_CONEXANT
  Say Y or M here to include Conexant HD-audio codec support in
  snd-hda-intel driver, such as CX20549.

SND_HDA_CODEC_HDMI
  Say Y or M here to include HDMI and DisplayPort HD-audio codec
  support in snd-hda-intel driver.  This includes all AMD/ATI,
  Intel and Nvidia HDMI/DisplayPort codecs.
  
  Note that this option mandatorily enables CONFIG_SND_DYNAMIC_MINORS
  to assure the multiple streams for DP-MST support.

SND_HDA_CODEC_REALTEK
  Say Y or M here to include Realtek HD-audio codec support in
  snd-hda-intel driver, such as ALC880.

SND_HDA_CODEC_SI3054
  Say Y or M here to include Silicon Labs 3054 HD-modem codec
  (and compatibles) support in snd-hda-intel driver.

SND_HDA_CODEC_SIGMATEL
  Say Y or M here to include IDT (Sigmatel) HD-audio codec support in
  snd-hda-intel driver, such as STAC9200.

SND_HDA_CODEC_VIA
  Say Y or M here to include VIA HD-audio codec support in
  snd-hda-intel driver, such as VT1708.

SND_HDA_COMPONENT
  No help

SND_HDA_CORE
  No help

SND_HDA_DSP_LOADER
  No help

SND_HDA_EXT_CORE
  No help

SND_HDA_GENERIC
  Say Y or M here to enable the generic HD-audio codec parser
  in snd-hda-intel driver.

SND_HDA_GENERIC_LEDS
  No help

SND_HDA_HWDEP
  Say Y here to build a hwdep interface for HD-audio driver.
  This interface can be used for out-of-band communication
  with codecs for debugging purposes.

SND_HDA_I915
  No help

SND_HDA_INPUT_BEEP
  Say Y here to build a digital beep interface for HD-audio
  driver. This interface is used to generate digital beeps.

SND_HDA_INPUT_BEEP_MODE
  Set 0 to disable the digital beep interface for HD-audio by default.
  Set 1 to always enable the digital beep interface for HD-audio by
  default.

SND_HDA_INTEL
  Say Y here to include support for Intel "High Definition
  Audio" (Azalia) and its compatible devices.
  
  This option enables the HD-audio controller.  Don't forget
  to choose the appropriate codec options below.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-hda-intel.

SND_HDA_INTEL_HDMI_SILENT_STREAM
  Intel hardware has a feature called 'silent stream', that
  keeps external HDMI receiver's analog circuitry powered on
  avoiding 2-3 sec silence during playback start. This mechanism
  relies on setting channel_id as 0xf, sending info packet and
  preventing codec D3 entry (increasing  platform static power
  consumption when HDMI receiver is plugged-in). 2-3 sec silence
  at the playback start is expected whenever there is format change.
  (default is 2 channel format).
  Say Y to enable Silent Stream feature.

SND_HDA_PATCH_LOADER
  Say Y here to allow the HD-audio driver to load a pseudo
  firmware file ("patch") for overriding the BIOS setup at
  start up.  The "patch" file can be specified via patch module
  option, such as patch=hda-init.

SND_HDA_POWER_SAVE_DEFAULT
  The default time-out value in seconds for HD-audio automatic
  power-save mode.  0 means to disable the power-save mode.

SND_HDA_PREALLOC_SIZE
  Specifies the default pre-allocated buffer-size in kB for the
  HD-audio driver.  A larger buffer (e.g. 2048) is preferred
  for systems using PulseAudio.  The default 64 is chosen just
  for compatibility reasons.
  On x86 systems, the default is 2048 as a reasonable value for
  most of modern systems.
  
  Note that the pre-allocation size can be changed dynamically
  via a proc file (/proc/asound/card*/pcm*/sub*/prealloc), too.

SND_HDA_RECONFIG
  Say Y here to enable the HD-audio codec re-configuration feature.
  It allows user to clear the whole codec configuration, change the
  codec setup, add extra verbs, and re-configure the codec dynamically.
  
  Note that this item alone doesn't provide the sysfs interface, but
  enables the feature just for the patch loader below.
  If you need the traditional sysfs entries for the manual interaction,
  turn on CONFIG_SND_HDA_HWDEP as well.

SND_HDA_TEGRA
  Say Y here to support the HDA controller present in NVIDIA
  Tegra SoCs
  
  This options enables support for the HD Audio controller
  present in some NVIDIA Tegra SoCs, used to communicate audio
  to the HDMI output.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-hda-tegra.

SND_HDSP
  Say Y here to include support for RME Hammerfall DSP Audio
  soundcards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-hdsp.

SND_HDSPM
  Say Y here to include support for RME Hammerfall DSP MADI,
  RayDAT and AIO soundcards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-hdspm.

SND_HRTIMER
  Say Y here to enable HR-timer backend for ALSA timer.  ALSA uses
  the hrtimer as a precise timing source. The ALSA sequencer code
  also can use this timing source.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-hrtimer.

SND_HWDEP
  No help

SND_I2S_HI6210_I2S
  Hisilicon I2S

SND_ICE1712
  Say Y here to include support for soundcards based on the
  ICE1712 (Envy24) chip.
  
  Currently supported hardware is: M-Audio Delta 1010(LT),
  DiO 2496, 66, 44, 410, Audiophile 24/96; Digigram VX442;
  TerraTec EWX 24/96, EWS 88MT/D, DMX 6Fire, Phase 88;
  Hoontech SoundTrack DSP 24/Value/Media7.1; Event EZ8;
  Lionstracs Mediastation, Terrasoniq TS 88.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-ice1712.

SND_ICE1724
  Say Y here to include support for soundcards based on
  ICE/VT1724/1720 (Envy24HT/PT) chips.
  
  Currently supported hardware is: AMP AUDIO2000; M-Audio
  Revolution 5.1, 7.1, Audiophile 192; TerraTec Aureon 5.1 Sky,
  7.1 Space/Universe, Phase 22/28; Onkyo SE-90PCI, SE-200PCI;
  AudioTrak Prodigy 192, 7.1 (HIFI/LT/XT), HD2; Hercules
  Fortissimo IV; ESI Juli@; Pontis MS300; EGO-SYS WaveTerminal
  192M; Albatron K8X800 Pro II; Chaintech ZNF3-150/250, 9CJS,
  AV-710; Shuttle SN25P; Philips PSC724 Ultimate Edge.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-ice1724.

SND_IMX_SOC
  Say Y or M if you want to add support for codecs attached to
  the i.MX CPUs.

SND_INDIGO
  Say 'Y' or 'M' to include support for Echoaudio Indigo.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-indigo

SND_INDIGODJ
  Say 'Y' or 'M' to include support for Echoaudio Indigo DJ.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-indigodj

SND_INDIGODJX
  Say 'Y' or 'M' to include support for Echoaudio Indigo DJx.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-indigodjx

SND_INDIGOIO
  Say 'Y' or 'M' to include support for Echoaudio Indigo IO.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-indigoio

SND_INDIGOIOX
  Say 'Y' or 'M' to include support for Echoaudio Indigo IOx.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-indigoiox

SND_INTEL8X0
  Say Y here to include support for the integrated AC97 sound
  device on motherboards with Intel/SiS/nVidia/AMD chipsets, or
  ALi chipsets using the M5455 Audio Controller.  (There is a
  separate driver for ALi M5451 Audio Controllers.)
  
  To compile this driver as a module, choose M here: the module
  will be called snd-intel8x0.

SND_INTEL8X0M
  Say Y here to include support for the integrated MC97 modem on
  motherboards with Intel/SiS/nVidia/AMD chipsets.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-intel8x0m.

SND_INTEL_DSP_CONFIG
  No help

SND_INTEL_NHLT
  No help

SND_INTERWAVE
  Say Y here to include support for AMD InterWave based
  soundcards (Gravis UltraSound Plug & Play, STB SoundRage32,
  MED3210, Dynasonic Pro, Panasonic PCA761AW).
  
  To compile this driver as a module, choose M here: the module
  will be called snd-interwave.

SND_INTERWAVE_STB
  Say Y here to include support for AMD InterWave based
  soundcards with a TEA6330T bass and treble regulator
  (UltraSound 32-Pro).
  
  To compile this driver as a module, choose M here: the module
  will be called snd-interwave-stb.

SND_ISA
  Support for sound devices connected via the ISA bus.

SND_ISIGHT
  Say Y here to include support for the front and rear microphones
  of the Apple iSight web camera.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-isight.

SND_JACK
  No help

SND_JACK_INPUT_DEV
  No help

SND_JAZZ16
  Say Y here to include support for soundcards based on the
  Media Vision Jazz16 chipset: digital chip MVD1216 (Jazz16),
  codec MVA416 (CS4216) and mixer MVA514 (ICS2514).
  Media Vision's Jazz16 cards were sold under names Pro Sonic 16,
  Premium 3-D and Pro 3-D. There were also OEMs cards with the
  Jazz16 chipset.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-jazz16.

SND_JZ4740_SOC_I2S
  Say Y if you want to use I2S protocol and I2S codec on Ingenic JZ4740
  based boards.

SND_KIRKWOOD_SOC
  Say Y or M if you want to add support for codecs attached to
  the Kirkwood I2S interface. You will also need to select the
  audio interfaces to support below.

SND_KIRKWOOD_SOC_ARMADA370_DB
  Say Y if you want to add support for SoC audio on
  the Armada 370 Development Board.
  

SND_KORG1212
  Say Y here to include support for Korg 1212IO soundcards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-korg1212.

SND_LAYLA20
  Say 'Y' or 'M' to include support for Echoaudio Layla.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-layla20

SND_LAYLA24
  Say 'Y' or 'M' to include support for Echoaudio Layla24.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-layla24

SND_LOLA
  Say Y to include support for Digigram Lola boards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-lola.

SND_LX6464ES
  Say Y here to include support for Digigram LX6464ES boards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-lx6464es.

SND_MAESTRO3
  Say Y here to include support for soundcards based on ESS Maestro 3
  (Allegro) chips.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-maestro3.

SND_MAESTRO3_INPUT
  If you say Y here, you will get an input device which reports
  keypresses for the volume buttons connected to the maestro3 chip.
  If you say N the buttons will directly control the master volume.
  It is recommended to say Y.

SND_MAX_CARDS
  Specify the max number of sound cards that can be assigned
  on a single machine.

SND_MCHP_SOC_I2S_MCC
  Say Y or M if you want to add support for I2S Multi-Channel ASoC
  driver on the following Microchip platforms:
  - sam9x60
  
  The I2SMCC complies with the Inter-IC Sound (I2S) bus specification
  and supports a Time Division Multiplexed (TDM) interface with
  external multi-channel audio codecs.

SND_MCHP_SOC_SPDIFRX
  Say Y or M if you want to add support for Microchip S/PDIF RX ASoc
  driver on the following Microchip platforms:
  - sama7g5
  
  This S/PDIF RX driver is compliant with IEC-60958 standard and
  includes programmable User Data and Channel Status fields.

SND_MCHP_SOC_SPDIFTX
  Say Y or M if you want to add support for Microchip S/PDIF TX ASoc
  driver on the following Microchip platforms:
  - sama7g5
  
  This S/PDIF TX driver is compliant with IEC-60958 standard and
  includes programmable User Data and Channel Status fields.

SND_MESON_AIU
  Select Y or M to add support for the Audio output subsystem found
  in the Amlogic Meson8, Meson8b and GX SoC families

SND_MESON_AXG_FIFO
  No help

SND_MESON_AXG_FRDDR
  Select Y or M to add support for the frontend playback interfaces
  embedded in the Amlogic AXG SoC family

SND_MESON_AXG_PDM
  Select Y or M to add support for PDM input embedded
  in the Amlogic AXG SoC family

SND_MESON_AXG_SOUND_CARD
  Select Y or M to add support for the AXG SoC sound card

SND_MESON_AXG_SPDIFIN
  Select Y or M to add support for SPDIF input embedded
  in the Amlogic AXG SoC family

SND_MESON_AXG_SPDIFOUT
  Select Y or M to add support for SPDIF output serializer embedded
  in the Amlogic AXG SoC family

SND_MESON_AXG_TDMIN
  Select Y or M to add support for TDM input formatter embedded
  in the Amlogic AXG SoC family

SND_MESON_AXG_TDMOUT
  Select Y or M to add support for TDM output formatter embedded
  in the Amlogic AXG SoC family

SND_MESON_AXG_TDM_FORMATTER
  No help

SND_MESON_AXG_TDM_INTERFACE
  No help

SND_MESON_AXG_TODDR
  Select Y or M to add support for the frontend capture interfaces
  embedded in the Amlogic AXG SoC family

SND_MESON_CARD_UTILS
  No help

SND_MESON_CODEC_GLUE
  No help

SND_MESON_G12A_TOACODEC
  Select Y or M to add support for the internal audio DAC on the
  g12a SoC family

SND_MESON_G12A_TOHDMITX
  Select Y or M to add support for HDMI audio on the g12a SoC
  family

SND_MESON_GX_SOUND_CARD
  Select Y or M to add support for the GXBB/GXL SoC sound card

SND_MIA
  Say 'Y' or 'M' to include support for Echoaudio Mia and Mia-midi.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-mia

SND_MIPS
  Support for sound devices of MIPS architectures.

SND_MIRO
  Say 'Y' or 'M' to include support for Miro miroSOUND PCM1 pro,
  miroSOUND PCM12 and miroSOUND PCM20 Radio soundcards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-miro.

SND_MIXART
  If you want to use Digigram miXart soundcards, say Y here and
  read <file:Documentation/sound/cards/mixart.rst>.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-mixart.

SND_MIXER_OSS
  To enable OSS mixer API emulation (/dev/mixer*), say Y here
  and read <file:Documentation/sound/designs/oss-emulation.rst>.
  
  Many programs still use the OSS API, so say Y.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-mixer-oss.

SND_MMP_SOC
  No help

SND_MMP_SOC_BROWNSTONE
  Say Y if you want to add support for SoC audio on the
  Marvell Brownstone reference platform.

SND_MMP_SOC_SSPA
  Say Y if you want to add support for codecs attached to
  the MMP SSPA interface.

SND_MONA
  Say 'Y' or 'M' to include support for Echoaudio Mona.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-mona

SND_MPC52xx_DMA
  No help

SND_MPC52xx_SOC_EFIKA
  Say Y if you want to add support for sound on the Efika.

SND_MPC52xx_SOC_PCM030
  Say Y if you want to add support for sound on the Phytec pcm030
  baseboard.

SND_MPU401
  Say Y here to include support for MIDI ports compatible with
  the Roland MPU-401 interface in UART mode.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-mpu401.

SND_MPU401_UART
  No help

SND_MSND_CLASSIC
  Say M here if you have a Turtle Beach MultiSound Classic, Tahiti or
  Monterey (not for the Pinnacle or Fiji).
  
  See <file:Documentation/sound/cards/multisound.sh> for important information
  about this driver.  Note that it has been discontinued, but the
  Voyetra Turtle Beach knowledge base entry for it is still available
  at <http://www.turtlebeach.com/site/kb_ftp/790.asp>.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-msnd-classic.

SND_MSND_PINNACLE
  Say Y to include support for Turtle Beach MultiSound Pinnacle/
  Fiji soundcards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-msnd-pinnacle.

SND_MTPAV
  To use a MOTU MidiTimePiece AV multiport MIDI adapter
  connected to the parallel port, say Y here and make sure that
  the standard parallel port driver isn't used for the port.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-mtpav.

SND_MTS64
  The ESI Miditerminal 4140 is a 4 In 4 Out MIDI Interface with
  additional SMPTE Timecode capabilities for the parallel port.
  
  Say 'Y' to include support for this device.
  
  To compile this driver as a module, chose 'M' here: the module
  will be called snd-mts64.

SND_MXS_SOC
  Say Y or M if you want to add support for codecs attached to
  the MXS SAIF interface.

SND_NM256
  Say Y here to include support for NeoMagic NM256AV/ZX chips.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-nm256.

SND_OPL3SA2
  Say Y here to include support for Yamaha OPL3-SA2 and OPL3-SA3
  chips.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-opl3sa2.

SND_OPL3_LIB
  No help

SND_OPL3_LIB_SEQ
  No help

SND_OPL4_LIB
  No help

SND_OPL4_LIB_SEQ
  No help

SND_OPTI92X_AD1848
  Say Y here to include support for soundcards based on Opti
  82C92x or OTI-601 chips and using an AD1848 codec.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-opti92x-ad1848.

SND_OPTI92X_CS4231
  Say Y here to include support for soundcards based on Opti
  82C92x chips and using a CS4231 codec.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-opti92x-cs4231.

SND_OPTI93X
  Say Y here to include support for soundcards based on Opti
  82C93x chips.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-opti93x.

SND_OSSEMUL
  This option enables the build of OSS emulation layer.

SND_OXFW
  Say Y here to include support for FireWire devices based on
  Oxford Semiconductor FW970/971 chipset.
   * Griffin Firewave
   * LaCie Firewire Speakers
   * Behringer F-Control Audio 202
   * Mackie(Loud) Onyx-i series (former models)
   * Mackie(Loud) Onyx 1640i (former model)
   * Mackie(Loud) Onyx Satellite
   * Mackie(Loud) Tapco Link.Firewire
   * Mackie(Loud) d.2 pro/d.4 pro
   * Mackie(Loud) U.420/U.420d
   * TASCAM FireOne
   * Stanton Controllers & Systems 1 Deck/Mixer
   * APOGEE duet FireWire
  
  To compile this driver as a module, choose M here: the module
  will be called snd-oxfw.

SND_OXYGEN
  Say Y here to include support for sound cards based on the
  C-Media CMI8788 (Oxygen HD Audio) chip:
   * Asound A-8788
   * Asus Xonar DG/DGX
   * AuzenTech X-Meridian
   * AuzenTech X-Meridian 2G
   * Bgears b-Enspirer
   * Club3D Theatron DTS
   * HT-Omega Claro (plus)
   * HT-Omega Claro halo (XT)
   * Kuroutoshikou CMI8787-HG2PCI
   * Razer Barracuda AC-1
   * Sondigo Inferno
   * TempoTec/MediaTek HiFier Fantasia
   * TempoTec/MediaTek HiFier Serenade
  
  To compile this driver as a module, choose M here: the module
  will be called snd-oxygen.

SND_OXYGEN_LIB
  No help

SND_PCI
  Support for sound devices connected via the PCI bus.

SND_PCM
  No help

SND_PCMCIA
  Support for sound devices connected via the PCMCIA bus.

SND_PCM_ELD
  No help

SND_PCM_IEC958
  No help

SND_PCM_OSS
  To enable OSS digital audio (PCM) emulation (/dev/dsp*), say Y
  here and read <file:Documentation/sound/designs/oss-emulation.rst>.
  
  Many programs still use the OSS API, so say Y.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-pcm-oss.

SND_PCM_OSS_PLUGINS
  If you disable this option, the ALSA's OSS PCM API will not
  support conversion of channels, formats and rates. It will
  behave like most of new OSS/Free drivers in 2.4/2.6 kernels.

SND_PCM_TIMER
  If you disable this option, pcm timer will be unavailable, so
  those stubs that use pcm timer (e.g. dmix, dsnoop & co) may work
  incorrectlly.
  
  For some embedded devices, we may disable it to reduce memory
  footprint, about 20KB on x86_64 platform.

SND_PCM_XRUN_DEBUG
  Say Y to enable the PCM ring buffer overrun/underrun debugging.
  It is usually not required, but if you have trouble with
  sound clicking when system is loaded, it may help to determine
  the process or driver which causes the scheduling gaps.

SND_PCSP
  If you don't have a sound card in your computer, you can include a
  driver for the PC speaker which allows it to act like a primitive
  sound card.
  This driver also replaces the pcspkr driver for beeps.
  
  You can compile this as a module which will be called snd-pcsp.
  
  WARNING: if you already have a soundcard, enabling this
  driver may lead to a problem. Namely, it may get loaded
  before the other sound driver of yours, making the
  pc-speaker a default sound device. Which is likely not
  what you want. To make this driver play nicely with other
  sound driver, you can add this in a configuration file under
  /etc/modprobe.d/ directory:
  options snd-pcsp index=2
  
  You don't need this driver if you only want your pc-speaker to beep.
  You don't need this driver if you have a tablet piezo beeper
  in your PC instead of the real speaker.
  
  Say N if you have a sound card.
  Say M if you don't.
  Say Y only if you really know what you do.

SND_PCXHR
  Say Y here to include support for Digigram PCXHR boards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-pcxhr.

SND_PDAUDIOCF
  Say Y here to include support for Sound Core PDAudioCF
  soundcards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-pdaudiocf.

SND_PORTMAN2X4
  Say Y here to include support for Midiman Portman 2x4 parallel
  port MIDI device.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-portman2x4.

SND_POWERMAC
  Say Y here to include support for the integrated sound device.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-powermac.

SND_POWERMAC_AUTO_DRC
  Say Y here to enable the automatic toggle of DRC (dynamic
  range compression) on Tumbler/Snapper.
  If this feature is enabled, DRC is turned off when the
  headphone/line jack is plugged, and turned on when unplugged.
  
  Note that you can turn on/off DRC manually even without this
  option.

SND_POWERPC_SOC
  Say Y or M if you want to add support for codecs attached to
  the PowerPC CPUs.

SND_PPC
  Support for sound devices specific to PowerPC architectures.

SND_PROC_FS
  Say 'N' to disable Sound proc FS, which may reduce code size about
  9KB on x86_64 platform.
  If unsure say Y.

SND_PS3
  Say Y here to include support for audio on the PS3
  
  To compile this driver as a module, choose M here: the module
  will be called snd_ps3.

SND_PS3_DEFAULT_START_DELAY
  No help

SND_PXA2XX_AC97
  Say Y or M if you want to support any AC97 codec attached to
  the PXA2xx AC97 interface.

SND_PXA2XX_LIB
  No help

SND_PXA2XX_LIB_AC97
  No help

SND_PXA2XX_SOC
  Say Y or M if you want to add support for codecs attached to
  the PXA2xx AC97, I2S or SSP interface. You will also need
  to select the audio interfaces to support below.

SND_PXA2XX_SOC_AC97
  No help

SND_PXA2XX_SOC_CORGI
  Say Y if you want to add support for SoC audio on Sharp
  Zaurus SL-C7x0 models (Corgi, Shepherd, Husky).

SND_PXA2XX_SOC_E740
  Say Y if you want to add support for SoC audio on the
  toshiba e740 PDA

SND_PXA2XX_SOC_E750
  Say Y if you want to add support for SoC audio on the
  toshiba e750 PDA

SND_PXA2XX_SOC_E800
  Say Y if you want to add support for SoC audio on the
  Toshiba e800 PDA

SND_PXA2XX_SOC_EM_X270
  Say Y if you want to add support for SoC audio on
  CompuLab EM-x270, eXeda and CM-X300 machines.

SND_PXA2XX_SOC_HX4700
  Say Y if you want to add support for SoC audio on the
  HP iPAQ hx4700.

SND_PXA2XX_SOC_I2S
  No help

SND_PXA2XX_SOC_IMOTE2
  Say Y if you want to add support for SoC audio on the
  IMote 2.

SND_PXA2XX_SOC_MAGICIAN
  Say Y if you want to add support for SoC audio on the
  HTC Magician.

SND_PXA2XX_SOC_MIOA701
  Say Y if you want to add support for SoC audio on the
  MIO A701.

SND_PXA2XX_SOC_PALM27X
  Say Y if you want to add support for SoC audio on
  Palm T|X, T5, E2 or LifeDrive handheld computer.

SND_PXA2XX_SOC_POODLE
  Say Y if you want to add support for SoC audio on Sharp
  Zaurus SL-5600 model (Poodle).

SND_PXA2XX_SOC_SPITZ
  Say Y if you want to add support for SoC audio on Sharp
  Zaurus SL-Cxx00 models (Spitz, Borzoi and Akita).

SND_PXA2XX_SOC_TOSA
  Say Y if you want to add support for SoC audio on Sharp
  Zaurus SL-C6000x models (Tosa).

SND_PXA2XX_SOC_Z2
  Say Y if you want to add support for SoC audio on Zipit Z2.

SND_PXA910_SOC
  Say Y if you want to add support for SoC audio on the
  Marvell PXA910 reference platform.

SND_PXA_SOC_SSP
  No help

SND_RAWMIDI
  No help

SND_RIPTIDE
  Say 'Y' or 'M' to include support for Conexant Riptide chip.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-riptide

SND_RME32
  Say Y to include support for RME Digi32, Digi32 PRO and
  Digi32/8 (Sek'd Prodif32, Prodif96 and Prodif Gold) audio
  devices.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-rme32.

SND_RME96
  Say Y here to include support for RME Digi96, Digi96/8 and
  Digi96/8 PRO/PAD/PST soundcards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-rme96.

SND_RME9652
  Say Y here to include support for RME Hammerfall (RME
  Digi9652/Digi9636) soundcards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-rme9652.

SND_S3C2412_SOC_I2S
  No help

SND_S3C24XX_I2S
  No help

SND_S3C_I2SV2_SOC
  No help

SND_SAMSUNG_I2S
  No help

SND_SAMSUNG_PCM
  No help

SND_SAMSUNG_SPDIF
  No help

SND_SB16
  Say Y here to include support for Sound Blaster 16 soundcards
  (including the Plug and Play version).
  
  To compile this driver as a module, choose M here: the module
  will be called snd-sb16.

SND_SB16_CSP
  Say Y here to include support for the CSP core.  This special
  coprocessor can do variable tasks like various compression and
  decompression algorithms.

SND_SB16_DSP
  No help

SND_SB8
  Say Y here to include support for Creative Sound Blaster 1.0/
  2.0/Pro (8-bit) or 100% compatible soundcards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-sb8.

SND_SB8_DSP
  No help

SND_SBAWE
  Say Y here to include support for Sound Blaster AWE soundcards
  (including the Plug and Play version).
  
  To compile this driver as a module, choose M here: the module
  will be called snd-sbawe.

SND_SBAWE_SEQ
  No help

SND_SB_COMMON
  No help

SND_SC6000
  Say Y here to include support for Gallant SC-6000, SC-6600, SC-7000
  cards and clones:
  Audio Excel DSP 16 and Zoltrix AV302.
  
  These cards are based on CompuMedia ASC-9308 or ASC-9408 chips.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-sc6000.

SND_SE6X
  Say Y or M here only if you actually have this sound card.

SND_SEQUENCER
  Say Y or M to enable MIDI sequencer and router support.  This
  feature allows routing and enqueueing of MIDI events.  Events
  can be processed at a given time.
  
  Many programs require this feature, so you should enable it
  unless you know what you're doing.

SND_SEQUENCER_OSS
  Say Y here to enable OSS sequencer emulation (both
  /dev/sequencer and /dev/music interfaces).
  
  Many programs still use the OSS API, so say Y.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-seq-oss.

SND_SEQ_DEVICE
  No help

SND_SEQ_DUMMY
  Say Y here to enable the dummy sequencer client.  This client
  is a simple MIDI-through client: all normal input events are
  redirected to the output port immediately.
  
  You don't need this unless you want to connect many MIDI
  devices or applications together.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-seq-dummy.

SND_SEQ_HRTIMER_DEFAULT
  Say Y here to use the HR-timer backend as the default sequencer
  timer.

SND_SEQ_MIDI
  No help

SND_SEQ_MIDI_EMUL
  No help

SND_SEQ_MIDI_EVENT
  No help

SND_SEQ_VIRMIDI
  No help

SND_SERIAL_U16550
  To include support for MIDI serial port interfaces, say Y here
  and read <file:Documentation/sound/cards/serial-u16550.rst>.
  This driver works with serial UARTs 16550 and better.
  
  This driver accesses the serial port hardware directly, so
  make sure that the standard serial driver isn't used or
  deactivated with setserial before loading this driver.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-serial-u16550.

SND_SGI_HAL2
  Sound support for the SGI Indy and Indigo2 Workstation.

SND_SGI_O2
  Sound support for the SGI O2 Workstation.

SND_SH7760_AC97
  This option enables generic sound support for the first
  AC97 unit of the SH7760.

SND_SH_DAC_AUDIO
  Say Y here to include support for the on-chip DAC.

SND_SIMPLE_CARD
  This option enables generic simple sound card support
  It also support DPCM of multi CPU single Codec ststem.

SND_SIMPLE_CARD_UTILS
  No help

SND_SIS7019
  Say Y here to include support for the SiS 7019 Audio Accelerator.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-sis7019.

SND_SIU_MIGOR
  This option enables sound support for the SH7722 Migo-R board

SND_SOC
  If you want ASoC support, you should say Y here and also to the
  specific driver for your SoC platform below.
  
  ASoC provides power efficient ALSA support for embedded battery powered
  SoC based systems like PDA's, Phones and Personal Media Players.
  
  This ASoC audio support can also be built as a module.  If so, the module
  will be called snd-soc-core.

SND_SOC_88PM860X
  No help

SND_SOC_AB8500_CODEC
  No help

SND_SOC_AC97_BUS
  No help

SND_SOC_AC97_CODEC
  No help

SND_SOC_ACPI
  No help

SND_SOC_ACPI_INTEL_MATCH
  No help

SND_SOC_AD1836
  No help

SND_SOC_AD193X
  No help

SND_SOC_AD193X_I2C
  No help

SND_SOC_AD193X_SPI
  No help

SND_SOC_AD1980
  No help

SND_SOC_AD73311
  No help

SND_SOC_ADAU1372
  No help

SND_SOC_ADAU1372_I2C
  No help

SND_SOC_ADAU1372_SPI
  No help

SND_SOC_ADAU1373
  No help

SND_SOC_ADAU1701
  No help

SND_SOC_ADAU1761
  No help

SND_SOC_ADAU1761_I2C
  No help

SND_SOC_ADAU1761_SPI
  No help

SND_SOC_ADAU1781
  No help

SND_SOC_ADAU1781_I2C
  No help

SND_SOC_ADAU1781_SPI
  No help

SND_SOC_ADAU17X1
  No help

SND_SOC_ADAU1977
  No help

SND_SOC_ADAU1977_I2C
  No help

SND_SOC_ADAU1977_SPI
  No help

SND_SOC_ADAU7002
  No help

SND_SOC_ADAU7118
  No help

SND_SOC_ADAU7118_HW
  Enable support for the Analog Devices ADAU7118 8 Channel PDM-to-I2S/TDM
  Converter. In this mode, the device works in standalone mode which
  means that there is no bus to communicate with it. Stereo mode is not
  supported in this mode.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-soc-adau7118-hw.

SND_SOC_ADAU7118_I2C
  Enable support for the Analog Devices ADAU7118 8 Channel PDM-to-I2S/TDM
  Converter over I2C. This gives full support over the device.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-soc-adau7118-i2c.

SND_SOC_ADAU_UTILS
  No help

SND_SOC_ADAV801
  No help

SND_SOC_ADAV803
  No help

SND_SOC_ADAV80X
  No help

SND_SOC_ADI
  Audio support for various reference designs by Analog Devices.

SND_SOC_ADI_AXI_I2S
  ASoC driver for the Analog Devices AXI-I2S softcore peripheral.

SND_SOC_ADI_AXI_SPDIF
  ASoC driver for the Analog Devices AXI-SPDIF softcore peripheral.

SND_SOC_ADS117X
  No help

SND_SOC_AK4104
  No help

SND_SOC_AK4118
  No help

SND_SOC_AK4458
  No help

SND_SOC_AK4535
  No help

SND_SOC_AK4554
  No help

SND_SOC_AK4613
  No help

SND_SOC_AK4641
  No help

SND_SOC_AK4642
  No help

SND_SOC_AK4671
  No help

SND_SOC_AK5386
  No help

SND_SOC_AK5558
  No help

SND_SOC_ALC5623
  No help

SND_SOC_ALC5632
  No help

SND_SOC_ALL_CODECS
  Normally ASoC codec drivers are only built if a machine driver which
  uses them is also built since they are only usable with a machine
  driver.  Selecting this option will allow these drivers to be built
  without an explicit machine driver for test and development purposes.
  
  Support for the bus types used to access the codecs to be built must
  be selected separately.
  
  If unsure select "N".

SND_SOC_AMD_ACP
  This option enables ACP DMA support on AMD platform.

SND_SOC_AMD_ACP3x
  This option enables ACP v3.x I2S support on AMD platform

SND_SOC_AMD_CZ_DA7219MX98357_MACH
  This option enables machine driver for DA7219 and MAX9835.

SND_SOC_AMD_CZ_RT5645_MACH
  This option enables machine driver for rt5645.

SND_SOC_AMD_RENOIR
  This option enables ACP support for Renoir platform

SND_SOC_AMD_RENOIR_MACH
  This option enables machine driver for DMIC

SND_SOC_AMD_RV_RT5682_MACH
  This option enables machine driver for RT5682 and MAX9835.

SND_SOC_APQ8016_SBC
  Support for Qualcomm Technologies LPASS audio block in
  APQ8016 SOC-based systems.
  Say Y if you want to use audio devices on MI2S.

SND_SOC_ARIZONA
  No help

SND_SOC_ARNDALE
  No help

SND_SOC_AU1XAC97C
  No help

SND_SOC_AU1XAUDIO
  This is a driver set for the AC97 unit and the
  old DMA controller as found on the Au1000/Au1500/Au1100 chips.

SND_SOC_AU1XI2SC
  No help

SND_SOC_AU1XPSC
  This option enables support for the Programmable Serial
  Controllers in AC97 and I2S mode, and the Descriptor-Based DMA
  Controller (DBDMA) as found on the Au12xx/Au13xx/Au1550 SoC.

SND_SOC_AU1XPSC_AC97
  No help

SND_SOC_AU1XPSC_I2S
  No help

SND_SOC_BD28623
  Enable support for ROHM BD28623MUV Class D speaker amplifier.
  This codec does not have any control buses such as I2C, it
  detect format of I2S automatically.

SND_SOC_BELLS
  No help

SND_SOC_BT_SCO
  No help

SND_SOC_COMPRESS
  No help

SND_SOC_CPCAP
  No help

SND_SOC_CQ0093VC
  No help

SND_SOC_CROS_EC_CODEC
  If you say yes here you will get support for the
  ChromeOS Embedded Controller's Audio Codec.

SND_SOC_CS35L32
  No help

SND_SOC_CS35L33
  No help

SND_SOC_CS35L34
  No help

SND_SOC_CS35L35
  No help

SND_SOC_CS35L36
  No help

SND_SOC_CS4234
  No help

SND_SOC_CS4265
  No help

SND_SOC_CS4270
  No help

SND_SOC_CS4270_VD33_ERRATA
  No help

SND_SOC_CS4271
  No help

SND_SOC_CS4271_I2C
  No help

SND_SOC_CS4271_SPI
  No help

SND_SOC_CS42L42
  No help

SND_SOC_CS42L51
  No help

SND_SOC_CS42L51_I2C
  No help

SND_SOC_CS42L52
  No help

SND_SOC_CS42L56
  No help

SND_SOC_CS42L73
  No help

SND_SOC_CS42XX8
  No help

SND_SOC_CS42XX8_I2C
  No help

SND_SOC_CS43130
  No help

SND_SOC_CS4341
  No help

SND_SOC_CS4349
  No help

SND_SOC_CS47L15
  No help

SND_SOC_CS47L24
  No help

SND_SOC_CS47L35
  No help

SND_SOC_CS47L85
  No help

SND_SOC_CS47L90
  No help

SND_SOC_CS47L92
  No help

SND_SOC_CS53L30
  No help

SND_SOC_CX20442
  No help

SND_SOC_CX2072X
  Enable support for Conexant CX20721 and CX20723 codec chips.

SND_SOC_CYGNUS
  Say Y if you want to add support for ASoC audio on Broadcom
  Cygnus chips (bcm958300, bcm958305, bcm911360)
  
  If you don't know what to do here, say N.

SND_SOC_DA7210
  No help

SND_SOC_DA7213
  No help

SND_SOC_DA7218
  No help

SND_SOC_DA7219
  No help

SND_SOC_DA732X
  No help

SND_SOC_DA9055
  No help

SND_SOC_DAVINCI_ASP
  Say Y or M here if you want audio support via daVinci ASP or McBSP.
  The driver only implements the ASP support which is a subset of
  daVinci McBSP (w/o the multichannel support).

SND_SOC_DAVINCI_EVM
  Say Y if you want to add support for SoC audio on the following TI
  DaVinci EVM platforms:
  - DM355
  - DM365
  - DM6446
  - DM6447
  - DM830
  - DM850

SND_SOC_DAVINCI_MCASP
  Say Y or M here if you want to have support for McASP IP found in
  various Texas Instruments SoCs like:
  - daVinci devices
  - Sitara line of SoCs (AM335x, AM438x, etc)
  - DRA7x devices
  - Keystone devices
  - K3 devices (am654, j721e)

SND_SOC_DAVINCI_VCIF
  Say Y or M here if you want audio support via daVinci VCIF.

SND_SOC_DB1000
  Select this option to enable AC97 audio on the early DB1x00 series
  of boards (DB1000/DB1500/DB1100).

SND_SOC_DB1200
  Select this option to enable audio (AC97 and I2S) on the
  Alchemy/AMD/RMI/NetLogic Db1200, Db1550 and Db1300 evaluation boards.
  If you need Db1300 touchscreen support, you definitely want to say Y.

SND_SOC_DM365_AIC3X_CODEC
  Say Y if you want to add support for AIC3101 audio codec

SND_SOC_DM365_VOICE_CODEC
  Say Y if you want to add support for SoC On-chip voice codec

SND_SOC_DM365_VOICE_CODEC_MODULE
  The is an internal symbol needed to ensure that the codec
  and MFD driver can be built as loadable modules if necessary.

SND_SOC_DMIC
  Enable support for the Generic Digital Microphone CODEC.
  Select this if your sound card has DMICs.

SND_SOC_ES7134
  No help

SND_SOC_ES7241
  No help

SND_SOC_ES8316
  No help

SND_SOC_ES8328
  No help

SND_SOC_ES8328_I2C
  No help

SND_SOC_ES8328_SPI
  No help

SND_SOC_EUKREA_TLV320
  Enable I2S based access to the TLV320AIC23B codec attached
  to the SSI interface

SND_SOC_FSL_ASOC_CARD
  ALSA SoC Audio support with ASRC feature for Freescale SoCs that have
  ESAI/SAI/SSI and connect with external CODECs such as WM8962, CS42888,
  CS4271, CS4272, SGTL5000 and TLV320AIC32x4.
  Say Y if you want to add support for Freescale Generic ASoC Sound Card.

SND_SOC_FSL_ASRC
  Say Y if you want to add Asynchronous Sample Rate Converter (ASRC)
  support for the Freescale CPUs.
  This option is only useful for out-of-tree drivers since
  in-tree drivers select it automatically.

SND_SOC_FSL_AUD2HTX
  Say Y if you want to add AUDIO TO HDMI TX support for NXP.

SND_SOC_FSL_AUDMIX
  Say Y if you want to add Audio Mixer (AUDMIX)
  support for the NXP iMX CPUs.

SND_SOC_FSL_EASRC
  Say Y if you want to add Enhanced ASRC support for NXP. The ASRC is
  a digital module that converts audio from a source sample rate to a
  destination sample rate. It is a new design module compare with the
  old ASRC.

SND_SOC_FSL_ESAI
  Say Y if you want to add Enhanced Synchronous Audio Interface
  (ESAI) support for the Freescale CPUs.
  This option is only useful for out-of-tree drivers since
  in-tree drivers select it automatically.

SND_SOC_FSL_MICFIL
  Say Y if you want to add Pulse Density Modulation microphone
  interface (MICFIL) support for NXP.

SND_SOC_FSL_MQS
  Say Y if you want to add Medium Quality Sound (MQS)
  support for the Freescale CPUs.
  This option is only useful for out-of-tree drivers since
  in-tree drivers select it automatically.

SND_SOC_FSL_SAI
  Say Y if you want to add Synchronous Audio Interface (SAI)
  support for the Freescale CPUs.
  This option is only useful for out-of-tree drivers since
  in-tree drivers select it automatically.

SND_SOC_FSL_SPDIF
  Say Y if you want to add Sony/Philips Digital Interface (SPDIF)
  support for the Freescale CPUs.
  This option is only useful for out-of-tree drivers since
  in-tree drivers select it automatically.

SND_SOC_FSL_SSI
  Say Y if you want to add Synchronous Serial Interface (SSI)
  support for the Freescale CPUs.
  This option is only useful for out-of-tree drivers since
  in-tree drivers select it automatically.

SND_SOC_FSL_UTILS
  No help

SND_SOC_FSL_XCVR
  Say Y if you want to add Audio Transceiver (XCVR) support for NXP
  iMX CPUs. XCVR is a digital module that supports HDMI2.1 eARC,
  HDMI1.4 ARC and SPDIF.

SND_SOC_GENERIC_DMAENGINE_PCM
  No help

SND_SOC_GTM601
  No help

SND_SOC_HDAC_HDA
  No help

SND_SOC_HDAC_HDMI
  No help

SND_SOC_HDMI_CODEC
  No help

SND_SOC_I2C_AND_SPI
  No help

SND_SOC_ICS43432
  No help

SND_SOC_IMG
  Audio support for Imagination Technologies audio hardware

SND_SOC_IMG_I2S_IN
  Say Y or M if you want to add support for I2S in driver for
  Imagination Technologies I2S in device.

SND_SOC_IMG_I2S_OUT
  Say Y or M if you want to add support for I2S out driver for
  Imagination Technologies I2S out device.

SND_SOC_IMG_PARALLEL_OUT
  Say Y or M if you want to add support for parallel out driver for
  Imagination Technologies parallel out device.

SND_SOC_IMG_PISTACHIO_INTERNAL_DAC
  Say Y or M if you want to add support for Pistachio internal DAC
  driver for Imagination Technologies Pistachio internal DAC device.

SND_SOC_IMG_SPDIF_IN
  Say Y or M if you want to add support for SPDIF input driver for
  Imagination Technologies SPDIF input device.

SND_SOC_IMG_SPDIF_OUT
  Say Y or M if you want to add support for SPDIF out driver for
  Imagination Technologies SPDIF out device.

SND_SOC_IMX_AUDMIX
  SoC Audio support for i.MX boards with Audio Mixer
  Say Y if you want to add support for SoC audio on an i.MX board with
  an Audio Mixer.

SND_SOC_IMX_AUDMUX
  Say Y if you want to add Digital Audio Mux (AUDMUX) support
  for the ARM i.MX CPUs.
  This option is only useful for out-of-tree drivers since
  in-tree drivers select it automatically.

SND_SOC_IMX_ES8328
  Say Y if you want to add support for the ES8328 audio codec connected
  via SSI/I2S over either SPI or I2C.

SND_SOC_IMX_HDMI
  ALSA SoC Audio support with HDMI feature for Freescale SoCs that have
  SAI/AUD2HTX and connect with internal HDMI IP or external module
  SII902X.
  Say Y if you want to add support for SoC audio on an i.MX board with
  IMX HDMI.

SND_SOC_IMX_PCM_DMA
  No help

SND_SOC_IMX_PCM_FIQ
  No help

SND_SOC_IMX_SGTL5000
  Say Y if you want to add support for SoC audio on an i.MX board with
  a sgtl5000 codec.

SND_SOC_IMX_SPDIF
  SoC Audio support for i.MX boards with S/PDIF
  Say Y if you want to add support for SoC audio on an i.MX board with
  a S/DPDIF.

SND_SOC_INNO_RK3036
  No help

SND_SOC_INTEL_APL
  If you have a Intel Broxton/ApolloLake platform with the DSP
  enabled in the BIOS then enable this option by saying Y or m.

SND_SOC_INTEL_BDW_RT5650_MACH
  This adds the ASoC machine driver for Intel Broadwell platforms with
  the RT5650 codec.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_INTEL_BDW_RT5677_MACH
  This adds support for Intel Broadwell platform based boards with
  the RT5677 audio codec. This is a recommended option.
  Say Y or m if you have such a device.
  If unsure select "N".

SND_SOC_INTEL_BROADWELL_MACH
  This adds support for the Wilcatpoint Audio DSP on Intel(R) Broadwell
  Ultrabook platforms.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_BXT_DA7219_MAX98357A_COMMON
  No help

SND_SOC_INTEL_BXT_DA7219_MAX98357A_MACH
  This adds support for ASoC machine driver for Broxton-P platforms
  with DA7219 + MAX98357A/MAX98390 I2S audio codec.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_BXT_RT298_MACH
  This adds support for ASoC machine driver for Broxton platforms
  with RT286 I2S audio codec.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_BYTCR_RT5640_MACH
  This adds support for ASoC machine driver for Intel(R) Baytrail and Baytrail-CR
  platforms with RT5640 audio codec.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_BYTCR_RT5651_MACH
  This adds support for ASoC machine driver for Intel(R) Baytrail and Baytrail-CR
  platforms with RT5651 audio codec.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_BYT_CHT_CX2072X_MACH
  This adds support for ASoC machine driver for Intel(R) Baytrail &
  Cherrytrail platforms with Conexant CX2072X audio codec.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_BYT_CHT_DA7213_MACH
  This adds support for ASoC machine driver for Intel(R) Baytrail & CherryTrail
  platforms with DA7212/7213 audio codec.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_BYT_CHT_ES8316_MACH
  This adds support for ASoC machine driver for Intel(R) Baytrail &
  Cherrytrail platforms with ES8316 audio codec.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_BYT_CHT_NOCODEC_MACH
  This adds support for ASoC machine driver for the MinnowBoard Max or
  Up boards and provides access to I2S signals on the Low-Speed
  connector. This is not a recommended option outside of these cases.
  It is not intended to be enabled by distros by default.
  Say Y or m if you have such a device.
  
  If unsure select "N".

SND_SOC_INTEL_CATPT
  Enable support for Intel(R) Haswell and Broadwell platforms
  with I2S codec present. This is a recommended option.
  Say Y or m if you have such device.
  If unsure, say N.

SND_SOC_INTEL_CFL
  If you have a Intel CoffeeLake platform with the DSP
  enabled in the BIOS then enable this option by saying Y or m.

SND_SOC_INTEL_CHT_BSW_MAX98090_TI_MACH
  This adds support for ASoC machine driver for Intel(R) Cherrytrail & Braswell
  platforms with MAX98090 audio codec it also can support TI jack chip as aux device.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_CHT_BSW_NAU8824_MACH
  This adds support for ASoC machine driver for Intel(R) Cherrytrail & Braswell
  platforms with NAU88L24 audio codec.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_CHT_BSW_RT5645_MACH
  This adds support for ASoC machine driver for Intel(R) Cherrytrail & Braswell
  platforms with RT5645/5650 audio codec.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_CHT_BSW_RT5672_MACH
  This adds support for ASoC machine driver for Intel(R) Cherrytrail & Braswell
  platforms with RT5672 audio codec.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_CML_H
  If you have a Intel CometLake-H platform with the DSP
  enabled in the BIOS then enable this option by saying Y or m.

SND_SOC_INTEL_CML_LP
  If you have a Intel CometLake-LP platform with the DSP
  enabled in the BIOS then enable this option by saying Y or m.

SND_SOC_INTEL_CML_LP_DA7219_MAX98357A_MACH
  This adds support for ASoC machine driver for Cometlake platforms
  with DA7219 + MAX98357A I2S audio codec.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_CNL
  If you have a Intel CNL/WHL platform with the DSP
  enabled in the BIOS then enable this option by saying Y or m.

SND_SOC_INTEL_DA7219_MAX98357A_GENERIC
  No help

SND_SOC_INTEL_EHL_RT5660_MACH
  This adds support for ASoC machine driver for Elkhart Lake
  platform with RT5660 I2S audio codec.

SND_SOC_INTEL_GLK
  If you have a Intel GeminiLake platform with the DSP
  enabled in the BIOS then enable this option by saying Y or m.

SND_SOC_INTEL_GLK_DA7219_MAX98357A_MACH
  This adds support for ASoC machine driver for Geminilake platforms
  with DA7219 + MAX98357A I2S audio codec.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_GLK_RT5682_MAX98357A_MACH
  This adds support for ASoC machine driver for Geminilake platforms
  with RT5682 + MAX98357A I2S audio codec.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_INTEL_HASWELL
  No help

SND_SOC_INTEL_HASWELL_MACH
  This adds support for the Lynxpoint Audio DSP on Intel(R) Haswell
  Ultrabook platforms. This is a recommended option.
  Say Y or m if you have such a device.
  If unsure select "N".

SND_SOC_INTEL_KBL
  If you have a Intel Kabylake platform with the DSP
  enabled in the BIOS then enable this option by saying Y or m.

SND_SOC_INTEL_KBL_DA7219_MAX98357A_MACH
  This adds support for ASoC Onboard Codec I2S machine driver. This will
  create an alsa sound card for DA7219 + MAX98357A I2S audio codec.
  Say Y if you have such a device.

SND_SOC_INTEL_KBL_DA7219_MAX98927_MACH
  This adds support for ASoC Onboard Codec I2S machine driver. This will
  create an alsa sound card for DA7219 + MAX98927 I2S audio codec.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_INTEL_KBL_RT5660_MACH
  This adds support for ASoC Onboard Codec I2S machine driver. This will
  create an alsa sound card for RT5660 I2S audio codec.
  Say Y if you have such a device.

SND_SOC_INTEL_KBL_RT5663_MAX98927_MACH
  This adds support for ASoC Onboard Codec I2S machine driver. This will
  create an alsa sound card for RT5663 + MAX98927.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_KBL_RT5663_RT5514_MAX98927_MACH
  This adds support for ASoC Onboard Codec I2S machine driver. This will
  create an alsa sound card for RT5663 + RT5514 + MAX98927.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_KEEMBAY
  If you have a Intel Keembay platform then enable this option
  by saying Y or m.

SND_SOC_INTEL_MACH
  Intel ASoC Machine Drivers. If you have a Intel machine that
  has an audio controller with a DSP and I2S or DMIC port, then
  enable this option by saying Y
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Intel ASoC machine drivers.

SND_SOC_INTEL_SKL
  If you have a Intel Skylake platform with the DSP enabled
  in the BIOS then enable this option by saying Y or m.

SND_SOC_INTEL_SKL_HDA_DSP_GENERIC_MACH
  This adds support for ASoC machine driver for Intel platforms
  SKL/KBL/BXT/APL with iDisp, HDA audio codecs.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_SKL_NAU88L25_MAX98357A_MACH
  This adds support for ASoC Onboard Codec I2S machine driver. This will
  create an alsa sound card for NAU88L25 + MAX98357A.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_SKL_NAU88L25_SSM4567_MACH
  This adds support for ASoC Onboard Codec I2S machine driver. This will
  create an alsa sound card for NAU88L25 + SSM4567.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_SKL_RT286_MACH
  This adds support for ASoC machine driver for Skylake platforms
  with RT286 I2S audio codec.
  Say Y or m if you have such a device.
  If unsure select "N".

SND_SOC_INTEL_SKYLAKE
  This is a backwards-compatible option to select all devices
  supported by the Intel SST/Skylake driver. This option is no
  longer recommended and will be deprecated when the SOF
  driver is introduced.  Distributions should explicitly
  select which platform uses this driver.

SND_SOC_INTEL_SKYLAKE_COMMON
  If you have a Intel Skylake/Broxton/ApolloLake/KabyLake/
  GeminiLake or CannonLake platform with the DSP enabled in the BIOS
  then enable this option by saying Y or m.

SND_SOC_INTEL_SKYLAKE_FAMILY
  No help

SND_SOC_INTEL_SKYLAKE_HDAUDIO_CODEC
  If you have Intel Skylake or Kabylake with HDAudio codec
  and DMIC present then enable this option by saying Y.

SND_SOC_INTEL_SKYLAKE_SSP_CLK
  No help

SND_SOC_INTEL_SOF_CML_RT1011_RT5682_MACH
  This adds support for ASoC machine driver for SOF platform with
  RT1011 + RT5682 I2S codec.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_INTEL_SOF_DA7219_MAX98373_MACH
  This adds support for ASoC machine driver for SOF platforms
  with DA7219 + MAX98373/MAX98360A I2S audio codec.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_INTEL_SOF_PCM512x_MACH
  This adds support for ASoC machine driver for SOF platforms
  with TI PCM512x I2S audio codec.
  Say Y or m if you have such a device.
  If unsure select "N".

SND_SOC_INTEL_SOF_RT5682_MACH
  This adds support for ASoC machine driver for SOF platforms
  with rt5682 codec.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_INTEL_SOF_WM8804_MACH
  This adds support for ASoC machine driver for Intel platforms
  with the Wolfson/Cirrus WM8804 I2S audio codec.
  Say Y or m if you have such a device. This is a recommended option.
  If unsure select "N".

SND_SOC_INTEL_SOUNDWIRE_SOF_MACH
  Add support for Intel SoundWire-based platforms connected to
  MAX98373, RT700, RT711, RT1308 and RT715
  If unsure select "N".

SND_SOC_INTEL_SST
  No help

SND_SOC_INTEL_SST_TOPLEVEL
  Intel ASoC SST Platform Drivers. If you have a Intel machine that
  has an audio controller with a DSP and I2S or DMIC port, then
  enable this option by saying Y
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all
  the questions about Intel SST drivers.

SND_SOC_INTEL_USER_FRIENDLY_LONG_NAMES
  Some drivers report the I/O configuration to userspace through the
  soundcard's long card name in the control user space AP. An unfortunate
  side effect is that this long name may also be used by the GUI,
  confusing users with information they don't need.
  This option prevents the long name from being modified, and the I/O
  configuration will be provided through a different component interface.
  Select Y if userspace like UCM (Use Case Manager) uses the component
  interface.
  If unsure select N.

SND_SOC_ISABELLE
  No help

SND_SOC_J721E_EVM
  Say Y if you want to add support for SoC audio on j721e Common
  Processor Board and Infotainment expansion board.

SND_SOC_JZ4725B_CODEC
  Enable support for the internal CODEC found in the JZ4725B SoC
  from Ingenic.
  
  This driver can also be built as a module. If so, the module
  will be called snd-soc-jz4725b-codec.

SND_SOC_JZ4740_CODEC
  Enable support for the internal CODEC found in the JZ4740 SoC
  from Ingenic.
  
  This driver can also be built as a module. If so, the module
  will be called snd-soc-jz4740-codec.

SND_SOC_JZ4770_CODEC
  Enable support for the internal CODEC found in the JZ4770 SoC
  from Ingenic.
  
  This driver can also be built as a module. If so, the module
  will be called snd-soc-jz4770-codec.

SND_SOC_L3
  No help

SND_SOC_LITTLEMILL
  No help

SND_SOC_LM4857
  No help

SND_SOC_LM49453
  No help

SND_SOC_LOCHNAGAR_SC
  This driver support the sound card functionality of the Cirrus
  Logic Lochnagar audio development board.

SND_SOC_LOWLAND
  No help

SND_SOC_LPASS_APQ8016
  No help

SND_SOC_LPASS_CPU
  No help

SND_SOC_LPASS_HDMI
  No help

SND_SOC_LPASS_IPQ806X
  No help

SND_SOC_LPASS_PLATFORM
  No help

SND_SOC_LPASS_SC7180
  No help

SND_SOC_LPASS_VA_MACRO
  No help

SND_SOC_LPASS_WSA_MACRO
  No help

SND_SOC_MADERA
  No help

SND_SOC_MAX9759
  No help

SND_SOC_MAX9768
  No help

SND_SOC_MAX98088
  No help

SND_SOC_MAX98090
  No help

SND_SOC_MAX98095
  No help

SND_SOC_MAX98357A
  No help

SND_SOC_MAX98371
  No help

SND_SOC_MAX98373
  No help

SND_SOC_MAX98373_I2C
  No help

SND_SOC_MAX98373_SDW
  Enable support for Maxim Integrated MAX98373 Soundwire
  amplifier. MAX98373 supports either the MIPI SoundWire
  compatible interface for audio and control data, or
  the PCM interface for audio data and a standard I2C
  interface for control data. Select this if MAX98373 is
  connected via soundwire.

SND_SOC_MAX98390
  No help

SND_SOC_MAX9850
  No help

SND_SOC_MAX98504
  No help

SND_SOC_MAX9860
  No help

SND_SOC_MAX9867
  No help

SND_SOC_MAX9877
  No help

SND_SOC_MAX98925
  No help

SND_SOC_MAX98926
  No help

SND_SOC_MAX98927
  No help

SND_SOC_MC13783
  No help

SND_SOC_MEDIATEK
  No help

SND_SOC_MESON_T9015
  Say Y or M if you want to add support for the internal DAC found
  on GXL, G12 and SM1 SoC family.

SND_SOC_MIKROE_PROTO
  Say Y or M if you want to add support for MikroElektronika PROTO Audio
  Board. This board contains the WM8731 codec, which can be configured
  using I2C over SDA (MPU Data Input) and SCL (MPU Clock Input) pins.
  Both playback and capture are supported.

SND_SOC_ML26124
  No help

SND_SOC_MPC5200_AC97
  Say Y here to support the MPC5200 PSCs in AC97 mode.

SND_SOC_MPC5200_I2S
  Say Y here to support the MPC5200 PSCs in I2S mode.

SND_SOC_MPC8610_HPCD
  Say Y if you want to enable audio on the Freescale MPC8610 HPCD.

SND_SOC_MSM8916_WCD_ANALOG
  No help

SND_SOC_MSM8916_WCD_DIGITAL
  No help

SND_SOC_MSM8996
  Support for Qualcomm Technologies LPASS audio block in
  APQ8096 SoC-based systems.
  Say Y if you want to use audio device on this SoCs

SND_SOC_MT2701
  This adds ASoC driver for Mediatek MT2701 boards
  that can be used with other codecs.
  Select Y if you have such device.
  If unsure select "N".

SND_SOC_MT2701_CS42448
  This adds ASoC driver for Mediatek MT2701 boards
  with the CS42448 codecs.
  Select Y if you have such device.
  If unsure select "N".

SND_SOC_MT2701_WM8960
  This adds ASoC driver for Mediatek MT2701 boards
  with the WM8960 codecs.
  Select Y if you have such device.
  If unsure select "N".

SND_SOC_MT6351
  No help

SND_SOC_MT6358
  Enable support for the platform which uses MT6358 as
  external codec device.

SND_SOC_MT6359
  Enable support for the platform which uses MT6359 as
  external codec device.

SND_SOC_MT6660
  MediaTek MT6660 is a smart power amplifier which contain
  speaker protection, multi-band DRC, equalizer functions.
  Select N if you don't have MT6660 on board.
  Select M to build this as module.

SND_SOC_MT6797
  This adds ASoC driver for Mediatek MT6797 boards
  that can be used with other codecs.
  Select Y if you have such device.
  If unsure select "N".

SND_SOC_MT6797_MT6351
  This adds ASoC driver for Mediatek MT6797 boards
  with the MT6351 codecs.
  Select Y if you have such device.
  If unsure select "N".

SND_SOC_MT8173
  This adds ASoC platform driver support for Mediatek MT8173 chip
  that can be used with other codecs.
  Select Y if you have such device.
  Ex: MT8173

SND_SOC_MT8173_MAX98090
  This adds ASoC driver for Mediatek MT8173 boards
  with the MAX98090 audio codec.
  Select Y if you have such device.
  If unsure select "N".

SND_SOC_MT8173_RT5650
  This adds ASoC driver for Mediatek MT8173 boards
  with the RT5650 audio codec.
  Select Y if you have such device.
  If unsure select "N".

SND_SOC_MT8173_RT5650_RT5514
  This adds ASoC driver for Mediatek MT8173 boards
  with the RT5650 and RT5514 codecs.
  Select Y if you have such device.
  If unsure select "N".

SND_SOC_MT8173_RT5650_RT5676
  This adds ASoC driver for Mediatek MT8173 boards
  with the RT5650 and RT5676 codecs.
  Select Y if you have such device.
  If unsure select "N".

SND_SOC_MT8183
  This adds ASoC platform driver support for Mediatek MT8183 chip
  that can be used with other codecs.
  Select Y if you have such device.
  If unsure select "N".

SND_SOC_MT8183_DA7219_MAX98357A
  This adds ASoC driver for Mediatek MT8183 boards
  with the DA7219 MAX98357A RT1015 audio codec.
  Select Y if you have such device.
  If unsure select "N".

SND_SOC_MT8183_MT6358_TS3A227E_MAX98357A
  This adds ASoC driver for Mediatek MT8183 boards
  with the MT6358 TS3A227E MAX98357A RT1015 audio codec.
  Select Y if you have such device.
  If unsure select "N".

SND_SOC_MT8192
  This adds ASoC platform driver support for Mediatek MT8192 chip
  that can be used with other codecs.
  Select Y if you have such device.
  If unsure select "N".

SND_SOC_MT8192_MT6359_RT1015_RT5682
  This adds ASoC driver for Mediatek MT8192 boards
  with the MT6359 RT1015 RT5682 audio codec.
  Select Y if you have such device.
  If unsure select "N".

SND_SOC_MTK_BTCVSD
  This is for software BTCVSD. This enable
  the function for transferring/receiving
  BT encoded data to/from BT firmware.
  Select Y if you have such device.
  If unsure select "N".

SND_SOC_MXS_SGTL5000
  Say Y if you want to add support for SoC audio on an MXS board with
  a sgtl5000 codec.

SND_SOC_NAU8315
  No help

SND_SOC_NAU8540
  No help

SND_SOC_NAU8810
  No help

SND_SOC_NAU8822
  No help

SND_SOC_NAU8824
  No help

SND_SOC_NAU8825
  No help

SND_SOC_NOKIA_N810
  Say Y or M if you want to add support for SoC audio on Nokia N810.

SND_SOC_NOKIA_RX51
  Say Y or M if you want to add support for SoC audio on Nokia RX-51
  hardware. This is also known as Nokia N900 product.

SND_SOC_ODROID
  Say Y here to enable audio support for the Odroid XU3/XU4.

SND_SOC_OMAP3_PANDORA
  Say Y or M if you want to add support for SoC audio on the OMAP3 Pandora.

SND_SOC_OMAP3_TWL4030
  Say Y or M if you want to add support for SoC audio on OMAP3 based
  boards using twl4030 as codec. This driver currently supports:
  - Beagleboard or Devkit8000
  - Gumstix Overo or CompuLab CM-T35/CM-T3730
  - IGEP v2
  - OMAP3EVM
  - SDP3430
  - Zoom2

SND_SOC_OMAP_ABE_TWL6040
  Say Y or M if you want to add support for SoC audio on OMAP boards
  using ABE and twl6040 codec. This driver currently supports:
  - SDP4430/Blaze boards
  - PandaBoard (4430)
  - PandaBoardES (4460)
  - OMAP5 uEVM

SND_SOC_OMAP_AMS_DELTA
  Say Y  or M if you want to add support  for SoC audio device
  connected to a handset and a speakerphone found on Amstrad E3 (Delta)
  videophone.
  
  Note that in order to get those devices fully supported,  you have to
  build  the kernel  with  standard  serial port  driver  included  and
  configured for at least 4 ports.  Then, from userspace, you must load
  a line discipline #19 on the modem (ttyS3) serial line.  The simplest
  way to achieve this is to install util-linux-ng  and use the included
  ldattach  utility.  This  can be  started  automatically  from  udev,
  a simple rule like this one should do the trick (it does for me):
        ACTION=="add", KERNEL=="controlC0", RUN+="/usr/sbin/ldattach 19 /dev/ttyS3"

SND_SOC_OMAP_DMIC
  Say Y or M here if you want to have support for DMIC IP found in
  OMAP4 and OMAP5.

SND_SOC_OMAP_HDMI
  For HDMI audio to work OMAPDSS HDMI support should be
  enabled.
  The hdmi audio driver implements cpu-dai component using the
  callbacks provided by OMAPDSS and registers the component
  under DSS HDMI device. Omap-pcm is registered for platform
  component also under DSS HDMI device. Dummy codec is used as
  as codec component. The hdmi audio driver implements also
  the card and registers it under its own platform device.
  The device for the driver is registered by OMAPDSS hdmi
  driver.

SND_SOC_OMAP_MCBSP
  Say Y or M here if you want to have support for McBSP IP found in
  Texas Instruments OMAP1/2/3/4/5 SoCs.

SND_SOC_OMAP_MCPDM
  Say Y or M here if you want to have support for McPDM IP found in
  OMAP4 and OMAP5.

SND_SOC_OMAP_OSK5912
  Say Y or M if you want to add support for SoC audio on osk5912.

SND_SOC_P1022_DS
  Say Y if you want to enable audio on the Freescale P1022 DS board.
  This will also include the Wolfson Microelectronics WM8776 codec
  driver.

SND_SOC_P1022_RDK
  Say Y if you want to enable audio on the Freescale / iVeia
  P1022 RDK board.  This will also include the Wolfson
  Microelectronics WM8960 codec driver.

SND_SOC_PCM1681
  No help

SND_SOC_PCM1789
  No help

SND_SOC_PCM1789_I2C
  Enable support for Texas Instruments PCM1789 CODEC.
  Select this if your PCM1789 is connected via an I2C bus.

SND_SOC_PCM179X
  No help

SND_SOC_PCM179X_I2C
  Enable support for Texas Instruments PCM179x CODEC.
  Select this if your PCM179x is connected via an I2C bus.

SND_SOC_PCM179X_SPI
  Enable support for Texas Instruments PCM179x CODEC.
  Select this if your PCM179x is connected via an SPI bus.

SND_SOC_PCM186X
  No help

SND_SOC_PCM186X_I2C
  No help

SND_SOC_PCM186X_SPI
  No help

SND_SOC_PCM3008
  No help

SND_SOC_PCM3060
  No help

SND_SOC_PCM3060_I2C
  No help

SND_SOC_PCM3060_SPI
  No help

SND_SOC_PCM3168A
  No help

SND_SOC_PCM3168A_I2C
  No help

SND_SOC_PCM3168A_SPI
  No help

SND_SOC_PCM5102A
  No help

SND_SOC_PCM512x
  No help

SND_SOC_PCM512x_I2C
  No help

SND_SOC_PCM512x_SPI
  No help

SND_SOC_PCM_SH7760
  Enable this option for SH7760 AC97/I2S audio support.

SND_SOC_POWERPC_DMA
  No help

SND_SOC_QCOM
  Say Y or M if you want to add support to use audio devices
  in Qualcomm Technologies SOC-based platforms.

SND_SOC_QCOM_COMMON
  No help

SND_SOC_QDSP6
  To add support for MSM QDSP6 Soc Audio.
  This will enable sound soc platform specific
  audio drivers. This includes q6asm, q6adm,
  q6afe interfaces to DSP using apr.

SND_SOC_QDSP6_ADM
  No help

SND_SOC_QDSP6_AFE
  No help

SND_SOC_QDSP6_AFE_CLOCKS
  No help

SND_SOC_QDSP6_AFE_DAI
  No help

SND_SOC_QDSP6_ASM
  No help

SND_SOC_QDSP6_ASM_DAI
  No help

SND_SOC_QDSP6_COMMON
  No help

SND_SOC_QDSP6_CORE
  No help

SND_SOC_QDSP6_ROUTING
  No help

SND_SOC_RCAR
  This option enables R-Car SRU/SCU/SSIU/SSI sound support

SND_SOC_RK3288_HDMI_ANALOG
  Say Y or M here if you want to add support for SoC audio on Rockchip
  RK3288 boards using an analog output and the built-in HDMI audio.

SND_SOC_RK3328
  No help

SND_SOC_RK3399_GRU_SOUND
  Say Y or M here if you want to add support multiple codecs for SoC
  audio on Rockchip RK3399 GRU boards.

SND_SOC_RL6231
  No help

SND_SOC_RL6347A
  No help

SND_SOC_ROCKCHIP
  Say Y or M if you want to add support for codecs attached to
  the Rockchip SoCs' Audio interfaces. You will also need to
  select the audio interfaces to support below.

SND_SOC_ROCKCHIP_I2S
  Say Y or M if you want to add support for I2S driver for
  Rockchip I2S device. The device supports upto maximum of
  8 channels each for play and record.

SND_SOC_ROCKCHIP_MAX98090
  Say Y or M here if you want to add support for SoC audio on Rockchip
  boards using the MAX98090 codec and HDMI codec, such as Veyron.

SND_SOC_ROCKCHIP_PDM
  Say Y or M if you want to add support for PDM driver for
  Rockchip PDM Controller. The Controller supports up to maximum of
  8 channels record.

SND_SOC_ROCKCHIP_RT5645
  Say Y or M here if you want to add support for SoC audio on Rockchip
  boards using the RT5645/RT5650 codec, such as Veyron.

SND_SOC_ROCKCHIP_SPDIF
  Say Y or M if you want to add support for SPDIF driver for
  Rockchip SPDIF transceiver device.

SND_SOC_RT1011
  No help

SND_SOC_RT1015
  No help

SND_SOC_RT1015P
  No help

SND_SOC_RT1305
  No help

SND_SOC_RT1308
  No help

SND_SOC_RT1308_SDW
  No help

SND_SOC_RT274
  No help

SND_SOC_RT286
  No help

SND_SOC_RT298
  No help

SND_SOC_RT5514
  No help

SND_SOC_RT5514_SPI
  No help

SND_SOC_RT5514_SPI_BUILTIN
  No help

SND_SOC_RT5616
  No help

SND_SOC_RT5631
  No help

SND_SOC_RT5640
  No help

SND_SOC_RT5645
  No help

SND_SOC_RT5651
  No help

SND_SOC_RT5659
  No help

SND_SOC_RT5660
  No help

SND_SOC_RT5663
  No help

SND_SOC_RT5665
  No help

SND_SOC_RT5668
  No help

SND_SOC_RT5670
  No help

SND_SOC_RT5677
  No help

SND_SOC_RT5677_SPI
  No help

SND_SOC_RT5682
  No help

SND_SOC_RT5682_I2C
  No help

SND_SOC_RT5682_SDW
  No help

SND_SOC_RT700
  No help

SND_SOC_RT700_SDW
  No help

SND_SOC_RT711
  No help

SND_SOC_RT711_SDW
  No help

SND_SOC_RT715
  No help

SND_SOC_RT715_SDW
  No help

SND_SOC_SAMSUNG
  Say Y or M if you want to add support for codecs attached to
  the Samsung SoCs' Audio interfaces. You will also need to
  select the audio interfaces to support below.

SND_SOC_SAMSUNG_ARIES_WM8994
  Say Y if you want to add support for SoC audio on Aries boards,
  which has a WM8994 codec connected to a BT codec, a cellular
  modem, and the Samsung I2S controller.  Jack detection is done
  via ADC, GPIOs, and an extcon device.  Switching between the Mic
  and TV-Out path is also handled.

SND_SOC_SAMSUNG_H1940_UDA1380
  This driver provides audio support for HP iPAQ h1940 PDA.

SND_SOC_SAMSUNG_JIVE_WM8750
  Say Y if you want to add support for SoC audio on the Jive.

SND_SOC_SAMSUNG_MIDAS_WM1811
  Say Y if you want to add support for SoC audio on the Midas boards.

SND_SOC_SAMSUNG_NEO1973_WM8753
  Say Y here to enable audio support for the Openmoko Neo1973
  Smartphones.

SND_SOC_SAMSUNG_RX1950_UDA1380
  This driver provides audio support for HP iPAQ RX1950 PDA.

SND_SOC_SAMSUNG_S3C24XX_UDA134X
  No help

SND_SOC_SAMSUNG_SIMTEC
  Internal node for common S3C24XX/Simtec support.

SND_SOC_SAMSUNG_SIMTEC_HERMES
  No help

SND_SOC_SAMSUNG_SIMTEC_TLV320AIC23
  No help

SND_SOC_SAMSUNG_SMDK_SPDIF
  Say Y if you want to add support for SoC S/PDIF audio on the SMDK.

SND_SOC_SAMSUNG_SMDK_WM8580
  Say Y if you want to add support for SoC audio on the SMDKs.

SND_SOC_SAMSUNG_SMDK_WM8994
  Say Y if you want to add support for SoC audio on the SMDKs.

SND_SOC_SAMSUNG_TM2_WM5110
  Say Y if you want to add support for SoC audio on the TM2 board.

SND_SOC_SC7180
  To add support for audio on Qualcomm Technologies Inc.
  SC7180 SoC-based systems.
  Say Y if you want to use audio device on this SoCs.

SND_SOC_SDM845
  To add support for audio on Qualcomm Technologies Inc.
  SDM845 SoC-based systems.
  Say Y if you want to use audio device on this SoCs.

SND_SOC_SGTL5000
  No help

SND_SOC_SH4_FSI
  This option enables FSI sound support

SND_SOC_SH4_HAC
  No help

SND_SOC_SH4_SIU
  No help

SND_SOC_SH4_SSI
  No help

SND_SOC_SI476X
  No help

SND_SOC_SIGMADSP
  No help

SND_SOC_SIGMADSP_I2C
  No help

SND_SOC_SIGMADSP_REGMAP
  No help

SND_SOC_SIMPLE_AMPLIFIER
  No help

SND_SOC_SIMPLE_MUX
  No help

SND_SOC_SIRF
  No help

SND_SOC_SIRF_AUDIO
  No help

SND_SOC_SIRF_AUDIO_CODEC
  No help

SND_SOC_SIRF_AUDIO_PORT
  No help

SND_SOC_SIRF_USP
  No help

SND_SOC_SM8250
  To add support for audio on Qualcomm Technologies Inc.
  SM8250 SoC-based systems.
  Say Y if you want to use audio device on this SoCs.

SND_SOC_SMARTQ
  No help

SND_SOC_SMDK_WM8994_PCM
  Say Y if you want to add support for SoC audio on the SMDK

SND_SOC_SNOW
  Say Y if you want to add audio support for various Snow
  boards based on Exynos5 series of SoCs.

SND_SOC_SOF
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.
  The selection is made at the top level and does not exactly follow
  module dependencies but since the module or built-in type is decided
  at the top level it doesn't matter.

SND_SOC_SOF_ACPI
  This adds support for ACPI enumeration. This option is required
  to enable Intel Broadwell/Baytrail/Cherrytrail devices.
  Say Y if you need this option.
  If unsure select "N".

SND_SOC_SOF_ALDERLAKE
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level

SND_SOC_SOF_ALDERLAKE_SUPPORT
  This adds support for Sound Open Firmware for Intel(R) platforms
  using the Alderlake processors.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_SOF_APOLLOLAKE
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_APOLLOLAKE_SUPPORT
  This adds support for Sound Open Firmware for Intel(R) platforms
  using the Apollolake processors.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_SOF_BAYTRAIL
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_BAYTRAIL_SUPPORT
  This adds support for Sound Open Firmware for Intel(R) platforms
  using the Baytrail, Braswell or Cherrytrail processors.
  This option can coexist in the same build with the Atom legacy
  drivers, currently the default but which will be deprecated
  at some point.
  Existing firmware/topology binaries and UCM configurations
  typically located in the root file system are already
  compatible with both SOF or Atom/SST legacy drivers.
  This is a recommended option for distributions.
  Say Y if you want to enable SOF on Baytrail/Cherrytrail.
  If unsure select "N".

SND_SOC_SOF_BROADWELL
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_BROADWELL_SUPPORT
  This adds support for Sound Open Firmware for Intel(R) platforms
  using the Broadwell processors.
  This option can coexist in the same build with the default 'catpt'
  driver.
  Existing firmware/topology binaries and UCM configurations typically
  located in the root file system are already compatible with both SOF
  or catpt drivers.
  SOF does not fully support Broadwell and has limitations related to
  DMA and suspend-resume, this is not a recommended option for
  distributions.
  Say Y if you want to enable SOF on Broadwell.
  If unsure select "N".

SND_SOC_SOF_CANNONLAKE
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_CANNONLAKE_SUPPORT
  This adds support for Sound Open Firmware for Intel(R) platforms
  using the Cannonlake processors.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_SOF_COFFEELAKE
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_COFFEELAKE_SUPPORT
  This adds support for Sound Open Firmware for Intel(R) platforms
  using the Coffeelake processors.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_SOF_COMETLAKE
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_COMETLAKE_LP_SUPPORT
  This adds support for Sound Open Firmware for Intel(R) platforms
  using the Cometlake processors.
  If unsure select "N".

SND_SOC_SOF_COMETLAKE_SUPPORT
  No help

SND_SOC_SOF_DEBUG
  This option can be used to enable or disable individual SOF firmware
  and driver debugging options.
  Say Y if you are debugging SOF FW or drivers.
  If unsure select "N".

SND_SOC_SOF_DEBUG_ENABLE_DEBUGFS_CACHE
  This option enables caching of debugfs
  memory -> DSP resource (memory, register, etc)
  before the audio DSP is suspended. This will increase the suspend
  latency and therefore should be used for debug purposes only.
  Say Y if you want to enable caching the memory windows.
  If unsure, select "N".

SND_SOC_SOF_DEBUG_ENABLE_FIRMWARE_TRACE
  The firmware trace can be enabled either at build-time with
  this option, or dynamically by setting flags in the SOF core
  module parameter (similar to dynamic debug).
  If unsure, select "N".

SND_SOC_SOF_DEBUG_FORCE_IPC_POSITION
  This option forces to handle stream position update IPCs and run PCM
  elapse to inform ALSA about that, on platforms (e.g. Intel SKL+) that
  with other approach (e.g. HDAC DPIB/posbuf) to elapse PCM.
  On platforms (e.g. Intel SKL-) where position update IPC is the only
  one choice, this setting won't impact anything.
  If you are trying to debug pointer update with position IPCs or where
  DPIB/posbuf is not ready, select "Y".
  If unsure select "N".

SND_SOC_SOF_DEBUG_IPC_FLOOD_TEST
  This option enables the IPC flood test which can be used to flood
  the DSP with test IPCs and gather stats about response times.
  Say Y if you want to enable IPC flood test.
  If unsure, select "N".

SND_SOC_SOF_DEBUG_PROBES
  This option enables the data probing feature that can be used to
  gather data directly from specific points of the audio pipeline.
  Say Y if you want to enable probes.
  If unsure, select "N".

SND_SOC_SOF_DEBUG_RETAIN_DSP_CONTEXT
  This option keeps the DSP in D0 state so that firmware debug
  information can be retained and dumped to userspace.
  Say Y if you want to retain DSP context for FW exceptions.
  If unsure, select "N".

SND_SOC_SOF_DEBUG_VERBOSE_IPC
  This option enables more verbose IPC logs, with command types in
  human-readable form instead of just 32-bit hex dumps. This is useful
  if you are trying to debug IPC with the DSP firmware.
  If unsure select "N".

SND_SOC_SOF_DEBUG_XRUN_STOP
  This option forces PCMs to stop on any XRUN event. This is useful to
  preserve any trace data and pipeline status prior to the XRUN.
  Say Y if you are debugging SOF FW pipeline XRUNs.
  If unsure select "N".

SND_SOC_SOF_DEVELOPER_SUPPORT
  This option unlocks SOF developer options for debug/performance/
  code hardening.
  Distributions should not select this option, only SOF development
  teams should select it.
  Say Y if you are involved in SOF development and need this option.
  If not, select N.

SND_SOC_SOF_ELKHARTLAKE
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_ELKHARTLAKE_SUPPORT
  This adds support for Sound Open Firmware for Intel(R) platforms
  using the ElkhartLake processors.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_SOF_FORCE_NOCODEC_MODE
  This forces SOF to use dummy/nocodec as machine driver, even
  though there is a codec detected on the real platform. This is
  typically only enabled for developers for debug purposes, before
  codec/machine driver is ready, or to exclude the impact of those
  drivers.
  Say Y if you need this force nocodec mode option.
  If unsure select "N".

SND_SOC_SOF_GEMINILAKE
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_GEMINILAKE_SUPPORT
  This adds support for Sound Open Firmware for Intel(R) platforms
  using the Geminilake processors.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_SOF_HDA
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_HDA_ALWAYS_ENABLE_DMI_L1
  This option enables DMI L1 for both playback and capture
  and disables known workarounds for specific HDAudio platforms.
  Only use to look into power optimizations on platforms not
  affected by DMI L1 issues. This option is not recommended.
  Say Y if you want to enable DMI Link L1.
  If unsure, select "N".

SND_SOC_SOF_HDA_AUDIO_CODEC
  This adds support for HDAudio codecs with Sound Open Firmware
  for Intel(R) platforms.
  Say Y if you want to enable HDAudio codecs with SOF.
  If unsure select "N".

SND_SOC_SOF_HDA_COMMON
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_HDA_LINK
  This adds support for HDA links(HDA/HDMI) with Sound Open Firmware
  for Intel(R) platforms.
  Say Y if you want to enable HDA links with SOF.
  If unsure select "N".

SND_SOC_SOF_HDA_LINK_BASELINE
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_HDA_PROBES
  This option enables the data probing for Intel(R)
  Skylake and newer platforms.
  Say Y if you want to enable probes.
  If unsure, select "N".

SND_SOC_SOF_ICELAKE
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_ICELAKE_SUPPORT
  This adds support for Sound Open Firmware for Intel(R) platforms
  using the Icelake processors.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_SOF_IMX8
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_IMX8M
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_IMX8M_SUPPORT
  This adds support for Sound Open Firmware for NXP i.MX8M platforms.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_SOF_IMX8_SUPPORT
  This adds support for Sound Open Firmware for NXP i.MX8 platforms.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_SOF_IMX_COMMON
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_IMX_OF
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_IMX_TOPLEVEL
  This adds support for Sound Open Firmware for NXP i.MX platforms.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_SOF_INTEL_ACPI
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_INTEL_ATOM_HIFI_EP
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_INTEL_COMMON
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_INTEL_HIFI_EP_IPC
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_INTEL_PCI
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_INTEL_SOUNDWIRE
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_INTEL_SOUNDWIRE_LINK
  This adds support for SoundWire with Sound Open Firmware
  for Intel(R) platforms.
  Say Y if you want to enable SoundWire links with SOF.
  If unsure select "N".

SND_SOC_SOF_INTEL_SOUNDWIRE_LINK_BASELINE
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_INTEL_TOPLEVEL
  This adds support for Sound Open Firmware for Intel(R) platforms.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_SOF_JASPERLAKE
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_JASPERLAKE_SUPPORT
  This adds support for Sound Open Firmware for Intel(R) platforms
  using the JasperLake processors.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_SOF_MERRIFIELD
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_MERRIFIELD_SUPPORT
  This adds support for Sound Open Firmware for Intel(R) platforms
  using the Tangier/Merrifield processors.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_SOF_NOCODEC
  No help

SND_SOC_SOF_NOCODEC_SUPPORT
  This adds support for a dummy/nocodec machine driver fallback
  option if no known codec is detected. This is typically only
  enabled for developers or devices where the sound card is
  controlled externally.
  This option is mutually exclusive with the Intel HDAudio support.
  Selecting it may have negative impacts and prevent e.g. microphone
  functionality from being enabled on Intel CoffeeLake and later
  platforms.
  Distributions should not select this option!
  Say Y if you need this nocodec fallback option.
  If unsure select "N".

SND_SOC_SOF_OF
  This adds support for Device Tree enumeration. This option is
  required to enable i.MX8 devices.
  Say Y if you need this option. If unsure select "N".

SND_SOC_SOF_PCI
  This adds support for PCI enumeration. This option is
  required to enable Intel Skylake+ devices.
  Say Y if you need this option.
  If unsure select "N".

SND_SOC_SOF_PROBE_WORK_QUEUE
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.
  When selected, the probe is handled in two steps, for example to
  avoid lockdeps if request_module is used in the probe.

SND_SOC_SOF_STRICT_ABI_CHECKS
  This option enables strict ABI checks for firmware and topology
  files.
  When these files are more recent than the kernel, the kernel
  will handle the functionality it supports and may report errors
  during topology creation or run-time usage if new functionality
  is invoked.
  This option will stop topology creation and firmware load upfront.
  It is intended for SOF CI/releases and not for users or distros.
  Say Y if you want strict ABI checks for an SOF release.
  If you are not involved in SOF releases and CI development,
  select "N".

SND_SOC_SOF_TIGERLAKE
  This option is not user-selectable but automagically handled by
  'select' statements at a higher level.

SND_SOC_SOF_TIGERLAKE_SUPPORT
  This adds support for Sound Open Firmware for Intel(R) platforms
  using the Tigerlake processors.
  Say Y if you have such a device.
  If unsure select "N".

SND_SOC_SOF_TOPLEVEL
  This adds support for Sound Open Firmware (SOF). SOF is free and
  generic open source audio DSP firmware for multiple devices.
  Say Y if you have such a device that is supported by SOF.
  If unsure select "N".

SND_SOC_SOF_XTENSA
  No help

SND_SOC_SPDIF
  No help

SND_SOC_SPEYSIDE
  No help

SND_SOC_SPRD
  Say Y or M if you want to add support for codecs attached to
  the Spreadtrum SoCs' Audio interfaces.

SND_SOC_SPRD_MCDT
  Say y here to enable multi-channel data transfer support. It
  is used for sound stream transmission between audio subsystem
  and other AP/CP subsystem.

SND_SOC_SSM2305
  Enable support for Analog Devices SSM2305 filterless
  high-efficiency mono Class-D audio power amplifiers.

SND_SOC_SSM2518
  No help

SND_SOC_SSM2602
  No help

SND_SOC_SSM2602_I2C
  No help

SND_SOC_SSM2602_SPI
  No help

SND_SOC_SSM4567
  No help

SND_SOC_STA32X
  No help

SND_SOC_STA350
  No help

SND_SOC_STA529
  No help

SND_SOC_STAC9766
  No help

SND_SOC_STI
  Say Y if you want to enable ASoC-support for
  any of the STI platforms (e.g. STIH416).

SND_SOC_STI_SAS
  No help

SND_SOC_STM32_DFSDM
  Select this option to enable the STM32 Digital Filter
  for Sigma Delta Modulators (DFSDM) driver used
  in various STM32 series for digital microphone capture.

SND_SOC_STM32_I2S
  Say Y if you want to enable I2S for STM32

SND_SOC_STM32_SAI
  Say Y if you want to enable SAI for STM32

SND_SOC_STM32_SPDIFRX
  Say Y if you want to enable S/PDIF capture for STM32

SND_SOC_STORM
  Say Y or M if you want add support for SoC audio on the
  Qualcomm Technologies IPQ806X-based Storm board.

SND_SOC_TAS2552
  No help

SND_SOC_TAS2562
  No help

SND_SOC_TAS2764
  No help

SND_SOC_TAS2770
  No help

SND_SOC_TAS5086
  No help

SND_SOC_TAS571X
  Enable support for Texas Instruments TAS5707, TAS5711, TAS5717,
  TAS5719 and TAS5721 power amplifiers

SND_SOC_TAS5720
  Enable support for Texas Instruments TAS5720L/M high-efficiency mono
  Class-D audio power amplifiers.

SND_SOC_TAS6424
  Enable support for Texas Instruments TAS6424 high-efficiency
  digital input quad-channel Class-D audio power amplifiers.

SND_SOC_TDA7419
  No help

SND_SOC_TEGRA
  Say Y or M here if you want support for SoC audio on Tegra.

SND_SOC_TEGRA186_DSPK
  Config to enable the Digital Speaker Controller (DSPK) which
  converts the multi-bit Pulse Code Modulation (PCM) audio input to
  oversampled 1-bit Pulse Density Modulation (PDM) output. From the
  signal flow perspective DSPK can be viewed as a PDM transmitter
  that up-samples the input to the desired sampling rate by
  interpolation and then converts the oversampled PCM input to
  the desired 1-bit output via Delta Sigma Modulation (DSM).
  Say Y or M if you want to add support for Tegra186 DSPK module.

SND_SOC_TEGRA20_AC97
  Say Y or M if you want to add support for codecs attached to the
  Tegra20 AC97 interface. You will also need to select the individual
  machine drivers to support below.

SND_SOC_TEGRA20_DAS
  Say Y or M if you want to add support for the Tegra20 DAS module.
  You will also need to select the individual machine drivers to
  support below.

SND_SOC_TEGRA20_I2S
  Say Y or M if you want to add support for codecs attached to the
  Tegra20 I2S interface. You will also need to select the individual
  machine drivers to support below.

SND_SOC_TEGRA20_SPDIF
  Say Y or M if you want to add support for the Tegra20 SPDIF interface.
  You will also need to select the individual machine drivers to support
  below.

SND_SOC_TEGRA210_ADMAIF
  Config to enable ADMAIF which is the interface between ADMA and
  Audio Hub (AHUB). Each ADMA channel that sends/receives data to/
  from AHUB must interface through an ADMAIF channel. ADMA channel
  sending data to AHUB pairs with an ADMAIF Tx channel, where as
  ADMA channel receiving data from AHUB pairs with an ADMAIF Rx
  channel. Buffer size is configurable for each ADMAIIF channel.
  Say Y or M if you want to add support for Tegra210 ADMAIF module.

SND_SOC_TEGRA210_AHUB
  Config to enable Audio Hub (AHUB) module, which comprises of a
  switch called Audio Crossbar (AXBAR) used to configure or modify
  the audio routing path between various HW accelerators present in
  AHUB.
  Say Y or M if you want to add support for Tegra210 AHUB module.

SND_SOC_TEGRA210_DMIC
  Config to enable the Digital MIC (DMIC) controller which is used
  to interface with Pulse Density Modulation (PDM) input devices.
  The DMIC controller implements a converter to convert PDM signals
  to Pulse Code Modulation (PCM) signals. This can be viewed as a
  PDM receiver.
  Say Y or M if you want to add support for Tegra210 DMIC module.

SND_SOC_TEGRA210_I2S
  Config to enable the Inter-IC Sound (I2S) Controller which
  implements full-duplex and bidirectional and single direction
  point-to-point serial interfaces. It can interface with I2S
  compatible devices.
  Say Y or M if you want to add support for Tegra210 I2S module.

SND_SOC_TEGRA30_AHUB
  Say Y or M if you want to add support for the Tegra30 AHUB module.
  You will also need to select the individual machine drivers to
  support below.

SND_SOC_TEGRA30_I2S
  Say Y or M if you want to add support for codecs attached to the
  Tegra30 I2S interface. You will also need to select the individual
  machine drivers to support below.

SND_SOC_TEGRA_ALC5632
  Say Y or M here if you want to add support for SoC audio on the
  Toshiba AC100 netbook.

SND_SOC_TEGRA_MAX98090
  Say Y or M here if you want to add support for SoC audio on Tegra
  boards using the MAX98090 codec, such as Venice2.

SND_SOC_TEGRA_RT5640
  Say Y or M here if you want to add support for SoC audio on Tegra
  boards using the RT5640 codec, such as Dalmore.

SND_SOC_TEGRA_RT5677
  Say Y or M here if you want to add support for SoC audio on Tegra
  boards using the RT5677 codec, such as Ryu.

SND_SOC_TEGRA_SGTL5000
  Say Y or M here if you want to add support for SoC audio on Tegra
  boards using the SGTL5000 codec, such as Apalis T30, Apalis TK1 or
  Colibri T30.

SND_SOC_TEGRA_TRIMSLICE
  Say Y or M here if you want to add support for SoC audio on the
  TrimSlice platform.

SND_SOC_TEGRA_WM8753
  Say Y or M here if you want to add support for SoC audio on Tegra
  boards using the WM8753 codec, such as Whistler.

SND_SOC_TEGRA_WM8903
  Say Y or M here if you want to add support for SoC audio on Tegra
  boards using the WM8093 codec. Currently, the supported boards are
  Harmony, Ventana, Seaboard, Kaen, and Aebl.

SND_SOC_TEGRA_WM9712
  Say Y or M here if you want to add support for SoC audio on Tegra
  boards using the WM9712 (or compatible) codec.

SND_SOC_TFA9879
  No help

SND_SOC_TI_EDMA_PCM
  No help

SND_SOC_TI_SDMA_PCM
  No help

SND_SOC_TI_UDMA_PCM
  No help

SND_SOC_TLV320ADCX140
  Add support for Texas Instruments tlv320adc3140, tlv320adc5140 and
  tlv320adc6140 quad channel ADCs.

SND_SOC_TLV320AIC23
  No help

SND_SOC_TLV320AIC23_I2C
  No help

SND_SOC_TLV320AIC23_SPI
  No help

SND_SOC_TLV320AIC26
  No help

SND_SOC_TLV320AIC31XX
  No help

SND_SOC_TLV320AIC32X4
  No help

SND_SOC_TLV320AIC32X4_I2C
  No help

SND_SOC_TLV320AIC32X4_SPI
  No help

SND_SOC_TLV320AIC3X
  No help

SND_SOC_TLV320DAC33
  No help

SND_SOC_TOBERMORY
  No help

SND_SOC_TOPOLOGY
  No help

SND_SOC_TPA6130A2
  No help

SND_SOC_TS3A227E
  No help

SND_SOC_TSCS42XX
  Add support for Tempo Semiconductor's TSCS42xx audio CODEC.

SND_SOC_TSCS454
  Add support for Tempo Semiconductor's TSCS454 audio CODEC.

SND_SOC_TTC_DKB
  Say Y if you want to add support for SoC audio on TTC DKB

SND_SOC_TWL4030
  No help

SND_SOC_TWL6040
  No help

SND_SOC_TXX9ACLC
  This option enables support for the AC Link Controllers in TXx9 SoC.

SND_SOC_TXX9ACLC_AC97
  No help

SND_SOC_TXX9ACLC_GENERIC
  This is a generic AC97 sound machine for use in TXx9 based systems.

SND_SOC_UDA1334
  The UDA1334 is an NXP audio codec, supports the I2S-bus data format
  and has basic features such as de-emphasis (at 44.1 kHz sampling
  rate) and mute.

SND_SOC_UDA134X
  No help

SND_SOC_UDA1380
  No help

SND_SOC_UNIPHIER
  Say Y or M if you want to add support for the Socionext
  UniPhier SoC audio interfaces. You will also need to select the
  audio interfaces to support below.
  If unsure select "N".

SND_SOC_UNIPHIER_AIO
  This adds ASoC driver support for Socionext UniPhier
  'AIO' Audio Input/Output subsystem.
  Select Y if you use such device.
  If unsure select "N".

SND_SOC_UNIPHIER_EVEA_CODEC
  This adds Codec driver for Socionext UniPhier LD11/20 SoC
  internal DAC. This driver supports Line In / Out and HeadPhone.
  Select Y if you use such device.
  If unsure select "N".

SND_SOC_UNIPHIER_LD11
  This adds ASoC driver for Socionext UniPhier LD11/LD20
  input and output that can be used with other codecs.
  Select Y if you use such device.
  If unsure select "N".

SND_SOC_UNIPHIER_PXS2
  This adds ASoC driver for Socionext UniPhier PXs2
  input and output that can be used with other codecs.
  Select Y if you use such device.
  If unsure select "N".

SND_SOC_UX500
  Say Y if you want to enable ASoC-support for
  any of the Ux500 platforms (e.g. U8500).

SND_SOC_UX500_MACH_MOP500
  Select this to enable the MOP500 machine-driver.
  This will enable platform-drivers for: Ux500
  This will enable codec-drivers for: AB8500

SND_SOC_UX500_PLAT_DMA
  Say Y if you want to enable the Ux500 platform-driver.

SND_SOC_UX500_PLAT_MSP_I2S
  No help

SND_SOC_WCD9335
  The WCD9335 is a standalone Hi-Fi audio CODEC IC, supports
  Qualcomm Technologies, Inc. (QTI) multimedia solutions,
  including the MSM8996, MSM8976, and MSM8956 chipsets.

SND_SOC_WCD934X
  The WCD9340/9341 is a audio codec IC Integrated in
  Qualcomm SoCs like SDM845.

SND_SOC_WL1273
  No help

SND_SOC_WM0010
  No help

SND_SOC_WM1250_EV1
  No help

SND_SOC_WM2000
  No help

SND_SOC_WM2200
  No help

SND_SOC_WM5100
  No help

SND_SOC_WM5102
  No help

SND_SOC_WM5110
  No help

SND_SOC_WM8350
  No help

SND_SOC_WM8400
  No help

SND_SOC_WM8510
  No help

SND_SOC_WM8523
  No help

SND_SOC_WM8524
  No help

SND_SOC_WM8580
  No help

SND_SOC_WM8711
  No help

SND_SOC_WM8727
  No help

SND_SOC_WM8728
  No help

SND_SOC_WM8731
  No help

SND_SOC_WM8737
  No help

SND_SOC_WM8741
  No help

SND_SOC_WM8750
  No help

SND_SOC_WM8753
  No help

SND_SOC_WM8770
  No help

SND_SOC_WM8776
  No help

SND_SOC_WM8782
  No help

SND_SOC_WM8804
  No help

SND_SOC_WM8804_I2C
  No help

SND_SOC_WM8804_SPI
  No help

SND_SOC_WM8900
  No help

SND_SOC_WM8903
  No help

SND_SOC_WM8904
  No help

SND_SOC_WM8940
  No help

SND_SOC_WM8955
  No help

SND_SOC_WM8960
  No help

SND_SOC_WM8961
  No help

SND_SOC_WM8962
  No help

SND_SOC_WM8971
  No help

SND_SOC_WM8974
  No help

SND_SOC_WM8978
  No help

SND_SOC_WM8983
  No help

SND_SOC_WM8985
  No help

SND_SOC_WM8988
  No help

SND_SOC_WM8990
  No help

SND_SOC_WM8991
  No help

SND_SOC_WM8993
  No help

SND_SOC_WM8994
  No help

SND_SOC_WM8995
  No help

SND_SOC_WM8996
  No help

SND_SOC_WM8997
  No help

SND_SOC_WM8998
  No help

SND_SOC_WM9081
  No help

SND_SOC_WM9090
  No help

SND_SOC_WM9705
  No help

SND_SOC_WM9712
  No help

SND_SOC_WM9713
  No help

SND_SOC_WM_ADSP
  No help

SND_SOC_WM_HUBS
  No help

SND_SOC_WSA881X
  This enables support for Qualcomm WSA8810/WSA8815 Class-D
  Smart Speaker Amplifier.

SND_SOC_XILINX_AUDIO_FORMATTER
  Select this option to enable Xilinx audio formatter
  support. This provides DMA platform device support for
  audio functionality.

SND_SOC_XILINX_I2S
  Select this option to enable Xilinx I2S Audio. This enables
  I2S playback and capture using xilinx soft IP. In transmitter
  mode, IP receives audio in AES format, extracts PCM and sends
  PCM data. In receiver mode, IP receives PCM audio and
  encapsulates PCM in AES format and sends AES data.

SND_SOC_XILINX_SPDIF
  Select this option to enable Xilinx SPDIF Audio.
  This provides playback and capture of SPDIF audio in
  AES format.

SND_SOC_XTFPGA_I2S
  Say Y or M if you want to add support for codecs attached to the
  I2S interface on XTFPGA daughter board. You will also need to select
  the drivers for the rest of XTFPGA audio subsystem.

SND_SOC_ZL38060
  Support for ZL38060 Connected Home Audio Processor from Microsemi,
  which consists of a Digital Signal Processor (DSP), several Digital
  Audio Interfaces (DAIs), analog outputs, and a block of 14 GPIOs.

SND_SOC_ZX_AUD96P22
  No help

SND_SOC_ZYLONITE
  Say Y if you want to add support for SoC audio on the
  Marvell Zylonite reference platform.

SND_SONICVIBES
  Say Y here to include support for soundcards based on the S3
  SonicVibes chip.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-sonicvibes.

SND_SPARC
  Support for sound devices specific to Sun SPARC architectures.

SND_SPEAR_SOC
  No help

SND_SPEAR_SPDIF_IN
  No help

SND_SPEAR_SPDIF_OUT
  No help

SND_SPI
  Support for sound devices connected via the SPI bus.

SND_SSCAPE
  Say Y here to include support for Ensoniq SoundScape
  and Ensoniq OEM soundcards.
  
  The PCM audio is supported on SoundScape Classic, Elite, PnP
  and VIVO cards. The supported OEM cards are SPEA Media FX and
  Reveal SC-600.
  The MIDI support is very experimental and requires binary
  firmware files called "scope.cod" and "sndscape.co?" where the
  ? is digit 0, 1, 2, 3 or 4. The firmware files can be found
  in DOS or Windows driver packages. One has to put the firmware
  files into the /lib/firmware directory.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-sscape.

SND_SST_ATOM_HIFI2_PLATFORM
  No help

SND_SST_ATOM_HIFI2_PLATFORM_ACPI
  If you have a Intel Baytrail or Cherrytrail platform with an I2S
  codec, then enable this option by saying Y or m. This is a
  recommended option
  This option is mutually exclusive with the SOF support on
  Baytrail/Cherrytrail. If you want to enable SOF on
  Baytrail/Cherrytrail, you need to deselect this option first.

SND_SST_ATOM_HIFI2_PLATFORM_PCI
  If you have a Intel Merrifield/Edison platform, then
  enable this option by saying Y or m. Distros will typically not
  enable this option: while Merrifield/Edison can run a mainline
  kernel with limited functionality it will require a firmware file
  which is not in the standard firmware tree

SND_SUN4I_CODEC
  Select Y or M to add support for the Codec embedded in the Allwinner
  A10 and affiliated SoCs.

SND_SUN4I_I2S
  Say Y or M if you want to add support for codecs attached to
  the Allwinner A10 I2S. You will also need to select the
  individual machine drivers to support below.

SND_SUN4I_SPDIF
  Say Y or M to add support for the S/PDIF audio block in the Allwinner
  A10 and affiliated SoCs.

SND_SUN50I_CODEC_ANALOG
  Say Y or M if you want to add support for the analog controls for
  the codec embedded in Allwinner A64 SoC.

SND_SUN8I_ADDA_PR_REGMAP
  No help

SND_SUN8I_CODEC
  This option enables the digital part of the internal audio codec for
  Allwinner sun8i SoC (and particularly A33).
  
  Say Y or M if you want to add sun8i digital audio codec support.

SND_SUN8I_CODEC_ANALOG
  Say Y or M if you want to add support for the analog controls for
  the codec embedded in newer Allwinner SoCs.

SND_SUN_AMD7930
  Say Y here to include support for AMD7930 sound device on Sun.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-sun-amd7930.

SND_SUN_CS4231
  Say Y here to include support for CS4231 sound device on Sun.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-sun-cs4231.

SND_SUN_DBRI
  Say Y here to include support for DBRI sound device on Sun.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-sun-dbri.

SND_SUPERH
  Support for sound devices specific to SUPERH architectures.
  Drivers that are implemented on ASoC can be found in
  "ALSA for SoC audio support" section.

SND_SUPPORT_OLD_API
  Say Y here to support the obsolete ALSA PCM API (ver.0.9.0 rc3
  or older).

SND_SYNTH_EMUX
  No help

SND_TIMER
  No help

SND_TRIDENT
  Say Y here to include support for soundcards based on Trident
  4D-Wave DX/NX or SiS 7018 chips.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-trident.

SND_USB
  Support for sound devices connected via the USB bus.

SND_USB_6FIRE
  Say Y here to include support for TerraTec 6fire DMX USB interface.
  
  You will need firmware files in order to be able to use the device
  after it has been coldstarted. An install script for the firmware
  and further help can be found at
  http://sixfireusb.sourceforge.net

SND_USB_AUDIO
  Say Y here to include support for USB audio and USB MIDI
  devices.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-usb-audio.

SND_USB_AUDIO_USE_MEDIA_CONTROLLER
  No help

SND_USB_CAIAQ
  Say Y here to include support for caiaq USB audio interfaces,
  namely:
  
   * Native Instruments RigKontrol2
   * Native Instruments RigKontrol3
   * Native Instruments Kore Controller
   * Native Instruments Kore Controller 2
   * Native Instruments Audio Kontrol 1
   * Native Instruments Audio 2 DJ
   * Native Instruments Audio 4 DJ
   * Native Instruments Audio 8 DJ
   * Native Instruments Traktor Audio 2
   * Native Instruments Guitar Rig Session I/O
   * Native Instruments Guitar Rig mobile
   * Native Instruments Traktor Kontrol X1
   * Native Instruments Traktor Kontrol S4
   * Native Instruments Maschine Controller
  
  To compile this driver as a module, choose M here: the module
  will be called snd-usb-caiaq.

SND_USB_CAIAQ_INPUT
  Say Y here to support input controllers like buttons, knobs,
  alpha dials and analog pedals on the following products:
  
   * Native Instruments RigKontrol2
   * Native Instruments RigKontrol3
   * Native Instruments Kore Controller
   * Native Instruments Kore Controller 2
   * Native Instruments Audio Kontrol 1
   * Native Instruments Traktor Kontrol S4
   * Native Instruments Maschine Controller

SND_USB_HIFACE
  Select this option to include support for M2Tech hiFace USB-SPDIF
  interface.
  
  This driver supports the original M2Tech hiFace and some other
  compatible devices. The supported products are:
  
    * M2Tech Young
    * M2Tech hiFace
    * M2Tech North Star
    * M2Tech W4S Young
    * M2Tech Corrson
    * M2Tech AUDIA
    * M2Tech SL Audio
    * M2Tech Empirical
    * M2Tech Rockna
    * M2Tech Pathos
    * M2Tech Metronome
    * M2Tech CAD
    * M2Tech Audio Esclusive
    * M2Tech Rotel
    * M2Tech Eeaudio
    * The Chord Company CHORD
    * AVA Group A/S Vitus
  
  To compile this driver as a module, choose M here: the module
  will be called snd-usb-hiface.

SND_USB_LINE6
  No help

SND_USB_POD
  This is a driver for PODxt and other similar devices,
  supporting the following features:
    * Reading/writing individual parameters
    * Reading/writing complete channel, effects setup, and amp
      setup data
    * Channel switching
    * Virtual MIDI interface
    * Tuner access
    * Playback/capture/mixer device for any ALSA-compatible PCM
      audio application
    * Signal routing (record clean/processed guitar signal,
      re-amping)

SND_USB_PODHD
  This is a driver for POD X3, HD300, 400 and 500 devices.

SND_USB_TONEPORT
  This is a driver for TonePort GX, UX1 and UX2 devices.

SND_USB_UA101
  Say Y here to include support for the Edirol UA-101 and UA-1000
  audio/MIDI interfaces.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-ua101.

SND_USB_US122L
  Say Y here to include support for Tascam US-122L USB Audio/MIDI
  interfaces.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-usb-us122l.

SND_USB_USX2Y
  Say Y here to include support for Tascam USB Audio/MIDI
  interfaces or controllers US-122, US-224 and US-428.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-usb-usx2y.

SND_USB_VARIAX
  This is a driver for Variax Workbench device.
  

SND_VERBOSE_PRINTK
  Say Y here to enable verbose log messages.  These messages
  will help to identify source file and position containing
  printed messages.
  
  You don't need this unless you're debugging ALSA.

SND_VERBOSE_PROCFS
  Say Y here to include code for verbose procfs contents (provides
  useful information to developers when a problem occurs).  On the
  other side, it makes the ALSA subsystem larger.

SND_VIA82XX
  Say Y here to include support for the integrated AC97 sound
  device on motherboards with VIA chipsets.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-via82xx.

SND_VIA82XX_MODEM
  Say Y here to include support for the integrated MC97 modem on
  motherboards with VIA chipsets.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-via82xx-modem.

SND_VIRMIDI
  Say Y here to include the virtual MIDI driver.  This driver
  allows to connect applications using raw MIDI devices to
  sequencer clients.
  
  If you don't know what MIDI is, say N here.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-virmidi.

SND_VIRTUOSO
  Say Y here to include support for sound cards based on the
  Asus AV66/AV100/AV200 chips, i.e., Xonar D1, DX, D2, D2X, DS, DSX,
  Essence ST (Deluxe), and Essence STX (II).
  Support for the HDAV1.3 (Deluxe) and HDAV1.3 Slim is experimental;
  for the Xense, missing.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-virtuoso.

SND_VMASTER
  No help

SND_VX222
  Say Y here to include support for Digigram VX222 soundcards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-vx222.

SND_VXPOCKET
  Say Y here to include support for Digigram VXpocket and
  VXpocket 440 soundcards.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-vxpocket.

SND_VX_LIB
  No help

SND_WAVEFRONT
  Say Y here to include support for Turtle Beach Maui, Tropez
  and Tropez+ soundcards based on the Wavefront chip.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-wavefront.

SND_WSS_LIB
  No help

SND_X86
  X86 sound devices that don't fall under SoC or PCI categories

SND_XEN_FRONTEND
  Choose this option if you want to enable a para-virtualized
  frontend sound driver for Xen guest OSes.

SND_YMFPCI
  Say Y here to include support for Yamaha PCI audio chips -
  YMF724, YMF724F, YMF740, YMF740C, YMF744, YMF754.
  
  To compile this driver as a module, choose M here: the module
  will be called snd-ymfpci.

SNI_82596
  Say Y here to support the on-board Intel 82596 ethernet controller
  built into SNI RM machines.

SNI_AVE
  Driver for gigabit ethernet MACs, called AVE, in the
  Socionext UniPhier family.

SNI_NETSEC
  Enable to add support for the SocioNext NetSec Gigabit Ethernet
  controller + PHY, as found on the Synquacer SC2A11 SoC
  
  To compile this driver as a module, choose M here: the module will be
  called netsec.  If unsure, say N.

SOCFPGA_FPGA_BRIDGE
  Say Y to enable drivers for FPGA bridges for Altera SOCFPGA
  devices.

SOCK_CGROUP_DATA
  No help

SOCK_VALIDATE_XMIT
  No help

SOC_BCM63XX
  Enables drivers for the Broadcom 63xx series of chips.
  Drivers can be enabled individually within this menu.
  
  If unsure, say N.

SOC_BRCMSTB
  Enables drivers for the Broadcom Set-Top Box (STB) series of chips.
  This option alone enables only some support code, while the drivers
  can be enabled individually within this menu.
  
  If unsure, say N.

SOC_BUS
  No help

SOC_IMX8M
  If you say yes here you get support for the NXP i.MX8M family
  support, it will provide the SoC info like SoC family,
  ID and revision etc.

SOC_INTEGRATOR_CM
  Include support for the SoC bus on the ARM Integrator platform
  core modules providing some sysfs information about the ASIC
  variant.

SOC_REALVIEW
  Include support for the SoC bus on the ARM RealView platforms
  providing some sysfs information about the ASIC variant.

SOC_RENESAS
  No help

SOC_SAMSUNG
  No help

SOC_TEGRA20_VOLTAGE_COUPLER
  No help

SOC_TEGRA30_VOLTAGE_COUPLER
  No help

SOC_TEGRA_FLOWCTRL
  No help

SOC_TEGRA_FUSE
  No help

SOC_TEGRA_PMC
  No help

SOC_TEGRA_POWERGATE_BPMP
  No help

SOC_TI
  No help

SOC_ZTE
  No help

SOFTLOCKUP_DETECTOR
  Say Y here to enable the kernel to act as a watchdog to detect
  soft lockups.
  
  Softlockups are bugs that cause the kernel to loop in kernel
  mode for more than 20 seconds, without giving other tasks a
  chance to run.  The current stack trace is displayed upon
  detection and the system will stay locked up.

SOFT_WATCHDOG
  A software monitoring watchdog. This will fail to reboot your system
  from some situations that the hardware watchdog will recover
  from. Equally it's a lot cheaper to install.
  
  To compile this driver as a module, choose M here: the
  module will be called softdog.

SOFT_WATCHDOG_PRETIMEOUT
  Enable this if you want to use pretimeout governors with the software
  watchdog. Be aware that governors might affect the watchdog because it
  is purely software, e.g. the panic governor will stall it!

SOLARIS_X86_PARTITION
  Like most systems, Solaris x86 uses its own hard disk partition
  table format, incompatible with all others. Saying Y here allows you
  to read these partition tables and further mount Solaris x86
  partitions from within Linux if you have also said Y to "UFS
  file system support", above.

SONYPI
  This driver enables access to the Sony Programmable I/O Control
  Device which can be found in many (all ?) Sony Vaio laptops.
  
  If you have one of those laptops, read
  <file:Documentation/admin-guide/laptops/sonypi.rst>, and say Y or M here.
  
  To compile this driver as a module, choose M here: the
  module will be called sonypi.

SONYPI_COMPAT
  Build the sonypi driver compatibility code into the sony-laptop driver.

SONY_FF
  Say Y here if you have a Sony PS2/3/4 accessory and want to enable
  force feedback support for it.

SONY_LAPTOP
  This mini-driver drives the SNC and SPIC devices present in the ACPI
  BIOS of the Sony Vaio laptops.
  
  It gives access to some extra laptop functionalities like Bluetooth,
  screen brightness control, Fn keys and allows powering on/off some
  devices.
  
  Read <file:Documentation/admin-guide/laptops/sony-laptop.rst> for more information.

SOUND
  If you have a sound card in your computer, i.e. if it can say more
  than an occasional beep, say Y.

SOUNDWIRE
  SoundWire is a 2-Pin interface with data and clock line ratified
  by the MIPI Alliance. SoundWire is used for transporting data
  typically related to audio functions. SoundWire interface is
  optimized to integrate audio devices in mobile or mobile inspired
  systems. Say Y to enable this subsystem, N if you do not have such
  a device

SOUNDWIRE_CADENCE
  No help

SOUNDWIRE_GENERIC_ALLOCATION
  No help

SOUNDWIRE_INTEL
  SoundWire Intel Master driver.
  If you have an Intel platform which has a SoundWire Master then
  enable this config option to get the SoundWire support for that
  device.

SOUNDWIRE_QCOM
  SoundWire Qualcomm Master driver.
  If you have an Qualcomm platform which has a SoundWire Master then
  enable this config option to get the SoundWire support for that
  device

SOUND_OSS_CORE
  No help

SOUND_OSS_CORE_PRECLAIM
  With this option enabled, the kernel will claim all OSS device
  numbers if any OSS support (native or emulation) is enabled
  whether the respective module is loaded or not and try to load the
  appropriate module using sound-slot/service-* and char-major-*
  module aliases when one of the device numbers is opened.  With
  this option disabled, kernel will only claim actually in-use
  device numbers and opening a missing device will generate only the
  standard char-major-* aliases.
  
  The only visible difference is use of additional module aliases
  and whether OSS sound devices appear multiple times in
  /proc/devices.  sound-slot/service-* module aliases are scheduled
  to be removed (ie. PRECLAIM won't be available) and this option is
  to make the transition easier.  This option can be overridden
  during boot using the kernel parameter soundcore.preclaim_oss.
  
  Disabling this allows alternative OSS implementations.
  
  If unsure, say Y.

SP5100_TCO
  Hardware watchdog driver for the AMD/ATI SP5100 chipset. The TCO
  (Total Cost of Ownership) timer is a watchdog timer that will reboot
  the machine after its expiration. The expiration time can be
  configured with the "heartbeat" parameter.
  
  To compile this driver as a module, choose M here: the
  module will be called sp5100_tco.

SPAPR_TCE_IOMMU
  Enables bits of IOMMU API required by VFIO. The iommu_ops
  is not implemented as it is not necessary for VFIO.

SPARC_US2E_CPUFREQ
  This adds the CPUFreq driver for UltraSPARC-IIe processors.
  
  For details, take a look at <file:Documentation/cpu-freq>.
  
  If in doubt, say N.

SPARC_US3_CPUFREQ
  This adds the CPUFreq driver for UltraSPARC-III processors.
  
  For details, take a look at <file:Documentation/cpu-freq>.
  
  If in doubt, say N.

SPARSEMEM
  No help

SPARSEMEM_EXTREME
  No help

SPARSEMEM_MANUAL
  This will be the only option for some systems, including
  memory hot-plug systems.  This is normal.
  
  This option provides efficient support for systems with
  holes is their physical address space and allows memory
  hot-plug and hot-remove.
  
  If unsure, choose "Flat Memory" over this option.

SPARSEMEM_STATIC
  No help

SPARSEMEM_VMEMMAP
  SPARSEMEM_VMEMMAP uses a virtually mapped memmap to optimise
  pfn_to_page and page_to_pfn operations.  This is the most
  efficient option when sufficient kernel resources are available.

SPARSEMEM_VMEMMAP_ENABLE
  No help

SPARSE_IRQ
  Sparse irq numbering is useful for distro kernels that want
  to define a high CONFIG_NR_CPUS value but still want to have
  low kernel memory footprint on smaller machines.
  
  ( Sparse irqs can also be beneficial on NUMA boxes, as they spread
    out the interrupt descriptors in a more NUMA-friendly way. )
  
  If you don't know what to do here, say N.

SPEAKUP
  This is the Speakup screen reader.  Think of it as a
  video console for blind people.  If built in to the
  kernel, it can speak everything on the text console from
  boot up to shutdown.  For more information on Speakup,
  point your browser at <http://www.linux-speakup.org/>.
  There is also a mailing list at the above url that you
  can subscribe to.
  
  Supported synthesizers are accent sa, accent pc,
  appollo II., Auddapter, Braille 'n Speak, Dectalk
  external (old), Dectalk PC (full length isa board),
  Dectalk express, Doubletalk, Doubletalk LT or
  Litetalk, Keynote Gold internal PC, software
  synthesizers, Speakout, transport, and a dummy module
  that can be used with a plain text terminal.
  
  Speakup can either be built in or compiled as a module
  by answering y or m.  If you answer y here, then you
  must answer either y or m to at least one of the
  synthesizer drivers below.  If you answer m here, then
  the synthesizer drivers below can only be built as
  modules.
  
  These drivers are not standalone drivers, but must be
  used in conjunction with Speakup.  Think of them as
  video cards for blind people.
  
  
  The Dectalk pc driver can only be built as a module, and
  requires software to be pre-loaded on to the card before
  the module can be loaded.  See the decpc choice below
  for more details.
  
  If you are not a blind person, or don't have access to
  one of the listed synthesizers, you should say n.

SPEAKUP_SERIALIO
  No help

SPEAKUP_SYNTH_ACNTPC
  This is the Speakup driver for the accent pc
  synthesizer.  You can say y to build it into the kernel,
  or m to build it as a module.  See the configuration
  help on the Speakup choice above for more info.

SPEAKUP_SYNTH_ACNTSA
  This is the Speakup driver for the Accent SA
  synthesizer.  You can say y to build it into the kernel,
  or m to build it as a module.  See the configuration
  help on the Speakup choice above for more info.

SPEAKUP_SYNTH_APOLLO
  This is the Speakup driver for the Apollo II
  synthesizer.  You can say y to build it into the kernel,
  or m to build it as a module.  See the configuration
  help on the Speakup choice above for more info.

SPEAKUP_SYNTH_AUDPTR
  This is the Speakup driver for the Audapter synthesizer.
   You can say y to build it into the kernel, or m to
  build it as a module.  See the configuration help on the
  Speakup choice above for more info.

SPEAKUP_SYNTH_BNS
  This is the Speakup driver for the Braille 'n' Speak
  synthesizer.  You can say y to build it into the kernel,
  or m to build it as a module.  See the configuration
  help on the Speakup choice above for more info.

SPEAKUP_SYNTH_DECEXT
  This is the Speakup driver for the DecTalk External
  (old) synthesizer.  You can say y to build it into the
  kernel, or m to build it as a module.  See the
  configuration help on the Speakup choice above for more
  info.

SPEAKUP_SYNTH_DECPC
  This is the Speakup driver for the DecTalk PC (full
  length ISA) synthesizer.  You can say m to build it as
  a module.  See the configuration help on the Speakup
  choice above for more info.
  
  In order to use the DecTalk PC driver, you must download
  the dec_pc.tgz file from linux-speakup.org.  It is in
  the pub/linux/goodies directory.  The dec_pc.tgz file
  contains the software which must be pre-loaded on to the
  DecTalk PC board in order to use it with this driver.
  This driver must be built as a module, and can not be
  loaded until the file system is mounted and the DecTalk
  PC software has been pre-loaded on to the board.
  
  See the README file in the dec_pc.tgz file for more
  details.

SPEAKUP_SYNTH_DECTLK
  This is the Speakup driver for the DecTalk Express
  synthesizer.  You can say y to build it into the kernel,
  or m to build it as a module.  See the configuration
  help on the Speakup choice above for more info.

SPEAKUP_SYNTH_DTLK
  This is the Speakup driver for the internal DoubleTalk
  PC synthesizer.  You can say y to build it into the
  kernel, or m to build it as a module.  See the
  configuration help on the Speakup choice above for more
  info.

SPEAKUP_SYNTH_DUMMY
  This is a dummy Speakup driver for plugging a mere serial
  terminal.  This is handy if you want to test speakup but
  don't have the hardware.  You can say y to build it into
  the kernel, or m to build it as a module.  See the
  configuration help on the Speakup choice above for more info.

SPEAKUP_SYNTH_KEYPC
  This is the Speakup driver for the Keynote Gold
  PC synthesizer.  You can say y to build it into the
  kernel, or m to build it as a module.  See the
  configuration help on the Speakup choice above for more
  info.

SPEAKUP_SYNTH_LTLK
  This is the Speakup driver for the LiteTalk/DoubleTalk
  LT synthesizer.  You can say y to build it into the
  kernel, or m to build it as a module.  See the
  configuration help on the Speakup choice above for more
  info.

SPEAKUP_SYNTH_SOFT
  This is the software synthesizer device node.  It will
  register a device /dev/softsynth which midware programs
  and speech daemons may open and read to provide kernel
  output to software synths such as espeak, festival,
  flite and so forth.  You can select 'y' or 'm' to have
  it built-in to the kernel or loaded as a module.

SPEAKUP_SYNTH_SPKOUT
  This is the Speakup driver for the Speakout synthesizer.
   You can say y to build it into the kernel, or m to
  build it as a module.  See the configuration help on the
  Speakup choice above for more info.

SPEAKUP_SYNTH_TXPRT
  This is the Speakup driver for the Transport
  synthesizer.  You can say y to build it into the kernel,
  or m to build it as a module.  See the configuration
  help on the Speakup choice above for more info.

SPEAR_ADC
  Say yes here to build support for the integrated ADC inside the
  ST SPEAr SoC. Provides direct access via sysfs.
  
  To compile this driver as a module, choose M here: the
  module will be called spear_adc.

SPEAR_THERMAL
  Enable this to plug the SPEAr thermal sensor driver into the Linux
  thermal framework.

SPI
  The "Serial Peripheral Interface" is a low level synchronous
  protocol.  Chips that support SPI can have data transfer rates
  up to several tens of Mbit/sec.  Chips are addressed with a
  controller and a chipselect.  Most SPI slaves don't support
  dynamic device discovery; some are even write-only or read-only.
  
  SPI is widely used by microcontrollers to talk with sensors,
  eeprom and flash memory, codecs and various other controller
  chips, analog to digital (and d-to-a) converters, and more.
  MMC and SD cards can be accessed using SPI protocol; and for
  DataFlash cards used in MMC sockets, SPI must always be used.
  
  SPI is one of a family of similar protocols using a four wire
  interface (select, clock, data in, data out) including Microwire
  (half duplex), SSP, SSI, and PSP.  This driver framework should
  work with most such devices and controllers.

SPIDER_NET
  This driver supports the Gigabit Ethernet chips present on the
  Cell Processor-Based Blades from IBM.

SPI_ALTERA
  This is the driver for the Altera SPI Controller.

SPI_AMD
  Enables SPI controller driver for AMD SoC.

SPI_AR934X
  This enables support for the SPI controller present on the
  Qualcomm Atheros AR934X/QCA95XX SoCs.

SPI_ARMADA_3700
  This enables support for the SPI controller present on the
  Marvell Armada 3700 SoCs.

SPI_ASPEED_SMC
  This enables support for the Firmware Memory controller (FMC)
  in the Aspeed AST2500/AST2400 SoCs when attached to SPI NOR chips,
  and support for the SPI flash memory controller (SPI) for
  the host firmware. The implementation only supports SPI NOR.

SPI_AT91_USART
  This selects a driver for the AT91 USART Controller as SPI Master,
  present on AT91 and SAMA5 SoC series.

SPI_ATH79
  This enables support for the SPI controller present on the
  Atheros AR71XX/AR724X/AR913X SoCs.

SPI_ATMEL
  This selects a driver for the Atmel SPI Controller, present on
  many AT91 ARM chips.

SPI_ATMEL_QUADSPI
  This enables support for the Quad SPI controller in master mode.
  This driver does not support generic SPI. The implementation only
  supports spi-mem interface.

SPI_AU1550
  If you say yes to this option, support will be included for the
  PSC SPI controller found on Au1550, Au1200 and Au1300 series.

SPI_AXI_SPI_ENGINE
  This enables support for the Analog Devices AXI SPI Engine SPI controller.
  It is part of the SPI Engine framework that is used in some Analog Devices
  reference designs for FPGAs.

SPI_BCM2835
  This selects a driver for the Broadcom BCM2835 SPI master.
  
  The BCM2835 contains two types of SPI master controller; the
  "universal SPI master", and the regular SPI controller. This driver
  is for the regular SPI controller. Slave mode operation is not also
  not supported.

SPI_BCM2835AUX
  This selects a driver for the Broadcom BCM2835 SPI aux master.
  
  The BCM2835 contains two types of SPI master controller; the
  "universal SPI master", and the regular SPI controller.
  This driver is for the universal/auxiliary SPI controller.

SPI_BCM63XX
  Enable support for the SPI controller on the Broadcom BCM63xx SoCs.

SPI_BCM63XX_HSSPI
  This enables support for the High Speed SPI controller present on
  newer Broadcom BCM63XX SoCs.

SPI_BCM_QSPI
  Enables support for the Broadcom SPI flash and MSPI controller.
  Select this option for any one of BRCMSTB, iProc NSP and NS2 SoCs
  based platforms. This driver works for both SPI master for SPI NOR
  flash device as well as MSPI device.

SPI_BITBANG
  With a few GPIO pins, your system can bitbang the SPI protocol.
  Select this to get SPI support through I/O pins (GPIO, parallel
  port, etc).  Or, some systems' SPI master controller drivers use
  this code to manage the per-word or per-transfer accesses to the
  hardware shift registers.
  
  This is library code, and is automatically selected by drivers that
  need it.  You only need to select this explicitly to support driver
  modules that aren't part of this kernel tree.

SPI_BUTTERFLY
  This uses a custom parallel port cable to connect to an AVR
  Butterfly <http://www.atmel.com/products/avr/butterfly>, an
  inexpensive battery powered microcontroller evaluation board.
  This same cable can be used to flash new firmware.

SPI_CADENCE
  This selects the Cadence SPI controller master driver
  used by Xilinx Zynq and ZynqMP.

SPI_CADENCE_QUADSPI
  Enable support for the Cadence Quad SPI Flash controller.
  
  Cadence QSPI is a specialized controller for connecting an SPI
  Flash over 1/2/4-bit wide bus. Enable this option if you have a
  device with a Cadence QSPI controller and want to access the
  Flash as an MTD device.

SPI_CLPS711X
  This enables dedicated general purpose SPI/Microwire1-compatible
  master mode interface (SSI1) for CLPS711X-based CPUs.

SPI_COLDFIRE_QSPI
  This enables support for the Coldfire QSPI controller in master
  mode.

SPI_DAVINCI
  SPI master controller for DaVinci/DA8x/OMAP-L/AM1x SPI modules.

SPI_DEBUG
  Say "yes" to enable debug messaging (like dev_dbg and pr_debug),
  sysfs, and debugfs support in SPI controller and protocol drivers.

SPI_DESIGNWARE
  general driver for SPI controller core from DesignWare

SPI_DLN2
  If you say yes to this option, support will be included for Diolan
  DLN2, a USB to SPI interface.
  
  This driver can also be built as a module.  If so, the module
  will be called spi-dln2.

SPI_DW_BT1
  Baikal-T1 SoC is equipped with three DW APB SSI-based MMIO SPI
  controllers. Two of them are pretty much normal: with IRQ, DMA,
  FIFOs of 64 words depth, 4x CSs, but the third one as being a
  part of the Baikal-T1 System Boot Controller has got a very
  limited resources: no IRQ, no DMA, only a single native
  chip-select and Tx/Rx FIFO with just 8 words depth available.
  The later one is normally connected to an external SPI-nor flash
  of 128Mb (in general can be of bigger size).

SPI_DW_BT1_DIRMAP
  Directly mapped SPI flash memory is an interface specific to the
  Baikal-T1 System Boot Controller. It is a 16MB MMIO region, which
  can be used to access a peripheral memory device just by
  reading/writing data from/to it. Note that the system APB bus
  will stall during each IO from/to the dirmap region until the
  operation is finished. So try not to use it concurrently with
  time-critical tasks (like the SPI memory operations implemented
  in this driver).

SPI_DW_DMA
  No help

SPI_DW_MMIO
  No help

SPI_DW_PCI
  No help

SPI_DYNAMIC
  No help

SPI_EFM32
  Driver for the spi controller found on Energy Micro's EFM32 SoCs.

SPI_EP93XX
  This enables using the Cirrus EP93xx SPI controller in master
  mode.

SPI_FALCON
  The external bus unit (EBU) found on the FALC-ON SoC has SPI
  emulation that is designed for serial flash access. This driver
  has only been tested with m25p80 type chips. The hardware has no
  support for other types of SPI peripherals.

SPI_FSI
  This enables support for the driver for FSI bus attached SPI
  controllers.

SPI_FSL_CPM
  No help

SPI_FSL_DSPI
  This enables support for the Freescale DSPI controller in master
  mode. VF610, LS1021A and ColdFire platforms uses the controller.

SPI_FSL_ESPI
  This enables using the Freescale eSPI controllers in master mode.
  From MPC8536, 85xx platform uses the controller, and all P10xx,
  P20xx, P30xx,P40xx, P50xx uses this controller.

SPI_FSL_LIB
  No help

SPI_FSL_LPSPI
  This enables Freescale i.MX LPSPI controllers in master mode.

SPI_FSL_QUADSPI
  This enables support for the Quad SPI controller in master mode.
  Up to four flash chips can be connected on two buses with two
  chipselects each.
  This controller does not support generic SPI messages. It only
  supports the high-level SPI memory interface.

SPI_FSL_SPI
  This enables using the Freescale SPI controllers in master mode.
  MPC83xx platform uses the controller in cpu mode or CPM/QE mode.
  MPC8569 uses the controller in QE mode, MPC8610 in cpu mode.
  This also enables using the Aeroflex Gaisler GRLIB SPI controller in
  master mode.

SPI_GPIO
  This simple GPIO bitbanging SPI master uses the arch-neutral GPIO
  interface to manage MOSI, MISO, SCK, and chipselect signals.  SPI
  slaves connected to a bus using this driver are configured as usual,
  except that the spi_board_info.controller_data holds the GPIO number
  for the chipselect used by this controller driver.
  
  Note that this driver often won't achieve even 1 Mbit/sec speeds,
  making it unusually slow for SPI.  If your platform can inline
  GPIO operations, you should be able to leverage that for better
  speed with a custom version of this driver; see the source code.

SPI_HISI_SFC
  This enables support for HiSilicon FMC SPI NOR flash controller.

SPI_HISI_SFC_V3XX
  This enables support for HiSilicon v3xx SPI NOR flash controller
  found in hi16xx chipsets.

SPI_IMG_SPFI
  This enables support for the SPFI master controller found on
  IMG SoCs.

SPI_IMX
  This enables support for the Freescale i.MX SPI controllers.

SPI_INTEL_SPI
  No help

SPI_INTEL_SPI_PCI
  This enables PCI support for the Intel PCH/PCU SPI controller in
  master mode. This controller is present in modern Intel hardware
  and is used to hold BIOS and other persistent settings. Using
  this driver it is possible to upgrade BIOS directly from Linux.
  
  Say N here unless you know what you are doing. Overwriting the
  SPI flash may render the system unbootable.
  
  To compile this driver as a module, choose M here: the module
  will be called intel-spi-pci.

SPI_INTEL_SPI_PLATFORM
  This enables platform support for the Intel PCH/PCU SPI
  controller in master mode. This controller is present in modern
  Intel hardware and is used to hold BIOS and other persistent
  settings. Using this driver it is possible to upgrade BIOS
  directly from Linux.
  
  Say N here unless you know what you are doing. Overwriting the
  SPI flash may render the system unbootable.
  
  To compile this driver as a module, choose M here: the module
  will be called intel-spi-platform.

SPI_JCORE
  This enables support for the SPI master controller in the J-Core
  synthesizable, open source SoC.

SPI_LANTIQ_SSC
  This driver supports the Lantiq SSC SPI controller in master
  mode. This controller is found on Intel (former Lantiq) SoCs like
  the Danube, Falcon, xRX200, xRX300, Lightning Mountain.

SPI_LM70_LLP
  This driver supports the NS LM70 LLP Evaluation Board,
  which interfaces to an LM70 temperature sensor using
  a parallel port.

SPI_LOOPBACK_TEST
  This enables the SPI loopback testing framework driver
  
  primarily used for development of spi_master drivers
  and to detect regressions

SPI_LP8841_RTC
  This driver provides an SPI master device to drive Maxim
  DS-1302 real time clock.
  
  Say N here unless you plan to run the kernel on an ICP DAS
  LP-8x4x industrial computer.

SPI_MASTER
  If your system has an master-capable SPI controller (which
  provides the clock and chipselect), you can enable that
  controller and the protocol drivers for the SPI slave chips
  that are connected.

SPI_MEM
  Enable this option if you want to enable the SPI memory extension.
  This extension is meant to simplify interaction with SPI memories
  by providing a high-level interface to send memory-like commands.

SPI_MESON_SPICC
  This enables master mode support for the SPICC (SPI communication
  controller) available in Amlogic Meson SoCs.

SPI_MESON_SPIFC
  This enables master mode support for the SPIFC (SPI flash
  controller) available in Amlogic Meson SoCs.

SPI_MPC512x_PSC
  This enables using the Freescale MPC5121 Programmable Serial
  Controller in SPI master mode.

SPI_MPC52xx
  This drivers supports the MPC52xx SPI controller in master SPI
  mode.

SPI_MPC52xx_PSC
  This enables using the Freescale MPC52xx Programmable Serial
  Controller in master SPI mode.

SPI_MT65XX
  This selects the MediaTek(R) SPI bus driver.
  If you want to use MediaTek(R) SPI interface,
  say Y or M here.If you are not sure, say N.
  SPI drivers for Mediatek MT65XX and MT81XX series ARM SoCs.

SPI_MT7621
  This selects a driver for the MediaTek MT7621 SPI Controller.

SPI_MTK_NOR
  This enables support for SPI NOR controller found on MediaTek
  ARM SoCs. This is a controller specifically for SPI NOR flash.
  It can perform generic SPI transfers up to 6 bytes via generic
  SPI interface as well as several SPI NOR specific instructions
  via SPI MEM interface.

SPI_MUX
  This adds support for SPI multiplexers. Each SPI mux will be
  accessible as a SPI controller, the devices behind the mux will appear
  to be chip selects on this controller. It is still necessary to
  select one or more specific mux-controller drivers.

SPI_MXIC
  This selects the Macronix MX25F0A SPI controller driver.

SPI_MXS
  SPI driver for Freescale MXS devices.

SPI_NPCM_FIU
  This enables support for the Flash Interface Unit SPI controller
  in master mode.
  This driver does not support generic SPI. The implementation only
  supports spi-mem interface.

SPI_NPCM_PSPI
  This driver provides support for Nuvoton NPCM BMC
  Peripheral SPI controller in master mode.

SPI_NXP_FLEXSPI
  This enables support for the Flex SPI controller in master mode.
  Up to four slave devices can be connected on two buses with two
  chipselects each.
  This controller does not support generic SPI messages and only
  supports the high-level SPI memory interface.

SPI_NXP_SPIFI
  Enable support for the NXP LPC SPI Flash Interface controller.
  
  SPIFI is a specialized controller for connecting serial SPI
  Flash. Enable this option if you have a device with a SPIFI
  controller and want to access the Flash as a mtd device.

SPI_OCTEON
  SPI host driver for the hardware found on some Cavium OCTEON
  SOCs.

SPI_OC_TINY
  This is the driver for OpenCores tiny SPI master controller.

SPI_OMAP24XX
  SPI master controller for OMAP24XX and later Multichannel SPI
  (McSPI) modules.

SPI_OMAP_100K
  OMAP SPI 100K master controller for omap7xx boards.

SPI_OMAP_UWIRE
  This hooks up to the MicroWire controller on OMAP1 chips.

SPI_ORION
  This enables using the SPI master controller on the Orion
  and MVEBU chips.

SPI_PIC32
  SPI driver for Microchip PIC32 SPI master controller.

SPI_PIC32_SQI
  SPI driver for PIC32 Quad SPI controller.

SPI_PL022
  This selects the ARM(R) AMBA(R) PrimeCell PL022 SSP
  controller. If you have an embedded system with an AMBA(R)
  bus and a PL022 controller, say Y or M here.

SPI_PPC4xx
  This selects a driver for the PPC4xx SPI Controller.

SPI_PXA2XX
  This enables using a PXA2xx or Sodaville SSP port as a SPI master
  controller. The driver can be configured to use any SSP port and
  additional documentation can be found a Documentation/spi/pxa2xx.rst.

SPI_PXA2XX_PCI
  No help

SPI_QCOM_GENI
  This driver supports GENI serial engine based SPI controller in
  master mode on the Qualcomm Technologies Inc.'s SoCs. If you say
  yes to this option, support will be included for the built-in SPI
  interface on the Qualcomm Technologies Inc.'s SoCs.
  
  This driver can also be built as a module.  If so, the module
  will be called spi-geni-qcom.

SPI_QCOM_QSPI
  QSPI(Quad SPI) driver for Qualcomm QSPI controller.

SPI_QUP
  Qualcomm Universal Peripheral (QUP) core is an AHB slave that
  provides a common data path (an output FIFO and an input FIFO)
  for serial peripheral interface (SPI) mini-core. SPI in master
  mode supports up to 50MHz, up to four chip selects, programmable
  data path from 4 bits to 32 bits and numerous protocol variants.
  
  This driver can also be built as a module.  If so, the module
  will be called spi_qup.

SPI_RB4XX
  SPI controller driver for the Mikrotik RB4xx series boards.

SPI_ROCKCHIP
  This selects a driver for Rockchip SPI controller.
  
  If you say yes to this option, support will be included for
  RK3066, RK3188 and RK3288 families of SPI controller.
  Rockchip SPI controller support DMA transport and PIO mode.
  The main usecase of this controller is to use spi flash as boot
  device.

SPI_RPCIF
  SPI driver for Renesas R-Car Gen3 RPC-IF.

SPI_RSPI
  SPI driver for Renesas RSPI and QSPI blocks.

SPI_S3C24XX
  SPI driver for Samsung S3C24XX series ARM SoCs

SPI_S3C24XX_FIQ
  Enable FIQ support for the S3C24XX SPI driver to provide pseudo
  DMA by using the fast-interrupt request framework, This allows
  the driver to get DMA-like performance when there are either
  no free DMA channels, or when doing transfers that required both
  TX and RX data paths.

SPI_S3C64XX
  SPI driver for Samsung S3C64XX and newer SoCs.

SPI_SC18IS602
  SPI driver for NXP SC18IS602/602B/603 I2C to SPI bridge.

SPI_SH
  SPI driver for SuperH SPI blocks.

SPI_SH_HSPI
  SPI driver for SuperH HSPI blocks.

SPI_SH_MSIOF
  SPI driver for SuperH and SH Mobile MSIOF blocks.

SPI_SH_SCI
  SPI driver for SuperH SCI blocks.

SPI_SIFIVE
  This exposes the SPI controller IP from SiFive.

SPI_SIRF
  SPI driver for CSR SiRFprimaII SoCs

SPI_SLAVE
  If your system has a slave-capable SPI controller, you can enable
  slave protocol handlers.

SPI_SLAVE_MT27XX
  This selects the MediaTek(R) SPI slave device driver.
  If you want to use MediaTek(R) SPI slave interface,
  say Y or M here.If you are not sure, say N.
  SPI slave drivers for Mediatek MT27XX series ARM SoCs.

SPI_SLAVE_SYSTEM_CONTROL
  SPI slave handler to allow remote control of system reboot, power
  off, halt, and suspend.

SPI_SLAVE_TIME
  SPI slave handler responding with the time of reception of the last
  SPI message.

SPI_SPIDEV
  This supports user mode SPI protocol drivers.
  
  Note that this application programming interface is EXPERIMENTAL
  and hence SUBJECT TO CHANGE WITHOUT NOTICE while it stabilizes.

SPI_SPRD
  SPI driver for Spreadtrum SoCs.

SPI_SPRD_ADI
  ADI driver based on SPI for Spreadtrum SoCs.

SPI_STM32
  SPI driver for STMicroelectronics STM32 SoCs.
  
  STM32 SPI controller supports DMA and PIO modes. When DMA
  is not available, the driver automatically falls back to
  PIO mode.

SPI_STM32_QSPI
  This enables support for the Quad SPI controller in master mode.
  This driver does not support generic SPI. The implementation only
  supports spi-mem interface.

SPI_ST_SSC4
  STMicroelectronics SoCs support for SPI. If you say yes to
  this option, support will be included for the SSC driven SPI.

SPI_SUN4I
  SPI driver for Allwinner sun4i, sun5i and sun7i SoCs

SPI_SUN6I
  This enables using the SPI controller on the Allwinner A31 SoCs.

SPI_SYNQUACER
  SPI driver for Socionext's High speed SPI controller which provides
  various operating modes for interfacing to serial peripheral devices
  that use the de-facto standard SPI protocol.
  
  It also supports the new dual-bit and quad-bit SPI protocol.

SPI_TEGRA114
  SPI driver for NVIDIA Tegra114 SPI Controller interface. This controller
  is different than the older SoCs SPI controller and also register interface
  get changed with this controller.

SPI_TEGRA20_SFLASH
  SPI driver for Nvidia Tegra20 Serial flash Controller interface.
  The main usecase of this controller is to use spi flash as boot
  device.

SPI_TEGRA20_SLINK
  SPI driver for Nvidia Tegra20/Tegra30 SLINK Controller interface.

SPI_THUNDERX
  SPI host driver for the hardware found on Cavium ThunderX
  SOCs.

SPI_TI_QSPI
  QSPI master controller for DRA7xxx used for flash devices.
  This device supports single, dual and quad read support, while
  it only supports single write mode.

SPI_TLE62X0
  SPI driver for Infineon TLE62X0 series line driver chips,
  such as the TLE6220, TLE6230 and TLE6240.  This provides a
  sysfs interface, with each line presented as a kind of GPIO
  exposing both switch control and diagnostic feedback.

SPI_TOPCLIFF_PCH
  SPI driver for the Topcliff PCH (Platform Controller Hub) SPI bus
  used in some x86 embedded processors.
  
  This driver also supports the ML7213/ML7223/ML7831, a companion chip
  for the Atom E6xx series and compatible with the Intel EG20T PCH.

SPI_TXX9
  SPI driver for Toshiba TXx9 MIPS SoCs

SPI_UNIPHIER
  This enables a driver for the Socionext UniPhier SoC SCSSI SPI controller.
  
  UniPhier SoCs have SCSSI and MCSSI SPI controllers.
  Every UniPhier SoC has SCSSI which supports single channel.
  Older UniPhier Pro4/Pro5 also has MCSSI which support multiple channels.
  This driver supports SCSSI only.
  
  If your SoC supports SCSSI, say Y here.

SPI_XCOMM
  Support for the SPI-I2C bridge found on the Analog Devices
  AD-FMCOMMS1-EBZ board.

SPI_XILINX
  This exposes the SPI controller IP from the Xilinx EDK.
  
  See the "OPB Serial Peripheral Interface (SPI) (v1.00e)"
  Product Specification document (DS464) for hardware details.
  
  Or for the DS570, see "XPS Serial Peripheral Interface (SPI) (v2.00b)"

SPI_XLP
  Enable support for the SPI controller on the Netlogic XLP SoCs.
  Currently supported XLP variants are XLP8XX, XLP3XX, XLP2XX, XLP9XX
  and XLP5XX.
  
  If you have a Netlogic XLP platform say Y here.
  If unsure, say N.

SPI_XTENSA_XTFPGA
  SPI driver for xtfpga SPI master controller.
  
  This simple SPI master controller is built into xtfpga bitstreams
  and is used to control daughterboard audio codec. It always transfers
  16 bit words in SPI mode 0, automatically asserting CS on transfer
  start and deasserting on end.

SPI_ZYNQMP_GQSPI
  Enables Xilinx GQSPI controller driver for Zynq UltraScale+ MPSoC.

SPI_ZYNQ_QSPI
  This enables support for the Zynq Quad SPI controller
  in master mode.
  This controller only supports SPI memory interface.

SPLIT_PTLOCK_CPUS
  No help

SPMI
  SPMI (System Power Management Interface) is a two-wire
  serial interface between baseband and application processors
  and Power Management Integrated Circuits (PMIC).

SPMI_HISI3670
  If you say yes to this option, support will be included for the
  built-in SPMI PMIC Arbiter interface on Hisilicon 3670
  processors.

SPMI_MSM_PMIC_ARB
  If you say yes to this option, support will be included for the
  built-in SPMI PMIC Arbiter interface on Qualcomm MSM family
  processors.
  
  This is required for communicating with Qualcomm PMICs and
  other devices that have the SPMI interface.

SPMI_PMIC_CLKDIV
  This driver supports the clkdiv functionality on the Qualcomm
  Technologies, Inc. SPMI PMIC. It configures the frequency of
  clkdiv outputs of the PMIC. These clocks are typically wired
  through alternate functions on GPIO pins.

SPRD_COMMON_CLK
  No help

SPRD_DMA
  Enable support for the on-chip DMA controller on Spreadtrum platform.

SPRD_EFUSE
  This is a simple driver to dump specified values of Spreadtrum
  SoCs from eFuse.
  
  This driver can also be built as a module. If so, the module
  will be called nvmem-sprd-efuse.

SPRD_MBOX
  Mailbox driver implementation for the Spreadtrum platform. It is used
  to send message between application processors and MCU. Say Y here if
  you want to build the Spreatrum mailbox controller driver.

SPRD_SC9860_CLK
  No help

SPRD_SC9863A_CLK
  Support for the global clock controller on sc9863a devices.
  Say Y if you want to use peripheral devices on sc9863a SoC.

SPRD_THERMAL
  Support for the Spreadtrum thermal sensor driver in the Linux thermal
  framework.

SPRD_TIMER
  Enables support for the Spreadtrum timer driver.

SPRD_WATCHDOG
  Say Y here to include watchdog timer supported
  by Spreadtrum system.

SPS30
  Say Y here to build support for the Sensirion SPS30 particulate
  matter sensor.
  
  To compile this driver as a module, choose M here: the module will
  be called sps30.

SQUASHFS
  Saying Y here includes support for SquashFS 4.0 (a Compressed
  Read-Only File System).  Squashfs is a highly compressed read-only
  filesystem for Linux.  It uses zlib, lzo or xz compression to
  compress both files, inodes and directories.  Inodes in the system
  are very small and all blocks are packed to minimise data overhead.
  Block sizes greater than 4K are supported up to a maximum of 1 Mbytes
  (default block size 128K).  SquashFS 4.0 supports 64 bit filesystems
  and files (larger than 4GB), full uid/gid information, hard links and
  timestamps.
  
  Squashfs is intended for general read-only filesystem use, for
  archival use (i.e. in cases where a .tar.gz file may be used), and in
  embedded systems where low overhead is needed.  Further information
  and tools are available from http://squashfs.sourceforge.net.
  
  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here.  The module will be called squashfs.  Note that the root
  file system (the one containing the directory /) cannot be compiled
  as a module.
  
  If unsure, say N.

SQUASHFS_4K_DEVBLK_SIZE
  By default Squashfs sets the dev block size (sb_min_blocksize)
  to 1K or the smallest block size supported by the block device
  (if larger).  This, because blocks are packed together and
  unaligned in Squashfs, should reduce latency.
  
  This, however, gives poor performance on MTD NAND devices where
  the optimal I/O size is 4K (even though the devices can support
  smaller block sizes).
  
  Using a 4K device block size may also improve overall I/O
  performance for some file access patterns (e.g. sequential
  accesses of files in filesystem order) on all media.
  
  Setting this option will force Squashfs to use a 4K device block
  size by default.
  
  If unsure, say N.

SQUASHFS_DECOMP_MULTI
  By default Squashfs uses a single decompressor but it gives
  poor performance on parallel I/O workloads when using multiple CPU
  machines due to waiting on decompressor availability.
  
  If you have a parallel I/O workload and your system has enough memory,
  using this option may improve overall I/O performance.
  
  This decompressor implementation uses up to two parallel
  decompressors per core.  It dynamically allocates decompressors
  on a demand basis.

SQUASHFS_DECOMP_MULTI_PERCPU
  By default Squashfs uses a single decompressor but it gives
  poor performance on parallel I/O workloads when using multiple CPU
  machines due to waiting on decompressor availability.
  
  This decompressor implementation uses a maximum of one
  decompressor per core.  It uses percpu variables to ensure
  decompression is load-balanced across the cores.

SQUASHFS_DECOMP_SINGLE
  Traditionally Squashfs has used single-threaded decompression.
  Only one block (data or metadata) can be decompressed at any
  one time.  This limits CPU and memory usage to a minimum.

SQUASHFS_EMBEDDED
  Saying Y here allows you to specify cache size.
  
  If unsure, say N.

SQUASHFS_FILE_CACHE
  Decompress file data into an intermediate buffer and then
  memcopy it into the page cache.

SQUASHFS_FILE_DIRECT
  Directly decompress file data into the page cache.
  Doing so can significantly improve performance because
  it eliminates a memcpy and it also removes the lock contention
  on the single buffer.

SQUASHFS_FRAGMENT_CACHE_SIZE
  By default SquashFS caches the last 3 fragments read from
  the filesystem.  Increasing this amount may mean SquashFS
  has to re-read fragments less often from disk, at the expense
  of extra system memory.  Decreasing this amount will mean
  SquashFS uses less memory at the expense of extra reads from disk.
  
  Note there must be at least one cached fragment.  Anything
  much more than three will probably not make much difference.

SQUASHFS_LZ4
  Saying Y here includes support for reading Squashfs file systems
  compressed with LZ4 compression.  LZ4 compression is mainly
  aimed at embedded systems with slower CPUs where the overheads
  of zlib are too high.
  
  LZ4 is not the standard compression used in Squashfs and so most
  file systems will be readable without selecting this option.
  
  If unsure, say N.

SQUASHFS_LZO
  Saying Y here includes support for reading Squashfs file systems
  compressed with LZO compression.  LZO compression is mainly
  aimed at embedded systems with slower CPUs where the overheads
  of zlib are too high.
  
  LZO is not the standard compression used in Squashfs and so most
  file systems will be readable without selecting this option.
  
  If unsure, say N.

SQUASHFS_XATTR
  Saying Y here includes support for extended attributes (xattrs).
  Xattrs are name:value pairs associated with inodes by
  the kernel or by users (see the attr(5) manual page).
  
  If unsure, say N.

SQUASHFS_XZ
  Saying Y here includes support for reading Squashfs file systems
  compressed with XZ compression.  XZ gives better compression than
  the default zlib compression, at the expense of greater CPU and
  memory overhead.
  
  XZ is not the standard compression used in Squashfs and so most
  file systems will be readable without selecting this option.
  
  If unsure, say N.

SQUASHFS_ZLIB
  ZLIB compression is the standard compression used by Squashfs
  file systems.  It offers a good trade-off between compression
  achieved and the amount of CPU time and memory necessary to
  compress and decompress.
  
  If unsure, say Y.

SQUASHFS_ZSTD
  Saying Y here includes support for reading Squashfs file systems
  compressed with ZSTD compression.  ZSTD gives better compression than
  the default ZLIB compression, while using less CPU.
  
  ZSTD is not the standard compression used in Squashfs and so most
  file systems will be readable without selecting this option.
  
  If unsure, say N.

SRAM
  This driver allows you to declare a memory region to be managed by
  the genalloc API. It is supposed to be used for small on-chip SRAM
  areas found on many SoCs.

SRAM_EXEC
  No help

SRCU
  This option selects the sleepable version of RCU. This version
  permits arbitrary sleeping or blocking within RCU read-side critical
  sections.

SRF04
  Say Y here to build a driver for GPIO bitbanged ultrasonic
  ranger sensor. This driver can be used to measure the distance
  of objects. It is using two GPIOs.
  Actually Supported types are:
  - Devantech SRF04
  - Maxbotix mb1000
  - Maxbotix mb1010
  - Maxbotix mb1020
  - Maxbotix mb1030
  - Maxbotix mb1040
  
  To compile this driver as a module, choose M here: the
  module will be called srf04.

SRF08
  Say Y here to build a driver for Devantech SRF02/SRF08/SRF10
  ultrasonic ranger sensors with i2c interface.
  This driver can be used to measure the distance of objects.
  
  To compile this driver as a module, choose M here: the
  module will be called srf08.

SSB
  Support for the Sonics Silicon Backplane bus.
  You only need to enable this option, if you are
  configuring a kernel for an embedded system with
  this bus.
  It will be auto-selected if needed in other
  environments.
  
  The module will be called ssb.
  
  If unsure, say N.

SSB_B43_PCI_BRIDGE
  No help

SSB_BLOCKIO
  No help

SSB_DRIVER_EXTIF
  Driver for the Sonics Silicon Backplane attached
  Broadcom EXTIF core.
  
  If unsure, say N

SSB_DRIVER_GIGE
  Driver for the Sonics Silicon Backplane attached
  Broadcom Gigabit Ethernet.
  
  If unsure, say N

SSB_DRIVER_GPIO
  Driver to provide access to the GPIO pins on the bus.
  
  If unsure, say N

SSB_DRIVER_MIPS
  Driver for the Sonics Silicon Backplane attached
  Broadcom MIPS core.
  
  If unsure, say N

SSB_DRIVER_PCICORE
  Driver for the Sonics Silicon Backplane attached
  Broadcom PCI core.
  
  If unsure, say Y

SSB_DRIVER_PCICORE_POSSIBLE
  No help

SSB_EMBEDDED
  No help

SSB_HOST_SOC
  Host interface for a SSB directly mapped into memory. This is
  for some Broadcom SoCs from the BCM47xx and BCM53xx lines.
  
  If unsure, say N

SSB_PCICORE_HOSTMODE
  PCIcore hostmode operation (external PCI bus).

SSB_PCIHOST
  Support for a Sonics Silicon Backplane on top
  of a PCI device.
  
  If unsure, say Y

SSB_PCIHOST_POSSIBLE
  No help

SSB_PCMCIAHOST
  Support for a Sonics Silicon Backplane on top
  of a PCMCIA device.
  
  If unsure, say N

SSB_PCMCIAHOST_POSSIBLE
  No help

SSB_POSSIBLE
  No help

SSB_SDIOHOST
  Support for a Sonics Silicon Backplane on top
  of a SDIO device.
  
  If unsure, say N

SSB_SDIOHOST_POSSIBLE
  No help

SSB_SERIAL
  No help

SSB_SFLASH
  No help

SSB_SPROM
  No help

SSFDC
  This enables read only access to SmartMedia formatted NAND
  flash. You can mount it with FAT file system.

SSI_PROTOCOL
  If you say Y here, you will enable the SSI protocol aka McSAAB.
  
  If unsure, say N.

STA2X11
  This adds support for boards based on the STA2X11 IO-Hub,
  a.k.a. "ConneXt". The chip is used in place of the standard
  PC chipset, so all "standard" peripherals are missing. If this
  option is selected the kernel will still be able to boot on
  standard PC machines.

STA2X11_VIP
  Say Y for support for STA2X11 VIP (Video Input Port) capture
  device.
  
  To compile this driver as a module, choose M here: the
  module will be called sta2x11_vip.

STACKDEPOT
  No help

STACKLEAK_METRICS
  If this is set, STACKLEAK metrics for every task are available in
  the /proc file system. In particular, /proc/<pid>/stack_depth
  shows the maximum kernel stack consumption for the current and
  previous syscalls. Although this information is not precise, it
  can be useful for estimating the STACKLEAK performance impact for
  your workloads.

STACKLEAK_RUNTIME_DISABLE
  This option provides 'stack_erasing' sysctl, which can be used in
  runtime to control kernel stack erasing for kernels built with
  CONFIG_GCC_PLUGIN_STACKLEAK.

STACKLEAK_TRACK_MIN_SIZE
  The STACKLEAK gcc plugin instruments the kernel code for tracking
  the lowest border of the kernel stack (and for some other purposes).
  It inserts the stackleak_track_stack() call for the functions with
  a stack frame size greater than or equal to this parameter.
  If unsure, leave the default value 100.

STACKPROTECTOR
  This option turns on the "stack-protector" GCC feature. This
  feature puts, at the beginning of functions, a canary value on
  the stack just before the return address, and validates
  the value just before actually returning.  Stack based buffer
  overflows (that need to overwrite this return address) now also
  overwrite the canary, which gets detected and the attack is then
  neutralized via a kernel panic.
  
  Functions will have the stack-protector canary logic added if they
  have an 8-byte or larger character array on the stack.
  
  This feature requires gcc version 4.2 or above, or a distribution
  gcc with the feature backported ("-fstack-protector").
  
  On an x86 "defconfig" build, this feature adds canary checks to
  about 3% of all kernel functions, which increases kernel code size
  by about 0.3%.

STACKPROTECTOR_STRONG
  Functions will have the stack-protector canary logic added in any
  of the following conditions:
  
  - local variable's address used as part of the right hand side of an
    assignment or function argument
  - local variable is an array (or union containing an array),
    regardless of array type or length
  - uses register local variables
  
  This feature requires gcc version 4.9 or above, or a distribution
  gcc with the feature backported ("-fstack-protector-strong").
  
  On an x86 "defconfig" build, this feature adds canary checks to
  about 20% of all kernel functions, which increases the kernel code
  size by about 2%.

STACKTRACE
  This option causes the kernel to create a /proc/pid/stack for
  every process, showing its current stack trace.
  It is also used by various kernel debugging features that require
  stack trace generation.

STACKTRACE_SUPPORT
  No help

STACK_MAX_DEFAULT_SIZE_MB
  This is the maximum stack size in Megabytes in the VM layout of 32-bit
  user processes when the stack grows upwards (currently only on parisc
  arch) when the RLIMIT_STACK hard limit is unlimited.
  
  A sane initial value is 100 MB.

STACK_TRACER
  This special tracer records the maximum stack footprint of the
  kernel and displays it in /sys/kernel/debug/tracing/stack_trace.
  
  This tracer works by hooking into every function call that the
  kernel executes, and keeping a maximum stack depth value and
  stack-trace saved.  If this is configured with DYNAMIC_FTRACE
  then it will not have any overhead while the stack tracer
  is disabled.
  
  To enable the stack tracer on bootup, pass in 'stacktrace'
  on the kernel command line.
  
  The stack tracer can also be enabled or disabled via the
  sysctl kernel.stack_tracer_enabled
  
  Say N if unsure.

STACK_VALIDATION
  Add compile-time checks to validate stack metadata, including frame
  pointers (if CONFIG_FRAME_POINTER is enabled).  This helps ensure
  that runtime stack traces are more reliable.
  
  This is also a prerequisite for generation of ORC unwind data, which
  is needed for CONFIG_UNWINDER_ORC.
  
  For more information, see
  tools/objtool/Documentation/stack-validation.txt.

STAGING
  This option allows you to select a number of drivers that are
  not of the "normal" Linux kernel quality level.  These drivers
  are placed here in order to get a wider audience to make use of
  them.  Please note that these drivers are under heavy
  development, may or may not work, and may contain userspace
  interfaces that most likely will be changed in the near
  future.
  
  Using any of these drivers will taint your kernel which might
  affect support options from both the community, and various
  commercial support organizations.
  
  If you wish to work on these drivers, to help improve them, or
  to report problems you have with them, please see the
  drivers/staging/<driver_name>/TODO file to see what needs to be
  worked on, and who to contact.
  
  If in doubt, say N here.

STAGING_APEX_DRIVER
  This driver supports the Apex Edge TPU device.  See
  https://cloud.google.com/edge-tpu/ for more information.
  Say Y if you want to include this driver in the kernel.
  
  To compile this driver as a module, choose M here.  The module
  will be called "apex".

STAGING_BOARD
  Select to enable per-board staging support code.
  
  If in doubt, say N here.
  

STAGING_GASKET_FRAMEWORK
  This framework supports Gasket-compatible devices, such as Apex.
  It is required for any of the following module(s).
  
  To compile this driver as a module, choose M here.  The module
  will be called "gasket".

STAGING_MEDIA
  This option allows you to select a number of media drivers that
  don't have the "normal" Linux kernel quality level.
  Most of them don't follow properly the V4L, DVB and/or RC API's,
  so, they won't likely work fine with the existing applications.
  That also means that, once fixed, their API's will change to match
  the existing ones.
  
  If you wish to work on these drivers, to help improve them, or
  to report problems you have with them, please use the
  linux-media@vger.kernel.org mailing list.
  
  If in doubt, say N here.

STANDALONE
  Select this option if you don't have magic firmware for drivers that
  need it.
  
  If unsure, say Y.

STATIC_CALL_SELFTEST
  Boot time self-test of the call patching code.

STATIC_KEYS_SELFTEST
  Boot time self-test of the branch patching code.

STATIC_USERMODEHELPER
  By default, the kernel can call many different userspace
  binary programs through the "usermode helper" kernel
  interface.  Some of these binaries are statically defined
  either in the kernel code itself, or as a kernel configuration
  option.  However, some of these are dynamically created at
  runtime, or can be modified after the kernel has started up.
  To provide an additional layer of security, route all of these
  calls through a single executable that can not have its name
  changed.
  
  Note, it is up to this single binary to then call the relevant
  "real" usermode helper binary, based on the first argument
  passed to it.  If desired, this program can filter and pick
  and choose what real programs are called.
  
  If you wish for all usermode helper programs are to be
  disabled, choose this option and then set
  STATIC_USERMODEHELPER_PATH to an empty string.

STATIC_USERMODEHELPER_PATH
  The binary called by the kernel when any usermode helper
  program is wish to be run.  The "real" application's name will
  be in the first argument passed to this program on the command
  line.
  
  If you wish for all usermode helper programs to be disabled,
  specify an empty string here (i.e. "").

STE10XP
  This is the driver for the STe100p and STe101p PHYs.

STE_DMA40
  Support for ST-Ericsson DMA40 controller

STIH407_RESET
  No help

STI_CONSOLE
  The STI console is the builtin display/keyboard on HP-PARISC
  machines.  Say Y here to build support for it into your kernel.
  The alternative is to use your primary serial port as a console.

STI_MBOX
  Mailbox implementation for STMicroelectonics family chips with
  hardware for interprocessor communication.

STI_RESET_SYSCFG
  No help

STK3310
  Say yes here to get support for the Sensortek STK3310 ambient light
  and proximity sensor. The STK3311 model is also supported by this
  driver.
  
  Choosing M will build the driver as a module. If so, the module
  will be called stk3310.

STK8312
  Say yes here to get support for the Sensortek STK8312 3-axis
  accelerometer.
  
  Choosing M will build the driver as a module. If so, the module
  will be called stk8312.

STK8BA50
  Say yes here to get support for the Sensortek STK8BA50 3-axis
  accelerometer.
  
  Choosing M will build the driver as a module. If so, the module
  will be called stk8ba50.

STM
  A System Trace Module (STM) is a device exporting data in System
  Trace Protocol (STP) format as defined by MIPI STP standards.
  Examples of such devices are Intel(R) Trace Hub and Coresight STM.
  
  Say Y here to enable System Trace Module device support.

STM32_ADC
  Say yes here to build support for STMicroelectronics stm32 Analog
  to Digital Converter (ADC).
  
  This driver can also be built as a module.  If so, the module
  will be called stm32-adc.

STM32_ADC_CORE
  Select this option to enable the core driver for STMicroelectronics
  STM32 analog-to-digital converter (ADC).
  
  This driver can also be built as a module.  If so, the module
  will be called stm32-adc-core.

STM32_DAC
  Say yes here to build support for STMicroelectronics STM32 Digital
  to Analog Converter (DAC).
  
  This driver can also be built as a module.  If so, the module
  will be called stm32-dac.

STM32_DAC_CORE
  No help

STM32_DFSDM_ADC
  Select this option to support ADCSigma delta modulator for
  STMicroelectronics STM32 digital filter for sigma delta converter.
  
  This driver can also be built as a module.  If so, the module
  will be called stm32-dfsdm-adc.

STM32_DFSDM_CORE
  Select this option to enable the  driver for STMicroelectronics
  STM32 digital filter for sigma delta converter.
  
  This driver can also be built as a module.  If so, the module
  will be called stm32-dfsdm-core.

STM32_DMA
  Enable support for the on-chip DMA controller on STMicroelectronics
  STM32 MCUs.
  If you have a board based on such a MCU and wish to use DMA say Y
  here.

STM32_DMAMUX
  Enable support for the on-chip DMA multiplexer on STMicroelectronics
  STM32 MCUs.
  If you have a board based on such a MCU and wish to use DMAMUX say Y
  here.

STM32_EXTI
  No help

STM32_FMC2_EBI
  Select this option to enable the STM32 FMC2 External Bus Interface
  controller. This driver configures the transactions with external
  devices (like SRAM, ethernet adapters, FPGAs, LCD displays, ...) on
  SOCs containing the FMC2 External Bus Interface.

STM32_IPCC
  Mailbox implementation for STMicroelectonics STM32 family chips
  with hardware for Inter-Processor Communication Controller (IPCC)
  between processors. Say Y here if you want to have this support.

STM32_LPTIMER_CNT
  Select this option to enable STM32 Low-Power Timer quadrature encoder
  and counter driver.
  
  To compile this driver as a module, choose M here: the
  module will be called stm32-lptimer-cnt.

STM32_MDMA
  Enable support for the on-chip MDMA controller on STMicroelectronics
  STM32 platforms.
  If you have a board based on STM32 SoC and wish to use the master DMA
  say Y here.

STM32_RPROC
  Say y here to support STM32 MCU processors via the
  remote processor framework.
  
  You want to say y here in order to enable AMP
  use-cases to run on your platform (dedicated firmware could be
  offloaded to remote MCU processors using this framework).
  
  This can be either built-in or a loadable module.

STM32_THERMAL
  Support for thermal framework on STMicroelectronics STM32 series of
  SoCs. This thermal driver allows to access to general thermal framework
  functionalities and to access to SoC sensor functionalities. This
  configuration is fully dependent of MACH_STM32MP157.

STM32_TIMER_CNT
  Select this option to enable STM32 Timer quadrature encoder
  and counter driver.
  
  To compile this driver as a module, choose M here: the
  module will be called stm32-timer-cnt.

STM32_WATCHDOG
  Say Y here to include support for the watchdog timer
  in stm32 SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called stm32_iwdg.

STMMAC_ETH
  This is the driver for the Ethernet IPs built around a
  Synopsys IP Core.

STMMAC_PCI
  This selects the platform specific bus support for the stmmac driver.
  This driver was tested on XLINX XC2V3000 FF1152AMT0221
  D1215994A VIRTEX FPGA board and SNPS QoS IPK Prototyping Kit.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

STMMAC_PLATFORM
  This selects the platform specific bus support for the stmmac driver.
  This is the driver used on several SoCs:
  STi, Allwinner, Amlogic Meson, Altera SOCFPGA.
  
  If you have a controller with this interface, say Y or M here.
  
  If unsure, say N.

STMMAC_SELFTESTS
  This adds support for STMMAC Selftests using ethtool. Enable this
  feature if you are facing problems with your HW and submit the test
  results to the netdev Mailing List.

STMP3XXX_RTC_WATCHDOG
  Say Y here to include support for the watchdog timer inside
  the RTC for the STMP37XX/378X or i.MX23/28 SoC.
  To compile this driver as a module, choose M here: the
  module will be called stmp3xxx_rtc_wdt.

STMPE_ADC
  Say yes here to build support for ST Microelectronics STMPE
  built-in ADC block (stmpe811).

STMPE_I2C
  This is used to enable I2C interface of STMPE

STMPE_SPI
  This is used to enable SPI interface of STMPE

STMP_DEVICE
  No help

STM_DUMMY
  This is a simple dummy device that pretends to be an stm device
  and discards your data. Use for stm class testing.
  
  If you don't know what this is, say N.

STM_PROTO_BASIC
  This is a simple framing protocol for sending data over STM
  devices. This was the protocol that the STM framework used
  exclusively until the MIPI SyS-T support was added. Use this
  driver for compatibility with your existing STM setup.
  
  The receiving side only needs to be able to decode the MIPI
  STP protocol in order to extract the data.
  
  If you want to be able to use the basic protocol or want the
  backwards compatibility for your existing setup, say Y.

STM_PROTO_SYS_T
  This is an implementation of MIPI SyS-T protocol to be used
  over the STP transport. In addition to the data payload, it
  also carries additional metadata for time correlation, better
  means of trace source identification, etc.
  
  The receiving side must be able to decode this protocol in
  addition to the MIPI STP, in order to extract the data.
  
  If you don't know what this is, say N.

STM_SOURCE_CONSOLE
  This is a kernel space trace source that sends kernel log
  messages to trace hosts over STM devices.
  
  If you want to send kernel console messages over STM devices,
  say Y.

STM_SOURCE_FTRACE
  This option can be used to copy the output from kernel Ftrace
  to STM engine. Enabling this option will introduce a slight
  timing effect.
  
  If you want to send kernel Ftrace messages over STM devices,
  say Y.

STM_SOURCE_HEARTBEAT
  This is a kernel space trace source that sends periodic
  heartbeat messages to trace hosts over STM devices. It is
  also useful for testing stm class drivers and the stm class
  framework itself.
  
  If you want to send heartbeat messages over STM devices,
  say Y.

STNIC
  Support for cards based on the National Semiconductor DP83902AV
  ST-NIC Serial Network Interface Controller for Twisted Pair.  This
  is a 10Mbit/sec Ethernet controller.  Product overview and specs at
  <http://www.national.com/pf/DP/DP83902A.html>.
  
  If unsure, say N.

STP
  No help

STPMIC1_WATCHDOG
  Say Y here to include watchdog support embedded into STPMIC1 PMIC.
  If the watchdog timer expires, stpmic1 will shut down all its power
  supplies.
  
  To compile this driver as a module, choose M here: the
  module will be called spmic1_wdt.

STREAM_PARSER
  No help

STRICT_DEVMEM
  If this option is disabled, you allow userspace (root) access to all
  of memory, including kernel and userspace memory. Accidental
  access to this is obviously disastrous, but specific access can
  be used by people debugging the kernel. Note that with PAT support
  enabled, even in this case there are restrictions on /dev/mem
  use due to the cache aliasing requirements.
  
  If this option is switched on, and IO_STRICT_DEVMEM=n, the /dev/mem
  file only allows userspace access to PCI space and the BIOS code and
  data regions.  This is sufficient for dosemu and X and all common
  users of /dev/mem.
  
  If in doubt, say Y.

STRICT_KERNEL_RWX
  If this is set, kernel text and rodata memory will be made read-only,
  and non-text memory will be made non-executable. This provides
  protection against certain security exploits (e.g. executing the heap
  or modifying text)
  
  These features are considered standard security practice these days.
  You should say Y here in almost all cases.

STRICT_MODULE_RWX
  If this is set, module text and rodata memory will be made read-only,
  and non-text memory will be made non-executable. This provides
  protection against certain security exploits (e.g. writing to text)

STRING_SELFTEST
  No help

STRIP_ASM_SYMS
  Strip internal assembler-generated symbols during a link (symbols
  that look like '.Lxxx') so they don't pollute the output of
  get_wchan() and suchlike.

STUB_CLK_HI3660
  Build the Hisilicon Hi3660 stub clock driver.

STUB_CLK_HI6220
  Build the Hisilicon Hi6220 stub clock driver.

STX104
  Say yes here to build support for the Apex Embedded Systems STX104
  integrated analog PC/104 card.
  
  This driver supports the 16 channels of single-ended (8 channels of
  differential) analog inputs, 2 channels of analog output, 4 digital
  inputs, and 4 digital outputs provided by the STX104.
  
  The base port addresses for the devices may be configured via the base
  array module parameter.

ST_FDMA
  Enable support for ST FDMA controller.
  It supports 16 independent DMA channels, accepts up to 32 DMA requests
  
  Say Y here if you have such a chipset.
  If unsure, say N.

ST_IRQCHIP
  Enables SysCfg Controlled IRQs on STi based platforms.

ST_LPC_WATCHDOG
  Say Y here to include STMicroelectronics Low Power Controller
  (LPC) based Watchdog timer support.
  
  To compile this driver as a module, choose M here: the
  module will be called st_lpc_wdt.

ST_REMOTEPROC
  Say y here to support ST's adjunct processors via the remote
  processor framework.
  This can be either built-in or a loadable module.

ST_SLIM_REMOTEPROC
  No help

ST_THERMAL
  Support for thermal sensors on STMicroelectronics STi series of SoCs.

ST_THERMAL_MEMMAP
  No help

ST_THERMAL_SYSCFG
  No help

ST_UVIS25
  Say yes here to build support for STMicroelectronics UVIS25
  uv sensor
  
  To compile this driver as a module, choose M here: the module
  will be called st_uvis25.

ST_UVIS25_I2C
  No help

ST_UVIS25_SPI
  No help

SUN3LANCE
  Most Sun3 and Sun3x motherboards (including the 3/50, 3/60 and 3/80)
  featured an AMD LANCE 10Mbit Ethernet controller on board; say Y
  here to compile in the Linux driver for this and enable Ethernet.
  General Linux information on the Sun 3 and 3x series (now
  discontinued) is at
  <http://www.angelfire.com/ca2/tech68k/sun3.html>.
  
  If you're not building a kernel for a Sun 3, say N.

SUN3X_ESP
  The ESP was an on-board SCSI controller used on Sun 3/80
  machines.  Say Y here to compile in support for it.

SUN3_82586
  This driver enables support for the on-board Intel 82586 based
  Ethernet adapter found on Sun 3/1xx and 3/2xx motherboards.  Note
  that this driver does not support 82586-based adapters on additional
  VME boards.

SUN3_SCSI
  This option will enable support for the OBIO (onboard io) NCR5380
  SCSI controller found in the Sun 3/50 and 3/60, as well as for
  "Sun3" type VME scsi controllers also based on the NCR5380.
  General Linux information on the Sun 3 series (now discontinued)
  is at <http://www.angelfire.com/ca2/tech68k/sun3.html>.

SUN4I_A10_CCU
  No help

SUN4I_EMAC
  Support for Allwinner A10 EMAC ethernet driver.
  
  To compile this driver as a module, choose M here.  The module
  will be called sun4i-emac.

SUN4I_GPADC
  Say yes here to build support for Allwinner (A10, A13 and A31) SoCs
  GPADC. This ADC provides 4 channels which can be used as an ADC or as
  a touchscreen input and one channel for thermal sensor.
  
  The thermal sensor slows down ADC readings and can be disabled by
  disabling CONFIG_THERMAL_OF. However, the thermal sensor should be
  enabled by default since the SoC temperature is usually more critical
  than ADC readings.
  
  To compile this driver as a module, choose M here: the module will be
  called sun4i-gpadc-iio.

SUN4I_TIMER
  Enables support for the Sun4i timer.

SUN50I_A100_CCU
  No help

SUN50I_A100_R_CCU
  No help

SUN50I_A64_CCU
  No help

SUN50I_DE2_BUS
  Say y here to enable support for Allwinner A64 DE2 bus driver. It's
  mostly transparent, but a SRAM region needs to be claimed in the SRAM
  controller to make the all blocks in the DE2 part accessible.

SUN50I_ERRATUM_UNKNOWN1
  This option enables a workaround for instability in the timer on
  the Allwinner A64 SoC. The workaround will only be active if the
  allwinner,erratum-unknown1 property is found in the timer node.

SUN50I_H6_CCU
  No help

SUN50I_H6_R_CCU
  No help

SUN50I_IOMMU
  Support for the IOMMU introduced in the Allwinner H6 SoCs.

SUN5I_CCU
  No help

SUN5I_HSTIMER
  Enables support the Sun5i timer.

SUN6I_A31_CCU
  No help

SUN6I_MSGBOX
  Mailbox implementation for the hardware message box present in
  various Allwinner SoCs. This mailbox is used for communication
  between the application CPUs and the power management coprocessor.

SUN8I_A23_CCU
  No help

SUN8I_A33_CCU
  No help

SUN8I_A83T_CCU
  No help

SUN8I_DE2_CCU
  No help

SUN8I_H3_CCU
  No help

SUN8I_R40_CCU
  No help

SUN8I_R_CCU
  No help

SUN8I_THERMAL
  Support for the sun8i thermal sensor driver into the Linux thermal
  framework.
  
  To compile this driver as a module, choose M here: the
  module will be called sun8i-thermal.

SUN8I_V3S_CCU
  No help

SUN9I_A80_CCU
  No help

SUNBMAC
  This driver supports the "be" interface available as an Sbus option.
  This is Sun's older 100baseT Ethernet device.
  
  To compile this driver as a module, choose M here: the module
  will be called sunbmac.

SUNDANCE
  This driver is for the Sundance "Alta" chip.
  More specific information and updates are available from
  <http://www.scyld.com/network/sundance.html>.

SUNDANCE_MMIO
  Enable memory-mapped I/O for interaction with Sundance NIC registers.
  Do NOT enable this by default, PIO (enabled when MMIO is disabled)
  is known to solve bugs on certain chips.
  
  If unsure, say N.

SUNGEM
  Support for the Sun GEM chip, aka Sun GigabitEthernet/P 2.0.  See also
  <http://docs.oracle.com/cd/E19455-01/806-3985-10/806-3985-10.pdf>.

SUNGEM_PHY
  No help

SUNIV_F1C100S_CCU
  No help

SUNLANCE
  This driver supports the "le" interface present on all 32-bit Sparc
  systems, on some older Ultra systems and as an Sbus option.  These
  cards are based on the AMD LANCE chipset, which is better known
  via the NE2100 cards.
  
  To compile this driver as a module, choose M here: the module
  will be called sunlance.

SUNQE
  This driver supports the "qe" 10baseT Ethernet device, available as
  an Sbus option. Note that this is not the same as Quad FastEthernet
  "qfe" which is supported by the Happy Meal driver instead.
  
  To compile this driver as a module, choose M here: the module
  will be called sunqe.

SUNRPC
  No help

SUNRPC_BACKCHANNEL
  No help

SUNRPC_DEBUG
  This option enables a sysctl-based debugging interface
  that is be used by the 'rpcdebug' utility to turn on or off
  logging of different aspects of the kernel RPC activity.
  
  Disabling this option will make your kernel slightly smaller,
  but makes troubleshooting NFS issues significantly harder.
  
  If unsure, say Y.

SUNRPC_DISABLE_INSECURE_ENCTYPES
  Choose Y here to disable the use of deprecated encryption types
  with the Kerberos version 5 GSS-API mechanism (RFC 1964). The
  deprecated encryption types include DES-CBC-MD5, DES-CBC-CRC,
  and DES-CBC-MD4. These types were deprecated by RFC 6649 because
  they were found to be insecure.
  
  N is the default because many sites have deployed KDCs and
  keytabs that contain only these deprecated encryption types.
  Choosing Y prevents the use of known-insecure encryption types
  but might result in compatibility problems.

SUNRPC_GSS
  No help

SUNRPC_SWAP
  No help

SUNRPC_XPRT_RDMA
  This option allows the NFS client and server to use RDMA
  transports (InfiniBand, iWARP, or RoCE).
  
  To compile this support as a module, choose M. The module
  will be called rpcrdma.ko.
  
  If unsure, or you know there is no RDMA capability on your
  hardware platform, say N.

SUNVDC
  Support for virtual disk devices as a client under Sun
  Logical Domains.

SUNVNET
  Support for virtual network devices under Sun Logical Domains.

SUNVNET_COMMON
  No help

SUNXI_CCU
  No help

SUNXI_MBUS
  Say y to enable the fixups needed to support the Allwinner
  MBUS DMA quirks.

SUNXI_RSB
  Say y here to enable support for Allwinner's Reduced Serial Bus
  (RSB) support. This controller is responsible for communicating
  with various RSB based devices, such as AXP223, AXP8XX PMICs,
  and AC100/AC200 ICs.

SUNXI_SRAM
  Say y here to enable the SRAM controller support. This
  device is responsible on mapping the SRAM in the sunXi SoCs
  whether to the CPU/DMA, or to the devices.

SUNXI_WATCHDOG
  Say Y here to include support for the watchdog timer
  in Allwinner SoCs.
  To compile this driver as a module, choose M here: the
  module will be called sunxi_wdt.

SUN_PARTITION
  Like most systems, SunOS uses its own hard disk partition table
  format, incompatible with all others. Saying Y here allows you to
  read these partition tables and further mount SunOS partitions from
  within Linux if you have also said Y to "UFS file system support",
  above. This is mainly used to carry data from a SPARC under SunOS to
  your Linux box via a removable medium like magneto-optical or ZIP
  drives; note however that a good portable way to transport files and
  directories between unixes (and even other operating systems) is
  given by the tar program ("man tar" or preferably "info tar"). If
  you don't know what all this is about, say N.

SURFACE3_WMI
  Say Y here if you have a Surface 3.
  
  To compile this driver as a module, choose M here: the module will
  be called surface3-wmi.

SURFACE_3_BUTTON
  This driver handles the power/home/volume buttons on the Microsoft Surface 3 tablet.

SURFACE_3_POWER_OPREGION
  This driver provides support for ACPI operation
  region of the Surface 3 battery platform driver.

SURFACE_GPE
  This driver marks the GPEs related to the ACPI lid device found on
  Microsoft Surface devices as wakeup sources and prepares them
  accordingly. It is required on those devices to allow wake-ups from
  suspend by opening the lid.

SURFACE_PLATFORMS
  Say Y here to get to see options for platform-specific device drivers
  for Microsoft Surface devices. This option alone does not add any
  kernel code.
  
  If you say N, all options in this submenu will be skipped and disabled.

SURFACE_PRO3_BUTTON
  This driver handles the power/home/volume buttons on the Microsoft Surface Pro 3/4 tablet.

SUSPEND
  Allow the system to enter sleep states in which main memory is
  powered and thus its contents are preserved, such as the
  suspend-to-RAM state (e.g. the ACPI S3 state).

SUSPEND_FREEZER
  This allows you to turn off the freezer for suspend. If this is
  done, no tasks are frozen for suspend to RAM/standby.
  
  Turning OFF this setting is NOT recommended! If in doubt, say Y.

SUSPEND_SKIP_SYNC
  Skip the kernel sys_sync() before freezing user processes.
  Some systems prefer not to pay this cost on every invocation
  of suspend, or they are content with invoking sync() from
  user-space before invoking suspend.  There's a run-time switch
  at '/sys/power/sync_on_suspend' to configure this behaviour.
  This setting changes the default for the run-tim switch. Say Y
  to change the default to disable the kernel sys_sync().

SWAP
  This option allows you to choose whether you want to have support
  for so called swap devices or swap files in your kernel that are
  used to provide more virtual memory than the actual RAM present
  in your computer.  If unsure say Y.

SWIOTLB
  No help

SWIOTLB_XEN
  No help

SWPHY
  No help

SW_SYNC
  A sync object driver that uses a 32bit counter to coordinate
  synchronization.  Useful when there is no hardware primitive backing
  the synchronization.
  
  WARNING: improper use of this can result in deadlocking kernel
  drivers from userspace. Intended for test and debug only.

SX9310
  Say Y here to build a driver for Semtech's SX9310/SX9311 capacitive
  proximity/button sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called sx9310.

SX9500
  Say Y here to build a driver for Semtech's SX9500 capacitive
  proximity/button sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called sx9500.

SXGBE_ETH
  This is the driver for the SXGBE 10G Ethernet IP block found on
  Samsung platforms.
  
  To compile this driver as a module, choose M here: the module
  will be called samsung-sxgbe.

SYMBOLIC_ERRNAME
  If you say Y here, the kernel's printf implementation will
  be able to print symbolic error names such as ENOSPC instead
  of the number 28. It makes the kernel image slightly larger
  (about 3KB), but can make the kernel logs easier to read.

SYNCLINK_CS
  Enable support for the SyncLink PC Card serial adapter, running
  asynchronous and HDLC communications up to 512Kbps. The port is
  selectable for RS-232, V.35, RS-449, RS-530, and X.21
  
  This driver may be built as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called synclink_cs.  If you want to do that, say M
  here.

SYNCLINK_GT
  Support for SyncLink GT and SyncLink AC families of
  synchronous and asynchronous serial adapters
  manufactured by Microgate Systems, Ltd. (www.microgate.com)

SYNC_FILE
  The Sync File Framework adds explicit synchronization via
  userspace. It enables send/receive 'struct dma_fence' objects to/from
  userspace via Sync File fds for synchronization between drivers via
  userspace components. It has been ported from Android.
  
  The first and main user for this is graphics in which a fence is
  associated with a buffer. When a job is submitted to the GPU a fence
  is attached to the buffer and is transferred via userspace, using Sync
  Files fds, to the DRM driver for example. More details at
  Documentation/driver-api/sync_file.rst.

SYNTH_EVENTS
  Synthetic events are user-defined trace events that can be
  used to combine data from other trace events or in fact any
  data source.  Synthetic events can be generated indirectly
  via the trace() action of histogram triggers or directly
  by way of an in-kernel API.
  
  See Documentation/trace/events.rst or
  Documentation/trace/histogram.rst for details and examples.
  
  If in doubt, say N.

SYNTH_EVENT_GEN_TEST
  This option creates a test module to check the base
  functionality of in-kernel synthetic event definition and
  generation.
  
  To test, insert the module, and then check the trace buffer
  for the generated sample events.
  
  If unsure, say N.

SYN_COOKIES
  Normal TCP/IP networking is open to an attack known as "SYN
  flooding". This denial-of-service attack prevents legitimate remote
  users from being able to connect to your computer during an ongoing
  attack and requires very little work from the attacker, who can
  operate from anywhere on the Internet.
  
  SYN cookies provide protection against this type of attack. If you
  say Y here, the TCP/IP stack will use a cryptographic challenge
  protocol known as "SYN cookies" to enable legitimate users to
  continue to connect, even when your machine is under attack. There
  is no need for the legitimate users to change their TCP/IP software;
  SYN cookies work transparently to them. For technical information
  about SYN cookies, check out <https://cr.yp.to/syncookies.html>.
  
  If you are SYN flooded, the source address reported by the kernel is
  likely to have been forged by the attacker; it is only reported as
  an aid in tracing the packets to their actual source and should not
  be taken as absolute truth.
  
  SYN cookies may prevent correct error reporting on clients when the
  server is really overloaded. If this happens frequently better turn
  them off.
  
  If you say Y here, you can disable SYN cookies at run time by
  saying Y to "/proc file system support" and
  "Sysctl support" below and executing the command
  
  echo 0 > /proc/sys/net/ipv4/tcp_syncookies
  
  after the /proc file system has been mounted.
  
  If unsure, say N.

SYSCON_REBOOT_MODE
  Say y here will enable reboot mode driver. This will
  get reboot mode arguments and store it in SYSCON mapped
  register, then the bootloader can read it to take different
  action according to the mode.

SYSCTL
  No help

SYSCTL_ARCH_UNALIGN_ALLOW
  Enable support for /proc/sys/kernel/unaligned-trap
  Allows arches to define/use @unaligned_enabled to runtime toggle
  the unaligned access emulation.
  see arch/parisc/kernel/unaligned.c for reference

SYSCTL_ARCH_UNALIGN_NO_WARN
  Enable support for /proc/sys/kernel/ignore-unaligned-usertrap
  Allows arch to define/use @no_unaligned_warning to possibly warn
  about unaligned access emulation going on under the hood.

SYSCTL_EXCEPTION_TRACE
  Enable support for /proc/sys/debug/exception-trace.

SYSCTL_KUNIT_TEST
  This builds the proc sysctl unit test, which runs on boot.
  Tests the API contract and implementation correctness of sysctl.
  For more information on KUnit and unit tests in general please refer
  to the KUnit documentation in Documentation/dev-tools/kunit/.
  
  If unsure, say N.

SYSC_R8A7742
  No help

SYSC_R8A7743
  No help

SYSC_R8A7745
  No help

SYSC_R8A77470
  No help

SYSC_R8A774A1
  No help

SYSC_R8A774B1
  No help

SYSC_R8A774C0
  No help

SYSC_R8A774E1
  No help

SYSC_R8A7779
  No help

SYSC_R8A7790
  No help

SYSC_R8A7791
  No help

SYSC_R8A7792
  No help

SYSC_R8A7794
  No help

SYSC_R8A7795
  No help

SYSC_R8A77960
  No help

SYSC_R8A77961
  No help

SYSC_R8A77965
  No help

SYSC_R8A77970
  No help

SYSC_R8A77980
  No help

SYSC_R8A77990
  No help

SYSC_R8A77995
  No help

SYSC_R8A779A0
  No help

SYSC_RCAR
  No help

SYSC_RMOBILE
  No help

SYSFS
  The sysfs filesystem is a virtual filesystem that the kernel uses to
  export internal kernel objects, their attributes, and their
  relationships to one another.
  
  Users can use sysfs to ascertain useful information about the running
  kernel, such as the devices the kernel has discovered on each bus and
  which driver each is bound to. sysfs can also be used to tune devices
  and other kernel subsystems.
  
  Some system agents rely on the information in sysfs to operate.
  /sbin/hotplug uses device and object attributes in sysfs to assist in
  delegating policy decisions, like persistently naming devices.
  
  sysfs is currently used by the block subsystem to mount the root
  partition.  If sysfs is disabled you must specify the boot device on
  the kernel boot command line via its major and minor numbers.  For
  example, "root=03:01" for /dev/hda1.
  
  Designers of embedded systems may wish to say N here to conserve space.

SYSFS_DEPRECATED
  This option adds code that switches the layout of the "block" class
  devices, to not show up in /sys/class/block/, but only in
  /sys/block/.
  
  This switch is only active when the sysfs.deprecated=1 boot option is
  passed or the SYSFS_DEPRECATED_V2 option is set.
  
  This option allows new kernels to run on old distributions and tools,
  which might get confused by /sys/class/block/. Since 2007/2008 all
  major distributions and tools handle this just fine.
  
  Recent distributions and userspace tools after 2009/2010 depend on
  the existence of /sys/class/block/, and will not work with this
  option enabled.
  
  Only if you are using a new kernel on an old distribution, you might
  need to say Y here.

SYSFS_DEPRECATED_V2
  Enable deprecated sysfs by default.
  
  See the CONFIG_SYSFS_DEPRECATED option for more details about this
  option.
  
  Only if you are using a new kernel on an old distribution, you might
  need to say Y here. Even then, odds are you would not need it
  enabled, you can always pass the boot option if absolutely necessary.

SYSFS_SYSCALL
  sys_sysfs is an obsolete system call no longer supported in libc.
  Note that disabling this option is more secure but might break
  compatibility with some systems.
  
  If unsure say Y here.

SYSTEM76_ACPI
  This is a driver for System76 laptops running open firmware. It adds
  support for Fn-Fx key combinations, keyboard backlight, and airplane mode
  LEDs.
  
  If you have a System76 laptop running open firmware, say Y or M here.

SYSTEMPORT
  This driver supports the built-in Ethernet MACs found in the
  Broadcom BCM7xxx Set Top Box family chipset using an internal
  Ethernet switch.

SYSTEM_BLACKLIST_HASH_LIST
  If set, this option should be the filename of a list of hashes in the
  form "<hash>", "<hash>", ... .  This will be included into a C
  wrapper to incorporate the list into the kernel.  Each <hash> should
  be a string of hex digits.

SYSTEM_BLACKLIST_KEYRING
  Provide a system keyring to which blacklisted keys can be added.
  Keys in the keyring are considered entirely untrusted.  Keys in this
  keyring are used by the module signature checking to reject loading
  of modules signed with a blacklisted key.

SYSTEM_DATA_VERIFICATION
  Provide PKCS#7 message verification using the contents of the system
  trusted keyring to provide public keys.  This then can be used for
  module verification, kexec image verification and firmware blob
  verification.

SYSTEM_EXTRA_CERTIFICATE
  If set, space for an extra certificate will be reserved in the kernel
  image. This allows introducing a trusted certificate to the default
  system keyring without recompiling the kernel.

SYSTEM_EXTRA_CERTIFICATE_SIZE
  This is the number of bytes reserved in the kernel image for a
  certificate to be inserted.

SYSTEM_TRUSTED_KEYRING
  Provide a system keyring to which trusted keys can be added.  Keys in
  the keyring are considered to be trusted.  Keys may be added at will
  by the kernel from compiled-in data and from hardware key stores, but
  userspace may only add extra keys if those keys can be verified by
  keys already in the keyring.
  
  Keys in this keyring are used by module signature checking.

SYSTEM_TRUSTED_KEYS
  If set, this option should be the filename of a PEM-formatted file
  containing trusted X.509 certificates to be included in the default
  system keyring. Any certificate used for module signing is implicitly
  also trusted.
  
  NOTE: If you previously provided keys for the system keyring in the
  form of DER-encoded *.x509 files in the top-level build directory,
  those are no longer used. You will need to set this option instead.

SYSV68_PARTITION
  Say Y here if you would like to be able to read the hard disk
  partition table format used by Motorola Delta machines (using
  sysv68).
  Otherwise, say N.

SYSVIPC
  Inter Process Communication is a suite of library functions and
  system calls which let processes (running programs) synchronize and
  exchange information. It is generally considered to be a good thing,
  and some programs won't run unless you say Y here. In particular, if
  you want to run the DOS emulator dosemu under Linux (read the
  DOSEMU-HOWTO, available from <http://www.tldp.org/docs.html#howto>),
  you'll need to say Y here.
  
  You can find documentation about IPC with "info ipc" and also in
  section 6.4 of the Linux Programmer's Guide, available from
  <http://www.tldp.org/guides.html>.

SYSVIPC_COMPAT
  No help

SYSVIPC_SYSCTL
  No help

SYSV_FS
  SCO, Xenix and Coherent are commercial Unix systems for Intel
  machines, and Version 7 was used on the DEC PDP-11. Saying Y
  here would allow you to read from their floppies and hard disk
  partitions.
  
  If you have floppies or hard disk partitions like that, it is likely
  that they contain binaries from those other Unix systems; in order
  to run these binaries, you will want to install linux-abi which is
  a set of kernel modules that lets you run SCO, Xenix, Wyse,
  UnixWare, Dell Unix and System V programs under Linux.  It is
  available via FTP (user: ftp) from
  <ftp://ftp.openlinux.org/pub/people/hch/linux-abi/>).
  NOTE: that will work only for binaries from Intel-based systems;
  PDP ones will have to wait until somebody ports Linux to -11 ;-)
  
  If you only intend to mount files from some other Unix over the
  network using NFS, you don't need the System V file system support
  (but you need NFS file system support obviously).
  
  Note that this option is generally not needed for floppies, since a
  good portable way to transport files and directories between unixes
  (and even other operating systems) is given by the tar program ("man
  tar" or preferably "info tar").  Note also that this option has
  nothing whatsoever to do with the option "System V IPC". Read about
  the System V file system in
  <file:Documentation/filesystems/sysv-fs.rst>.
  Saying Y here will enlarge your kernel by about 27 KB.
  
  To compile this as a module, choose M here: the module will be called
  sysv.
  
  If you haven't heard about all of this before, it's safe to say N.

SYS_HYPERVISOR
  No help

SYS_SUPPORTS_EM_STI
  No help

SYS_SUPPORTS_SH_CMT
  No help

SYS_SUPPORTS_SH_MTU2
  No help

SYS_SUPPORTS_SH_TMU
  No help

T5403
  Say yes here to build support for the EPCOS T5403 pressure sensor
  connected via I2C.
  
  To compile this driver as a module, choose M here: the module
  will be called t5403.

TABLET_SERIAL_WACOM4
  Say Y here if you want to use Wacom protocol 4 serial tablets.
  E.g. serial versions of the Cintiq, Graphire or Penpartner.
  
  To compile this driver as a module, choose M here: the
  module will be called wacom_serial4.

TABLET_USB_ACECAD
  Say Y here if you want to use the USB version of the Acecad Flair
  tablet.  Make sure to say Y to "Mouse support"
  (CONFIG_INPUT_MOUSEDEV) and/or "Event interface support"
  (CONFIG_INPUT_EVDEV) as well.
  
  To compile this driver as a module, choose M here: the
  module will be called acecad.

TABLET_USB_AIPTEK
  Say Y here if you want to use the USB version of the Aiptek 6000U,
  Aiptek 8000U or Genius G-PEN 560 tablet.  Make sure to say Y to
  "Mouse support" (CONFIG_INPUT_MOUSEDEV) and/or "Event interface
  support" (CONFIG_INPUT_EVDEV) as well.
  
  To compile this driver as a module, choose M here: the
  module will be called aiptek.

TABLET_USB_HANWANG
  Say Y here if you want to use the USB version of the Hanwang Art
  Master III tablet.
  
  To compile this driver as a module, choose M here: the
  module will be called hanwang.

TABLET_USB_KBTAB
  Say Y here if you want to use the USB version of the KB Gear
  JamStudio tablet.  Make sure to say Y to "Mouse support"
  (CONFIG_INPUT_MOUSEDEV) and/or "Event interface support"
  (CONFIG_INPUT_EVDEV) as well.
  
  To compile this driver as a module, choose M here: the
  module will be called kbtab.

TABLET_USB_PEGASUS
  Say Y here if you want to use the Pegasus Mobile Notetaker,
  also known as:
  Genie e-note The Notetaker,
  Staedtler Digital ballpoint pen 990 01,
  IRISnotes Express or
  NEWLink Digital Note Taker.
  
  To compile this driver as a module, choose M here: the
  module will be called pegasus_notetaker.

TAHVO_USB
  Enable this to support USB transceiver on Tahvo. This is used
  at least on Nokia 770.

TAHVO_USB_HOST_BY_DEFAULT
  Say Y here, if you want the device to enter USB host mode
  by default on bootup.

TANGOX_WATCHDOG
  Support for the watchdog in Sigma Designs SMP86xx (tango3)
  and SMP87xx (tango4) family chips.
  
  This driver can be built as a module. The module name is tangox_wdt.

TANGO_IRQ
  No help

TANGO_THERMAL
  Enable the Tango thermal driver, which supports the primitive
  temperature sensor embedded in Tango chips since the SMP8758.
  This sensor only generates a 1-bit signal to indicate whether
  the die temperature exceeds a programmable threshold.

TAP
  This option is selected by any driver implementing tap user space
  interface for a virtual interface to re-use core tap functionality.

TARGET_CORE
  Say Y or M here to enable the TCM Storage Engine and ConfigFS enabled
  control path for target_core_mod.  This includes built-in TCM RAMDISK
  subsystem logic for virtual LUN 0 access

TASKSTATS
  Export selected statistics for tasks/processes through the
  generic netlink interface. Unlike BSD process accounting, the
  statistics are available during the lifetime of tasks/processes as
  responses to commands. Like BSD accounting, they are sent to user
  space on task exit.
  
  Say N if unsure.

TASKS_RCU
  This option enables a task-based RCU implementation that uses
  only voluntary context switch (not preemption!), idle, and
  user-mode execution as quiescent states.  Not for manual selection.

TASKS_RCU_GENERIC
  This option enables generic infrastructure code supporting
  task-based RCU implementations.  Not for manual selection.

TASKS_RUDE_RCU
  This option enables a task-based RCU implementation that uses
  only context switch (including preemption) and user-mode
  execution as quiescent states.  It forces IPIs and context
  switches on all online CPUs, including idle ones, so use
  with caution.

TASKS_TRACE_RCU
  This option enables a task-based RCU implementation that uses
  explicit rcu_read_lock_trace() read-side markers, and allows
  these readers to appear in the idle loop as well as on the CPU
  hotplug code paths.  It can force IPIs on online CPUs, including
  idle ones, so use with caution.

TASKS_TRACE_RCU_READ_MB
  Use this option to further reduce the number of IPIs sent
  to CPUs executing in userspace or idle during tasks trace
  RCU grace periods.  Given that a reasonable setting of
  the rcupdate.rcu_task_ipi_delay kernel boot parameter
  eliminates such IPIs for many workloads, proper setting
  of this Kconfig option is important mostly for aggressive
  real-time installations and for battery-powered devices,
  hence the default chosen above.
  
  Say Y here if you hate IPIs.
  Say N here if you hate read-side memory barriers.
  Take the default if you are unsure.

TASK_DELAY_ACCT
  Collect information on time spent by a task waiting for system
  resources like cpu, synchronous block I/O completion and swapping
  in pages. Such statistics can help in setting a task's priorities
  relative to other tasks for cpu, io, rss limits etc.
  
  Say N if unsure.

TASK_IO_ACCOUNTING
  Collect information on the number of bytes of storage I/O which this
  task has caused.
  
  Say N if unsure.

TASK_XACCT
  Collect extended task accounting data and send the data
  to userland for processing over the taskstats interface.
  
  Say N if unsure.

TB10X_IRQC
  No help

TC1100_WMI
  This is a driver for the WMI extensions (wireless and bluetooth power
  control) of the HP Compaq TC1100 tablet.

TC35815
  No help

TCG_ATMEL
  If you have a TPM security chip from Atmel say Yes and it
  will be accessible from within Linux.  To compile this driver
  as a module, choose M here; the module will be called tpm_atmel.

TCG_CRB
  If you have a TPM security chip that is compliant with the
  TCG CRB 2.0 TPM specification say Yes and it will be accessible
  from within Linux.  To compile this driver as a module, choose
  M here; the module will be called tpm_crb.

TCG_FTPM_TEE
  This driver proxies for firmware TPM running in TEE.

TCG_IBMVTPM
  If you have IBM virtual TPM (VTPM) support say Yes and it
  will be accessible from within Linux.  To compile this driver
  as a module, choose M here; the module will be called tpm_ibmvtpm.

TCG_INFINEON
  If you have a TPM security chip from Infineon Technologies
  (either SLD 9630 TT 1.1 or SLB 9635 TT 1.2) say Yes and it
  will be accessible from within Linux.
  To compile this driver as a module, choose M here; the module
  will be called tpm_infineon.
  Further information on this driver and the supported hardware
  can be found at http://www.trust.rub.de/projects/linux-device-driver-infineon-tpm/

TCG_NSC
  If you have a TPM security chip from National Semiconductor
  say Yes and it will be accessible from within Linux.  To
  compile this driver as a module, choose M here; the module
  will be called tpm_nsc.

TCG_TIS
  If you have a TPM security chip that is compliant with the
  TCG TIS 1.2 TPM specification (TPM1.2) or the TCG PTP FIFO
  specification (TPM2.0) say Yes and it will be accessible from
  within Linux. To compile this driver as a module, choose  M here;
  the module will be called tpm_tis.

TCG_TIS_CORE
  TCG TIS TPM core driver. It implements the TPM TCG TIS logic and hooks
  into the TPM kernel APIs. Physical layers will register against it.

TCG_TIS_I2C_ATMEL
  If you have an Atmel I2C TPM security chip say Yes and it will be
  accessible from within Linux.
  To compile this driver as a module, choose M here; the module will
  be called tpm_tis_i2c_atmel.

TCG_TIS_I2C_INFINEON
  If you have a TPM security chip that is compliant with the
  TCG TIS 1.2 TPM specification and Infineon's I2C Protocol Stack
  Specification 0.20 say Yes and it will be accessible from within
  Linux.
  To compile this driver as a module, choose M here; the module
  will be called tpm_i2c_infineon.

TCG_TIS_I2C_NUVOTON
  If you have a TPM security chip with an I2C interface from
  Nuvoton Technology Corp. say Yes and it will be accessible
  from within Linux.
  To compile this driver as a module, choose M here; the module
  will be called tpm_i2c_nuvoton.

TCG_TIS_SPI
  If you have a TPM security chip which is connected to a regular,
  non-tcg SPI master (i.e. most embedded platforms) that is compliant with the
  TCG TIS 1.3 TPM specification (TPM1.2) or the TCG PTP FIFO
  specification (TPM2.0) say Yes and it will be accessible from
  within Linux. To compile this driver as a module, choose  M here;
  the module will be called tpm_tis_spi.

TCG_TIS_SPI_CR50
  If you have a H1 secure module running Cr50 firmware on SPI bus,
  say Yes and it will be accessible from within Linux.

TCG_TIS_ST33ZP24
  STMicroelectronics ST33ZP24 core driver. It implements the core
  TPM1.2 logic and hooks into the TPM kernel APIs. Physical layers will
  register against it.
  
  To compile this driver as a module, choose m here. The module will be called
  tpm_st33zp24.

TCG_TIS_ST33ZP24_I2C
  This module adds support for the STMicroelectronics TPM security chip
  ST33ZP24 with i2c interface.
  To compile this driver as a module, choose M here; the module will be
  called tpm_st33zp24_i2c.

TCG_TIS_ST33ZP24_SPI
  This module adds support for the STMicroelectronics TPM security chip
  ST33ZP24 with spi interface.
  To compile this driver as a module, choose M here; the module will be
  called tpm_st33zp24_spi.

TCG_TIS_SYNQUACER
  If you have a TPM security chip that is compliant with the
  TCG TIS 1.2 TPM specification (TPM1.2) or the TCG PTP FIFO
  specification (TPM2.0) say Yes and it will be accessible from
  within Linux on Socionext SynQuacer platform.
  To compile this driver as a module, choose  M here;
  the module will be called tpm_tis_synquacer.

TCG_TPM
  If you have a TPM security chip in your system, which
  implements the Trusted Computing Group's specification,
  say Yes and it will be accessible from within Linux.  For
  more information see <http://www.trustedcomputinggroup.org>.
  An implementation of the Trusted Software Stack (TSS), the
  userspace enablement piece of the specification, can be
  obtained at: <http://sourceforge.net/projects/trousers>.  To
  compile this driver as a module, choose M here; the module
  will be called tpm. If unsure, say N.
  Notes:
  1) For more TPM drivers enable CONFIG_PNP, CONFIG_ACPI
  and CONFIG_PNPACPI.
  2) Without ACPI enabled, the BIOS event log won't be accessible,
  which is required to validate the PCR 0-7 values.

TCG_VTPM_PROXY
  This driver proxies for an emulated TPM (vTPM) running in userspace.
  A device /dev/vtpmx is provided that creates a device pair
  /dev/vtpmX and a server-side file descriptor on which the vTPM
  can receive commands.

TCG_XEN
  If you want to make TPM support available to a Xen user domain,
  say Yes and it will be accessible from within Linux. See
  the manpages for xl, xl.conf, and docs/misc/vtpm.txt in
  the Xen source repository for more details.
  To compile this driver as a module, choose M here; the module
  will be called xen-tpmfront.

TCIC
  Say Y here to include support for the Databook TCIC family of PCMCIA
  host bridges. These are only found on a handful of old systems.
  "Bridge" is the name used for the hardware inside your computer that
  PCMCIA cards are plugged into. If unsure, say N.

TCM_FC
  Say Y here to enable the TCM FC plugin for accessing FC fabrics in TCM

TCM_FILEIO
  Say Y here to enable the TCM/FILEIO subsystem plugin for buffered
  access to Linux/VFS struct file or struct block_device

TCM_IBLOCK
  Say Y here to enable the TCM/IBLOCK subsystem plugin for non-buffered
  access to Linux/Block devices using BIO

TCM_PSCSI
  Say Y here to enable the TCM/pSCSI subsystem plugin for non-buffered
  passthrough access to Linux/SCSI device

TCM_QLA2XXX
  Say Y here to enable the TCM_QLA2XXX fabric module for QLogic 24xx+ series target mode HBAs

TCM_QLA2XXX_DEBUG
  Say Y here to enable the TCM_QLA2XXX fabric module DEBUG for QLogic 24xx+ series target mode HBAs
  This will include code to enable the SCSI command jammer

TCM_USER2
  Say Y here to enable the TCM/USER subsystem plugin for a userspace
  process to handle requests. This is version 2 of the ABI; version 1
  is obsolete.

TCP_CONG_ADVANCED
  Support for selection of various TCP congestion control
  modules.
  
  Nearly all users can safely say no here, and a safe default
  selection will be made (CUBIC with new Reno as a fallback).
  
  If unsure, say N.

TCP_CONG_BBR
  BBR (Bottleneck Bandwidth and RTT) TCP congestion control aims to
  maximize network utilization and minimize queues. It builds an explicit
  model of the bottleneck delivery rate and path round-trip propagation
  delay. It tolerates packet loss and delay unrelated to congestion. It
  can operate over LAN, WAN, cellular, wifi, or cable modem links. It can
  coexist with flows that use loss-based congestion control, and can
  operate with shallow buffers, deep buffers, bufferbloat, policers, or
  AQM schemes that do not provide a delay signal. It requires the fq
  ("Fair Queue") pacing packet scheduler.

TCP_CONG_BIC
  BIC-TCP is a sender-side only change that ensures a linear RTT
  fairness under large windows while offering both scalability and
  bounded TCP-friendliness. The protocol combines two schemes
  called additive increase and binary search increase. When the
  congestion window is large, additive increase with a large
  increment ensures linear RTT fairness as well as good
  scalability. Under small congestion windows, binary search
  increase provides TCP friendliness.
  See http://www.csc.ncsu.edu/faculty/rhee/export/bitcp/

TCP_CONG_CDG
  CAIA Delay-Gradient (CDG) is a TCP congestion control that modifies
  the TCP sender in order to:
  
  o Use the delay gradient as a congestion signal.
  o Back off with an average probability that is independent of the RTT.
  o Coexist with flows that use loss-based congestion control.
  o Tolerate packet loss unrelated to congestion.
  
  For further details see:
    D.A. Hayes and G. Armitage. "Revisiting TCP congestion control using
    delay gradients." In Networking 2011. Preprint: http://goo.gl/No3vdg

TCP_CONG_CUBIC
  This is version 2.0 of BIC-TCP which uses a cubic growth function
  among other techniques.
  See http://www.csc.ncsu.edu/faculty/rhee/export/bitcp/cubic-paper.pdf

TCP_CONG_DCTCP
  DCTCP leverages Explicit Congestion Notification (ECN) in the network to
  provide multi-bit feedback to the end hosts. It is designed to provide:
  
  - High burst tolerance (incast due to partition/aggregate),
  - Low latency (short flows, queries),
  - High throughput (continuous data updates, large file transfers) with
    commodity, shallow-buffered switches.
  
  All switches in the data center network running DCTCP must support
  ECN marking and be configured for marking when reaching defined switch
  buffer thresholds. The default ECN marking threshold heuristic for
  DCTCP on switches is 20 packets (30KB) at 1Gbps, and 65 packets
  (~100KB) at 10Gbps, but might need further careful tweaking.
  
  For further details see:
    http://simula.stanford.edu/~alizade/Site/DCTCP_files/dctcp-final.pdf

TCP_CONG_HSTCP
  Sally Floyd's High Speed TCP (RFC 3649) congestion control.
  A modification to TCP's congestion control mechanism for use
  with large congestion windows. A table indicates how much to
  increase the congestion window by when an ACK is received.
  For more detail see https://www.icir.org/floyd/hstcp.html

TCP_CONG_HTCP
  H-TCP is a send-side only modifications of the TCP Reno
  protocol stack that optimizes the performance of TCP
  congestion control for high speed network links. It uses a
  modeswitch to change the alpha and beta parameters of TCP Reno
  based on network conditions and in a way so as to be fair with
  other Reno and H-TCP flows.

TCP_CONG_HYBLA
  TCP-Hybla is a sender-side only change that eliminates penalization of
  long-RTT, large-bandwidth connections, like when satellite legs are
  involved, especially when sharing a common bottleneck with normal
  terrestrial connections.

TCP_CONG_ILLINOIS
  TCP-Illinois is a sender-side modification of TCP Reno for
  high speed long delay links. It uses round-trip-time to
  adjust the alpha and beta parameters to achieve a higher average
  throughput and maintain fairness.
  
  For further details see:
    http://www.ews.uiuc.edu/~shaoliu/tcpillinois/index.html

TCP_CONG_LP
  TCP Low Priority (TCP-LP), a distributed algorithm whose goal is
  to utilize only the excess network bandwidth as compared to the
  ``fair share`` of bandwidth as targeted by TCP.
  See http://www-ece.rice.edu/networks/TCP-LP/

TCP_CONG_NV
  TCP NV is a follow up to TCP Vegas. It has been modified to deal with
  10G networks, measurement noise introduced by LRO, GRO and interrupt
  coalescence. In addition, it will decrease its cwnd multiplicatively
  instead of linearly.
  
  Note that in general congestion avoidance (cwnd decreased when # packets
  queued grows) cannot coexist with congestion control (cwnd decreased only
  when there is packet loss) due to fairness issues. One scenario when they
  can coexist safely is when the CA flows have RTTs << CC flows RTTs.
  
  For further details see http://www.brakmo.org/networking/tcp-nv/

TCP_CONG_SCALABLE
  Scalable TCP is a sender-side only change to TCP which uses a
  MIMD congestion control algorithm which has some nice scaling
  properties, though is known to have fairness issues.
  See http://www.deneholme.net/tom/scalable/

TCP_CONG_VEGAS
  TCP Vegas is a sender-side only change to TCP that anticipates
  the onset of congestion by estimating the bandwidth. TCP Vegas
  adjusts the sending rate by modifying the congestion
  window. TCP Vegas should provide less packet loss, but it is
  not as aggressive as TCP Reno.

TCP_CONG_VENO
  TCP Veno is a sender-side only enhancement of TCP to obtain better
  throughput over wireless networks. TCP Veno makes use of state
  distinguishing to circumvent the difficult judgment of the packet loss
  type. TCP Veno cuts down less congestion window in response to random
  loss packets.
  See <http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=1177186>

TCP_CONG_WESTWOOD
  TCP Westwood+ is a sender-side only modification of the TCP Reno
  protocol stack that optimizes the performance of TCP congestion
  control. It is based on end-to-end bandwidth estimation to set
  congestion window and slow start threshold after a congestion
  episode. Using this estimation, TCP Westwood+ adaptively sets a
  slow start threshold and a congestion window which takes into
  account the bandwidth used  at the time congestion is experienced.
  TCP Westwood+ significantly increases fairness wrt TCP Reno in
  wired networks and throughput over wireless links.

TCP_CONG_YEAH
  YeAH-TCP is a sender-side high-speed enabled TCP congestion control
  algorithm, which uses a mixed loss/delay approach to compute the
  congestion window. It's design goals target high efficiency,
  internal, RTT and Reno fairness, resilience to link loss while
  keeping network elements load as low as possible.
  
  For further details look here:
    http://wil.cs.caltech.edu/pfldnet2007/paper/YeAH_TCP.pdf

TCP_MD5SIG
  RFC2385 specifies a method of giving MD5 protection to TCP sessions.
  Its main (only?) use is to protect BGP sessions between core routers
  on the Internet.
  
  If unsure, say N.

TCS3414
  If you say yes here you get support for the TAOS TCS3414
  family of digital color sensors.
  
  This driver can also be built as a module.  If so, the module
  will be called tcs3414.

TCS3472
  If you say yes here you get support for the TAOS TCS3472
  family of color light-to-digital converters with IR filter.
  
  This driver can also be built as a module.  If so, the module
  will be called tcs3472.

TEE
  This implements a generic interface towards a Trusted Execution
  Environment (TEE).

TEE_BNXT_FW
  This module help to manage firmware on Broadcom BNXT device. The module
  registers on tee bus and invoke calls to manage firmware on BNXT device.

TEGRA124_EMC
  This driver is for the External Memory Controller (EMC) found on
  Tegra124 chips. The EMC controls the external DRAM on the board.
  This driver is required to change memory timings / clock rate for
  external memory.

TEGRA20_APB_DMA
  Support for the NVIDIA Tegra20 APB DMA controller driver. The
  DMA controller is having multiple DMA channel which can be
  configured for different peripherals like audio, UART, SPI,
  I2C etc which is in APB bus.
  This DMA controller transfers data from memory to peripheral fifo
  or vice versa. It does not support memory to memory data transfer.

TEGRA20_EMC
  This driver is for the External Memory Controller (EMC) found on
  Tegra20 chips. The EMC controls the external DRAM on the board.
  This driver is required to change memory timings / clock rate for
  external memory.

TEGRA210_ADMA
  Support for the NVIDIA Tegra210 ADMA controller driver. The
  DMA controller has multiple DMA channels and is used to service
  various audio clients in the Tegra210 audio processing engine
  (APE). This DMA controller transfers data from memory to
  peripheral and vice versa. It does not support memory to
  memory data transfer.

TEGRA210_EMC
  This driver is for the External Memory Controller (EMC) found on
  Tegra210 chips. The EMC controls the external DRAM on the board.
  This driver is required to change memory timings / clock rate for
  external memory.

TEGRA210_EMC_TABLE
  No help

TEGRA30_EMC
  This driver is for the External Memory Controller (EMC) found on
  Tegra30 chips. The EMC controls the external DRAM on the board.
  This driver is required to change memory timings / clock rate for
  external memory.

TEGRA_ACONNECT
  Driver for the Tegra ACONNECT bus which is used to interface with
  the devices inside the Audio Processing Engine (APE) for Tegra210.

TEGRA_AHB
  Adds AHB configuration functionality for NVIDIA Tegra SoCs,
  which controls AHB bus master arbitration and some performance
  parameters (priority, prefetch size).

TEGRA_BPMP
  BPMP (Boot and Power Management Processor) is designed to off-loading
  the PM functions which include clock/DVFS/thermal/power from the CPU.
  It needs HSP as the HW synchronization and notification module and
  IVC module as the message communication protocol.
  
  This driver manages the IPC interface between host CPU and the
  firmware running on BPMP.

TEGRA_BPMP_THERMAL
  Enable this option for support for sensing system temperature of NVIDIA
  Tegra systems-on-chip with the BPMP coprocessor (Tegra186).

TEGRA_CLK_DFLL
  No help

TEGRA_GMI
  Driver for the Tegra Generic Memory Interface bus which can be used
  to attach devices such as NOR, UART, FPGA and more.

TEGRA_HOST1X
  Driver for the NVIDIA Tegra host1x hardware.
  
  The Tegra host1x module is the DMA engine for register access to
  Tegra's graphics- and multimedia-related modules. The modules served
  by host1x are referred to as clients. host1x includes some other
  functionality, such as synchronization.

TEGRA_HOST1X_FIREWALL
  Say yes if kernel should protect command streams from tampering.
  
  If unsure, choose Y.

TEGRA_HSP_MBOX
  The Tegra HSP driver is used for the interprocessor communication
  between different remote processors and host processors on Tegra186
  and later SoCs. Say Y here if you want to have this support.
  If unsure say N.

TEGRA_IOMMU_GART
  Enables support for remapping discontiguous physical memory
  shared with the operating system into contiguous I/O virtual
  space through the GART (Graphics Address Relocation Table)
  hardware included on Tegra SoCs.

TEGRA_IOMMU_SMMU
  This driver supports the IOMMU hardware (SMMU) found on NVIDIA Tegra
  SoCs (Tegra30 up to Tegra210).

TEGRA_IVC
  IVC (Inter-VM Communication) protocol is part of the IPC
  (Inter Processor Communication) framework on Tegra. It maintains the
  data and the different communication channels in SysRAM or RAM and
  keeps the content is synchronization between host CPU and remote
  processors.

TEGRA_MC
  This driver supports the Memory Controller (MC) hardware found on
  NVIDIA Tegra SoCs.

TEGRA_SOCTHERM
  Enable this option for integrated thermal management support on NVIDIA
  Tegra systems-on-chip. The driver supports four thermal zones
  (CPU, GPU, MEM, PLLX). Cooling devices can be bound to the thermal
  zones to manage temperatures. This option is also required for the
  emergency thermal reset (thermtrip) feature to function.

TEGRA_TIMER
  Enables support for the Tegra driver.

TEGRA_VDE
  Say Y here to enable support for the NVIDIA Tegra video decoder
  driver.

TEGRA_WATCHDOG
  Say Y here to include support for the watchdog timer
  embedded in NVIDIA Tegra SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called tegra_wdt.

TEHUTI
  Tehuti Networks 10G Ethernet NIC

TELCLOCK
  The telecom clock device is specific to the MPCBL0010 and MPCBL0050
  ATCA computers and allows direct userspace access to the
  configuration of the telecom clock configuration settings.  This
  device is used for hardware synchronization across the ATCA backplane
  fabric.  Upon loading, the driver exports a sysfs directory,
  /sys/devices/platform/telco_clock, with a number of files for
  controlling the behavior of this hardware.

TERANETICS_PHY
  Currently supports the Teranetics TN2020

TEST_ASYNC_DRIVER_PROBE
  Enabling this option produces a kernel module that allows
  testing asynchronous driver probing by the device core.
  The module name will be test_async_driver_probe.ko
  
  If unsure say N.

TEST_BITMAP
  Enable this option to test the bitmap functions at boot.
  
  If unsure, say N.

TEST_BITOPS
  This builds the "test_bitops" module that is much like the
  TEST_LKM module except that it does a basic exercise of the
  set/clear_bit macros and get_count_order/long to make sure there are
  no compiler warnings from C=1 sparse checker or -Wextra
  compilations. It has no dependencies and doesn't run or load unless
  explicitly requested by name.  for example: modprobe test_bitops.
  
  If unsure, say N.

TEST_BLACKHOLE_DEV
  This builds the "test_blackhole_dev" module that validates the
  data path through this blackhole netdev.
  
  If unsure, say N.

TEST_BPF
  This builds the "test_bpf" module that runs various test vectors
  against the BPF interpreter or BPF JIT compiler depending on the
  current setting. This is in particular useful for BPF JIT compiler
  development, but also to run regression tests against changes in
  the interpreter code. It also enables test stubs for eBPF maps and
  verifier used by user space verifier testsuite.
  
  If unsure, say N.

TEST_DEBUG_VIRTUAL
  Test the kernel's ability to detect incorrect calls to
  virt_to_phys() done against the non-linear part of the
  kernel's virtual address map.
  
  If unsure, say N.

TEST_FIRMWARE
  This builds the "test_firmware" module that creates a userspace
  interface for testing firmware loading. This can be used to
  control the triggering of firmware loading without needing an
  actual firmware-using device. The contents can be rechecked by
  userspace.
  
  If unsure, say N.

TEST_FPU
  Enable this option to add /sys/kernel/debug/selftest_helpers/test_fpu
  which will trigger a sequence of floating point operations. This is used
  for self-testing floating point control register setting in
  kernel_fpu_begin().
  
  If unsure, say N.

TEST_FREE_PAGES
  Test that a memory leak does not occur due to a race between
  freeing a block of pages and a speculative page reference.
  Loading this module is safe if your kernel has the bug fixed.
  If the bug is not fixed, it will leak gigabytes of memory and
  probably OOM your system.

TEST_HASH
  Enable this option to test the kernel's integer (<linux/hash.h>),
  string (<linux/stringhash.h>), and siphash (<linux/siphash.h>)
  hash functions on boot (or module load).
  
  This is intended to help people writing architecture-specific
  optimized versions.  If unsure, say N.

TEST_HEXDUMP
  No help

TEST_HMM
  This is a pseudo device driver solely for testing HMM.
  Say M here if you want to build the HMM test module.
  Doing so will allow you to run tools/testing/selftest/vm/hmm-tests.
  
  If unsure, say N.

TEST_IDA
  No help

TEST_IRQ_TIMINGS
  Enable this option to test the irq timings code on boot.
  
  If unsure, say N.

TEST_KASAN_MODULE
  This is a part of the KASAN test suite that is incompatible with
  KUnit. Currently includes tests that do bad copy_from/to_user
  accesses.

TEST_KMOD
  Test the kernel's module loading mechanism: kmod. kmod implements
  support to load modules using the Linux kernel's usermode helper.
  This test provides a series of tests against kmod.
  
  Although technically you can either build test_kmod as a module or
  into the kernel we disallow building it into the kernel since
  it stress tests request_module() and this will very likely cause
  some issues by taking over precious threads available from other
  module load requests, ultimately this could be fatal.
  
  To run tests run:
  
  tools/testing/selftests/kmod/kmod.sh --help
  
  If unsure, say N.

TEST_KSTRTOX
  No help

TEST_LIST_SORT
  Enable this to turn on 'list_sort()' function test. This test is
  executed only once during system boot (so affects only boot time),
  or at module load time.
  
  If unsure, say N.

TEST_LIVEPATCH
  Test kernel livepatching features for correctness.  The tests will
  load test modules that will be livepatched in various scenarios.
  
  To run all the livepatching tests:
  
  make -C tools/testing/selftests TARGETS=livepatch run_tests
  
  Alternatively, individual tests may be invoked:
  
  tools/testing/selftests/livepatch/test-callbacks.sh
  tools/testing/selftests/livepatch/test-livepatch.sh
  tools/testing/selftests/livepatch/test-shadow-vars.sh
  
  If unsure, say N.

TEST_LKM
  This builds the "test_module" module that emits "Hello, world"
  on printk when loaded. It is designed to be used for basic
  evaluation of the module loading subsystem (for example when
  validating module verification). It lacks any extra dependencies,
  and will not normally be loaded by the system unless explicitly
  requested by name.
  
  If unsure, say N.

TEST_LOCKUP
  This builds the "test_lockup" module that helps to make sure
  that watchdogs and lockup detectors are working properly.
  
  Depending on module parameters it could emulate soft or hard
  lockup, "hung task", or locking arbitrary lock for a long time.
  Also it could generate series of lockups with cooling-down periods.
  
  If unsure, say N.

TEST_MEMCAT_P
  Test the memcat_p() helper for correctly merging two
  pointer arrays together.
  
  If unsure, say N.

TEST_MEMINIT
  Test if the kernel is zero-initializing heap and page allocations.
  This can be useful to test init_on_alloc and init_on_free features.
  
  If unsure, say N.

TEST_MIN_HEAP
  Enable this to turn on min heap function tests. This test is
  executed only once during system boot (so affects only boot time),
  or at module load time.
  
  If unsure, say N.

TEST_OBJAGG
  Enable this option to test object aggregation manager on boot
  (or module load).

TEST_OVERFLOW
  No help

TEST_PARMAN
  Enable this option to test priority array manager on boot
  (or module load).
  
  If unsure, say N.

TEST_POWER
  This driver is used for testing. It's safe to say M here.

TEST_PRINTF
  No help

TEST_RHASHTABLE
  Enable this option to test the rhashtable functions at boot.
  
  If unsure, say N.

TEST_SORT
  This option enables the self-test function of 'sort()' at boot,
  or at module load time.
  
  If unsure, say N.

TEST_STACKINIT
  Test if the kernel is zero-initializing stack variables and
  padding. Coverage is controlled by compiler flags,
  CONFIG_GCC_PLUGIN_STRUCTLEAK, CONFIG_GCC_PLUGIN_STRUCTLEAK_BYREF,
  or CONFIG_GCC_PLUGIN_STRUCTLEAK_BYREF_ALL.
  
  If unsure, say N.

TEST_STATIC_KEYS
  Test the static key interfaces.
  
  If unsure, say N.

TEST_STRING_HELPERS
  No help

TEST_STRSCPY
  No help

TEST_SYSCTL
  This builds the "test_sysctl" module. This driver enables to test the
  proc sysctl interfaces available to drivers safely without affecting
  production knobs which might alter system functionality.
  
  If unsure, say N.

TEST_UBSAN
  This is a test module for UBSAN.
  It triggers various undefined behavior, and detect it.

TEST_UDELAY
  This builds the "udelay_test" module that helps to make sure
  that udelay() is working properly.
  
  If unsure, say N.

TEST_USER_COPY
  This builds the "test_user_copy" module that runs sanity checks
  on the copy_to/from_user infrastructure, making sure basic
  user/kernel boundary testing is working. If it fails to load,
  a regression has been detected in the user/kernel memory boundary
  protections.
  
  If unsure, say N.

TEST_UUID
  No help

TEST_VMALLOC
  This builds the "test_vmalloc" module that should be used for
  stress and performance analysis. So, any new change for vmalloc
  subsystem can be evaluated from performance and stability point
  of view.
  
  If unsure, say N.

TEST_XARRAY
  No help

TEXTSEARCH
  No help

TEXTSEARCH_BM
  No help

TEXTSEARCH_FSM
  No help

TEXTSEARCH_KMP
  No help

THERMAL
  Thermal drivers offer a generic mechanism for
  thermal management. Usually it's made up of one or more thermal
  zones and cooling devices.
  Each thermal zone contains its own temperature, trip points,
  and cooling devices.
  All platforms with ACPI or Open Firmware thermal support can use
  this driver.
  If you want this support, you should say Y here.

THERMAL_DEFAULT_GOV_FAIR_SHARE
  Use the fair_share governor as default. This throttles the
  devices based on their 'contribution' to a zone. The
  contribution should be provided through platform data.

THERMAL_DEFAULT_GOV_POWER_ALLOCATOR
  Select this if you want to control temperature based on
  system and device power allocation. This governor can only
  operate on cooling devices that implement the power API.

THERMAL_DEFAULT_GOV_STEP_WISE
  Use the step_wise governor as default. This throttles the
  devices one step at a time.

THERMAL_DEFAULT_GOV_USER_SPACE
  Select this if you want to let the user space manage the
  platform thermals.

THERMAL_EMERGENCY_POWEROFF_DELAY_MS
  Thermal subsystem will issue a graceful shutdown when
  critical temperatures are reached using orderly_poweroff(). In
  case of failure of an orderly_poweroff(), the thermal emergency
  poweroff kicks in after a delay has elapsed and shuts down the system.
  This config is number of milliseconds to delay before emergency
  poweroff kicks in. Similarly to the critical trip point,
  the delay should be carefully profiled so as to give adequate
  time for orderly_poweroff() to finish on regular execution.
  If set to 0 emergency poweroff will not be supported.
  
  In doubt, leave as 0.

THERMAL_EMULATION
  Enable this option to make a emul_temp sysfs node in thermal zone
  directory to support temperature emulation. With emulation sysfs node,
  user can manually input temperature and test the different trip
  threshold behaviour for simulation purpose.
  
  WARNING: Be careful while enabling this option on production systems,
  because userland can easily disable the thermal policy by simply
  flooding this sysfs node with low temperature values.

THERMAL_GOV_BANG_BANG
  Enable this to manage platform thermals using bang bang governor.
  
  Say 'Y' here if you want to use two point temperature regulation
  used for fans without throttling.  Some fan drivers depend on this
  governor to be enabled (e.g. acerhdf).

THERMAL_GOV_FAIR_SHARE
  Enable this to manage platform thermals using fair-share governor.

THERMAL_GOV_POWER_ALLOCATOR
  Enable this to manage platform thermals by dynamically
  allocating and limiting power to devices.

THERMAL_GOV_STEP_WISE
  Enable this to manage platform thermals using a simple linear
  governor.

THERMAL_GOV_USER_SPACE
  Enable this to let the user space manage the platform thermals.

THERMAL_HWMON
  In case a sensor is registered with the thermal
  framework, this option will also register it
  as a hwmon. The sensor will then have the common
  hwmon sysfs interface.
  
  Say 'Y' here if you want all thermal sensors to
  have hwmon sysfs interface too.

THERMAL_MMIO
  This option enables the generic thermal MMIO driver that will use
  memory-mapped reads to get the temperature.  Any HW/System that
  allows temperature reading by a single memory-mapped reading, be it
  register or shared memory, is a potential candidate to work with this
  driver.

THERMAL_NETLINK
  The thermal framework has a netlink interface to do thermal
  zones discovery, temperature readings and events such as
  trip point crossed, cooling device update or governor
  change. It is recommended to enable the feature.

THERMAL_OF
  This options provides helpers to add the support to
  read and parse thermal data definitions out of the
  device tree blob.
  
  Say 'Y' here if you need to build thermal infrastructure
  based on device tree.

THERMAL_STATISTICS
  Export thermal state transition statistics information through sysfs.
  
  If in doubt, say N.

THERMAL_WRITABLE_TRIPS
  This option allows the system integrator to choose whether
  trip temperatures can be changed from userspace. The
  writable trips need to be specified when setting up the
  thermal zone but the choice here takes precedence.
  
  Say 'Y' here if you would like to allow userspace tools to
  change trip temperatures.

THERM_ADT746X
  This driver provides some thermostat and fan control for the
  iBook G4, and the ATI based aluminium PowerBooks, allowing slightly
  better fan behaviour by default, and some manual control.

THERM_WINDTUNNEL
  This driver provides some thermostat and fan control for the desktop
  G4 "Windtunnel"

THINKPAD_ACPI
  This is a driver for the IBM and Lenovo ThinkPad laptops. It adds
  support for Fn-Fx key combinations, Bluetooth control, video
  output switching, ThinkLight control, UltraBay eject and more.
  For more information about this driver see
  <file:Documentation/admin-guide/laptops/thinkpad-acpi.rst> and
  <http://ibm-acpi.sf.net/> .
  
  This driver was formerly known as ibm-acpi.
  
  Extra functionality will be available if the rfkill (CONFIG_RFKILL)
  and/or ALSA (CONFIG_SND) subsystems are available in the kernel.
  Note that if you want ThinkPad-ACPI to be built-in instead of
  modular, ALSA and rfkill will also have to be built-in.
  
  If you have an IBM or Lenovo ThinkPad laptop, say Y or M here.

THINKPAD_ACPI_ALSA_SUPPORT
  Enables monitoring of the built-in console audio output control
  (headphone and speakers), which is operated by the mute and (in
  some ThinkPad models) volume hotkeys.
  
  If this option is enabled, ThinkPad-ACPI will export an ALSA card
  with a single read-only mixer control, which should be used for
  on-screen-display feedback purposes by the Desktop Environment.
  
  Optionally, the driver will also allow software control (the
  ALSA mixer will be made read-write).  Please refer to the driver
  documentation for details.
  
  All IBM models have both volume and mute control.  Newer Lenovo
  models only have mute control (the volume hotkeys are just normal
  keys and volume control is done through the main HDA mixer).

THINKPAD_ACPI_DEBUG
  Enables extra debugging information, at the expense of a slightly
  increase in driver size.
  
  If you are not sure, say N here.

THINKPAD_ACPI_DEBUGFACILITIES
  Enables extra stuff in the thinkpad-acpi which is completely useless
  for normal use.  Read the driver source to find out what it does.
  
  Say N here, unless you were told by a kernel maintainer to do
  otherwise.

THINKPAD_ACPI_HOTKEY_POLL
  Some thinkpad models benefit from NVRAM polling to detect a few of
  the hot key press events.  If you know your ThinkPad model does not
  need to do NVRAM polling to support any of the hot keys you use,
  unselecting this option will save about 1kB of memory.
  
  ThinkPads T40 and newer, R52 and newer, and X31 and newer are
  unlikely to need NVRAM polling in their latest BIOS versions.
  
  NVRAM polling can detect at most the following keys: ThinkPad/Access
  IBM, Zoom, Switch Display (fn+F7), ThinkLight, Volume up/down/mute,
  Brightness up/down, Display Expand (fn+F8), Hibernate (fn+F12).
  
  If you are not sure, say Y here.  The driver enables polling only if
  it is strictly necessary to do so.

THINKPAD_ACPI_UNSAFE_LEDS
  Overriding LED state on ThinkPads can mask important
  firmware alerts (like critical battery condition), or misled
  the user into damaging the hardware (undocking or ejecting
  the bay while buses are still active), etc.
  
  LED control on the ThinkPad is write-only (with very few
  exceptions on very ancient models), which makes it
  impossible to know beforehand if important information will
  be lost when one changes LED state.
  
  Users that know what they are doing can enable this option
  and the driver will allow control of every LED, including
  the ones on the dock stations.
  
  Never enable this option on a distribution kernel.
  
  Say N here, unless you are building a kernel for your own
  use, and need to control the important firmware LEDs.

THINKPAD_ACPI_VIDEO
  Allows the thinkpad_acpi driver to provide an interface to control
  the various video output ports.
  
  This feature often won't work well, depending on ThinkPad model,
  display state, video output devices in use, whether there is a X
  server running, phase of the moon, and the current mood of
  Schroedinger's cat.  If you can use X.org's RandR to control
  your ThinkPad's video output ports instead of this feature,
  don't think twice: do it and say N here to save memory and avoid
  bad interactions with X.org.
  
  NOTE: access to this feature is limited to processes with the
  CAP_SYS_ADMIN capability, to avoid local DoS issues in platforms
  where it interacts badly with X.org.
  
  If you are not sure, say Y here but do try to check if you could
  be using X.org RandR instead.

THP_SWAP
  Swap transparent huge pages in one piece, without splitting.
  XXX: For now, swap cluster backing transparent huge page
  will be split after swapout.
  
  For selection by architectures with reasonable THP sizes.

THREAD_INFO_IN_TASK
  Select this to move thread_info off the stack into task_struct.  To
  make this work, an arch will need to remove all thread_info fields
  except flags and fix any runtime bugs.
  
  One subtle change that will be needed is to use try_get_task_stack()
  and put_task_stack() in save_thread_stack_tsk() and get_wchan().

THRUSTMASTER_FF
  Say Y here if you have a THRUSTMASTER FireStore Dual Power 2 or 3,
  a THRUSTMASTER Dual Trigger 3-in-1 or a THRUSTMASTER Ferrari GT
  Rumble Force or Force Feedback Wheel.

THUNDERX2_PMU
  Provides support for ThunderX2 UNCORE events.
  The SoC has PMU support in its L3 cache controller (L3C) and
  in the DDR4 Memory Controller (DMC).

THUNDER_NIC_BGX
  This driver supports programming and controlling of MAC
  interface from NIC physical function driver.

THUNDER_NIC_PF
  This driver supports Thunder's NIC physical function.
  The NIC provides the controller and DMA engines to
  move network traffic to/from the memory. The NIC
  works closely with TNS, BGX and SerDes to implement the
  functions replacing and virtualizing those of a typical
  standalone PCIe NIC chip.

THUNDER_NIC_RGX
  This driver supports configuring XCV block of RGX interface
  present on CN81XX chip.

THUNDER_NIC_VF
  This driver supports Thunder's NIC virtual function

TICK_CPU_ACCOUNTING
  This is the basic tick based cputime accounting that maintains
  statistics about user, system and idle time spent on per jiffies
  granularity.
  
  If unsure, say Y.

TICK_ONESHOT
  No help

TIFM_7XX1
  This option enables support for Texas Instruments(R) PCI74xx and
  PCI76xx families of Flash Media adapters, found in many laptops.
  To make actual use of the device, you will have to select some
  flash card format drivers, as outlined in the TIFM_CORE Help.
  
  To compile this driver as a module, choose M here: the module will
  be called tifm_7xx1.

TIFM_CORE
  If you want support for Texas Instruments(R) Flash Media adapters
  you should select this option and then also choose an appropriate
  host adapter, such as 'TI Flash Media PCI74xx/PCI76xx host adapter
  support', if you have a TI PCI74xx compatible card reader, for
  example.
  You will also have to select some flash card format drivers. MMC/SD
  cards are supported via 'MMC/SD Card support: TI Flash Media MMC/SD
  Interface support (MMC_TIFM_SD)'.
  
  To compile this driver as a module, choose M here: the module will
  be called tifm_core.

TIGON3
  This driver supports Broadcom Tigon3 based gigabit Ethernet cards.
  
  To compile this driver as a module, choose M here: the module
  will be called tg3.  This is recommended.

TIGON3_HWMON
  Say Y if you want to expose the thermal sensor on Tigon3 devices.

TIMB_DMA
  Enable support for the Timberdale FPGA DMA engine.

TIMERFD
  Enable the timerfd() system call that allows to receive timer
  events on a file descriptor.
  
  If unsure, say Y.

TIMER_ACPI
  No help

TIMER_IMX_SYS_CTR
  Enable this option to use i.MX system counter timer as a
  clockevent.

TIMER_OF
  No help

TIMER_PROBE
  No help

TIME_NS
  In this namespace boottime and monotonic clocks can be set.
  The time will keep going with the same pace.

TINYDRM_HX8357D
  DRM driver for the following HX8357D panels:
  * YX350HV15-T 3.5" 340x350 TFT (Adafruit 3.5")
  
  If M is selected the module will be called hx8357d.

TINYDRM_ILI9225
  DRM driver for the following Ilitek ILI9225 panels:
  * No-name 2.2" color screen module
  
  If M is selected the module will be called ili9225.

TINYDRM_ILI9341
  DRM driver for the following Ilitek ILI9341 panels:
  * YX240QV29-T 2.4" 240x320 TFT (Adafruit 2.4")
  
  If M is selected the module will be called ili9341.

TINYDRM_ILI9486
  DRM driver for the following Ilitek ILI9486 panels:
  * PISCREEN 3.5" 320x480 TFT (Ozzmaker 3.5")
  * RPILCD 3.5" 320x480 TFT (Waveshare 3.5")
  
  If M is selected the module will be called ili9486.

TINYDRM_MI0283QT
  DRM driver for the Multi-Inno MI0283QT display panel
  If M is selected the module will be called mi0283qt.

TINYDRM_REPAPER
  DRM driver for the following Pervasive Displays panels:
  1.44" TFT EPD Panel (E1144CS021)
  1.90" TFT EPD Panel (E1190CS021)
  2.00" TFT EPD Panel (E2200CS021)
  2.71" TFT EPD Panel (E2271CS021)
  
  If M is selected the module will be called repaper.

TINYDRM_ST7586
  DRM driver for the following Sitronix ST7586 panels:
  * LEGO MINDSTORMS EV3
  
  If M is selected the module will be called st7586.

TINYDRM_ST7735R
  DRM driver for Sitronix ST7715R/ST7735R with one of the following
  LCDs:
  * Jianda JD-T18003-T01 1.8" 128x160 TFT
  * Okaya RH128128T 1.44" 128x128 TFT
  
  If M is selected the module will be called st7735r.

TINY_RCU
  This option selects the RCU implementation that is
  designed for UP systems from which real-time response
  is not required.  This option greatly reduces the
  memory footprint of RCU.

TINY_SRCU
  This option selects the single-CPU non-preemptible version of SRCU.

TIPC
  The Transparent Inter Process Communication (TIPC) protocol is
  specially designed for intra cluster communication. This protocol
  originates from Ericsson where it has been used in carrier grade
  cluster applications for many years.
  
  For more information about TIPC, see http://tipc.sourceforge.net.
  
  This protocol support is also available as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want). The module will be called tipc. If you want to compile it
  as a module, say M here and read <file:Documentation/kbuild/modules.rst>.
  
  If in doubt, say N.

TIPC_CRYPTO
  Saying Y here will enable support for TIPC encryption.
  All TIPC messages will be encrypted/decrypted by using the currently most
  advanced algorithm: AEAD AES-GCM (like IPSec or TLS) before leaving/
  entering the TIPC stack.
  Key setting from user-space is performed via netlink by a user program
  (e.g. the iproute2 'tipc' tool).

TIPC_DIAG
  Support for TIPC socket monitoring interface used by ss tool.
  If unsure, say Y.

TIPC_MEDIA_IB
  Saying Y here will enable support for running TIPC on
  IP-over-InfiniBand devices.

TIPC_MEDIA_UDP
  Saying Y here will enable support for running TIPC over IP/UDP

TI_ADC081C
  If you say yes here you get support for Texas Instruments ADC081C,
  ADC101C and ADC121C ADC chips.
  
  This driver can also be built as a module. If so, the module will be
  called ti-adc081c.

TI_ADC0832
  If you say yes here you get support for Texas Instruments ADC0831,
  ADC0832, ADC0834, ADC0838 ADC chips.
  
  This driver can also be built as a module. If so, the module will be
  called ti-adc0832.

TI_ADC084S021
  If you say yes here you get support for Texas Instruments ADC084S021
  chips.
  
  This driver can also be built as a module. If so, the module will be
  called ti-adc084s021.

TI_ADC108S102
  Say yes here to build support for Texas Instruments ADC108S102 and
  ADC128S102 ADC.
  
  To compile this driver as a module, choose M here: the module will
  be called ti-adc108s102.

TI_ADC12138
  If you say yes here you get support for Texas Instruments ADC12130,
  ADC12132 and ADC12138 chips.
  
  This driver can also be built as a module. If so, the module will be
  called ti-adc12138.

TI_ADC128S052
  If you say yes here you get support for Texas Instruments ADC128S052,
  ADC122S021 and ADC124S021 chips.
  
  This driver can also be built as a module. If so, the module will be
  called ti-adc128s052.

TI_ADC161S626
  If you say yes here you get support for Texas Instruments ADC141S626,
  and ADC161S626 chips.
  
  This driver can also be built as a module. If so, the module will be
  called ti-adc161s626.

TI_ADS1015
  If you say yes here you get support for Texas Instruments ADS1015
  ADC chip.
  
  This driver can also be built as a module. If so, the module will be
  called ti-ads1015.

TI_ADS124S08
  If you say yes here you get support for Texas Instruments ADS124S08
  and ADS124S06 ADC chips
  
  This driver can also be built as a module. If so, the module will be
  called ti-ads124s08.

TI_ADS7950
  Say yes here to build support for Texas Instruments ADS7950, ADS7951,
  ADS7952, ADS7953, ADS7954, ADS7955, ADS7956, ADS7957, ADS7958, ADS7959.
  ADS7960, ADS7961.
  
  To compile this driver as a module, choose M here: the
  module will be called ti-ads7950.

TI_ADS8344
  If you say yes here you get support for Texas Instruments ADS8344
  ADC chips
  
  This driver can also be built as a module. If so, the module will be
  called ti-ads8344.

TI_ADS8688
  If you say yes here you get support for Texas Instruments ADS8684 and
  and ADS8688 ADC chips
  
  This driver can also be built as a module. If so, the module will be
  called ti-ads8688.

TI_AEMIF
  This driver is for the AEMIF module available in Texas Instruments
  SoCs. AEMIF stands for Asynchronous External Memory Interface and
  is intended to provide a glue-less interface to a variety of
  asynchronuous memory devices like ASRAM, NOR and NAND memory. A total
  of 256M bytes of any of these memories can be accessed at a given
  time via four chip selects with 64M byte access per chip select.

TI_AM335X_ADC
  Say yes here to build support for Texas Instruments ADC
  driver which is also a MFD client.
  
  To compile this driver as a module, choose M here: the module will be
  called ti_am335x_adc.

TI_AM65_CPSW_TAS
  Say y here to support Time Aware Shaper(TAS) offload in AM65 CPSW.
  AM65 CPSW hardware supports Enhanced Scheduled Traffic (EST)
  defined in IEEE 802.1Q 2018. The EST scheduler runs on CPTS and the
  TAS/EST schedule is updated in the Fetch RAM memory of the CPSW.

TI_CPPI41
  The Communications Port Programming Interface (CPPI) 4.1 DMA engine
  is currently used by the USB driver on AM335x and DA8xx platforms.

TI_CPSW
  This driver supports TI's CPSW Ethernet Switch.
  
  To compile this driver as a module, choose M here: the module
  will be called cpsw.

TI_CPSW_PHY_SEL
  This driver supports configuring of the phy mode connected to
  the CPSW. DEPRECATED: use PHY_TI_GMII_SEL.

TI_CPSW_SWITCHDEV
  This driver supports TI's CPSW Ethernet Switch.
  
  To compile this driver as a module, choose M here: the module
  will be called cpsw_new.

TI_CPTS
  This driver supports the Common Platform Time Sync unit of
  the CPSW Ethernet Switch and Keystone 2 1g/10g Switch Subsystem.
  The unit can time stamp PTP UDP/IPv4 and Layer 2 packets, and the
  driver offers a PTP Hardware Clock.

TI_DAC082S085
  Driver for the Texas Instruments (formerly National Semiconductor)
  DAC082S085, DAC102S085, DAC122S085, DAC084S085, DAC104S085 and
  DAC124S085.
  
  If compiled as a module, it will be called ti-dac082s085.

TI_DAC5571
  Driver for the Texas Instruments
  DAC5571, DAC6571, DAC7571, DAC5574, DAC6574, DAC7574, DAC5573,
  DAC6573, DAC7573, DAC8571, DAC8574.
  
  If compiled as a module, it will be called ti-dac5571.

TI_DAC7311
  Driver for the Texas Instruments
  DAC7311, DAC6311, DAC5311.
  
  If compiled as a module, it will be called ti-dac7311.

TI_DAC7612
  Driver for the Texas Instruments DAC7612, DAC7612U, DAC7612UB
  The driver hand drive the load pin automatically, otherwise
  it needs to be toggled manually.
  
  If compiled as a module, it will be called ti-dac7612.

TI_DAVINCI_EMAC
  This driver supports TI's DaVinci Ethernet .
  
  To compile this driver as a module, choose M here: the module
  will be called davinci_emac_driver.  This is recommended.

TI_DAVINCI_MDIO
  This driver supports TI's DaVinci MDIO module.
  
  To compile this driver as a module, choose M here: the module
  will be called davinci_mdio.  This is recommended.

TI_DMA_CROSSBAR
  No help

TI_EDMA
  Enable support for the TI EDMA (Enhanced DMA) controller. This DMA
  engine is found on TI DaVinci, AM33xx, AM43xx, DRA7xx and Keystone 2
  parts.

TI_EMIF
  This driver is for the EMIF module available in Texas Instruments
  SoCs. EMIF is an SDRAM controller that, based on its revision,
  supports one or more of DDR2, DDR3, and LPDDR2 SDRAM protocols.
  This driver takes care of only LPDDR2 memories presently. The
  functions of the driver includes re-configuring AC timing
  parameters and other settings during frequency, voltage and
  temperature changes

TI_EMIF_SRAM
  This driver is for the EMIF module available on Texas Instruments
  AM33XX and AM43XX SoCs and is required for PM. Certain parts of
  the EMIF PM code must run from on-chip SRAM late in the suspend
  sequence so this driver provides several relocatable PM functions
  for the SoC PM code to use.

TI_EQEP
  Select this option to enable the Texas Instruments Enhanced Quadrature
  Encoder Pulse (eQEP) counter driver.
  
  To compile this driver as a module, choose M here: the module will be
  called ti-eqep.

TI_K3_AM65_CPSW_NUSS
  This driver supports TI K3 AM654/J721E CPSW2G Ethernet SubSystem.
  The two-port Gigabit Ethernet MAC (MCU_CPSW0) subsystem provides
  Ethernet packet communication for the device: One Ethernet port
  (port 1) with selectable RGMII and RMII interfaces and an internal
  Communications Port Programming Interface (CPPI) port (port 0).
  
  To compile this driver as a module, choose M here: the module
  will be called ti-am65-cpsw-nuss.

TI_K3_AM65_CPTS
  Say y here to support the TI K3 AM65x CPTS with 1588 features such as
  PTP hardware clock for each CPTS device and network packets
  timestamping where applicable.
  Depending on integration CPTS blocks enable compliance with
  the IEEE 1588-2008 standard for a precision clock synchronization
  protocol, Ethernet Enhanced Scheduled Traffic Operations (CPTS_ESTFn)
  and PCIe Subsystem Precision Time Measurement (PTM).

TI_K3_DSP_REMOTEPROC
  Say m here to support TI's C66x and C71x DSP remote processor
  subsystems on various TI K3 family of SoCs through the remote
  processor framework.
  
  It's safe to say N here if you're not interested in utilizing
  the DSP slave processors.

TI_K3_PSIL
  No help

TI_K3_R5_REMOTEPROC
  Say m here to support TI's R5F remote processor subsystems
  on various TI K3 family of SoCs through the remote processor
  framework.
  
  It's safe to say N here if you're not interested in utilizing
  a slave processor.

TI_K3_RINGACC
  Say y here to support the K3 Ring accelerator module.
  The Ring Accelerator (RINGACC or RA)  provides hardware acceleration
  to enable straightforward passing of work between a producer
  and a consumer. There is one RINGACC module per NAVSS on TI AM65x SoCs
  If unsure, say N.

TI_K3_SOCINFO
  Include support for the SoC bus socinfo for the TI K3 Multicore SoC
  platforms to provide information about the SoC family and
  variant to user space.

TI_K3_UDMA
  Enable support for the TI UDMA (Unified DMA) controller. This
  DMA engine is used in AM65x and j721e.

TI_K3_UDMA_GLUE_LAYER
  Say y here to support the K3 NAVSS DMA glue interface
  If unsure, say N.

TI_KEYSTONE_NETCP
  This driver supports TI's Keystone NETCP Core.
  
  To compile this driver as a module, choose M here: the module
  will be called keystone_netcp.

TI_KEYSTONE_NETCP_ETHSS
  To compile this driver as a module, choose M here: the module
  will be called keystone_netcp_ethss.

TI_MESSAGE_MANAGER
  An implementation of Message Manager slave driver for Keystone
  and K3 architecture SoCs from Texas Instruments. Message Manager
  is a communication entity found on few of Texas Instrument's keystone
  and K3 architecture SoCs. These may be used for communication between
  multiple processors within the SoC. Select this driver if your
  platform has support for the hardware block.

TI_PIPE3
  Enable this to support the PIPE3 PHY that is part of TI SOCs. This
  driver takes care of all the PHY functionality apart from comparator.
  This driver interacts with the "OMAP Control PHY Driver" to power
  on/off the PHY.

TI_PRUSS
  TI PRU-ICSS Subsystem platform specific support.
  
  Say Y or M here to support the Programmable Realtime Unit (PRU)
  processors on various TI SoCs. It's safe to say N here if you're
  not interested in the PRU or if you are unsure.

TI_PRUSS_INTC
  This enables support for the PRU-ICSS Local Interrupt Controller
  present within a PRU-ICSS subsystem present on various TI SoCs.
  The PRUSS INTC enables various interrupts to be routed to multiple
  different processors within the SoC.

TI_PWMSS
  PWM Subsystem driver support for AM33xx SOC.
  
  PWM submodules require PWM config space access from submodule
  drivers and require common parent driver support.

TI_SCI_CLK
  This adds the clock driver support over TI System Control Interface.
  If you wish to use clock resources from the PMMC firmware, say Y.
  Otherwise, say N.

TI_SCI_CLK_PROBE_FROM_FW
  Forces the TI SCI clock driver to probe available clocks from the
  firmware. By default, only the used clocks are probed from DT.
  This is mostly only useful for debugging purposes, and will
  increase the boot time of the device. If you want the clocks probed
  from firmware, say Y. Otherwise, say N.

TI_SCI_INTA_IRQCHIP
  This enables the irqchip driver support for K3 Interrupt aggregator
  over TI System Control Interface available on some new TI's SoCs.
  If you wish to use interrupt aggregator irq resources managed by the
  TI System Controller, say Y here. Otherwise, say N.

TI_SCI_INTA_MSI_DOMAIN
  Driver to enable Interrupt Aggregator specific MSI Domain.

TI_SCI_INTR_IRQCHIP
  This enables the irqchip driver support for K3 Interrupt router
  over TI System Control Interface available on some new TI's SoCs.
  If you wish to use interrupt router irq resources managed by the
  TI System Controller, say Y here. Otherwise, say N.

TI_SCI_PM_DOMAINS
  Generic power domain implementation for TI device implementing
  the TI SCI protocol.
  
  To compile this as a module, choose M here. The module will be
  called ti_sci_pm_domains. Note this is needed early in boot before
  rootfs may be available.

TI_SCI_PROTOCOL
  TI System Control Interface (TISCI) Message Protocol is used to manage
  compute systems such as ARM, DSP etc with the system controller in
  complex System on Chip(SoC) such as those found on certain keystone
  generation SoC from TI.
  
  System controller provides various facilities including power
  management function support.
  
  This protocol library is used by client drivers to use the features
  provided by the system controller.

TI_SOC_THERMAL
  If you say yes here you get support for the Texas Instruments
  OMAP4460+ on die bandgap temperature sensor support. The register
  set is part of system control module.
  
  This includes alert interrupts generation and also the TSHUT
  support.

TI_ST
  This enables the shared transport core driver for TI
  BT / FM and GPS combo chips. This enables protocol drivers
  to register themselves with core and send data, the responses
  are returned to relevant protocol drivers based on their
  packet types.

TI_SYSC
  Generic driver for Texas Instruments interconnect target module
  found on many TI SoCs.

TI_SYSCON_CLK
  This adds clock driver support for syscon based gate
  clocks on TI's K2 and K3 SoCs.

TI_THERMAL
  If you say yes here you want to get support for generic thermal
  framework for the Texas Instruments on die bandgap temperature sensor.
  
  This includes trip points definitions, extrapolation rules and
  CPU cooling device bindings.

TI_TLC4541
  Say yes here to build support for Texas Instruments TLC4541 / TLC3541
  ADC chips.
  
  This driver can also be built as a module. If so, the module will be
  called ti-tlc4541.

TLAN
  If you have a PCI Ethernet network card based on the ThunderLAN chip
  which is supported by this driver, say Y here.
  
  Devices currently supported by this driver are Compaq Netelligent,
  Compaq NetFlex and Olicom cards.  Please read the file
  <file:Documentation/networking/device_drivers/ethernet/ti/tlan.rst>
  for more details.
  
  To compile this driver as a module, choose M here. The module
  will be called tlan.
  
  Please email feedback to <torben.mathiasen@compaq.com>.

TLS
  Enable kernel support for TLS protocol. This allows symmetric
  encryption handling of the TLS protocol to be done in-kernel.
  
  If unsure, say N.

TLS_DEVICE
  Enable kernel support for HW offload of the TLS protocol.
  
  If unsure, say N.

TLS_TOE
  Enable kernel support for legacy HW offload of the TLS protocol,
  which is incompatible with the Linux networking stack semantics.
  
  If unsure, say N.

TMD_HERMES
  Enable support for PCMCIA cards supported by the "Hermes" (aka
  orinoco) driver when used in TMD7160 based PCI adaptors.  These
  adaptors are not a full PCMCIA controller but act as a more limited
  PCI <-> PCMCIA bridge.  Several vendors sell such adaptors so that
  802.11b PCMCIA cards can be used in desktop machines.

TMP006
  If you say yes here you get support for the Texas Instruments
  TMP006 infrared thermopile sensor.
  
  This driver can also be built as a module. If so, the module will
  be called tmp006.

TMP007
  If you say yes here you get support for the Texas Instruments
  TMP007 infrared thermopile sensor with Integrated Math Engine.
  
  This driver can also be built as a module. If so, the module will
  be called tmp007.

TMPFS
  Tmpfs is a file system which keeps all files in virtual memory.
  
  Everything in tmpfs is temporary in the sense that no files will be
  created on your hard drive. The files live in memory and swap
  space. If you unmount a tmpfs instance, everything stored therein is
  lost.
  
  See <file:Documentation/filesystems/tmpfs.rst> for details.

TMPFS_INODE64
  tmpfs has historically used only inode numbers as wide as an unsigned
  int. In some cases this can cause wraparound, potentially resulting
  in multiple files with the same inode number on a single device. This
  option makes tmpfs use the full width of ino_t by default, without
  needing to specify the inode64 option when mounting.
  
  But if a long-lived tmpfs is to be accessed by 32-bit applications so
  ancient that opening a file larger than 2GiB fails with EINVAL, then
  the INODE64 config option and inode64 mount option risk operations
  failing with EOVERFLOW once 33-bit inode numbers are reached.
  
  To override this configured default, use the inode32 or inode64
  option when mounting.
  
  If unsure, say N.

TMPFS_POSIX_ACL
  POSIX Access Control Lists (ACLs) support additional access rights
  for users and groups beyond the standard owner/group/world scheme,
  and this option selects support for ACLs specifically for tmpfs
  filesystems.
  
  If you've selected TMPFS, it's possible that you'll also need
  this option as there are a number of Linux distros that require
  POSIX ACL support under /dev for certain features to work properly.
  For example, some distros need this feature for ALSA-related /dev
  files for sound to work properly.  In short, if you're not sure,
  say Y.

TMPFS_XATTR
  Extended attributes are name:value pairs associated with inodes by
  the kernel or by users (see the attr(5) manual page for details).
  
  Currently this enables support for the trusted.* and
  security.* namespaces.
  
  You need this for POSIX ACL support on tmpfs.
  
  If unsure, say N.

TN3215
  Include support for IBM 3215 line-mode terminals.

TN3215_CONSOLE
  Include support for using an IBM 3215 line-mode terminal as a
  Linux system console.

TN3270
  Include support for IBM 3270 terminals.

TN3270_CONSOLE
  Include support for using an IBM 3270 terminal as a Linux system
  console.  Available only if 3270 support is compiled in statically.

TN3270_FS
  Include support for fullscreen applications on an IBM 3270 terminal.

TN3270_TTY
  Include support for using an IBM 3270 terminal as a Linux tty.

TOOLS_SUPPORT_RELR
  No help

TOPSTAR_LAPTOP
  This driver adds support for hotkeys found on Topstar laptops.
  
  If you have a Topstar laptop, say Y or M here.

TORTURE_TEST
  No help

TOSHIBA
  This adds a driver to safely access the System Management Mode of
  the CPU on Toshiba portables with a genuine Toshiba BIOS. It does
  not work on models with a Phoenix BIOS. The System Management Mode
  is used to set the BIOS and power saving options on Toshiba portables.
  
  For information on utilities to make use of this driver see the
  Toshiba Linux utilities web site at:
  <http://www.buzzard.org.uk/toshiba/>.
  
  Say Y if you intend to run this kernel on a Toshiba portable.
  Say N otherwise.

TOSHIBA_BT_RFKILL
  This driver adds support for Bluetooth events for the RFKill
  switch on modern Toshiba laptops with full ACPI support and
  an RFKill switch.
  
  This driver handles RFKill events for the TOS6205 Bluetooth,
  and re-enables it when the switch is set back to the 'on'
  position.
  
  If you have a modern Toshiba laptop with a Bluetooth and an
  RFKill switch (such as the Portege R500), say Y.

TOSHIBA_HAPS
  This driver adds support for the built-in accelerometer
  found on recent Toshiba laptops equipped with HID TOS620A
  device.
  
  This driver receives ACPI notify events 0x80 when the sensor
  detects a sudden move or a harsh vibration, as well as an
  ACPI notify event 0x81 whenever the movement or vibration has
  been stabilized.
  
  Also provides sysfs entries to get/set the desired protection
  level and resetting the HDD protection interface.
  
  If you have a recent Toshiba laptop with a built-in accelerometer
  device, say Y.

TOSHIBA_WMI
  This driver adds hotkey monitoring support to some Toshiba models
  that manage the hotkeys via WMI events.
  
  WARNING: This driver is incomplete as it lacks a proper keymap and the
  *notify function only prints the ACPI event type value. Be warned that
  you will need to provide some information if you have a Toshiba model
  with WMI event hotkeys and want to help with the development of this
  driver.
  
  If you have a WMI-based hotkeys Toshiba laptop, say Y or M here.

TOUCHSCREEN_88PM860X
  Say Y here if you have a 88PM860x PMIC and want to enable
  support for the built-in touchscreen.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called 88pm860x-ts.

TOUCHSCREEN_AD7877
  Say Y here if you have a touchscreen interface using the
  AD7877 controller, and your board-specific initialization
  code includes that in its table of SPI devices.
  
  If unsure, say N (but it's safe to say "Y").
  
  To compile this driver as a module, choose M here: the
  module will be called ad7877.

TOUCHSCREEN_AD7879
  Say Y here if you want to support a touchscreen interface using
  the AD7879-1/AD7889-1 controller.
  
  You should select a bus connection too.
  
  To compile this driver as a module, choose M here: the
  module will be called ad7879.

TOUCHSCREEN_AD7879_I2C
  Say Y here if you have AD7879-1/AD7889-1 hooked to an I2C bus.
  
  To compile this driver as a module, choose M here: the
  module will be called ad7879-i2c.

TOUCHSCREEN_AD7879_SPI
  Say Y here if you have AD7879-1/AD7889-1 hooked to a SPI bus.
  
  If unsure, say N (but it's safe to say "Y").
  
  To compile this driver as a module, choose M here: the
  module will be called ad7879-spi.

TOUCHSCREEN_ADC
  Say Y here if you want to use the generic ADC
  resistive touchscreen driver.
  
  If unsure, say N (but it's safe to say "Y").
  
  To compile this driver as a module, choose M here: the
  module will be called resistive-adc-touch.ko.

TOUCHSCREEN_ADS7846
  Say Y here if you have a touchscreen interface using the
  ADS7846/TSC2046/AD7873 or ADS7843/AD7843 controller,
  and your board-specific setup code includes that in its
  table of SPI devices.
  
  If HWMON is selected, and the driver is told the reference voltage
  on your board, you will also get hwmon interfaces for the voltage
  (and on ads7846/tsc2046/ad7873, temperature) sensors of this chip.
  
  If unsure, say N (but it's safe to say "Y").
  
  To compile this driver as a module, choose M here: the
  module will be called ads7846.

TOUCHSCREEN_AR1021_I2C
  Say Y here if you have the Microchip AR1020 or AR1021 touchscreen
  controller chip in your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called ar1021_i2c.

TOUCHSCREEN_ATMEL_MXT
  Say Y here if you have Atmel mXT series I2C touchscreen,
  such as AT42QT602240/ATMXT224, connected to your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called atmel_mxt_ts.

TOUCHSCREEN_ATMEL_MXT_T37
  Say Y here if you want support to output data from the T37
  Diagnostic Data object using a V4L device.

TOUCHSCREEN_AUO_PIXCIR
  Say Y here if you have a AUO display with in-cell touchscreen
  using Pixcir ICs.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called auo-pixcir-ts.

TOUCHSCREEN_BU21013
  Say Y here if you have a bu21013 touchscreen connected to
  your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called bu21013_ts.

TOUCHSCREEN_BU21029
  Say Y here if you have a Rohm BU21029 touchscreen controller
  connected to your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called bu21029_ts.

TOUCHSCREEN_CHIPONE_ICN8318
  Say Y here if you have a ChipOne icn8318 based I2C touchscreen.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called chipone_icn8318.

TOUCHSCREEN_CHIPONE_ICN8505
  Say Y here if you have a ChipOne icn8505 based I2C touchscreen.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called chipone_icn8505.

TOUCHSCREEN_COLIBRI_VF50
  Say Y here if you have a Colibri VF50 and plan to use
  the on-board provided 4-wire touchscreen driver.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called colibri_vf50_ts.

TOUCHSCREEN_CY8CTMA140
  Say Y here if you have a Cypress CY8CTMA140 capacitive
  touchscreen also just known as "TMA140"
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called cy8ctma140.

TOUCHSCREEN_CY8CTMG110
  Say Y here if you have a cy8ctmg110 capacitive touchscreen on
  an AAVA device.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called cy8ctmg110_ts.

TOUCHSCREEN_CYTTSP4_CORE
  Core driver for Cypress TrueTouch(tm) Standard Product
  Generation4 touchscreen controllers.
  
  Say Y here if you have a Cypress Gen4 touchscreen.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here.

TOUCHSCREEN_CYTTSP4_I2C
  Say Y here if the touchscreen is connected via I2C bus.
  
  To compile this driver as a module, choose M here: the
  module will be called cyttsp4_i2c.

TOUCHSCREEN_CYTTSP4_SPI
  Say Y here if the touchscreen is connected via SPI bus.
  
  To compile this driver as a module, choose M here: the
  module will be called cyttsp4_spi.

TOUCHSCREEN_CYTTSP_CORE
  Say Y here if you have a touchscreen using controller from
  the Cypress TrueTouch(tm) Standard Product family connected
  to your system. You will also need to select appropriate
  bus connection below.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called cyttsp_core.

TOUCHSCREEN_CYTTSP_I2C
  Say Y here if the touchscreen is connected via I2C bus.
  
  To compile this driver as a module, choose M here: the
  module will be called cyttsp_i2c.

TOUCHSCREEN_CYTTSP_SPI
  Say Y here if the touchscreen is connected via SPI bus.
  
  To compile this driver as a module, choose M here: the
  module will be called cyttsp_spi.

TOUCHSCREEN_DA9034
  Say Y here to enable the support for the touchscreen found
  on Dialog Semiconductor DA9034 PMIC.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called da9034-ts.

TOUCHSCREEN_DA9052
  Say Y here to support the touchscreen found on Dialog Semiconductor
  DA9052-BC and DA9053-AA/Bx PMICs.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called da9052_tsi.

TOUCHSCREEN_DMI
  Certain ACPI based tablets with e.g. Silead or Chipone touchscreens
  do not have enough data in ACPI tables for the touchscreen driver to
  handle the touchscreen properly, as OEMs expect the data to be baked
  into the tablet model specific version of the driver shipped with the
  the OS-image for the device. This option supplies the missing info.
  Enable this for x86 tablets with Silead or Chipone touchscreens.

TOUCHSCREEN_DYNAPRO
  Say Y here if you have a Dynapro serial touchscreen connected to
  your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called dynapro.

TOUCHSCREEN_EDT_FT5X06
  Say Y here if you have an EDT "Polytouch" touchscreen based
  on the FocalTech FT5x06 family of controllers connected to
  your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called edt-ft5x06.

TOUCHSCREEN_EETI
  Say Y here to enable support for I2C connected EETI touch panels.
  
  To compile this driver as a module, choose M here: the
  module will be called eeti_ts.

TOUCHSCREEN_EGALAX
  Say Y here to enable support for I2C connected EETI
  eGalax multi-touch panels.
  
  To compile this driver as a module, choose M here: the
  module will be called egalax_ts.

TOUCHSCREEN_EGALAX_SERIAL
  Say Y here to enable support for serial connected EETI
  eGalax touch panels.
  
  To compile this driver as a module, choose M here: the
  module will be called egalax_ts_serial.

TOUCHSCREEN_EKTF2127
  Say Y here if you have an Elan eKTF2127 touchscreen
  connected to your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called ektf2127.

TOUCHSCREEN_ELAN
  Say Y here if you have an Elan eKTH I2C touchscreen
  connected to your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called elants_i2c.

TOUCHSCREEN_ELO
  Say Y here if you have an Elo serial touchscreen connected to
  your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called elo.

TOUCHSCREEN_EXC3000
  Say Y here to enable support for I2C connected EETI
  EXC3000 multi-touch panels.
  
  To compile this driver as a module, choose M here: the
  module will be called exc3000.

TOUCHSCREEN_FUJITSU
  Say Y here if you have the Fujitsu touchscreen (such as one
  installed in Lifebook P series laptop) connected to your
  system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called fujitsu-ts.

TOUCHSCREEN_GOODIX
  Say Y here if you have the Goodix touchscreen (such as one
  installed in Onda v975w tablets) connected to your
  system. It also supports 5-finger chip models, which can be
  found on ARM tablets, like Wexler TAB7200 and MSI Primo73.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called goodix.

TOUCHSCREEN_GUNZE
  Say Y here if you have the Gunze AHL-51 touchscreen connected to
  your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called gunze.

TOUCHSCREEN_HAMPSHIRE
  Say Y here if you have a Hampshire serial touchscreen connected to
  your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called hampshire.

TOUCHSCREEN_HIDEEP
  Say Y here if you have a touchscreen using HiDeep.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here : the
  module will be called hideep_ts.

TOUCHSCREEN_HP600
  Say Y here if you have a HP Jornada 620/660/680/690 and want to
  support the built-in touchscreen.
  
  To compile this driver as a module, choose M here: the
  module will be called hp680_ts_input.

TOUCHSCREEN_HP7XX
  Say Y here if you have a HP Jornada 710/720/728 and want
  to support the built-in touchscreen.
  
  To compile this driver as a module, choose M here: the
  module will be called jornada720_ts.

TOUCHSCREEN_HTCPEN
  Say Y here if you have an HTC Shift UMPC also known as HTC X9500
  Clio / Shangrila and want to support the built-in touchscreen.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called htcpen.

TOUCHSCREEN_ILI210X
  Say Y here if you have a ILI210X based touchscreen
  controller. This driver supports models ILI2102,
  ILI2102s, ILI2103, ILI2103s and ILI2105.
  Such kind of chipsets can be found in Amazon Kindle Fire
  touchscreens.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called ili210x.

TOUCHSCREEN_IMX6UL_TSC
  Say Y here if you have a Freescale i.MX6UL, and want to
  use the internal touchscreen controller.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called imx6ul_tsc.

TOUCHSCREEN_INEXIO
  Say Y here if you have an iNexio serial touchscreen connected to
  your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called inexio.

TOUCHSCREEN_IPAQ_MICRO
  Say Y here to enable support for the touchscreen attached to
  the Atmel Micro peripheral controller on iPAQ h3100/h3600/h3700
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called ipaq-micro-ts.

TOUCHSCREEN_IPROC
  Say Y here if you want to add support for the IPROC touch
  controller to your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called bcm_iproc_tsc.

TOUCHSCREEN_IQS5XX
  Say Y to enable support for the Azoteq IQS550/572/525
  family of trackpad/touchscreen controllers.
  
  To compile this driver as a module, choose M here: the
  module will be called iqs5xx.

TOUCHSCREEN_LPC32XX
  Say Y here if you have a LPC32XX device and want
  to support the built-in touchscreen.
  
  To compile this driver as a module, choose M here: the
  module will be called lpc32xx_ts.

TOUCHSCREEN_MAX11801
  Say Y here if you have a MAX11801 based touchscreen
  controller.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called max11801_ts.

TOUCHSCREEN_MC13783
  Say Y here if you have an Freescale MC13783 PMIC on your
  board and want to use its touchscreen
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called mc13783_ts.

TOUCHSCREEN_MCS5000
  Say Y here if you have the MELFAS MCS-5000 touchscreen controller
  chip in your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called mcs5000_ts.

TOUCHSCREEN_MELFAS_MIP4
  Say Y here if you have a MELFAS MIP4 Touchscreen device.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here:
  the module will be called melfas_mip4.

TOUCHSCREEN_MIGOR
  Say Y here to enable MIGO-R touchscreen support.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called migor_ts.

TOUCHSCREEN_MK712
  Say Y here if you have the ICS MicroClock MK712 touchscreen
  controller chip in your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called mk712.

TOUCHSCREEN_MMS114
  Say Y here if you have the MELFAS MMS114 touchscreen controller
  chip in your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called mms114.

TOUCHSCREEN_MTOUCH
  Say Y here if you have a MicroTouch (3M) serial touchscreen connected to
  your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called mtouch.

TOUCHSCREEN_MX25
  Enable support for touchscreen connected to your i.MX25.
  
  To compile this driver as a module, choose M here: the
  module will be called fsl-imx25-tcq.

TOUCHSCREEN_MXS_LRADC
  Say Y here if you have a touchscreen connected to the low-resolution
  analog-to-digital converter (LRADC) on an i.MX23 or i.MX28 processor.
  
  To compile this driver as a module, choose M here: the module will be
  called mxs-lradc-ts.

TOUCHSCREEN_PCAP
  Say Y here if you have a Motorola EZX telephone and
  want to enable support for the built-in touchscreen.
  
  To compile this driver as a module, choose M here: the
  module will be called pcap_ts.

TOUCHSCREEN_PENMOUNT
  Say Y here if you have a Penmount serial touchscreen connected to
  your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called penmount.

TOUCHSCREEN_PIXCIR
  Say Y here if you have a pixcir i2c touchscreen
  controller.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called pixcir_i2c_ts.

TOUCHSCREEN_PROPERTIES
  No help

TOUCHSCREEN_RASPBERRYPI_FW
  Say Y here if you have the official Raspberry Pi 7 inch screen on
  your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called raspberrypi-ts.

TOUCHSCREEN_RM_TS
  Say Y here if you have Raydium series I2C touchscreen,
  such as RM32380, connected to your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called raydium_i2c_ts.

TOUCHSCREEN_ROHM_BU21023
  Say Y here if you have a touchscreen using ROHM BU21023/24.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called bu21023_ts.

TOUCHSCREEN_S3C2410
  Say Y here if you have the s3c2410 touchscreen.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called s3c2410_ts.

TOUCHSCREEN_S6SY761
  Say Y if you have the Samsung S6SY761 driver
  
  If unsure, say N
  
  To compile this driver as module, choose M here: the
  module will be called s6sy761.

TOUCHSCREEN_SILEAD
  Say Y here if you have the Silead touchscreen connected to
  your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called silead.

TOUCHSCREEN_SIS_I2C
  This enables support for SiS 9200 family over I2C based touchscreens.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called sis_i2c.

TOUCHSCREEN_ST1232
  Say Y here if you want to support the Sitronix ST1232
  or ST1633 touchscreen controller.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called st1232_ts.

TOUCHSCREEN_STMFTS
  Say Y here if you want support for STMicroelectronics
  STMFTS touchscreen.
  
  To compile this driver as a module, choose M here: the
  module will be called stmfts.

TOUCHSCREEN_STMPE
  Say Y here if you want support for STMicroelectronics
  STMPE touchscreen controllers.
  
  To compile this driver as a module, choose M here: the
  module will be called stmpe-ts.

TOUCHSCREEN_SUN4I
  This selects support for the resistive touchscreen controller
  found on Allwinner sunxi SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called sun4i-ts.

TOUCHSCREEN_SUR40
  Say Y here if you want support for the Samsung SUR40 touchscreen
  (also known as Microsoft Surface 2.0 or Microsoft PixelSense).
  
  To compile this driver as a module, choose M here: the
  module will be called sur40.

TOUCHSCREEN_SURFACE3_SPI
  Say Y here if you have the Ntrig/Microsoft SPI touchscreen
  controller chip as found on the Surface 3 in your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called surface3_spi.

TOUCHSCREEN_SX8654
  Say Y here if you have a Semtech SX8654 touchscreen controller.
  
  If unsure, say N
  
  To compile this driver as a module, choose M here: the
  module will be called sx8654.

TOUCHSCREEN_TI_AM335X_TSC
  Say Y here if you have 4/5/8 wire touchscreen controller
  to be connected to the ADC controller on your TI AM335x SoC.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called ti_am335x_tsc.

TOUCHSCREEN_TOUCHIT213
  Say Y here if you have a Sahara TouchIT-213 Tablet PC.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called touchit213.

TOUCHSCREEN_TOUCHRIGHT
  Say Y here if you have a Touchright serial touchscreen connected to
  your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called touchright.

TOUCHSCREEN_TOUCHWIN
  Say Y here if you have a Touchwin serial touchscreen connected to
  your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called touchwin.

TOUCHSCREEN_TPS6507X
  Say Y here if you have a TPS6507x based touchscreen
  controller.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called tps6507x_ts.

TOUCHSCREEN_TS4800
  Say Y here if you have a touchscreen on a TS-4800 board.
  
  On TS-4800, the touchscreen is not handled directly by Linux but by
  a companion FPGA.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called ts4800_ts.

TOUCHSCREEN_TSC2004
  Say Y here if you have a TSC2004 based touchscreen.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called tsc2004.

TOUCHSCREEN_TSC2005
  Say Y here if you have a TSC2005 based touchscreen.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called tsc2005.

TOUCHSCREEN_TSC2007
  Say Y here if you have a TSC2007 based touchscreen.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called tsc2007.

TOUCHSCREEN_TSC2007_IIO
  Saying Y here adds an iio interface to the tsc2007 which
  provides values for the AUX input (used for e.g. battery
  or ambient light monitoring), temperature and raw input
  values.

TOUCHSCREEN_TSC200X_CORE
  No help

TOUCHSCREEN_TSC_SERIO
  Say Y here if you have a TSC-10, 25 or 40 serial touchscreen connected
  to your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called tsc40.

TOUCHSCREEN_UCB1400
  This enables support for the Philips UCB1400 touchscreen interface.
  The UCB1400 is an AC97 audio codec.  The touchscreen interface
  will be initialized only after the ALSA subsystem has been
  brought up and the UCB1400 detected.  You therefore have to
  configure ALSA support as well (either built-in or modular,
  independently of whether this driver is itself built-in or
  modular) for this driver to work.
  
  To compile this driver as a module, choose M here: the
  module will be called ucb1400_ts.

TOUCHSCREEN_USB_3M
  No help

TOUCHSCREEN_USB_COMPOSITE
  USB Touchscreen driver for:
  - eGalax Touchkit USB (also includes eTurboTouch CT-410/510/700)
  - PanJit TouchSet USB
  - 3M MicroTouch USB (EX II series)
  - ITM
  - some other eTurboTouch
  - Gunze AHL61
  - DMC TSC-10/25
  - IRTOUCHSYSTEMS/UNITOP
  - IdealTEK URTC1000
  - GoTop Super_Q2/GogoPen/PenPower tablets
  - JASTEC USB Touch Controller/DigiTech DTR-02U
  - Zytronic controllers
  - Elo TouchSystems 2700 IntelliTouch
  - EasyTouch USB Touch Controller from Data Modul
  - e2i (Mimo monitors)
  
  Have a look at <http://linux.chapter7.ch/touchkit/> for
  a usage description and the required user-space stuff.
  
  To compile this driver as a module, choose M here: the
  module will be called usbtouchscreen.

TOUCHSCREEN_USB_DMC_TSC10
  No help

TOUCHSCREEN_USB_E2I
  No help

TOUCHSCREEN_USB_EASYTOUCH
  Say Y here if you have an EasyTouch USB Touch controller.
  If unsure, say N.

TOUCHSCREEN_USB_EGALAX
  No help

TOUCHSCREEN_USB_ELO
  No help

TOUCHSCREEN_USB_ETT_TC45USB
  No help

TOUCHSCREEN_USB_ETURBO
  No help

TOUCHSCREEN_USB_GENERAL_TOUCH
  No help

TOUCHSCREEN_USB_GOTOP
  No help

TOUCHSCREEN_USB_GUNZE
  No help

TOUCHSCREEN_USB_IDEALTEK
  No help

TOUCHSCREEN_USB_IRTOUCH
  No help

TOUCHSCREEN_USB_ITM
  No help

TOUCHSCREEN_USB_JASTEC
  No help

TOUCHSCREEN_USB_NEXIO
  No help

TOUCHSCREEN_USB_PANJIT
  No help

TOUCHSCREEN_USB_ZYTRONIC
  No help

TOUCHSCREEN_WACOM_I2C
  Say Y here if you want to use the I2C version of the Wacom
  Pen Tablet.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the module
  will be called wacom_i2c.

TOUCHSCREEN_WACOM_W8001
  Say Y here if you have an Wacom W8001 penabled serial touchscreen
  connected to your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called wacom_w8001.

TOUCHSCREEN_WDT87XX_I2C
  Say Y here if you have a Weida WDT87XX I2C touchscreen
  connected to your system.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called wdt87xx_i2c.

TOUCHSCREEN_WM831X
  This enables support for the touchscreen controller on the WM831x
  series of PMICs.
  
  To compile this driver as a module, choose M here: the
  module will be called wm831x-ts.

TOUCHSCREEN_WM9705
  Say Y here to enable support for the Wolfson Microelectronics
  WM9705 touchscreen controller.

TOUCHSCREEN_WM9712
  Say Y here to enable support for the Wolfson Microelectronics
  WM9712 touchscreen controller.

TOUCHSCREEN_WM9713
  Say Y here to enable support for the Wolfson Microelectronics
  WM9713 touchscreen controller.

TOUCHSCREEN_WM97XX
  Say Y here if you have a Wolfson Microelectronics WM97xx
  touchscreen connected to your system. Note that this option
  only enables core driver, you will also need to select
  support for appropriate chip below.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called wm97xx-ts.

TOUCHSCREEN_WM97XX_MAINSTONE
  Say Y here for support for streaming mode with WM97xx touchscreens
  on Mainstone, Palm Tungsten T5, TX and LifeDrive systems.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called mainstone-wm97xx.

TOUCHSCREEN_WM97XX_ZYLONITE
  Say Y here for support for streaming mode with the touchscreen
  on Zylonite systems.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called zylonite-wm97xx.

TOUCHSCREEN_ZET6223
  Say Y here if you have a touchscreen using Zeitec ZET6223
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called zet6223.

TOUCHSCREEN_ZFORCE
  Say Y here if you have a touchscreen using the zforce
  infraread technology from Neonode.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called zforce_ts.

TOUCHSCREEN_ZINITIX
  Say Y here if you have a touchscreen using Zinitix bt541,
  or something similar enough.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called zinitix.

TPL0102
  Say yes here to build support for the Texas Instruments
  TPL0102, TPL0402
  digital potentiometer chips.
  
  To compile this driver as a module, choose M here: the
  module will be called tpl0102.

TPM_KEY_PARSER
  This option provides support for parsing TPM format blobs for
  private key data and provides the ability to instantiate a crypto key
  from that data.

TPS6105X
  This option enables a driver for the TP61050/TPS61052
  high-power "white LED driver". This boost converter is
  sometimes used for other things than white LEDs, and
  also contains a GPIO pin.

TPS65010
  If you say yes here you get support for the TPS6501x series of
  Power Management chips.  These include voltage regulators,
  lithium ion/polymer battery charging, and other features that
  are often used in portable devices like cell phones and cameras.
  
  This driver can also be built as a module.  If so, the module
  will be called tps65010.

TPS6507X
  If you say yes here you get support for the TPS6507x series of
  Power Management / Touch Screen chips.  These include voltage
  regulators, lithium ion/polymer battery charging, touch screen
  and other features that are often used in portable devices.
  This driver can also be built as a module.  If so, the module
  will be called tps6507x.

TPS65911_COMPARATOR
  No help

TPS68470_PMIC_OPREGION
  This config adds ACPI operation region support for TI TPS68470 PMIC.
  TPS68470 device is an advanced power management unit that powers
  a Compact Camera Module (CCM), generates clocks for image sensors,
  drives a dual LED for flash and incorporates two LED drivers for
  general purpose indicators.
  This driver enables ACPI operation region support control voltage
  regulators and clocks.
  
  This option is a bool as it provides an ACPI operation
  region, which must be available before any of the devices
  using this, are probed.

TQMX86_WDT
  This is the driver for the hardware watchdog timer in the TQMX86 IO
  controller found on some of their ComExpress Modules.
  
  To compile this driver as a module, choose M here; the module
  will be called tqmx86_wdt.
  
  Most people will say N.

TRACEPOINTS
  No help

TRACEPOINT_BENCHMARK
  This option creates the tracepoint "benchmark:benchmark_event".
  When the tracepoint is enabled, it kicks off a kernel thread that
  goes into an infinite loop (calling cond_sched() to let other tasks
  run), and calls the tracepoint. Each iteration will record the time
  it took to write to the tracepoint and the next iteration that
  data will be passed to the tracepoint itself. That is, the tracepoint
  will report the time it took to do the previous tracepoint.
  The string written to the tracepoint is a static string of 128 bytes
  to keep the time the same. The initial string is simply a write of
  "START". The second string records the cold cache time of the first
  write which is not added to the rest of the calculations.
  
  As it is a tight loop, it benchmarks as hot cache. That's fine because
  we care most about hot paths that are probably in cache already.
  
  An example of the output:
  
       START
       first=3672 [COLD CACHED]
       last=632 first=3672 max=632 min=632 avg=316 std=446 std^2=199712
       last=278 first=3672 max=632 min=278 avg=303 std=316 std^2=100337
       last=277 first=3672 max=632 min=277 avg=296 std=258 std^2=67064
       last=273 first=3672 max=632 min=273 avg=292 std=224 std^2=50411
       last=273 first=3672 max=632 min=273 avg=288 std=200 std^2=40389
       last=281 first=3672 max=632 min=273 avg=287 std=183 std^2=33666

TRACER_MAX_TRACE
  No help

TRACER_SNAPSHOT
  Allow tracing users to take snapshot of the current buffer using the
  ftrace interface, e.g.:
  
      echo 1 > /sys/kernel/debug/tracing/snapshot
      cat snapshot

TRACER_SNAPSHOT_PER_CPU_SWAP
  Allow doing a snapshot of a single CPU buffer instead of a
  full swap (all buffers). If this is set, then the following is
  allowed:
  
      echo 1 > /sys/kernel/debug/tracing/per_cpu/cpu2/snapshot
  
  After which, only the tracing buffer for CPU 2 was swapped with
  the main tracing buffer, and the other CPU buffers remain the same.
  
  When this is enabled, this adds a little more overhead to the
  trace recording, as it needs to add some checks to synchronize
  recording with swaps. But this does not affect the performance
  of the overall system. This is enabled by default when the preempt
  or irq latency tracers are enabled, as those need to swap as well
  and already adds the overhead (plus a lot more).

TRACE_BRANCH_PROFILING
  No help

TRACE_CLOCK
  No help

TRACE_EVAL_MAP_FILE
  The "print fmt" of the trace events will show the enum/sizeof names
  instead of their values. This can cause problems for user space tools
  that use this string to parse the raw data as user space does not know
  how to convert the string to its value.
  
  To fix this, there's a special macro in the kernel that can be used
  to convert an enum/sizeof into its value. If this macro is used, then
  the print fmt strings will be converted to their values.
  
  If something does not get converted properly, this option can be
  used to show what enums/sizeof the kernel tried to convert.
  
  This option is for debugging the conversions. A file is created
  in the tracing directory called "eval_map" that will show the
  names matched with their values and what trace event system they
  belong too.
  
  Normally, the mapping of the strings to values will be freed after
  boot up or module load. With this option, they will not be freed, as
  they are needed for the "eval_map" file. Enabling this option will
  increase the memory footprint of the running kernel.
  
  If unsure, say N.

TRACE_EVENT_INJECT
  Allow user-space to inject a specific trace event into the ring
  buffer. This is mainly used for testing purpose.
  
  If unsure, say N.

TRACE_GPU_MEM
  No help

TRACE_IRQFLAGS
  Enables hooks to interrupt enabling and disabling for
  either tracing or lock debugging.

TRACE_IRQFLAGS_NMI
  No help

TRACE_IRQFLAGS_NMI_SUPPORT
  No help

TRACE_IRQFLAGS_SUPPORT
  No help

TRACE_PREEMPT_TOGGLE
  Enables hooks which will be called when preemption is first disabled,
  and last enabled.

TRACE_ROUTER
  The trace router uses the Linux tty line discipline framework to
  route trace data coming from a tty port (say UART for example) to
  the trace sink line discipline driver and to another tty port (say
  USB). This is part of a solution for the MIPI P1149.7, compact JTAG,
  standard, which is for debugging mobile devices. The PTI driver in
  drivers/misc/pti.c defines the majority of this MIPI solution.
  
  You should select this driver if the target kernel is meant for
  a mobile device containing a modem.  Then you will need to select
  "Trace data sink for MIPI P1149.7 cJTAG standard" line discipline
  driver.

TRACE_SINK
  The trace sink uses the Linux line discipline framework to receive
  trace data coming from the trace router line discipline driver
  to a user-defined tty port target, like USB.
  This is to provide a way to extract modem trace data on
  devices that do not have a PTI HW module, or just need modem
  trace data to come out of a different HW output port.
  This is part of a solution for the P1149.7, compact JTAG, standard.
  
  If you select this option, you need to select
  "Trace data router for MIPI P1149.7 cJTAG standard".

TRACING
  No help

TRACING_BRANCHES
  Selected by tracers that will trace the likely and unlikely
  conditions. This prevents the tracers themselves from being
  profiled. Profiling the tracing infrastructure can only happen
  when the likelys and unlikelys are not being traced.

TRACING_MAP
  tracing_map is a special-purpose lock-free map for tracing,
  separated out as a stand-alone facility in order to allow it
  to be shared between multiple tracers.  It isn't meant to be
  generally used outside of that context, and is normally
  selected by tracers that use it.

TRACING_SUPPORT
  No help

TRANSPARENT_HUGEPAGE
  Transparent Hugepages allows the kernel to use huge pages and
  huge tlb transparently to the applications whenever possible.
  This feature can improve computing performance to certain
  applications by speeding up page faults during memory
  allocation, by reducing the number of tlb misses and by speeding
  up the pagetable walking.
  
  If memory constrained on embedded, you may want to say N.

TRANSPARENT_HUGEPAGE_ALWAYS
  Enabling Transparent Hugepage always, can increase the
  memory footprint of applications without a guaranteed
  benefit but it will work automatically for all applications.

TRANSPARENT_HUGEPAGE_MADVISE
  Enabling Transparent Hugepage madvise, will only provide a
  performance improvement benefit to the applications using
  madvise(MADV_HUGEPAGE) but it won't risk to increase the
  memory footprint of applications without a guaranteed
  benefit.

TREE_RCU
  This option selects the RCU implementation that is
  designed for very large SMP system with hundreds or
  thousands of CPUs.  It also scales down nicely to
  smaller systems.

TREE_SRCU
  This option selects the full-fledged version of SRCU.

TRIM_UNUSED_KSYMS
  The kernel and some modules make many symbols available for
  other modules to use via EXPORT_SYMBOL() and variants. Depending
  on the set of modules being selected in your kernel configuration,
  many of those exported symbols might never be used.
  
  This option allows for unused exported symbols to be dropped from
  the build. In turn, this provides the compiler more opportunities
  (especially when using LTO) for optimizing the code and reducing
  binary size.  This might have some security advantages as well.
  
  If unsure, or if you need to build out-of-tree modules, say N.

TRUSTED_FOUNDATIONS
  Some devices (including most early Tegra-based consumer devices on
  the market) are booted with the Trusted Foundations secure monitor
  active, requiring some core operations to be performed by the secure
  monitor instead of the kernel.
  
  This option allows the kernel to invoke the secure monitor whenever
  required on devices using Trusted Foundations. See the functions and
  comments in linux/firmware/trusted_foundations.h or the device tree
  bindings for "tlm,trusted-foundations" for details on how to use it.
  
  Choose N if you don't know what this is about.

TRUSTED_KEYS
  This option provides support for creating, sealing, and unsealing
  keys in the kernel. Trusted keys are random number symmetric keys,
  generated and RSA-sealed by the TPM. The TPM only unseals the keys,
  if the boot PCRs and other criteria match.  Userspace will only ever
  see encrypted blobs.
  
  If you are unsure as to whether this is required, answer N.

TS4800_IRQ
  Support for the TS-4800 FPGA IRQ controller

TS4800_WATCHDOG
  Technologic Systems TS-4800 has watchdog timer implemented in
  an external FPGA. Say Y here if you want to support for the
  watchdog timer on TS-4800 board.

TS5500
  This option enables system support for the Technologic Systems TS-5500.

TS72XX_WATCHDOG
  Technologic Systems TS-7200, TS-7250 and TS-7260 boards have
  watchdog timer implemented in a external CPLD chip. Say Y here
  if you want to support for the watchdog timer on TS-72XX boards.
  
  To compile this driver as a module, choose M here: the
  module will be called ts72xx_wdt.

TSI108_ETH
  This driver supports Tundra TSI108 gigabit Ethernet ports.
  To compile this driver as a module, choose M here: the module
  will be called tsi108_eth.

TSL2583
  Provides support for the TAOS tsl2580, tsl2581 and tsl2583 devices.
  Access ALS data via iio, sysfs.

TSL2772
  Support for: tsl2571, tsl2671, tmd2671, tsl2771, tmd2771, tsl2572, tsl2672,
  tmd2672, tsl2772, tmd2772 devices.
  Provides iio_events and direct access via sysfs.

TSL4531
  Say Y here if you want to build a driver for the TAOS TSL4531 family
  of ambient light sensors with direct lux output.
  
  To compile this driver as a module, choose M here: the
  module will be called tsl4531.

TSYS01
  If you say yes here you get support for the Measurement Specialties
  TSYS01 I2C temperature sensor.
  
  This driver can also be built as a module. If so, the module will
  be called tsys01.

TSYS02D
  If you say yes here you get support for the Measurement Specialties
  TSYS02D temperature sensor.
  
  This driver can also be built as a module. If so, the module will
  be called tsys02d.

TS_NBUS
  Driver for the Technologic Systems NBUS which is used to interface
  with the peripherals in the FPGA of the TS-4600 SoM.

TTPCI_EEPROM
  No help

TTY
  Allows you to remove TTY support which can save space, and
  blocks features that require TTY from inclusion in the kernel.
  TTY is required for any text terminals or serial port
  communication. Most users should leave this enabled.

TTY_PRINTK
  If you say Y here, the support for writing user messages (i.e.
  console messages) via printk is available.
  
  The feature is useful to inline user messages with kernel
  messages.
  In order to use this feature, you should output user messages
  to /dev/ttyprintk or redirect console to this TTY.
  
  If unsure, say N.

TTY_PRINTK_LEVEL
  Printk log level to use for ttyprintk messages.

TULIP
  This driver is developed for the SMC EtherPower series Ethernet
  cards and also works with cards based on the DECchip
  21140 (Tulip series) chips.  Some LinkSys PCI cards are
  of this type.  (If your card is NOT SMC EtherPower 10/100 PCI
  (smc9332dst), you can also try the driver for "Generic DECchip"
  cards, above.  However, most people with a network card of this type
  will say Y here.)
  
  To compile this driver as a module, choose M here. The module will
  be called tulip.

TULIP_DM910X
  No help

TULIP_MMIO
  Use PCI shared memory for the NIC registers, rather than going through
  the Tulip's PIO (programmed I/O ports).  Faster, but could produce
  obscure bugs if your mainboard has memory controller timing issues.
  If in doubt, say N.

TULIP_MWI
  This configures your Tulip card specifically for the card and
  system cache line size type you are using.
  
  This is experimental code, not yet tested on many boards.
  
  If unsure, say N.

TULIP_NAPI
  NAPI is a new driver API designed to reduce CPU and interrupt load
  when the driver is receiving lots of packets from the card. It is
  still somewhat experimental and thus not yet enabled by default.
  
  If your estimated Rx load is 10kpps or more, or if the card will be
  deployed on potentially unfriendly networks (e.g. in a firewall),
  then say Y here.
  
  If in doubt, say N.

TULIP_NAPI_HW_MITIGATION
  Use HW to reduce RX interrupts. Not strictly necessary since NAPI
  reduces RX interrupts by itself. Interrupt mitigation reduces RX
  interrupts even at low levels of traffic at the cost of a small
  latency.
  
  If in doubt, say Y.

TUN
  TUN/TAP provides packet reception and transmission for user space
  programs.  It can be viewed as a simple Point-to-Point or Ethernet
  device, which instead of receiving packets from a physical media,
  receives them from user space program and instead of sending packets
  via physical media writes them to the user space program.
  
  When a program opens /dev/net/tun, driver creates and registers
  corresponding net device tunX or tapX.  After a program closed above
  devices, driver will automatically delete tunXX or tapXX device and
  all routes corresponding to it.
  
  Please read <file:Documentation/networking/tuntap.rst> for more
  information.
  
  To compile this driver as a module, choose M here: the module
  will be called tun.
  
  If you don't know what to use this for, you don't need it.

TUN_VNET_CROSS_LE
  This option allows TUN/TAP and MACVTAP device drivers in a
  little-endian kernel to parse vnet headers that come from a
  big-endian legacy virtio device.
  
  Userspace programs can control the feature using the TUNSETVNETBE
  and TUNGETVNETBE ioctls.
  
  Unless you have a little-endian system hosting a big-endian virtual
  machine with a legacy virtio NIC, you should say N.

TURRIS_MOX_RWTM
  This driver communicates with the firmware on the Cortex-M3 secure
  processor of the Turris Mox router. Enable if you are building for
  Turris Mox, and you will be able to read the device serial number and
  other manufacturing data and also utilize the Entropy Bit Generator
  for hardware random number generation.

TWL4030_CORE
  Say yes here if you have TWL4030 / TWL6030 family chip on your board.
  This core driver provides register access and IRQ handling
  facilities, and registers devices for the various functions
  so that function-specific drivers can bind to them.
  
  These multi-function chips are found on many OMAP2 and OMAP3
  boards, providing power management, RTC, GPIO, keypad, a
  high speed USB OTG transceiver, an audio codec (on most
  versions) and many other features.

TWL4030_MADC
  This driver provides support for Triton TWL4030-MADC. The
  driver supports both RT and SW conversion methods.
  
  This driver can also be built as a module. If so, the module will be
  called twl4030-madc.

TWL4030_POWER
  Say yes here if you want to use the power resources on the
  TWL4030 family chips.  Most of these resources are regulators,
  which have a separate driver; some are control signals, such
  as clock request handshaking.
  
  This driver uses board-specific data to initialize the resources
  and load scripts controlling which resources are switched off/on
  or reset when a sleep, wakeup or warm reset event occurs.

TWL4030_USB
  Enable this to support the USB OTG transceiver on TWL4030
  family chips (including the TWL5030 and TPS659x0 devices).
  This transceiver supports high and full speed devices plus,
  in host mode, low speed.

TWL4030_WATCHDOG
  Support for TI TWL4030 watchdog.  Say 'Y' here to enable the
  watchdog timer support for TWL4030 chips.

TWL6030_GPADC
  Say yes here if you want support for the TWL6030/TWL6032 General
  Purpose A/D Converter. This will add support for battery type
  detection, battery voltage and temperature measurement, die
  temperature measurement, system supply voltage, audio accessory,
  USB ID detection.
  
  This driver can also be built as a module. If so, the module will be
  called twl6030-gpadc.

TWL6030_USB
  Enable this to support the USB OTG transceiver on TWL6030
  family chips. This TWL6030 transceiver has the VBUS and ID GND
  and OTG SRP events capabilities. For all other transceiver functionality
  UTMI PHY is embedded in OMAP4430. The internal PHY configurations APIs
  are hooked to this driver through platform_data structure.
  The definition of internal PHY APIs are in the mach-omap2 layer.

TWL6040_CORE
  Say yes here if you want support for Texas Instruments TWL6040 audio
  codec.
  This driver provides common support for accessing the device,
  additional drivers must be enabled in order to use the
  functionality of the device (audio, vibra).

TXX9_DMAC
  Support the TXx9 SoC internal DMA controller.  This can be
  integrated in chips such as the Toshiba TX4927/38/39.

TXX9_WDT
  Hardware driver for the built-in watchdog timer on TXx9 MIPS SoCs.

TYPEC
  USB Type-C Specification defines a cable and connector for USB where
  only one type of plug is supported on both ends, i.e. there will not
  be Type-A plug on one end of the cable and Type-B plug on the other.
  Determination of the host-to-device relationship happens through a
  specific Configuration Channel (CC) which goes through the USB Type-C
  cable. The Configuration Channel may also be used to detect optional
  Accessory Modes - Analog Audio and Debug - and if USB Power Delivery
  is supported, the Alternate Modes, where the connector is used for
  something else then USB communication.
  
  USB Power Delivery Specification defines a protocol that can be used
  to negotiate the voltage and current levels with the connected
  partners. USB Power Delivery allows higher voltages then the normal
  5V, up to 20V, and current up to 5A over the cable. The USB Power
  Delivery protocol is also used to negotiate the optional Alternate
  Modes when they are supported. USB Power Delivery does not depend on
  USB Type-C connector, however it is mostly used together with USB
  Type-C connectors.
  
  USB Type-C and USB Power Delivery Specifications define a set of state
  machines that need to be implemented in either software or firmware.
  Simple USB Type-C PHYs, for example USB Type-C Port Controller
  Interface Specification compliant "Port Controllers" need the state
  machines to be handled in the OS, but stand-alone USB Type-C and Power
  Delivery controllers handle the state machines inside their firmware.
  The USB Type-C and Power Delivery controllers usually function
  autonomously, and do not necessarily require drivers.
  
  Enable this configurations option if you have USB Type-C connectors on
  your system and 1) you know your USB Type-C hardware requires OS
  control (a driver) to function, or 2) if you need to be able to read
  the status of the USB Type-C ports in your system, or 3) if you need
  to be able to swap the power role (decide are you supplying or
  consuming power over the cable) or data role (host or device) when
  both roles are supported.
  
  For more information, see the kernel documentation for USB Type-C
  Connector Class API (Documentation/driver-api/usb/typec.rst)
  <https://www.kernel.org/doc/html/latest/driver-api/usb/typec.html>
  and ABI (Documentation/ABI/testing/sysfs-class-typec).

TYPEC_DP_ALTMODE
  DisplayPort USB Type-C Alternate Mode allows DisplayPort
  displays and adapters to be attached to the USB Type-C
  connectors on the system.
  
  To compile this driver as a module, choose M here: the
  module will be called typec_displayport.

TYPEC_FUSB302
  The Fairchild FUSB302 Type-C chip driver that works with
  Type-C Port Controller Manager to provide USB PD and USB
  Type-C functionalities.

TYPEC_HD3SS3220
  Say Y or M here if your system has TI HD3SS3220 Type-C DRP Port
  controller driver.
  
  If you choose to build this driver as a dynamically linked module, the
  module will be called hd3ss3220.ko.

TYPEC_MT6360
  Mediatek MT6360 is a multi-functional IC that includes
  USB Type-C. It works with Type-C Port Controller Manager
  to provide USB PD and USB Type-C functionalities.

TYPEC_MUX_INTEL_PMC
  Driver for USB muxes controlled by Intel PMC FW. Intel PMC FW can
  control the USB role switch and also the multiplexer/demultiplexer
  switches used with USB Type-C Alternate Modes.

TYPEC_MUX_PI3USB30532
  Say Y or M if your system has a Pericom PI3USB30532 Type-C cross
  switch / mux chip found on some devices with a Type-C port.

TYPEC_NVIDIA_ALTMODE
  Latest NVIDIA GPUs support VirtualLink devices. Select this
  to enable support for VirtualLink devices with NVIDIA GPUs.
  
  To compile this driver as a module, choose M here: the
  module will be called typec_nvidia.

TYPEC_QCOM_PMIC
  Driver for supporting role switch over the Qualcomm PMIC.  This will
  handle the USB Type-C role and orientation detection reported by the
  QCOM PMIC if the PMIC has the capability to handle USB Type-C
  detection.
  
  It will also enable the VBUS output to connected devices when a
  DFP connection is made.

TYPEC_RT1711H
  Richtek RT1711H Type-C chip driver that works with
  Type-C Port Controller Manager to provide USB PD and USB
  Type-C functionalities.

TYPEC_STUSB160X
  Say Y or M here if your system has STMicroelectronics STUSB160x
  Type-C port controller.
  
  If you choose to build this driver as a dynamically linked module, the
  module will be called stusb160x.ko.

TYPEC_TCPCI
  Type-C Port Controller driver for TCPCI-compliant controller.

TYPEC_TCPCI_MAXIM
  MAXIM TCPCI based Type-C/PD chip driver. Works with
  with Type-C Port Controller Manager.

TYPEC_TCPM
  The Type-C Port Controller Manager provides a USB PD and USB Type-C
  state machine for use with Type-C Port Controllers.

TYPEC_TPS6598X
  Say Y or M here if your system has TI TPS65982 or TPS65983 USB Power
  Delivery controller.
  
  If you choose to build this driver as a dynamically linked module, the
  module will be called tps6598x.ko.

TYPEC_UCSI
  USB Type-C Connector System Software Interface (UCSI) is a
  specification for an interface that allows the operating system to
  control the USB Type-C ports. On UCSI system the USB Type-C ports
  function autonomously by default, but in order to get the status of
  the ports and support basic operations like role swapping, the driver
  is required. UCSI is available on most of the new Intel based systems
  that are equipped with Embedded Controller and USB Type-C ports.
  
  UCSI specification does not define the interface method, so depending
  on the platform, ACPI, PCI, I2C, etc. may be used. Therefore this
  driver only provides the core part, and separate drivers are needed
  for every supported interface method.
  
  The UCSI specification can be downloaded from:
  https://www.intel.com/content/www/us/en/io/universal-serial-bus/usb-type-c-ucsi-spec.html
  
  To compile the driver as a module, choose M here: the module will be
  called typec_ucsi.

TYPEC_WCOVE
  This driver adds support for USB Type-C on Intel Broxton platforms
  that have Intel Whiskey Cove PMIC. The driver works with USB Type-C
  Port Controller Manager to provide USB PD and Type-C functionalities.
  
  To compile this driver as module, choose M here: the module will be
  called typec_wcove.ko

TYPHOON
  This option enables driver support for the 3cr990 series of cards:
  
  3C990-TX, 3CR990-TX-95, 3CR990-TX-97, 3CR990-FX-95, 3CR990-FX-97,
  3CR990SVR, 3CR990SVR95, 3CR990SVR97, 3CR990-FX-95 Server,
  3CR990-FX-97 Server, 3C990B-TX-M, 3C990BSVR
  
  If you have a network (Ethernet) card of this type, say Y here.
  
  To compile this driver as a module, choose M here. The module
  will be called typhoon.

U300_TIMER
  Enables support for the U300 timer.

UACCE
  UACCE provides interface for the user process to access the hardware
  without interaction with the kernel space in data path.
  
  The user-space interface is described in
  include/uapi/misc/uacce/uacce.h
  
  See Documentation/misc-devices/uacce.rst for more details.
  
  If you don't know what to do here, say N.

UACCESS_MEMCPY
  No help

UAPI_HEADER_TEST
  Compile test headers exported to user-space to ensure they are
  self-contained, i.e. compilable as standalone units.
  
  If you are a developer or tester and want to ensure the exported
  headers are self-contained, say Y here. Otherwise, choose N.

UBIFS_ATIME_SUPPORT
  Originally UBIFS did not support atime, because it looked like a bad idea due
  increased flash wear. This option adds atime support and it is disabled by default
  to preserve the old behavior. If you enable this option, UBIFS starts updating atime,
  which means that file-system read operations will cause writes (inode atime
  updates). This may affect file-system performance and increase flash device wear,
  so be careful. How often atime is updated depends on the selected strategy:
  strictatime is the "heavy", relatime is "lighter", etc.
  
  If unsure, say 'N'

UBIFS_FS
  UBIFS is a file system for flash devices which works on top of UBI.

UBIFS_FS_ADVANCED_COMPR
  This option allows to explicitly choose which compressions, if any,
  are enabled in UBIFS. Removing compressors means inability to read
  existing file systems.
  
  If unsure, say 'N'.

UBIFS_FS_AUTHENTICATION
  Enable authentication support for UBIFS. This feature offers protection
  against offline changes for both data and metadata of the filesystem.
  If you say yes here you should also select a hashing algorithm such as
  sha256, these are not selected automatically since there are many
  different options.

UBIFS_FS_LZO
  LZO compressor is generally faster than zlib but compresses worse.
  Say 'Y' if unsure.

UBIFS_FS_SECURITY
  Security labels provide an access control facility to support Linux
  Security Models (LSMs) accepted by AppArmor, SELinux, Smack and TOMOYO
  Linux. This option enables an extended attribute handler for file
  security labels in the ubifs filesystem, so that it requires enabling
  the extended attribute support in advance.
  
  If you are not using a security module, say N.

UBIFS_FS_XATTR
  Saying Y here includes support for extended attributes (xattrs).
  Xattrs are name:value pairs associated with inodes by
  the kernel or by users (see the attr(5) manual page).
  
  If unsure, say Y.

UBIFS_FS_ZLIB
  Zlib compresses better than LZO but it is slower. Say 'Y' if unsure.

UBIFS_FS_ZSTD
  ZSTD compresses is a big win in speed over Zlib and
  in compression ratio over LZO. Say 'Y' if unsure.

UBSAN
  This option enables the Undefined Behaviour sanity checker.
  Compile-time instrumentation is used to detect various undefined
  behaviours at runtime. For more details, see:
  Documentation/dev-tools/ubsan.rst

UBSAN_ALIGNMENT
  This option enables the check of unaligned memory accesses.
  Enabling this option on architectures that support unaligned
  accesses may produce a lot of false positives.

UBSAN_ARRAY_BOUNDS
  No help

UBSAN_BOOL
  This option enables -fsanitize=bool which checks for boolean values being
  loaded that are neither 0 nor 1.

UBSAN_BOUNDS
  This option enables detection of directly indexed out of bounds
  array accesses, where the array size is known at compile time.
  Note that this does not protect array overflows via bad calls
  to the {str,mem}*cpy() family of functions (that is addressed
  by CONFIG_FORTIFY_SOURCE).

UBSAN_DIV_ZERO
  This option enables -fsanitize=integer-divide-by-zero which checks
  for integer division by zero. This is effectively redundant with the
  kernel's existing exception handling, though it can provide greater
  debugging information under CONFIG_UBSAN_REPORT_FULL.

UBSAN_ENUM
  This option enables -fsanitize=enum which checks for values being loaded
  into an enum that are outside the range of given values for the given enum.

UBSAN_KCOV_BROKEN
  Some versions of clang support either UBSAN or KCOV but not the
  combination of the two.
  See https://bugs.llvm.org/show_bug.cgi?id=45831 for the status
  in newer releases.

UBSAN_LOCAL_BOUNDS
  This option enables -fsanitize=local-bounds which traps when an
  exception/error is detected. Therefore, it may only be enabled
  with CONFIG_UBSAN_TRAP.
  
  Enabling this option detects errors due to accesses through a
  pointer that is derived from an object of a statically-known size,
  where an added offset (which may not be known statically) is
  out-of-bounds.

UBSAN_OBJECT_SIZE
  This option enables -fsanitize=object-size which checks for accesses
  beyond the end of objects where the optimizer can determine both the
  object being operated on and its size, usually seen with bad downcasts,
  or access to struct members from NULL pointers.

UBSAN_ONLY_BOUNDS
  This is a weird case: Clang's -fsanitize=bounds includes
  -fsanitize=local-bounds, but it's trapping-only, so for
  Clang, we must use -fsanitize=array-bounds when we want
  traditional array bounds checking enabled. For GCC, we
  want -fsanitize=bounds.

UBSAN_SANITIZE_ALL
  This option activates instrumentation for the entire kernel.
  If you don't enable this option, you have to explicitly specify
  UBSAN_SANITIZE := y for the files/directories you want to check for UB.
  Enabling this option will get kernel image size increased
  significantly.

UBSAN_SHIFT
  This option enables -fsanitize=shift which checks for bit-shift
  operations that overflow to the left or go switch to negative
  for signed types.

UBSAN_SIGNED_OVERFLOW
  This option enables -fsanitize=signed-integer-overflow which checks
  for overflow of any arithmetic operations with signed integers.

UBSAN_TRAP
  Building kernels with Sanitizer features enabled tends to grow
  the kernel size by around 5%, due to adding all the debugging
  text on failure paths. To avoid this, Sanitizer instrumentation
  can just issue a trap. This reduces the kernel size overhead but
  turns all warnings (including potentially harmless conditions)
  into full exceptions that abort the running kernel code
  (regardless of context, locks held, etc), which may destabilize
  the system. For some system builders this is an acceptable
  trade-off.

UBSAN_UNREACHABLE
  This option enables -fsanitize=unreachable which checks for control
  flow reaching an expected-to-be-unreachable position.

UBSAN_UNSIGNED_OVERFLOW
  This option enables -fsanitize=unsigned-integer-overflow which checks
  for overflow of any arithmetic operations with unsigned integers. This
  currently causes x86 to fail to boot.

UCB1400_CORE
  This enables support for the Philips UCB1400 core functions.
  The UCB1400 is an AC97 audio codec.
  
  To compile this driver as a module, choose M here: the
  module will be called ucb1400_core.

UCC
  No help

UCC_FAST
  This option provides qe_lib support to UCC fast
  protocols: HDLC, Ethernet, ATM, transparent

UCC_GETH
  This driver supports the Gigabit Ethernet mode of the QUICC Engine,
  which is available on some Freescale SOCs.

UCC_SLOW
  This option provides qe_lib support to UCC slow
  protocols: UART, BISYNC, QMC

UCLAMP_BUCKETS_COUNT
  Defines the number of clamp buckets to use. The range of each bucket
  will be SCHED_CAPACITY_SCALE/UCLAMP_BUCKETS_COUNT. The higher the
  number of clamp buckets the finer their granularity and the higher
  the precision of clamping aggregation and tracking at run-time.
  
  For example, with the minimum configuration value we will have 5
  clamp buckets tracking 20% utilization each. A 25% boosted tasks will
  be refcounted in the [20..39]% bucket and will set the bucket clamp
  effective value to 25%.
  If a second 30% boosted task should be co-scheduled on the same CPU,
  that task will be refcounted in the same bucket of the first task and
  it will boost the bucket clamp effective value to 30%.
  The clamp effective value of a bucket is reset to its nominal value
  (20% in the example above) when there are no more tasks refcounted in
  that bucket.
  
  An additional boost/capping margin can be added to some tasks. In the
  example above the 25% task will be boosted to 30% until it exits the
  CPU. If that should be considered not acceptable on certain systems,
  it's always possible to reduce the margin by increasing the number of
  clamp buckets to trade off used memory for run-time tracking
  precision.
  
  If in doubt, use the default value.

UCLAMP_TASK
  This feature enables the scheduler to track the clamped utilization
  of each CPU based on RUNNABLE tasks scheduled on that CPU.
  
  With this option, the user can specify the min and max CPU
  utilization allowed for RUNNABLE tasks. The max utilization defines
  the maximum frequency a task should use while the min utilization
  defines the minimum frequency it should use.
  
  Both min and max utilization clamp values are hints to the scheduler,
  aiming at improving its frequency selection policy, but they do not
  enforce or grant any specific bandwidth for tasks.
  
  If in doubt, say N.

UCLAMP_TASK_GROUP
  This feature enables the scheduler to track the clamped utilization
  of each CPU based on RUNNABLE tasks currently scheduled on that CPU.
  
  When this option is enabled, the user can specify a min and max
  CPU bandwidth which is allowed for each single task in a group.
  The max bandwidth allows to clamp the maximum frequency a task
  can use, while the min bandwidth allows to define a minimum
  frequency a task will always use.
  
  When task group based utilization clamping is enabled, an eventually
  specified task-specific clamp value is constrained by the cgroup
  specified clamp value. Both minimum and maximum task clamping cannot
  be bigger than the corresponding clamping defined at task group level.
  
  If in doubt, say N.

UCS2_STRING
  No help

UCSI_ACPI
  This driver enables UCSI support on platforms that expose UCSI
  interface as ACPI device. On new Intel Atom based platforms starting
  from Broxton SoCs and Core platforms stating from Skylake, UCSI is an
  ACPI enumerated device.
  
  To compile the driver as a module, choose M here: the module will be
  called ucsi_acpi

UCSI_CCG
  This driver enables UCSI support on platforms that expose a
  Cypress CCGx Type-C controller over I2C interface.
  
  To compile the driver as a module, choose M here: the module will be
  called ucsi_ccg.

UDF_FS
  This is a file system used on some CD-ROMs and DVDs. Since the
  file system is supported by multiple operating systems and is more
  compatible with standard unix file systems, it is also suitable for
  removable USB disks. Say Y if you intend to mount DVD discs or CDRW's
  written in packet mode, or if you want to use UDF for removable USB
  disks. Please read <file:Documentation/filesystems/udf.rst>.
  
  To compile this file system support as a module, choose M here: the
  module will be called udf.
  
  If unsure, say N.

UDMABUF
  A driver to let userspace turn memfd regions into dma-bufs.
  Qemu can use this to create host dmabufs for guest framebuffers.

UEFI_CPER
  No help

UEFI_CPER_ARM
  No help

UEFI_CPER_X86
  No help

UEVENT_HELPER
  The uevent helper program is forked by the kernel for
  every uevent.
  Before the switch to the netlink-based uevent source, this was
  used to hook hotplug scripts into kernel device events. It
  usually pointed to a shell script at /sbin/hotplug.
  This should not be used today, because usual systems create
  many events at bootup or device discovery in a very short time
  frame. One forked process per event can create so many processes
  that it creates a high system load, or on smaller systems
  it is known to create out-of-memory situations during bootup.

UEVENT_HELPER_PATH
  To disable user space helper program execution at by default
  specify an empty string here. This setting can still be altered
  via /proc/sys/kernel/hotplug or via /sys/kernel/uevent_helper
  later at runtime.

UFS_DEBUG
  If you are experiencing any problems with the UFS filesystem, say
  Y here.  This will result in _many_ additional debugging messages to be
  written to the system log.

UFS_FS
  BSD and derivate versions of Unix (such as SunOS, FreeBSD, NetBSD,
  OpenBSD and NeXTstep) use a file system called UFS. Some System V
  Unixes can create and mount hard disk partitions and diskettes using
  this file system as well. Saying Y here will allow you to read from
  these partitions; if you also want to write to them, say Y to the
  experimental "UFS file system write support", below. Please read the
  file <file:Documentation/admin-guide/ufs.rst> for more information.
  
  The recently released UFS2 variant (used in FreeBSD 5.x) is
  READ-ONLY supported.
  
  Note that this option is generally not needed for floppies, since a
  good portable way to transport files and directories between unixes
  (and even other operating systems) is given by the tar program ("man
  tar" or preferably "info tar").
  
  When accessing NeXTstep files, you may need to convert them from the
  NeXT character set to the Latin1 character set; use the program
  recode ("info recode") for this purpose.
  
  To compile the UFS file system support as a module, choose M here: the
  module will be called ufs.
  
  If you haven't heard about all of this before, it's safe to say N.

UFS_FS_WRITE
  Say Y here if you want to try writing to UFS partitions. This is
  experimental, so you should back up your UFS partitions beforehand.

UGETH_TX_ON_DEMAND
  No help

UHID
  Say Y here if you want to provide HID I/O Drivers from user-space.
  This allows to write I/O drivers in user-space and feed the data from
  the device into the kernel. The kernel parses the HID reports, loads the
  corresponding HID Device Driver or provides input devices on top of your
  user-space device.
  
  This driver cannot be used to parse HID-reports in user-space and write
  special HID-drivers. You should use hidraw for that.
  Instead, this driver allows to write the transport-layer driver in
  user-space like USB-HID and Bluetooth-HID do in kernel-space.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called uhid.

UID16
  This enables the legacy 16-bit UID syscall wrappers.

UIO
  Enable this to allow the userspace driver core code to be
  built.  This code allows userspace programs easy access to
  kernel interrupts and memory locations, allowing some drivers
  to be written in userspace.  Note that a small kernel driver
  is also required for interrupt handling to work properly.
  
  If you don't know what to do here, say N.

UIO_AEC
  UIO driver for the Adrienne Electronics Corporation PCI time
  code device.
  
  This device differs from other UIO devices since it uses I/O
  ports instead of memory mapped I/O. In order to make it
  possible for UIO to work with this device a utility, uioport,
  can be used to read and write the ports:
  
    git clone git://ifup.org/philips/uioport.git
  
  If you compile this as a module, it will be called uio_aec.

UIO_CIF
  Driver for Hilscher CIF DeviceNet and Profibus cards.  This
    driver requires a userspace component called cif that handles
  all of the heavy lifting and can be found at:
        <http://www.osadl.org/projects/downloads/UIO/user/>
  
  To compile this driver as a module, choose M here: the module
  will be called uio_cif.

UIO_DMEM_GENIRQ
  Platform driver for Userspace I/O devices, including generic
  interrupt handling code. Shared interrupts are not supported.
  
  Memory regions can be specified with the same platform device
  resources as the UIO_PDRV drivers, but dynamic regions can also
  be specified.
  The number and size of these regions is static,
  but the memory allocation is not performed until
  the associated device file is opened. The
  memory is freed once the uio device is closed.
  
  If you don't know what to do here, say N.

UIO_FSL_ELBC_GPCM
  Generic driver for accessing a peripheral connected to an eLBC port
  that is running in GPCM mode. GPCM is an interface for simple lower
  performance memories and memory-mapped devices. For devices using
  FCM or UPM eLBC modes, other device-specific drivers are available.

UIO_FSL_ELBC_GPCM_NETX5152
  This will add support for netX 51/52 devices connected via eLBC/GPCM.
  In particular, it implements interrupt handling. This can be used
  together with the userspace netX stack from Hilscher.
  
  Information about this hardware can be found at:
  http://www.hilscher.com/netx

UIO_HV_GENERIC
  Generic driver that you can bind, dynamically, to any
  Hyper-V VMBus device. It is useful to provide direct access
  to network and storage devices from userspace.
  
  If you compile this as a module, it will be called uio_hv_generic.

UIO_MF624
  Userspace I/O interface for the Humusoft MF624 PCI card.
  A sample userspace application using this driver is available
  (among other MF624 related information and software components)
  for download in a git repository:
  
    git clone git://rtime.felk.cvut.cz/mf6xx.git
  
  If you compile this as a module, it will be called uio_mf624.

UIO_NETX
  Driver for Hilscher NetX based fieldbus cards (cifX, comX).
  This driver requires a userspace component that comes with the card
  or is available from Hilscher (http://www.hilscher.com).
  
  To compile this driver as a module, choose M here; the module
  will be called uio_netx.

UIO_PCI_GENERIC
  Generic driver that you can bind, dynamically, to any
  PCI 2.3 compliant and PCI Express card. It is useful,
  primarily, for virtualization scenarios.
  If you compile this as a module, it will be called uio_pci_generic.

UIO_PDRV_GENIRQ
  Platform driver for Userspace I/O devices, including generic
  interrupt handling code. Shared interrupts are not supported.
  
  This kernel driver requires that the matching userspace driver
  handles interrupts in a special way. Userspace is responsible
  for acknowledging the hardware device if needed, and re-enabling
  interrupts in the interrupt controller using the write() syscall.
  
  If you don't know what to do here, say N.

UIO_PRUSS
  PRUSS driver for OMAPL138/DA850/AM18XX devices
  PRUSS driver requires user space components, examples and user space
  driver is available from below SVN repo - you may use anonymous login
  
  https://gforge.ti.com/gf/project/pru_sw/
  
  More info on API is available at below wiki
  
  http://processors.wiki.ti.com/index.php/PRU_Linux_Application_Loader
  
  To compile this driver as a module, choose M here: the module
  will be called uio_pruss.

UIO_SERCOS3
  Userspace I/O interface for the Sercos III PCI card from
  Automata GmbH. The userspace part of this driver will be
  available for download from the Automata GmbH web site.
  
  Automata GmbH:        http://www.automataweb.com
  Sercos III interface: http://www.sercos.com
  
  If you compile this as a module, it will be called uio_sercos3.

ULI526X
  This driver is for ULi M5261/M5263 10/100M Ethernet Controller
  (<http://www.nvidia.com/page/uli_drivers.html>).
  
  To compile this driver as a module, choose M here. The module will
  be called uli526x.

ULTRA
  If you have a network (Ethernet) card of this type, say Y here.
  
  Important: There have been many reports that, with some motherboards
  mixing an SMC Ultra and an Adaptec AHA154x SCSI card (or compatible,
  such as some BusLogic models) causes corruption problems with many
  operating systems. The Linux smc-ultra driver has a work-around for
  this but keep it in mind if you have such a SCSI card and have
  problems.
  
  To compile this driver as a module, choose M here. The module
  will be called smc-ultra.

ULTRIX_PARTITION
  Say Y here if you would like to be able to read the hard disk
  partition table format used by DEC (now Compaq) Ultrix machines.
  Otherwise, say N.

UML_RANDOM
  This option enables UML's "hardware" random number generator.  It
  attaches itself to the host's /dev/random, supplying as much entropy
  as the host has, rather than the small amount the UML gets from its
  own drivers. It registers itself as a rng-core driver thus providing
  a device which is usually called /dev/hwrng. This hardware random
  number generator does feed into the kernel's random number generator
  entropy pool.
  
  If unsure, say Y.

UML_WATCHDOG
  No help

UNICODE
  Say Y here to enable UTF-8 NFD normalization and NFD+CF casefolding
  support.

UNICODE_NORMALIZATION_SELFTEST
  No help

UNINLINE_SPIN_UNLOCK
  No help

UNIPHIER_EFUSE
  This is a simple driver to dump specified values of UniPhier SoC
  from eFuse.
  
  This driver can also be built as a module. If so, the module
  will be called nvmem-uniphier-efuse.

UNIPHIER_MDMAC
  Enable support for the MIO DMAC (Media I/O DMA controller) on the
  UniPhier platform.  This DMA controller is used as the external
  DMA engine of the SD/eMMC controllers of the LD4, Pro4, sLD8 SoCs.

UNIPHIER_SYSTEM_BUS
  Support for UniPhier System Bus, a simple external bus.  This is
  needed to use on-board devices connected to UniPhier SoCs.

UNIPHIER_THERMAL
  Enable this to plug in UniPhier on-chip PVT thermal driver into the
  thermal framework. The driver supports CPU thermal zone temperature
  reporting and a couple of trip points.

UNIPHIER_WATCHDOG
  Say Y here to include support watchdog timer embedded
  into the UniPhier system.
  
  To compile this driver as a module, choose M here: the
  module will be called uniphier_wdt.

UNIPHIER_XDMAC
  Enable support for the XDMAC (external DMA controller) on the
  UniPhier platform. This DMA controller can transfer data from
  memory to memory, memory to peripheral and peripheral to memory.

UNISYSSPAR
  Support for the Unisys SPAR drivers

UNISYS_VISORBUS
  The visorbus driver is a virtualized bus for the Unisys s-Par firmware.
  Virtualized devices allow Linux guests on a system to share disks and
  network cards that do not have SR-IOV support, and to be accessed using
  the partition desktop application. The visorbus driver is required to
  discover devices on an s-Par guest, and must be present for any other
  s-Par guest driver to function correctly.

UNISYS_VISORHBA
  The Unisys visorhba driver provides support for s-Par HBA
  devices exposed on the s-Par visorbus. When a message is sent
  to visorbus to create a HBA device, the probe function of
  visorhba is called to create the scsi device.
  If you say Y here, you will enable the Unisys visorhba driver.
  

UNISYS_VISORINPUT
  The Unisys s-Par visorinput driver provides a virtualized system
  console (keyboard and mouse) that is accessible through the
  s-Par firmware's user interface. s-Par provides video using the EFI
  GOP protocol, so If this driver is not present, the Linux guest should
  still boot with visible output in the partition desktop, but keyboard
  and mouse interaction will not be available.
  

UNISYS_VISORNIC
  The Unisys Visornic driver provides support for s-Par network
  devices exposed on the s-Par visorbus. When a message is sent
  to visorbus to create a network device, the probe function of
  visornic is called to create the netdev device. Networking on
  s-Par switches will not work if this driver is not selected.
  If you say Y here, you will enable the Unisys visornic driver.
  

UNIX
  If you say Y here, you will include support for Unix domain sockets;
  sockets are the standard Unix mechanism for establishing and
  accessing network connections.  Many commonly used programs such as
  the X Window system and syslog use these sockets even if your
  machine is not connected to any network.  Unless you are working on
  an embedded system or something similar, you therefore definitely
  want to say Y here.
  
  To compile this driver as a module, choose M here: the module will be
  called unix.  Note that several important services won't work
  correctly if you say M here and then neglect to load the module.
  
  Say Y unless you know what you are doing.

UNIX98_PTYS
  A pseudo terminal (PTY) is a software device consisting of two
  halves: a master and a slave. The slave device behaves identical to
  a physical terminal; the master device is used by a process to
  read data from and write data to the slave, thereby emulating a
  terminal. Typical programs for the master side are telnet servers
  and xterms.
  
  Linux has traditionally used the BSD-like names /dev/ptyxx for
  masters and /dev/ttyxx for slaves of pseudo terminals. This scheme
  has a number of problems. The GNU C library glibc 2.1 and later,
  however, supports the Unix98 naming standard: in order to acquire a
  pseudo terminal, a process opens /dev/ptmx; the number of the pseudo
  terminal is then made available to the process and the pseudo
  terminal slave can be accessed as /dev/pts/<number>. What was
  traditionally /dev/ttyp2 will then be /dev/pts/2, for example.
  
  All modern Linux systems use the Unix98 ptys.  Say Y unless
  you're on an embedded system and want to conserve memory.

UNIXWARE_DISKLABEL
  Like some systems, UnixWare uses its own slice table inside a
  partition (VTOC - Virtual Table of Contents). Its format is
  incompatible with all other OSes. Saying Y here allows you to read
  VTOC and further mount UnixWare partitions read-only from within
  Linux if you have also said Y to "UFS file system support" or
  "System V and Coherent file system support", above.
  
  This is mainly used to carry data from a UnixWare box to your
  Linux box via a removable medium like magneto-optical, ZIP or
  removable IDE drives. Note, however, that a good portable way to
  transport files and directories between unixes (and even other
  operating systems) is given by the tar program ("man tar" or
  preferably "info tar").
  
  If you don't know what all this is about, say N.

UNIX_DIAG
  Support for UNIX socket monitoring interface used by the ss tool.
  If unsure, say Y.

UNIX_SCM
  No help

UNUSED_KSYMS_WHITELIST
  By default, all unused exported symbols will be un-exported from the
  build when TRIM_UNUSED_KSYMS is selected.
  
  UNUSED_KSYMS_WHITELIST allows to whitelist symbols that must be kept
  exported at all times, even in absence of in-tree users. The value to
  set here is the path to a text file containing the list of symbols,
  one per line. The path can be absolute, or relative to the kernel
  source tree.

UNUSED_SYMBOLS
  Unused but exported symbols make the kernel needlessly bigger.  For
  that reason most of these unused exports will soon be removed.  This
  option is provided temporarily to provide a transition period in case
  some external kernel module needs one of these symbols anyway. If you
  encounter such a case in your module, consider if you are actually
  using the right API.  (rationale: since nobody in the kernel is using
  this in a module, there is a pretty good chance it's actually the
  wrong interface to use).  If you really need the symbol, please send a
  mail to the linux kernel mailing list mentioning the symbol and why
  you really need it, and what the merge plan to the mainline kernel for
  your module is.

UNWINDER_FRAME_POINTER
  This option enables the frame pointer unwinder for unwinding kernel
  stack traces.
  
  The unwinder itself is fast and it uses less RAM than the ORC
  unwinder, but the kernel text size will grow by ~3% and the kernel's
  overall performance will degrade by roughly 5-10%.

UNWINDER_GUESS
  This option enables the "guess" unwinder for unwinding kernel stack
  traces.  It scans the stack and reports every kernel text address it
  finds.  Some of the addresses it reports may be incorrect.
  
  While this option often produces false positives, it can still be
  useful in many cases.  Unlike the other unwinders, it has no runtime
  overhead.

UNWINDER_ORC
  This option enables the ORC (Oops Rewind Capability) unwinder for
  unwinding kernel stack traces.  It uses a custom data format which is
  a simplified version of the DWARF Call Frame Information standard.
  
  This unwinder is more accurate across interrupt entry frames than the
  frame pointer unwinder.  It also enables a 5-10% performance
  improvement across the entire kernel compared to frame pointers.
  
  Enabling this option will increase the kernel's runtime memory usage
  by roughly 2-4MB, depending on your kernel config.

UPROBES
  Uprobes is the user-space counterpart to kprobes: they
  enable instrumentation applications (such as 'perf probe')
  to establish unintrusive probes in user-space binaries and
  libraries, by executing handler functions when the probes
  are hit by user-space applications.
  
  ( These probes come in the form of single-byte breakpoints,
    managed by the kernel and kept transparent to the probed
    application. )

UPROBE_EVENTS
  This allows the user to add tracing events on top of userspace
  dynamic events (similar to tracepoints) on the fly via the trace
  events interface. Those events can be inserted wherever uprobes
  can probe, and record various registers.
  This option is required if you plan to use perf-probe subcommand
  of perf tools on user space applications.

UP_LATE_INIT
  No help

US5182D
  If you say yes here you get support for the UPISEMI US5182D
  ambient light and proximity sensor.
  
  This driver can also be built as a module.  If so, the module
  will be called us5182d.

USB
  Universal Serial Bus (USB) is a specification for a serial bus
  subsystem which offers higher speeds and more features than the
  traditional PC serial port.  The bus supplies power to peripherals
  and allows for hot swapping.  Up to 127 USB peripherals can be
  connected to a single USB host in a tree structure.
  
  The USB host is the root of the tree, the peripherals are the
  leaves and the inner nodes are special USB devices called hubs.
  Most PCs now have USB host ports, used to connect peripherals
  such as scanners, keyboards, mice, modems, cameras, disks,
  flash memory, network links, and printers to the PC.
  
  Say Y here if your computer has a host-side USB port and you want
  to use USB devices.  You then need to say Y to at least one of the
  Host Controller Driver (HCD) options below.  Choose a USB 1.1
  controller, such as "UHCI HCD support" or "OHCI HCD support",
  and "EHCI HCD (USB 2.0) support" except for older systems that
  do not have USB 2.0 support.  It doesn't normally hurt to select
  them all if you are not certain.
  
  If your system has a device-side USB port, used in the peripheral
  side of the USB protocol, see the "USB Gadget" framework instead.
  
  After choosing your HCD, then select drivers for the USB peripherals
  you'll be using.  You may want to check out the information provided
  in <file:Documentation/usb/> and especially the links given in
  <file:Documentation/usb/usb-help.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called usbcore.

USB4
  USB4 and Thunderbolt driver. USB4 is the public specification
  based on the Thunderbolt 3 protocol. This driver is required if
  you want to hotplug Thunderbolt and USB4 compliant devices on
  Apple hardware or on PCs with Intel Falcon Ridge or newer.
  
  To compile this driver a module, choose M here. The module will be
  called thunderbolt.

USB4_DEBUGFS_WRITE
  Enables writing to device configuration registers through
  debugfs interface.
  
  Only enable this if you know what you are doing! Never enable
  this for production systems or distro kernels.

USB4_DMA_TEST
  This allows sending and receiving DMA traffic through loopback
  connection. Loopback connection can be done by either special
  dongle that has TX/RX lines crossed, or by simply connecting a
  cable back to the host. Only enable this if you know what you
  are doing. Normal users and distro kernels should say N here.
  
  To compile this driver a module, choose M here. The module will be
  called thunderbolt_dma_test.

USB4_KUNIT_TEST
  No help

USB4_NET
  Select this if you want to create network between two computers
  over a USB4 and Thunderbolt cables. The driver supports Apple
  ThunderboltIP protocol and allows communication with any host
  supporting the same protocol including Windows and macOS.
  
  To compile this driver a module, choose M here. The module will be
  called thunderbolt-net.

USBIP_CORE
  This enables pushing USB packets over IP to allow remote
  machines direct access to USB devices. It provides the
  USB/IP core that is required by both drivers.
  
  For more details, and to get the userspace utility
  programs, please see <http://usbip.sourceforge.net/>.
  
  To compile this as a module, choose M here: the module will
  be called usbip-core.
  
  If unsure, say N.

USBIP_DEBUG
  This enables the debug messages from the USB/IP drivers.

USBIP_HOST
  This enables the USB/IP host driver, which is run on the
  machine that is sharing the USB devices.
  
  To compile this driver as a module, choose M here: the
  module will be called usbip-host.

USBIP_VHCI_HCD
  This enables the USB/IP virtual host controller driver,
  which is run on the remote machine.
  
  To compile this driver as a module, choose M here: the
  module will be called vhci-hcd.

USBIP_VHCI_HC_PORTS
  To increase number of ports available for USB/IP virtual
  host controller driver, this defines number of ports per
  USB/IP virtual host controller.

USBIP_VHCI_NR_HCS
  To increase number of ports available for USB/IP virtual
  host controller driver, this defines number of USB/IP
  virtual host controllers as if adding physical host
  controllers.

USBIP_VUDC
  This enables the USB/IP virtual USB device controller
  driver, which is run on the host machine, allowing the
  machine itself to act as a device.
  
  To compile this driver as a module, choose M here: the
  module will be called usbip-vudc.

USBPCWATCHDOG
  This is the driver for the Berkshire Products USB-PC Watchdog card.
  This card simply watches your kernel to make sure it doesn't freeze,
  and if it does, it reboots your computer after a certain amount of
  time. The card can also monitor the internal temperature of the PC.
  More info is available at <http://www.berkprod.com/usb_pc_watchdog.htm>.
  
  To compile this driver as a module, choose M here: the
  module will be called pcwd_usb.
  
  Most people will say N.

USB_ACM
  This driver supports USB modems and ISDN adapters which support the
  Communication Device Class Abstract Control Model interface.
  Please read <file:Documentation/usb/acm.rst> for details.
  
  If your modem only reports "Cls=ff(vend.)" in the descriptors in
  /sys/kernel/debug/usb/devices, then your modem will not work with this
  driver.
  
  To compile this driver as a module, choose M here: the
  module will be called cdc-acm.

USB_ADUTUX
  Say Y if you want to use an ADU device from Ontrak Control
  Systems.
  
  To compile this driver as a module, choose M here.  The module
  will be called adutux.

USB_AIRSPY
  This is a video4linux2 driver for AirSpy SDR device.
  
  To compile this driver as a module, choose M here: the
  module will be called airspy
  

USB_ALI_M5632
  Choose this option if you're using a host-to-host cable
  based on this design, which supports USB 2.0 high speed.

USB_AMD5536UDC
  The AMD5536 UDC is part of the AMD Geode CS5536, an x86 southbridge.
  It is a USB Highspeed DMA capable USB device controller. Beside ep0
  it provides 4 IN and 4 OUT endpoints (bulk or interrupt type).
  The UDC port supports OTG operation, and may be used as a host port
  if it's not being used to implement peripheral or OTG roles.
  
  This UDC is based on Synopsys USB device controller IP and selects
  CONFIG_USB_SNP_CORE option to build the core driver.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "amd5536udc" and force all
  gadget drivers to also be dynamically linked.

USB_AN2720
  Choose this option if you're using a host-to-host cable
  based on this design.  Note that AnchorChips is now a
  Cypress brand.

USB_ANNOUNCE_NEW_DEVICES
  Say Y here if you want the USB core to always announce the
  idVendor, idProduct, Manufacturer, Product, and SerialNumber
  strings for every new USB device to the syslog.  This option is
  usually used by distro vendors to help with debugging and to
  let users know what specific device was added to the machine
  in what location.
  
  If you do not want this kind of information sent to the system
  log, or have any doubts about this, say N here.

USB_APPLEDISPLAY
  Say Y here if you want to control the backlight of Apple Cinema
  Displays over USB. This driver provides a sysfs interface.

USB_ARCH_HAS_HCD
  No help

USB_ARMLINUX
  Choose this option to support the "usb-eth" networking driver
  used by most of the ARM Linux community with device controllers
  such as the SA-11x0 and PXA-25x UDCs, or the tftp capabilities
  in some PXA versions of the "blob" boot loader.
  
  Linux-based "Gumstix" PXA-25x based systems use this protocol
  to talk with other Linux systems.
  
  Although the ROMs shipped with Sharp Zaurus products use a
  different link level framing protocol, you can have them use
  this simpler protocol by installing a different kernel.

USB_ASPEED_VHUB
  USB peripheral controller for the Aspeed AST2400, AST2500 and
  AST2600 family SoCs supporting the "vHub" functionality and USB2.0

USB_AT91
  Many Atmel AT91 processors (such as the AT91RM2000) have a
  full speed USB Device Port with support for five configurable
  endpoints (plus endpoint zero).
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "at91_udc" and force all
  gadget drivers to also be dynamically linked.

USB_ATM
  Say Y here if you want to connect a USB Digital Subscriber Line (DSL)
  modem to your computer's USB port.  You will then need to choose your
  modem from the list below.
  
  To compile this driver as a module, choose M here: the
  module will be called usbatm.

USB_ATMEL_USBA
  USBA is the integrated high-speed USB Device controller on
  the AT32AP700x, some AT91SAM9 and AT91CAP9 processors from Atmel.
  
  The fifo_mode parameter is used to select endpoint allocation mode.
  fifo_mode = 0 is used to let the driver autoconfigure the endpoints.
  In this case, for ep1 2 banks are allocated if it works in isochronous
  mode and only 1 bank otherwise. For the rest of the endpoints
  only 1 bank is allocated.
  
  fifo_mode = 1 is a generic maximum fifo size (1024 bytes) configuration
  allowing the usage of ep1 - ep6
  
  fifo_mode = 2 is a generic performance maximum fifo size (1024 bytes)
  configuration allowing the usage of ep1 - ep3
  
  fifo_mode = 3 is a balanced performance configuration allowing the
  the usage of ep1 - ep8

USB_AUDIO
  This Gadget Audio driver is compatible with USB Audio Class
  specification 2.0. It implements 1 AudioControl interface,
  1 AudioStreaming Interface each for USB-OUT and USB-IN.
  Number of channels, sample rate and sample size can be
  specified as module parameters.
  This driver doesn't expect any real Audio codec to be present
  on the device - the audio streams are simply sinked to and
  sourced from a virtual ALSA sound card created. The user-space
  application may choose to do whatever it wants with the data
  received from the USB Host and choose to provide whatever it
  wants as audio data to the USB Host.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "g_audio".

USB_AUTOSUSPEND_DELAY
  The default autosuspend delay in seconds.  Can be overridden
  with the usbcore.autosuspend command line or module parameter.
  
  The default value Linux has always had is 2 seconds.  Change
  this value if you want a different delay and cannot modify
  the command line or module parameter.

USB_BCM63XX_UDC
  Many Broadcom BCM63xx chipsets (such as the BCM6328) have a
  high speed USB Device Port with support for four fixed endpoints
  (plus endpoint zero).
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "bcm63xx_udc".

USB_BDC_PCI
  Enable support for platforms which have BDC connected through PCIe, such as Lego3 FPGA platform.

USB_BDC_UDC
  BDC is Broadcom's USB3.0 device controller IP. If your SOC has a BDC IP
  then select this driver.
  
  Say "y" here to link the driver statically, or "m" to build a dynamically
  linked module called "bdc".

USB_BELKIN
  Choose this option if you're using a host-to-host cable
  based on this design:  two NetChip 2890 chips and an Atmel
  microcontroller, with LEDs that indicate traffic.

USB_BRCMSTB
  Enables support for XHCI, EHCI and OHCI host controllers
  found in Broadcom STB SoC's.
  
  To compile these drivers as modules, choose M here: the
  modules will be called ohci-platform.ko, ehci-brcm.ko and
  xhci-plat-hcd.ko
  
  Disabling this will keep the controllers and corresponding
  PHYs powered down.

USB_C67X00_HCD
  The Cypress C67x00 (EZ-Host/EZ-OTG) chips are dual-role
  host/peripheral/OTG USB controllers.
  
  Enable this option to support this chip in host controller mode.
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called c67x00.

USB_CATC
  Say Y if you want to use one of the following 10Mbps USB Ethernet
  device based on the EL1210A chip. Supported devices are:
  Belkin F5U011
  Belkin F5U111
  CATC NetMate
  CATC NetMate II
  smartBridges smartNIC
  
  This driver makes the adapter appear as a normal Ethernet interface,
  typically on eth0, if it is the only ethernet device, or perhaps on
  eth1, if you have a PCI or ISA ethernet card installed.
  
  To compile this driver as a module, choose M here: the
  module will be called catc.

USB_CDC_COMPOSITE
  This driver provides two functions in one configuration:
  a CDC Ethernet (ECM) link, and a CDC ACM (serial port) link.
  
  This driver requires four bulk and two interrupt endpoints,
  plus the ability to handle altsettings.  Not all peripheral
  controllers are that capable.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module.

USB_CDC_PHONET
  Choose this option to support the Phonet interface to a Nokia
  cellular modem, as found on most Nokia handsets with the
  "PC suite" USB profile.

USB_CDNS3
  Say Y here if your system has a Cadence USB3 dual-role controller.
  It supports: dual-role switch, Host-only, and Peripheral-only.
  
  If you choose to build this driver is a dynamically linked
  as module, the module will be called cdns3.ko.

USB_CDNS3_GADGET
  Say Y here to enable device controller functionality of the
  Cadence USBSS-DEV driver.
  
  This controller supports FF, HS and SS mode. It doesn't support
  LS and SSP mode.

USB_CDNS3_HOST
  Say Y here to enable host controller functionality of the
  Cadence driver.
  
  Host controller is compliant with XHCI so it will use
  standard XHCI driver.

USB_CDNS3_IMX
  Say 'Y' or 'M' here if you are building for NXP i.MX
  platforms that contain Cadence USB3 controller core.
  
  For example, imx8qm and imx8qxp.

USB_CDNS3_PCI_WRAP
  If you're using the USBSS Core IP with a PCIe, please say
  'Y' or 'M' here.
  
  If you choose to build this driver as module it will
  be dynamically linked and module will be called cdns3-pci.ko

USB_CDNS3_TI
  Say 'Y' or 'M' here if you are building for Texas Instruments
  platforms that contain Cadence USB3 controller core.
  
  e.g. J721e.

USB_CHAOSKEY
  Say Y here if you want to connect an AltusMetrum ChaosKey or
  Araneus Alea I to your computer's USB port. These devices
  are hardware random number generators which hook into the
  kernel entropy pool to ensure a large supply of entropy for
  /dev/random and /dev/urandom and also provides direct access
  via /dev/chaoskeyX
  
  To compile this driver as a module, choose M here: the
  module will be called chaoskey.

USB_CHIPIDEA
  Say Y here if your system has a dual role high speed USB
  controller based on ChipIdea silicon IP. It supports:
  Dual-role switch (ID, OTG FSM, sysfs), Host-only, and
  Peripheral-only.
  
  When compiled dynamically, the module will be called ci_hdrc.ko.

USB_CHIPIDEA_GENERIC
  No help

USB_CHIPIDEA_HOST
  Say Y here to enable host controller functionality of the
  ChipIdea driver.

USB_CHIPIDEA_IMX
  No help

USB_CHIPIDEA_MSM
  No help

USB_CHIPIDEA_PCI
  No help

USB_CHIPIDEA_TEGRA
  No help

USB_CHIPIDEA_UDC
  Say Y here to enable device controller functionality of the
  ChipIdea driver.

USB_CNS3XXX_EHCI
  This option is deprecated now and the driver was removed, use
  USB_EHCI_HCD_PLATFORM instead.
  
  Enable support for the CNS3XXX SOC's on-chip EHCI controller.
  It is needed for high-speed (480Mbit/sec) USB 2.0 device
  support.

USB_CNS3XXX_OHCI
  This option is deprecated now and the driver was removed, use
  USB_OHCI_HCD_PLATFORM instead.
  
  Enable support for the CNS3XXX SOC's on-chip OHCI controller.
  It is needed for low-speed USB 1.0 device support.

USB_COMMON
  No help

USB_CONFIGFS
  A Linux USB "gadget" can be set up through configfs.
  If this is the case, the USB functions (which from the host's
  perspective are seen as interfaces) and configurations are
  specified simply by creating appropriate directories in configfs.
  Associating functions with configurations is done by creating
  appropriate symbolic links.
  For more information see Documentation/usb/gadget_configfs.rst.

USB_CONFIGFS_ACM
  ACM serial link.  This function can be used to interoperate with
  MS-Windows hosts or with the Linux-USB "cdc-acm" driver.

USB_CONFIGFS_ECM
  The "Communication Device Class" (CDC) Ethernet Control Model.
  That protocol is often avoided with pure Ethernet adapters, in
  favor of simpler vendor-specific hardware, but is widely
  supported by firmware for smart network devices.

USB_CONFIGFS_ECM_SUBSET
  On hardware that can't implement the full protocol,
  a simple CDC subset is used, placing fewer demands on USB.

USB_CONFIGFS_EEM
  CDC EEM is a newer USB standard that is somewhat simpler than CDC ECM
  and therefore can be supported by more hardware.  Technically ECM and
  EEM are designed for different applications.  The ECM model extends
  the network interface to the target (e.g. a USB cable modem), and the
  EEM model is for mobile devices to communicate with hosts using
  ethernet over USB.  For Linux gadgets, however, the interface with
  the host is the same (a usbX device), so the differences are minimal.

USB_CONFIGFS_F_FS
  The Function Filesystem (FunctionFS) lets one create USB
  composite functions in user space in the same way GadgetFS
  lets one create USB gadgets in user space.  This allows creation
  of composite gadgets such that some of the functions are
  implemented in kernel space (for instance Ethernet, serial or
  mass storage) and other are implemented in user space.

USB_CONFIGFS_F_HID
  The HID function driver provides generic emulation of USB
  Human Interface Devices (HID).
  
  For more information, see Documentation/usb/gadget_hid.rst.

USB_CONFIGFS_F_LB_SS
  Loopback function loops back a configurable number of transfers.
  Sourcesink function either sinks and sources bulk data.
  It also implements control requests, for "chapter 9" conformance.
  Make this be the first driver you try using on top of any new
  USB peripheral controller driver.  Then you can use host-side
  test software, like the "usbtest" driver, to put your hardware
  and its driver through a basic set of functional tests.

USB_CONFIGFS_F_MIDI
  The MIDI Function acts as a USB Audio device, with one MIDI
  input and one MIDI output. These MIDI jacks appear as
  a sound "card" in the ALSA sound system. Other MIDI
  connections can then be made on the gadget system, using
  ALSA's aconnect utility etc.

USB_CONFIGFS_F_PRINTER
  The Printer function channels data between the USB host and a
  userspace program driving the print engine. The user space
  program reads and writes the device file /dev/g_printer<X> to
  receive or send printer data. It can use ioctl calls to
  the device file to get or set printer status.
  
  For more information, see Documentation/usb/gadget_printer.rst
  which includes sample code for accessing the device file.

USB_CONFIGFS_F_TCM
  This fabric is a USB gadget component. Two USB protocols are
  supported that is BBB or BOT (Bulk Only Transport) and UAS
  (USB Attached SCSI). BOT is advertised on alternative
  interface 0 (primary) and UAS is on alternative interface 1.
  Both protocols can work on USB2.0 and USB3.0.
  UAS utilizes the USB 3.0 feature called streams support.

USB_CONFIGFS_F_UAC1
  This Audio function implements 1 AudioControl interface,
  1 AudioStreaming Interface each for USB-OUT and USB-IN.
  This driver doesn't expect any real Audio codec to be present
  on the device - the audio streams are simply sinked to and
  sourced from a virtual ALSA sound card created. The user-space
  application may choose to do whatever it wants with the data
  received from the USB Host and choose to provide whatever it
  wants as audio data to the USB Host.

USB_CONFIGFS_F_UAC1_LEGACY
  This Audio function implements 1 AudioControl interface,
  1 AudioStreaming Interface each for USB-OUT and USB-IN.
  This is a legacy driver and requires a real Audio codec
  to be present on the device.

USB_CONFIGFS_F_UAC2
  This Audio function is compatible with USB Audio Class
  specification 2.0. It implements 1 AudioControl interface,
  1 AudioStreaming Interface each for USB-OUT and USB-IN.
  This driver doesn't expect any real Audio codec to be present
  on the device - the audio streams are simply sinked to and
  sourced from a virtual ALSA sound card created. The user-space
  application may choose to do whatever it wants with the data
  received from the USB Host and choose to provide whatever it
  wants as audio data to the USB Host.

USB_CONFIGFS_F_UVC
  The Webcam function acts as a composite USB Audio and Video Class
  device. It provides a userspace API to process UVC control requests
  and stream video data to the host.

USB_CONFIGFS_MASS_STORAGE
  The Mass Storage Gadget acts as a USB Mass Storage disk drive.
  As its storage repository it can use a regular file or a block
  device (in much the same way as the "loop" device driver),
  specified as a module parameter or sysfs option.

USB_CONFIGFS_NCM
  NCM is an advanced protocol for Ethernet encapsulation, allows
  grouping of several ethernet frames into one USB transfer and
  different alignment possibilities.

USB_CONFIGFS_OBEX
  You will need a user space OBEX server talking to /dev/ttyGS*,
  since the kernel itself doesn't implement the OBEX protocol.

USB_CONFIGFS_PHONET
  The Phonet protocol implementation for USB device.

USB_CONFIGFS_RNDIS
  Microsoft Windows XP bundles the "Remote NDIS" (RNDIS) protocol,
  and Microsoft provides redistributable binary RNDIS drivers for
  older versions of Windows.
  
  To make MS-Windows work with this, use Documentation/usb/linux.inf
  as the "driver info file".  For versions of MS-Windows older than
  XP, you'll need to download drivers from Microsoft's website; a URL
  is given in comments found in that info file.

USB_CONFIGFS_SERIAL
  The function talks to the Linux-USB generic serial driver.

USB_CONN_GPIO
  The driver supports USB role switch between host and device via GPIO
  based USB cable detection, used typically if an input GPIO is used
  to detect USB ID pin, and another input GPIO may be also used to detect
  Vbus pin at the same time, it also can be used to enable/disable
  device if an input GPIO is only used to detect Vbus pin.
  
  To compile the driver as a module, choose M here: the module will
  be called usb-conn-gpio.ko

USB_CXACRU
  Say Y here if you have an ADSL USB modem based on the Conexant
  AccessRunner chipset.  In order to use your modem you will need to
  install the firmware, extracted by the user space tools; see
  <http://accessrunner.sourceforge.net/> for details.
  
  To compile this driver as a module, choose M here: the
  module will be called cxacru.

USB_CYPRESS_CY7C63
  Say Y here if you want to connect a Cypress CY7C63xxx
  micro controller to your computer's USB port. Currently this
  driver supports the pre-programmed devices (incl. firmware)
  by AK Modul-Bus Computer GmbH.
  
  Please see: https://www.ak-modul-bus.de/stat/mikrocontroller.html
  
  To compile this driver as a module, choose M here: the
  module will be called cypress_cy7c63.

USB_CYTHERM
  Say Y here if you want to connect a Cypress USB thermometer
  device to your computer's USB port. This device is also known
  as the Cypress USB Starter kit or demo board. The Elektor
  magazine published a modified version of this device in issue
  #291.
  
  To compile this driver as a module, choose M here: the
  module will be called cytherm.

USB_DEFAULT_PERSIST
  Say N here if you don't want USB power session persistence
  enabled by default.  If you say N it will make suspended USB
  devices that lose power get reenumerated as if they had been
  unplugged, causing any mounted filesystems to be lost.  The
  persist feature can still be enabled for individual devices
  through the power/persist sysfs node. See
  Documentation/driver-api/usb/persist.rst for more info.
  
  If you have any questions about this, say Y here, only say N
  if you know exactly what you are doing.

USB_DSBR
  Say Y here if you want to connect this type of radio to your
  computer's USB port. Note that the audio is not digital, and
  you must connect the line out connector to a sound card or a
  set of speakers.
  
  To compile this driver as a module, choose M here: the
  module will be called dsbr100.

USB_DUMMY_HCD
  This host controller driver emulates USB, looping all data transfer
  requests back to a USB "gadget driver" in the same host.  The host
  side is the controller; the gadget side is the device.  Gadget drivers
  can be high, full, or low speed; and they have access to endpoints
  like those from NET2280, PXA2xx, or SA1100 hardware.
  
  This may help in some stages of creating a driver to embed in a
  Linux device, since it lets you debug several parts of the gadget
  driver without its hardware or drivers being involved.
  
  Since such a gadget side driver needs to interoperate with a host
  side Linux-USB device driver, this may help to debug both sides
  of a USB protocol stack.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "dummy_hcd" and force all
  gadget drivers to also be dynamically linked.

USB_DWC2
  Say Y here if your system has a Dual Role Hi-Speed USB
  controller based on the DesignWare HSOTG IP Core.
  
  For host mode, if you choose to build the driver as dynamically
  linked modules, the core module will be called dwc2.ko, the PCI
  bus interface module (if you have a PCI bus system) will be
  called dwc2_pci.ko, and the platform interface module (for
  controllers directly connected to the CPU) will be called
  dwc2_platform.ko. For all modes(host, gadget and dual-role), there
  will be an additional module named dwc2.ko.

USB_DWC2_DEBUG
  Say Y here to enable debugging messages in the DWC2 Driver.

USB_DWC2_DEBUG_PERIODIC
  Say N here to disable (verbose) debugging messages to be
  logged for periodic transfers. This allows better debugging of
  non-periodic transfers, but of course the debug logs will be
  incomplete. Note that this also disables some debug messages
  for which the transfer type cannot be deduced.

USB_DWC2_DUAL_ROLE
  Select this option if you want the driver to work in a dual-role
  mode. In this mode both host and gadget features are enabled, and
  the role will be determined by the cable that gets plugged-in. This
  option requires USB_GADGET to be enabled.

USB_DWC2_HOST
  The Designware USB2.0 high-speed host controller
  integrated into many SoCs. Select this option if you want the
  driver to operate in Host-only mode.

USB_DWC2_PCI
  The Designware USB2.0 PCI interface module for controllers
  connected to a PCI bus.

USB_DWC2_PERIPHERAL
  The Designware USB2.0 high-speed gadget controller
  integrated into many SoCs. Select this option if you want the
  driver to operate in Peripheral-only mode. This option requires
  USB_GADGET to be enabled.

USB_DWC2_TRACK_MISSED_SOFS
  Say Y here to enable logging of missed SOF events to the dmesg log.
  WARNING: This feature is still experimental.
  If in doubt, say N.

USB_DWC2_VERBOSE
  Say Y here to enable verbose debugging messages in the DWC2 Driver.
  WARNING: Enabling this will quickly fill your message log.
  If in doubt, say N.

USB_DWC3
  Say Y or M here if your system has a Dual Role SuperSpeed
  USB controller based on the DesignWare USB3 IP Core.
  
  If you choose to build this driver is a dynamically linked
  module, the module will be called dwc3.ko.

USB_DWC3_DUAL_ROLE
  This is the default mode of working of DWC3 controller where
  both host and gadget features are enabled.

USB_DWC3_EXYNOS
  Recent Exynos5 SoCs ship with one DesignWare Core USB3 IP inside,
  say 'Y' or 'M' if you have one such device.

USB_DWC3_GADGET
  Select this when you want to use DWC3 in gadget mode only,
  thereby the host feature will be regressed.

USB_DWC3_HAPS
  If you're using the DesignWare Core IP with a Synopsys PCIe HAPS
  platform, please say 'Y' or 'M' here.

USB_DWC3_HOST
  Select this when you want to use DWC3 in host mode only,
  thereby the gadget feature will be regressed.

USB_DWC3_KEYSTONE
  Support of USB2/3 functionality in TI Keystone2 and AM654 platforms.
  Say 'Y' or 'M' here if you have one such device

USB_DWC3_MESON_G12A
  Support USB2/3 functionality in Amlogic G12A platforms.
  Say 'Y' or 'M' if you have one such device.

USB_DWC3_OF_SIMPLE
  Support USB2/3 functionality in simple SoC integrations.
  Currently supports Xilinx and Qualcomm DWC USB3 IP.
  Say 'Y' or 'M' if you have one such device.

USB_DWC3_OMAP
  Some platforms from Texas Instruments like OMAP5, DRA7xxx and
  AM437x use this IP for USB2/3 functionality.
  
  Say 'Y' or 'M' here if you have one such device

USB_DWC3_PCI
  If you're using the DesignWare Core IP with a PCIe (but not HAPS
  platform), please say 'Y' or 'M' here.

USB_DWC3_QCOM
  Some Qualcomm SoCs use DesignWare Core IP for USB2/3
  functionality.
  This driver also handles Qscratch wrapper which is needed
  for peripheral mode support.
  Say 'Y' or 'M' if you have one such device.

USB_DWC3_ST
  STMicroelectronics SoCs with one DesignWare Core USB3 IP
  inside (i.e. STiH407).
  Say 'Y' or 'M' if you have one such device.

USB_DWC3_ULPI
  Select this if you have ULPI type PHY attached to your DWC3
  controller.

USB_DYNAMIC_MINORS
  If you say Y here, the USB subsystem will use dynamic minor
  allocation for any device that uses the USB major number.
  This means that you can have more than 16 of a single type
  of device (like USB printers).
  
  If you are unsure about this, say N here.

USB_EG20T
  This is a USB device driver for EG20T PCH.
  EG20T PCH is the platform controller hub that is used in Intel's
  general embedded platform. EG20T PCH has USB device interface.
  Using this interface, it is able to access system devices connected
  to USB device.
  This driver enables USB device function.
  USB device is a USB peripheral controller which
  supports both full and high speed USB 2.0 data transfers.
  This driver supports both control transfer and bulk transfer modes.
  This driver dose not support interrupt transfer or isochronous
  transfer modes.
  
  This driver also can be used for LAPIS Semiconductor's ML7213 which is
  for IVI(In-Vehicle Infotainment) use.
  ML7831 is for general purpose use.
  ML7213/ML7831 is companion chip for Intel Atom E6xx series.
  ML7213/ML7831 is completely compatible for Intel EG20T PCH.
  
  This driver can be used with Intel's Quark X1000 SOC platform

USB_EHCI_BIG_ENDIAN_DESC
  No help

USB_EHCI_BIG_ENDIAN_MMIO
  No help

USB_EHCI_BRCMSTB
  No help

USB_EHCI_EXYNOS
  Enable support for the Samsung Exynos SOC's on-chip EHCI controller.

USB_EHCI_FSL
  Variation of ARC USB block used in some Freescale chips.

USB_EHCI_HCD
  The Enhanced Host Controller Interface (EHCI) is standard for USB 2.0
  "high speed" (480 Mbit/sec, 60 Mbyte/sec) host controller hardware.
  If your USB host controller supports USB 2.0, you will likely want to
  configure this Host Controller Driver.
  
  EHCI controllers are packaged with "companion" host controllers (OHCI
  or UHCI) to handle USB 1.1 devices connected to root hub ports.  Ports
  will connect to EHCI if the device is high speed, otherwise they
  connect to a companion controller.  If you configure EHCI, you should
  probably configure the OHCI (for NEC and some other vendors) USB Host
  Controller Driver or UHCI (for Via motherboards) Host Controller
  Driver too.
  
  You may want to read <file:Documentation/usb/ehci.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called ehci-hcd.

USB_EHCI_HCD_AT91
  Enables support for the on-chip EHCI controller on
  Atmel chips.

USB_EHCI_HCD_NPCM7XX
  Enables support for the on-chip EHCI controller on
  Nuvoton NPCM7XX chips.

USB_EHCI_HCD_OMAP
  Enables support for the on-chip EHCI controller on
  OMAP3 and later chips.

USB_EHCI_HCD_ORION
  Enables support for the on-chip EHCI controller on Marvell's
  embedded ARM SoCs, including Orion, Kirkwood, Dove, Armada XP,
  Armada 370.  This is different from the EHCI implementation
  on Marvell's mobile PXA and MMP SoC, see "EHCI support for
  Marvell PXA/MMP USB controller" for those.

USB_EHCI_HCD_PLATFORM
  Adds an EHCI host driver for a generic platform device, which
  provides a memory space and an irq.
  
  If unsure, say N.

USB_EHCI_HCD_PMC_MSP
  Enables support for the onchip USB controller on the PMC_MSP7100 Family SoC's.
  If unsure, say N.

USB_EHCI_HCD_PPC_OF
  Enables support for the USB controller present on the PowerPC
  OpenFirmware platform bus.

USB_EHCI_HCD_SPEAR
  Enables support for the on-chip EHCI controller on
  ST SPEAr chips.

USB_EHCI_HCD_STI
  Enable support for the on-chip EHCI controller found on
  STMicroelectronics consumer electronics SoC's.

USB_EHCI_MV
  Enables support for Marvell (including PXA and MMP series) on-chip
  USB SPH and OTG controller. SPH is a single port host, and it can
  only be EHCI host. OTG is controller that can switch to host mode.
  Note that this driver will not work on Marvell's other EHCI
  controller used by the EBU-type SoCs including Orion, Kirkwood,
  Dova, Armada 370 and Armada XP. See "Support for Marvell EBU
  on-chip EHCI USB controller" for those.

USB_EHCI_PCI
  No help

USB_EHCI_ROOT_HUB_TT
  Some EHCI chips have vendor-specific extensions to integrate
  transaction translators, so that no OHCI or UHCI companion
  controller is needed.  It's safe to say "y" even if your
  controller doesn't support this feature.
  
  This supports the EHCI implementation that's originally
  from ARC, and has since changed hands a few times.

USB_EHCI_SH
  Enables support for the on-chip EHCI controller on the SuperH.
  If you use the PCI EHCI controller, this option is not necessary.

USB_EHCI_TEGRA
  This driver enables support for the internal USB Host Controllers
  found in NVIDIA Tegra SoCs. The controllers are EHCI compliant.

USB_EHCI_TT_NEWSCHED
  This changes the periodic scheduling code to fill more of the low
  and full speed bandwidth available from the Transaction Translator
  (TT) in USB 2.0 hubs.  Without this, only one transfer will be
  issued in each microframe, significantly reducing the number of
  periodic low/fullspeed transfers possible.
  
  If you have multiple periodic low/fullspeed devices connected to a
  highspeed USB hub which is connected to a highspeed USB Host
  Controller, and some of those devices will not work correctly
  (possibly due to "ENOSPC" or "-28" errors), say Y.  Conversely, if
  you have only one such device and it doesn't work, you could try
  saying N.
  
  If unsure, say Y.

USB_EHSET_TEST_FIXTURE
  Say Y here if you want to support the special test fixture device
  used for the USB-IF Embedded Host High-Speed Electrical Test procedure.
  
  When the test fixture is connected, it can enumerate as one of several
  VID/PID pairs. This driver then initiates a corresponding test mode on
  the downstream port to which the test fixture is attached.
  
  See <http://www.usb.org/developers/onthego/EHSET_v1.01.pdf> for more
  information.

USB_EMI26
  This driver loads firmware to Emagic EMI 2|6 low latency USB
  Audio interface.
  
  After firmware load the device is handled with standard linux
  USB Audio driver.
  
  To compile this driver as a module, choose M here: the
  module will be called emi26.

USB_EMI62
  This driver loads firmware to Emagic EMI 6|2m low latency USB
  Audio and Midi interface.
  
  After firmware load the device is handled with standard linux
  USB Audio driver.
  
  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called audio. If you want to compile it as a
  module, say M here and read <file:Documentation/kbuild/modules.rst>.

USB_EMXX
  The Emma Mobile series of SoCs from Renesas Electronics and
  former NEC Electronics include USB Function hardware.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "emxx_udc" and force all
  gadget drivers to also be dynamically linked.

USB_EPSON2888
  Choose this option to support the usb networking links used
  by some sample firmware from Epson.

USB_ETH
  This driver implements Ethernet style communication, in one of
  several ways:
  
   - The "Communication Device Class" (CDC) Ethernet Control Model.
     That protocol is often avoided with pure Ethernet adapters, in
     favor of simpler vendor-specific hardware, but is widely
     supported by firmware for smart network devices.
  
   - On hardware can't implement that protocol, a simple CDC subset
     is used, placing fewer demands on USB.
  
   - CDC Ethernet Emulation Model (EEM) is a newer standard that has
     a simpler interface that can be used by more USB hardware.
  
  RNDIS support is an additional option, more demanding than subset.
  
  Within the USB device, this gadget driver exposes a network device
  "usbX", where X depends on what other networking devices you have.
  Treat it like a two-node Ethernet link:  host, and gadget.
  
  The Linux-USB host-side "usbnet" driver interoperates with this
  driver, so that deep I/O queues can be supported.  On 2.4 kernels,
  use "CDCEther" instead, if you're using the CDC option. That CDC
  mode should also interoperate with standard CDC Ethernet class
  drivers on other host operating systems.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "g_ether".

USB_ETH_EEM
  CDC EEM is a newer USB standard that is somewhat simpler than CDC ECM
  and therefore can be supported by more hardware.  Technically ECM and
  EEM are designed for different applications.  The ECM model extends
  the network interface to the target (e.g. a USB cable modem), and the
  EEM model is for mobile devices to communicate with hosts using
  ethernet over USB.  For Linux gadgets, however, the interface with
  the host is the same (a usbX device), so the differences are minimal.
  
  If you say "y" here, the Ethernet gadget driver will use the EEM
  protocol rather than ECM.  If unsure, say "n".

USB_ETH_RNDIS
  Microsoft Windows XP bundles the "Remote NDIS" (RNDIS) protocol,
  and Microsoft provides redistributable binary RNDIS drivers for
  older versions of Windows.
  
  If you say "y" here, the Ethernet gadget driver will try to provide
  a second device configuration, supporting RNDIS to talk to such
  Microsoft USB hosts.
  
  To make MS-Windows work with this, use Documentation/usb/linux.inf
  as the "driver info file".  For versions of MS-Windows older than
  XP, you'll need to download drivers from Microsoft's website; a URL
  is given in comments found in that info file.

USB_EZUSB_FX2
  Say Y here if you need EZUSB device support.
  (Cypress FX/FX2/FX2LP microcontrollers)

USB_FEW_INIT_RETRIES
  When a new USB device is detected, the kernel tries very hard
  to initialize and enumerate it, with lots of nested retry loops.
  This almost always works, but when it fails it can take a long time.
  This option tells the kernel to make only a few retry attempts,
  so that the total time required for a failed initialization is
  no more than 30 seconds (as required by the USB OTG spec).
  
  Say N here unless you require new-device enumeration failure to
  occur within 30 seconds (as might be needed in an embedded
  application).

USB_FHCI_HCD
  This driver enables support for Freescale QE USB Host Controller
  (as found on MPC8360 and MPC8323 processors), the driver supports
  Full and Low Speed USB.

USB_FOTG210_HCD
  Faraday FOTG210 is an OTG controller which can be configured as
  an USB2.0 host. It is designed to meet USB2.0 EHCI specification
  with minor modification.
  
  To compile this driver as a module, choose M here: the
  module will be called fotg210-hcd.

USB_FOTG210_UDC
  Faraday USB2.0 OTG controller which can be configured as
  high speed or full speed USB device. This driver supppors
  Bulk Transfer so far.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "fotg210_udc".

USB_FSL_QE
  Some of Freescale PowerPC processors have a Full Speed
  QE/CPM2 USB controller, which support device mode with 4
  programmable endpoints. This driver supports the
  controller in the MPC8360 and MPC8272, and should work with
  controllers having QE or CPM2, given minor tweaks.
  
  Set CONFIG_USB_GADGET to "m" to build this driver as a
  dynamically linked module called "fsl_qe_udc".

USB_FSL_USB2
  Some of Freescale PowerPC and i.MX processors have a High Speed
  Dual-Role(DR) USB controller, which supports device mode.
  
  The number of programmable endpoints is different through
  SOC revisions.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "fsl_usb2_udc" and force
  all gadget drivers to also be dynamically linked.

USB_FTDI_ELAN
  ELAN's Uxxx series of adapters are USB to PCMCIA CardBus adapters.
  Currently only the U132 adapter is available.
  
  The U132 is specifically designed for CardBus PC cards that contain
  an OHCI host controller. Typical PC cards are the Orange Mobile 3G
  Option GlobeTrotter Fusion card. The U132 adapter will *NOT* work
  with PC cards that do not contain an OHCI controller. To use a U132
  adapter you will need this "ftdi-elan" module as well as the "u132-hcd"
  module which is a USB host controller driver that talks to the OHCI
  controller within CardBus card that are inserted in the U132 adapter.
  
  This driver has been tested with a CardBus OHCI USB adapter, and
  worked with a USB PEN Drive inserted into the first USB port of
  the PCCARD. A rather pointless thing to do, but useful for testing.
  
  See also the USB_U132_HCD entry "Elan U132 Adapter Host Controller"
  
  It is safe to say M here.

USB_FUNCTIONFS
  The Function Filesystem (FunctionFS) lets one create USB
  composite functions in user space in the same way GadgetFS
  lets one create USB gadgets in user space.  This allows creation
  of composite gadgets such that some of the functions are
  implemented in kernel space (for instance Ethernet, serial or
  mass storage) and other are implemented in user space.
  
  If you say "y" or "m" here you will be able what kind of
  configurations the gadget will provide.
  
  Say "y" to link the driver statically, or "m" to build
  a dynamically linked module called "g_ffs".

USB_FUNCTIONFS_ETH
  Include a configuration with CDC ECM function (Ethernet) and the
  Function Filesystem.

USB_FUNCTIONFS_GENERIC
  Include a configuration with the Function Filesystem alone with
  no Ethernet interface.

USB_FUNCTIONFS_RNDIS
  Include a configuration with RNDIS function (Ethernet) and the Filesystem.

USB_FUSB300
  Faraday usb device controller FUSB300 driver

USB_F_ACM
  No help

USB_F_ECM
  No help

USB_F_EEM
  No help

USB_F_FS
  No help

USB_F_HID
  No help

USB_F_MASS_STORAGE
  No help

USB_F_MIDI
  No help

USB_F_NCM
  No help

USB_F_OBEX
  No help

USB_F_PHONET
  No help

USB_F_PRINTER
  No help

USB_F_RNDIS
  No help

USB_F_SERIAL
  No help

USB_F_SS_LB
  No help

USB_F_SUBSET
  No help

USB_F_TCM
  No help

USB_F_UAC1
  No help

USB_F_UAC1_LEGACY
  No help

USB_F_UAC2
  No help

USB_F_UVC
  No help

USB_GADGET
  USB is a host/device protocol, organized with one host (such as a
  PC) controlling up to 127 peripheral devices.
  The USB hardware is asymmetric, which makes it easier to set up:
  you can't connect a "to-the-host" connector to a peripheral.
  
  Linux can run in the host, or in the peripheral.  In both cases
  you need a low level bus controller driver, and some software
  talking to it.  Peripheral controllers are often discrete silicon,
  or are integrated with the CPU in a microcontroller.  The more
  familiar host side controllers have names like "EHCI", "OHCI",
  or "UHCI", and are usually integrated into southbridges on PC
  motherboards.
  
  Enable this configuration option if you want to run Linux inside
  a USB peripheral device.  Configure one hardware driver for your
  peripheral/device side bus controller, and a "gadget driver" for
  your peripheral protocol.  (If you use modular gadget drivers,
  you may configure more than one.)
  
  If in doubt, say "N" and don't enable these drivers; most people
  don't have this kind of hardware (except maybe inside Linux PDAs).
  
  For more information, see <http://www.linux-usb.org/gadget> and
  the kernel documentation for this API.

USB_GADGETFS
  This driver provides a filesystem based API that lets user mode
  programs implement a single-configuration USB device, including
  endpoint I/O and control requests that don't relate to enumeration.
  All endpoints, transfer speeds, and transfer types supported by
  the hardware are available, through read() and write() calls.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "gadgetfs".

USB_GADGET_DEBUG
  Many controller and gadget drivers will print some debugging
  messages if you use this option to ask for those messages.
  
  Avoid enabling these messages, even if you're actively
  debugging such a driver.  Many drivers will emit so many
  messages that the driver timings are affected, which will
  either create new failure modes or remove the one you're
  trying to track down.  Never enable these messages for a
  production build.

USB_GADGET_DEBUG_FILES
  Some of the drivers in the "gadget" framework can expose
  debugging information in files such as /proc/driver/udc
  (for a peripheral controller).  The information in these
  files may help when you're troubleshooting or bringing up a
  driver on a new board.   Enable these files by choosing "Y"
  here.  If in doubt, or to conserve kernel memory, say "N".

USB_GADGET_DEBUG_FS
  Some of the drivers in the "gadget" framework can expose
  debugging information in files under /sys/kernel/debug/.
  The information in these files may help when you're
  troubleshooting or bringing up a driver on a new board.
  Enable these files by choosing "Y" here.  If in doubt, or
  to conserve kernel memory, say "N".

USB_GADGET_STORAGE_NUM_BUFFERS
  Usually 2 buffers are enough to establish a good buffering
  pipeline. The number may be increased in order to compensate
  for a bursty VFS behaviour. For instance there may be CPU wake up
  latencies that makes the VFS to appear bursty in a system with
  an CPU on-demand governor. Especially if DMA is doing IO to
  offload the CPU. In this case the CPU will go into power
  save often and spin up occasionally to move data within VFS.
  If selecting USB_GADGET_DEBUG_FILES this value may be set by
  a module parameter as well.
  If unsure, say 2.

USB_GADGET_TARGET
  This fabric is an USB gadget. Two USB protocols are supported that is
  BBB or BOT (Bulk Only Transport) and UAS (USB Attached SCSI). BOT is
  advertised on alternative interface 0 (primary) and UAS is on
  alternative interface 1. Both protocols can work on USB2.0 and USB3.0.
  UAS utilizes the USB 3.0 feature called streams support.

USB_GADGET_VBUS_DRAW
  Some devices need to draw power from USB when they are
  configured, perhaps to operate circuitry or to recharge
  batteries.  This is in addition to any local power supply,
  such as an AC adapter or batteries.
  
  Enter the maximum power your device draws through USB, in
  milliAmperes.  The permitted range of values is 2 - 500 mA;
  0 mA would be legal, but can make some hosts misbehave.
  
  This value will be used except for system-specific gadget
  drivers that have more specific information.

USB_GADGET_VERBOSE
  Many controller and gadget drivers will print verbose debugging
  messages if you use this option to ask for those messages.
  
  Avoid enabling these messages, even if you're actively
  debugging such a driver.  Many drivers will emit so many
  messages that the driver timings are affected, which will
  either create new failure modes or remove the one you're
  trying to track down.  Never enable these messages for a
  production build.

USB_GADGET_XILINX
  USB peripheral controller driver for Xilinx USB2 device.
  Xilinx USB2 device is a soft IP which supports both full
  and high speed USB 2.0 data transfers. It has seven configurable
  endpoints(bulk or interrupt or isochronous), as well as
  endpoint zero(for control transfers).
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "udc-xilinx" and force all
  gadget drivers to also be dynamically linked.

USB_GL860
  Say Y here if you want support for cameras based on the GL860 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_gl860.

USB_GOKU
  The Toshiba TC86C001 is a PCI device which includes controllers
  for full speed USB devices, IDE, I2C, SIO, plus a USB host (OHCI).
  
  The device controller has three configurable (bulk or interrupt)
  endpoints, plus endpoint zero (for control transfers).
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "goku_udc" and to force all
  gadget drivers to also be dynamically linked.

USB_GPIO_VBUS
  Provides simple GPIO VBUS sensing for controllers with an
  internal transceiver via the usb_phy interface, and
  optionally control of a D+ pullup GPIO as well as a VBUS
  current limit regulator.

USB_GR_UDC
  Select this to support Aeroflex Gaisler GRUSBDC cores from the GRLIB
  VHDL IP core library.

USB_GSPCA
  Say Y here if you want to enable selecting webcams based
  on the GSPCA framework.
  
  See <file:Documentation/admin-guide/media/gspca-cardlist.rst> for more info.
  
  This driver uses the Video For Linux API. You must say Y or M to
  "Video For Linux" to use this driver.
  
  To compile this driver as modules, choose M here: the
  module will be called gspca_main.

USB_GSPCA_BENQ
  Say Y here if you want support for the Benq DC E300 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_benq.

USB_GSPCA_CONEX
  Say Y here if you want support for cameras based on the Conexant chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_conex.

USB_GSPCA_CPIA1
  Say Y here if you want support for USB cameras based on the cpia
  CPiA chip. Note that you need at least version 0.6.4 of libv4l for
  applications to understand the videoformat generated by this driver.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_cpia1.

USB_GSPCA_DTCS033
  Say Y here if you want support for the Scopium camera
  for planetary astrophotography.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_dtcs033.

USB_GSPCA_ETOMS
  Say Y here if you want support for cameras based on the Etoms chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_etoms.

USB_GSPCA_FINEPIX
  Say Y here if you want support for cameras based on the FinePix chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_finepix.

USB_GSPCA_JEILINJ
  Say Y here if you want support for cameras based on this Jeilin chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_jeilinj.

USB_GSPCA_JL2005BCD
  Say Y here if you want support for cameras based the
  JL2005B, JL2005C, or JL2005D chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_jl2005bcd.

USB_GSPCA_KINECT
  Say Y here if you want support for the Microsoft Kinect sensor device.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_kinect.

USB_GSPCA_KONICA
  Say Y here if you want support for cameras based on the Konica chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_konica.

USB_GSPCA_MARS
  Say Y here if you want support for cameras based on the Mars chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_mars.

USB_GSPCA_MR97310A
  Say Y here if you want support for cameras based on the MR97310A chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_mr97310a.

USB_GSPCA_NW80X
  Say Y here if you want support for cameras based on the NW80x chips.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_nw80x.

USB_GSPCA_OV519
  Say Y here if you want support for cameras based on one of these:
  OV511(+), OV518(+), OV519, OVFX2, W9967CF, W9968CF
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_ov519.

USB_GSPCA_OV534
  Say Y here if you want support for cameras based on the OV534 chip
  and sensor OV772x (e.g. Sony Playstation EYE)
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_ov534.

USB_GSPCA_OV534_9
  Say Y here if you want support for cameras based on the OV534 chip
  and sensor OV965x (e.g. Hercules Dualpix)
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_ov534_9.

USB_GSPCA_PAC207
  Say Y here if you want support for cameras based on the PAC207 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_pac207.

USB_GSPCA_PAC7302
  Say Y here if you want support for cameras based on the PAC7302 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_pac7302.

USB_GSPCA_PAC7311
  Say Y here if you want support for cameras based on the PAC7311 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_pac7311.

USB_GSPCA_SE401
  Say Y here if you want support for cameras based on the
  Endpoints (formerly known as AOX) se401 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_se401.

USB_GSPCA_SN9C2028
  Say Y here if you want streaming support for Sonix SN9C2028 cameras.
  These are supported as stillcams in libgphoto2/camlibs/sonix.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_sn9c2028.

USB_GSPCA_SN9C20X
  Say Y here if you want support for cameras based on the
  sn9c20x chips (SN9C201 and SN9C202).
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_sn9c20x.

USB_GSPCA_SONIXB
  Say Y here if you want support for cameras based on the Sonix
  chips with Bayer format (SN9C101, SN9C102 and SN9C103).
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_sonixb.

USB_GSPCA_SONIXJ
  Say Y here if you want support for cameras based on the Sonix
  chips with JPEG format (SN9C102P, SN9C105 and >= SN9C110).
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_sonixj

USB_GSPCA_SPCA1528
  Say Y here if you want support for cameras based on the SPCA1528 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_spca1528.

USB_GSPCA_SPCA500
  Say Y here if you want support for cameras based on the SPCA500 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_spca500.

USB_GSPCA_SPCA501
  Say Y here if you want support for cameras based on the SPCA501 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_spca501.

USB_GSPCA_SPCA505
  Say Y here if you want support for cameras based on the SPCA505 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_spca505.

USB_GSPCA_SPCA506
  Say Y here if you want support for cameras based on the SPCA506 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_spca506.

USB_GSPCA_SPCA508
  Say Y here if you want support for cameras based on the SPCA508 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_spca508.

USB_GSPCA_SPCA561
  Say Y here if you want support for cameras based on the SPCA561 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_spca561.

USB_GSPCA_SQ905
  Say Y here if you want support for cameras based on the SQ905 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_sq905.

USB_GSPCA_SQ905C
  Say Y here if you want support for cameras based on the SQ905C chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_sq905c.

USB_GSPCA_SQ930X
  Say Y here if you want support for cameras based on the SQ930X chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_sq930x.

USB_GSPCA_STK014
  Say Y here if you want support for cameras based on the STK014 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_stk014.

USB_GSPCA_STK1135
  Say Y here if you want support for cameras based on the STK1135 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_stk1135.

USB_GSPCA_STV0680
  Say Y here if you want support for cameras based on the STV0680 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_stv0680.

USB_GSPCA_SUNPLUS
  Say Y here if you want support for cameras based on the Sunplus
  SPCA504(abc) SPCA533 SPCA536 chips.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_sunplus.

USB_GSPCA_T613
  Say Y here if you want support for cameras based on the T613 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_t613.

USB_GSPCA_TOPRO
  Say Y here if you want support for cameras based on the
  TP6800 and TP6810 Topro chips.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_topro.

USB_GSPCA_TOUPTEK
  Say Y here if you want support for cameras based on the ToupTek UCMOS
  / AmScope MU series camera.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_touptek.

USB_GSPCA_TV8532
  Say Y here if you want support for cameras based on the TV8531 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_tv8532.

USB_GSPCA_VC032X
  Say Y here if you want support for cameras based on the VC032X chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_vc032x.

USB_GSPCA_VICAM
  Say Y here if you want support for the 3com homeconnect camera
  (vicam).
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_vicam.

USB_GSPCA_XIRLINK_CIT
  Say Y here if you want support for Xirlink C-It bases cameras.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_xirlink_cit.

USB_GSPCA_ZC3XX
  Say Y here if you want support for cameras based on the ZC3XX chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_zc3xx.

USB_G_ACM_MS
  This driver provides two functions in one configuration:
  a mass storage, and a CDC ACM (serial port) link.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "g_acm_ms".

USB_G_DBGP
  This gadget emulates an EHCI Debug device. This is useful when you want
  to interact with an EHCI Debug Port.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "g_dbgp".

USB_G_DBGP_PRINTK
  Directly printk() received data. No interaction.

USB_G_DBGP_SERIAL
  Userland can interact using /dev/ttyGSxxx.

USB_G_HID
  The HID gadget driver provides generic emulation of USB
  Human Interface Devices (HID).
  
  For more information, see Documentation/usb/gadget_hid.rst which
  includes sample code for accessing the device files.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "g_hid".

USB_G_MULTI
  The Multifunction Composite Gadget provides Ethernet (RNDIS
  and/or CDC Ethernet), mass storage and ACM serial link
  interfaces.
  
  You will be asked to choose which of the two configurations is
  to be available in the gadget.  At least one configuration must
  be chosen to make the gadget usable.  Selecting more than one
  configuration will prevent Windows from automatically detecting
  the gadget as a composite gadget, so an INF file will be needed to
  use the gadget.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "g_multi".

USB_G_MULTI_CDC
  This option enables a configuration with CDC Ethernet (ECM), CDC
  Serial and Mass Storage functions available in the Multifunction
  Composite Gadget.
  
  If unsure, say "y".

USB_G_MULTI_RNDIS
  This option enables a configuration with RNDIS, CDC Serial and
  Mass Storage functions available in the Multifunction Composite
  Gadget.  This is the configuration dedicated for Windows since RNDIS
  is Microsoft's protocol.
  
  If unsure, say "y".

USB_G_NCM
  This driver implements USB CDC NCM subclass standard. NCM is
  an advanced protocol for Ethernet encapsulation, allows grouping
  of several ethernet frames into one USB transfer and different
  alignment possibilities.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "g_ncm".

USB_G_NOKIA
  The Nokia composite gadget provides support for acm, obex
  and phonet in only one composite gadget driver.
  
  It's only really useful for N900 hardware. If you're building
  a kernel for N900, say Y or M here. If unsure, say N.

USB_G_PRINTER
  The Printer Gadget channels data between the USB host and a
  userspace program driving the print engine. The user space
  program reads and writes the device file /dev/g_printer to
  receive or send printer data. It can use ioctl calls to
  the device file to get or set printer status.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "g_printer".
  
  For more information, see Documentation/usb/gadget_printer.rst
  which includes sample code for accessing the device file.

USB_G_SERIAL
  The Serial Gadget talks to the Linux-USB generic serial driver.
  This driver supports a CDC-ACM module option, which can be used
  to interoperate with MS-Windows hosts or with the Linux-USB
  "cdc-acm" driver.
  
  This driver also supports a CDC-OBEX option.  You will need a
  user space OBEX server talking to /dev/ttyGS*, since the kernel
  itself doesn't implement the OBEX protocol.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "g_serial".
  
  For more information, see Documentation/usb/gadget_serial.rst
  which includes instructions and a "driver info file" needed to
  make MS-Windows work with CDC ACM.

USB_G_WEBCAM
  The Webcam Gadget acts as a composite USB Audio and Video Class
  device. It provides a userspace API to process UVC control requests
  and stream video data to the host.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "g_webcam".

USB_HACKRF
  This is a video4linux2 driver for HackRF SDR device.
  
  To compile this driver as a module, choose M here: the
  module will be called hackrf
  

USB_HCD_BCMA
  Enable support for the EHCI and OCHI host controller on an bcma bus.
  It converts the bcma driver into two platform device drivers
  for ehci and ohci.
  
  If unsure, say N.

USB_HCD_SSB
  Enable support for the EHCI and OCHI host controller on an bcma bus.
  It converts the bcma driver into two platform device drivers
  for ehci and ohci.
  
  If unsure, say N.

USB_HCD_TEST_MODE
  Say 'Y' to enable additional software test modes that may be
  supported by the host controller drivers.
  
  One such test mode is the Embedded High-speed Host Electrical Test
  (EHSET) for EHCI host controller hardware, specifically the "Single
  Step Set Feature" test.  Typically this will be enabled for On-the-Go
  or embedded hosts that need to undergo USB-IF compliance testing with
  the aid of special testing hardware.  In the future, this may expand
  to include other tests that require support from a HCD driver.
  
  This option is of interest only to developers who need to validate
  their USB hardware designs.  It is not needed for normal use.  If
  unsure, say N.

USB_HID
  Say Y here if you want to connect USB keyboards,
  mice, joysticks, graphic tablets, or any other HID based devices
  to your computer via USB, as well as Uninterruptible Power Supply
  (UPS) and monitor control devices.
  
  You can't use this driver and the HIDBP (Boot Protocol) keyboard
  and mouse drivers at the same time. More information is available:
  <file:Documentation/input/input.rst>.
  
  If unsure, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called usbhid.

USB_HIDDEV
  Say Y here if you want to support HID devices (from the USB
  specification standpoint) that aren't strictly user interface
  devices, like monitor controls and Uninterruptable Power Supplies.
  
  This module supports these devices separately using a separate
  event interface on /dev/usb/hiddevX (char 180:96 to 180:111).
  
  If unsure, say Y.

USB_HSIC_USB3503
  This option enables support for SMSC USB3503 HSIC to USB 2.0 Driver.

USB_HSIC_USB4604
  This option enables support for SMSC USB4604 HSIC to USB 2.0 Driver.

USB_HSO
  Choose this option if you have an Option HSDPA/HSUPA card.
  These cards support downlink speeds of 7.2Mbps or greater.
  
  To compile this driver as a module, choose M here: the
  module will be called hso.

USB_HUB_USB251XB
  This option enables support for configuration via SMBus of the
  Microchip USB251x/xBi USB 2.0 Hub Controller series. Configuration
  parameters may be set in devicetree or platform data.
  Say Y or M here if you need to configure such a device via SMBus.

USB_IDMOUSE
  Say Y here if you want to use the fingerprint sensor on
  the Siemens ID Mouse. There is also a Siemens ID Mouse
  _Professional_, which has not been tested with this driver,
  but uses the same sensor and may therefore work.
  
  This driver creates an entry "/dev/idmouseX" or "/dev/usb/idmouseX",
  which can be used by, e.g.,"cat /dev/idmouse0 > fingerprint.pnm".
  
  See also <https://www.fs.tum.de/~echtler/idmouse/>.

USB_INVENTRA_DMA
  Enable DMA transfers using Mentor's engine.

USB_IOWARRIOR
  Say Y here if you want to support the IO Warrior devices from Code
  Mercenaries.  This includes support for the following devices:
          IO Warrior 40
        IO Warrior 24
        IO Warrior 56
        IO Warrior 24 Power Vampire
  
  To compile this driver as a module, choose M here: the
  module will be called iowarrior.

USB_IPHETH
  Module used to share Internet connection (tethering) from your
  iPhone (Original, 3G and 3GS) to your system.
  Note that you need userspace libraries and programs that are needed
  to pair your device with your system and that understand the iPhone
  protocol.
  
  For more information: http://giagio.com/wiki/moin.cgi/iPhoneEthernetDriver

USB_ISIGHTFW
  This driver loads firmware for USB Apple iSight cameras, allowing
  them to be driven by the USB video class driver available at
  http://linux-uvc.berlios.de
  
  The firmware for this driver must be extracted from the MacOS
  driver beforehand. Tools for doing so are available at
  http://bersace03.free.fr

USB_ISP116X_HCD
  The ISP1160 and ISP1161 chips are USB host controllers. Enable this
  option if your board has this chip. If unsure, say N.
  
  This driver does not support isochronous transfers.
  
  To compile this driver as a module, choose M here: the
  module will be called isp116x-hcd.

USB_ISP1301
  Say Y here to add support for the NXP ISP1301 USB transceiver driver.
  This chip is typically used as USB transceiver for USB host, gadget
  and OTG drivers (to be selected separately).
  
  To compile this driver as a module, choose M here: the
  module will be called phy-isp1301.

USB_ISP1362_HCD
  Supports the Philips ISP1362 chip as a host controller
  
  This driver does not support isochronous transfers.
  
  To compile this driver as a module, choose M here: the
  module will be called isp1362-hcd.

USB_ISP1760
  Say Y or M here if your system as an ISP1760 USB host controller
  or an ISP1761 USB dual-role controller.
  
  This driver does not support isochronous transfers or OTG.
  This USB controller is usually attached to a non-DMA-Master
  capable bus. NXP's eval kit brings this chip on PCI card
  where the chip itself is behind a PLB to simulate such
  a bus.
  
  To compile this driver as a module, choose M here: the
  module will be called isp1760.

USB_ISP1760_DUAL_ROLE
  Select this if you want to use the ISP1760 in both host and
  peripheral modes.

USB_ISP1760_GADGET_ROLE
  Select this if you want to use the ISP1760 in peripheral mode only.
  The host function will be disabled.

USB_ISP1760_HCD
  No help

USB_ISP1760_HOST_ROLE
  Select this if you want to use the ISP1760 in host mode only. The
  gadget function will be disabled.

USB_ISP1761_UDC
  No help

USB_KAWETH
  Say Y here if you want to use one of the following 10Mbps only
  USB Ethernet adapters based on the KLSI KL5KUSB101B chipset:
  3Com 3C19250
  ADS USB-10BT
  ATEN USB Ethernet
  ASANTE USB To Ethernet Adapter
  AOX Endpoints USB Ethernet
  Correga K.K.
  D-Link DSB-650C and DU-E10
  Entrega / Portgear E45
  I-O DATA USB-ET/T
  Jaton USB Ethernet Device Adapter
  Kingston Technology USB Ethernet Adapter
  Linksys USB10T
  Mobility USB-Ethernet Adapter
  NetGear EA-101
  Peracom Enet and Enet2
  Portsmith Express Ethernet Adapter
  Shark Pocket Adapter
  SMC 2202USB
  Sony Vaio port extender
  
  This driver is likely to work with most 10Mbps only USB Ethernet
  adapters, including some "no brand" devices. It does NOT work on
  SmartBridges smartNIC or on Belkin F5U111 devices - you should use
  the CATC NetMate driver for those. If you are not sure which one
  you need, select both, and the correct one should be selected for
  you.
  
  This driver makes the adapter appear as a normal Ethernet interface,
  typically on eth0, if it is the only ethernet device, or perhaps on
  eth1, if you have a PCI or ISA ethernet card installed.
  
  To compile this driver as a module, choose M here: the
  module will be called kaweth.

USB_KBD
  Say Y here only if you are absolutely sure that you don't want
  to use the generic HID driver for your USB keyboard and prefer
  to use the keyboard in its limited Boot Protocol mode instead.
  
  This is almost certainly not what you want.  This is mostly
  useful for embedded applications or simple keyboards.
  
  To compile this driver as a module, choose M here: the
  module will be called usbkbd.
  
  If even remotely unsure, say N.

USB_KC2190
  Choose this option if you're using a host-to-host cable
  with one of these chips.

USB_KEENE
  Say Y here if you want to connect this type of FM transmitter
  to your computer's USB port.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-keene.

USB_LAN78XX
  This option adds support for Microchip LAN78XX based USB 2
  & USB 3 10/100/1000 Ethernet adapters.
  LAN7800 : USB 3 to 10/100/1000 Ethernet adapter
  LAN7850 : USB 2 to 10/100/1000 Ethernet adapter
  LAN7801 : USB 3 to 10/100/1000 Ethernet adapter (MAC only)
  
  Proper PHY driver is required for LAN7801.
  
  To compile this driver as a module, choose M here: the
  module will be called lan78xx.

USB_LCD
  Say Y here if you want to connect an USBLCD to your computer's
  USB port. The USBLCD is a small USB interface board for
  alphanumeric LCD modules. See <http://www.usblcd.de/> for more
  information.
  
  To compile this driver as a module, choose M here: the
  module will be called usblcd.

USB_LD
  This driver is for generic USB devices that use interrupt transfers,
  like LD Didactic's USB devices.
  
  To compile this driver as a module, choose M here: the
  module will be called ldusb.

USB_LEDS_TRIGGER_USBPORT
  This driver allows LEDs to be controlled by USB events. Enabling this
  trigger allows specifying list of USB ports that should turn on LED
  when some USB device gets connected.

USB_LED_TRIG
  This option adds LED triggers for USB host and/or gadget activity.
  
  Say Y here if you are working on a system with led-class supported
  LEDs and you want to use them as activity indicators for USB host or
  gadget.

USB_LEGOTOWER
  Say Y here if you want to connect a USB Lego Infrared Tower to your
  computer's USB port.
  
  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called legousbtower. If you want to compile it as
  a module, say M here and read
  <file:Documentation/kbuild/modules.rst>.

USB_LGM_PHY
  Enable this to support Intel DWC3 PHY USB phy. This driver provides
  interface to interact with USB GEN-II and USB 3.x PHY that is part
  of the Intel network SOC.

USB_LIBCOMPOSITE
  No help

USB_LINK_LAYER_TEST
  This driver is for generating specific traffic for Super Speed Link
  Layer Test Device. Say Y only when you want to conduct USB Super Speed
  Link Layer Test for host controllers.

USB_LPC32XX
  This option selects the USB device controller in the LPC32xx SoC.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "lpc32xx_udc" and force all
  gadget drivers to also be dynamically linked.

USB_M5602
  Say Y here if you want support for cameras based on the
  ALi m5602 connected to various image sensors.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_m5602.

USB_M66592
  M66592 is a discrete USB peripheral controller chip that
  supports both full and high speed USB 2.0 data transfers.
  It has seven configurable endpoints, and endpoint zero.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "m66592_udc" and force all
  gadget drivers to also be dynamically linked.

USB_MA901
  Say Y here if you want to connect this type of radio to your
  computer's USB port. Note that the audio is not digital, and
  you must connect the line out connector to a sound card or a
  set of speakers or headphones.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-ma901.

USB_MASS_STORAGE
  The Mass Storage Gadget acts as a USB Mass Storage disk drive.
  As its storage repository it can use a regular file or a block
  device (in much the same way as the "loop" device driver),
  specified as a module parameter or sysfs option.
  
  This driver is a replacement for now removed File-backed
  Storage Gadget (g_file_storage).
  
  Say "y" to link the driver statically, or "m" to build
  a dynamically linked module called "g_mass_storage".

USB_MAX3420_UDC
  The Maxim MAX3420 chip supports USB2.0 full-speed peripheral mode.
  The MAX3420 is run by SPI interface, and hence the dependency.
  
  To compile this driver as a module, choose M here: the module will
  be called max3420_udc

USB_MAX3421_HCD
  The Maxim MAX3421E chip supports standard USB 2.0-compliant
  full-speed devices either in host or peripheral mode.  This
  driver supports the host-mode of the MAX3421E only.
  
  To compile this driver as a module, choose M here: the module will
  be called max3421-hcd.

USB_MDC800
  Say Y here if you want to connect this type of still camera to
  your computer's USB port. This driver can be used with gphoto 0.4.3
  and higher (look at <http://www.gphoto.org/>).
  To use it create a device node with "mknod /dev/mustek c 180 32" and
  configure it in your software.
  
  To compile this driver as a module, choose M here: the
  module will be called mdc800.

USB_MICROTEK
  Say Y here if you want support for the Microtek X6USB and
  possibly the Phantom 336CX, Phantom C6 and ScanMaker V6U(S)L.
  Support for anything but the X6 is experimental.
  Please report failures and successes.
  The scanner will appear as a scsi generic device to the rest
  of the system. Scsi support is required.
  This driver can be compiled as a module, called microtek.

USB_MIDI_GADGET
  The MIDI Gadget acts as a USB Audio device, with one MIDI
  input and one MIDI output. These MIDI jacks appear as
  a sound "card" in the ALSA sound system. Other MIDI
  connections can then be made on the gadget system, using
  ALSA's aconnect utility etc.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "g_midi".

USB_MON
  If you select this option, a component which captures the USB traffic
  between peripheral-specific drivers and HC drivers will be built.
  For more information, see <file:Documentation/usb/usbmon.rst>.
  
  If unsure, say Y, if allowed, otherwise M.

USB_MOUSE
  Say Y here only if you are absolutely sure that you don't want
  to use the generic HID driver for your USB mouse and prefer
  to use the mouse in its limited Boot Protocol mode instead.
  
  This is almost certainly not what you want.  This is mostly
  useful for embedded applications or simple mice.
  
  To compile this driver as a module, choose M here: the
  module will be called usbmouse.
  
  If even remotely unsure, say N.

USB_MR800
  Say Y here if you want to connect this type of radio to your
  computer's USB port. Note that the audio is not digital, and
  you must connect the line out connector to a sound card or a
  set of speakers.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-mr800.

USB_MSI2500
  No help

USB_MTU3
  Say Y or M here if your system runs on MediaTek SoCs with
  Dual Role SuperSpeed USB controller. You can select usb
  mode as peripheral role or host role, or both.
  
  If you don't know what this is, please say N.
  
  Choose M here to compile this driver as a module, and it
  will be called mtu3.ko.

USB_MTU3_DEBUG
  Say Y here to enable debugging messages in the MTU3 Driver.

USB_MTU3_DUAL_ROLE
  This is the default mode of working of MTU3 controller where
  both host and gadget features are enabled.

USB_MTU3_GADGET
  Select this when you want to use MTU3 in gadget mode only,
  thereby the host feature will be regressed.

USB_MTU3_HOST
  Select this when you want to use MTU3 in host mode only,
  thereby the gadget feature will be regressed.

USB_MUSB_AM35X
  No help

USB_MUSB_DA8XX
  No help

USB_MUSB_DAVINCI
  No help

USB_MUSB_DSPS
  No help

USB_MUSB_DUAL_ROLE
  This is the default mode of working of MUSB controller where
  both host and gadget features are enabled.

USB_MUSB_GADGET
  Select this when you want to use MUSB in gadget mode only,
  thereby the host feature will be regressed.

USB_MUSB_HDRC
  Say Y here if your system has a dual role high speed USB
  controller based on the Mentor Graphics silicon IP.  Then
  configure options to match your silicon and the board
  it's being used with, including the USB peripheral role,
  or the USB host role, or both.
  
  Texas Instruments families using this IP include DaVinci
  (35x, 644x ...), OMAP 243x, OMAP 3, and TUSB 6010.
  
  Allwinner SoCs using this IP include A10, A13, A20, ...
  
  If you do not know what this is, please say N.
  
  To compile this driver as a module, choose M here; the
  module will be called "musb-hdrc".

USB_MUSB_HOST
  Select this when you want to use MUSB in host mode only,
  thereby the gadget feature will be regressed.

USB_MUSB_JZ4740
  No help

USB_MUSB_MEDIATEK
  No help

USB_MUSB_OMAP2PLUS
  No help

USB_MUSB_SUNXI
  No help

USB_MUSB_TUSB6010
  No help

USB_MUSB_UX500
  No help

USB_MV_OTG
  Say Y here if you want to build Marvell USB OTG transceiver
  driver in kernel (including PXA and MMP series). This driver
  implements role switch between EHCI host driver and gadget driver.
  
  To compile this driver as a module, choose M here.

USB_MV_U3D
  MARVELL PXA2128 Processor series include a super speed USB3.0 device
  controller, which support super speed USB peripheral.

USB_MV_UDC
  Marvell Socs (including PXA and MMP series) include a high speed
  USB2.0 OTG controller, which can be configured as high speed or
  full speed USB peripheral.

USB_MXS_PHY
  Enable this to support the Freescale MXS USB PHY.
  
  MXS Phy is used by some of the i.MX SoCs, for example imx23/28/6x.

USB_NET2272
  PLX NET2272 is a USB peripheral controller which supports
  both full and high speed USB 2.0 data transfers.
  
  It has three configurable endpoints, as well as endpoint zero
  (for control transfer).
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "net2272" and force all
  gadget drivers to also be dynamically linked.

USB_NET2272_DMA
  The NET2272 part can optionally support an external DMA
  controller, but your board has to have support in the
  driver itself.
  
  If unsure, say "N" here.  The driver works fine in PIO mode.

USB_NET2280
  NetChip 2280 / 2282 is a PCI based USB peripheral controller which
  supports both full and high speed USB 2.0 data transfers.
  
  It has six configurable endpoints, as well as endpoint zero
  (for control transfers) and several endpoints with dedicated
  functions.
  
  PLX 2380 is a PCIe version of the PLX 2380.
  
  PLX 3380 / 3382 is a PCIe based USB peripheral controller which
  supports full, high speed USB 2.0 and super speed USB 3.0
  data transfers.
  
  It has eight configurable endpoints, as well as endpoint zero
  (for control transfers) and several endpoints with dedicated
  functions.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "net2280" and force all
  gadget drivers to also be dynamically linked.

USB_NET_AQC111
  This option adds support for Aquantia AQtion USB
  Ethernet adapters based on AQC111U/AQC112 chips.
  
  This driver should work with at least the following devices:
  * Aquantia AQtion USB to 5GbE

USB_NET_AX88179_178A
  This option adds support for ASIX AX88179 based USB 3.0/2.0
  to Gigabit Ethernet adapters.
  
  This driver should work with at least the following devices:
    * ASIX AX88179
    * ASIX AX88178A
    * Sitcomm LN-032
  
  This driver creates an interface named "ethX", where X depends on
  what other networking devices you have in use.

USB_NET_AX8817X
  This option adds support for ASIX AX88xxx based USB 2.0
  10/100 Ethernet adapters.
  
   This driver should work with at least the following devices:
    * Aten UC210T
    * ASIX AX88172
    * Billionton Systems, USB2AR
    * Billionton Systems, GUSB2AM-1G-B
    * Buffalo LUA-U2-KTX
    * Corega FEther USB2-TX
    * D-Link DUB-E100
    * Hawking UF200
    * Linksys USB200M
    * Netgear FA120
    * Sitecom LN-029
    * Sitecom LN-028
    * Intellinet USB 2.0 Ethernet
    * ST Lab USB 2.0 Ethernet
    * TrendNet TU2-ET100
  
  This driver creates an interface named "ethX", where X depends on
  what other networking devices you have in use.

USB_NET_CDCETHER
  This option supports devices conforming to the Communication Device
  Class (CDC) Ethernet Control Model, a specification that's easy to
  implement in device firmware.  The CDC specifications are available
  from <http://www.usb.org/>.
  
  CDC Ethernet is an implementation option for DOCSIS cable modems
  that support USB connectivity, used for non-Microsoft USB hosts.
  The Linux-USB CDC Ethernet Gadget driver is an open implementation.
   This driver should work with at least the following devices:
  
    * Dell Wireless 5530 HSPA
     * Ericsson PipeRider (all variants)
    * Ericsson Mobile Broadband Module (all variants)
     * Motorola (DM100 and SB4100)
     * Broadcom Cable Modem (reference design)
    * Toshiba (PCX1100U and F3507g/F3607gw)
    * ...
  
  This driver creates an interface named "ethX", where X depends on
  what other networking devices you have in use.  However, if the
  IEEE 802 "local assignment" bit is set in the address, a "usbX"
  name is used instead.

USB_NET_CDC_EEM
  This option supports devices conforming to the Communication Device
  Class (CDC) Ethernet Emulation Model, a specification that's easy to
  implement in device firmware.  The CDC EEM specifications are available
  from <http://www.usb.org/>.
  
  This driver creates an interface named "ethX", where X depends on
  what other networking devices you have in use.  However, if the
  IEEE 802 "local assignment" bit is set in the address, a "usbX"
  name is used instead.

USB_NET_CDC_MBIM
  This driver provides support for CDC MBIM (Mobile Broadband
  Interface Model) devices. The CDC MBIM specification is
  available from <http://www.usb.org/>.
  
  MBIM devices require configuration using the management
  protocol defined by the MBIM specification.  This driver
  provides unfiltered access to the MBIM control channel
  through the associated /dev/cdc-wdmx character device.
  
  To compile this driver as a module, choose M here: the
  module will be called cdc_mbim.

USB_NET_CDC_NCM
  This driver provides support for CDC NCM (Network Control Model
  Device USB Class Specification). The CDC NCM specification is
  available from <http://www.usb.org/>.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module.
  
  This driver should work with at least the following devices:
    * ST-Ericsson M700 LTE FDD/TDD Mobile Broadband Modem (ref. design)
    * ST-Ericsson M5730 HSPA+ Mobile Broadband Modem (reference design)
    * ST-Ericsson M570 HSPA+ Mobile Broadband Modem (reference design)
    * ST-Ericsson M343 HSPA Mobile Broadband Modem (reference design)
    * Ericsson F5521gw Mobile Broadband Module

USB_NET_CDC_SUBSET
  This driver module supports USB network devices that can work
  without any device-specific information.  Select it if you have
  one of these drivers.
  
  Note that while many USB host-to-host cables can work in this mode,
  that may mean not being able to talk to Win32 systems or more
  commonly not being able to handle certain events (like replugging
  the host on the other end) very well.  Also, these devices will
  not generally have permanently assigned Ethernet addresses.

USB_NET_CDC_SUBSET_ENABLE
  No help

USB_NET_CH9200
  Choose this option if you have a USB ethernet adapter with a QinHeng
  CH9200 chipset.
  
  To compile this driver as a module, choose M here: the
  module will be called ch9200.

USB_NET_CX82310_ETH
  Choose this option if you're using a Conexant CX82310-based ADSL
  router with USB ethernet port. This driver is for routers only,
  it will not work with ADSL modems (use cxacru driver instead).

USB_NET_DM9601
  This option adds support for Davicom DM9601/DM9620/DM9621A
  based USB 10/100 Ethernet adapters.

USB_NET_DRIVERS
  No help

USB_NET_GL620A
  Choose this option if you're using a host-to-host cable,
  or PC2PC motherboard, with this chip.
  
  Note that the half-duplex "GL620USB" is not supported.

USB_NET_HUAWEI_CDC_NCM
  This driver supports huawei-style NCM devices, that use NCM as a
  transport for other protocols, usually an embedded AT channel.
  Good examples are:
  * Huawei E3131
  * Huawei E3251
  
  To compile this driver as a module, choose M here: the module will be
  called huawei_cdc_ncm.ko.

USB_NET_INT51X1
  Choose this option if you're using a 14Mb USB-based PLC
  (Powerline Communications) solution with an Intellon
  INT51x1/INT5200 chip, like the "devolo dLan duo".

USB_NET_KALMIA
  Choose this option if you have a Samsung Kalmia based USB modem
  as Samsung GT-B3730.
  
  To compile this driver as a module, choose M here: the
  module will be called kalmia.

USB_NET_MCS7830
  Choose this option if you're using a 10/100 Ethernet USB2
  adapter based on the MosChip 7830 controller. This includes
  adapters marketed under the DeLOCK brand.

USB_NET_NET1080
  Choose this option if you're using a host-to-host cable based
  on this design:  one NetChip 1080 chip and supporting logic,
  optionally with LEDs that indicate traffic

USB_NET_PLUSB
  Choose this option if you're using a host-to-host cable
  with one of these chips.

USB_NET_QMI_WWAN
  Support WWAN LTE/3G devices based on Qualcomm Mobile Data Modem
  (MDM) chipsets.  Examples of such devices are
    * Huawei E392/E398
  
  This driver will only drive the ethernet part of the chips.
  The devices require additional configuration to be usable.
  Multiple management interfaces with linux drivers are
  available:
  
    * option: AT commands on /dev/ttyUSBx
    * cdc-wdm: Qualcomm MSM Interface (QMI) protocol on /dev/cdc-wdmx
  
  A modem manager with support for QMI is recommended.
  
  To compile this driver as a module, choose M here: the
  module will be called qmi_wwan.

USB_NET_RNDIS_HOST
  This option enables hosting "Remote NDIS" USB networking links,
  as encouraged by Microsoft (instead of CDC Ethernet!) for use in
  various devices that may only support this protocol.  A variant
  of this protocol (with even less public documentation) seems to
  be at the root of Microsoft's "ActiveSync" too.
  
  Avoid using this protocol unless you have no better options.
  The protocol specification is incomplete, and is controlled by
  (and for) Microsoft; it isn't an "Open" ecosystem or market.

USB_NET_RNDIS_WLAN
  This is a driver for wireless RNDIS devices.
  These are USB based adapters found in devices such as:
  
  Buffalo WLI-U2-KG125S
  U.S. Robotics USR5421
  Belkin F5D7051
  Linksys WUSB54GSv2
  Linksys WUSB54GSC
  Asus WL169gE
  Eminent EM4045
  BT Voyager 1055
  Linksys WUSB54GSv1
  U.S. Robotics USR5420
  BUFFALO WLI-USB-G54
  
  All of these devices are based on Broadcom 4320 chip which is the
  only wireless RNDIS chip known to date.
  
  If you choose to build a module, it'll be called rndis_wlan.

USB_NET_SMSC75XX
  This option adds support for SMSC LAN75XX based USB 2.0
  Gigabit Ethernet adapters.

USB_NET_SMSC95XX
  This option adds support for SMSC LAN95XX based USB 2.0
  10/100 Ethernet adapters.

USB_NET_SR9700
  This option adds support for CoreChip-sz SR9700 based USB 1.1
  10/100 Ethernet adapters.

USB_NET_SR9800
  Say Y if you want to use one of the following 100Mbps USB Ethernet
  device based on the CoreChip-sz SR9800 chip.
  
  This driver makes the adapter appear as a normal Ethernet interface,
  typically on eth0, if it is the only ethernet device, or perhaps on
  eth1, if you have a PCI or ISA ethernet card installed.
  
  To compile this driver as a module, choose M here: the
  module will be called sr9800.

USB_NET_ZAURUS
  Choose this option to support the usb networking links used by
  Zaurus models like the SL-5000D, SL-5500, SL-5600, A-300, B-500.
  This also supports some related device firmware, as used in some
  PDAs from Olympus and some cell phones from Motorola.
  
  If you install an alternate image, such as the Linux 2.6 based
  versions of OpenZaurus, you should no longer need to support this
  protocol.  Only the "eth-fd" or "net_fd" drivers in these devices
  really need this non-conformant variant of CDC Ethernet (or in
  some cases CDC MDLM) protocol, not "g_ether".

USB_OCTEON_EHCI
  This option is deprecated now and the driver was removed, use
  USB_EHCI_HCD_PLATFORM instead.
  
  Enable support for the Octeon II SOC's on-chip EHCI
  controller.  It is needed for high-speed (480Mbit/sec)
  USB 2.0 device support.  All CN6XXX based chips with USB are
  supported.

USB_OCTEON_OHCI
  This option is deprecated now and the driver was removed, use
  USB_OHCI_HCD_PLATFORM instead.
  
  Enable support for the Octeon II SOC's on-chip OHCI
  controller.  It is needed for low-speed USB 1.0 device
  support.  All CN6XXX based chips with USB are supported.

USB_OHCI_BIG_ENDIAN_DESC
  No help

USB_OHCI_BIG_ENDIAN_MMIO
  No help

USB_OHCI_EXYNOS
  Enable support for the Samsung Exynos SOC's on-chip OHCI controller.

USB_OHCI_HCD
  The Open Host Controller Interface (OHCI) is a standard for accessing
  USB 1.1 host controller hardware.  It does more in hardware than Intel's
  UHCI specification.  If your USB host controller follows the OHCI spec,
  say Y.  On most non-x86 systems, and on x86 hardware that's not using a
  USB controller from Intel or VIA, this is appropriate.  If your host
  controller doesn't use PCI, this is probably appropriate.  For a PCI
  based system where you're not sure, the "lspci -v" entry will list the
  right "prog-if" for your USB controller(s):  EHCI, OHCI, or UHCI.
  
  To compile this driver as a module, choose M here: the
  module will be called ohci-hcd.

USB_OHCI_HCD_AT91
  Enables support for the on-chip OHCI controller on
  Atmel chips.

USB_OHCI_HCD_DAVINCI
  Enables support for the DaVinci DA8xx integrated OHCI
  controller. This driver cannot currently be a loadable
  module because it lacks a proper PHY abstraction.

USB_OHCI_HCD_LPC32XX
  Enables support for the on-chip OHCI controller on
  NXP chips.

USB_OHCI_HCD_OMAP1
  Enables support for the OHCI controller on OMAP1/2 chips.

USB_OHCI_HCD_OMAP3
  This option is deprecated now and the driver was removed, use
  USB_OHCI_HCD_PLATFORM instead.
  
  Enables support for the on-chip OHCI controller on
  OMAP3 and later chips.

USB_OHCI_HCD_PCI
  Enables support for PCI-bus plug-in USB controller cards.
  If unsure, say Y.

USB_OHCI_HCD_PLATFORM
  Adds an OHCI host driver for a generic platform device, which
  provides a memory space and an irq.
  
  If unsure, say N.

USB_OHCI_HCD_PPC_OF
  No help

USB_OHCI_HCD_PPC_OF_BE
  Enables support for big-endian USB controllers present on the
  OpenFirmware platform bus.

USB_OHCI_HCD_PPC_OF_LE
  Enables support for little-endian USB controllers present on the
  OpenFirmware platform bus.

USB_OHCI_HCD_PXA27X
  Enables support for the on-chip OHCI controller on
  PXA27x/PXA3xx chips.

USB_OHCI_HCD_S3C2410
  Enables support for the on-chip OHCI controller on
  S3C24xx/S3C64xx chips.

USB_OHCI_HCD_SPEAR
  Enables support for the on-chip OHCI controller on
  ST SPEAr chips.

USB_OHCI_HCD_SSB
  This option is deprecated now and the driver was removed, use
  USB_HCD_SSB and USB_OHCI_HCD_PLATFORM instead.
  
  Support for the Sonics Silicon Backplane (SSB) attached
  Broadcom USB OHCI core.
  
  This device is present in some embedded devices with
  Broadcom based SSB bus.
  
  If unsure, say N.

USB_OHCI_HCD_STI
  Enable support for the on-chip OHCI controller found on
  STMicroelectronics consumer electronics SoC's.

USB_OHCI_LITTLE_ENDIAN
  No help

USB_OHCI_SH
  This option is deprecated now and the driver was removed, use
  USB_OHCI_HCD_PLATFORM instead.
  
  Enables support for the on-chip OHCI controller on the SuperH.
  If you use the PCI OHCI controller, this option is not necessary.

USB_OMAP
  Many Texas Instruments OMAP processors have flexible full
  speed USB device controllers, with support for up to 30
  endpoints (plus endpoint zero).  This driver supports the
  controller in the OMAP 1611, and should work with controllers
  in other OMAP processors too, given minor tweaks.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "omap_udc" and force all
  gadget drivers to also be dynamically linked.

USB_OTG
  The most notable feature of USB OTG is support for a
  "Dual-Role" device, which can act as either a device
  or a host. The initial role is decided by the type of
  plug inserted and can be changed later when two dual
  role devices talk to each other.
  
  Select this only if your board has Mini-AB/Micro-AB
  connector.

USB_OTG_DISABLE_EXTERNAL_HUB
  If you say Y here, then Linux will refuse to enumerate
  external hubs.  OTG hosts are allowed to reduce hardware
  and software costs by not supporting external hubs.  So
  are "Embedded Hosts" that don't offer OTG support.

USB_OTG_FSM
  Implements OTG Finite State Machine as specified in On-The-Go
  and Embedded Host Supplement to the USB Revision 2.0 Specification.

USB_OTG_PRODUCTLIST
  If you say Y here, the "otg_productlist.h" file will be used as a
  product list, so USB peripherals not listed there will be
  rejected during enumeration.  This behavior is required by the
  USB OTG and EH specification for all devices not on your product's
  "Targeted Peripherals List".  "Embedded Hosts" are likewise
  allowed to support only a limited number of peripherals.

USB_OXU210HP_HCD
  The OXU210HP is an USB host/OTG/device controller. Enable this
  option if your board has this chip. If unsure, say N.
  
  This driver does not support isochronous transfers and doesn't
  implement OTG nor USB device controllers.
  
  To compile this driver as a module, choose M here: the
  module will be called oxu210hp-hcd.

USB_PCI
  Many embedded system SOCs (e.g. freescale T2080) have both
  PCI and USB modules with the USB module directly controlled by
  registers and having no relationship to the PCI module.
  
  If you have such a device you may say N here and PCI related code
  will not be built in the USB driver.

USB_PEGASUS
  Say Y here if you know you have Pegasus or Pegasus-II based adapter.
  If in doubt then look at <file:drivers/net/usb/pegasus.h> for the
  complete list of supported devices.
  
  If your particular adapter is not in the list and you are _sure_ it
  is Pegasus or Pegasus II based then send me
  <petkan@users.sourceforge.net> vendor and device IDs.
  
  To compile this driver as a module, choose M here: the
  module will be called pegasus.

USB_PHY
  No help

USB_PRINTER
  Say Y here if you want to connect a USB printer to your computer's
  USB port.
  
  To compile this driver as a module, choose M here: the
  module will be called usblp.

USB_PULSE8_CEC
  This is a cec driver for the Pulse Eight HDMI CEC device.
  
  To compile this driver as a module, choose M here: the
  module will be called pulse8-cec.

USB_PWC
  Say Y or M here if you want to use one of these Philips & OEM
  webcams:
   * Philips PCA645, PCA646
   * Philips PCVC675, PCVC680, PCVC690
   * Philips PCVC720/40, PCVC730, PCVC740, PCVC750
   * Philips SPC900NC
   * Askey VC010
   * Logitech QuickCam Pro 3000, 4000, 'Zoom', 'Notebook Pro'
     and 'Orbit'/'Sphere'
   * Samsung MPC-C10, MPC-C30
   * Creative Webcam 5, Pro Ex
   * SOTEC Afina Eye
   * Visionite VCS-UC300, VCS-UM100
  
  The PCA635, PCVC665 and PCVC720/20 are not supported by this driver
  and never will be, but the 665 and 720/20 are supported by other
  drivers.
  
  Some newer logitech webcams are not handled by this driver but by the
  Usb Video Class driver (linux-uvc).
  
  The built-in microphone is enabled by selecting USB Audio support.
  
  To compile this driver as a module, choose M here: the
  module will be called pwc.

USB_PWC_DEBUG
  Say Y here in order to have the pwc driver generate verbose debugging
  messages.
  A special module options 'trace' is used to control the verbosity.

USB_PWC_INPUT_EVDEV
  This option makes USB Philips cameras register the snapshot button as
  an input device to report button events.
  
  If you are in doubt, say Y.

USB_PXA25X
  Intel's PXA 25x series XScale ARM-5TE processors include
  an integrated full speed USB 1.1 device controller.  The
  controller in the IXP 4xx series is register-compatible.
  
  It has fifteen fixed-function endpoints, as well as endpoint
  zero (for control transfers).
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "pxa25x_udc" and force all
  gadget drivers to also be dynamically linked.

USB_PXA25X_SMALL
  No help

USB_PXA27X
  Intel's PXA 27x series XScale ARM v5TE processors include
  an integrated full speed USB 1.1 device controller.
  
  It has up to 23 endpoints, as well as endpoint zero (for
  control transfers).
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "pxa27x_udc" and force all
  gadget drivers to also be dynamically linked.

USB_R8A66597
  R8A66597 is a discrete USB host and peripheral controller chip that
  supports both full and high speed USB 2.0 data transfers.
  It has nine configurable endpoints, and endpoint zero.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "r8a66597_udc" and force all
  gadget drivers to also be dynamically linked.

USB_R8A66597_HCD
  The R8A66597 is a USB 2.0 host and peripheral controller.
  
  Enable this option if your board has this chip, and you want
  to use it as a host controller.  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called r8a66597-hcd.

USB_RAINSHADOW_CEC
  This is a cec driver for the RainShadow Tech HDMI CEC device.
  
  To compile this driver as a module, choose M here: the
  module will be called rainshadow-cec.

USB_RAREMONO
  The 'Thanko's Raremono' device contains the Si4734 chip from Silicon Labs Inc.
  It is one of the very few or perhaps the only consumer USB radio device
  to receive the AM/FM/SW bands.
  
  Say Y here if you want to connect this type of AM/FM/SW receiver
  to your computer's USB port.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-raremono.

USB_RAW_GADGET
  USB Raw Gadget is a kernel module that provides a userspace interface
  for the USB Gadget subsystem. Essentially it allows to emulate USB
  devices from userspace. See Documentation/usb/raw-gadget.rst for
  details.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "raw_gadget".

USB_RENESAS_USB3
  Renesas USB3.0 Peripheral controller is a USB peripheral controller
  that supports super, high, and full speed USB 3.0 data transfers.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "renesas_usb3" and force all
  gadget drivers to also be dynamically linked.

USB_RENESAS_USBHS
  Renesas USBHS is a discrete USB host and peripheral controller chip
  that supports both full and high speed USB 2.0 data transfers.
  It has nine or more configurable endpoints, and endpoint zero.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "renesas_usbhs"

USB_RENESAS_USBHS_HCD
  The Renesas USBHS is a USB 2.0 host and peripheral controller.
  
  Enable this option if your board has this chip, and you want
  to use it as a host controller.  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called renesas-usbhs.

USB_RENESAS_USBHS_UDC
  Renesas USBHS is a discrete USB host and peripheral controller chip
  that supports both full and high speed USB 2.0 data transfers.
  It has nine or more configurable endpoints, and endpoint zero.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "renesas_usbhs" and force all
  gadget drivers to also be dynamically linked.

USB_ROLES_INTEL_XHCI
  Driver for the internal USB role switch for switching the USB data
  lines between the xHCI host controller and the dwc3 gadget controller
  found on various Intel SoCs.
  
  To compile the driver as a module, choose M here: the module will
  be called intel-xhci-usb-role-switch.

USB_ROLE_SWITCH
  USB Role Switch is a device that can select the USB role - host or
  device - for a USB port (connector). In most cases dual-role capable
  USB controller will also represent the switch, but on some platforms
  multiplexer/demultiplexer switch is used to route the data lines on
  the USB connector between separate USB host and device controllers.
  
  Say Y here if your USB connectors support both device and host roles.
  To compile the driver as module, choose M here: the module will be
  called roles.ko.

USB_RTL8150
  Say Y here if you have RTL8150 based usb-ethernet adapter.
  Send me <petkan@users.sourceforge.net> any comments you may have.
  You can also check for updates at <http://pegasus2.sourceforge.net/>.
  
  To compile this driver as a module, choose M here: the
  module will be called rtl8150.

USB_RTL8152
  This option adds support for Realtek RTL8152 based USB 2.0
  10/100 Ethernet adapters and RTL8153 based USB 3.0 10/100/1000
  Ethernet adapters.
  
  To compile this driver as a module, choose M here: the
  module will be called r8152.

USB_RTL8153_ECM
  This option supports ECM mode for RTL8153 ethernet adapter, when
  CONFIG_USB_RTL8152 is not set, or the RTL8153 device is not
  supported by r8152 driver.

USB_S2255
  Say Y here if you want support for the Sensoray 2255 USB device.
  This driver can be compiled as a module, called s2255drv.
  

USB_S3C2410
  Samsung's S3C2410 is an ARM-4 processor with an integrated
  full speed USB 1.1 device controller.  It has 4 configurable
  endpoints, as well as endpoint zero (for control transfers).
  
  This driver has been tested on the S3C2410, S3C2412, and
  S3C2440 processors.

USB_S3C2410_DEBUG
  No help

USB_S3C_HSUDC
  Samsung's S3C2416, S3C2443 and S3C2450 is an ARM9 based SoC
  integrated with dual speed USB 2.0 device controller. It has
  8 endpoints, as well as endpoint zero.
  
  This driver has been tested on S3C2416 and S3C2450 processors.

USB_SERIAL
  Say Y here if you have a USB device that provides normal serial
  ports, or acts like a serial device, and you want to connect it to
  your USB bus.
  
  Please read <file:Documentation/usb/usb-serial.rst> for more
  information on the specifics of the different devices that are
  supported, and on how to use them.
  
  To compile this driver as a module, choose M here: the
  module will be called usbserial.

USB_SERIAL_AIRCABLE
  Say Y here if you want to use USB AIRcable Bluetooth Dongle.
  
  To compile this driver as a module, choose M here: the module
  will be called aircable.

USB_SERIAL_ARK3116
  Say Y here if you want to use a ARK Micro 3116 USB to Serial
  device.
  
  To compile this driver as a module, choose M here: the
  module will be called ark3116

USB_SERIAL_BELKIN
  Say Y here if you want to use a Belkin USB Serial single port
  adaptor (F5U103 is one of the model numbers) or the Peracom single
  port USB to serial adapter.
  
  To compile this driver as a module, choose M here: the
  module will be called belkin_sa.

USB_SERIAL_CH341
  Say Y here if you want to use a Winchiphead CH341 single port
  USB to serial adapter.
  
  To compile this driver as a module, choose M here: the
  module will be called ch341.

USB_SERIAL_CONSOLE
  If you say Y here, it will be possible to use a USB to serial
  converter port as the system console (the system console is the
  device which receives all kernel messages and warnings and which
  allows logins in single user mode). This could be useful if some
  terminal or printer is connected to that serial port.
  
  Even if you say Y here, the currently visible virtual console
  (/dev/tty0) will still be used as the system console by default, but
  you can alter that using a kernel command line option such as
  "console=ttyUSB0". (Try "man bootparam" or see the documentation of
  your boot loader (lilo or loadlin) about how to pass options to the
  kernel at boot time.)
  
  If you don't have a VGA card installed and you say Y here, the
  kernel will automatically use the first USB to serial converter
  port, /dev/ttyUSB0, as system console.
  
  If unsure, say N.

USB_SERIAL_CP210X
  Say Y here if you want to use a CP2101/CP2102/CP2103 based USB
  to RS232 converters.
  
  To compile this driver as a module, choose M here: the
  module will be called cp210x.

USB_SERIAL_CYBERJACK
  Say Y here if you want to use a cyberJack pinpad/e-com USB chipcard
  reader. This is an interface to ISO 7816 compatible contact-based
  chipcards, e.g. GSM SIMs.
  
  To compile this driver as a module, choose M here: the
  module will be called cyberjack.
  
  If unsure, say N.

USB_SERIAL_CYPRESS_M8
  Say Y here if you want to use a device that contains the Cypress
  USB to Serial microcontroller, such as the DeLorme Earthmate GPS.
  
        Attempted SMP support... send bug reports!
  
  Supported microcontrollers in the CY4601 family are:
        CY7C63741 CY7C63742 CY7C63743 CY7C64013
  
  To compile this driver as a module, choose M here: the
  module will be called cypress_m8.

USB_SERIAL_DEBUG
  Say Y here if you have a USB debugging device used to receive
  debugging data from another machine.  The most common of these
  devices is the NetChip TurboCONNECT device.
  
  To compile this driver as a module, choose M here: the
  module will be called usb-debug.

USB_SERIAL_DIGI_ACCELEPORT
  Say Y here if you want to use Digi AccelePort USB 2 or 4 devices,
  2 port (plus parallel port) and 4 port USB serial converters.  The
  parallel port on the USB 2 appears as a third serial port on Linux.
  The Digi Acceleport USB 8 is not yet supported by this driver.
  
  To compile this driver as a module, choose M here: the
  module will be called digi_acceleport.

USB_SERIAL_EDGEPORT
  Say Y here if you want to use any of the following devices from
  Inside Out Networks (Digi):
  Edgeport/4
  Rapidport/4
  Edgeport/4t
  Edgeport/2
  Edgeport/4i
  Edgeport/2i
  Edgeport/421
  Edgeport/21
  Edgeport/8
  Edgeport/8 Dual
  Edgeport/2D8
  Edgeport/4D8
  Edgeport/8i
  Edgeport/2 DIN
  Edgeport/4 DIN
  Edgeport/16 Dual
  
  To compile this driver as a module, choose M here: the
  module will be called io_edgeport.

USB_SERIAL_EDGEPORT_TI
  Say Y here if you want to use any of the devices from Inside Out
  Networks (Digi) that are not supported by the io_edgeport driver.
  This includes the Edgeport/1 device.
  
  To compile this driver as a module, choose M here: the
  module will be called io_ti.

USB_SERIAL_EMPEG
  Say Y here if you want to connect to your Empeg empeg-car Mark I/II
  mp3 player via USB.  The driver uses a single ttyUSB{0,1,2,...}
  device node.  See <file:Documentation/usb/usb-serial.rst> for more
  tidbits of information.
  
  To compile this driver as a module, choose M here: the
  module will be called empeg.

USB_SERIAL_F81232
  Say Y here if you want to use the Fintek F81232 single
  port usb to serial adapter.
  
  To compile this driver as a module, choose M here: the
  module will be called f81232.

USB_SERIAL_F8153X
  Say Y here if you want to use the Fintek F81532/534 Multi-Ports
  USB to serial adapter.
  
  To compile this driver as a module, choose M here: the
  module will be called f81534.

USB_SERIAL_FTDI_SIO
  Say Y here if you want to use a FTDI SIO single port USB to serial
  converter device. The implementation I have is called the USC-1000.
  This driver has also been tested with the 245 and 232 devices.
  
  See <http://ftdi-usb-sio.sourceforge.net/> for more
  information on this driver and the device.
  
  To compile this driver as a module, choose M here: the
  module will be called ftdi_sio.

USB_SERIAL_GARMIN
  Say Y here if you want to connect to your Garmin GPS.
  Should work with most Garmin GPS devices which have a native USB port.
  
  See <http://sourceforge.net/projects/garmin-gps> for the latest
  version of the driver.
  
  To compile this driver as a module, choose M here: the
  module will be called garmin_gps.

USB_SERIAL_GENERIC
  Say Y here if you want to use the generic USB serial driver.  Please
  read <file:Documentation/usb/usb-serial.rst> for more information on
  using this driver.  It is recommended that the "USB Serial converter
  support" be compiled as a module for this driver to be used
  properly.

USB_SERIAL_IPAQ
  Say Y here if you want to connect to your Compaq iPAQ, HP Jornada
  or any other PDA running Windows CE 3.0 or PocketPC 2002
  using a USB cradle/cable. For information on using the driver,
  read <file:Documentation/usb/usb-serial.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called ipaq.

USB_SERIAL_IPW
  Say Y here if you want to use a IPWireless USB modem such as
  the ones supplied by Axity3G/Sentech South Africa.
  
  To compile this driver as a module, choose M here: the
  module will be called ipw.

USB_SERIAL_IR
  Say Y here if you want to enable simple serial support for USB IrDA
  devices.  This is useful if you do not want to use the full IrDA
  stack.
  
  To compile this driver as a module, choose M here: the
  module will be called ir-usb.

USB_SERIAL_IUU
  Say Y here if you want to use a IUU in phoenix mode and get
  an extra ttyUSBx device. More information available on
  http://eczema.ecze.com/iuu_phoenix.html
  
  To compile this driver as a module, choose M here: the
  module will be called iuu_phoenix.o

USB_SERIAL_KEYSPAN
  Say Y here if you want to use Keyspan USB to serial converter
  devices.  This driver makes use of Keyspan's official firmware
  and was developed with their support.  You must also include
  firmware to support your particular device(s).
  
  See <http://blemings.org/hugh/keyspan.html> for more information.
  
  To compile this driver as a module, choose M here: the
  module will be called keyspan.

USB_SERIAL_KEYSPAN_PDA
  Say Y here if you want to use a Keyspan PDA, Xircom or Entrega single
  port USB to serial converter device. This driver makes use of
  firmware developed from scratch by Brian Warner.
  
  To compile this driver as a module, choose M here: the
  module will be called keyspan_pda.

USB_SERIAL_KLSI
  Say Y here if you want to use a KL5KUSB105 - based single port
  serial adapter. The most widely known -- and currently the only
  tested -- device in this category is the PalmConnect USB Serial
  adapter sold by Palm Inc. for use with their Palm III and Palm V
  series PDAs.
  
  Please read <file:Documentation/usb/usb-serial.rst> for more
  information.
  
  To compile this driver as a module, choose M here: the
  module will be called kl5kusb105.

USB_SERIAL_KOBIL_SCT
  Say Y here if you want to use one of the following KOBIL USB chipcard
  readers:
  
    - USB TWIN
    - KAAN Standard Plus
    - KAAN SIM
    - SecOVID Reader Plus
    - B1 Professional
    - KAAN Professional
  
  Note that you need a current CT-API.
  To compile this driver as a module, choose M here: the
  module will be called kobil_sct.

USB_SERIAL_MCT_U232
  Say Y here if you want to use a USB Serial single port adapter from
  Magic Control Technology Corp. (U232 is one of the model numbers).
  
  This driver also works with Sitecom U232-P25 and D-Link DU-H3SP USB
  BAY, Belkin F5U109, and Belkin F5U409 devices.
  
  To compile this driver as a module, choose M here: the
  module will be called mct_u232.

USB_SERIAL_METRO
  Say Y here if you want to use a USB POS Metrologic barcode scanner.
  
  To compile this driver as a module, choose M here: the
  module will be called metro-usb.

USB_SERIAL_MOS7715_PARPORT
  Say Y if you have a Moschip 7715 device and would like to use
  the parallel port it provides.  The port will register with
  the parport subsystem as a low-level driver.

USB_SERIAL_MOS7720
  Say Y here if you want to use USB Serial single and double
  port adapters from Moschip Semiconductor Tech.
  
  To compile this driver as a module, choose M here: the
  module will be called mos7720.

USB_SERIAL_MOS7840
  Say Y here if you want to use a MCS7840 Quad-Serial or MCS7820
  Dual-Serial port device from MosChip Semiconductor.
  
  The MCS7840 and MCS7820 have been developed to connect a wide range
  of standard serial devices to a USB host.  The MCS7840 has a USB
  device controller connected to four (4) individual UARTs while the
  MCS7820 controller connects to two (2) individual UARTs.
  
  To compile this driver as a module, choose M here: the
  module will be called mos7840.  If unsure, choose N.

USB_SERIAL_MXUPORT
  Say Y here if you want to use a MOXA UPort Serial hub.
  
  This driver supports:
  
  [2 Port]
  - UPort 1250 :  2 Port RS-232/422/485 USB to Serial Hub
  - UPort 1250I : 2 Port RS-232/422/485 USB to Serial Hub with
                  Isolation
  
  [4 Port]
  - UPort 1410 :  4 Port RS-232 USB to Serial Hub
  - UPort 1450 :  4 Port RS-232/422/485 USB to Serial Hub
  - UPort 1450I : 4 Port RS-232/422/485 USB to Serial Hub with
                  Isolation
  
  [8 Port]
  - UPort 1610-8 : 8 Port RS-232 USB to Serial Hub
  - UPort 1650-8 : 8 Port RS-232/422/485 USB to Serial Hub
  
  [16 Port]
  - UPort 1610-16 : 16 Port RS-232 USB to Serial Hub
  - UPort 1650-16 : 16 Port RS-232/422/485 USB to Serial Hub
  
  To compile this driver as a module, choose M here: the
  module will be called mxuport.

USB_SERIAL_NAVMAN
  To compile this driver as a module, choose M here: the
  module will be called navman.

USB_SERIAL_OMNINET
  Say Y here if you want to use a ZyXEL omni.net LCD ISDN TA.
  
  To compile this driver as a module, choose M here: the
  module will be called omninet.

USB_SERIAL_OPTICON
  Say Y here if you want to use a Opticon USB Barcode device
  in serial emulation mode.
  
  To compile this driver as a module, choose M here: the
  module will be called opticon.

USB_SERIAL_OPTION
  Say Y here if you have a GSM or CDMA modem that's connected to USB.
  
  This driver also supports several PCMCIA cards which have a
  built-in OHCI-USB adapter and an internally-connected GSM modem.
  The USB bus on these cards is not accessible externally.
  
  Supported devices include (some of?) those made by:
  Option, Huawei, Audiovox, Novatel Wireless, or Anydata.
  
  To compile this driver as a module, choose M here: the
  module will be called option.
  
  If this driver doesn't recognize your device,
  it might be accessible via the FTDI_SIO driver.

USB_SERIAL_OTI6858
  Say Y here if you want to use the OTi-6858 single port USB to serial
  converter device.
  
  To compile this driver as a module, choose M here: the
  module will be called oti6858.

USB_SERIAL_PL2303
  Say Y here if you want to use the PL2303 USB Serial single port
  adapter from Prolific.
  
  To compile this driver as a module, choose M here: the
  module will be called pl2303.

USB_SERIAL_QCAUX
  Say Y here if you want to use the auxiliary serial ports provided
  by many modems based on Qualcomm chipsets.  These ports often use
  a proprietary protocol called DM and cannot be used for AT- or
  PPP-based communication.
  
  To compile this driver as a module, choose M here: the
  module will be called qcaux.  If unsure, choose N.

USB_SERIAL_QT2
  Say Y here if you want to use the Quatech USB 2
  serial adapters.
  
  To compile this driver as a module, choose M here: the
  module will be called quatech-serial.

USB_SERIAL_QUALCOMM
  Say Y here if you have a Qualcomm USB modem device.  These are
  usually wireless cellular modems.
  
  To compile this driver as a module, choose M here: the
  module will be called qcserial.

USB_SERIAL_SAFE
  No help

USB_SERIAL_SAFE_PADDED
  No help

USB_SERIAL_SIERRAWIRELESS
  Say M here if you want to use Sierra Wireless devices.
  
  Many devices have a feature known as TRU-Install. For those devices
  to work properly, the USB Storage Sierra feature must be enabled.
  
  To compile this driver as a module, choose M here: the
  module will be called sierra.

USB_SERIAL_SIMPLE
  Say Y here to use the USB serial "simple" driver.  This driver
  handles a wide range of very simple devices, all in one
  driver.  Specifically, it supports:
        - Suunto ANT+ USB device.
        - Medtronic CareLink USB device
        - Fundamental Software dongle.
        - Google USB serial devices
        - HP4x calculators
        - Libtransistor USB console
        - a number of Motorola phones
        - Motorola Tetra devices
        - Novatel Wireless GPS receivers
        - Siemens USB/MPI adapter.
        - ViVOtech ViVOpay USB device.
        - Infineon Modem Flashloader USB interface
        - ZIO Motherboard USB serial interface
  
  To compile this driver as a module, choose M here: the module
  will be called usb-serial-simple.

USB_SERIAL_SPCP8X5
  Say Y here if you want to use the spcp8x5 converter chip.  This is
  commonly found in some Z-Wave USB devices.
  
  To compile this driver as a module, choose M here: the
  module will be called spcp8x5.

USB_SERIAL_SSU100
  Say Y here if you want to use the Quatech SSU-100 single
  port usb to serial adapter.
  
  To compile this driver as a module, choose M here: the
  module will be called ssu100.

USB_SERIAL_SYMBOL
  Say Y here if you want to use a Symbol USB Barcode device
  in serial emulation mode.
  
  To compile this driver as a module, choose M here: the
  module will be called symbolserial.

USB_SERIAL_TI
  Say Y here if you want to use the TI USB 3410 or 5052
  serial devices.
  
  To compile this driver as a module, choose M here: the
  module will be called ti_usb_3410_5052.

USB_SERIAL_UPD78F0730
  Say Y here if you want to use the Renesas uPD78F0730
  serial driver.
  
  To compile this driver as a module, choose M here: the
  module will be called upd78f0730.

USB_SERIAL_VISOR
  Say Y here if you want to connect to your HandSpring Visor, Palm
  m500 or m505 through its USB docking station. See
  <http://usbvisor.sourceforge.net/index.php3> for more information on using this
  driver.
  
  To compile this driver as a module, choose M here: the
  module will be called visor.

USB_SERIAL_WHITEHEAT
  Say Y here if you want to use a ConnectTech WhiteHEAT 4 port
  USB to serial converter device.
  
  To compile this driver as a module, choose M here: the
  module will be called whiteheat.

USB_SERIAL_WISHBONE
  Say Y here if you want to use a USB attached Wishbone bus.
  
  Wishbone is an open hardware SoC bus commonly used in FPGA
  designs. Bus access can be serialized using the Etherbone
  protocol <http://www.ohwr.org/projects/etherbone-core>.
  
  This driver is intended to be used with devices which attach
  their internal Wishbone bus to a USB serial interface using
  the Etherbone protocol. A userspace library is required to
  speak the protocol made available by this driver as ttyUSBx.
  
  To compile this driver as a module, choose M here: the
  module will be called wishbone-serial.

USB_SERIAL_WWAN
  No help

USB_SERIAL_XSENS_MT
  Say Y here if you want to use Xsens motion trackers.
  
  This driver supports the new generation of motion trackers
  by Xsens. Older devices can be accessed using the FTDI_SIO
  driver.
  
  To compile this driver as a module, choose M here: the
  module will be called xsens_mt.

USB_SEVSEG
  Say Y here if you have a USB 7-Segment Display by Delcom
  
  To compile this driver as a module, choose M here: the
  module will be called usbsevseg.

USB_SI470X
  This is a driver for USB devices with the Silicon Labs SI470x
  chip. Currently these devices are known to work:
  - 10c4:818a: Silicon Labs USB FM Radio Reference Design
  - 06e1:a155: ADS/Tech FM Radio Receiver (formerly Instant FM Music)
  - 1b80:d700: KWorld USB FM Radio SnapMusic Mobile 700 (FM700)
  - 10c5:819a: Sanei Electric FM USB Radio (aka DealExtreme.com PCear)
  
  Sound is provided by the ALSA USB Audio/MIDI driver. Therefore
  if you don't want to use the device solely for RDS receiving,
  it is recommended to also select SND_USB_AUDIO.
  
  Please have a look at the documentation, especially on how
  to redirect the audio stream from the radio to your sound device:
  Documentation/admin-guide/media/si470x.rst
  
  Say Y here if you want to connect this type of radio to your
  computer's USB port.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-usb-si470x.

USB_SI4713
  This is a driver for USB devices with the Silicon Labs SI4713
  chip. Currently these devices are known to work.
  - 10c4:8244: Silicon Labs FM Transmitter USB device.
  
  Say Y here if you want to connect this type of radio to your
  computer's USB port.
  
  To compile this driver as a module, choose M here: the
  module will be called radio-usb-si4713.

USB_SIERRA_NET
  Choose this option if you have a Sierra Wireless USB-to-WWAN device.
  
  To compile this driver as a module, choose M here: the
  module will be called sierra_net.

USB_SISUSBVGA
  Say Y here if you intend to attach a USB2VGA dongle based on a
  Net2280 and a SiS315 chip.
  
  Note that this device requires a USB 2.0 host controller. It will not
  work with USB 1.x controllers.
  
  To compile this driver as a module, choose M here; the module will be
  called sisusbvga. If unsure, say N.

USB_SISUSBVGA_CON
  Say Y here if you want a VGA text console via the USB dongle or
  want to support userland applications that utilize the driver's
  display mode switching capabilities.
  
  Note that this console supports VGA/EGA text mode only.
  
  By default, the console part of the driver will not kick in when
  the driver is initialized. If you want the driver to take over
  one or more of the consoles, you need to specify the number of
  the first and last consoles (starting at 1) as driver parameters.
  
  For example, if the driver is compiled as a module:
  
     modprobe sisusbvga first=1 last=5
  
  If you use hotplug, add this to your modutils config files with
  the "options" keyword, such as eg.
  
     options sisusbvga first=1 last=5
  
  If the driver is compiled into the kernel image, the parameters
  must be given in the kernel command like, such as
  
     sisusbvga.first=1 sisusbvga.last=5
  
  
  

USB_SL811_CS
  Wraps a PCMCIA driver around the SL811HS HCD, supporting the RATOC
  REX-CFU1U CF card (often used with PDAs).  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called "sl811_cs".

USB_SL811_HCD
  The SL811HS is a single-port USB controller that supports either
  host side or peripheral side roles.  Enable this option if your
  board has this chip, and you want to use it as a host controller.
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called sl811-hcd.

USB_SL811_HCD_ISO
  The driver doesn't support iso_frame_desc (yet), but for some simple
  devices that just queue one ISO frame per URB, then ISO transfers
  "should" work using the normal urb status fields.
  
  If unsure, say N.

USB_SNP_CORE
  This enables core driver support for Synopsys USB 2.0 Device
  controller.
  
  This will be enabled when PCI or Platform driver for this UDC is
  selected. Currently, this will be enabled by USB_SNP_UDC_PLAT or
  USB_AMD5536UDC options.
  
  This IP is different to the High Speed OTG IP that can be enabled
  by selecting USB_DWC2 or USB_DWC3 options.

USB_SNP_UDC_PLAT
  This adds Platform Device support for Synopsys Designware core
  AHB subsystem USB2.0 Device Controller (UDC).
  
  This driver works with UDCs integrated into Broadcom's Northstar2
  and Cygnus SoCs.
  
  If unsure, say N.

USB_SPEEDTOUCH
  Say Y here if you have an SpeedTouch USB or SpeedTouch 330
  modem.  In order to use your modem you will need to install the
  two parts of the firmware, extracted by the user space tools; see
  <http://www.linux-usb.org/SpeedTouch/> for details.
  
  To compile this driver as a module, choose M here: the
  module will be called speedtch.

USB_STKWEBCAM
  Say Y here if you want to use this type of camera.
  Supported devices are typically found in some Asus laptops,
  with USB id 174f:a311 and 05e1:0501. Other Syntek cameras
  may be supported by the stk11xx driver, from which this is
  derived, see <http://sourceforge.net/projects/syntekdriver/>
  
  To compile this driver as a module, choose M here: the
  module will be called stkwebcam.
  

USB_STORAGE
  Say Y here if you want to connect USB mass storage devices to your
  computer's USB port. This is the driver you need for USB
  floppy drives, USB hard disks, USB tape drives, USB CD-ROMs,
  USB flash devices, and memory sticks, along with
  similar devices. This driver may also be used for some cameras
  and card readers.
  
  This option depends on 'SCSI' support being enabled, but you
  probably also need 'SCSI device support: SCSI disk support'
  (BLK_DEV_SD) for most USB storage devices.
  
  To compile this driver as a module, choose M here: the
  module will be called usb-storage.

USB_STORAGE_ALAUDA
  Say Y here to include additional code to support the Olympus MAUSB-10
  and Fujifilm DPC-R1 USB Card reader/writer devices.
  
  These devices are based on the Alauda chip and support both
  XD and SmartMedia cards.
  
  If this driver is compiled as a module, it will be named ums-alauda.

USB_STORAGE_CYPRESS_ATACB
  Say Y here if you want to use SAT (ata pass through) on devices based
  on the Cypress USB/ATA bridge supporting ATACB. This will allow you
  to use tools to tune and monitor your drive (like hdparm or smartctl).
  
  If you say no here your device will still work with the standard usb
  mass storage class.
  
  If this driver is compiled as a module, it will be named ums-cypress.

USB_STORAGE_DATAFAB
  Support for certain Datafab CompactFlash readers.
  Datafab has a web page at <http://www.datafab.com/>.
  
  If this driver is compiled as a module, it will be named ums-datafab.

USB_STORAGE_DEBUG
  Say Y here in order to have the USB Mass Storage code generate
  verbose debugging messages.

USB_STORAGE_ENE_UB6250
  Say Y here if you wish to control a ENE SD/MS Card reader.
  Note that this driver does not support SM cards.
  
  To compile this driver as a module, choose M here: the
  module will be called ums-eneub6250.

USB_STORAGE_FREECOM
  Support for the Freecom USB to IDE/ATAPI adaptor.
  Freecom has a web page at <https://www.freecom.de/>.
  
  If this driver is compiled as a module, it will be named ums-freecom.

USB_STORAGE_ISD200
  Say Y here if you want to use USB Mass Store devices based
  on the In-Systems Design ISD-200 USB/ATA bridge.
  
  Some of the products that use this chip are:
  
  - Archos Jukebox 6000
  - ISD SmartCable for Storage
  - Taiwan Skymaster CD530U/DEL-0241 IDE bridge
  - Sony CRX10U CD-R/RW drive
  - CyQ've CQ8060A CDRW drive
  - Planex eXtreme Drive RX-25HU USB-IDE cable (not model RX-25U)
  
  If this driver is compiled as a module, it will be named ums-isd200.

USB_STORAGE_JUMPSHOT
  Say Y here to include additional code to support the Lexar Jumpshot
  USB CompactFlash reader.
  
  If this driver is compiled as a module, it will be named ums-jumpshot.

USB_STORAGE_KARMA
  Say Y here to include additional code to support the Rio Karma
  USB interface.
  
  This code places the Rio Karma into mass storage mode, enabling
  it to be mounted as an ordinary filesystem. Performing an eject
  on the resulting scsi device node returns the Karma to normal
  operation.
  
  If this driver is compiled as a module, it will be named ums-karma.

USB_STORAGE_ONETOUCH
  Say Y here to include additional code to support the Maxtor OneTouch
  USB hard drive's onetouch button.
  
  This code registers the button on the front of Maxtor OneTouch USB
  hard drive's as an input device. An action can be associated with
  this input in any keybinding software. (e.g. gnome's keyboard short-
  cuts)
  
  If this driver is compiled as a module, it will be named ums-onetouch.

USB_STORAGE_REALTEK
  Say Y here to include additional code to support the power-saving function
  for Realtek RTS51xx USB card readers.
  
  If this driver is compiled as a module, it will be named ums-realtek.

USB_STORAGE_SDDR09
  Say Y here to include additional code to support the Sandisk SDDR-09
  SmartMedia reader in the USB Mass Storage driver.
  Also works for the Microtech Zio! CompactFlash/SmartMedia reader.
  
  If this driver is compiled as a module, it will be named ums-sddr09.

USB_STORAGE_SDDR55
  Say Y here to include additional code to support the Sandisk SDDR-55
  SmartMedia reader in the USB Mass Storage driver.
  
  If this driver is compiled as a module, it will be named ums-sddr55.

USB_STORAGE_USBAT
  Say Y here to include additional code to support storage devices
  based on the SCM/Shuttle USBAT/USBAT02 processors.
  
  Devices reported to work with this driver include:
  - CompactFlash reader included with Kodak DC3800 camera
  - Dane-Elec Zmate CompactFlash reader
  - Delkin Efilm reader2
  - HP 8200e/8210e/8230e CD-Writer Plus drives
  - I-JAM JS-50U
  - Jessops CompactFlash JESDCFRU BLACK
  - Kingston Technology PCREAD-USB/CF
  - Maxell UA4 CompactFlash reader
  - Memorex UCF-100
  - Microtech ZiO! ICS-45 CF2
  - RCA LYRA MP3 portable
  - Sandisk ImageMate SDDR-05b
  
  If this driver is compiled as a module, it will be named ums-usbat.

USB_STV06XX
  Say Y here if you want support for cameras based on
  the ST STV06XX chip.
  
  To compile this driver as a module, choose M here: the
  module will be called gspca_stv06xx.

USB_SUPPORT
  This option adds core support for Universal Serial Bus (USB).
  You will also need drivers from the following menu to make use of it.

USB_TEGRA_PHY
  This driver provides PHY support for the USB controllers found
  on NVIDIA Tegra SoC's.

USB_TEGRA_XUDC
  Enables NVIDIA Tegra USB 3.0 device mode controller driver.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "tegra_xudc" and force all
  gadget drivers to also be dynamically linked.

USB_TEST
  This driver is for testing host controller software.  It is used
  with specialized device firmware for regression and stress testing,
  to help prevent problems from cropping up with "real" drivers.
  
  See <http://www.linux-usb.org/usbtest/> for more information,
  including sample test device firmware and "how to use it".

USB_TI_CPPI41_DMA
  No help

USB_TI_CPPI_DMA
  Enable DMA transfers when TI CPPI DMA is available.

USB_TMC
  Say Y here if you want to connect a USB device that follows
  the USB.org specification for USB Test and Measurement devices
  to your computer's USB port.
  
  To compile this driver as a module, choose M here: the
  module will be called usbtmc.

USB_TRANCEVIBRATOR
  Say Y here if you want to connect a PlayStation 2 Trance Vibrator
  device to your computer's USB port.
  
  To compile this driver as a module, choose M here: the
  module will be called trancevibrator.

USB_TUSB_OMAP_DMA
  Enable DMA transfers on TUSB 6010 when OMAP DMA is available.

USB_U132_HCD
  The U132 adapter is a USB to CardBus adapter specifically designed
  for PC cards that contain an OHCI host controller. Typical PC cards
  are the Orange Mobile 3G Option GlobeTrotter Fusion card. The U132
  adapter will *NOT* work with PC cards that do not contain an OHCI
  controller.
  
  For those PC cards that contain multiple OHCI controllers only the
  first one is used.
  
  The driver consists of two modules, the "ftdi-elan" module is a
  USB client driver that interfaces to the FTDI chip within ELAN's
  USB-to-PCMCIA adapter, and this "u132-hcd" module is a USB host
  controller driver that talks to the OHCI controller within the
  CardBus cards that are inserted in the U132 adapter.
  
  This driver has been tested with a CardBus OHCI USB adapter, and
  worked with a USB PEN Drive inserted into the first USB port of
  the PCCARD. A rather pointless thing to do, but useful for testing.
  
  It is safe to say M here.
  
  See also <http://www.elandigitalsystems.com/support/ufaq/u132linux.php>

USB_UAS
  The USB Attached SCSI protocol is supported by some USB
  storage devices.  It permits higher performance by supporting
  multiple outstanding commands.
  
  If you don't know whether you have a UAS device, it is safe to
  say 'Y' or 'M' here and the kernel will use the right driver.
  
  If you compile this driver as a module, it will be named uas.

USB_UEAGLEATM
  Say Y here if you have an ADSL USB modem based on the ADI 930
  or eagle chipset. In order to use your modem you will need to
  install firmwares and CMV (Command Management Variables); see
  <https://gna.org/projects/ueagleatm/> for details.
  
  To compile this driver as a module, choose M here: the
  module will be called ueagle-atm.

USB_UHCI_ASPEED
  No help

USB_UHCI_BIG_ENDIAN_DESC
  No help

USB_UHCI_BIG_ENDIAN_MMIO
  No help

USB_UHCI_HCD
  The Universal Host Controller Interface is a standard by Intel for
  accessing the USB hardware in the PC (which is also called the USB
  host controller). If your USB host controller conforms to this
  standard, you may want to say Y, but see below. All recent boards
  with Intel PCI chipsets (like intel 430TX, 440FX, 440LX, 440BX,
  i810, i820) conform to this standard. Also all VIA PCI chipsets
  (like VIA VP2, VP3, MVP3, Apollo Pro, Apollo Pro II or Apollo Pro
  133) and LEON/GRLIB SoCs with the GRUSBHC controller.
  If unsure, say Y.
  
  To compile this driver as a module, choose M here: the
  module will be called uhci-hcd.

USB_UHCI_PLATFORM
  No help

USB_UHCI_SUPPORT_NON_PCI_HC
  No help

USB_ULPI
  Enable this to support ULPI connected USB OTG transceivers which
  are likely found on embedded boards.

USB_ULPI_BUS
  UTMI+ Low Pin Interface (ULPI) is specification for a commonly used
  USB 2.0 PHY interface. The ULPI specification defines a standard set
  of registers that can be used to detect the vendor and product which
  allows ULPI to be handled as a bus. This module is the driver for that
  bus.
  
  The ULPI interfaces (the buses) are registered by the drivers for USB
  controllers which support ULPI register access and have ULPI PHY
  attached to them. The ULPI PHY drivers themselves are normal PHY
  drivers.
  
  ULPI PHYs provide often functions such as ADP sensing/probing (OTG
  protocol) and USB charger detection.
  
  To compile this driver as a module, choose M here: the module will
  be called ulpi.

USB_ULPI_VIEWPORT
  Provides read/write operations to the ULPI phy register set for
  controllers with a viewport register (e.g. Chipidea/ARC controllers).

USB_USBNET
  This driver supports several kinds of network links over USB,
  with "minidrivers" built around a common network driver core
  that supports deep queues for efficient transfers.  (This gives
  better performance with small packets and at high speeds).
  
  The USB host runs "usbnet", and the other end of the link might be:
  
  - Another USB host, when using USB "network" or "data transfer"
    cables.  These are often used to network laptops to PCs, like
    "Laplink" parallel cables or some motherboards.  These rely
    on specialized chips from many suppliers.
  
  - An intelligent USB gadget, perhaps embedding a Linux system.
    These include PDAs running Linux (iPaq, Yopy, Zaurus, and
    others), and devices that interoperate using the standard
    CDC-Ethernet specification (including many cable modems).
  
  - Network adapter hardware (like those for 10/100 Ethernet) which
    uses this driver framework.
  
  The link will appear with a name like "usb0", when the link is
  a two-node link, or "eth0" for most CDC-Ethernet devices.  Those
  two-node links are most easily managed with Ethernet Bridging
  (CONFIG_BRIDGE) instead of routing.
  
  For more information see <http://www.linux-usb.org/usbnet/>.
  
  To compile this driver as a module, choose M here: the
  module will be called usbnet.

USB_USS720
  This driver is for USB parallel port adapters that use the Lucent
  Technologies USS-720 chip. These cables are plugged into your USB
  port and provide USB compatibility to peripherals designed with
  parallel port interfaces.
  
  The chip has two modes: automatic mode and manual mode. In automatic
  mode, it looks to the computer like a standard USB printer. Only
  printers may be connected to the USS-720 in this mode. The generic
  USB printer driver ("USB Printer support", above) may be used in
  that mode, and you can say N here if you want to use the chip only
  in this mode.
  
  Manual mode is not limited to printers, any parallel port
  device should work. This driver utilizes manual mode.
  Note however that some operations are three orders of magnitude
  slower than on a PCI/ISA Parallel Port, so timing critical
  applications might not work.
  
  Say Y here if you own an USS-720 USB->Parport cable and intend to
  connect anything other than a printer to it.
  
  To compile this driver as a module, choose M here: the
  module will be called uss720.

USB_UX500_DMA
  Enable DMA transfers on UX500 platforms.

USB_U_AUDIO
  No help

USB_U_ETHER
  No help

USB_U_SERIAL
  No help

USB_VIDEO_CLASS
  Support for the USB Video Class (UVC).  Currently only video
  input devices, such as webcams, are supported.
  
  For more information see: <http://linux-uvc.berlios.de/>

USB_VIDEO_CLASS_INPUT_EVDEV
  This option makes USB Video Class devices register an input device
  to report button events.
  
  If you are in doubt, say Y.

USB_VL600
  Select this if you want to use an LG Electronics 4G/LTE usb modem
  called VL600.  This driver only handles the ethernet
  interface exposed by the modem firmware.  To establish a connection
  you will first need a userspace program that sends the right
  command to the modem through its CDC ACM port, and most
  likely also a DHCP client.  See this thread about using the
  4G modem from Verizon:
  
  http://ubuntuforums.org/showpost.php?p=10589647&postcount=17

USB_WDM
  This driver supports the WMC Device Management functionality
  of cell phones compliant to the CDC WMC specification. You can use
  AT commands over this device.
  
  To compile this driver as a module, choose M here: the
  module will be called cdc-wdm.

USB_XHCI_DBGCAP
  Say 'Y' to enable the support for the xHCI debug capability. Make
  sure that your xHCI host supports the extended debug capability and
  you want a TTY serial device based on the xHCI debug capability
  before enabling this option. If unsure, say 'N'.

USB_XHCI_HCD
  The eXtensible Host Controller Interface (xHCI) is standard for USB 3.0
  "SuperSpeed" host controller hardware.
  
  To compile this driver as a module, choose M here: the
  module will be called xhci-hcd.

USB_XHCI_HISTB
  Say 'Y' to enable the support for the xHCI host controller
  found in HiSilicon STB SoCs.

USB_XHCI_MTK
  Say 'Y' to enable the support for the xHCI host controller
  found in MediaTek SoCs.
  If unsure, say N.

USB_XHCI_MVEBU
  Say 'Y' to enable the support for the xHCI host controller
  found in Marvell Armada 375/38x/37xx ARM SOCs.

USB_XHCI_PCI
  No help

USB_XHCI_PCI_RENESAS
  Say 'Y' to enable the support for the Renesas xHCI controller with
  firmware. Make sure you have the firwmare for the device and
  installed on your system for this device to work.
  If unsure, say 'N'.

USB_XHCI_PLATFORM
  Adds an xHCI host driver for a generic platform device, which
  provides a memory space and an irq.
  It is also a prerequisite for platform specific drivers that
  implement some extra quirks.
  
  If unsure, say N.

USB_XHCI_RCAR
  Say 'Y' to enable the support for the xHCI host controller
  found in Renesas R-Car ARM SoCs.

USB_XHCI_TEGRA
  Say 'Y' to enable the support for the xHCI host controller
  found in NVIDIA Tegra124 and later SoCs.

USB_XUSBATM
  Say Y here if you have a DSL USB modem not explicitly supported by
  another USB DSL drivers.  In order to use your modem you will need to
  pass the vendor ID, product ID, and endpoint numbers for transmission
  and reception as module parameters.  You may need to initialize
  the modem using a user space utility (a firmware loader for example).
  
  To compile this driver as a module, choose M here: the
  module will be called xusbatm.

USB_YUREX
  Say Y here if you want to connect a YUREX to your computer's
  USB port. The YUREX is a leg-shakes sensor. See
  <http://bbu.kayac.com/en/> for further information.
  This driver supports read/write of leg-shakes counter and
  fasync for the counter update via a device file /dev/yurex*.
  
  To compile this driver as a module, choose M here: the
  module will be called yurex.

USB_ZD1201
  Say Y if you want to use wireless LAN adapters based on the ZyDAS
  ZD1201 chip.
  
  This driver makes the adapter appear as a normal Ethernet interface,
  typically on wlan0.
  
  The zd1201 device requires external firmware to be loaded.
  This can be found at http://linux-lc100020.sourceforge.net/
  
  To compile this driver as a module, choose M here: the
  module will be called zd1201.

USB_ZERO
  Gadget Zero is a two-configuration device.  It either sinks and
  sources bulk data; or it loops back a configurable number of
  transfers.  It also implements control requests, for "chapter 9"
  conformance.  The driver needs only two bulk-capable endpoints, so
  it can work on top of most device-side usb controllers.  It's
  useful for testing, and is also a working example showing how
  USB "gadget drivers" can be written.
  
  Make this be the first driver you try using on top of any new
  USB peripheral controller driver.  Then you can use host-side
  test software, like the "usbtest" driver, to put your hardware
  and its driver through a basic set of functional tests.
  
  Gadget Zero also works with the host-side "usb-skeleton" driver,
  and with many kinds of host-side test software.  You may need
  to tweak product and vendor IDs before host software knows about
  this device, and arrange to select an appropriate configuration.
  
  Say "y" to link the driver statically, or "m" to build a
  dynamically linked module called "g_zero".

USB_ZERO_HNPTEST
  You can configure this device to enumerate using the device
  identifiers of the USB-OTG test device.  That means that when
  this gadget connects to another OTG device, with this one using
  the "B-Peripheral" role, that device will use HNP to let this
  one serve as the USB host instead (in the "B-Host" role).

USB_ZR364XX
  Say Y here if you want to connect this type of camera to your
  computer's USB port.
  See <file:Documentation/admin-guide/media/zr364xx.rst> for more info
  and list of supported cameras.
  
  To compile this driver as a module, choose M here: the
  module will be called zr364xx.
  

USELIB
  This option enables the uselib syscall, a system call used in the
  dynamic linker from libc5 and earlier.  glibc does not use this
  system call.  If you intend to run programs built on libc5 or
  earlier, you may need to enable this syscall.  Current systems
  running glibc can safely disable this.

USERFAULTFD
  Enable the userfaultfd() system call that allows to intercept and
  handle page faults in userland.

USERIO
  Say Y here if you want to support user level drivers for serio
  subsystem accessible under char device 10:240 - /dev/userio. Using
  this facility userspace programs can implement serio ports that
  will be used by the standard in-kernel serio consumer drivers,
  such as psmouse and atkbd.
  
  To compile this driver as a module, choose M here: the module will be
  called userio.
  
  If you are unsure, say N.

USERMODE_DRIVER
  No help

USER_NS
  This allows containers, i.e. vservers, to use user namespaces
  to provide different user info for different servers.
  
  When user namespaces are enabled in the kernel it is
  recommended that the MEMCG option also be enabled and that
  user-space use the memory control groups to limit the amount
  of memory a memory unprivileged users can use.
  
  If unsure, say N.

USER_RETURN_NOTIFIER
  Provide a kernel-internal notification when a cpu is about to
  switch to user mode.

USER_STACKTRACE_SUPPORT
  No help

USE_PERCPU_NUMA_NODE_ID
  No help

UTS_NS
  In this namespace tasks see different info provided with the
  uname() system call

UV_MMTIMER
  The uv_mmtimer device allows direct userspace access to the
  UV system timer.

UV_SYSFS
  This driver supports a sysfs tree describing information about
  UV systems at /sys/firmware/sgi_uv/.
  
  To compile this driver as a module, choose M here: the module will
  be called uv_sysfs.

UX500_SOC_ID
  Include support for the SoC bus on the ARM RealView platforms
  providing some sysfs information about the ASIC variant.

UX500_WATCHDOG
  Say Y here to include Watchdog timer support for the watchdog
  existing in the prcmu of ST-Ericsson Ux500 series platforms.
  
  To compile this driver as a module, choose M here: the
  module will be called ux500_wdt.

U_SERIAL_CONSOLE
  It supports the serial gadget can be used as a console.

V4L2_FLASH_LED_CLASS
  Say Y here to enable V4L2 flash API support for LED flash
  class drivers.
  
  When in doubt, say N.

V4L2_FWNODE
  No help

V4L2_H264
  No help

V4L2_JPEG_HELPER
  No help

V4L2_MEM2MEM_DEV
  No help

V4L_MEM2MEM_DRIVERS
  Say Y here to enable selecting drivers for V4L devices that
  use system memory for both source and destination buffers, as opposed
  to capture and output drivers, which use memory buffers for just
  one of those.

V4L_PLATFORM_DRIVERS
  Say Y here to enable support for platform-specific V4L drivers.

V4L_RADIO_ISA_DRIVERS
  Say Y here to enable support for these ISA drivers.

V4L_TEST_DRIVERS
  No help

VALIDATE_FS_PARSER
  Enable this to perform validation of the parameter description for a
  filesystem when it is registered.

VBOXGUEST
  This is a driver for the Virtual Box Guest PCI device used in
  Virtual Box virtual machines. Enabling this driver will add
  support for Virtual Box Guest integration features such as
  copy-and-paste, seamless mode and OpenGL pass-through.
  
  This driver also offers vboxguest IPC functionality which is needed
  for the vboxfs driver which offers folder sharing support.
  
  If you enable this driver you should also enable the VBOXVIDEO option.
  
  Although it is possible to build this module in, it is advised
  to build this driver as a module, so that it can be updated
  independently of the kernel. Select M to build this driver as a
  module.

VBOXSF_FS
  VirtualBox hosts can share folders with guests, this driver
  implements the Linux-guest side of this allowing folders exported
  by the host to be mounted under Linux.
  
  If you want to use shared folders in VirtualBox guests, answer Y or M.

VCC
  Support for Sun logical domain consoles.

VCNL3020
  Say Y here if you want to build a driver for the Vishay VCNL3020
  proximity sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called vcnl3020.

VCNL4000
  Say Y here if you want to build a driver for the Vishay VCNL4000,
  VCNL4010, VCNL4020, VCNL4200 combined ambient light and proximity
  sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called vcnl4000.

VCNL4035
  Say Y here if you want to build a driver for the Vishay VCNL4035,
  combined ambient light (ALS) and proximity sensor. Currently only ALS
  function is available.
  
  To compile this driver as a module, choose M here: the
  module will be called vcnl4035.

VDPA
  Enable this module to support vDPA device that uses a
  datapath which complies with virtio specifications with
  vendor specific control path.

VDPA_SIM
  Enable this module to support vDPA device simulators. These devices
  are used for testing, prototyping and development of vDPA.

VDPA_SIM_NET
  vDPA networking device simulator which loops TX traffic back to RX.

VEML6030
  Say Y here if you want to build a driver for the Vishay VEML6030
  ambient light sensor (ALS).
  
  To compile this driver as a module, choose M here: the
  module will be called veml6030.

VEML6070
  Say Y here if you want to build a driver for the Vishay VEML6070 UV A
  light sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called veml6070.

VERSATILE_FPGA_IRQ
  No help

VERSATILE_FPGA_IRQ_NR
  No help

VETH
  This device is a local ethernet tunnel. Devices are created in pairs.
  When one end receives the packet it appears on its pair and vice
  versa.

VEXPRESS_CONFIG
  Platform configuration infrastructure for the ARM Ltd.
  Versatile Express.

VF610_ADC
  Say yes here to support for Vybrid board analog-to-digital converter.
  Since the IP is used for i.MX6SLX, the driver also support i.MX6SLX.
  
  This driver can also be built as a module. If so, the module will be
  called vf610_adc.

VF610_DAC
  Say yes here to support Vybrid board digital-to-analog converter.
  
  This driver can also be built as a module. If so, the module will
  be called vf610_dac.

VFAT_FS
  This option provides support for normal Windows file systems with
  long filenames.  That includes non-compressed FAT-based file systems
  used by Windows 95, Windows 98, Windows NT 4.0, and the Unix
  programs from the mtools package.
  
  The VFAT support enlarges your kernel by about 10 KB and it only
  works if you said Y to the "DOS FAT fs support" above.  Please read
  the file <file:Documentation/filesystems/vfat.rst> for details.  If
  unsure, say Y.
  
  To compile this as a module, choose M here: the module will be called
  vfat.

VFIO
  VFIO provides a framework for secure userspace device drivers.
  See Documentation/driver-api/vfio.rst for more details.
  
  If you don't know what to do here, say N.

VFIO_AMBA
  Support for ARM AMBA devices with VFIO. This is required to make
  use of ARM AMBA devices present on the system using the VFIO
  framework.
  
  If you don't know what to do here, say N.

VFIO_FSL_MC
  Driver to enable support for the VFIO QorIQ DPAA2 fsl-mc
  (Management Complex) devices. This is required to passthrough
  fsl-mc bus devices using the VFIO framework.
  
  If you don't know what to do here, say N.

VFIO_IOMMU_SPAPR_TCE
  No help

VFIO_IOMMU_TYPE1
  No help

VFIO_MDEV
  Provides a framework to virtualize devices.
  See Documentation/driver-api/vfio-mediated-device.rst for more details.
  
  If you don't know what do here, say N.

VFIO_MDEV_DEVICE
  VFIO based driver for Mediated devices.

VFIO_NOIOMMU
  VFIO is built on the ability to isolate devices using the IOMMU.
  Only with an IOMMU can userspace access to DMA capable devices be
  considered secure.  VFIO No-IOMMU mode enables IOMMU groups for
  devices without IOMMU backing for the purpose of re-using the VFIO
  infrastructure in a non-secure mode.  Use of this mode will result
  in an unsupportable kernel and will therefore taint the kernel.
  Device assignment to virtual machines is also not possible with
  this mode since there is no IOMMU to provide DMA translation.
  
  If you don't know what to do here, say N.

VFIO_PCI
  Support for the PCI VFIO bus driver.  This is required to make
  use of PCI drivers using the VFIO framework.
  
  If you don't know what to do here, say N.

VFIO_PCI_IGD
  Support for Intel IGD specific extensions to enable direct
  assignment to virtual machines.  This includes exposing an IGD
  specific firmware table and read-only copies of the host bridge
  and LPC bridge config space.
  
  To enable Intel IGD assignment through vfio-pci, say Y.

VFIO_PCI_INTX
  No help

VFIO_PCI_MMAP
  No help

VFIO_PCI_NVLINK2
  VFIO PCI support for P9 Witherspoon machine with NVIDIA V100 GPUs

VFIO_PCI_VGA
  Support for VGA extension to VFIO PCI.  This exposes an additional
  region on VGA devices for accessing legacy VGA addresses used by
  BIOS and generic video drivers.
  
  If you don't know what to do here, say N.

VFIO_PCI_ZDEV
  Enabling this option exposes VFIO capabilities containing hardware
  configuration for zPCI devices. This enables userspace (e.g. QEMU)
  to supply proper configuration values instead of hard-coded defaults
  for zPCI devices passed through via VFIO on s390.
  
  Say Y here.

VFIO_PLATFORM
  Support for platform devices with VFIO. This is required to make
  use of platform devices present on the system using the VFIO
  framework.
  
  If you don't know what to do here, say N.

VFIO_PLATFORM_AMDXGBE_RESET
  Enables the VFIO platform driver to handle reset for AMD XGBE
  
  If you don't know what to do here, say N.

VFIO_PLATFORM_BCMFLEXRM_RESET
  Enables the VFIO platform driver to handle reset for Broadcom FlexRM
  
  If you don't know what to do here, say N.

VFIO_PLATFORM_CALXEDAXGMAC_RESET
  Enables the VFIO platform driver to handle reset for Calxeda xgmac
  
  If you don't know what to do here, say N.

VFIO_SPAPR_EEH
  No help

VFIO_VIRQFD
  No help

VF_PIT_TIMER
  Support for Periodic Interrupt Timer on Freescale Vybrid Family SoCs.

VGASTATE
  No help

VGA_ARB
  Some "legacy" VGA devices implemented on PCI typically have the same
  hard-decoded addresses as they did on ISA. When multiple PCI devices
  are accessed at same time they need some kind of coordination. Please
  see Documentation/gpu/vgaarbiter.rst for more details. Select this to
  enable VGA arbiter.

VGA_ARB_MAX_GPUS
  Reserves space in the kernel to maintain resource locking for
  multiple GPUS.  The overhead for each GPU is very small.

VGA_CONSOLE
  Saying Y here will allow you to use Linux in text mode through a
  display that complies with the generic VGA standard. Virtually
  everyone wants that.
  
  The program SVGATextMode can be used to utilize SVGA video cards to
  their full potential in text mode. Download it from
  <ftp://ibiblio.org/pub/Linux/utils/console/>.
  
  Say Y.

VGA_SWITCHEROO
  Many laptops released in 2008/9/10 have two GPUs with a multiplexer
  to switch between them. This adds support for dynamic switching when
  X isn't running and delayed switching until the next logoff. This
  feature is called hybrid graphics, ATI PowerXpress, and Nvidia
  HybridPower.

VHOST
  This option is selected by any driver which needs to access
  the core of vhost.

VHOST_CROSS_ENDIAN_LEGACY
  This option allows vhost to support guests with a different byte
  ordering from host while using legacy virtio.
  
  Userspace programs can control the feature using the
  VHOST_SET_VRING_ENDIAN and VHOST_GET_VRING_ENDIAN ioctls.
  
  This is only useful on a few platforms (ppc64 and arm64). Since it
  adds some overhead, it is disabled by default.
  
  If unsure, say "N".

VHOST_IOTLB
  Generic IOTLB implementation for vhost and vringh.
  This option is selected by any driver which needs to support
  an IOMMU in software.

VHOST_MENU
  No help

VHOST_NET
  This kernel module can be loaded in host kernel to accelerate
  guest networking with virtio_net. Not to be confused with virtio_net
  module itself which needs to be loaded in guest kernel.
  
  To compile this driver as a module, choose M here: the module will
  be called vhost_net.

VHOST_RING
  This option is selected by any driver which needs to access
  the host side of a virtio ring.

VHOST_SCSI
  Say M here to enable the vhost_scsi TCM fabric module
  for use with virtio-scsi guests

VHOST_VDPA
  This kernel module can be loaded in host kernel to accelerate
  guest virtio devices with the vDPA-based backends.
  
  To compile this driver as a module, choose M here: the module
  will be called vhost_vdpa.

VHOST_VSOCK
  This kernel module can be loaded in the host kernel to provide AF_VSOCK
  sockets for communicating with guests.  The guests must have the
  virtio_transport.ko driver loaded to use the virtio-vsock device.
  
  To compile this driver as a module, choose M here: the module will be called
  vhost_vsock.

VIA_RHINE
  If you have a VIA "Rhine" based network card (Rhine-I (VT86C100A),
  Rhine-II (VT6102), or Rhine-III (VT6105)), say Y here. Rhine-type
  Ethernet functions can also be found integrated on South Bridges
  (e.g. VT8235).
  
  To compile this driver as a module, choose M here. The module
  will be called via-rhine.

VIA_RHINE_MMIO
  This instructs the driver to use PCI shared memory (MMIO) instead of
  programmed I/O ports (PIO). Enabling this gives an improvement in
  processing time in parts of the driver.
  
  If unsure, say Y.

VIA_VELOCITY
  If you have a VIA "Velocity" based network card say Y here.
  
  To compile this driver as a module, choose M here. The module
  will be called via-velocity.

VIA_WDT
  This is the driver for the hardware watchdog timer on VIA
  southbridge chipset CX700, VX800/VX820 or VX855/VX875.
  
  To compile this driver as a module, choose M here; the module
  will be called via_wdt.
  
  Most people will say N.

VIDEOBUF2_CORE
  No help

VIDEOBUF2_DMA_CONTIG
  No help

VIDEOBUF2_DMA_SG
  No help

VIDEOBUF2_DVB
  No help

VIDEOBUF2_MEMOPS
  No help

VIDEOBUF2_V4L2
  No help

VIDEOBUF2_VMALLOC
  No help

VIDEOBUF_DMA_CONTIG
  No help

VIDEOBUF_DMA_SG
  No help

VIDEOBUF_GEN
  No help

VIDEOBUF_VMALLOC
  No help

VIDEOMODE_HELPERS
  No help

VIDEO_AD5820
  This is a driver for the AD5820 camera lens voice coil.
  It is used for example in Nokia N900 (RX-51).

VIDEO_AD9389B
  Support for the Analog Devices AD9389B video encoder.
  
  This is a Analog Devices HDMI transmitter.
  
  To compile this driver as a module, choose M here: the
  module will be called ad9389b.

VIDEO_ADP1653
  This is a driver for the ADP1653 flash controller. It is used for
  example in Nokia N900.

VIDEO_ADV7170
  Support for the Analog Devices ADV7170 video encoder driver
  
  To compile this driver as a module, choose M here: the
  module will be called adv7170.

VIDEO_ADV7175
  Support for the Analog Devices ADV7175 video encoder driver
  
  To compile this driver as a module, choose M here: the
  module will be called adv7175.

VIDEO_ADV7180
  Support for the Analog Devices ADV7180 video decoder.
  
  To compile this driver as a module, choose M here: the
  module will be called adv7180.

VIDEO_ADV7183
  V4l2 subdevice driver for the Analog Devices
  ADV7183 video decoder.
  
  To compile this driver as a module, choose M here: the
  module will be called adv7183.

VIDEO_ADV7343
  Support for Analog Devices I2C bus based ADV7343 encoder.
  
  To compile this driver as a module, choose M here: the
  module will be called adv7343.

VIDEO_ADV7393
  Support for Analog Devices I2C bus based ADV7393 encoder.
  
  To compile this driver as a module, choose M here: the
  module will be called adv7393.

VIDEO_ADV748X
  V4L2 subdevice driver for the Analog Devices
  ADV7481 and ADV7482 HDMI/Analog video decoders.
  
  To compile this driver as a module, choose M here: the
  module will be called adv748x.

VIDEO_ADV7511
  Support for the Analog Devices ADV7511 video encoder.
  
  This is a Analog Devices HDMI transmitter.
  
  To compile this driver as a module, choose M here: the
  module will be called adv7511.

VIDEO_ADV7511_CEC
  When selected the adv7511 will support the optional
  HDMI CEC feature.

VIDEO_ADV7604
  Support for the Analog Devices ADV7604 video decoder.
  
  This is a Analog Devices Component/Graphics Digitizer
  with 4:1 Multiplexed HDMI Receiver.
  
  To compile this driver as a module, choose M here: the
  module will be called adv7604.

VIDEO_ADV7604_CEC
  When selected the adv7604 will support the optional
  HDMI CEC feature.

VIDEO_ADV7842
  Support for the Analog Devices ADV7842 video decoder.
  
  This is a Analog Devices Component/Graphics/SD Digitizer
  with 2:1 Multiplexed HDMI Receiver.
  
  To compile this driver as a module, choose M here: the
  module will be called adv7842.

VIDEO_ADV7842_CEC
  When selected the adv7842 will support the optional
  HDMI CEC feature.

VIDEO_ADV_DEBUG
  Say Y here to enable advanced debugging functionality on some
  V4L devices.
  In doubt, say N.

VIDEO_AK7375
  This is a driver for the AK7375 camera lens voice coil.
  AK7375 is a 12 bit DAC with 120mA output current sink
  capability. This is designed for linear control of
  voice coil motors, controlled via I2C serial interface.

VIDEO_AK881X
  Video output driver for AKM AK8813 and AK8814 TV encoders

VIDEO_ALLEGRO_DVT
  Support for the encoder video IP core by Allegro DVT. This core is
  found for example on the Xilinx ZynqMP SoC in the EV family and is
  called VCU in the reference manual.
  
  To compile this driver as a module, choose M here: the module
  will be called allegro.

VIDEO_AM437X_VPFE
  Support for AM437x Video Processing Front End based Video
  Capture Driver.
  
  To compile this driver as a module, choose M here. The module
  will be called am437x-vpfe.

VIDEO_APTINA_PLL
  No help

VIDEO_ASPEED
  Support for the Aspeed Video Engine (VE) embedded in the Aspeed
  AST2400 and AST2500 SOCs. The VE can capture and compress video data
  from digital or analog sources.

VIDEO_ATMEL_ISC
  This module makes the ATMEL Image Sensor Controller available
  as a v4l2 device.

VIDEO_ATMEL_ISI
  This module makes the ATMEL Image Sensor Interface available
  as a v4l2 device.

VIDEO_ATOMISP
  Say Y here if your platform supports Intel Atom SoC
  camera imaging subsystem.
  To compile this driver as a module, choose M here: the
  module will be called atomisp

VIDEO_ATOMISP_GC0310
  This is a Video4Linux2 sensor-level driver for the Galaxycore
  GC0310 0.3MP sensor.

VIDEO_ATOMISP_GC2235
  This is a Video4Linux2 sensor-level driver for the OVT
  GC2235 raw camera.
  
  GC2235 is a 2M raw sensor.
  
  It currently only works with the atomisp driver.

VIDEO_ATOMISP_ISP2401
  Enable support for Atom ISP2401-based boards.
  
  Select this option for  Anniedale (Merrifield+ / Moorefield)
  and Cherrytrail SoCs.
  
  Disabling it enables support for Atom ISP2400-based boards
  (Merrifield and Baytrail SoCs).

VIDEO_ATOMISP_LM3554
  This is a Video4Linux2 sub-dev driver for the LM3554
  flash light driver.
  
  To compile this driver as a module, choose M here: the
  module will be called lm3554

VIDEO_ATOMISP_MSRLIST_HELPER
  This is a helper library to be used from a sensor driver to load, parse
  and apply large register lists.
  
  To compile this driver as a module, choose M here: the
  module will be called libmsrlisthelper.

VIDEO_ATOMISP_MT9M114
  This is a Video4Linux2 sensor-level driver for the Micron
  mt9m114 1.3 Mpixel camera.
  
  mt9m114 is video camera sensor.
  
  It currently only works with the atomisp driver.

VIDEO_ATOMISP_OV2680
  This is a Video4Linux2 sensor-level driver for the Omnivision
  OV2680 raw camera.
  
  ov2680 is a 2M raw sensor.
  
  It currently only works with the atomisp driver.

VIDEO_ATOMISP_OV2722
  This is a Video4Linux2 sensor-level driver for the OVT
  OV2722 raw camera.
  
  OVT is a 2M raw sensor.
  
  It currently only works with the atomisp driver.

VIDEO_ATOMISP_OV5693
  This is a Video4Linux2 sensor-level driver for the Micron
  ov5693 5 Mpixel camera.
  
  ov5693 is video camera sensor.
  
  It currently only works with the atomisp driver.

VIDEO_AU0828
  This is a hybrid analog/digital tv capture driver for
  Auvitek's AU0828 USB device.
  
  To compile this driver as a module, choose M here: the
  module will be called au0828

VIDEO_AU0828_RC
  Enables Remote Controller support on au0828 driver.

VIDEO_AU0828_V4L2
  This is a video4linux driver for Auvitek's USB device.
  
  Choose Y here to include support for v4l2 analog video
  capture within the au0828 driver.

VIDEO_BCM2835
  Say Y here to enable camera host interface devices for
  Broadcom BCM2835 SoC. This operates over the VCHIQ interface
  to a service running on VideoCore.

VIDEO_BT819
  Support for BT819A video decoder.
  
  To compile this driver as a module, choose M here: the
  module will be called bt819.

VIDEO_BT848
  Support for BT848 based frame grabber/overlay boards. This includes
  the Miro, Hauppauge and STB boards. Please read the material in
  <file:Documentation/admin-guide/media/bttv.rst> for more information.
  
  To compile this driver as a module, choose M here: the
  module will be called bttv.

VIDEO_BT856
  Support for BT856 video decoder.
  
  To compile this driver as a module, choose M here: the
  module will be called bt856.

VIDEO_BT866
  Support for BT866 video decoder.
  
  To compile this driver as a module, choose M here: the
  module will be called bt866.

VIDEO_CADENCE
  If you have a media device designed by Cadence, say Y.
  
  Note that this option doesn't include new drivers in the kernel:
  saying N will just cause Kconfig to skip all the questions about
  Cadence media devices.

VIDEO_CADENCE_CSI2RX
  Support for the Cadence MIPI CSI2 Receiver controller.
  
  To compile this driver as a module, choose M here: the module will be
  called cdns-csi2rx.

VIDEO_CADENCE_CSI2TX
  Support for the Cadence MIPI CSI2 Transceiver controller.
  
  To compile this driver as a module, choose M here: the module will be
  called cdns-csi2tx.

VIDEO_CAFE_CCIC
  This is a video4linux2 driver for the Marvell 88ALP01 integrated
  CMOS camera controller.  This is the controller found on first-
  generation OLPC systems.

VIDEO_CCS
  This is a generic driver for MIPI CCS, SMIA++ and SMIA compliant
  camera sensors.

VIDEO_CCS_PLL
  No help

VIDEO_COBALT
  This is a video4linux driver for the Cisco PCIe Cobalt card.
  
  This board is sadly not available outside of Cisco, but it is
  very useful as an example of a real driver that uses all the
  latest frameworks and APIs.
  
  To compile this driver as a module, choose M here: the
  module will be called cobalt.

VIDEO_CODA
  Coda is a range of video codec IPs that supports
  H.264, MPEG-4, and other video formats.

VIDEO_CPIA2
  This is the video4linux driver for cameras based on Vision's CPiA2
  (Colour Processor Interface ASIC), such as the Digital Blue QX5
  Microscope. If you have one of these cameras, say Y here
  
  This driver is also available as a module (cpia2).

VIDEO_CS3308
  Support for the Cirrus Logic CS3308 High Performance 8-Channel
  Analog Volume Control
  
  To compile this driver as a module, choose M here: the
  module will be called cs3308.

VIDEO_CS5345
  Support for the Cirrus Logic CS5345 24-bit, 192 kHz
  stereo A/D converter.
  
  To compile this driver as a module, choose M here: the
  module will be called cs5345.

VIDEO_CS53L32A
  Support for the Cirrus Logic CS53L32A low voltage
  stereo A/D converter.
  
  To compile this driver as a module, choose M here: the
  module will be called cs53l32a.

VIDEO_CX18
  This is a video4linux driver for Conexant cx23418 based
  PCI combo video recorder devices.
  
  This is used in devices such as the Hauppauge HVR-1600
  cards.
  
  To compile this driver as a module, choose M here: the
  module will be called cx18.

VIDEO_CX18_ALSA
  This is a video4linux driver for direct (DMA) audio on
  Conexant 23418 based TV cards using ALSA.
  
  To compile this driver as a module, choose M here: the
  module will be called cx18-alsa.

VIDEO_CX231XX
  This is a video4linux driver for Conexant 231xx USB based TV cards.
  
  To compile this driver as a module, choose M here: the
  module will be called cx231xx

VIDEO_CX231XX_ALSA
  This is an ALSA driver for Cx231xx USB based TV cards.
  
  To compile this driver as a module, choose M here: the
  module will be called cx231xx-alsa

VIDEO_CX231XX_DVB
  This adds support for DVB cards based on the
  Conexant cx231xx chips.

VIDEO_CX231XX_RC
  cx231xx hardware has a builtin RX/TX support. However, a few
  designs opted to not use it, but, instead, some other hardware.
  This module enables the usage of those other hardware, like the
  ones used with ISDB-T boards.
  
  On most cases, all you need for IR is mceusb module.

VIDEO_CX2341X
  No help

VIDEO_CX23885
  This is a video4linux driver for Conexant 23885 based
  TV cards.
  
  To compile this driver as a module, choose M here: the
  module will be called cx23885

VIDEO_CX25821
  This is a video4linux driver for Conexant 25821 based
  TV cards.
  
  To compile this driver as a module, choose M here: the
  module will be called cx25821

VIDEO_CX25821_ALSA
  This is a video4linux driver for direct (DMA) audio on
  Conexant 25821 based capture cards using ALSA.
  
  It only works with boards with function 01 enabled.
  To check if your board supports, use lspci -n.
  If supported, you should see 14f1:8801 or 14f1:8811
  PCI device.
  
  To compile this driver as a module, choose M here: the
  module will be called cx25821-alsa.
  

VIDEO_CX25840
  Support for the Conexant CX2584x audio/video decoders.
  
  To compile this driver as a module, choose M here: the
  module will be called cx25840

VIDEO_CX88
  This is a video4linux driver for Conexant 2388x based
  TV cards.
  
  To compile this driver as a module, choose M here: the
  module will be called cx8800

VIDEO_CX88_ALSA
  This is a video4linux driver for direct (DMA) audio on
  Conexant 2388x based TV cards using ALSA.
  
  It only works with boards with function 01 enabled.
  To check if your board supports, use lspci -n.
  If supported, you should see 14f1:8801 or 14f1:8811
  PCI device.
  
  To compile this driver as a module, choose M here: the
  module will be called cx88-alsa.

VIDEO_CX88_BLACKBIRD
  This adds support for MPEG encoder cards based on the
  Blackbird reference design, using the Conexant 2388x
  and 23416 chips.
  
  To compile this driver as a module, choose M here: the
  module will be called cx88-blackbird.

VIDEO_CX88_DVB
  This adds support for DVB/ATSC cards based on the
  Conexant 2388x chip.
  
  To compile this driver as a module, choose M here: the
  module will be called cx88-dvb.

VIDEO_CX88_ENABLE_VP3054
  This adds DVB-T support for cards based on the
  Conexant 2388x chip and the MT352 demodulator,
  which also require support for the VP-3054
  Secondary I2C bus, such at DNTV Live! DVB-T Pro.

VIDEO_CX88_MPEG
  No help

VIDEO_CX88_VP3054
  No help

VIDEO_DAVINCI_VPBE_DISPLAY
  Enables Davinci VPBE module used for display devices.
  This module is used for display on TI DM644x/DM365/DM355
  based display devices.
  
  To compile this driver as a module, choose M here. There will
  be five modules created called vpss.ko, vpbe.ko, vpbe_osd.ko,
  vpbe_venc.ko and vpbe_display.ko

VIDEO_DAVINCI_VPIF_CAPTURE
  Enables Davinci VPIF module used for capture devices.
  This module is used for capture on TI DM6467/DA850/OMAPL138
  SoCs.
  
  To compile this driver as a module, choose M here. There will
  be two modules called vpif.ko and vpif_capture.ko

VIDEO_DAVINCI_VPIF_DISPLAY
  Enables Davinci VPIF module used for display devices.
  This module is used for display on TI DM6467/DA850/OMAPL138
  SoCs.
  
  To compile this driver as a module, choose M here. There will
  be two modules called vpif.ko and vpif_display.ko

VIDEO_DEV
  Enables the V4L2 API, used by cameras, analog TV, video grabbers,
  radio devices and by some input devices.

VIDEO_DM355_CCDC
  Enables DM355 CCD hw module. DM355 CCDC hw interfaces
  with decoder modules such as TVP5146 over BT656 or
  sensor module such as MT9T001 over a raw interface. This
  module configures the interface and CCDC/ISIF to do
  video frame capture from a slave decoders
  
  To compile this driver as a module, choose M here. There will
  be three modules called vpfe_capture.ko, vpss.ko and dm355_ccdc.ko

VIDEO_DM365_ISIF
  Enables ISIF hw module. This is the hardware module for
  configuring ISIF in VPFE to capture Raw Bayer RGB data from
  a image sensor or YUV data from a YUV source.
  
  To compile this driver as a module, choose M here. There will
  be three modules called vpfe_capture.ko, vpss.ko and isif.ko

VIDEO_DM6446_CCDC
  Enables DaVinci CCD hw module. DaVinci CCDC hw interfaces
  with decoder modules such as TVP5146 over BT656 or
  sensor module such as MT9T001 over a raw interface. This
  module configures the interface and CCDC/ISIF to do
  video frame capture from slave decoders.
  
  To compile this driver as a module, choose M here. There will
  be three modules called vpfe_capture.ko, vpss.ko and dm644x_ccdc.ko

VIDEO_DT3155
  Enables dt3155 device driver for the DataTranslation DT3155 frame grabber.
  Say Y here if you have this hardware.
  In doubt, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called dt3155.

VIDEO_DW9714
  This is a driver for the DW9714 camera lens voice coil.
  DW9714 is a 10 bit DAC with 120mA output current sink
  capability. This is designed for linear control of
  voice coil motors, controlled via I2C serial interface.

VIDEO_DW9768
  This is a driver for the DW9768 camera lens voice coil.
  DW9768 is a 10 bit DAC with 100mA output current sink
  capability. This is designed for linear control of
  voice coil motors, controlled via I2C serial interface.

VIDEO_DW9807_VCM
  This is a driver for the DW9807 camera lens voice coil.
  DW9807 is a 10 bit DAC with 100mA output current sink
  capability. This is designed for linear control of
  voice coil motors, controlled via I2C serial interface.

VIDEO_EM28XX
  No help

VIDEO_EM28XX_ALSA
  This is an ALSA driver for some Empia 28xx based TV cards.
  
  This is not required for em2800/em2820/em2821 boards. However,
  newer em28xx devices uses Vendor Class for audio, instead of
  implementing the USB Audio Class. For those chips, this module
  will enable digital audio.
  
  To compile this driver as a module, choose M here: the
  module will be called em28xx-alsa

VIDEO_EM28XX_DVB
  This adds support for DVB cards based on the
  Empiatech em28xx chips.

VIDEO_EM28XX_RC
  Enables Remote Controller support on em28xx driver.

VIDEO_EM28XX_V4L2
  This is a video4linux driver for Empia 28xx based TV cards.
  
  To compile this driver as a module, choose M here: the
  module will be called em28xx

VIDEO_ET8EK8
  This is a driver for the Toshiba ET8EK8 5 MP camera sensor.
  It is used for example in Nokia N900 (RX-51).

VIDEO_EXYNOS4_FIMC_IS
  This is a V4L2 driver for Samsung EXYNOS4x12 SoC series
  FIMC-IS (Imaging Subsystem).
  
  To compile this driver as a module, choose M here: the
  module will be called exynos4-fimc-is.

VIDEO_EXYNOS4_ISP_DMA_CAPTURE
  This option enables an additional video device node exposing a V4L2
  video capture interface for the FIMC-IS ISP raw (Bayer) capture DMA.

VIDEO_EXYNOS4_IS_COMMON
  No help

VIDEO_EXYNOS_FIMC_LITE
  This is a V4L2 driver for Samsung EXYNOS4/5 SoC FIMC-LITE camera
  host interface.
  
  To compile this driver as a module, choose M here: the
  module will be called exynos-fimc-lite.

VIDEO_FB_IVTV
  This is a framebuffer driver for the Conexant cx23415 MPEG
  encoder/decoder.
  
  This is used in the Hauppauge PVR-350 card.
  
  To compile this driver as a module, choose M here: the
  module will be called ivtvfb.

VIDEO_FB_IVTV_FORCE_PAT
  With PAT enabled, the cx23415 framebuffer driver does not
  utilize write-combined caching on the framebuffer memory.
  For this reason, the driver will by default disable itself
  when initializied on a kernel with PAT enabled (i.e. not
  using the nopat kernel parameter).
  
  The driver is not easily upgradable to the PAT-aware
  ioremap_wc() API since the firmware hides the address
  ranges that should be marked write-combined from the driver.
  
  With this setting enabled, the framebuffer will initialize on
  PAT-enabled systems but the framebuffer memory will be uncached.
  
  If unsure, say N.

VIDEO_FIXED_MINOR_RANGES
  Say Y here to enable the old-style fixed-range minor assignments.
  Only useful if you rely on the old behavior and use mknod instead of udev.
  
  When in doubt, say N.

VIDEO_GO7007
  This is a video4linux driver for the WIS GO7007 MPEG
  encoder chip.
  
  To compile this driver as a module, choose M here: the
  module will be called go7007.

VIDEO_GO7007_LOADER
  This is a go7007 firmware loader driver for the WIS GO7007
  MPEG encoder chip over USB.
  
  To compile this driver as a module, choose M here: the
  module will be called go7007-loader.

VIDEO_GO7007_USB
  This is a video4linux driver for the WIS GO7007 MPEG
  encoder chip over USB.
  
  To compile this driver as a module, choose M here: the
  module will be called go7007-usb.

VIDEO_GO7007_USB_S2250_BOARD
  This is a video4linux driver for the Sensoray 2250/2251 device.
  
  To compile this driver as a module, choose M here: the
  module will be called s2250.

VIDEO_GS1662
  Enable the GS1662 driver which serializes video streams.

VIDEO_HANTRO
  Support for the Hantro IP based Video Processing Units present on
  Rockchip and NXP i.MX8M SoCs, which accelerate video and image
  encoding and decoding.
  To compile this driver as a module, choose M here: the module
  will be called hantro-vpu.

VIDEO_HANTRO_IMX8M
  Enable support for i.MX8M SoCs.

VIDEO_HANTRO_ROCKCHIP
  Enable support for RK3288, RK3328, and RK3399 SoCs.

VIDEO_HDPVR
  This is a video4linux driver for Hauppauge's HD PVR USB device.
  
  To compile this driver as a module, choose M here: the
  module will be called hdpvr
  

VIDEO_HEXIUM_GEMINI
  This is a video4linux driver for the Hexium Gemini frame
  grabber card by Hexium. Please note that the Gemini Dual
  card is *not* fully supported.
  
  To compile this driver as a module, choose M here: the
  module will be called hexium_gemini.

VIDEO_HEXIUM_ORION
  This is a video4linux driver for the Hexium HV-PCI6 and
  Orion frame grabber cards by Hexium.
  
  To compile this driver as a module, choose M here: the
  module will be called hexium_orion.

VIDEO_HI556
  This is a Video4Linux2 sensor driver for the Hynix
  Hi-556 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called hi556.

VIDEO_I2C
  Enable the I2C transport video support which supports the
  following:
   * Panasonic AMG88xx Grid-Eye Sensors
   * Melexis MLX90640 Thermal Cameras
  
  To compile this driver as a module, choose M here: the
  module will be called video-i2c

VIDEO_IMX214
  This is a Video4Linux2 sensor driver for the Sony
  IMX214 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called imx214.

VIDEO_IMX219
  This is a Video4Linux2 sensor driver for the Sony
  IMX219 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called imx219.

VIDEO_IMX258
  This is a Video4Linux2 sensor driver for the Sony
  IMX258 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called imx258.

VIDEO_IMX274
  This is a V4L2 sensor driver for the Sony IMX274
  CMOS image sensor.

VIDEO_IMX290
  This is a Video4Linux2 sensor driver for the Sony
  IMX290 camera sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called imx290.

VIDEO_IMX319
  This is a Video4Linux2 sensor driver for the Sony
  IMX319 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called imx319.

VIDEO_IMX355
  This is a Video4Linux2 sensor driver for the Sony
  IMX355 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called imx355.

VIDEO_IMX7_CSI
  Enable support for video4linux camera sensor interface driver for
  i.MX6UL/L or i.MX7.

VIDEO_IMX_CSI
  A video4linux camera sensor interface driver for i.MX5/6.

VIDEO_IMX_MEDIA
  Say yes here to enable support for video4linux media controller
  driver for the i.MX5/6 SOC.

VIDEO_IMX_PXP
  The i.MX Pixel Pipeline is a memory-to-memory engine for scaling,
  color space conversion, and rotation.

VIDEO_IMX_VDOA
  No help

VIDEO_IPU3_CIO2
  This is the Intel IPU3 CIO2 CSI-2 receiver unit, found in Intel
  Skylake and Kaby Lake SoCs and used for capturing images and
  video from a camera sensor.
  
  Say Y or M here if you have a Skylake/Kaby Lake SoC with MIPI CSI-2
  connected camera.
  The module will be called ipu3-cio2.

VIDEO_IPU3_IMGU
  This is the Video4Linux2 driver for Intel IPU3 image processing unit,
  found in Intel Skylake and Kaby Lake SoCs and used for processing
  images and video.
  
  Say Y or M here if you have a Skylake/Kaby Lake SoC with a MIPI
  camera. The module will be called ipu3-imgu.

VIDEO_IR_I2C
  Most boards have an IR chip directly connected via GPIO. However,
  some video boards have the IR connected via I2C bus.
  
  If your board doesn't have an I2C IR chip, you may disable this
  option.
  
  In doubt, say Y.

VIDEO_IVTV
  This is a video4linux driver for Conexant cx23416 or cx23415 based
  PCI personal video recorder devices.
  
  This is used in devices such as the Hauppauge PVR-150/250/350/500
  cards.
  
  To compile this driver as a module, choose M here: the
  module will be called ivtv.

VIDEO_IVTV_ALSA
  This driver provides an ALSA interface as another method for user
  applications to obtain PCM audio data from Conexant cx23415/cx23416
  based PCI TV cards supported by the ivtv driver.
  
  The ALSA interface has much wider use in user applications performing
  PCM audio capture, than the V4L2 "/dev/video24" PCM audio interface
  provided by the main ivtv driver.
  
  To compile this driver as a module, choose M here: the
  module will be called ivtv-alsa.

VIDEO_IVTV_DEPRECATED_IOCTLS
  Enable the usage of the a DVB set of ioctls that were abused by
  IVTV driver for a while.
  
  Those ioctls were not needed for a long time, as IVTV implements
  the proper V4L2 ioctls since kernel 3.3.
  
  If unsure, say N.

VIDEO_KS0127
  Support for KS0127 video decoder.
  
  This chip is used on AverMedia AVS6EYES Zoran-based MJPEG
  cards.
  
  To compile this driver as a module, choose M here: the
  module will be called ks0127.

VIDEO_LM3560
  This is a driver for the lm3560 dual flash controllers. It controls
  flash, torch LEDs.

VIDEO_LM3646
  This is a driver for the lm3646 dual flash controllers. It controls
  flash, torch LEDs.

VIDEO_M52790
  Support for the Mitsubishi M52790 A/V switch.
  
  To compile this driver as a module, choose M here: the
  module will be called m52790.

VIDEO_M5MOLS
  This driver supports Fujitsu M-5MOLS camera sensor with ISP

VIDEO_MAX9286
  This driver supports the Maxim MAX9286 GMSL deserializer.
  
  To compile this driver as a module, choose M here: the
  module will be called max9286.

VIDEO_MEDIATEK_JPEG
  Mediatek jpeg codec driver provides HW capability to decode
  JPEG format
  
  To compile this driver as a module, choose M here: the
  module will be called mtk-jpeg

VIDEO_MEDIATEK_MDP
  It is a v4l2 driver and present in Mediatek MT8173 SoCs.
  The driver supports for scaling and color space conversion.
  
  To compile this driver as a module, choose M here: the
  module will be called mtk-mdp.

VIDEO_MEDIATEK_VCODEC
  Mediatek video codec driver provides HW capability to
  encode and decode in a range of video formats on MT8173
  and MT8183.
  
  Note that support for MT8173 requires VIDEO_MEDIATEK_VPU to
  also be selected. Support for MT8183 depends on MTK_SCP.
  
  To compile this driver as modules, choose M here: the
  modules will be called mtk-vcodec-dec and mtk-vcodec-enc.

VIDEO_MEDIATEK_VCODEC_SCP
  No help

VIDEO_MEDIATEK_VCODEC_VPU
  No help

VIDEO_MEDIATEK_VPU
  This driver provides downloading VPU firmware and
  communicating with VPU. This driver for hw video
  codec embedded in Mediatek's MT8173 SOCs. It is able
  to handle video decoding/encoding in a range of formats.
  
  To compile this driver as a module, choose M here: the
  module will be called mtk-vpu.

VIDEO_MEM2MEM_DEINTERLACE
  Generic deinterlacing V4L2 driver.

VIDEO_MESON_GE2D
  This is a v4l2 driver for Amlogic GE2D 2D graphics accelerator.
  GE2D is a standalone 2D graphic acceleration unit, with color converter,
  image scaling, BitBLT & alpha blending operations.
  
  To compile this driver as a module choose m here.

VIDEO_MESON_VDEC
  Support for the video decoder found in gxbb/gxl/gxm chips.

VIDEO_MEYE
  This is the video4linux driver for the Motion Eye camera found
  in the Vaio Picturebook laptops. Please read the material in
  <file:Documentation/admin-guide/media/meye.rst> for more information.
  
  If you say Y or M here, you need to say Y or M to "Sony Laptop
  Extras" in the misc device section.
  
  To compile this driver as a module, choose M here: the
  module will be called meye.

VIDEO_ML86V7667
  Support for the OKI Semiconductor ML86V7667 video decoder.
  
  To compile this driver as a module, choose M here: the
  module will be called ml86v7667.

VIDEO_MMP_CAMERA
  This is a Video4Linux2 driver for the integrated camera
  controller found on Marvell Armada 610 application
  processors (and likely beyond).  This is the controller found
  in OLPC XO 1.75 systems.
  

VIDEO_MSP3400
  Support for the Micronas MSP34xx series of audio decoders.
  
  To compile this driver as a module, choose M here: the
  module will be called msp3400.

VIDEO_MT9M001
  This driver supports MT9M001 cameras from Micron, monochrome
  and colour models.

VIDEO_MT9M032
  This driver supports MT9M032 camera sensors from Aptina, monochrome
  models only.

VIDEO_MT9M111
  This driver supports MT9M111, MT9M112 and MT9M131 cameras from
  Micron/Aptina

VIDEO_MT9P031
  This is a Video4Linux2 sensor driver for the Aptina
  (Micron) mt9p031 5 Mpixel camera.

VIDEO_MT9T001
  This is a Video4Linux2 sensor driver for the Aptina
  (Micron) mt0t001 3 Mpixel camera.

VIDEO_MT9T112
  This is a Video4Linux2 sensor driver for the Aptina
  (Micron) MT9T111 and MT9T112 3 Mpixel camera.
  
  To compile this driver as a module, choose M here: the
  module will be called mt9t112.

VIDEO_MT9V011
  This is a Video4Linux2 sensor driver for the Micron
  mt0v011 1.3 Mpixel camera.  It currently only works with the
  em28xx driver.

VIDEO_MT9V032
  This is a Video4Linux2 sensor driver for the Micron
  MT9V032 752x480 CMOS sensor.

VIDEO_MT9V111
  This is a Video4Linux2 sensor driver for the Aptina/Micron
  MT9V111 sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called mt9v111.

VIDEO_MUX
  This driver provides support for N:1 video bus multiplexers.

VIDEO_MX2_EMMAPRP
  MX2X chips have a PrP that can be used to process buffers from
  memory to memory. Operations include resizing and format
  conversion.

VIDEO_MXB
  This is a video4linux driver for the 'Multimedia eXtension Board'
  TV card by Siemens-Nixdorf.
  
  To compile this driver as a module, choose M here: the
  module will be called mxb.

VIDEO_NOON010PC30
  This driver supports NOON010PC30 CIF camera from Siliconfile

VIDEO_OMAP2_VOUT
  V4L2 Display driver support for OMAP2/3 based boards.

VIDEO_OMAP2_VOUT_VRFB
  No help

VIDEO_OMAP3
  Driver for an OMAP 3 camera controller.

VIDEO_OMAP3_DEBUG
  Enable debug messages on OMAP 3 camera controller driver.

VIDEO_OMAP4
  Driver for an OMAP 4 ISS controller.

VIDEO_OV02A10
  This is a Video4Linux2 sensor driver for the OmniVision
  OV02A10 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called ov02a10.

VIDEO_OV13858
  This is a Video4Linux2 sensor driver for the OmniVision
  OV13858 camera.

VIDEO_OV2640
  This is a Video4Linux2 sensor driver for the OmniVision
  OV2640 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called ov2640.

VIDEO_OV2659
  This is a Video4Linux2 sensor driver for the OmniVision
  OV2659 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called ov2659.

VIDEO_OV2680
  This is a Video4Linux2 sensor driver for the OmniVision
  OV2680 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called ov2680.

VIDEO_OV2685
  This is a Video4Linux2 sensor driver for the OmniVision
  OV2685 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called ov2685.

VIDEO_OV2740
  This is a Video4Linux2 sensor driver for the OmniVision
  OV2740 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called ov2740.

VIDEO_OV5640
  This is a Video4Linux2 sensor driver for the Omnivision
  OV5640 camera sensor with a MIPI CSI-2 interface.

VIDEO_OV5645
  This is a Video4Linux2 sensor driver for the OmniVision
  OV5645 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called ov5645.

VIDEO_OV5647
  This is a Video4Linux2 sensor driver for the OmniVision
  OV5647 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called ov5647.

VIDEO_OV5670
  This is a Video4Linux2 sensor driver for the OmniVision
  OV5670 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called ov5670.

VIDEO_OV5675
  This is a Video4Linux2 sensor driver for the OmniVision
  OV5675 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called ov5675.

VIDEO_OV5695
  This is a Video4Linux2 sensor driver for the OmniVision
  OV5695 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called ov5695.

VIDEO_OV6650
  This is a Video4Linux2 sensor driver for the OmniVision
  OV6650 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called ov6650.

VIDEO_OV7251
  This is a Video4Linux2 sensor driver for the OmniVision
  OV7251 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called ov7251.

VIDEO_OV7640
  This is a Video4Linux2 sensor driver for the OmniVision
  OV7640 camera.
  
  To compile this driver as a module, choose M here: the
  module will be called ov7640.

VIDEO_OV7670
  This is a Video4Linux2 sensor driver for the OmniVision
  OV7670 VGA camera.  It currently only works with the M88ALP01
  controller.

VIDEO_OV772X
  This is a Video4Linux2 sensor driver for the OmniVision
  OV772x camera.
  
  To compile this driver as a module, choose M here: the
  module will be called ov772x.

VIDEO_OV7740
  This is a Video4Linux2 sensor driver for the OmniVision
  OV7740 VGA camera sensor.

VIDEO_OV8856
  This is a Video4Linux2 sensor driver for the OmniVision
  OV8856 camera sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called ov8856.

VIDEO_OV9640
  This is a Video4Linux2 sensor driver for the OmniVision
  OV9640 camera sensor.

VIDEO_OV9650
  This is a V4L2 sensor driver for the Omnivision
  OV9650 and OV9652 camera sensors.

VIDEO_OV9734
  This is a Video4Linux2 sensor driver for the OmniVision
  OV9734 camera.
  
  To compile this driver as a module, choose M here: the
  module's name is ov9734.

VIDEO_PCI_SKELETON
  Enable build of the skeleton PCI driver, used as a reference
  when developing new drivers.

VIDEO_PVRUSB2
  This is a video4linux driver for Conexant 23416 based
  usb2 personal video recorder devices.
  
  To compile this driver as a module, choose M here: the
  module will be called pvrusb2

VIDEO_PVRUSB2_DEBUGIFC
  This option enables the inclusion of a debug interface
  in the pvrusb2 driver, hosted through sysfs.
  
  You do not need to select this option unless you plan
  on debugging the driver or performing a manual firmware
  extraction.
  
  If you are in doubt, say N.

VIDEO_PVRUSB2_DVB
  This option enables a DVB interface for the pvrusb2 driver.
  If your device does not support digital television, this
  feature will have no affect on the driver's operation.
  
  If you are in doubt, say Y.

VIDEO_PVRUSB2_SYSFS
  This option enables the operation of a sysfs based
  interface for query and control of the pvrusb2 driver.
  
  This is not generally needed for v4l applications,
  although certain applications are optimized to take
  advantage of this feature.
  
  If you are in doubt, say Y.
  
  Note: This feature is experimental and subject to change.

VIDEO_PXA27x
  This is a v4l2 driver for the PXA27x Quick Capture Interface

VIDEO_QCOM_CAMSS
  No help

VIDEO_QCOM_VENUS
  This is a V4L2 driver for Qualcomm Venus video accelerator
  hardware. It accelerates encoding and decoding operations
  on various Qualcomm SoCs.
  To compile this driver as a module choose m here.

VIDEO_RCAR_CSI2
  Support for Renesas R-Car MIPI CSI-2 receiver.
  Supports R-Car Gen3 and RZ/G2 SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called rcar-csi2.

VIDEO_RCAR_DRIF
  Say Y if you want to enable R-Car Gen3 DRIF support. DRIF is Digital
  Radio Interface that interfaces with an RF front end chip. It is a
  receiver of digital data which uses DMA to transfer received data to
  a configured location for an application to use.
  
  To compile this driver as a module, choose M here; the module
  will be called rcar_drif.

VIDEO_RCAR_VIN
  Support for Renesas R-Car Video Input (VIN) driver.
  Supports R-Car Gen{2,3} and RZ/G{1,2} SoCs.
  
  To compile this driver as a module, choose M here: the
  module will be called rcar-vin.

VIDEO_RDACM20
  This driver supports the IMI RDACM20 GMSL camera, used in
  ADAS systems.
  
  This camera should be used in conjunction with a GMSL
  deserialiser such as the MAX9286.

VIDEO_RENESAS_CEU
  This is a v4l2 driver for the Renesas CEU Interface

VIDEO_RENESAS_FCP
  This is a driver for the Renesas Frame Compression Processor (FCP).
  The FCP is a companion module of video processing modules in the
  Renesas R-Car Gen3 and RZ/G2 SoCs. It handles memory access for
  the codec, VSP and FDP modules.
  
  To compile this driver as a module, choose M here: the module
  will be called rcar-fcp.

VIDEO_RENESAS_FDP1
  This is a V4L2 driver for the Renesas Fine Display Processor
  providing colour space conversion, and de-interlacing features.
  
  To compile this driver as a module, choose M here: the module
  will be called rcar_fdp1.

VIDEO_RENESAS_JPU
  This is a V4L2 driver for the Renesas JPEG Processing Unit.
  
  To compile this driver as a module, choose M here: the module
  will be called rcar_jpu.

VIDEO_RENESAS_VSP1
  This is a V4L2 driver for the Renesas VSP1 video processing engine.
  
  To compile this driver as a module, choose M here: the module
  will be called vsp1.

VIDEO_RJ54N1
  This is a V4L2 sensor driver for Sharp RJ54N1CB0C CMOS image
  sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called rj54n1.

VIDEO_ROCKCHIP_ISP1
  Enable this to support the Image Signal Processing (ISP) module
  present in RK3399 SoCs.
  
  To compile this driver as a module, choose M here: the module
  will be called rockchip-isp1.

VIDEO_ROCKCHIP_RGA
  This is a v4l2 driver for Rockchip SOC RGA 2d graphics accelerator.
  Rockchip RGA is a separate 2D raster graphic acceleration unit.
  It accelerates 2D graphics operations, such as point/line drawing,
  image scaling, rotation, BitBLT, alpha blending and image blur/sharpness.
  
  To compile this driver as a module choose m here.

VIDEO_ROCKCHIP_VDEC
  Support for the Rockchip Video Decoder IP present on Rockchip SoCs,
  which accelerates video decoding.
  To compile this driver as a module, choose M here: the module
  will be called rockchip-vdec.

VIDEO_S3C_CAMIF
  This is a v4l2 driver for s3c24xx and s3c64xx SoC series camera
  host interface (CAMIF).
  
  To compile this driver as a module, choose M here: the module
  will be called s3c-camif.

VIDEO_S5C73M3
  This is a V4L2 sensor driver for Samsung S5C73M3
  8 Mpixel camera.

VIDEO_S5K4ECGX
  This is a V4L2 sensor driver for Samsung S5K4ECGX 5M
  camera sensor with an embedded SoC image signal processor.

VIDEO_S5K5BAF
  This is a V4L2 sensor driver for Samsung S5K5BAF 2M
  camera sensor with an embedded SoC image signal processor.

VIDEO_S5K6A3
  This is a V4L2 sensor driver for Samsung S5K6A3 raw
  camera sensor.

VIDEO_S5K6AA
  This is a V4L2 sensor driver for Samsung S5K6AA(FX) 1.3M
  camera sensor with an embedded SoC image signal processor.

VIDEO_S5P_FIMC
  This is a V4L2 driver for Samsung S5P and EXYNOS4 SoC camera host
  interface and video postprocessor (FIMC) devices.
  
  To compile this driver as a module, choose M here: the
  module will be called s5p-fimc.

VIDEO_S5P_MIPI_CSIS
  This is a V4L2 driver for Samsung S5P and EXYNOS4 SoC MIPI-CSI2
  receiver (MIPI-CSIS) devices.
  
  To compile this driver as a module, choose M here: the
  module will be called s5p-csis.

VIDEO_SAA6588
  Support for this Radio Data System (RDS) decoder. This allows
  seeing radio station identification transmitted using this
  standard.
  
  To compile this driver as a module, choose M here: the
  module will be called saa6588.

VIDEO_SAA6752HS
  Support for the Philips SAA6752HS MPEG-2 video and MPEG-audio/AC-3
  audio encoder with multiplexer.
  
  To compile this driver as a module, choose M here: the
  module will be called saa6752hs.

VIDEO_SAA7110
  Support for the Philips SAA7110 video decoders.
  
  To compile this driver as a module, choose M here: the
  module will be called saa7110.

VIDEO_SAA711X
  Support for the Philips SAA7111/3/4/5 video decoders.
  
  To compile this driver as a module, choose M here: the
  module will be called saa7115.

VIDEO_SAA7127
  Support for the Philips SAA7127/9 digital video encoders.
  
  To compile this driver as a module, choose M here: the
  module will be called saa7127.

VIDEO_SAA7134
  This is a video4linux driver for Philips SAA713x based
  TV cards.
  
  To compile this driver as a module, choose M here: the
  module will be called saa7134.

VIDEO_SAA7134_ALSA
  This is a video4linux driver for direct (DMA) audio in
  Philips SAA713x based TV cards using ALSA
  
  To compile this driver as a module, choose M here: the
  module will be called saa7134-alsa.

VIDEO_SAA7134_DVB
  This adds support for DVB cards based on the
  Philips saa7134 chip.
  
  To compile this driver as a module, choose M here: the
  module will be called saa7134-dvb.

VIDEO_SAA7134_GO7007
  Enables saa7134 driver support for boards with go7007
  MPEG encoder (WIS Voyager or compatible).

VIDEO_SAA7134_RC
  Enables Remote Controller support on saa7134 driver.

VIDEO_SAA7146
  No help

VIDEO_SAA7146_VV
  No help

VIDEO_SAA7164
  This is a video4linux driver for NXP SAA7164 based
  TV cards.
  
  To compile this driver as a module, choose M here: the
  module will be called saa7164
  

VIDEO_SAA717X
  Support for the Philips SAA7171/3/4 audio/video decoders.
  
  To compile this driver as a module, choose M here: the
  module will be called saa717x.

VIDEO_SAA7185
  Support for the Philips SAA7185 video encoder.
  
  To compile this driver as a module, choose M here: the
  module will be called saa7185.

VIDEO_SAMSUNG_EXYNOS4_IS
  Say Y here to enable camera host interface devices for
  Samsung S5P and EXYNOS SoC series.

VIDEO_SAMSUNG_EXYNOS_GSC
  This is a v4l2 driver for Samsung EXYNOS5 SoC G-Scaler.

VIDEO_SAMSUNG_S5P_G2D
  This is a v4l2 driver for Samsung S5P and EXYNOS4 G2D
  2d graphics accelerator.

VIDEO_SAMSUNG_S5P_JPEG
  This is a v4l2 driver for Samsung S5P, EXYNOS3250
  and EXYNOS4 JPEG codec

VIDEO_SAMSUNG_S5P_MFC
  MFC 5.1 and 6.x driver for V4L2

VIDEO_SH_VOU
  Support for the Video Output Unit (VOU) on SuperH SoCs.

VIDEO_SOLO6X10
  This driver supports the Bluecherry H.264 and MPEG-4 hardware
  compression capture cards and other Softlogic-based ones.
  
  Following cards have been tested:
  * Bluecherry BC-H16480A (PCIe, 16 port, H.264)
  * Bluecherry BC-H04120A (PCIe, 4 port, H.264)
  * Bluecherry BC-H04120A-MPCI (Mini-PCI, 4 port, H.264)
  * Bluecherry BC-04120A (PCIe, 4 port, MPEG-4)

VIDEO_SONY_BTF_MPX
  Support for the internal MPX of the Sony BTF-PG472Z tuner.
  
  To compile this driver as a module, choose M here: the
  module will be called sony-btf-mpx.

VIDEO_SR030PC30
  This driver supports SR030PC30 VGA camera from Siliconfile

VIDEO_STI_BDISP
  This v4l2 mem2mem driver is a 2D blitter for STMicroelectronics SoC.

VIDEO_STI_DELTA
  This V4L2 driver enables DELTA multi-format video decoder
  of STMicroelectronics STiH4xx SoC series allowing hardware
  decoding of various compressed video bitstream format in
  raw uncompressed format.
  
  Use this option to see the decoders available for such
  hardware.
  
  Please notice that the driver will only be built if
  at least one of the DELTA decoder below is selected.

VIDEO_STI_DELTA_DRIVER
  No help

VIDEO_STI_DELTA_MJPEG
  Enables DELTA MJPEG hardware support.
  
  To compile this driver as a module, choose M here:
  the module will be called st-delta.

VIDEO_STI_HVA
  This V4L2 driver enables HVA (Hardware Video Accelerator) multi-format
  video encoder of STMicroelectronics SoC, allowing hardware encoding of
  raw uncompressed formats in various compressed video bitstreams format.
  
  To compile this driver as a module, choose M here:
  the module will be called st-hva.

VIDEO_STI_HVA_DEBUGFS
  Select this to see information about the internal state and the last
  operation of STMicroelectronics HVA multi-format video encoder in
  debugfs.
  
  Choose N unless you know you need this.

VIDEO_STK1160
  No help

VIDEO_STK1160_COMMON
  This is a video4linux driver for STK1160 based video capture devices.
  
  To compile this driver as a module, choose M here: the
  module will be called stk1160.
  
  This driver only provides support for video capture. For audio
  capture, you need to select the snd-usb-audio driver (i.e.
  CONFIG_SND_USB_AUDIO).

VIDEO_STM32_DCMI
  This module makes the STM32 Digital Camera Memory Interface (DCMI)
  available as a v4l2 device.
  
  To compile this driver as a module, choose M here: the module
  will be called stm32-dcmi.

VIDEO_ST_MIPID02
  Support for STMicroelectronics MIPID02 CSI-2 to PARALLEL bridge.
  It is used to allow usage of CSI-2 sensor with PARALLEL port
  controller.
  
  To compile this driver as a module, choose M here: the
  module will be called st-mipid02.

VIDEO_SUN4I_CSI
  This is a V4L2 driver for the Allwinner A10 CSI
  
  To compile this driver as a module, choose M here: the module
  will be called sun4i_csi.

VIDEO_SUN6I_CSI
  Support for the Allwinner Camera Sensor Interface Controller on V3s.

VIDEO_SUN8I_DEINTERLACE
  Support for the Allwinner deinterlace unit with scaling
  capability found on some SoCs, like H3.
  To compile this driver as a module choose m here.

VIDEO_SUN8I_ROTATE
  Support for the Allwinner DE2 rotation unit.
  To compile this driver as a module choose m here.

VIDEO_SUNXI
  If you have an Allwinner SoC based on the sunXi family, say Y.
  
  Note that this option doesn't include new drivers in the
  kernel: saying N will just cause Kconfig to skip all the
  questions about Allwinner media devices.

VIDEO_SUNXI_CEDRUS
  Support for the VPU found in Allwinner SoCs, also known as the Cedar
  video engine.
  
  To compile this driver as a module, choose M here: the module
  will be called sunxi-cedrus.

VIDEO_TC358743
  Support for the Toshiba TC358743 HDMI to MIPI CSI-2 bridge.
  
  To compile this driver as a module, choose M here: the
  module will be called tc358743.

VIDEO_TC358743_CEC
  When selected the tc358743 will support the optional
  HDMI CEC feature.

VIDEO_TDA1997X
  V4L2 subdevice driver for the NXP TDA1997x HDMI receivers.
  
  To compile this driver as a module, choose M here: the
  module will be called tda1997x.

VIDEO_TDA7432
  Support for tda7432 audio decoder chip found on some bt8xx boards.
  
  To compile this driver as a module, choose M here: the
  module will be called tda7432.

VIDEO_TDA9840
  Support for tda9840 audio decoder chip found on some Zoran boards.
  
  To compile this driver as a module, choose M here: the
  module will be called tda9840.

VIDEO_TEA6415C
  Support for tea6415c audio decoder chip found on some bt8xx boards.
  
  To compile this driver as a module, choose M here: the
  module will be called tea6415c.

VIDEO_TEA6420
  Support for tea6420 audio decoder chip found on some bt8xx boards.
  
  To compile this driver as a module, choose M here: the
  module will be called tea6420.

VIDEO_TEGRA
  Choose this option if you have an NVIDIA Tegra SoC.
  
  To compile this driver as a module, choose M here: the module
  will be called tegra-video.

VIDEO_TEGRA_TPG
  Say yes here to enable Tegra internal TPG mode

VIDEO_THS7303
  Support for TI THS7303/53 video amplifier
  
  To compile this driver as a module, choose M here: the
  module will be called ths7303.

VIDEO_THS8200
  Support for the Texas Instruments THS8200 video encoder.
  
  To compile this driver as a module, choose M here: the
  module will be called ths8200.

VIDEO_TI_CAL
  Support for the TI CAL (Camera Adaptation Layer) block
  found on DRA72X SoC.
  In TI Technical Reference Manual this module is referred as
  Camera Interface Subsystem (CAMSS).

VIDEO_TI_CSC
  No help

VIDEO_TI_SC
  No help

VIDEO_TI_VPDMA
  No help

VIDEO_TI_VPE
  Support for the TI VPE(Video Processing Engine) block
  found on DRA7XX SoC.

VIDEO_TI_VPE_DEBUG
  Enable debug messages on VPE driver.

VIDEO_TLV320AIC23B
  Support for the Texas Instruments TLV320AIC23B audio codec.
  
  To compile this driver as a module, choose M here: the
  module will be called tlv320aic23b.

VIDEO_TM6000
  Support for TM5600/TM6000/TM6010 USB Device
  
  Since these cards have no MPEG decoder onboard, they transmit
  only compressed MPEG data over the usb bus, so you need
  an external software decoder to watch TV on your computer.
  
  Say Y if you own such a device and want to use it.

VIDEO_TM6000_ALSA
  This is a video4linux driver for direct (DMA) audio for
  TM5600/TM6000/TM6010 USB Devices.
  
  To compile this driver as a module, choose M here: the
  module will be called tm6000-alsa.

VIDEO_TM6000_DVB
  This adds support for DVB cards based on the tm5600/tm6000 chip.

VIDEO_TUNER
  No help

VIDEO_TVAUDIO
  Support for several audio decoder chips found on some bt8xx boards:
  Philips: tda9840, tda9873h, tda9874h/a, tda9850, tda985x, tea6300,
           tea6320, tea6420, tda8425, ta8874z.
  Microchip: pic16c54 based design on ProVideo PV951 board.
  
  To compile this driver as a module, choose M here: the
  module will be called tvaudio.

VIDEO_TVEEPROM
  No help

VIDEO_TVP514X
  This is a Video4Linux2 sensor driver for the TI TVP5146/47
  decoder. It is currently working with the TI OMAP3 camera
  controller.
  
  To compile this driver as a module, choose M here: the
  module will be called tvp514x.

VIDEO_TVP5150
  Support for the Texas Instruments TVP5150 video decoder.
  
  To compile this driver as a module, choose M here: the
  module will be called tvp5150.

VIDEO_TVP7002
  Support for the Texas Instruments TVP7002 video decoder.
  
  To compile this driver as a module, choose M here: the
  module will be called tvp7002.

VIDEO_TW2804
  Support for the Techwell tw2804 multiple video decoder.
  
  To compile this driver as a module, choose M here: the
  module will be called tw2804.

VIDEO_TW5864
  Support for boards based on Techwell TW5864 chip which provides
  multichannel video & audio grabbing and encoding (H.264, MJPEG,
  ADPCM G.726).
  
  To compile this driver as a module, choose M here: the
  module will be called tw5864.

VIDEO_TW68
  Support for Techwell tw68xx based frame grabber boards.
  
  To compile this driver as a module, choose M here: the
  module will be called tw68.

VIDEO_TW686X
  Support for Intersil/Techwell TW686x-based frame grabber cards.
  
  Currently supported chips:
  - TW6864 (4 video channels),
  - TW6865 (4 video channels, not tested, second generation chip),
  - TW6868 (8 video channels but only 4 first channels using
    built-in video decoder are supported, not tested),
  - TW6869 (8 video channels, second generation chip).
  
  To compile this driver as a module, choose M here: the module
  will be named tw686x.

VIDEO_TW9903
  Support for the Techwell tw9903 multi-standard video decoder
  with high quality down scaler.
  
  To compile this driver as a module, choose M here: the
  module will be called tw9903.

VIDEO_TW9906
  Support for the Techwell tw9906 enhanced multi-standard comb filter
  video decoder with YCbCr input support.
  
  To compile this driver as a module, choose M here: the
  module will be called tw9906.

VIDEO_TW9910
  Support for Techwell TW9910 NTSC/PAL/SECAM video decoder.
  
  To compile this driver as a module, choose M here: the
  module will be called tw9910.

VIDEO_UDA1342
  Support for the Philips UDA1342 audio codec.
  
  To compile this driver as a module, choose M here: the
  module will be called uda1342.

VIDEO_UPD64031A
  Support for the NEC Electronics uPD64031A Ghost Reduction
  video chip. It is most often found in NTSC TV cards made for
  Japan and is used to reduce the 'ghosting' effect that can
  be present in analog TV broadcasts.
  
  To compile this driver as a module, choose M here: the
  module will be called upd64031a.

VIDEO_UPD64083
  Support for the NEC Electronics uPD64083 3-Dimensional Y/C
  separation video chip. It is used to improve the quality of
  the colors of a composite signal.
  
  To compile this driver as a module, choose M here: the
  module will be called upd64083.

VIDEO_USBTV
  This is a video4linux2 driver for USBTV007 based video capture devices.
  
  To compile this driver as a module, choose M here: the
  module will be called usbtv

VIDEO_V4L2
  No help

VIDEO_V4L2_I2C
  No help

VIDEO_V4L2_SUBDEV_API
  Enables the V4L2 sub-device pad-level userspace API used to configure
  video format, size and frame rate between hardware blocks.
  
  This API is mostly used by camera interfaces in embedded platforms.

VIDEO_V4L2_TPG
  No help

VIDEO_VIA_CAMERA
  Driver support for the integrated camera controller in VIA
  Chrome9 chipsets.  Currently only tested on OLPC xo-1.5 systems
  with ov7670 sensors.

VIDEO_VICODEC
  Driver for a Virtual Codec
  
  This driver can be compared to the vim2m driver for emulating
  a video device node that exposes an emulated hardware codec.
  
  When in doubt, say N.

VIDEO_VIM2M
  This is a virtual test device for the memory-to-memory driver
  framework.

VIDEO_VIMC
  Skeleton driver for Virtual Media Controller
  
  This driver can be compared to the vivid driver for emulating
  a media node that exposes a complex media topology. The topology
  is hard coded for now but is meant to be highly configurable in
  the future.
  
  When in doubt, say N.

VIDEO_VIU
  Support for Freescale VIU video driver. This device captures
  video data, or overlays video on DIU frame buffer.
  
  Say Y here if you want to enable VIU device on MPC5121e Rev2+.
  In doubt, say N.

VIDEO_VIVID
  Enables a virtual video driver. This driver emulates a webcam,
  TV, S-Video and HDMI capture hardware, including VBI support for
  the SDTV inputs. Also video output, VBI output, radio receivers,
  transmitters and software defined radio capture is emulated.
  
  It is highly configurable and is ideal for testing applications.
  Error injection is supported to test rare errors that are hard
  to reproduce in real hardware.
  
  Say Y here if you want to test video apps or debug V4L devices.
  When in doubt, say N.

VIDEO_VIVID_CEC
  When selected the vivid module will emulate the optional
  HDMI CEC feature.

VIDEO_VIVID_MAX_DEVS
  This allows you to specify the maximum number of devices supported
  by the vivid driver.

VIDEO_VP27SMPX
  Support for the internal MPX of the Panasonic VP27s tuner.
  
  To compile this driver as a module, choose M here: the
  module will be called vp27smpx.

VIDEO_VPX3220
  Support for VPX322x video decoders.
  
  To compile this driver as a module, choose M here: the
  module will be called vpx3220.

VIDEO_VS6624
  This is a Video4Linux2 sensor driver for the ST VS6624
  camera.
  
  To compile this driver as a module, choose M here: the
  module will be called vs6624.

VIDEO_WM8739
  Support for the Wolfson Microelectronics WM8739
  stereo A/D Converter.
  
  To compile this driver as a module, choose M here: the
  module will be called wm8739.

VIDEO_WM8775
  Support for the Wolfson Microelectronics WM8775 high
  performance stereo A/D Converter with a 4 channel input mixer.
  
  To compile this driver as a module, choose M here: the
  module will be called wm8775.

VIDEO_XILINX
  Driver for Xilinx Video IP Pipelines

VIDEO_XILINX_CSI2RXSS
  Driver for Xilinx MIPI CSI-2 Rx Subsystem. This is a V4L sub-device
  based driver that takes input from CSI-2 Tx source and converts
  it into an AXI4-Stream.

VIDEO_XILINX_TPG
  Driver for the Xilinx Video Test Pattern Generator

VIDEO_XILINX_VTC
  Driver for the Xilinx Video Timing Controller

VIDEO_ZORAN
  Say Y for support for MJPEG capture cards based on the Zoran
  36057/36067 PCI controller chipset. This includes the Iomega
  Buz, Pinnacle DC10+ and the Linux Media Labs LML33. There is
  a driver homepage at <http://mjpeg.sf.net/driver-zoran/>. For
  more information, check <file:Documentation/driver-api/media/drivers/zoran.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called zr36067.

VIDEO_ZORAN_AVS6EYES
  Support for the AverMedia 6 Eyes video surveillance card.

VIDEO_ZORAN_BUZ
  Support for the Iomega Buz MJPEG capture/playback card.

VIDEO_ZORAN_DC10
  Support for the Pinnacle/Miro DC10(+) MJPEG capture/playback
  card.

VIDEO_ZORAN_DC30
  Support for the Pinnacle/Miro DC30(+) MJPEG capture/playback
  card. This also supports really old DC10 cards based on the
  zr36050 MJPEG codec and zr36016 VFE.

VIDEO_ZORAN_LML33
  Support for the Linux Media Labs LML33 MJPEG capture/playback
  card.

VIDEO_ZORAN_LML33R10
  support for the Linux Media Labs LML33R10 MJPEG capture/playback
  card.

VIDEO_ZORAN_ZR36060
  Say Y to support Zoran boards based on 36060 chips.
  This includes Iomega Buz, Pinnacle DC10, Linux media Labs 33
  and 33 R10 and AverMedia 6 boards.

VIPERBOARD_ADC
  Say yes here to access the ADC part of the Nano River
  Technologies Viperboard.
  
  To compile this driver as a module, choose M here: the module will be
  called viperboard_adc.

VIRTIO
  This option is selected by any driver which implements the virtio
  bus, such as CONFIG_VIRTIO_PCI, CONFIG_VIRTIO_MMIO, CONFIG_RPMSG
  or CONFIG_S390_GUEST.

VIRTIO_BALLOON
  This driver supports increasing and decreasing the amount
  of memory within a KVM guest.
  
  If unsure, say M.

VIRTIO_BLK
  This is the virtual block driver for virtio.  It can be used with
  QEMU based VMMs (like KVM or Xen).  Say Y or M.

VIRTIO_CONSOLE
  Virtio console for use with hypervisors.
  
  Also serves as a general-purpose serial device for data
  transfer between the guest and host.  Character devices at
  /dev/vportNpn will be created when corresponding ports are
  found, where N is the device number and n is the port number
  within that device.  If specified by the host, a sysfs
  attribute called 'name' will be populated with a name for
  the port which can be used by udev scripts to create a
  symlink to the device.

VIRTIO_DMA_SHARED_BUFFER
  This option adds a flavor of dma buffers that are backed by
  virtio resources.

VIRTIO_FS
  The Virtio Filesystem allows guests to mount file systems from the
  host.
  
  If you want to share files between guests or with the host, answer Y
  or M.

VIRTIO_INPUT
  This driver supports virtio input devices such as
  keyboards, mice and tablets.
  
  If unsure, say M.

VIRTIO_IOMMU
  Para-virtualised IOMMU driver with virtio.
  
  Say Y here if you intend to run this kernel as a guest.

VIRTIO_MEM
  This driver provides access to virtio-mem paravirtualized memory
  devices, allowing to hotplug and hotunplug memory.
  
  This driver was only tested under x86-64, but should theoretically
  work on all architectures that support memory hotplug and hotremove.
  
  If unsure, say M.

VIRTIO_MENU
  No help

VIRTIO_MMIO
  This drivers provides support for memory mapped virtio
  platform device driver.
  
   If unsure, say N.

VIRTIO_MMIO_CMDLINE_DEVICES
  Allow virtio-mmio devices instantiation via the kernel command line
  or module parameters. Be aware that using incorrect parameters (base
  address in particular) can crash your system - you have been warned.
  See Documentation/admin-guide/kernel-parameters.rst for details.
  
  If unsure, say 'N'.

VIRTIO_NET
  This is the virtual network driver for virtio.  It can be used with
  QEMU based VMMs (like KVM or Xen).  Say Y or M.

VIRTIO_PCI
  This driver provides support for virtio based paravirtual device
  drivers over PCI.  This requires that your VMM has appropriate PCI
  virtio backends.  Most QEMU based VMMs should support these devices
  (like KVM or Xen).
  
  If unsure, say M.

VIRTIO_PCI_LEGACY
  Virtio PCI Card 0.9.X Draft (circa 2014) and older device support.
  
  This option enables building a transitional driver, supporting
  both devices conforming to Virtio 1 specification, and legacy devices.
  If disabled, you get a slightly smaller, non-transitional driver,
  with no legacy compatibility.
  
  So look out into your driveway.  Do you have a flying car?  If
  so, you can happily disable this option and virtio will not
  break.  Otherwise, leave it set.  Unless you're testing what
  life will be like in The Future.
  
  If unsure, say Y.

VIRTIO_PMEM
  This driver provides access to virtio-pmem devices, storage devices
  that are mapped into the physical address space - similar to NVDIMMs
   - with a virtio-based flushing interface.
  
  If unsure, say Y.

VIRTIO_VDPA
  This driver provides support for virtio based paravirtual
  device driver over vDPA bus. For this to be useful, you need
  an appropriate vDPA device implementation that operates on a
  physical device to allow the datapath of virtio to be
  offloaded to hardware.
  
  If unsure, say M.

VIRTIO_VSOCKETS
  This module implements a virtio transport for Virtual Sockets.
  
  Enable this transport if your Virtual Machine host supports Virtual
  Sockets over virtio.
  
  To compile this driver as a module, choose M here: the module will be
  called vmw_vsock_virtio_transport. If unsure, say N.

VIRTIO_VSOCKETS_COMMON
  This option is selected by any driver which needs to access
  the virtio_vsock.  The module will be called
  vmw_vsock_virtio_transport_common.

VIRTUALIZATION
  Say Y here to get to see options for using your Linux host to run other
  operating systems inside virtual machines (guests).
  This option alone does not add any kernel code.
  
  If you say N, all options in this submenu will be skipped and disabled.

VIRT_CPU_ACCOUNTING
  No help

VIRT_CPU_ACCOUNTING_GEN
  Select this option to enable task and CPU time accounting on full
  dynticks systems. This accounting is implemented by watching every
  kernel-user boundaries using the context tracking subsystem.
  The accounting is thus performed at the expense of some significant
  overhead.
  
  For now this is only useful if you are working on the full
  dynticks subsystem development.
  
  If unsure, say N.

VIRT_CPU_ACCOUNTING_NATIVE
  Select this option to enable more accurate task and CPU time
  accounting.  This is done by reading a CPU counter on each
  kernel entry and exit and on transitions within the kernel
  between system, softirq and hardirq state, so there is a
  small performance impact.  In the case of s390 or IBM POWER > 5,
  this also enables accounting of stolen time on logically-partitioned
  systems.

VIRT_DRIVERS
  Say Y here to get to see options for device drivers that support
  virtualization environments.
  
  If you say N, all options in this submenu will be skipped and disabled.

VIRT_TO_BUS
  An architecture should select this if it implements the
  deprecated interface virt_to_bus().  All new architectures
  should probably not select this.

VIRT_WIFI
  This option adds support for ethernet connections to appear as if they
  are wifi connections through a special rtnetlink device.

VISCONTI_WATCHDOG
  Say Y here to include support for the watchdog timer in Toshiba
  Visconti SoCs.

VITESSE_PHY
  Currently supports the vsc8244

VL53L0X_I2C
  Say Y here to build a driver for STMicroelectronics VL53L0X
  ToF ranger sensors with i2c interface.
  This driver can be used to measure the distance of objects.
  
  To compile this driver as a module, choose M here: the
  module will be called vl53l0x-i2c.

VL6180
  Say Y here if you want to build a driver for the STMicroelectronics
  VL6180 combined ambient light, range and proximity sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called vl6180.

VLAN_8021Q
  Select this and you will be able to create 802.1Q VLAN interfaces
  on your Ethernet interfaces. 802.1Q VLAN supports almost
  everything a regular Ethernet interface does, including
  firewalling, bridging, and of course IP traffic. You will need
  the 'ip' utility in order to effectively use VLANs.
  See the VLAN web page for more information:
  <http://www.candelatech.com/~greear/vlan.html>
  
  To compile this code as a module, choose M here: the module
  will be called 8021q.
  
  If unsure, say N.

VLAN_8021Q_GVRP
  Select this to enable GVRP end-system support. GVRP is used for
  automatic propagation of registered VLANs to switches.
  
  If unsure, say N.

VLAN_8021Q_MVRP
  Select this to enable MVRP end-system support. MVRP is used for
  automatic propagation of registered VLANs to switches; it
  supersedes GVRP and is not backwards-compatible.
  
  If unsure, say N.

VLYNQ
  Support for Texas Instruments(R) VLYNQ bus.
  The VLYNQ bus is a high-speed, serial and packetized
  data bus which allows external peripherals of a SoC
  to appear into the system's main memory.
  
  If unsure, say N

VLYNQ_DEBUG
  Turn on VLYNQ bus debugging.

VM86
  No help

VMAP_PFN
  No help

VMAP_STACK
  Enable this if you want the use virtually-mapped kernel stacks
  with guard pages.  This causes kernel stack overflows to be
  caught immediately rather than causing difficult-to-diagnose
  corruption.
  
  To use this with software KASAN modes, the architecture must support
  backing virtual mappings with real shadow memory, and KASAN_VMALLOC
  must be enabled.

VMCP
  Select this option if you want to be able to interact with the control
  program on z/VM

VMCP_CMA_SIZE
  Specify the default amount of memory in MiB reserved for the z/VM CP
  interface. If needed this memory is used for large contiguous memory
  allocations. The default can be changed with the kernel command line
  parameter "vmcp_cma".

VMD
  Adds support for the Intel Volume Management Device (VMD). VMD is a
  secondary PCI host bridge that allows PCI Express root ports,
  and devices attached to them, to be removed from the default
  PCI domain and placed within the VMD domain. This provides
  more bus resources than are otherwise possible with a
  single domain. If you know your system provides one of these and
  has devices attached to it, say Y; if you are not sure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called vmd.

VME_BUS
  If you say Y here you get support for the VME bridge Framework.

VME_CA91CX42
  If you say Y here you get support for the Tundra CA91C142
  (Universe II) VME bridge chip.

VME_FAKE
  If you say Y here you get support for the fake VME bridge. This
  provides a virtualised VME Bus for devices with no VME bridge. This
  is mainly useful for VME development (in the absence of VME
  hardware).

VME_TSI148
  If you say Y here you get support for the Tundra TSI148 VME bridge
  chip.

VME_USER
  If you say Y here you want to be able to access a limited number of
  VME windows in a manner at least semi-compatible with the interface
  provided with the original driver at <http://www.vmelinux.org/>.
  
  To compile this driver as a module, choose M here. The module will
  be called vme_user. If unsure, say N.

VMIVME_7805
  If you say Y here you get support for the VMIVME-7805 board.
  This board has an additional control interface to the Universe II
  chip. This driver has to be included if you want to access VME bus
  with VMIVME-7805 board.

VMLINUX_VALIDATION
  No help

VMLOGRDR
  Select this option if you want to be able to receive records collected
  by the z/VM recording system services, eg. from *LOGREC, *ACCOUNT or
  *SYMPTOM.
  This driver depends on the IUCV support driver.

VMSPLIT_1G
  No help

VMSPLIT_2G
  No help

VMSPLIT_2G_OPT
  No help

VMSPLIT_3G
  No help

VMSPLIT_3G_OPT
  No help

VMWARE_BALLOON
  This is VMware physical memory management driver which acts
  like a "balloon" that can be inflated to reclaim physical pages
  by reserving them in the guest and invalidating them in the
  monitor, freeing up the underlying machine pages so they can
  be allocated to other guests. The balloon can also be deflated
  to allow the guest to use more physical memory.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called vmw_balloon.

VMWARE_PVSCSI
  This driver supports VMware's para virtualized SCSI HBA.
  To compile this driver as a module, choose M here: the
  module will be called vmw_pvscsi.

VMWARE_VMCI
  This is VMware's Virtual Machine Communication Interface.  It enables
  high-speed communication between host and guest in a virtual
  environment via the VMCI virtual device.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called vmw_vmci.

VMWARE_VMCI_VSOCKETS
  This module implements a VMCI transport for Virtual Sockets.
  
  Enable this transport if your Virtual Machine runs on a VMware
  hypervisor.
  
  To compile this driver as a module, choose M here: the module
  will be called vmw_vsock_vmci_transport. If unsure, say N.

VMXNET3
  This driver supports VMware's vmxnet3 virtual ethernet NIC.
  To compile this driver as a module, choose M here: the
  module will be called vmxnet3.

VM_EVENT_COUNTERS
  VM event counters are needed for event counts to be shown.
  This option allows the disabling of the VM event counters
  on EXPERT systems.  /proc/vmstat will only show page counts
  if VM event counters are disabled.

VORTEX
  This option enables driver support for a large number of 10Mbps and
  10/100Mbps EISA, PCI and Cardbus 3Com network cards:
  
  "Vortex"    (Fast EtherLink 3c590/3c592/3c595/3c597) EISA and PCI
  "Boomerang" (EtherLink XL 3c900 or 3c905)            PCI
  "Cyclone"   (3c540/3c900/3c905/3c980/3c575/3c656)    PCI and Cardbus
  "Tornado"   (3c905)                                  PCI
  "Hurricane" (3c555/3cSOHO)                           PCI
  
  If you have such a card, say Y here.  More specific information is in
  <file:Documentation/networking/device_drivers/ethernet/3com/vortex.rst>
  and in the comments at the beginning of
  <file:drivers/net/ethernet/3com/3c59x.c>.
  
  To compile this support as a module, choose M here.

VSOCKETS
  Virtual Socket Protocol is a socket protocol similar to TCP/IP
  allowing communication between Virtual Machines and hypervisor
  or host.
  
  You should also select one or more hypervisor-specific transports
  below.
  
  To compile this driver as a module, choose M here: the module
  will be called vsock. If unsure, say N.

VSOCKETS_DIAG
  Support for PF_VSOCK sockets monitoring interface used by the ss tool.
  If unsure, say Y.
  
  Enable this module so userspace applications can query open sockets.

VSOCKETS_LOOPBACK
  This module implements a loopback transport for Virtual Sockets,
  using vmw_vsock_virtio_transport_common.
  
  To compile this driver as a module, choose M here: the module
  will be called vsock_loopback. If unsure, say N.

VSOCKMON
  This option enables a monitoring net device for vsock sockets. It is
  mostly intended for developers or support to debug vsock issues. If
  unsure, say N.

VT
  If you say Y here, you will get support for terminal devices with
  display and keyboard devices. These are called "virtual" because you
  can run several virtual terminals (also called virtual consoles) on
  one physical terminal. This is rather useful, for example one
  virtual terminal can collect system messages and warnings, another
  one can be used for a text-mode user session, and a third could run
  an X session, all in parallel. Switching between virtual terminals
  is done with certain key combinations, usually Alt-<function key>.
  
  The setterm command ("man setterm") can be used to change the
  properties (such as colors or beeping) of a virtual terminal. The
  man page console_codes(4) ("man console_codes") contains the special
  character sequences that can be used to change those properties
  directly. The fonts used on virtual terminals can be changed with
  the setfont ("man setfont") command and the key bindings are defined
  with the loadkeys ("man loadkeys") command.
  
  You need at least one virtual terminal device in order to make use
  of your keyboard and monitor. Therefore, only people configuring an
  embedded system would want to say N here in order to save some
  memory; the only way to log into such a system is then via a serial
  or network connection.
  
  If unsure, say Y, or else you won't be able to do much with your new
  shiny Linux system :-)

VT6655
  This is a vendor-written driver for VIA VT6655.

VT6656
  This is a vendor-written driver for VIA VT6656.

VT8500_TIMER
  Enables support for the VT8500 driver.

VT_CONSOLE
  The system console is the device which receives all kernel messages
  and warnings and which allows logins in single user mode. If you
  answer Y here, a virtual terminal (the device used to interact with
  a physical terminal) can be used as system console. This is the most
  common mode of operations, so you should say Y here unless you want
  the kernel messages be output only to a serial port (in which case
  you should say Y to "Console on serial port", below).
  
  If you do say Y here, by default the currently visible virtual
  terminal (/dev/tty0) will be used as system console. You can change
  that with a kernel command line option such as "console=tty3" which
  would use the third virtual terminal as system console. (Try "man
  bootparam" or see the documentation of your boot loader (lilo or
  loadlin) about how to pass options to the kernel at boot time.)
  
  If unsure, say Y.

VT_CONSOLE_SLEEP
  No help

VT_HW_CONSOLE_BINDING
  The virtual terminal is the device that interacts with the physical
  terminal through console drivers. On these systems, at least one
  console driver is loaded. In other configurations, additional console
  drivers may be enabled, such as the framebuffer console. If more than
  1 console driver is enabled, setting this to 'y' will allow you to
  select the console driver that will serve as the backend for the
  virtual terminals.
  
  See <file:Documentation/driver-api/console.rst> for more
  information. For framebuffer console users, please refer to
  <file:Documentation/fb/fbcon.rst>.

VXFS_FS
  FreeVxFS is a file system driver that support the VERITAS VxFS(TM)
  file system format.  VERITAS VxFS(TM) is the standard file system
  of SCO UnixWare (and possibly others) and optionally available
  for Sunsoft Solaris, HP-UX and many other operating systems. However
  these particular OS implementations of vxfs may differ in on-disk
  data endianess and/or superblock offset. The vxfs module has been
  tested with SCO UnixWare and HP-UX B.10.20 (pa-risc 1.1 arch.)
  Currently only readonly access is supported and VxFX versions
  2, 3 and 4. Tests were performed with HP-UX VxFS version 3.
  
  NOTE: the file system type as used by mount(1), mount(2) and
  fstab(5) is 'vxfs' as it describes the file system format, not
  the actual driver.
  
  There is a userspace utility for HP-UX logical volumes which makes
  creating HP-UX logical volumes easy from HP-UX disk block device file
  or regular file with image of the disk. See:
         https://sourceforge.net/projects/linux-vxfs/
  
  To compile this as a module, choose M here: the module will be
  called freevxfs.  If unsure, say N.

VXGE
  This driver supports Exar Corp's X3100 Series 10 GbE PCIe
  I/O Virtualized Server Adapter.  These were originally released from
  Neterion, which was later acquired by Exar.  So, the adapters might be
  labeled as either one, depending on its age.
  
  More specific information on configuring the driver is in
  <file:Documentation/networking/device_drivers/ethernet/neterion/vxge.rst>.
  
  To compile this driver as a module, choose M here. The module
  will be called vxge.

VXGE_DEBUG_TRACE_ALL
  Say Y here if you want to enabling all the debug trace statements in
  the vxge driver. By default only few debug trace statements are
  enabled.

VXLAN
  This allows one to create vxlan virtual interfaces that provide
  Layer 2 Networks over Layer 3 Networks. VXLAN is often used
  to tunnel virtual network infrastructure in virtualized environments.
  For more information see:
    http://tools.ietf.org/html/draft-mahalingam-dutt-dcops-vxlan-02
  
  To compile this driver as a module, choose M here: the module
  will be called vxlan.

VZ89X
  Say Y here to build I2C interface support for the SGX
  Sensortech MiCS VZ89X VOC (Volatile Organic Compounds)
  sensors

W1
  Dallas' 1-wire bus is useful to connect slow 1-pin devices
  such as iButtons and thermal sensors.
  
  If you want W1 support, you should say Y here.
  
  This W1 support can also be built as a module.  If so, the module
  will be called wire.

W1_CON
  This allows to communicate with userspace using connector. For more
  information see <file:Documentation/driver-api/connector.rst>.
  There are three types of messages between w1 core and userspace:
  1. Events. They are generated each time new master or slave device found
        either due to automatic or requested search.
  2. Userspace commands. Includes read/write and search/alarm search commands.
  3. Replies to userspace commands.

W1_MASTER_DS1WM
  Say Y here to enable the DS1WM 1-wire driver, such as that
  in HP iPAQ devices like h5xxx, h2200, and ASIC3-based like
  hx4700.

W1_MASTER_DS2482
  If you say yes here you get support for the Maxim DS2482
  I2C to 1-Wire bridge.
  
  This driver can also be built as a module.  If so, the module
  will be called ds2482.

W1_MASTER_DS2490
  Say Y here if you want to have a driver for DS2490 based USB <-> W1 bridges,
  for example DS9490*.
  
    This support is also available as a module.  If so, the module
  will be called ds2490.

W1_MASTER_GPIO
  Say Y here if you want to communicate with your 1-wire devices using
  GPIO pins. This driver uses the GPIO API to control the wire.
  
  This support is also available as a module.  If so, the module
  will be called w1-gpio.

W1_MASTER_MATROX
  Say Y here if you want to communicate with your 1-wire devices
  using Matrox's G400 GPIO pins.
  
  This support is also available as a module.  If so, the module
  will be called matrox_w1.

W1_MASTER_MXC
  Say Y here to enable MXC 1-wire host

W1_MASTER_SGI
  Say Y here if you want support for your 1-wire devices using
  SGI ASIC 1-Wire interface
  
  This support is also available as a module.  If so, the module
  will be called sgi_w1.

W1_SLAVE_DS2405
  Say Y or M here if you want to use a DS2405 1-wire
  single-channel addressable switch.
  This device can also work as a single-channel
  binary remote sensor.

W1_SLAVE_DS2406
  Say Y or M here if you want to use a 1-wire
  DS2406 Dual Channel Addressable Switch.  EPROM read/write
  support for these devices is not implemented.

W1_SLAVE_DS2408
  Say Y here if you want to use a 1-wire
  DS2408 8-Channel Addressable Switch device support

W1_SLAVE_DS2408_READBACK
  Enabling this will cause the driver to read back the values written
  to the chip's output register in order to detect errors.
  
  This is slower but useful when debugging chips and/or busses.

W1_SLAVE_DS2413
  Say Y here if you want to use a 1-wire
  DS2413 Dual Channel Addressable Switch device support

W1_SLAVE_DS2423
  If you enable this you can read the counter values available
  in the DS2423 chipset from the w1_slave file under the
  sys file system.
  
  Say Y here if you want to use a 1-wire
  counter family device (DS2423).

W1_SLAVE_DS2430
  Say Y here if you want to use a 1-wire 256bit EEPROM
  family device (DS2430).
  This EEPROM is organized as one page of 32 bytes for random
  access.

W1_SLAVE_DS2431
  Say Y here if you want to use a 1-wire
  1kb EEPROM family device (DS2431)

W1_SLAVE_DS2433
  Say Y here if you want to use a 1-wire
  4kb EEPROM family device (DS2433).

W1_SLAVE_DS2433_CRC
  Say Y here to protect DS2433 data with a CRC16.
  Each block has 30 bytes of data and a two byte CRC16.
  Full block writes are only allowed if the CRC is valid.

W1_SLAVE_DS2438
  Say Y here if you want to use a 1-wire
  DS2438 Smart Battery Monitor device support

W1_SLAVE_DS250X
  Say Y here if you want to use a 1-wire
  512b/1kb/16kb EPROM family device (DS250x).

W1_SLAVE_DS2780
  If you enable this you will have the DS2780 battery monitor
  chip support.
  
  The battery monitor chip is used in many batteries/devices
  as the one who is responsible for charging/discharging/monitoring
  Li+ batteries.
  
  If you are unsure, say N.

W1_SLAVE_DS2781
  If you enable this you will have the DS2781 battery monitor
  chip support.
  
  The battery monitor chip is used in many batteries/devices
  as the one who is responsible for charging/discharging/monitoring
  Li+ batteries.
  
  If you are unsure, say N.

W1_SLAVE_DS2805
  Say Y here if you want to use a 1-wire
  is a 112-byte user-programmable EEPROM is
  organized as 7 pages of 16 bytes each with 64bit
  unique number. Requires OverDrive Speed to talk to.

W1_SLAVE_DS28E04
  If you enable this you will have the DS28E04-100
  chip support.
  
  Say Y here if you want to use a 1-wire
  4kb EEPROM with PIO family device (DS28E04).
  
  If you are unsure, say N.

W1_SLAVE_DS28E17
  Say Y here if you want to use the DS28E17 1-wire-to-I2C master bridge.
  For each DS28E17 detected, a new I2C adapter is created within the
  kernel. I2C devices on that bus can be configured to be used by the
  kernel and userspace tools as on any other "native" I2C bus.
  
  This driver is also available as a module. If so, the module
  will be called w1_ds28e17.
  
  If you are unsure, say N.

W1_SLAVE_SMEM
  Say Y here if you want to connect 1-wire
  simple 64bit memory rom(ds2401/ds2411/ds1990*) to your wire.

W1_SLAVE_THERM
  Say Y here if you want to connect 1-wire thermal sensors to your
  wire.

W83627HF_WDT
  This is the driver for the hardware watchdog on the following
  Super I/O chips.
        W83627DHG/DHG-P/EHF/EHG/F/G/HF/S/SF/THF/UHG/UG
        W83637HF
        W83667HG/HG-B
        W83687THF
        W83697HF
        W83697UG
        NCT6775
        NCT6776
        NCT6779
        NCT6791
        NCT6792
        NCT6102D/04D/06D
        NCT6116D
  
  This watchdog simply watches your kernel to make sure it doesn't
  freeze, and if it does, it reboots your computer after a certain
  amount of time.
  
  To compile this driver as a module, choose M here: the
  module will be called w83627hf_wdt.
  
  Most people will say N.

W83877F_WDT
  This is the driver for the hardware watchdog on the W83877F chipset
  as used in EMACS PC-104 motherboards (and likely others).  This
  watchdog simply watches your kernel to make sure it doesn't freeze,
  and if it does, it reboots your computer after a certain amount of
  time.
  
  To compile this driver as a module, choose M here: the
  module will be called w83877f_wdt.
  
  Most people will say N.

W83977F_WDT
  This is the driver for the hardware watchdog on the W83977F I/O chip
  as used in AAEON's PCM-5335 SBC (and likely others).  This
  watchdog simply watches your kernel to make sure it doesn't freeze,
  and if it does, it reboots your computer after a certain amount of
  time.
  
  To compile this driver as a module, choose M here: the
  module will be called w83977f_wdt.

WAFER_WDT
  This is a driver for the hardware watchdog on the ICP Single
  Board Computer. This driver is working on (at least) the following
  IPC SBC's: Wafer 5823, Rocky 4783, Rocky 3703 and Rocky 3782.
  
  To compile this driver as a module, choose M here: the
  module will be called wafer5823wdt.

WAN
  Wide Area Networks (WANs), such as X.25, Frame Relay and leased
  lines, are used to interconnect Local Area Networks (LANs) over vast
  distances with data transfer rates significantly higher than those
  achievable with commonly used asynchronous modem connections.
  
  Usually, a quite expensive external device called a `WAN router' is
  needed to connect to a WAN. As an alternative, a relatively
  inexpensive WAN interface card can allow your Linux box to directly
  connect to a WAN.
  
  If you have one of those cards and wish to use it under Linux,
  say Y here and also to the WAN driver for your card.
  
  If unsure, say N.

WANT_COMPAT_NETLINK_MESSAGES
  This option can be selected by other options that need compat
  netlink messages.

WANT_DEV_COREDUMP
  Drivers should "select" this option if they desire to use the
  device coredump mechanism.

WANXL
  Driver for wanXL PCI cards by SBE Inc.
  
  If you have such a card, say Y here and see
  <http://www.kernel.org/pub/linux/utils/net/hdlc/>.
  
  To compile this as a module, choose M here: the
  module will be called wanxl.
  
  If unsure, say N.

WANXL_BUILD_FIRMWARE
  Allows you to rebuild firmware run by the QUICC processor.
  It requires m68k toolchains and hexdump programs.
  
  You should never need this option, say N.

WARN_ABI_ERRORS
  The files under Documentation/ABI should follow what's
  described at Documentation/ABI/README. Yet, as they're manually
  written, it would be possible that some of those files would
  have errors that would break them for being parsed by
  scripts/get_abi.pl. Add a check to verify them.
  
  If unsure, select 'N'.

WARN_ALL_UNSEEDED_RANDOM
  Some parts of the kernel contain bugs relating to their use of
  cryptographically secure random numbers before it's actually possible
  to generate those numbers securely. This setting ensures that these
  flaws don't go unnoticed, by enabling a message, should this ever
  occur. This will allow people with obscure setups to know when things
  are going wrong, so that they might contact developers about fixing
  it.
  
  Unfortunately, on some models of some architectures getting
  a fully seeded CRNG is extremely difficult, and so this can
  result in dmesg getting spammed for a surprisingly long
  time.  This is really bad from a security perspective, and
  so architecture maintainers really need to do what they can
  to get the CRNG seeded sooner after the system is booted.
  However, since users cannot do anything actionable to
  address this, by default the kernel will issue only a single
  warning for the first use of unseeded randomness.
  
  Say Y here if you want to receive warnings for all uses of
  unseeded randomness.  This will be of use primarily for
  those developers interested in improving the security of
  Linux kernels running on their architecture (or
  subarchitecture).

WARN_MISSING_DOCUMENTS
  It is not uncommon that a document gets renamed.
  This option makes the Kernel to check for missing dependencies,
  warning when something is missing. Works only if the Kernel
  is built from a git tree.
  
  If unsure, select 'N'.

WATCHDOG
  If you say Y here (and to one of the following options) and create a
  character special file /dev/watchdog with major number 10 and minor
  number 130 using mknod ("man mknod"), you will get a watchdog, i.e.:
  subsequently opening the file and then failing to write to it for
  longer than 1 minute will result in rebooting the machine. This
  could be useful for a networked machine that needs to come back
  on-line as fast as possible after a lock-up. There's both a watchdog
  implementation entirely in software (which can sometimes fail to
  reboot the machine) and a driver for hardware watchdog boards, which
  are more robust and can also keep track of the temperature inside
  your computer. For details, read
  <file:Documentation/watchdog/watchdog-api.rst> in the kernel source.
  
  The watchdog is usually used together with the watchdog daemon
  which is available from
  <ftp://ibiblio.org/pub/Linux/system/daemons/watchdog/>. This daemon can
  also monitor NFS connections and can reboot the machine when the process
  table is full.
  
  If unsure, say N.

WATCHDOG_CORE
  Say Y here if you want to use the new watchdog timer driver core.
  This driver provides a framework for all watchdog timer drivers
  and gives them the /dev/watchdog interface (and later also the
  sysfs interface).

WATCHDOG_CP1XXX
  This is the driver for the hardware watchdog timers present on
  Sun Microsystems CompactPCI models CP1400 and CP1500.
  
  To compile this driver as a module, choose M here: the
  module will be called cpwatchdog.
  
  If you do not have a CompactPCI model CP1400 or CP1500, or
  another UltraSPARC-IIi-cEngine boardset with hardware watchdog,
  you should say N to this option.

WATCHDOG_HANDLE_BOOT_ENABLED
  The default watchdog behaviour (which you get if you say Y here) is
  to ping watchdog devices that were enabled before the driver has
  been loaded until control is taken over from userspace using the
  /dev/watchdog file. If you say N here, the kernel will not update
  the watchdog on its own. Thus if your userspace does not start fast
  enough your device will reboot.

WATCHDOG_NOWAYOUT
  The default watchdog behaviour (which you get if you say N here) is
  to stop the timer if the process managing it closes the file
  /dev/watchdog. It's always remotely possible that this process might
  get killed. If you say Y here, the watchdog cannot be stopped once
  it has been started.

WATCHDOG_OPEN_TIMEOUT
  The maximum time, in seconds, for which the watchdog framework takes
  care of pinging a hardware watchdog.  A value of 0 means infinite. The
  value set here can be overridden by the commandline parameter
  "watchdog.open_timeout".

WATCHDOG_PRETIMEOUT_DEFAULT_GOV_NOOP
  Use noop watchdog pretimeout governor by default. If noop
  governor is selected by a user, write a short message to
  the kernel log buffer and don't do any system changes.

WATCHDOG_PRETIMEOUT_DEFAULT_GOV_PANIC
  Use panic watchdog pretimeout governor by default, if
  a watchdog pretimeout event happens, consider that
  a watchdog feeder is dead and reboot is unavoidable.

WATCHDOG_PRETIMEOUT_GOV
  The option allows to select watchdog pretimeout governors.

WATCHDOG_PRETIMEOUT_GOV_NOOP
  Noop watchdog pretimeout governor, only an informational
  message is added to kernel log buffer.

WATCHDOG_PRETIMEOUT_GOV_PANIC
  Panic watchdog pretimeout governor, on watchdog pretimeout
  event put the kernel into panic.

WATCHDOG_PRETIMEOUT_GOV_SEL
  No help

WATCHDOG_RIO
  Say Y here to support the hardware watchdog capability on Sun RIO
  machines.  The watchdog timeout period is normally one minute but
  can be changed with a boot-time parameter.

WATCHDOG_RTAS
  This driver adds watchdog support for the RTAS watchdog.
  
  To compile this driver as a module, choose M here. The module
  will be called wdrtas.

WATCHDOG_SUN4V
  Say Y here to support the hypervisor watchdog capability embedded
  in the SPARC sun4v architecture.
  
  To compile this driver as a module, choose M here. The module will
  be called sun4v_wdt.

WATCHDOG_SYSFS
  Say Y here if you want to enable watchdog device status read through
  sysfs attributes.

WATCH_QUEUE
  This is a general notification queue for the kernel to pass events to
  userspace by splicing them into pipes.  It can be used in conjunction
  with watches for key/keyring change notifications and device
  notifications.
  
  See Documentation/watch_queue.rst

WCN36XX
  This module adds support for wireless adapters based on
  Qualcomm Atheros WCN3660 and WCN3680 mobile chipsets.
  
  If you choose to build a module, it'll be called wcn36xx.

WCN36XX_DEBUGFS
  Enabled debugfs support
  
  If unsure, say Y to make it easier to debug problems.

WD80x3
  If you have a network (Ethernet) card of this type, say Y here.
  
  To compile this driver as a module, choose M here. The module
  will be called wd.

WDAT_WDT
  This driver adds support for systems with ACPI Watchdog Action
  Table (WDAT) table. Servers typically have this but it can be
  found on some desktop machines as well. This driver will take
  over the native iTCO watchdog driver found on many Intel CPUs.
  
  To compile this driver as module, choose M here: the module will
  be called wdat_wdt.

WDT
  If you have a WDT500P or WDT501P watchdog board, say Y here,
  otherwise N. It is not possible to probe for this board, which means
  that you have to inform the kernel about the IO port and IRQ that
  is needed (you can do this via the io and irq parameters)
  
  To compile this driver as a module, choose M here: the
  module will be called wdt.

WDTPCI
  If you have a PCI-WDT500/501 watchdog board, say Y here, otherwise N.
  
  If you have a PCI-WDT501 watchdog board then you can enable the
  temperature sensor by setting the type parameter to 501.
  
  If you want to enable the Fan Tachometer on the PCI-WDT501, then you
  can do this via the tachometer parameter. Only do this if you have a
  fan tachometer actually set up.
  
  To compile this driver as a module, choose M here: the
  module will be called wdt_pci.

WDT_MTX1
  Hardware driver for the MTX-1 boards. This is a watchdog timer that
  will reboot the machine after a 100 seconds timer expired.

WEXT_CORE
  No help

WEXT_PRIV
  No help

WEXT_PROC
  No help

WEXT_SPY
  No help

WFX
  This is a driver for Silicons Labs WFxxx series (WF200 and further)
  chipsets. This chip can be found on SPI or SDIO buses.

WIL6210
  This module adds support for wireless adapter based on
  wil6210 chip by Wilocity. It supports operation on the
  60 GHz band, covered by the IEEE802.11ad standard.
  
  https://wireless.wiki.kernel.org/en/users/Drivers/wil6210
  
  If you choose to build it as a module, it will be called
  wil6210

WIL6210_DEBUGFS
  Say Y here to enable wil6210 debugfs support, using the
  kernel debugfs infrastructure. Select this
  option if you are interested in debugging the driver.
  
  If unsure, say Y to make it easier to debug problems.

WIL6210_ISR_COR
  ISR registers on wil6210 chip may operate in either
  COR (Clear-On-Read) or W1C (Write-1-to-Clear) mode.
  For production code, use COR (say y); is default since
  it saves extra target transaction;
  For ISR debug, use W1C (say n); is allows to monitor ISR
  registers with debugfs. If COR were used, ISR would
  self-clear when accessed for debug purposes, it makes
  such monitoring impossible.
  Say y unless you debug interrupts

WIL6210_TRACING
  Say Y here to enable tracepoints for the wil6210 driver
  using the kernel tracing infrastructure.  Select this
  option if you are interested in debugging the driver.
  
  If unsure, say Y to make it easier to debug problems.

WILC1000
  Add support for the Atmel WILC1000 802.11 b/g/n SoC.
  This provides Wi-FI over an SDIO or SPI interface, and
  is usually found in IoT devices.
  
  This module only support IEEE 802.11n WiFi.

WILC1000_HW_OOB_INTR
  This option enables out-of-band interrupt support for the WILC1000
  chipset. This OOB interrupt is intended to provide a faster interrupt
  mechanism for SDIO host controllers that don't support SDIO interrupt.
  Select this option If the SDIO host controller in your platform
  doesn't support SDIO time devision interrupt.

WILC1000_SDIO
  This module adds support for the SDIO interface of adapters using
  WILC1000 chipset. The Atmel WILC1000 SDIO is a full speed interface.
  It meets SDIO card specification version 2.0. The interface supports
  the 1-bit/4-bit SD transfer mode at the clock range of 0-50 MHz.
  The host can use this interface to read and write from any register
  within the chip as well as configure the WILC1000 for data DMA.
  To use this interface, pin9 (SDIO_SPI_CFG) must be grounded. Select
  this if your platform is using the SDIO bus.

WILC1000_SPI
  This module adds support for the SPI interface of adapters using
  WILC1000 chipset. The Atmel WILC1000 has a Serial Peripheral
  Interface (SPI) that operates as a SPI slave. This SPI interface can
  be used for control and for serial I/O of 802.11 data. The SPI is a
  full-duplex slave synchronous serial interface that is available
  immediately following reset when pin 9 (SDIO_SPI_CFG) is tied to
  VDDIO. Select this if your platform is using the SPI bus.

WILCO_EC
  If you say Y here, you get support for talking to the ChromeOS
  Wilco EC over an eSPI bus. This uses a simple byte-level protocol
  with a checksum.
  
  To compile this driver as a module, choose M here: the
  module will be called wilco_ec.

WILCO_EC_DEBUGFS
  If you say Y here, you get support for sending raw commands to
  the Wilco EC via debugfs.  These commands do not do any byte
  manipulation and allow for testing arbitrary commands.  This
  interface is intended for debug only and will not be present
  on production devices.

WILCO_EC_EVENTS
  If you say Y here, you get support for the EC to send events
  (such as power state changes) to userspace. The EC sends the events
  over ACPI, and a driver queues up the events to be read by a
  userspace daemon from /dev/wilco_event using read() and poll().

WILCO_EC_TELEMETRY
  If you say Y here, you get support to query EC telemetry data from
  /dev/wilco_telem0 using write() and then read().

WILINK_PLATFORM_DATA
  Small platform data bit needed to pass data to the sdio modules.

WIMAX
  Select to configure support for devices that provide
  wireless broadband connectivity using the WiMAX protocol
  (IEEE 802.16).
  
  Please note that most of these devices require signing up
  for a service plan with a provider.
  
  The different WiMAX drivers can be enabled in the menu entry
  
  Device Drivers > Network device support > WiMAX Wireless
  Broadband devices
  
  If unsure, it is safe to select M (module).

WIMAX_DEBUG_LEVEL
  Select the maximum debug verbosity level to be compiled into
  the WiMAX stack code.
  
  By default, debug messages are disabled at runtime and can
  be selectively enabled for different parts of the code using
  the sysfs debug-levels file.
  
  If set at zero, this will compile out all the debug code.
  
  It is recommended that it is left at 8.

WIMAX_I2400M
  No help

WIMAX_I2400M_DEBUG_LEVEL
  Select the maximum debug verbosity level to be compiled into
  the WiMAX i2400m driver code.
  
  By default, this is disabled at runtime and can be
  selectively enabled at runtime for different parts of the
  code using the sysfs debug-levels file.
  
  If set at zero, this will compile out all the debug code.
  
  It is recommended that it is left at 8.

WIMAX_I2400M_USB
  Select if you have a device based on the Intel WiMAX
  Connection 2400 over USB (like any of the Intel Wireless
  WiMAX/WiFi Link 5x50 series).
  
  If unsure, it is safe to select M (module).

WINBOND_840
  This driver is for the Winbond W89c840 chip.  It also works with
  the TX9882 chip on the Compex RL100-ATX board.
  More specific information and updates are available from
  <http://www.scyld.com/network/drivers.html>.

WINDFARM
  No help

WINDFARM_PM112
  This driver provides thermal control for the PowerMac11,2
  which are the recent dual and quad G5 machines using the
  970MP dual-core processor.

WINDFARM_PM121
  This driver provides thermal control for the PowerMac12,1
  which is the iMac G5 (iSight).

WINDFARM_PM72
  This driver provides thermal control for the PowerMac G5
  "AGP" variants (PowerMac 7,2 and 7,3)

WINDFARM_PM81
  This driver provides thermal control for the iMacG5

WINDFARM_PM91
  This driver provides thermal control for the PowerMac9,1
  which is the recent (SMU based) single CPU desktop G5

WINDFARM_RM31
  This driver provides thermal control for the Xserve G5
  (RackMac3,1)

WIREGUARD
  WireGuard is a secure, fast, and easy to use replacement for IPSec
  that uses modern cryptography and clever networking tricks. It's
  designed to be fairly general purpose and abstract enough to fit most
  use cases, while at the same time remaining extremely simple to
  configure. See www.wireguard.com for more info.
  
  It's safe to say Y or M here, as the driver is very lightweight and
  is only in use when an administrator chooses to add an interface.

WIREGUARD_DEBUG
  This will write log messages for handshake and other events
  that occur for a WireGuard interface. It will also perform some
  extra validation checks and unit tests at various points. This is
  only useful for debugging.
  
  Say N here unless you know what you're doing.

WIRELESS
  No help

WIRELESS_EXT
  No help

WIZNET_BUS_ANY
  If interface mode is unknown in compile time, it can be selected
  in runtime from board/platform resources configuration.
  
  Performance may decrease compared to explicitly selected bus mode.

WIZNET_BUS_DIRECT
  In direct address mode host system can directly access all registers
  after mapping to Memory-Mapped I/O space.

WIZNET_BUS_INDIRECT
  In indirect address mode host system indirectly accesses registers
  using Indirect Mode Address Register and Indirect Mode Data Register,
  which are directly mapped to Memory-Mapped I/O space.

WIZNET_W5100
  Support for WIZnet W5100 chips.
  
  W5100 is a single chip with integrated 10/100 Ethernet MAC,
  PHY and hardware TCP/IP stack, but this driver is limited to
  the MAC and PHY functions only, onchip TCP/IP is unused.
  
  To compile this driver as a module, choose M here: the module
  will be called w5100.

WIZNET_W5100_SPI
  In SPI mode host system accesses registers using SPI protocol
  (mode 0) on the SPI bus.
  
  Performance decreases compared to other bus interface mode.
  In W5100 SPI mode, burst READ/WRITE processing are not provided.
  
  To compile this driver as a module, choose M here: the module
  will be called w5100-spi.

WIZNET_W5300
  Support for WIZnet W5300 chips.
  
  W5300 is a single chip with integrated 10/100 Ethernet MAC,
  PHY and hardware TCP/IP stack, but this driver is limited to
  the MAC and PHY functions only, onchip TCP/IP is unused.
  
  To compile this driver as a module, choose M here: the module
  will be called w5300.

WKUP_M3_IPC
  TI AM33XX and AM43XX have a Cortex M3, the Wakeup M3, to handle
  low power transitions. This IPC driver provides the necessary API
  to communicate and use the Wakeup M3 for PM features like suspend
  resume and boots it using wkup_m3_rproc driver.

WKUP_M3_RPROC
  Say y here to support Wakeup M3 remote processor on TI AM33xx
  and AM43xx family of SoCs.
  
  Required for Suspend-to-RAM on AM33xx and AM43xx SoCs. Also needed
  for deep CPUIdle states on AM33xx SoCs. Allows for loading of the
  firmware onto these remote processors.
  If unsure say N.

WL1251
  This will enable TI wl1251 driver support. The drivers make
  use of the mac80211 stack.
  
  If you choose to build a module, it'll be called wl1251. Say
  N if unsure.

WL1251_SDIO
  This module adds support for the SDIO interface of adapters using
  TI wl1251 chipset.  Select this if your platform is using
  the SDIO bus.
  
  If you choose to build a module, it'll be called
  wl1251_sdio. Say N if unsure.

WL1251_SPI
  This module adds support for the SPI interface of adapters using
  TI wl1251 chipset.  Select this if your platform is using
  the SPI bus.
  
  If you choose to build a module, it'll be called wl1251_spi.
  Say N if unsure.

WL12XX
  This module adds support for wireless adapters based on TI wl1271,
  wl1273, wl1281 and wl1283 chipsets. This module does *not* include
  support for wl1251.  For wl1251 support, use the separate homonymous
  driver instead.

WL18XX
  This module adds support for wireless adapters based on TI
  WiLink 8 chipsets.

WLAN
  This section contains all the pre 802.11 and 802.11 wireless
  device drivers. For a complete list of drivers and documentation
  on them refer to the wireless wiki:
  
  https://wireless.wiki.kernel.org/en/users/Drivers

WLAN_VENDOR_ADMTEK
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.

WLAN_VENDOR_ATH
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.
  
  For more information and documentation on this module you can visit:
  
  https://wireless.wiki.kernel.org/en/users/Drivers/ath
  
  For information on all Atheros wireless drivers visit:
  
  https://wireless.wiki.kernel.org/en/users/Drivers/Atheros

WLAN_VENDOR_ATMEL
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.

WLAN_VENDOR_BROADCOM
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.

WLAN_VENDOR_CISCO
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.

WLAN_VENDOR_INTEL
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.

WLAN_VENDOR_INTERSIL
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.

WLAN_VENDOR_MARVELL
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.

WLAN_VENDOR_MEDIATEK
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.

WLAN_VENDOR_MICROCHIP
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.

WLAN_VENDOR_QUANTENNA
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.

WLAN_VENDOR_RALINK
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.

WLAN_VENDOR_REALTEK
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.

WLAN_VENDOR_RSI
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.

WLAN_VENDOR_ST
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.

WLAN_VENDOR_TI
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.

WLAN_VENDOR_ZYDAS
  If you have a wireless card belonging to this class, say Y.
  
  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause the configurator to skip all the
  questions about these cards. If you say Y, you will be asked for
  your specific card in the following questions.

WLCORE
  This module contains the main code for TI WLAN chips.  It abstracts
  hardware-specific differences among different chipset families.
  Each chipset family needs to implement its own lower-level module
  that will depend on this module for the common code.
  
  If you choose to build a module, it will be called wlcore. Say N if
  unsure.

WLCORE_SDIO
  This module adds support for the SDIO interface of adapters using
  TI WLAN chipsets.  Select this if your platform is using
  the SDIO bus.
  
  If you choose to build a module, it'll be called wlcore_sdio.
  Say N if unsure.

WLCORE_SPI
  This module adds support for the SPI interface of adapters using
  TI WLAN chipsets.  Select this if your platform is using
  the SPI bus.
  
  If you choose to build a module, it'll be called wlcore_spi.
  Say N if unsure.

WM831X_BACKUP
  Say Y here to enable support for the backup battery charger
  in the Wolfson Microelectronics WM831x PMICs.

WM831X_POWER
  Say Y here to enable support for the power management unit
  provided by Wolfson Microelectronics WM831x PMICs.

WM831X_WATCHDOG
  Support for the watchdog in the WM831x AudioPlus PMICs.  When
  the watchdog triggers the system will be reset.

WM8350_POWER
  Say Y here to enable support for the power management unit
  provided by the Wolfson Microelectronics WM8350 PMIC.

WM8350_WATCHDOG
  Support for the watchdog in the WM8350 AudioPlus PMIC.  When
  the watchdog triggers the system will be reset.

WMI_BMOF
  Say Y here if you want to be able to read a firmware-embedded
  WMI Binary MOF data. Using this requires userspace tools and may be
  rather tedious.
  
  To compile this driver as a module, choose M here: the module will
  be called wmi-bmof.

WQ_POWER_EFFICIENT_DEFAULT
  Per-cpu workqueues are generally preferred because they show
  better performance thanks to cache locality; unfortunately,
  per-cpu workqueues tend to be more power hungry than unbound
  workqueues.
  
  Enabling workqueue.power_efficient kernel parameter makes the
  per-cpu workqueues which were observed to contribute
  significantly to power consumption unbound, leading to measurably
  lower power usage at the cost of small performance overhead.
  
  This config option determines whether workqueue.power_efficient
  is enabled by default.
  
  If in doubt, say N.

WQ_WATCHDOG
  Say Y here to enable stall detection on workqueues.  If a
  worker pool doesn't make forward progress on a pending work
  item for over a given amount of time, 30s by default, a
  warning message is printed along with dump of workqueue
  state.  This can be configured through kernel parameter
  "workqueue.watchdog_thresh" and its sysfs counterpart.

WW_MUTEX_SELFTEST
  This option provides a kernel module that runs tests on the
  on the struct ww_mutex locking API.
  
  It is recommended to enable DEBUG_WW_MUTEX_SLOWPATH in conjunction
  with this test harness.
  
  Say M if you want these self tests to build as a module.
  Say N if you are unsure.

X25
  X.25 is a set of standardized network protocols, similar in scope to
  frame relay; the one physical line from your box to the X.25 network
  entry point can carry several logical point-to-point connections
  (called "virtual circuits") to other computers connected to the X.25
  network. Governments, banks, and other organizations tend to use it
  to connect to each other or to form Wide Area Networks (WANs). Many
  countries have public X.25 networks. X.25 consists of two
  protocols: the higher level Packet Layer Protocol (PLP) (say Y here
  if you want that) and the lower level data link layer protocol LAPB
  (say Y to "LAPB Data Link Driver" below if you want that).
  
  You can read more about X.25 at <https://www.sangoma.com/tutorials/x25/> and
  <http://docwiki.cisco.com/wiki/X.25>.
  Information about X.25 for Linux is contained in the files
  <file:Documentation/networking/x25.rst> and
  <file:Documentation/networking/x25-iface.rst>.
  
  One connects to an X.25 network either with a dedicated network card
  using the X.21 protocol (not yet supported by Linux) or one can do
  X.25 over a standard telephone line using an ordinary modem (say Y
  to "X.25 async driver" below) or over Ethernet using an ordinary
  Ethernet card and the LAPB over Ethernet (say Y to "LAPB Data Link
  Driver" and "LAPB over Ethernet driver" below).
  
  To compile this driver as a module, choose M here: the module
  will be called x25. If unsure, say N.

X509_CERTIFICATE_PARSER
  This option provides support for parsing X.509 format blobs for key
  data and provides the ability to instantiate a crypto key from a
  public key packet found inside the certificate.

X86
  No help

X86_16BIT
  This option is required by programs like Wine to run 16-bit
  protected mode legacy code on x86 processors.  Disabling
  this option saves about 300 bytes on i386, or around 6K text
  plus 16K runtime memory on x86-64,

X86_32
  No help

X86_32_IRIS
  The Iris machines from EuroBraille do not have APM or ACPI support
  to shut themselves down properly.  A special I/O sequence is
  needed to do so, which is what this module does at
  kernel shutdown.
  
  This is only for Iris machines from EuroBraille.
  
  If unused, say N.

X86_32_LAZY_GS
  No help

X86_32_NON_STANDARD
  This option compiles in the bigsmp and STA2X11 default
  subarchitectures.  It is intended for a generic binary
  kernel. If you select them all, kernel will probe it one by
  one and will fallback to default.

X86_32_SMP
  No help

X86_5LEVEL
  5-level paging enables access to larger address space:
  upto 128 PiB of virtual address space and 4 PiB of
  physical address space.
  
  It will be supported by future Intel CPUs.
  
  A kernel with the option enabled can be booted on machines that
  support 4- or 5-level paging.
  
  See Documentation/x86/x86_64/5level-paging.rst for more
  information.
  
  Say N if unsure.

X86_64
  No help

X86_64_ACPI_NUMA
  Enable ACPI SRAT based node topology detection.

X86_64_SMP
  No help

X86_ACPI_CPUFREQ
  This driver adds a CPUFreq driver which utilizes the ACPI
  Processor Performance States.
  This driver also supports Intel Enhanced Speedstep and newer
  AMD CPUs.
  
  To compile this driver as a module, choose M here: the
  module will be called acpi-cpufreq.
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  If in doubt, say N.

X86_ACPI_CPUFREQ_CPB
  The powernow-k8 driver used to provide a sysfs knob called "cpb"
  to disable the Core Performance Boosting feature of AMD CPUs. This
  file has now been superseded by the more generic "boost" entry.
  
  By enabling this option the acpi_cpufreq driver provides the old
  entry in addition to the new boost ones, for compatibility reasons.

X86_ALIGNMENT_16
  No help

X86_AMD_FREQ_SENSITIVITY
  This adds AMD-specific powersave bias function to the ondemand
  governor, which allows it to make more power-conscious frequency
  change decisions based on feedback from hardware (available on AMD
  Family 16h and above).
  
  Hardware feedback tells software how "sensitive" to frequency changes
  the CPUs' workloads are. CPU-bound workloads will be more sensitive
  -- they will perform better as frequency increases. Memory/IO-bound
  workloads will be less sensitive -- they will not necessarily perform
  better as frequency increases.
  
  If in doubt, say N.

X86_AMD_PLATFORM_DEVICE
  Select to interpret AMD specific ACPI device to platform device
  such as I2C, UART, GPIO found on AMD Carrizo and later chipsets.
  I2C and UART depend on COMMON_CLK to set clock. GPIO driver is
  implemented under PINCTRL subsystem.

X86_ANCIENT_MCE
  Include support for machine check handling on old Pentium 5 or WinChip
  systems. These typically need to be enabled explicitly on the command
  line.

X86_APM_BOOT
  No help

X86_BIGSMP
  This option is needed for the systems that have more than 8 CPUs.

X86_BOOTPARAM_MEMORY_CORRUPTION_CHECK
  Set whether the default state of memory_corruption_check is
  on or off.

X86_CHECK_BIOS_CORRUPTION
  Periodically check for memory corruption in low memory, which
  is suspected to be caused by BIOS.  Even when enabled in the
  configuration, it is disabled at runtime.  Enable it by
  setting "memory_corruption_check=1" on the kernel command
  line.  By default it scans the low 64k of memory every 60
  seconds; see the memory_corruption_check_size and
  memory_corruption_check_period parameters in
  Documentation/admin-guide/kernel-parameters.rst to adjust this.
  
  When enabled with the default parameters, this option has
  almost no overhead, as it reserves a relatively small amount
  of memory and scans it infrequently.  It both detects corruption
  and prevents it from affecting the running system.
  
  It is, however, intended as a diagnostic tool; if repeatable
  BIOS-originated corruption always affects the same memory,
  you can use memmap= to prevent the kernel from using that
  memory.

X86_CMOV
  No help

X86_CMPXCHG64
  No help

X86_CPA_STATISTICS
  Expose statistics about the Change Page Attribute mechanism, which
  helps to determine the effectiveness of preserving large and huge
  page mappings when mapping protections are changed.

X86_CPUFREQ_NFORCE2
  This adds the CPUFreq driver for FSB changing on nVidia nForce2
  platforms.
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  If in doubt, say N.

X86_CPUID
  This device gives processes access to the x86 CPUID instruction to
  be executed on a specific processor.  It is a character device
  with major 203 and minors 0 to 31 for /dev/cpu/0/cpuid to
  /dev/cpu/31/cpuid.

X86_CPU_RESCTRL
  Enable x86 CPU resource control support.
  
  Provide support for the allocation and monitoring of system resources
  usage by the CPU.
  
  Intel calls this Intel Resource Director Technology
  (Intel(R) RDT). More information about RDT can be found in the
  Intel x86 Architecture Software Developer Manual.
  
  AMD calls this AMD Platform Quality of Service (AMD QoS).
  More information about AMD QoS can be found in the AMD64 Technology
  Platform Quality of Service Extensions manual.
  
  Say N if unsure.

X86_DEBUGCTLMSR
  No help

X86_DEBUG_FPU
  If this option is enabled then there will be extra sanity
  checks and (boot time) debug printouts added to the kernel.
  This debugging adds some small amount of runtime overhead
  to the kernel.
  
  If unsure, say N.

X86_DECODER_SELFTEST
  Perform x86 instruction decoder selftests at build time.
  This option is useful for checking the sanity of x86 instruction
  decoder code.
  If unsure, say "N".

X86_DIRECT_GBPAGES
  Certain kernel features effectively disable kernel
  linear 1 GB mappings (even if the CPU otherwise
  supports them), so don't confuse the user by printing
  that we have them enabled.

X86_ESPFIX32
  No help

X86_ESPFIX64
  No help

X86_EXTENDED_PLATFORM
  If you disable this option then the kernel will only support
  standard PC platforms. (which covers the vast majority of
  systems out there.)
  
  If you enable this option then you'll be able to select support
  for the following (non-PC) 32 bit x86 platforms:
        Goldfish (Android emulator)
        AMD Elan
        RDC R-321x SoC
        SGI 320/540 (Visual Workstation)
        STA2X11-based (e.g. Northville)
        Moorestown MID devices
  
  If you have one of these systems, or if you want to build a
  generic distribution kernel, say Y here - otherwise say N.
  If you disable this option then the kernel will only support
  standard PC platforms. (which covers the vast majority of
  systems out there.)
  
  If you enable this option then you'll be able to select support
  for the following (non-PC) 64 bit x86 platforms:
        Numascale NumaChip
        ScaleMP vSMP
        SGI Ultraviolet
  
  If you have one of these systems, or if you want to build a
  generic distribution kernel, say Y here - otherwise say N.

X86_E_POWERSAVER
  This adds the CPUFreq driver for VIA C7 processors.  However, this driver
  does not have any safeguards to prevent operating the CPU out of spec
  and is thus considered dangerous.  Please use the regular ACPI cpufreq
  driver, enabled by CONFIG_X86_ACPI_CPUFREQ.
  
  If in doubt, say N.

X86_F00F_BUG
  No help

X86_FEATURE_NAMES
  This option compiles in a table of x86 feature bits and corresponding
  names.  This is required to support /proc/cpuinfo and a few kernel
  messages.  You can disable this to save space, at the expense of
  making those few kernel messages show numeric feature bits instead.
  
  If in doubt, say Y.

X86_GENERIC
  Instead of just including optimizations for the selected
  x86 variant (e.g. PII, Crusoe or Athlon), include some more
  generic optimizations as well. This will make the kernel
  perform better on x86 CPUs other than that selected.
  
  This is really intended for distributors who need more
  generic optimizations.

X86_GOLDFISH
  Enable support for the Goldfish virtual platform used primarily
  for Android development. Unless you are building for the Android
  Goldfish emulator say N here.

X86_GX_SUSPMOD
  This add the CPUFreq driver for NatSemi Geode processors which
  support suspend modulation.
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  If in doubt, say N.

X86_HV_CALLBACK_VECTOR
  No help

X86_INTEL_CE
  Select for the Intel CE media processor (CE4100) SOC.
  This option compiles in support for the CE4100 SOC for settop
  boxes and media devices.

X86_INTEL_LPSS
  Select to build support for Intel Low Power Subsystem such as
  found on Intel Lynxpoint PCH. Selecting this option enables
  things like clock tree (common clock framework) and pincontrol
  which are needed by the LPSS peripheral drivers.

X86_INTEL_MEMORY_PROTECTION_KEYS
  Memory Protection Keys provides a mechanism for enforcing
  page-based protections, but without requiring modification of the
  page tables when an application changes protection domains.
  
  For details, see Documentation/core-api/protection-keys.rst
  
  If unsure, say y.

X86_INTEL_MID
  Select to build a kernel capable of supporting Intel MID (Mobile
  Internet Device) platform systems which do not have the PCI legacy
  interfaces. If you are building for a PC class system say N here.
  
  Intel MID platforms are based on an Intel processor and chipset which
  consume less power than most of the x86 derivatives.

X86_INTEL_PSTATE
  This driver provides a P state for Intel core processors.
  The driver implements an internal governor and will become
  the scaling driver and governor for Sandy bridge processors.
  
  When this driver is enabled it will become the preferred
  scaling driver for Sandy bridge processors.
  
  If in doubt, say N.

X86_INTEL_QUARK
  Select to include support for Quark X1000 SoC.
  Say Y here if you have a Quark based system such as the Arduino
  compatible Intel Galileo.

X86_INTEL_TSX_MODE_AUTO
  TSX is enabled on TSX capable HW that is believed to be safe against
  side channel attacks- equals the tsx=auto command line parameter.

X86_INTEL_TSX_MODE_OFF
  TSX is disabled if possible - equals to tsx=off command line parameter.

X86_INTEL_TSX_MODE_ON
  TSX is always enabled on TSX capable HW - equals the tsx=on command
  line parameter.

X86_INTEL_USERCOPY
  No help

X86_INTERNODE_CACHE_SHIFT
  No help

X86_INVD_BUG
  No help

X86_IOPL_IOPERM
  This enables the ioperm() and iopl() syscalls which are necessary
  for legacy applications.
  
  Legacy IOPL support is an overbroad mechanism which allows user
  space aside of accessing all 65536 I/O ports also to disable
  interrupts. To gain this access the caller needs CAP_SYS_RAWIO
  capabilities and permission from potentially active security
  modules.
  
  The emulation restricts the functionality of the syscall to
  only allowing the full range I/O port access, but prevents the
  ability to disable interrupts from user space which would be
  granted if the hardware IOPL mechanism would be used.

X86_IO_APIC
  No help

X86_L1_CACHE_SHIFT
  No help

X86_LEGACY_VM86
  This option allows user programs to put the CPU into V8086
  mode, which is an 80286-era approximation of 16-bit real mode.
  
  Some very old versions of X and/or vbetool require this option
  for user mode setting.  Similarly, DOSEMU will use it if
  available to accelerate real mode DOS programs.  However, any
  recent version of DOSEMU, X, or vbetool should be fully
  functional even without kernel VM86 support, as they will all
  fall back to software emulation. Nevertheless, if you are using
  a 16-bit DOS program where 16-bit performance matters, vm86
  mode might be faster than emulation and you might want to
  enable this option.
  
  Note that any app that works on a 64-bit kernel is unlikely to
  need this option, as 64-bit kernels don't, and can't, support
  V8086 mode. This option is also unrelated to 16-bit protected
  mode and is not needed to run most 16-bit programs under Wine.
  
  Enabling this option increases the complexity of the kernel
  and slows down exception handling a tiny bit.
  
  If unsure, say N here.

X86_LOCAL_APIC
  No help

X86_LONGHAUL
  This adds the CPUFreq driver for VIA Samuel/CyrixIII,
  VIA Cyrix Samuel/C3, VIA Cyrix Ezra and VIA Cyrix Ezra-T
  processors.
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  If in doubt, say N.

X86_LONGRUN
  This adds the CPUFreq driver for Transmeta Crusoe and Efficeon processors
  which support LongRun.
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  If in doubt, say N.

X86_MCE
  Machine Check support allows the processor to notify the
  kernel if it detects a problem (e.g. overheating, data corruption).
  The action the kernel takes depends on the severity of the problem,
  ranging from warning messages to halting the machine.

X86_MCELOG_LEGACY
  Enable support for /dev/mcelog which is needed by the old mcelog
  userspace logging daemon. Consider switching to the new generation
  rasdaemon solution.

X86_MCE_AMD
  Additional support for AMD specific MCE features such as
  the DRAM Error Threshold.

X86_MCE_INJECT
  Provide support for injecting machine checks for testing purposes.
  If you don't know what a machine check is and you don't do kernel
  QA it is safe to say n.

X86_MCE_INTEL
  Additional support for intel specific MCE features such as
  the thermal monitor.

X86_MCE_THRESHOLD
  No help

X86_MINIMUM_CPU_FAMILY
  No help

X86_MPPARSE
  For old smp systems that do not have proper acpi support. Newer systems
  (esp with 64bit cpus) with acpi support, MADT and DSDT will override it

X86_MSR
  This device gives privileged processes access to the x86
  Model-Specific Registers (MSRs).  It is a character device with
  major 202 and minors 0 to 31 for /dev/cpu/0/msr to /dev/cpu/31/msr.
  MSR accesses are directed to a specific CPU on multi-processor
  systems.

X86_NEED_RELOCS
  No help

X86_NUMACHIP
  Adds support for Numascale NumaChip large-SMP systems. Needed to
  enable more than ~168 cores.
  If you don't have one of these, you should say N here.

X86_P4_CLOCKMOD
  This adds the CPUFreq driver for Intel Pentium 4 / XEON
  processors.  When enabled it will lower CPU temperature by skipping
  clocks.
  
  This driver should be only used in exceptional
  circumstances when very low power is needed because it causes severe
  slowdowns and noticeable latencies.  Normally Speedstep should be used
  instead.
  
  To compile this driver as a module, choose M here: the
  module will be called p4-clockmod.
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  Unless you are absolutely sure say N.

X86_P6_NOP
  No help

X86_PAE
  PAE is required for NX support, and furthermore enables
  larger swapspace support for non-overcommit purposes. It
  has the cost of more pagetable lookup overhead, and also
  consumes more pagetable space per process.

X86_PAT
  Use PAT attributes to setup page level cache control.
  
  PATs are the modern equivalents of MTRRs and are much more
  flexible than MTRRs.
  
  Say N here if you see bootup problems (boot crash, boot hang,
  spontaneous reboots) or a non-working video driver.
  
  If unsure, say Y.

X86_PCC_CPUFREQ
  This driver adds support for the PCC interface.
  
  For details, take a look at:
  <file:Documentation/admin-guide/pm/cpufreq_drivers.rst>.
  
  To compile this driver as a module, choose M here: the
  module will be called pcc-cpufreq.
  
  If in doubt, say N.

X86_PKG_TEMP_THERMAL
  Enable this to register CPU digital sensor for package temperature as
  thermal zone. Each package will have its own thermal zone. There are
  two trip points which can be set by user to get notifications via thermal
  notification methods.

X86_PLATFORM_DEVICES
  Say Y here to get to see options for device drivers for various
  x86 platforms, including vendor-specific laptop extension drivers.
  This option alone does not add any kernel code.
  
  If you say N, all options in this submenu will be skipped and disabled.

X86_PMEM_LEGACY
  Treat memory marked using the non-standard e820 type of 12 as used
  by the Intel Sandy Bridge-EP reference BIOS as protected memory.
  The kernel will offer these regions to the 'pmem' driver so
  they can be used for persistent storage.
  
  Say Y if unsure.

X86_PMEM_LEGACY_DEVICE
  No help

X86_PM_TIMER
  The Power Management Timer is available on all ACPI-capable,
  in most cases even if ACPI is unusable or blacklisted.
  
  This timing source is not affected by power management features
  like aggressive processor idling, throttling, frequency and/or
  voltage scaling, unlike the commonly used Time Stamp Counter
  (TSC) timing source.
  
  You should nearly always say Y here because many modern
  systems require this timer.

X86_POWERNOW_K6
  This adds the CPUFreq driver for mobile AMD K6-2+ and mobile
  AMD K6-3+ processors.
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  If in doubt, say N.

X86_POWERNOW_K7
  This adds the CPUFreq driver for mobile AMD K7 mobile processors.
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  If in doubt, say N.

X86_POWERNOW_K7_ACPI
  No help

X86_POWERNOW_K8
  This adds the CPUFreq driver for K8/early Opteron/Athlon64 processors.
  Support for K10 and newer processors is now in acpi-cpufreq.
  
  To compile this driver as a module, choose M here: the
  module will be called powernow-k8.
  
  For details, take a look at <file:Documentation/cpu-freq/>.

X86_RDC321X
  This option is needed for RDC R-321x system-on-chip, also known
  as R-8610-(G).
  If you don't have one of these chips, you should say N here.

X86_REBOOTFIXUPS
  This enables chipset and/or board specific fixups to be done
  in order to get reboot to work correctly. This is only needed on
  some combinations of hardware and BIOS. The symptom, for which
  this config is intended, is when reboot ends with a stalled/hung
  system.
  
  Currently, the only fixup is for the Geode machines using
  CS5530A and CS5536 chipsets and the RDC R-321x SoC.
  
  Say Y if you want to enable the fixup. Currently, it's safe to
  enable this option even if you don't need it.
  Say N otherwise.

X86_REROUTE_FOR_BROKEN_BOOT_IRQS
  This option enables a workaround that fixes a source of
  spurious interrupts. This is recommended when threaded
  interrupt handling is used on systems where the generation of
  superfluous "boot interrupts" cannot be disabled.
  
  Some chipsets generate a legacy INTx "boot IRQ" when the IRQ
  entry in the chipset's IO-APIC is masked (as, e.g. the RT
  kernel does during interrupt handling). On chipsets where this
  boot IRQ generation cannot be disabled, this workaround keeps
  the original IRQ line masked so that only the equivalent "boot
  IRQ" is delivered to the CPUs. The workaround also tells the
  kernel to set up the IRQ handler on the boot IRQ line. In this
  way only one interrupt is delivered to the kernel. Otherwise
  the spurious second interrupt may cause the kernel to bring
  down (vital) interrupt lines.
  
  Only affects "broken" chipsets. Interrupt sharing may be
  increased on these systems.

X86_RESERVE_LOW
  Specify the amount of low memory to reserve for the BIOS.
  
  The first page contains BIOS data structures that the kernel
  must not use, so that page must always be reserved.
  
  By default we reserve the first 64K of physical RAM, as a
  number of BIOSes are known to corrupt that memory range
  during events such as suspend/resume or monitor cable
  insertion, so it must not be used by the kernel.
  
  You can set this to 4 if you are absolutely sure that you
  trust the BIOS to get all its memory reservations and usages
  right.  If you know your BIOS have problems beyond the
  default 64K area, you can set this to 640 to avoid using the
  entire low memory range.
  
  If you have doubts about the BIOS (e.g. suspend/resume does
  not work or there's kernel crashes after certain hardware
  hotplug events) then you might want to enable
  X86_CHECK_BIOS_CORRUPTION=y to allow the kernel to check
  typical corruption patterns.
  
  Leave this to the default value of 64 if you are unsure.

X86_SFI_CPUFREQ
  This adds a CPUFreq driver for some Silvermont based Intel Atom
  architectures like Z34xx and Z35xx which enumerate processor
  performance states through SFI.
  
  If in doubt, say N.

X86_SGX
  Intel(R) Software Guard eXtensions (SGX) is a set of CPU instructions
  that can be used by applications to set aside private regions of code
  and data, referred to as enclaves. An enclave's private memory can
  only be accessed by code running within the enclave. Accesses from
  outside the enclave, including other enclaves, are disallowed by
  hardware.
  
  If unsure, say N.

X86_SMAP
  Supervisor Mode Access Prevention (SMAP) is a security
  feature in newer Intel processors.  There is a small
  performance cost if this enabled and turned on; there is
  also a small increase in the kernel size if this is enabled.
  
  If unsure, say Y.

X86_SPEEDSTEP_CENTRINO
  This is deprecated and this functionality is now merged into
  acpi_cpufreq (X86_ACPI_CPUFREQ). Use that driver instead of
  speedstep_centrino.
  This adds the CPUFreq driver for Enhanced SpeedStep enabled
  mobile CPUs.  This means Intel Pentium M (Centrino) CPUs
  or 64bit enabled Intel Xeons.
  
  To compile this driver as a module, choose M here: the
  module will be called speedstep-centrino.
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  If in doubt, say N.

X86_SPEEDSTEP_CENTRINO_TABLE
  Use built-in tables for Banias CPUs if ACPI encoding
  is not available.
  
  If in doubt, say N.

X86_SPEEDSTEP_ICH
  This adds the CPUFreq driver for certain mobile Intel Pentium III
  (Coppermine), all mobile Intel Pentium III-M (Tualatin) and all
  mobile Intel Pentium 4 P4-M on systems which have an Intel ICH2,
  ICH3 or ICH4 southbridge.
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  If in doubt, say N.

X86_SPEEDSTEP_LIB
  No help

X86_SPEEDSTEP_RELAXED_CAP_CHECK
  Don't perform all checks for a speedstep capable system which would
  normally be done. Some ancient or strange systems, though speedstep
  capable, don't always indicate that they are speedstep capable. This
  option lets the probing code bypass some of those checks if the
  parameter "relaxed_check=1" is passed to the module.
  

X86_SPEEDSTEP_SMI
  This adds the CPUFreq driver for certain mobile Intel Pentium III
  (Coppermine), all mobile Intel Pentium III-M (Tualatin)
  on systems which have an Intel 440BX/ZX/MX southbridge.
  
  For details, take a look at <file:Documentation/cpu-freq/>.
  
  If in doubt, say N.

X86_SUPPORTS_MEMORY_FAILURE
  No help

X86_SYSFB
  Firmwares often provide initial graphics framebuffers so the BIOS,
  bootloader or kernel can show basic video-output during boot for
  user-guidance and debugging. Historically, x86 used the VESA BIOS
  Extensions and EFI-framebuffers for this, which are mostly limited
  to x86.
  This option, if enabled, marks VGA/VBE/EFI framebuffers as generic
  framebuffers so the new generic system-framebuffer drivers can be
  used on x86. If the framebuffer is not compatible with the generic
  modes, it is advertised as fallback platform framebuffer so legacy
  drivers like efifb, vesafb and uvesafb can pick it up.
  If this option is not selected, all system framebuffers are always
  marked as fallback platform framebuffers as usual.
  
  Note: Legacy fbdev drivers, including vesafb, efifb, uvesafb, will
  not be able to pick up generic system framebuffers if this option
  is selected. You are highly encouraged to enable simplefb as
  replacement if you select this option. simplefb can correctly deal
  with generic system framebuffers. But you should still keep vesafb
  and others enabled as fallback if a system framebuffer is
  incompatible with simplefb.
  
  If unsure, say Y.

X86_THERMAL_VECTOR
  No help

X86_TSC
  No help

X86_UMIP
  User Mode Instruction Prevention (UMIP) is a security feature in
  some x86 processors. If enabled, a general protection fault is
  issued if the SGDT, SLDT, SIDT, SMSW or STR instructions are
  executed in user mode. These instructions unnecessarily expose
  information about the hardware state.
  
  The vast majority of applications do not use these instructions.
  For the very few that do, software emulation is provided in
  specific cases in protected and virtual-8086 modes. Emulated
  results are dummy.

X86_UP_APIC
  A local APIC (Advanced Programmable Interrupt Controller) is an
  integrated interrupt controller in the CPU. If you have a single-CPU
  system which has a processor with a local APIC, you can say Y here to
  enable and use it. If you say Y here even though your machine doesn't
  have a local APIC, then the kernel will still run with no slowdown at
  all. The local APIC supports CPU-generated self-interrupts (timer,
  performance counters), and the NMI watchdog which detects hard
  lockups.

X86_UP_IOAPIC
  An IO-APIC (I/O Advanced Programmable Interrupt Controller) is an
  SMP-capable replacement for PC-style interrupt controllers. Most
  SMP systems and many recent uniprocessor systems have one.
  
  If you have a single-CPU system with an IO-APIC, you can say Y here
  to use it. If you say Y here even though your machine doesn't have
  an IO-APIC, then the kernel will still run with no slowdown at all.

X86_USE_3DNOW
  No help

X86_USE_PPRO_CHECKSUM
  No help

X86_UV
  This option is needed in order to support SGI Ultraviolet systems.
  If you don't have one of these, you should say N here.

X86_VERBOSE_BOOTUP
  Enables the informational output from the decompression stage
  (e.g. bzImage) of the boot. If you disable this you will still
  see errors. Disable this if you want silent bootup.

X86_VMX_FEATURE_NAMES
  No help

X86_VSMP
  Support for ScaleMP vSMP systems.  Say 'Y' here if this kernel is
  supposed to run on these EM64T-based machines.  Only choose this option
  if you have one of these machines.

X86_VSYSCALL_EMULATION
  This enables emulation of the legacy vsyscall page.  Disabling
  it is roughly equivalent to booting with vsyscall=none, except
  that it will also disable the helpful warning if a program
  tries to use a vsyscall.  With this option set to N, offending
  programs will just segfault, citing addresses of the form
  0xffffffffff600?00.
  
  This option is required by many programs built before 2013, and
  care should be used even with newer programs if set to N.
  
  Disabling this option saves about 7K of kernel size and
  possibly 4K of additional runtime pagetable memory.

X86_X2APIC
  This enables x2apic support on CPUs that have this feature.
  
  This allows 32-bit apic IDs (so it can support very large systems),
  and accesses the local apic via MSRs not via mmio.
  
  If you don't know what to do here, say N.

X86_X32
  Include code to run binaries for the x32 native 32-bit ABI
  for 64-bit processors.  An x32 process gets access to the
  full 64-bit register file and wide data path while leaving
  pointers at 32 bits for smaller memory footprint.
  
  You will need a recent binutils (2.22 or later) with
  elf32_x86_64 support enabled to compile a kernel with this
  option set.

XARRAY_MULTI
  Support entries which occupy multiple consecutive indices in the
  XArray.

XDP_SOCKETS
  XDP sockets allows a channel between XDP programs and
  userspace applications.

XDP_SOCKETS_DIAG
  Support for PF_XDP sockets monitoring interface used by the ss tool.
  If unsure, say Y.

XEN
  This is the Linux Xen port.  Enabling this will allow the
  kernel to boot in a paravirtualized environment under the
  Xen hypervisor.

XENFS
  The xen filesystem provides a way for domains to share
  information with each other and with the hypervisor.
  For example, by reading and writing the "xenbus" file, guests
  may pass arbitrary information to the initial domain.
  If in doubt, say yes.

XEN_512GB
  Limit paravirtualized user domains to 512GB of RAM.
  
  The Xen tools and crash dump analysis tools might not support
  pv-domains with more than 512 GB of RAM. This option controls the
  default setting of the kernel to use only up to 512 GB or more.
  It is always possible to change the default via specifying the
  boot parameter "xen_512gb_limit".

XEN_ACPI
  No help

XEN_ACPI_HOTPLUG_CPU
  Xen ACPI cpu enumerating and hotplugging
  
  For hotplugging, currently Xen only support ACPI cpu hotadd.
  If you want to hotadd cpu at runtime (the hotadded cpu cannot
  be removed until machine stop), select Y/M here.

XEN_ACPI_HOTPLUG_MEMORY
  This is Xen ACPI memory hotplug.
  
  Currently Xen only support ACPI memory hot-add. If you want
  to hot-add memory at runtime (the hot-added memory cannot be
  removed until machine stop), select Y/M here, otherwise select N.

XEN_ACPI_PROCESSOR
  This ACPI processor uploads Power Management information to the Xen
  hypervisor.
  
  To do that the driver parses the Power Management data and uploads
  said information to the Xen hypervisor. Then the Xen hypervisor can
  select the proper Cx and Pxx states. It also registers itself as the
  SMM so that other drivers (such as ACPI cpufreq scaling driver) will
  not load.
  
  To compile this driver as a module, choose M here: the module will be
  called xen_acpi_processor  If you do not know what to choose, select
  M here. If the CPUFREQ drivers are built in, select Y here.

XEN_AUTO_XLATE
  Support for auto-translated physmap guests.

XEN_BACKEND
  Support for backend device drivers that provide I/O services
  to other virtual machines.

XEN_BALLOON
  The balloon driver allows the Xen domain to request more memory from
  the system to expand the domain's memory allocation, or alternatively
  return unneeded memory to the system.

XEN_BALLOON_MEMORY_HOTPLUG
  Memory hotplug support for Xen balloon driver allows expanding memory
  available for the system above limit declared at system startup.
  It is very useful on critical systems which require long
  run without rebooting.
  
  It's also very useful for non PV domains to obtain unpopulated physical
  memory ranges to use in order to map foreign memory or grants.
  
  Memory could be hotplugged in following steps:
  
    1) target domain: ensure that memory auto online policy is in
       effect by checking /sys/devices/system/memory/auto_online_blocks
       file (should be 'online').
  
    2) control domain: xl mem-max <target-domain> <maxmem>
       where <maxmem> is >= requested memory size,
  
    3) control domain: xl mem-set <target-domain> <memory>
       where <memory> is requested memory size; alternatively memory
       could be added by writing proper value to
       /sys/devices/system/xen_memory/xen_memory0/target or
       /sys/devices/system/xen_memory/xen_memory0/target_kb on the
       target domain.
  
  Alternatively, if memory auto onlining was not requested at step 1
  the newly added memory can be manually onlined in the target domain
  by doing the following:
  
        for i in /sys/devices/system/memory/memory*/state; do [ "`cat "$i"`" = offline ] && echo online > "$i"; done
  
  or by adding the following line to udev rules:
  
  SUBSYSTEM=="memory", ACTION=="add", RUN+="/bin/sh -c '[ -f /sys$devpath/state ] && echo online > /sys$devpath/state'"

XEN_BALLOON_MEMORY_HOTPLUG_LIMIT
  Maxmium amount of memory (in GiB) that a PV guest can be
  expanded to when using memory hotplug.
  
  A PV guest can have more memory than this limit if is
  started with a larger maximum.
  
  This value is used to allocate enough space in internal
  tables needed for physical memory administration.

XEN_BLKDEV_BACKEND
  The block-device backend driver allows the kernel to export its
  block devices to other guests via a high-performance shared-memory
  interface.
  
  The corresponding Linux frontend driver is enabled by the
  CONFIG_XEN_BLKDEV_FRONTEND configuration option.
  
  The backend driver attaches itself to a any block device specified
  in the XenBus configuration. There are no limits to what the block
  device as long as it has a major and minor.
  
  If you are compiling a kernel to run in a Xen block backend driver
  domain (often this is domain 0) you should say Y here. To
  compile this driver as a module, chose M here: the module
  will be called xen-blkback.

XEN_BLKDEV_FRONTEND
  This driver implements the front-end of the Xen virtual
  block device driver.  It communicates with a back-end driver
  in another domain which drives the actual block device.

XEN_COMPAT_XENFS
  The old xenstore userspace tools expect to find "xenbus"
  under /proc/xen, but "xenbus" is now found at the root of the
  xenfs filesystem.  Selecting this causes the kernel to create
  the compatibility mount point /proc/xen if it is running on
  a xen platform.
  If in doubt, say yes.

XEN_DEBUG_FS
  Enable statistics output and various tuning options in debugfs.
  Enabling this option may incur a significant performance overhead.

XEN_DEV_EVTCHN
  The evtchn driver allows a userspace process to trigger event
  channels and to receive notification of an event channel
  firing.
  If in doubt, say yes.

XEN_DOM0
  Support running as a Xen PV Dom0 guest.

XEN_EFI
  No help

XEN_FBDEV_FRONTEND
  This driver implements the front-end of the Xen virtual
  frame buffer driver.  It communicates with a back-end
  in another domain.

XEN_FRONT_PGDIR_SHBUF
  No help

XEN_GNTDEV
  Allows userspace processes to use grants.

XEN_GNTDEV_DMABUF
  Allows userspace processes and kernel modules to use Xen backed
  dma-buf implementation. With this extension grant references to
  the pages of an imported dma-buf can be exported for other domain
  use and grant references coming from a foreign domain can be
  converted into a local dma-buf for local export.

XEN_GRANT_DEV_ALLOC
  Allows userspace processes to create pages with access granted
  to other domains. This can be used to implement frontend drivers
  or as part of an inter-domain shared memory channel.

XEN_GRANT_DMA_ALLOC
  Extends grant table module API to allow allocating DMA capable
  buffers and mapping foreign grant references on top of it.
  The resulting buffer is similar to one allocated by the balloon
  driver in that proper memory reservation is made by
  ({increase|decrease}_reservation and VA mappings are updated if
  needed).
  This is useful for sharing foreign buffers with HW drivers which
  cannot work with scattered buffers provided by the balloon driver,
  but require DMAable memory instead.

XEN_HAVE_PVMMU
  No help

XEN_HAVE_VPMU
  No help

XEN_MCE_LOG
  Allow kernel fetching MCE error from Xen platform and
  converting it into Linux mcelog format for mcelog tools

XEN_NETDEV_BACKEND
  This driver allows the kernel to act as a Xen network driver
  domain which exports paravirtual network devices to other
  Xen domains. These devices can be accessed by any operating
  system that implements a compatible front end.
  
  The corresponding Linux frontend driver is enabled by the
  CONFIG_XEN_NETDEV_FRONTEND configuration option.
  
  The backend driver presents a standard network device
  endpoint for each paravirtual network device to the driver
  domain network stack. These can then be bridged or routed
  etc in order to provide full network connectivity.
  
  If you are compiling a kernel to run in a Xen network driver
  domain (often this is domain 0) you should say Y here. To
  compile this driver as a module, chose M here: the module
  will be called xen-netback.

XEN_NETDEV_FRONTEND
  This driver provides support for Xen paravirtual network
  devices exported by a Xen network driver domain (often
  domain 0).
  
  The corresponding Linux backend driver is enabled by the
  CONFIG_XEN_NETDEV_BACKEND option.
  
  If you are compiling a kernel for use as Xen guest, you
  should say Y here. To compile this driver as a module, chose
  M here: the module will be called xen-netfront.

XEN_PCIDEV_BACKEND
  The PCI device backend driver allows the kernel to export arbitrary
  PCI devices to other guests. If you select this to be a module, you
  will need to make sure no other driver has bound to the device(s)
  you want to make visible to other guests.
  
  The parameter "passthrough" allows you specify how you want the PCI
  devices to appear in the guest. You can choose the default (0) where
  PCI topology starts at 00.00.0, or (1) for passthrough if you want
  the PCI devices topology appear the same as in the host.
  
  The "hide" parameter (only applicable if backend driver is compiled
  into the kernel) allows you to bind the PCI devices to this module
  from the default device drivers. The argument is the list of PCI BDFs:
  xen-pciback.hide=(03:00.0)(04:00.0)
  
  If in doubt, say m.

XEN_PCIDEV_FRONTEND
  The PCI device frontend driver allows the kernel to import arbitrary
  PCI devices from a PCI backend to support PCI driver domains.

XEN_PRIVCMD
  No help

XEN_PV
  Support running as a Xen PV guest.

XEN_PVCALLS_BACKEND
  Experimental backend for the Xen PV Calls protocol
  (https://xenbits.xen.org/docs/unstable/misc/pvcalls.html). It
  allows PV Calls frontends to send POSIX calls to the backend,
  which implements them.
  
  If in doubt, say n.

XEN_PVCALLS_FRONTEND
  Experimental frontend for the Xen PV Calls protocol
  (https://xenbits.xen.org/docs/unstable/misc/pvcalls.html). It
  sends a small set of POSIX calls to the backend, which
  implements them.

XEN_PVH
  Support for running as a Xen PVH guest.

XEN_PVHVM
  No help

XEN_PVHVM_GUEST
  Support running as a Xen PVHVM guest.

XEN_PVHVM_SMP
  No help

XEN_PV_SMP
  No help

XEN_SAVE_RESTORE
  No help

XEN_SCRUB_PAGES_DEFAULT
  Scrub pages before returning them to the system for reuse by
  other domains.  This makes sure that any confidential data
  is not accidentally visible to other domains.  It is more
  secure, but slightly less efficient. This can be controlled with
  xen_scrub_pages=0 parameter and
  /sys/devices/system/xen_memory/xen_memory0/scrub_pages.
  This option only sets the default value.
  
  If in doubt, say yes.

XEN_SCSI_BACKEND
  The SCSI backend driver allows the kernel to export its SCSI Devices
  to other guests via a high-performance shared-memory interface.
  Only needed for systems running as XEN driver domains (e.g. Dom0) and
  if guests need generic access to SCSI devices.

XEN_SCSI_FRONTEND
  The XEN SCSI frontend driver allows the kernel to access SCSI Devices
  within another guest OS (usually Dom0).
  Only needed if the kernel is running in a XEN guest and generic
  SCSI access to a device is needed.

XEN_STUB
  Allow kernel to install stub drivers, to reserve space for Xen drivers,
  i.e. memory hotplug and cpu hotplug, and to block native drivers loaded,
  so that real Xen drivers can be modular.
  
  To enable Xen features like cpu and memory hotplug, select Y here.

XEN_SYMS
  Exports hypervisor symbols (along with their types and addresses) via
  /proc/xen/xensyms file, similar to /proc/kallsyms

XEN_SYS_HYPERVISOR
  Create entries under /sys/hypervisor describing the Xen
  hypervisor environment.  When running native or in another
  virtual environment, /sys/hypervisor will still be present,
  but will have no xen contents.

XEN_UNPOPULATED_ALLOC
  Use unpopulated memory ranges in order to create mappings for guest
  memory regions, including grant maps and foreign pages. This avoids
  having to balloon out RAM regions in order to obtain physical memory
  space to create such mappings.

XEN_WDT
  Say Y here to support the hypervisor watchdog capability provided
  by Xen 4.0 and newer.  The watchdog timeout period is normally one
  minute but can be changed with a boot-time parameter.

XEN_XENBUS_FRONTEND
  No help

XFRM
  No help

XFRM_AH
  No help

XFRM_ALGO
  No help

XFRM_ESP
  No help

XFRM_ESPINTCP
  No help

XFRM_INTERFACE
  This provides a virtual interface to route IPsec traffic.
  
  If unsure, say N.

XFRM_IPCOMP
  No help

XFRM_MIGRATE
  A feature to update locator(s) of a given IPsec security
  association dynamically.  This feature is required, for
  instance, in a Mobile IPv6 environment with IPsec configuration
  where mobile nodes change their attachment point to the Internet.
  
  If unsure, say N.

XFRM_OFFLOAD
  No help

XFRM_STATISTICS
  This statistics is not a SNMP/MIB specification but shows
  statistics about transformation error (or almost error) factor
  at packet processing for developer.
  
  If unsure, say N.

XFRM_SUB_POLICY
  Support sub policy for developers. By using sub policy with main
  one, two policies can be applied to the same packet at once.
  Policy which lives shorter time in kernel should be a sub.
  
  If unsure, say N.

XFRM_USER
  Support for Transformation(XFRM) user configuration interface
  like IPsec used by native Linux tools.
  
  If unsure, say Y.

XFRM_USER_COMPAT
  Transformation(XFRM) user configuration interface like IPsec
  used by compatible Linux applications.
  
  If unsure, say N.

XFS_ASSERT_FATAL
  Set the default DEBUG mode ASSERT failure behavior.
  
  Say Y here to cause DEBUG mode ASSERT failures to result in fatal
  errors that BUG() the kernel by default. If you say N, ASSERT failures
  result in warnings.
  
  This behavior can be modified at runtime via sysfs.

XFS_DEBUG
  Say Y here to get an XFS build with many debugging features,
  including ASSERT checks, function wrappers around macros,
  and extra sanity-checking functions in various code paths.
  
  Note that the resulting code will be HUGE and SLOW, and probably
  not useful unless you are debugging a particular problem.
  
  Say N unless you are an XFS developer, or you play one on TV.

XFS_FS
  XFS is a high performance journaling filesystem which originated
  on the SGI IRIX platform.  It is completely multi-threaded, can
  support large files and large filesystems, extended attributes,
  variable block sizes, is extent based, and makes extensive use of
  Btrees (directories, extents, free space) to aid both performance
  and scalability.
  
  Refer to the documentation at <http://oss.sgi.com/projects/xfs/>
  for complete details.  This implementation is on-disk compatible
  with the IRIX version of XFS.
  
  To compile this file system support as a module, choose M here: the
  module will be called xfs.  Be aware, however, that if the file
  system of your root partition is compiled as a module, you'll need
  to use an initial ramdisk (initrd) to boot.

XFS_ONLINE_REPAIR
  If you say Y here you will be able to repair metadata on a
  mounted XFS filesystem.  This feature is intended to reduce
  filesystem downtime by fixing minor problems before they cause the
  filesystem to go down.  However, it requires that the filesystem be
  formatted with secondary metadata, such as reverse mappings and inode
  parent pointers.
  
  This feature is considered EXPERIMENTAL.  Use with caution!
  
  See the xfs_scrub man page in section 8 for additional information.
  
  If unsure, say N.

XFS_ONLINE_SCRUB
  If you say Y here you will be able to check metadata on a
  mounted XFS filesystem.  This feature is intended to reduce
  filesystem downtime by supplementing xfs_repair.  The key
  advantage here is to look for problems proactively so that
  they can be dealt with in a controlled manner.
  
  This feature is considered EXPERIMENTAL.  Use with caution!
  
  See the xfs_scrub man page in section 8 for additional information.
  
  If unsure, say N.

XFS_POSIX_ACL
  POSIX Access Control Lists (ACLs) support permissions for users and
  groups beyond the owner/group/world scheme.
  
  If you don't know what Access Control Lists are, say N.

XFS_QUOTA
  If you say Y here, you will be able to set limits for disk usage on
  a per user and/or a per group basis under XFS.  XFS considers quota
  information as filesystem metadata and uses journaling to provide a
  higher level guarantee of consistency.  The on-disk data format for
  quota is also compatible with the IRIX version of XFS, allowing a
  filesystem to be migrated between Linux and IRIX without any need
  for conversion.
  
  If unsure, say N.  More comprehensive documentation can be found in
  README.quota in the xfsprogs package.  XFS quota can be used either
  with or without the generic quota support enabled (CONFIG_QUOTA) -
  they are completely independent subsystems.

XFS_RT
  If you say Y here you will be able to mount and use XFS filesystems
  which contain a realtime subvolume.  The realtime subvolume is a
  separate area of disk space where only file data is stored.  It was
  originally designed to provide deterministic data rates suitable
  for media streaming applications, but is also useful as a generic
  mechanism for ensuring data and metadata/log I/Os are completely
  separated.  Regular file I/Os are isolated to a separate device
  from all other requests, and this can be done quite transparently
  to applications via the inherit-realtime directory inode flag.
  
  See the xfs man page in section 5 for additional information.
  
  If unsure, say N.

XFS_SUPPORT_V4
  The V4 filesystem format lacks certain features that are supported
  by the V5 format, such as metadata checksumming, strengthened
  metadata verification, and the ability to store timestamps past the
  year 2038.  Because of this, the V4 format is deprecated.  All users
  should upgrade by backing up their files, reformatting, and restoring
  from the backup.
  
  Administrators and users can detect a V4 filesystem by running
  xfs_info against a filesystem mountpoint and checking for a string
  beginning with "crc=".  If the string "crc=0" is found, the
  filesystem is a V4 filesystem.  If no such string is found, please
  upgrade xfsprogs to the latest version and try again.
  
  This option will become default N in September 2025.  Support for the
  V4 format will be removed entirely in September 2030.  Distributors
  can say N here to withdraw support earlier.
  
  To continue supporting the old V4 format (crc=0), say Y.
  To close off an attack surface, say N.

XFS_WARN
  Say Y here to get an XFS build with many additional warnings.
  It converts ASSERT checks to WARN, so will log any out-of-bounds
  conditions that occur that would otherwise be missed. It is much
  lighter weight than XFS_DEBUG and does not modify algorithms and will
  not cause the kernel to panic on non-fatal errors.
  
  However, similar to XFS_DEBUG, it is only advisable to use this if you
  are debugging a particular problem.

XGENE_DMA
  Enable support for the APM X-Gene SoC DMA engine.

XGENE_PMU
  Say y if you want to use APM X-Gene SoC performance monitors.

XGENE_SLIMPRO_MBOX
  An implementation of the APM X-Gene Interprocessor Communication
  Mailbox (IPCM) between the ARM 64-bit cores and SLIMpro controller.
  It is used to send short messages between ARM64-bit cores and
  the SLIMpro Management Engine, primarily for PM. Say Y here if you
  want to use the APM X-Gene SLIMpro IPCM support.

XIAOMI_WMI
  Say Y here if you want to support WMI-based keys on Xiaomi notebooks.
  
  To compile this driver as a module, choose M here: the module will
  be called xiaomi-wmi.

XILINX_AXI_EMAC
  This driver supports the 10/100/1000 Ethernet from Xilinx for the
  AXI bus interface used in Xilinx Virtex FPGAs and Soc's.

XILINX_DMA
  Enable support for Xilinx AXI VDMA Soft IP.
  
  AXI VDMA engine provides high-bandwidth direct memory access
  between memory and AXI4-Stream video type target
  peripherals including peripherals which support AXI4-
  Stream Video Protocol.  It has two stream interfaces/
  channels, Memory Mapped to Stream (MM2S) and Stream to
  Memory Mapped (S2MM) for the data transfers.
  AXI CDMA engine provides high-bandwidth direct memory access
  between a memory-mapped source address and a memory-mapped
  destination address.
  AXI DMA engine provides high-bandwidth one dimensional direct
  memory access between memory and AXI4-Stream target peripherals.
  AXI MCDMA engine provides high-bandwidth direct memory access
  between memory and AXI4-Stream target peripherals. It provides
  the scatter gather interface with multiple channels independent
  configuration support.

XILINX_EMACLITE
  This driver supports the 10/100 Ethernet Lite from Xilinx.

XILINX_GMII2RGMII
  This driver support xilinx GMII to RGMII IP core it provides
  the Reduced Gigabit Media Independent Interface(RGMII) between
  Ethernet physical media devices and the Gigabit Ethernet controller.

XILINX_HWICAP
  This option enables support for Xilinx Internal Configuration
  Access Port (ICAP) driver.  The ICAP is used on Xilinx Virtex
  FPGA platforms to partially reconfigure the FPGA at runtime.
  
  If unsure, say N.

XILINX_INTC
  No help

XILINX_LL_TEMAC
  This driver supports the Xilinx 10/100/1000 LocalLink TEMAC
  core used in Xilinx Spartan and Virtex FPGAs

XILINX_PR_DECOUPLER
  Say Y to enable drivers for Xilinx LogiCORE PR Decoupler.
  The PR Decoupler exists in the FPGA fabric to isolate one
  region of the FPGA from the busses while that region is
  being reprogrammed during partial reconfig.

XILINX_SDFEC
  This option enables support for the Xilinx SDFEC (Soft Decision
  Forward Error Correction) driver. This enables a char driver
  for the SDFEC.
  
  You may select this driver if your design instantiates the
  SDFEC(16nm) hardened block. To compile this as a module choose M.
  
  If unsure, say N.

XILINX_SYSACE
  Include support for the Xilinx SystemACE CompactFlash interface

XILINX_VCU
  Provides the driver to enable and disable the isolation between the
  processing system and programmable logic part by using the logicoreIP
  register set. This driver also configures the frequency based on the
  clock information from the logicoreIP register set.
  
  If you say yes here you get support for the logicoreIP.
  
  If unsure, say N.
  
  To compile this driver as a module, choose M here: the
  module will be called xlnx_vcu.

XILINX_WATCHDOG
  Watchdog driver for the xps_timebase_wdt ip core.
  
  To compile this driver as a module, choose M here: the
  module will be called of_xilinx_wdt.

XILINX_XADC
  Say yes here to have support for the Xilinx XADC. The driver does support
  both the ZYNQ interface to the XADC as well as the AXI-XADC interface.
  
  The driver can also be build as a module. If so, the module will be called
  xilinx-xadc.

XILINX_ZYNQMP_DMA
  Enable support for Xilinx ZynqMP DMA controller.

XILINX_ZYNQMP_DPDMA
  Enable support for Xilinx ZynqMP DisplayPort DMA. Choose this option
  if you have a Xilinx ZynqMP SoC with a DisplayPort subsystem. The
  driver provides the dmaengine required by the DisplayPort subsystem
  display driver.

XILLYBUS
  Xillybus is a generic interface for peripherals designed on
  programmable logic (FPGA). The driver probes the hardware for
  its capabilities, and creates device files accordingly.
  
  If unsure, say N.

XILLYBUS_OF
  Set to M if you want Xillybus to find its resources from the
  Open Firmware Flattened Device Tree. If the target is an embedded
  system, say M.

XILLYBUS_PCIE
  Set to M if you want Xillybus to use PCI Express for communicating
  with the FPGA.

XIL_AXIS_FIFO
  This adds support for the Xilinx AXI-Stream FIFO IP core driver.
  The AXI Streaming FIFO allows memory mapped access to a AXI Streaming
  interface. The Xilinx AXI-Stream FIFO IP core can be used to interface
  to the AXI Ethernet without the need to use DMA.

XO15_EBOOK
  Support for the ebook switch on the OLPC XO-1.5 laptop.
  
  This switch is triggered as the screen is rotated and folded down to
  convert the device into ebook form.

XO1_RFKILL
  Support for enabling/disabling the WLAN interface on the OLPC XO-1
  laptop.

XOR_BLOCKS
  No help

XPOWER_PMIC_OPREGION
  This config adds ACPI operation region support for XPower AXP288 PMIC.

XPS
  No help

XPS_USB_HCD_XILINX
  Xilinx xps USB host controller core is EHCI compliant and has
  transaction translator built-in. It can be configured to either
  support both high speed and full speed devices, or high speed
  devices only.

XSURF100
  This driver is for the Individual Computers X-Surf 100 Ethernet
  card (based on the Asix AX88796 chip). If you have such a card,
  say Y. Otherwise, say N.
  
  To compile this driver as a module, choose M here: the module
  will be called xsurf100.

XTENSA_MX
  No help

XTENSA_XT2000_SONIC
  This is the driver for the onboard card of the Xtensa XT2000 board.

XXHASH
  No help

XZ_DEC
  LZMA2 compression algorithm and BCJ filters are supported using
  the .xz file format as the container. For integrity checking,
  CRC32 is supported. See Documentation/staging/xz.rst for more information.

XZ_DEC_ARM
  No help

XZ_DEC_ARMTHUMB
  No help

XZ_DEC_BCJ
  No help

XZ_DEC_IA64
  No help

XZ_DEC_POWERPC
  No help

XZ_DEC_SPARC
  No help

XZ_DEC_TEST
  This allows passing .xz files to the in-kernel XZ decoder via
  a character special file. It calculates CRC32 of the decompressed
  data and writes diagnostics to the system log.
  
  Unless you are developing the XZ decoder, you don't need this
  and should say N.

XZ_DEC_X86
  No help

YAM
  The YAM is a modem for packet radio which connects to the serial
  port and includes some of the functions of a Terminal Node
  Controller. If you have one of those, say Y here.
  
  To compile this driver as a module, choose M here: the module
  will be called yam.
  
  

YELLOWFIN
  Say Y here if you have a Packet Engines G-NIC PCI Gigabit Ethernet
  adapter or the SYM53C885 Ethernet controller. The Gigabit adapter is
  used by the Beowulf Linux cluster project.  See
  <http://cesdis.gsfc.nasa.gov/linux/drivers/yellowfin.html> for more
  information about this driver in particular and Beowulf in general.
  
  To compile this driver as a module, choose M here: the module
  will be called yellowfin.  This is recommended.

YENTA
  This option enables support for CardBus host bridges.  Virtually
  all modern PCMCIA bridges are CardBus compatible.  A "bridge" is
  the hardware inside your computer that PCMCIA cards are plugged
  into.
  
  To compile this driver as modules, choose M here: the
  module will be called yenta_socket.
  
  If unsure, say Y.

YENTA_ENE_TUNE
  No help

YENTA_O2
  No help

YENTA_RICOH
  No help

YENTA_TI
  No help

YENTA_TOSHIBA
  No help

Z3FOLD
  A special purpose allocator for storing compressed pages.
  It is designed to store up to three compressed pages per physical
  page. It is a ZBUD derivative so the simplicity and determinism are
  still there.

ZBUD
  A special purpose allocator for storing compressed pages.
  It is designed to store up to two compressed pages per physical
  page.  While this design limits storage density, it has simple and
  deterministic reclaim properties that make it preferable to a higher
  density approach when reclaim will be used.

ZCRYPT
  Select this option if you want to enable support for
  s390 cryptographic adapters like:
  + Crypto Express 2 up to 7 Coprocessor (CEXxC)
  + Crypto Express 2 up to 7 Accelerator (CEXxA)
  + Crypto Express 4 up to 7 EP11 Coprocessor (CEXxP)

ZCRYPT_DEBUG
  Say 'Y' here to enable some additional debug features on the
  s390 cryptographic adapters driver.
  
  There will be some more sysfs attributes displayed for ap cards
  and queues and some flags on crypto requests are interpreted as
  debugging messages to force error injection.
  
  Do not enable on production level kernel build.
  
  If unsure, say N.

ZCRYPT_MULTIDEVNODES
  With this option enabled the zcrypt device driver can
  provide multiple devices nodes in /dev. Each device
  node can get customized to limit access and narrow
  down the use of the available crypto hardware.

ZD1211RW
  This is a driver for the ZyDAS ZD1211/ZD1211B wireless
  chip, present in many USB-wireless adapters.
  
  Device firmware is required alongside this driver. You can download
  the firmware distribution from http://sf.net/projects/zd1211/files/

ZD1211RW_DEBUG
  ZD1211 debugging messages. Choosing Y will result in additional debug
  messages being saved to your kernel logs, which may help debug any
  problems.
  

ZEROPLUS_FF
  Say Y here if you have a Zeroplus based game controller and want
  to have force feedback support for it.

ZFCP
  If you want to access SCSI devices attached to your IBM mainframe by
  means of Fibre Channel Protocol host bus adapters say Y.
  
  Supported HBAs include different models of the FICON Express and FCP
  Express I/O cards.
  
  For a more complete list, and for more details about setup and
  operation refer to the IBM publication "Device Drivers, Features, and
  Commands", SC33-8411.
  
  This driver is also available as a module. This module will be
  called zfcp. If you want to compile it as a module, say M here
  and read <file:Documentation/kbuild/modules.rst>.

ZIIRAVE_WATCHDOG
  Watchdog driver for the Zodiac Aerospace RAVE Switch Watchdog
  Processor.
  
  To compile this driver as a module, choose M here: the
  module will be called ziirave_wdt.

ZISOFS
  This is a Linux-specific extension to RockRidge which lets you store
  data in compressed form on a CD-ROM and have it transparently
  decompressed when the CD-ROM is accessed.  See
  <http://www.kernel.org/pub/linux/utils/fs/zisofs/> for the tools
  necessary to create such a filesystem.  Say Y here if you want to be
  able to read such compressed CD-ROMs.

ZLIB_DEFLATE
  No help

ZLIB_DFLTCC
  Enable s390x hardware support for zlib in the kernel.

ZLIB_INFLATE
  No help

ZONEFS_FS
  zonefs is a simple file system which exposes zones of a zoned block
  device (e.g. host-managed or host-aware SMR disk drives) as files.
  
  If unsure, say N.

ZONE_DEVICE
  Device memory hotplug support allows for establishing pmem,
  or other device driver discovered memory regions, in the
  memmap. This allows pfn_to_page() lookups of otherwise
  "device-physical" addresses which is needed for using a DAX
  mapping in an O_DIRECT operation, among other things.
  
  If FS_DAX is enabled, then say Y.

ZONE_DMA
  DMA memory allocation support allows devices with less than 32-bit
  addressing to allocate within the first 16MB of address space.
  Disable if no such devices will be used.
  
  If unsure, say Y.

ZONE_DMA32
  No help

ZOPT2201
  Say Y here if you want to build a driver for the IDT
  ZOPT2201 ambient light and UV B sensor.
  
  To compile this driver as a module, choose M here: the
  module will be called zopt2201.

ZORRO8390
  This driver is for Zorro Ethernet cards using an NS8390-compatible
  chipset, like the Village Tronic Ariadne II and the Individual
  Computers X-Surf Ethernet cards. If you have such a card, say Y.
  Otherwise, say N.
  
  To compile this driver as a module, choose M here: the module
  will be called zorro8390.

ZPA2326
  Say Y here to build support for the Murata ZPA2326 pressure and
  temperature sensor.
  
  To compile this driver as a module, choose M here: the module will
  be called zpa2326.

ZPA2326_I2C
  No help

ZPA2326_SPI
  No help

ZPOOL
  Compressed memory storage API.  This allows using either zbud or
  zsmalloc.

ZRAM
  Creates virtual block devices called /dev/zramX (X = 0, 1, ...).
  Pages written to these disks are compressed and stored in memory
  itself. These disks allow very fast I/O and compression provides
  good amounts of memory savings.
  
  It has several use cases, for example: /tmp storage, use as swap
  disks and maybe many more.
  
  See Documentation/admin-guide/blockdev/zram.rst for more information.

ZRAM_DEF_COMP
  No help

ZRAM_DEF_COMP_842
  No help

ZRAM_DEF_COMP_LZ4
  No help

ZRAM_DEF_COMP_LZ4HC
  No help

ZRAM_DEF_COMP_LZO
  No help

ZRAM_DEF_COMP_LZORLE
  No help

ZRAM_DEF_COMP_ZSTD
  No help

ZRAM_MEMORY_TRACKING
  With this feature, admin can track the state of allocated blocks
  of zRAM. Admin could see the information via
  /sys/kernel/debug/zram/zramX/block_state.
  
  See Documentation/admin-guide/blockdev/zram.rst for more information.

ZRAM_WRITEBACK
  With incompressible page, there is no memory saving to keep it
  in memory. Instead, write it out to backing device.
  For this feature, admin should set up backing device via
  /sys/block/zramX/backing_dev.
  
  With /sys/block/zramX/{idle,writeback}, application could ask
  idle page's writeback to the backing device to save in memory.
  
  See Documentation/admin-guide/blockdev/zram.rst for more information.

ZSMALLOC
  zsmalloc is a slab-based memory allocator designed to store
  compressed RAM pages.  zsmalloc uses virtual memory mapping
  in order to reduce fragmentation.  However, this results in a
  non-standard allocator interface where a handle, not a pointer, is
  returned by an alloc().  This handle must be mapped in order to
  access the allocated space.

ZSMALLOC_STAT
  This option enables code in the zsmalloc to collect various
  statistics about what's happening in zsmalloc and exports that
  information to userspace via debugfs.
  If unsure, say N.

ZSTD_COMPRESS
  No help

ZSTD_DECOMPRESS
  No help

ZSWAP
  A lightweight compressed cache for swap pages.  It takes
  pages that are in the process of being swapped out and attempts to
  compress them into a dynamically allocated RAM-based memory pool.
  This can result in a significant I/O reduction on swap device and,
  in the case where decompressing from RAM is faster that swap device
  reads, can also improve workload performance.
  
  This is marked experimental because it is a new feature (as of
  v3.11) that interacts heavily with memory reclaim.  While these
  interactions don't cause any known issues on simple memory setups,
  they have not be fully explored on the large set of potential
  configurations and workloads that exist.

ZSWAP_COMPRESSOR_DEFAULT
  No help

ZSWAP_COMPRESSOR_DEFAULT_842
  Use the 842 algorithm as the default compression algorithm.

ZSWAP_COMPRESSOR_DEFAULT_DEFLATE
  Use the Deflate algorithm as the default compression algorithm.

ZSWAP_COMPRESSOR_DEFAULT_LZ4
  Use the LZ4 algorithm as the default compression algorithm.

ZSWAP_COMPRESSOR_DEFAULT_LZ4HC
  Use the LZ4HC algorithm as the default compression algorithm.

ZSWAP_COMPRESSOR_DEFAULT_LZO
  Use the LZO algorithm as the default compression algorithm.

ZSWAP_COMPRESSOR_DEFAULT_ZSTD
  Use the zstd algorithm as the default compression algorithm.

ZSWAP_DEFAULT_ON
  If selected, the compressed cache for swap pages will be enabled
  at boot, otherwise it will be disabled.
  
  The selection made here can be overridden by using the kernel
  command line 'zswap.enabled=' option.

ZSWAP_ZPOOL_DEFAULT
  No help

ZSWAP_ZPOOL_DEFAULT_Z3FOLD
  Use the z3fold allocator as the default allocator.

ZSWAP_ZPOOL_DEFAULT_ZBUD
  Use the zbud allocator as the default allocator.

ZSWAP_ZPOOL_DEFAULT_ZSMALLOC
  Use the zsmalloc allocator as the default allocator.

ZX2967_PM_DOMAINS
  No help

ZX2967_THERMAL
  Enable the zx2967 thermal sensors driver, which supports
  the primitive temperature sensor embedded in zx2967 SoCs.
  This sensor generates the real time die temperature.

ZX2967_WATCHDOG
  Say Y here to include support for the watchdog timer
  in ZTE zx2967 SoCs.
  To compile this driver as a module, choose M here: the
  module will be called zx2967_wdt.

ZX_DMA
  Support the DMA engine for ZTE ZX family platform devices.

ZX_I2S
  Say Y or M if you want to add support for codecs attached to the
  ZTE ZX I2S interface

ZX_SPDIF
  Say Y or M if you want to add support for codecs attached to the
  ZTE ZX SPDIF interface

ZX_TDM
  Say Y or M if you want to add support for codecs attached to the
  ZTE ZX TDM interface

ZYNQMP_FIRMWARE
  Firmware interface driver is used by different
  drivers to communicate with the firmware for
  various platform management services.
  Say yes to enable ZynqMP firmware interface driver.
  If in doubt, say N.

ZYNQMP_FIRMWARE_DEBUG
  Say yes to enable ZynqMP firmware interface debug APIs.
  If in doubt, say N.

ZYNQMP_IPI_MBOX
  Say yes here to add support for Xilinx IPI mailbox driver.
  This mailbox driver is used to send notification or short message
  between processors with Xilinx ZynqMP IPI. It will place the
  message to the IPI buffer and will access the IPI control
  registers to kick the other processor or enquire status.

ZYNQMP_PM_DOMAINS
  Say yes to enable device power management through PM domains
  If in doubt, say N.

ZYNQMP_POWER
  Say yes to enable power management support for ZyqnMP SoC.
  This driver uses firmware driver as an interface for power
  management request to firmware. It registers isr to handle
  power management callbacks from firmware. It registers mailbox client
  to handle power management callbacks from firmware.
  
  If in doubt, say N.
